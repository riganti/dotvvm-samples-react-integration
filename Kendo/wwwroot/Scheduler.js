var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name2 in all)
    __defProp(target, name2, { get: all[name2], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "node_modules/react/cjs/react.development.js"(exports, module) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          // Used to reproduce behavior of `batchedUpdates` in legacy mode.
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack2) {
          {
            currentExtraStackFrame = stack2;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack2) {
            {
              currentExtraStackFrame = stack2;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack2 = "";
            if (currentExtraStackFrame) {
              stack2 += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack2 += impl() || "";
            }
            return stack2;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn(format3) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format3, args);
            }
          }
        }
        function error3(format3) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format3, args);
            }
          }
        }
        function printWarning(level, format3, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack2 = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack2 !== "") {
              format3 += "%s";
              args = args.concat([stack2]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format3);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error3("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function(publicInstance) {
            return false;
          },
          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function(publicInstance, callback, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function(publicInstance, partialState, callback, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign2 = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component64(props, context2, updater) {
          this.props = props;
          this.context = context2;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component64.prototype.isReactComponent = {};
        Component64.prototype.setState = function(partialState, callback) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback, "setState");
        };
        Component64.prototype.forceUpdate = function(callback) {
          this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info) {
            Object.defineProperty(Component64.prototype, methodName, {
              get: function() {
                warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component64.prototype;
        function PureComponent5(props, context2, updater) {
          this.props = props;
          this.context = context2;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent5.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent5;
        assign2(pureComponentPrototype, Component64.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef10() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray4(a) {
          return isArrayImpl(a);
        }
        function typeName(value2) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value2[Symbol.toStringTag] || value2.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value2) {
          {
            try {
              testStringCoercion(value2);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value2) {
          return "" + value2;
        }
        function checkKeyStringCoercion(value2) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error3("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider.P) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent.ia;
                var init = lazyComponent.ja;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty3 = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          qb: true,
          Nb: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config) {
          {
            if (hasOwnProperty3.call(config, "ref")) {
              var getter3 = Object.getOwnPropertyDescriptor(config, "ref").get;
              if (getter3 && getter3.isReactWarning) {
                return false;
              }
            }
          }
          return config.ref !== void 0;
        }
        function hasValidKey(config) {
          {
            if (hasOwnProperty3.call(config, "key")) {
              var getter3 = Object.getOwnPropertyDescriptor(config, "key").get;
              if (getter3 && getter3.isReactWarning) {
                return false;
              }
            }
          }
          return config.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error3("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error3("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config) {
          {
            if (typeof config.ref === "string" && ReactCurrentOwner.current && config.qb && ReactCurrentOwner.current.stateNode !== config.qb) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error3('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self, source, owner, props) {
          var element6 = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            R: owner
          };
          {
            element6.qa = {};
            Object.defineProperty(element6.qa, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element6, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self
            });
            Object.defineProperty(element6, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element6.props);
              Object.freeze(element6);
            }
          }
          return element6;
        };
        function createElement168(type, config, children2) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self = null;
          var source = null;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config);
              }
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            self = config.qb === void 0 ? null : config.qb;
            source = config.Nb === void 0 ? null : config.Nb;
            for (propName in config) {
              if (hasOwnProperty3.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children2;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps44 = type.defaultProps;
            for (propName in defaultProps44) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps44[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement.Ob, oldElement.xa, oldElement.R, oldElement.props);
          return newElement;
        }
        function cloneElement8(element6, config, children2) {
          if (element6 === null || element6 === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element6 + ".");
          }
          var propName;
          var props = assign2({}, element6.props);
          var key = element6.key;
          var ref = element6.ref;
          var self = element6.Ob;
          var source = element6.xa;
          var owner = element6.R;
          if (config != null) {
            if (hasValidRef(config)) {
              ref = config.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config)) {
              {
                checkKeyStringCoercion(config.key);
              }
              key = "" + config.key;
            }
            var defaultProps44;
            if (element6.type && element6.type.defaultProps) {
              defaultProps44 = element6.type.defaultProps;
            }
            for (propName in config) {
              if (hasOwnProperty3.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config[propName] === void 0 && defaultProps44 !== void 0) {
                  props[propName] = defaultProps44[propName];
                } else {
                  props[propName] = config[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children2;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i = 0; i < childrenLength; i++) {
              childArray[i] = arguments[i + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element6.type, key, ref, self, source, owner, props);
        }
        function isValidElement4(object22) {
          return typeof object22 === "object" && object22 !== null && object22.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR2 = ".";
        var SUBSEPARATOR = ":";
        function escape(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text) {
          return text.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element6, index) {
          if (typeof element6 === "object" && element6 !== null && element6.key != null) {
            {
              checkKeyStringCoercion(element6.key);
            }
            return escape("" + element6.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children2, array7, escapedPrefix, nameSoFar, callback) {
          var type = typeof children2;
          if (type === "undefined" || type === "boolean") {
            children2 = null;
          }
          var invokeCallback = false;
          if (children2 === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children2.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children2;
            var mappedChild = callback(_child);
            var childKey = nameSoFar === "" ? SEPARATOR2 + getElementKey(_child, 0) : nameSoFar;
            if (isArray4(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array7, escapedChildKey, "", function(c) {
                return c;
              });
            } else if (mappedChild != null) {
              if (isValidElement4(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                  (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                    // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/"
                  ) : "") + childKey
                );
              }
              array7.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR2 : nameSoFar + SUBSEPARATOR;
          if (isArray4(children2)) {
            for (var i = 0; i < children2.length; i++) {
              child = children2[i];
              nextName = nextNamePrefix + getElementKey(child, i);
              subtreeCount += mapIntoArray(child, array7, escapedPrefix, nextName, callback);
            }
          } else {
            var iteratorFn = getIteratorFn(children2);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children2;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array7, escapedPrefix, nextName, callback);
              }
            } else if (type === "object") {
              var childrenString = String(children2);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children2).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children2, func32, context2) {
          if (children2 == null) {
            return children2;
          }
          var result = [];
          var count2 = 0;
          mapIntoArray(children2, result, "", "", function(child) {
            return func32.call(context2, child, count2++);
          });
          return result;
        }
        function countChildren(children2) {
          var n = 0;
          mapChildren(children2, function() {
            n++;
          });
          return n;
        }
        function forEachChildren(children2, forEachFunc, forEachContext) {
          mapChildren(children2, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray3(children2) {
          return mapChildren(children2, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children2) {
          if (!isValidElement4(children2)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children2;
        }
        function createContext16(defaultValue2) {
          var context2 = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            Ia: defaultValue2,
            Pb: defaultValue2,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            Qb: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            pe: null,
            qe: null
          };
          context2.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            P: context2
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              P: context2
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error3("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context2.Provider;
                },
                set: function(_Provider) {
                  context2.Provider = _Provider;
                }
              },
              Ia: {
                get: function() {
                  return context2.Ia;
                },
                set: function(_currentValue) {
                  context2.Ia = _currentValue;
                }
              },
              Pb: {
                get: function() {
                  return context2.Pb;
                },
                set: function(_currentValue2) {
                  context2.Pb = _currentValue2;
                }
              },
              Qb: {
                get: function() {
                  return context2.Qb;
                },
                set: function(_threadCount) {
                  context2.Qb = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error3("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context2.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context2.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context2.Consumer = Consumer;
          }
          {
            context2.rb = null;
            context2.se = null;
          }
          return context2;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload.ra === Uninitialized) {
            var ctor = payload.Oa;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload.ra === Pending || payload.ra === Uninitialized) {
                var resolved = payload;
                resolved.ra = Resolved;
                resolved.Oa = moduleObject2;
              }
            }, function(error4) {
              if (payload.ra === Pending || payload.ra === Uninitialized) {
                var rejected = payload;
                rejected.ra = Rejected;
                rejected.Oa = error4;
              }
            });
            if (payload.ra === Uninitialized) {
              var pending = payload;
              pending.ra = Pending;
              pending.Oa = thenable;
            }
          }
          if (payload.ra === Resolved) {
            var moduleObject = payload.Oa;
            {
              if (moduleObject === void 0) {
                error3("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error3("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload.Oa;
          }
        }
        function lazy(ctor) {
          var payload = {
            // We use these fields to store the result.
            ra: Uninitialized,
            Oa: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            ia: payload,
            ja: lazyInitializer
          };
          {
            var defaultProps44;
            var propTypes8;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps44;
                },
                set: function(newDefaultProps) {
                  error3("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps44 = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes8;
                },
                set: function(newPropTypes) {
                  error3("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes8 = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef54(render5) {
          {
            if (render5 != null && render5.$$typeof === REACT_MEMO_TYPE) {
              error3("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render5 !== "function") {
              error3("forwardRef requires a render function but was given %s.", render5 === null ? "null" : typeof render5);
            } else {
              if (render5.length !== 0 && render5.length !== 2) {
                error3("forwardRef render functions accept exactly two parameters: props and ref. %s", render5.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render5 != null) {
              if (render5.defaultProps != null || render5.propTypes != null) {
                error3("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render5
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name2) {
                ownName = name2;
                if (!render5.name && !render5.displayName) {
                  render5.displayName = name2;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare2) {
          {
            if (!isValidElementType(type)) {
              error3("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare2 === void 0 ? null : compare2
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name2) {
                ownName = name2;
                if (!type.name && !type.displayName) {
                  type.displayName = name2;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error3("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext22(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context.P !== void 0) {
              var realContext = Context.P;
              if (realContext.Consumer === Context) {
                error3("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error3("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState32(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init);
        }
        function useRef60(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect29(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect7(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback54(callback, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback, deps);
        }
        function useMemo40(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle48(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value2, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value2, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value2) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value2);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.td = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign2({}, props, {
                  value: prevLog
                }),
                info: assign2({}, props, {
                  value: prevInfo
                }),
                warn: assign2({}, props, {
                  value: prevWarn
                }),
                error: assign2({}, props, {
                  value: prevError
                }),
                group: assign2({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign2({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign2({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error3("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name2, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name2;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name2 = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name2 ? describeBuiltInComponentFrame(name2) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component65) {
          var prototype = Component65.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent.ia;
                var init = lazyComponent.ja;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element6) {
          {
            if (element6) {
              var owner = element6.R;
              var stack2 = describeUnknownElementTypeFrameInDEV(element6.type, element6.xa, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack2);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values2, location, componentName, element6) {
          {
            var has2 = Function.call.bind(hasOwnProperty3);
            for (var typeSpecName in typeSpecs) {
              if (has2(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element6);
                  error3("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element6);
                  error3("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element6) {
          {
            if (element6) {
              var owner = element6.R;
              var stack2 = describeUnknownElementTypeFrameInDEV(element6.type, element6.xa, owner ? owner.type : null);
              setExtraStackFrame(stack2);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name2 = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name2) {
              return "\n\nCheck the render method of `" + name2 + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.Nb);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info = getDeclarationErrorAddendum();
          if (!info) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info;
        }
        function validateExplicitKey(element6, parentType) {
          if (!element6.qa || element6.qa.validated || element6.key != null) {
            return;
          }
          element6.qa.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element6 && element6.R && element6.R !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element6.R.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element6);
            error3('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node14, parentType) {
          if (typeof node14 !== "object") {
            return;
          }
          if (isArray4(node14)) {
            for (var i = 0; i < node14.length; i++) {
              var child = node14[i];
              if (isValidElement4(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement4(node14)) {
            if (node14.qa) {
              node14.qa.validated = true;
            }
          } else if (node14) {
            var iteratorFn = getIteratorFn(node14);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node14.entries) {
                var iterator = iteratorFn.call(node14);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement4(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element6) {
          {
            var type = element6.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes8;
            if (typeof type === "function") {
              propTypes8 = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes8 = type.propTypes;
            } else {
              return;
            }
            if (propTypes8) {
              var name2 = getComponentNameFromType(type);
              checkPropTypes(propTypes8, element6.props, "prop", name2, element6);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error3("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error3("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys2 = Object.keys(fragment.props);
            for (var i = 0; i < keys2.length; i++) {
              var key = keys2[i];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error3("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error3("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children2) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info += sourceInfo;
            } else {
              info += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray4(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error3("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
            }
          }
          var element6 = createElement168.apply(this, arguments);
          if (element6 == null) {
            return element6;
          }
          if (validType) {
            for (var i = 2; i < arguments.length; i++) {
              validateChildKeys(arguments[i], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element6);
          } else {
            validatePropTypes(element6);
          }
          return element6;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element6, props, children2) {
          var newElement = cloneElement8.apply(this, arguments);
          for (var i = 2; i < arguments.length; i++) {
            validateChildKeys(arguments[i], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options2) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition.sa = /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition.sa) {
                var updatedFibersCount = currentTransition.sa.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition.sa.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module && module[requireString];
              enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error3("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error4) {
              popActScope(prevActScopeDepth);
              throw error4;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result !== null && typeof result === "object" && typeof result.then === "function") {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error4) {
                    popActScope(prevActScopeDepth);
                    reject(error4);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error3("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error3("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error4) {
                reject(error4);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i = 0;
              try {
                for (; i < queue.length; i++) {
                  var callback = queue[i];
                  do {
                    callback = callback(true);
                  } while (callback !== null);
                }
                queue.length = 0;
              } catch (error4) {
                queue = queue.slice(i + 1);
                throw error4;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children11 = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray: toArray3,
          only: onlyChild
        };
        exports.Children = Children11;
        exports.Component = Component64;
        exports.Fragment = REACT_FRAGMENT_TYPE;
        exports.Profiler = REACT_PROFILER_TYPE;
        exports.PureComponent = PureComponent5;
        exports.StrictMode = REACT_STRICT_MODE_TYPE;
        exports.Suspense = REACT_SUSPENSE_TYPE;
        exports.zc = ReactSharedInternals;
        exports.cloneElement = cloneElement$1;
        exports.createContext = createContext16;
        exports.createElement = createElement$1;
        exports.createFactory = createFactory;
        exports.createRef = createRef10;
        exports.forwardRef = forwardRef54;
        exports.isValidElement = isValidElement4;
        exports.lazy = lazy;
        exports.memo = memo;
        exports.startTransition = startTransition;
        exports.unstable_act = act;
        exports.useCallback = useCallback54;
        exports.useContext = useContext22;
        exports.useDebugValue = useDebugValue;
        exports.useDeferredValue = useDeferredValue;
        exports.useEffect = useEffect29;
        exports.useId = useId;
        exports.useImperativeHandle = useImperativeHandle48;
        exports.useInsertionEffect = useInsertionEffect;
        exports.useLayoutEffect = useLayoutEffect7;
        exports.useMemo = useMemo40;
        exports.useReducer = useReducer;
        exports.useRef = useRef60;
        exports.useState = useState32;
        exports.useSyncExternalStore = useSyncExternalStore;
        exports.useTransition = useTransition;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/react/index.js
var require_react = __commonJS({
  "node_modules/react/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  }
});

// node_modules/scheduler/cjs/scheduler.development.js
var require_scheduler_development = __commonJS({
  "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var enableSchedulerDebugging = false;
        var enableProfiling = false;
        var frameYieldMs = 5;
        function push4(heap, node14) {
          var index = heap.length;
          heap.push(node14);
          siftUp(heap, node14, index);
        }
        function peek(heap) {
          return heap.length === 0 ? null : heap[0];
        }
        function pop2(heap) {
          if (heap.length === 0) {
            return null;
          }
          var first2 = heap[0];
          var last4 = heap.pop();
          if (last4 !== first2) {
            heap[0] = last4;
            siftDown(heap, last4, 0);
          }
          return first2;
        }
        function siftUp(heap, node14, i) {
          var index = i;
          while (index > 0) {
            var parentIndex = index - 1 >>> 1;
            var parent = heap[parentIndex];
            if (compare2(parent, node14) > 0) {
              heap[parentIndex] = node14;
              heap[index] = parent;
              index = parentIndex;
            } else {
              return;
            }
          }
        }
        function siftDown(heap, node14, i) {
          var index = i;
          var length = heap.length;
          var halfLength = length >>> 1;
          while (index < halfLength) {
            var leftIndex = (index + 1) * 2 - 1;
            var left2 = heap[leftIndex];
            var rightIndex = leftIndex + 1;
            var right2 = heap[rightIndex];
            if (compare2(left2, node14) < 0) {
              if (rightIndex < length && compare2(right2, left2) < 0) {
                heap[index] = right2;
                heap[rightIndex] = node14;
                index = rightIndex;
              } else {
                heap[index] = left2;
                heap[leftIndex] = node14;
                index = leftIndex;
              }
            } else if (rightIndex < length && compare2(right2, node14) < 0) {
              heap[index] = right2;
              heap[rightIndex] = node14;
              index = rightIndex;
            } else {
              return;
            }
          }
        }
        function compare2(a, b) {
          var diff = a.sortIndex - b.sortIndex;
          return diff !== 0 ? diff : a.id - b.id;
        }
        var ImmediatePriority = 1;
        var UserBlockingPriority = 2;
        var NormalPriority = 3;
        var LowPriority = 4;
        var IdlePriority = 5;
        function markTaskErrored(task, ms) {
        }
        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
        if (hasPerformanceNow) {
          var localPerformance = performance;
          exports.unstable_now = function() {
            return localPerformance.now();
          };
        } else {
          var localDate = Date;
          var initialTime = localDate.now();
          exports.unstable_now = function() {
            return localDate.now() - initialTime;
          };
        }
        var maxSigned31BitInt = 1073741823;
        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
        var NORMAL_PRIORITY_TIMEOUT = 5e3;
        var LOW_PRIORITY_TIMEOUT = 1e4;
        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
        var taskQueue = [];
        var timerQueue = [];
        var taskIdCounter = 1;
        var currentTask = null;
        var currentPriorityLevel = NormalPriority;
        var isPerformingWork = false;
        var isHostCallbackScheduled = false;
        var isHostTimeoutScheduled = false;
        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
        function advanceTimers(currentTime) {
          var timer = peek(timerQueue);
          while (timer !== null) {
            if (timer.callback === null) {
              pop2(timerQueue);
            } else if (timer.startTime <= currentTime) {
              pop2(timerQueue);
              timer.sortIndex = timer.expirationTime;
              push4(taskQueue, timer);
            } else {
              return;
            }
            timer = peek(timerQueue);
          }
        }
        function handleTimeout(currentTime) {
          isHostTimeoutScheduled = false;
          advanceTimers(currentTime);
          if (!isHostCallbackScheduled) {
            if (peek(taskQueue) !== null) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            } else {
              var firstTimer = peek(timerQueue);
              if (firstTimer !== null) {
                requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
              }
            }
          }
        }
        function flushWork(hasTimeRemaining, initialTime2) {
          isHostCallbackScheduled = false;
          if (isHostTimeoutScheduled) {
            isHostTimeoutScheduled = false;
            cancelHostTimeout();
          }
          isPerformingWork = true;
          var previousPriorityLevel = currentPriorityLevel;
          try {
            if (enableProfiling) {
              try {
                return workLoop(hasTimeRemaining, initialTime2);
              } catch (error3) {
                if (currentTask !== null) {
                  var currentTime = exports.unstable_now();
                  markTaskErrored(currentTask, currentTime);
                  currentTask.isQueued = false;
                }
                throw error3;
              }
            } else {
              return workLoop(hasTimeRemaining, initialTime2);
            }
          } finally {
            currentTask = null;
            currentPriorityLevel = previousPriorityLevel;
            isPerformingWork = false;
          }
        }
        function workLoop(hasTimeRemaining, initialTime2) {
          var currentTime = initialTime2;
          advanceTimers(currentTime);
          currentTask = peek(taskQueue);
          while (currentTask !== null && !enableSchedulerDebugging) {
            if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
              break;
            }
            var callback = currentTask.callback;
            if (typeof callback === "function") {
              currentTask.callback = null;
              currentPriorityLevel = currentTask.priorityLevel;
              var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
              var continuationCallback = callback(didUserCallbackTimeout);
              currentTime = exports.unstable_now();
              if (typeof continuationCallback === "function") {
                currentTask.callback = continuationCallback;
              } else {
                if (currentTask === peek(taskQueue)) {
                  pop2(taskQueue);
                }
              }
              advanceTimers(currentTime);
            } else {
              pop2(taskQueue);
            }
            currentTask = peek(taskQueue);
          }
          if (currentTask !== null) {
            return true;
          } else {
            var firstTimer = peek(timerQueue);
            if (firstTimer !== null) {
              requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
            }
            return false;
          }
        }
        function unstable_runWithPriority(priorityLevel, eventHandler) {
          switch (priorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
            case LowPriority:
            case IdlePriority:
              break;
            default:
              priorityLevel = NormalPriority;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_next(eventHandler) {
          var priorityLevel;
          switch (currentPriorityLevel) {
            case ImmediatePriority:
            case UserBlockingPriority:
            case NormalPriority:
              priorityLevel = NormalPriority;
              break;
            default:
              priorityLevel = currentPriorityLevel;
              break;
          }
          var previousPriorityLevel = currentPriorityLevel;
          currentPriorityLevel = priorityLevel;
          try {
            return eventHandler();
          } finally {
            currentPriorityLevel = previousPriorityLevel;
          }
        }
        function unstable_wrapCallback(callback) {
          var parentPriorityLevel = currentPriorityLevel;
          return function() {
            var previousPriorityLevel = currentPriorityLevel;
            currentPriorityLevel = parentPriorityLevel;
            try {
              return callback.apply(this, arguments);
            } finally {
              currentPriorityLevel = previousPriorityLevel;
            }
          };
        }
        function unstable_scheduleCallback(priorityLevel, callback, options2) {
          var currentTime = exports.unstable_now();
          var startTime2;
          if (typeof options2 === "object" && options2 !== null) {
            var delay = options2.delay;
            if (typeof delay === "number" && delay > 0) {
              startTime2 = currentTime + delay;
            } else {
              startTime2 = currentTime;
            }
          } else {
            startTime2 = currentTime;
          }
          var timeout2;
          switch (priorityLevel) {
            case ImmediatePriority:
              timeout2 = IMMEDIATE_PRIORITY_TIMEOUT;
              break;
            case UserBlockingPriority:
              timeout2 = USER_BLOCKING_PRIORITY_TIMEOUT;
              break;
            case IdlePriority:
              timeout2 = IDLE_PRIORITY_TIMEOUT;
              break;
            case LowPriority:
              timeout2 = LOW_PRIORITY_TIMEOUT;
              break;
            case NormalPriority:
            default:
              timeout2 = NORMAL_PRIORITY_TIMEOUT;
              break;
          }
          var expirationTime = startTime2 + timeout2;
          var newTask = {
            id: taskIdCounter++,
            callback,
            priorityLevel,
            startTime: startTime2,
            expirationTime,
            sortIndex: -1
          };
          if (startTime2 > currentTime) {
            newTask.sortIndex = startTime2;
            push4(timerQueue, newTask);
            if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
              if (isHostTimeoutScheduled) {
                cancelHostTimeout();
              } else {
                isHostTimeoutScheduled = true;
              }
              requestHostTimeout(handleTimeout, startTime2 - currentTime);
            }
          } else {
            newTask.sortIndex = expirationTime;
            push4(taskQueue, newTask);
            if (!isHostCallbackScheduled && !isPerformingWork) {
              isHostCallbackScheduled = true;
              requestHostCallback(flushWork);
            }
          }
          return newTask;
        }
        function unstable_pauseExecution() {
        }
        function unstable_continueExecution() {
          if (!isHostCallbackScheduled && !isPerformingWork) {
            isHostCallbackScheduled = true;
            requestHostCallback(flushWork);
          }
        }
        function unstable_getFirstCallbackNode() {
          return peek(taskQueue);
        }
        function unstable_cancelCallback(task) {
          task.callback = null;
        }
        function unstable_getCurrentPriorityLevel() {
          return currentPriorityLevel;
        }
        var isMessageLoopRunning = false;
        var scheduledHostCallback = null;
        var taskTimeoutID = -1;
        var frameInterval = frameYieldMs;
        var startTime = -1;
        function shouldYieldToHost() {
          var timeElapsed = exports.unstable_now() - startTime;
          if (timeElapsed < frameInterval) {
            return false;
          }
          return true;
        }
        function requestPaint() {
        }
        function forceFrameRate(fps) {
          if (fps < 0 || fps > 125) {
            console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
            return;
          }
          if (fps > 0) {
            frameInterval = Math.floor(1e3 / fps);
          } else {
            frameInterval = frameYieldMs;
          }
        }
        var performWorkUntilDeadline = function() {
          if (scheduledHostCallback !== null) {
            var currentTime = exports.unstable_now();
            startTime = currentTime;
            var hasTimeRemaining = true;
            var hasMoreWork = true;
            try {
              hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
            } finally {
              if (hasMoreWork) {
                schedulePerformWorkUntilDeadline();
              } else {
                isMessageLoopRunning = false;
                scheduledHostCallback = null;
              }
            }
          } else {
            isMessageLoopRunning = false;
          }
        };
        var schedulePerformWorkUntilDeadline;
        if (typeof localSetImmediate === "function") {
          schedulePerformWorkUntilDeadline = function() {
            localSetImmediate(performWorkUntilDeadline);
          };
        } else if (typeof MessageChannel !== "undefined") {
          var channel = new MessageChannel();
          var port = channel.port2;
          channel.port1.onmessage = performWorkUntilDeadline;
          schedulePerformWorkUntilDeadline = function() {
            port.postMessage(null);
          };
        } else {
          schedulePerformWorkUntilDeadline = function() {
            localSetTimeout(performWorkUntilDeadline, 0);
          };
        }
        function requestHostCallback(callback) {
          scheduledHostCallback = callback;
          if (!isMessageLoopRunning) {
            isMessageLoopRunning = true;
            schedulePerformWorkUntilDeadline();
          }
        }
        function requestHostTimeout(callback, ms) {
          taskTimeoutID = localSetTimeout(function() {
            callback(exports.unstable_now());
          }, ms);
        }
        function cancelHostTimeout() {
          localClearTimeout(taskTimeoutID);
          taskTimeoutID = -1;
        }
        var unstable_requestPaint = requestPaint;
        var unstable_Profiling = null;
        exports.unstable_IdlePriority = IdlePriority;
        exports.unstable_ImmediatePriority = ImmediatePriority;
        exports.unstable_LowPriority = LowPriority;
        exports.unstable_NormalPriority = NormalPriority;
        exports.unstable_Profiling = unstable_Profiling;
        exports.unstable_UserBlockingPriority = UserBlockingPriority;
        exports.unstable_cancelCallback = unstable_cancelCallback;
        exports.unstable_continueExecution = unstable_continueExecution;
        exports.unstable_forceFrameRate = forceFrameRate;
        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
        exports.unstable_next = unstable_next;
        exports.unstable_pauseExecution = unstable_pauseExecution;
        exports.unstable_requestPaint = unstable_requestPaint;
        exports.unstable_runWithPriority = unstable_runWithPriority;
        exports.unstable_scheduleCallback = unstable_scheduleCallback;
        exports.unstable_shouldYield = shouldYieldToHost;
        exports.unstable_wrapCallback = unstable_wrapCallback;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_scheduler_development();
    }
  }
});

// node_modules/react-dom/cjs/react-dom.development.js
var require_react_dom_development = __commonJS({
  "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var React210 = require_react();
        var Scheduler2 = require_scheduler();
        var ReactSharedInternals = React210.zc;
        var suppressWarning = false;
        function setSuppressWarning(newSuppressWarning) {
          {
            suppressWarning = newSuppressWarning;
          }
        }
        function warn(format3) {
          {
            if (!suppressWarning) {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format3, args);
            }
          }
        }
        function error3(format3) {
          {
            if (!suppressWarning) {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format3, args);
            }
          }
        }
        function printWarning(level, format3, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack2 = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack2 !== "") {
              format3 += "%s";
              args = args.concat([stack2]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format3);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var FunctionComponent = 0;
        var ClassComponent = 1;
        var IndeterminateComponent = 2;
        var HostRoot = 3;
        var HostPortal = 4;
        var HostComponent = 5;
        var HostText = 6;
        var Fragment42 = 7;
        var Mode = 8;
        var ContextConsumer = 9;
        var ContextProvider = 10;
        var ForwardRef = 11;
        var Profiler = 12;
        var SuspenseComponent = 13;
        var MemoComponent = 14;
        var SimpleMemoComponent = 15;
        var LazyComponent = 16;
        var IncompleteClassComponent = 17;
        var DehydratedFragment = 18;
        var SuspenseListComponent = 19;
        var ScopeComponent = 21;
        var OffscreenComponent = 22;
        var LegacyHiddenComponent = 23;
        var CacheComponent = 24;
        var TracingMarkerComponent = 25;
        var enableClientRenderFallbackOnTextMismatch = true;
        var enableNewReconciler = false;
        var enableLazyContextPropagation = false;
        var enableLegacyHidden = false;
        var enableSuspenseAvoidThisFallback = false;
        var disableCommentsAsDOMContainers = true;
        var enableCustomElementPropertySupport = false;
        var warnAboutStringRefs = false;
        var enableSchedulingProfiler = true;
        var enableProfilerTimer = true;
        var enableProfilerCommitHooks = true;
        var allNativeEvents = /* @__PURE__ */ new Set();
        var registrationNameDependencies = {};
        var possibleRegistrationNames = {};
        function registerTwoPhaseEvent(registrationName, dependencies) {
          registerDirectEvent(registrationName, dependencies);
          registerDirectEvent(registrationName + "Capture", dependencies);
        }
        function registerDirectEvent(registrationName, dependencies) {
          {
            if (registrationNameDependencies[registrationName]) {
              error3("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
            }
          }
          registrationNameDependencies[registrationName] = dependencies;
          {
            var lowerCasedName = registrationName.toLowerCase();
            possibleRegistrationNames[lowerCasedName] = registrationName;
            if (registrationName === "onDoubleClick") {
              possibleRegistrationNames.ondblclick = registrationName;
            }
          }
          for (var i = 0; i < dependencies.length; i++) {
            allNativeEvents.add(dependencies[i]);
          }
        }
        var canUseDOM3 = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
        var hasOwnProperty3 = Object.prototype.hasOwnProperty;
        function typeName(value2) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value2[Symbol.toStringTag] || value2.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value2) {
          {
            try {
              testStringCoercion(value2);
              return false;
            } catch (e) {
              return true;
            }
          }
        }
        function testStringCoercion(value2) {
          return "" + value2;
        }
        function checkAttributeStringCoercion(value2, attributeName) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function checkKeyStringCoercion(value2) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function checkPropStringCoercion(value2, propName) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value2, propName) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function checkHtmlStringCoercion(value2) {
          {
            if (willCoercionThrow(value2)) {
              error3("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        function checkFormFieldValueStringCoercion(value2) {
          {
            if (willCoercionThrow(value2)) {
              error3("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value2));
              return testStringCoercion(value2);
            }
          }
        }
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty3.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty3.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error3("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldIgnoreAttribute(name2, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null) {
            return propertyInfo.type === RESERVED;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (name2.length > 2 && (name2[0] === "o" || name2[0] === "O") && (name2[1] === "n" || name2[1] === "N")) {
            return true;
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name2, value2, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value2) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name2.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function shouldRemoveAttribute(name2, value2, propertyInfo, isCustomComponentTag) {
          if (value2 === null || typeof value2 === "undefined") {
            return true;
          }
          if (shouldRemoveAttributeWithWarning(name2, value2, propertyInfo, isCustomComponentTag)) {
            return true;
          }
          if (isCustomComponentTag) {
            return false;
          }
          if (propertyInfo !== null) {
            switch (propertyInfo.type) {
              case BOOLEAN:
                return !value2;
              case OVERLOADED_BOOLEAN:
                return value2 === false;
              case NUMERIC:
                return isNaN(value2);
              case POSITIVE_NUMERIC:
                return isNaN(value2) || value2 < 1;
            }
          }
          return false;
        }
        function getPropertyInfo(name2) {
          return properties.hasOwnProperty(name2) ? properties[name2] : null;
        }
        function PropertyInfoRecord(name2, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name2;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            RESERVED,
            false,
            // mustUseProperty
            name2,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
          var name2 = _ref[0], attributeName = _ref[1];
          properties[name2] = new PropertyInfoRecord(
            name2,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name2.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name2,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            BOOLEAN,
            false,
            // mustUseProperty
            name2.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            BOOLEAN,
            true,
            // mustUseProperty
            name2,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name2,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name2,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name2) {
          properties[name2] = new PropertyInfoRecord(
            name2,
            NUMERIC,
            false,
            // mustUseProperty
            name2.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize2 = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name2 = attributeName.replace(CAMELIZE, capitalize2);
          properties[name2] = new PropertyInfoRecord(
            name2,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name2 = attributeName.replace(CAMELIZE, capitalize2);
          properties[name2] = new PropertyInfoRecord(
            name2,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name2 = attributeName.replace(CAMELIZE, capitalize2);
          properties[name2] = new PropertyInfoRecord(
            name2,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error3("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        function getValueForProperty(node14, name2, expected, propertyInfo) {
          {
            if (propertyInfo.mustUseProperty) {
              var propertyName = propertyInfo.propertyName;
              return node14[propertyName];
            } else {
              {
                checkAttributeStringCoercion(expected, name2);
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL("" + expected);
              }
              var attributeName = propertyInfo.attributeName;
              var stringValue = null;
              if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                if (node14.hasAttribute(attributeName)) {
                  var value2 = node14.getAttribute(attributeName);
                  if (value2 === "") {
                    return true;
                  }
                  if (shouldRemoveAttribute(name2, expected, propertyInfo, false)) {
                    return value2;
                  }
                  if (value2 === "" + expected) {
                    return expected;
                  }
                  return value2;
                }
              } else if (node14.hasAttribute(attributeName)) {
                if (shouldRemoveAttribute(name2, expected, propertyInfo, false)) {
                  return node14.getAttribute(attributeName);
                }
                if (propertyInfo.type === BOOLEAN) {
                  return expected;
                }
                stringValue = node14.getAttribute(attributeName);
              }
              if (shouldRemoveAttribute(name2, expected, propertyInfo, false)) {
                return stringValue === null ? expected : stringValue;
              } else if (stringValue === "" + expected) {
                return expected;
              } else {
                return stringValue;
              }
            }
          }
        }
        function getValueForAttribute(node14, name2, expected, isCustomComponentTag) {
          {
            if (!isAttributeNameSafe(name2)) {
              return;
            }
            if (!node14.hasAttribute(name2)) {
              return expected === void 0 ? void 0 : null;
            }
            var value2 = node14.getAttribute(name2);
            {
              checkAttributeStringCoercion(expected, name2);
            }
            if (value2 === "" + expected) {
              return expected;
            }
            return value2;
          }
        }
        function setValueForProperty(node14, name2, value2, isCustomComponentTag) {
          var propertyInfo = getPropertyInfo(name2);
          if (shouldIgnoreAttribute(name2, propertyInfo, isCustomComponentTag)) {
            return;
          }
          if (shouldRemoveAttribute(name2, value2, propertyInfo, isCustomComponentTag)) {
            value2 = null;
          }
          if (isCustomComponentTag || propertyInfo === null) {
            if (isAttributeNameSafe(name2)) {
              var _attributeName = name2;
              if (value2 === null) {
                node14.removeAttribute(_attributeName);
              } else {
                {
                  checkAttributeStringCoercion(value2, name2);
                }
                node14.setAttribute(_attributeName, "" + value2);
              }
            }
            return;
          }
          var mustUseProperty = propertyInfo.mustUseProperty;
          if (mustUseProperty) {
            var propertyName = propertyInfo.propertyName;
            if (value2 === null) {
              var type = propertyInfo.type;
              node14[propertyName] = type === BOOLEAN ? false : "";
            } else {
              node14[propertyName] = value2;
            }
            return;
          }
          var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
          if (value2 === null) {
            node14.removeAttribute(attributeName);
          } else {
            var _type = propertyInfo.type;
            var attributeValue;
            if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value2 === true) {
              attributeValue = "";
            } else {
              {
                {
                  checkAttributeStringCoercion(value2, attributeName);
                }
                attributeValue = "" + value2;
              }
              if (propertyInfo.sanitizeURL) {
                sanitizeURL(attributeValue.toString());
              }
            }
            if (attributeNamespace) {
              node14.setAttributeNS(attributeNamespace, attributeName, attributeValue);
            } else {
              node14.setAttribute(attributeName, attributeValue);
            }
          }
        }
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_CACHE_TYPE = Symbol.for("react.cache");
        var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var assign2 = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.td = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign2({}, props, {
                  value: prevLog
                }),
                info: assign2({}, props, {
                  value: prevInfo
                }),
                warn: assign2({}, props, {
                  value: prevWarn
                }),
                error: assign2({}, props, {
                  value: prevError
                }),
                group: assign2({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign2({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign2({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error3("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name2, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x) {
                var match = x.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name2;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn, construct) {
          if (!fn || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x) {
                  control = x;
                }
                Reflect.construct(fn, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x) {
                  control = x;
                }
                fn.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x) {
                control = x;
              }
              fn();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s = sampleLines.length - 1;
              var c = controlLines.length - 1;
              while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                c--;
              }
              for (; s >= 1 && c >= 0; s--, c--) {
                if (sampleLines[s] !== controlLines[c]) {
                  if (s !== 1 || c !== 1) {
                    do {
                      s--;
                      c--;
                      if (c < 0 || sampleLines[s] !== controlLines[c]) {
                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                        if (fn.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn.displayName);
                        }
                        {
                          if (typeof fn === "function") {
                            componentFrameCache.set(fn, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s >= 1 && c >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name2 = fn ? fn.displayName || fn.name : "";
          var syntheticFrame = name2 ? describeBuiltInComponentFrame(name2) : "";
          {
            if (typeof fn === "function") {
              componentFrameCache.set(fn, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn, false);
          }
        }
        function shouldConstruct(Component64) {
          var prototype = Component64.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent.ia;
                var init = lazyComponent.ja;
                try {
                  return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                } catch (x) {
                }
              }
            }
          }
          return "";
        }
        function describeFiber(fiber) {
          var owner = fiber.da ? fiber.da.type : null;
          var source = fiber.ta;
          switch (fiber.tag) {
            case HostComponent:
              return describeBuiltInComponentFrame(fiber.type);
            case LazyComponent:
              return describeBuiltInComponentFrame("Lazy");
            case SuspenseComponent:
              return describeBuiltInComponentFrame("Suspense");
            case SuspenseListComponent:
              return describeBuiltInComponentFrame("SuspenseList");
            case FunctionComponent:
            case IndeterminateComponent:
            case SimpleMemoComponent:
              return describeFunctionComponentFrame(fiber.type);
            case ForwardRef:
              return describeFunctionComponentFrame(fiber.type.render);
            case ClassComponent:
              return describeClassComponentFrame(fiber.type);
            default:
              return "";
          }
        }
        function getStackByFiberInDevAndProd(workInProgress2) {
          try {
            var info = "";
            var node14 = workInProgress2;
            do {
              info += describeFiber(node14);
              node14 = node14.return;
            } while (node14);
            return info;
          } catch (x) {
            return "\nError generating stack: " + x.message + "\n" + x.stack;
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error3("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context2 = type;
                return getContextName(context2) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider.P) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent.ia;
                var init = lazyComponent.ja;
                try {
                  return getComponentNameFromType(init(payload));
                } catch (x) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        function getWrappedName$1(outerType, innerType, wrapperName) {
          var functionName = innerType.displayName || innerType.name || "";
          return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
        }
        function getContextName$1(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromFiber(fiber) {
          var tag = fiber.tag, type = fiber.type;
          switch (tag) {
            case CacheComponent:
              return "Cache";
            case ContextConsumer:
              var context2 = type;
              return getContextName$1(context2) + ".Consumer";
            case ContextProvider:
              var provider = type;
              return getContextName$1(provider.P) + ".Provider";
            case DehydratedFragment:
              return "DehydratedFragment";
            case ForwardRef:
              return getWrappedName$1(type, type.render, "ForwardRef");
            case Fragment42:
              return "Fragment";
            case HostComponent:
              return type;
            case HostPortal:
              return "Portal";
            case HostRoot:
              return "Root";
            case HostText:
              return "Text";
            case LazyComponent:
              return getComponentNameFromType(type);
            case Mode:
              if (type === REACT_STRICT_MODE_TYPE) {
                return "StrictMode";
              }
              return "Mode";
            case OffscreenComponent:
              return "Offscreen";
            case Profiler:
              return "Profiler";
            case ScopeComponent:
              return "Scope";
            case SuspenseComponent:
              return "Suspense";
            case SuspenseListComponent:
              return "SuspenseList";
            case TracingMarkerComponent:
              return "TracingMarker";
            case ClassComponent:
            case FunctionComponent:
            case IncompleteClassComponent:
            case IndeterminateComponent:
            case MemoComponent:
            case SimpleMemoComponent:
              if (typeof type === "function") {
                return type.displayName || type.name || null;
              }
              if (typeof type === "string") {
                return type;
              }
              break;
          }
          return null;
        }
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var current = null;
        var isRendering = false;
        function getCurrentFiberOwnerNameInDevOrNull() {
          {
            if (current === null) {
              return null;
            }
            var owner = current.da;
            if (owner !== null && typeof owner !== "undefined") {
              return getComponentNameFromFiber(owner);
            }
          }
          return null;
        }
        function getCurrentFiberStackInDev() {
          {
            if (current === null) {
              return "";
            }
            return getStackByFiberInDevAndProd(current);
          }
        }
        function resetCurrentFiber() {
          {
            ReactDebugCurrentFrame.getCurrentStack = null;
            current = null;
            isRendering = false;
          }
        }
        function setCurrentFiber(fiber) {
          {
            ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
            current = fiber;
            isRendering = false;
          }
        }
        function getCurrentFiber() {
          {
            return current;
          }
        }
        function setIsRendering(rendering) {
          {
            isRendering = rendering;
          }
        }
        function toString5(value2) {
          return "" + value2;
        }
        function getToStringValue(value2) {
          switch (typeof value2) {
            case "boolean":
            case "number":
            case "string":
            case "undefined":
              return value2;
            case "object":
              {
                checkFormFieldValueStringCoercion(value2);
              }
              return value2;
            default:
              return "";
          }
        }
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error3("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error3("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCheckable(elem) {
          var type = elem.type;
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
        }
        function getTracker(node14) {
          return node14.Ac;
        }
        function detachTracker(node14) {
          node14.Ac = null;
        }
        function getValueFromNode(node14) {
          var value2 = "";
          if (!node14) {
            return value2;
          }
          if (isCheckable(node14)) {
            value2 = node14.checked ? "true" : "false";
          } else {
            value2 = node14.value;
          }
          return value2;
        }
        function trackValueOnNode(node14) {
          var valueField = isCheckable(node14) ? "checked" : "value";
          var descriptor = Object.getOwnPropertyDescriptor(node14.constructor.prototype, valueField);
          {
            checkFormFieldValueStringCoercion(node14[valueField]);
          }
          var currentValue = "" + node14[valueField];
          if (node14.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
            return;
          }
          var get2 = descriptor.get, set3 = descriptor.set;
          Object.defineProperty(node14, valueField, {
            configurable: true,
            get: function() {
              return get2.call(this);
            },
            set: function(value2) {
              {
                checkFormFieldValueStringCoercion(value2);
              }
              currentValue = "" + value2;
              set3.call(this, value2);
            }
          });
          Object.defineProperty(node14, valueField, {
            enumerable: descriptor.enumerable
          });
          var tracker = {
            getValue: function() {
              return currentValue;
            },
            setValue: function(value2) {
              {
                checkFormFieldValueStringCoercion(value2);
              }
              currentValue = "" + value2;
            },
            stopTracking: function() {
              detachTracker(node14);
              delete node14[valueField];
            }
          };
          return tracker;
        }
        function track(node14) {
          if (getTracker(node14)) {
            return;
          }
          node14.Ac = trackValueOnNode(node14);
        }
        function updateValueIfChanged(node14) {
          if (!node14) {
            return false;
          }
          var tracker = getTracker(node14);
          if (!tracker) {
            return true;
          }
          var lastValue = tracker.getValue();
          var nextValue = getValueFromNode(node14);
          if (nextValue !== lastValue) {
            tracker.setValue(nextValue);
            return true;
          }
          return false;
        }
        function getActiveElement2(doc) {
          doc = doc || (typeof document !== "undefined" ? document : void 0);
          if (typeof doc === "undefined") {
            return null;
          }
          try {
            return doc.activeElement || doc.body;
          } catch (e) {
            return doc.body;
          }
        }
        var didWarnValueDefaultValue = false;
        var didWarnCheckedDefaultChecked = false;
        var didWarnControlledToUncontrolled = false;
        var didWarnUncontrolledToControlled = false;
        function isControlled(props) {
          var usesChecked = props.type === "checkbox" || props.type === "radio";
          return usesChecked ? props.checked != null : props.value != null;
        }
        function getHostProps(element6, props) {
          var node14 = element6;
          var checked = props.checked;
          var hostProps = assign2({}, props, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: checked != null ? checked : node14.fa.initialChecked
          });
          return hostProps;
        }
        function initWrapperState(element6, props) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
              error3("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnCheckedDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
              error3("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
              didWarnValueDefaultValue = true;
            }
          }
          var node14 = element6;
          var defaultValue2 = props.defaultValue == null ? "" : props.defaultValue;
          node14.fa = {
            initialChecked: props.checked != null ? props.checked : props.defaultChecked,
            initialValue: getToStringValue(props.value != null ? props.value : defaultValue2),
            controlled: isControlled(props)
          };
        }
        function updateChecked(element6, props) {
          var node14 = element6;
          var checked = props.checked;
          if (checked != null) {
            setValueForProperty(node14, "checked", checked, false);
          }
        }
        function updateWrapper(element6, props) {
          var node14 = element6;
          {
            var controlled = isControlled(props);
            if (!node14.fa.controlled && controlled && !didWarnUncontrolledToControlled) {
              error3("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnUncontrolledToControlled = true;
            }
            if (node14.fa.controlled && !controlled && !didWarnControlledToUncontrolled) {
              error3("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
              didWarnControlledToUncontrolled = true;
            }
          }
          updateChecked(element6, props);
          var value2 = getToStringValue(props.value);
          var type = props.type;
          if (value2 != null) {
            if (type === "number") {
              if (value2 === 0 && node14.value === "" || // We explicitly want to coerce to number here if possible.
              // eslint-disable-next-line
              node14.value != value2) {
                node14.value = toString5(value2);
              }
            } else if (node14.value !== toString5(value2)) {
              node14.value = toString5(value2);
            }
          } else if (type === "submit" || type === "reset") {
            node14.removeAttribute("value");
            return;
          }
          {
            if (props.hasOwnProperty("value")) {
              setDefaultValue(node14, props.type, value2);
            } else if (props.hasOwnProperty("defaultValue")) {
              setDefaultValue(node14, props.type, getToStringValue(props.defaultValue));
            }
          }
          {
            if (props.checked == null && props.defaultChecked != null) {
              node14.defaultChecked = !!props.defaultChecked;
            }
          }
        }
        function postMountWrapper(element6, props, isHydrating2) {
          var node14 = element6;
          if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
            var type = props.type;
            var isButton = type === "submit" || type === "reset";
            if (isButton && (props.value === void 0 || props.value === null)) {
              return;
            }
            var initialValue = toString5(node14.fa.initialValue);
            if (!isHydrating2) {
              {
                if (initialValue !== node14.value) {
                  node14.value = initialValue;
                }
              }
            }
            {
              node14.defaultValue = initialValue;
            }
          }
          var name2 = node14.name;
          if (name2 !== "") {
            node14.name = "";
          }
          {
            node14.defaultChecked = !node14.defaultChecked;
            node14.defaultChecked = !!node14.fa.initialChecked;
          }
          if (name2 !== "") {
            node14.name = name2;
          }
        }
        function restoreControlledState(element6, props) {
          var node14 = element6;
          updateWrapper(node14, props);
          updateNamedCousins(node14, props);
        }
        function updateNamedCousins(rootNode, props) {
          var name2 = props.name;
          if (props.type === "radio" && name2 != null) {
            var queryRoot = rootNode;
            while (queryRoot.parentNode) {
              queryRoot = queryRoot.parentNode;
            }
            {
              checkAttributeStringCoercion(name2, "name");
            }
            var group2 = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name2) + '][type="radio"]');
            for (var i = 0; i < group2.length; i++) {
              var otherNode = group2[i];
              if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                continue;
              }
              var otherProps = getFiberCurrentPropsFromNode(otherNode);
              if (!otherProps) {
                throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
              }
              updateValueIfChanged(otherNode);
              updateWrapper(otherNode, otherProps);
            }
          }
        }
        function setDefaultValue(node14, type, value2) {
          if (
            // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
            type !== "number" || getActiveElement2(node14.ownerDocument) !== node14
          ) {
            if (value2 == null) {
              node14.defaultValue = toString5(node14.fa.initialValue);
            } else if (node14.defaultValue !== toString5(value2)) {
              node14.defaultValue = toString5(value2);
            }
          }
        }
        var didWarnSelectedSetOnOption = false;
        var didWarnInvalidChild = false;
        var didWarnInvalidInnerHTML = false;
        function validateProps(element6, props) {
          {
            if (props.value == null) {
              if (typeof props.children === "object" && props.children !== null) {
                React210.Children.forEach(props.children, function(child) {
                  if (child == null) {
                    return;
                  }
                  if (typeof child === "string" || typeof child === "number") {
                    return;
                  }
                  if (!didWarnInvalidChild) {
                    didWarnInvalidChild = true;
                    error3("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                  }
                });
              } else if (props.dangerouslySetInnerHTML != null) {
                if (!didWarnInvalidInnerHTML) {
                  didWarnInvalidInnerHTML = true;
                  error3("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                }
              }
            }
            if (props.selected != null && !didWarnSelectedSetOnOption) {
              error3("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
              didWarnSelectedSetOnOption = true;
            }
          }
        }
        function postMountWrapper$1(element6, props) {
          if (props.value != null) {
            element6.setAttribute("value", toString5(getToStringValue(props.value)));
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray4(a) {
          return isArrayImpl(a);
        }
        var didWarnValueDefaultValue$1;
        {
          didWarnValueDefaultValue$1 = false;
        }
        function getDeclarationErrorAddendum() {
          var ownerName = getCurrentFiberOwnerNameInDevOrNull();
          if (ownerName) {
            return "\n\nCheck the render method of `" + ownerName + "`.";
          }
          return "";
        }
        var valuePropNames = ["value", "defaultValue"];
        function checkSelectPropTypes(props) {
          {
            checkControlledValueProps("select", props);
            for (var i = 0; i < valuePropNames.length; i++) {
              var propName = valuePropNames[i];
              if (props[propName] == null) {
                continue;
              }
              var propNameIsArray = isArray4(props[propName]);
              if (props.multiple && !propNameIsArray) {
                error3("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
              } else if (!props.multiple && propNameIsArray) {
                error3("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
              }
            }
          }
        }
        function updateOptions(node14, multiple, propValue, setDefaultSelected) {
          var options3 = node14.options;
          if (multiple) {
            var selectedValues = propValue;
            var selectedValue = {};
            for (var i = 0; i < selectedValues.length; i++) {
              selectedValue["$" + selectedValues[i]] = true;
            }
            for (var _i = 0; _i < options3.length; _i++) {
              var selected = selectedValue.hasOwnProperty("$" + options3[_i].value);
              if (options3[_i].selected !== selected) {
                options3[_i].selected = selected;
              }
              if (selected && setDefaultSelected) {
                options3[_i].defaultSelected = true;
              }
            }
          } else {
            var _selectedValue = toString5(getToStringValue(propValue));
            var defaultSelected = null;
            for (var _i2 = 0; _i2 < options3.length; _i2++) {
              if (options3[_i2].value === _selectedValue) {
                options3[_i2].selected = true;
                if (setDefaultSelected) {
                  options3[_i2].defaultSelected = true;
                }
                return;
              }
              if (defaultSelected === null && !options3[_i2].disabled) {
                defaultSelected = options3[_i2];
              }
            }
            if (defaultSelected !== null) {
              defaultSelected.selected = true;
            }
          }
        }
        function getHostProps$1(element6, props) {
          return assign2({}, props, {
            value: void 0
          });
        }
        function initWrapperState$1(element6, props) {
          var node14 = element6;
          {
            checkSelectPropTypes(props);
          }
          node14.fa = {
            wasMultiple: !!props.multiple
          };
          {
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
              error3("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnValueDefaultValue$1 = true;
            }
          }
        }
        function postMountWrapper$2(element6, props) {
          var node14 = element6;
          node14.multiple = !!props.multiple;
          var value2 = props.value;
          if (value2 != null) {
            updateOptions(node14, !!props.multiple, value2, false);
          } else if (props.defaultValue != null) {
            updateOptions(node14, !!props.multiple, props.defaultValue, true);
          }
        }
        function postUpdateWrapper(element6, props) {
          var node14 = element6;
          var wasMultiple = node14.fa.wasMultiple;
          node14.fa.wasMultiple = !!props.multiple;
          var value2 = props.value;
          if (value2 != null) {
            updateOptions(node14, !!props.multiple, value2, false);
          } else if (wasMultiple !== !!props.multiple) {
            if (props.defaultValue != null) {
              updateOptions(node14, !!props.multiple, props.defaultValue, true);
            } else {
              updateOptions(node14, !!props.multiple, props.multiple ? [] : "", false);
            }
          }
        }
        function restoreControlledState$1(element6, props) {
          var node14 = element6;
          var value2 = props.value;
          if (value2 != null) {
            updateOptions(node14, !!props.multiple, value2, false);
          }
        }
        var didWarnValDefaultVal = false;
        function getHostProps$2(element6, props) {
          var node14 = element6;
          if (props.dangerouslySetInnerHTML != null) {
            throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
          }
          var hostProps = assign2({}, props, {
            value: void 0,
            defaultValue: void 0,
            children: toString5(node14.fa.initialValue)
          });
          return hostProps;
        }
        function initWrapperState$2(element6, props) {
          var node14 = element6;
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
              error3("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
              didWarnValDefaultVal = true;
            }
          }
          var initialValue = props.value;
          if (initialValue == null) {
            var children2 = props.children, defaultValue2 = props.defaultValue;
            if (children2 != null) {
              {
                error3("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
              }
              {
                if (defaultValue2 != null) {
                  throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                }
                if (isArray4(children2)) {
                  if (children2.length > 1) {
                    throw new Error("<textarea> can only have at most one child.");
                  }
                  children2 = children2[0];
                }
                defaultValue2 = children2;
              }
            }
            if (defaultValue2 == null) {
              defaultValue2 = "";
            }
            initialValue = defaultValue2;
          }
          node14.fa = {
            initialValue: getToStringValue(initialValue)
          };
        }
        function updateWrapper$1(element6, props) {
          var node14 = element6;
          var value2 = getToStringValue(props.value);
          var defaultValue2 = getToStringValue(props.defaultValue);
          if (value2 != null) {
            var newValue = toString5(value2);
            if (newValue !== node14.value) {
              node14.value = newValue;
            }
            if (props.defaultValue == null && node14.defaultValue !== newValue) {
              node14.defaultValue = newValue;
            }
          }
          if (defaultValue2 != null) {
            node14.defaultValue = toString5(defaultValue2);
          }
        }
        function postMountWrapper$3(element6, props) {
          var node14 = element6;
          var textContent = node14.textContent;
          if (textContent === node14.fa.initialValue) {
            if (textContent !== "" && textContent !== null) {
              node14.value = textContent;
            }
          }
        }
        function restoreControlledState$2(element6, props) {
          updateWrapper$1(element6, props);
        }
        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
        function getIntrinsicNamespace(type) {
          switch (type) {
            case "svg":
              return SVG_NAMESPACE;
            case "math":
              return MATH_NAMESPACE;
            default:
              return HTML_NAMESPACE;
          }
        }
        function getChildNamespace(parentNamespace, type) {
          if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
            return getIntrinsicNamespace(type);
          }
          if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
            return HTML_NAMESPACE;
          }
          return parentNamespace;
        }
        var createMicrosoftUnsafeLocalFunction = function(func32) {
          if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
            return function(arg0, arg1, arg2, arg3) {
              MSApp.execUnsafeLocalFunction(function() {
                return func32(arg0, arg1, arg2, arg3);
              });
            };
          } else {
            return func32;
          }
        };
        var reusableSVGContainer;
        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node14, html) {
          if (node14.namespaceURI === SVG_NAMESPACE) {
            if (!("innerHTML" in node14)) {
              reusableSVGContainer = reusableSVGContainer || document.createElement("div");
              reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
              var svgNode = reusableSVGContainer.firstChild;
              while (node14.firstChild) {
                node14.removeChild(node14.firstChild);
              }
              while (svgNode.firstChild) {
                node14.appendChild(svgNode.firstChild);
              }
              return;
            }
          }
          node14.innerHTML = html;
        });
        var ELEMENT_NODE = 1;
        var TEXT_NODE = 3;
        var COMMENT_NODE = 8;
        var DOCUMENT_NODE = 9;
        var DOCUMENT_FRAGMENT_NODE = 11;
        var setTextContent = function(node14, text) {
          if (text) {
            var firstChild = node14.firstChild;
            if (firstChild && firstChild === node14.lastChild && firstChild.nodeType === TEXT_NODE) {
              firstChild.nodeValue = text;
              return;
            }
          }
          node14.textContent = text;
        };
        var shorthandToLonghand = {
          animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
          background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
          backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
          border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
          borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
          borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
          borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
          borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
          borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
          borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
          borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
          borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
          borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
          borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
          borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
          columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
          columns: ["columnCount", "columnWidth"],
          flex: ["flexBasis", "flexGrow", "flexShrink"],
          flexFlow: ["flexDirection", "flexWrap"],
          font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
          fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
          gap: ["columnGap", "rowGap"],
          grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
          gridColumn: ["gridColumnEnd", "gridColumnStart"],
          gridColumnGap: ["columnGap"],
          gridGap: ["columnGap", "rowGap"],
          gridRow: ["gridRowEnd", "gridRowStart"],
          gridRowGap: ["rowGap"],
          gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
          listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
          margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
          marker: ["markerEnd", "markerMid", "markerStart"],
          mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
          maskPosition: ["maskPositionX", "maskPositionY"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          overflow: ["overflowX", "overflowY"],
          padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
          placeContent: ["alignContent", "justifyContent"],
          placeItems: ["alignItems", "justifyItems"],
          placeSelf: ["alignSelf", "justifySelf"],
          textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
          textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
          transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
          wordWrap: ["overflowWrap"]
        };
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop2) {
          prefixes.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop2)] = isUnitlessNumber[prop2];
          });
        });
        function dangerousStyleValue(name2, value2, isCustomProperty) {
          var isEmpty = value2 == null || typeof value2 === "boolean" || value2 === "";
          if (isEmpty) {
            return "";
          }
          if (!isCustomProperty && typeof value2 === "number" && value2 !== 0 && !(isUnitlessNumber.hasOwnProperty(name2) && isUnitlessNumber[name2])) {
            return value2 + "px";
          }
          {
            checkCSSPropertyStringCoercion(value2, name2);
          }
          return ("" + value2).trim();
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern = /^ms-/;
        function hyphenateStyleName(name2) {
          return name2.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern$1 = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize = function(string66) {
            return string66.replace(hyphenPattern, function(_2, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name2) {
            if (warnedStyleNames.hasOwnProperty(name2) && warnedStyleNames[name2]) {
              return;
            }
            warnedStyleNames[name2] = true;
            error3(
              "Unsupported style property %s. Did you mean %s?",
              name2,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize(name2.replace(msPattern$1, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name2) {
            if (warnedStyleNames.hasOwnProperty(name2) && warnedStyleNames[name2]) {
              return;
            }
            warnedStyleNames[name2] = true;
            error3("Unsupported vendor-prefixed style property %s. Did you mean %s?", name2, name2.charAt(0).toUpperCase() + name2.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name2, value2) {
            if (warnedStyleValues.hasOwnProperty(value2) && warnedStyleValues[value2]) {
              return;
            }
            warnedStyleValues[value2] = true;
            error3(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name2, value2.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name2, value2) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error3("`NaN` is an invalid value for the `%s` css style property.", name2);
          };
          var warnStyleValueIsInfinity = function(name2, value2) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error3("`Infinity` is an invalid value for the `%s` css style property.", name2);
          };
          warnValidStyle = function(name2, value2) {
            if (name2.indexOf("-") > -1) {
              warnHyphenatedStyleName(name2);
            } else if (badVendoredStyleNamePattern.test(name2)) {
              warnBadVendoredStyleName(name2);
            } else if (badStyleValueWithSemicolonPattern.test(value2)) {
              warnStyleValueWithSemicolon(name2, value2);
            }
            if (typeof value2 === "number") {
              if (isNaN(value2)) {
                warnStyleValueIsNaN(name2, value2);
              } else if (!isFinite(value2)) {
                warnStyleValueIsInfinity(name2, value2);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        function createDangerousStringForStyles(styles6) {
          {
            var serialized = "";
            var delimiter = "";
            for (var styleName in styles6) {
              if (!styles6.hasOwnProperty(styleName)) {
                continue;
              }
              var styleValue = styles6[styleName];
              if (styleValue != null) {
                var isCustomProperty = styleName.indexOf("--") === 0;
                serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                delimiter = ";";
              }
            }
            return serialized || null;
          }
        }
        function setValueForStyles(node14, styles6) {
          var style2 = node14.style;
          for (var styleName in styles6) {
            if (!styles6.hasOwnProperty(styleName)) {
              continue;
            }
            var isCustomProperty = styleName.indexOf("--") === 0;
            {
              if (!isCustomProperty) {
                warnValidStyle$1(styleName, styles6[styleName]);
              }
            }
            var styleValue = dangerousStyleValue(styleName, styles6[styleName], isCustomProperty);
            if (styleName === "float") {
              styleName = "cssFloat";
            }
            if (isCustomProperty) {
              style2.setProperty(styleName, styleValue);
            } else {
              style2[styleName] = styleValue;
            }
          }
        }
        function isValueEmpty(value2) {
          return value2 == null || typeof value2 === "boolean" || value2 === "";
        }
        function expandShorthandMap(styles6) {
          var expanded = {};
          for (var key in styles6) {
            var longhands = shorthandToLonghand[key] || [key];
            for (var i = 0; i < longhands.length; i++) {
              expanded[longhands[i]] = key;
            }
          }
          return expanded;
        }
        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
          {
            if (!nextStyles) {
              return;
            }
            var expandedUpdates = expandShorthandMap(styleUpdates);
            var expandedStyles = expandShorthandMap(nextStyles);
            var warnedAbout = {};
            for (var key in expandedUpdates) {
              var originalKey = expandedUpdates[key];
              var correctOriginalKey = expandedStyles[key];
              if (correctOriginalKey && originalKey !== correctOriginalKey) {
                var warningKey = originalKey + "," + correctOriginalKey;
                if (warnedAbout[warningKey]) {
                  continue;
                }
                warnedAbout[warningKey] = true;
                error3("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
              }
            }
          }
        }
        var omittedCloseTags = {
          area: true,
          base: true,
          br: true,
          col: true,
          embed: true,
          hr: true,
          img: true,
          input: true,
          keygen: true,
          link: true,
          meta: true,
          param: true,
          source: true,
          track: true,
          wbr: true
          // NOTE: menuitem's close tag should be omitted, but that causes problems.
        };
        var voidElementTags = assign2({
          menuitem: true
        }, omittedCloseTags);
        var HTML = "__html";
        function assertValidProps(tag, props) {
          if (!props) {
            return;
          }
          if (voidElementTags[tag]) {
            if (props.children != null || props.dangerouslySetInnerHTML != null) {
              throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
            }
          }
          if (props.dangerouslySetInnerHTML != null) {
            if (props.children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
          }
          {
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error3("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
          }
          if (props.style != null && typeof props.style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name2) {
          {
            if (hasOwnProperty3.call(warnedProperties, name2) && warnedProperties[name2]) {
              return true;
            }
            if (rARIACamel.test(name2)) {
              var ariaName = "aria-" + name2.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error3("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name2);
                warnedProperties[name2] = true;
                return true;
              }
              if (name2 !== correctName) {
                error3("Invalid ARIA attribute `%s`. Did you mean `%s`?", name2, correctName);
                warnedProperties[name2] = true;
                return true;
              }
            }
            if (rARIA.test(name2)) {
              var lowerCasedName = name2.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name2] = true;
                return false;
              }
              if (name2 !== standardName) {
                error3("Unknown ARIA attribute `%s`. Did you mean `%s`?", name2, standardName);
                warnedProperties[name2] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop2) {
              return "`" + prop2 + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error3("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error3("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error3("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error3("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name2, value2, eventRegistry) {
            if (hasOwnProperty3.call(warnedProperties$1, name2) && warnedProperties$1[name2]) {
              return true;
            }
            var lowerCasedName = name2.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error3("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name2] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies2.hasOwnProperty(name2)) {
                return true;
              }
              var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
              if (registrationName != null) {
                error3("Invalid event handler property `%s`. Did you mean `%s`?", name2, registrationName);
                warnedProperties$1[name2] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name2)) {
                error3("Unknown event handler property `%s`. It will be ignored.", name2);
                warnedProperties$1[name2] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name2)) {
              if (INVALID_EVENT_NAME_REGEX.test(name2)) {
                error3("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name2);
              }
              warnedProperties$1[name2] = true;
              return true;
            }
            if (rARIA$1.test(name2) || rARIACamel$1.test(name2)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error3("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name2] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error3("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name2] = true;
              return true;
            }
            if (lowerCasedName === "is" && value2 !== null && value2 !== void 0 && typeof value2 !== "string") {
              error3("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value2);
              warnedProperties$1[name2] = true;
              return true;
            }
            if (typeof value2 === "number" && isNaN(value2)) {
              error3("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name2);
              warnedProperties$1[name2] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name2);
            var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name2) {
                error3("Invalid DOM property `%s`. Did you mean `%s`?", name2, standardName);
                warnedProperties$1[name2] = true;
                return true;
              }
            } else if (!isReserved && name2 !== lowerCasedName) {
              error3("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name2, lowerCasedName);
              warnedProperties$1[name2] = true;
              return true;
            }
            if (typeof value2 === "boolean" && shouldRemoveAttributeWithWarning(name2, value2, propertyInfo, false)) {
              if (value2) {
                error3('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value2, name2, name2, value2, name2);
              } else {
                error3('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value2, name2, name2, value2, name2, name2, name2);
              }
              warnedProperties$1[name2] = true;
              return true;
            }
            if (isReserved) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name2, value2, propertyInfo, false)) {
              warnedProperties$1[name2] = true;
              return false;
            }
            if ((value2 === "false" || value2 === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error3("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value2, name2, value2 === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name2, value2);
              warnedProperties$1[name2] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop2) {
              return "`" + prop2 + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error3("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error3("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
        var IS_NON_DELEGATED = 1 << 1;
        var IS_CAPTURE_PHASE = 1 << 2;
        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
        var currentReplayingEvent = null;
        function setReplayingEvent(event2) {
          {
            if (currentReplayingEvent !== null) {
              error3("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = event2;
        }
        function resetReplayingEvent() {
          {
            if (currentReplayingEvent === null) {
              error3("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          currentReplayingEvent = null;
        }
        function isReplayingEvent(event2) {
          return event2 === currentReplayingEvent;
        }
        function getEventTarget(nativeEvent) {
          var target = nativeEvent.target || nativeEvent.srcElement || window;
          if (target.correspondingUseElement) {
            target = target.correspondingUseElement;
          }
          return target.nodeType === TEXT_NODE ? target.parentNode : target;
        }
        var restoreImpl = null;
        var restoreTarget = null;
        var restoreQueue = null;
        function restoreStateOfTarget(target) {
          var internalInstance = getInstanceFromNode(target);
          if (!internalInstance) {
            return;
          }
          if (typeof restoreImpl !== "function") {
            throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
          }
          var stateNode = internalInstance.stateNode;
          if (stateNode) {
            var _props = getFiberCurrentPropsFromNode(stateNode);
            restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
          }
        }
        function setRestoreImplementation(impl) {
          restoreImpl = impl;
        }
        function enqueueStateRestore(target) {
          if (restoreTarget) {
            if (restoreQueue) {
              restoreQueue.push(target);
            } else {
              restoreQueue = [target];
            }
          } else {
            restoreTarget = target;
          }
        }
        function needsStateRestore() {
          return restoreTarget !== null || restoreQueue !== null;
        }
        function restoreStateIfNeeded() {
          if (!restoreTarget) {
            return;
          }
          var target = restoreTarget;
          var queuedTargets = restoreQueue;
          restoreTarget = null;
          restoreQueue = null;
          restoreStateOfTarget(target);
          if (queuedTargets) {
            for (var i = 0; i < queuedTargets.length; i++) {
              restoreStateOfTarget(queuedTargets[i]);
            }
          }
        }
        var batchedUpdatesImpl = function(fn, bookkeeping) {
          return fn(bookkeeping);
        };
        var flushSyncImpl = function() {
        };
        var isInsideEventHandler = false;
        function finishEventHandler() {
          var controlledComponentsHavePendingUpdates = needsStateRestore();
          if (controlledComponentsHavePendingUpdates) {
            flushSyncImpl();
            restoreStateIfNeeded();
          }
        }
        function batchedUpdates(fn, a, b) {
          if (isInsideEventHandler) {
            return fn(a, b);
          }
          isInsideEventHandler = true;
          try {
            return batchedUpdatesImpl(fn, a, b);
          } finally {
            isInsideEventHandler = false;
            finishEventHandler();
          }
        }
        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
          batchedUpdatesImpl = _batchedUpdatesImpl;
          flushSyncImpl = _flushSyncImpl;
        }
        function isInteractive(tag) {
          return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
        }
        function shouldPreventMouseEvent(name2, type, props) {
          switch (name2) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
              return !!(props.disabled && isInteractive(type));
            default:
              return false;
          }
        }
        function getListener(inst, registrationName) {
          var stateNode = inst.stateNode;
          if (stateNode === null) {
            return null;
          }
          var props = getFiberCurrentPropsFromNode(stateNode);
          if (props === null) {
            return null;
          }
          var listener = props[registrationName];
          if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
            return null;
          }
          if (listener && typeof listener !== "function") {
            throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
          }
          return listener;
        }
        var passiveBrowserEventsSupported = false;
        if (canUseDOM3) {
          try {
            var options2 = {};
            Object.defineProperty(options2, "passive", {
              get: function() {
                passiveBrowserEventsSupported = true;
              }
            });
            window.addEventListener("test", options2, options2);
            window.removeEventListener("test", options2, options2);
          } catch (e) {
            passiveBrowserEventsSupported = false;
          }
        }
        function invokeGuardedCallbackProd(name2, func32, context2, a, b, c, d, e, f) {
          var funcArgs = Array.prototype.slice.call(arguments, 3);
          try {
            func32.apply(context2, funcArgs);
          } catch (error4) {
            this.onError(error4);
          }
        }
        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
        {
          if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
            var fakeNode = document.createElement("react");
            invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name2, func32, context2, a, b, c, d, e, f) {
              if (typeof document === "undefined" || document === null) {
                throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
              }
              var evt = document.createEvent("Event");
              var didCall = false;
              var didError = true;
              var windowEvent = window.event;
              var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
              function restoreAfterDispatch() {
                fakeNode.removeEventListener(evtType, callCallback2, false);
                if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                  window.event = windowEvent;
                }
              }
              var funcArgs = Array.prototype.slice.call(arguments, 3);
              function callCallback2() {
                didCall = true;
                restoreAfterDispatch();
                func32.apply(context2, funcArgs);
                didError = false;
              }
              var error4;
              var didSetError = false;
              var isCrossOriginError = false;
              function handleWindowError(event2) {
                error4 = event2.error;
                didSetError = true;
                if (error4 === null && event2.colno === 0 && event2.lineno === 0) {
                  isCrossOriginError = true;
                }
                if (event2.defaultPrevented) {
                  if (error4 != null && typeof error4 === "object") {
                    try {
                      error4.sb = true;
                    } catch (inner) {
                    }
                  }
                }
              }
              var evtType = "react-" + (name2 ? name2 : "invokeguardedcallback");
              window.addEventListener("error", handleWindowError);
              fakeNode.addEventListener(evtType, callCallback2, false);
              evt.initEvent(evtType, false, false);
              fakeNode.dispatchEvent(evt);
              if (windowEventDescriptor) {
                Object.defineProperty(window, "event", windowEventDescriptor);
              }
              if (didCall && didError) {
                if (!didSetError) {
                  error4 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                } else if (isCrossOriginError) {
                  error4 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                }
                this.onError(error4);
              }
              window.removeEventListener("error", handleWindowError);
              if (!didCall) {
                restoreAfterDispatch();
                return invokeGuardedCallbackProd.apply(this, arguments);
              }
            };
          }
        }
        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
        var hasError = false;
        var caughtError = null;
        var hasRethrowError = false;
        var rethrowError = null;
        var reporter = {
          onError: function(error4) {
            hasError = true;
            caughtError = error4;
          }
        };
        function invokeGuardedCallback(name2, func32, context2, a, b, c, d, e, f) {
          hasError = false;
          caughtError = null;
          invokeGuardedCallbackImpl$1.apply(reporter, arguments);
        }
        function invokeGuardedCallbackAndCatchFirstError(name2, func32, context2, a, b, c, d, e, f) {
          invokeGuardedCallback.apply(this, arguments);
          if (hasError) {
            var error4 = clearCaughtError();
            if (!hasRethrowError) {
              hasRethrowError = true;
              rethrowError = error4;
            }
          }
        }
        function rethrowCaughtError() {
          if (hasRethrowError) {
            var error4 = rethrowError;
            hasRethrowError = false;
            rethrowError = null;
            throw error4;
          }
        }
        function hasCaughtError() {
          return hasError;
        }
        function clearCaughtError() {
          if (hasError) {
            var error4 = caughtError;
            hasError = false;
            caughtError = null;
            return error4;
          } else {
            throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function get(key) {
          return key.Bc;
        }
        function has2(key) {
          return key.Bc !== void 0;
        }
        function set2(key, value2) {
          key.Bc = value2;
        }
        var NoFlags = (
          /*                      */
          0
        );
        var PerformedWork = (
          /*                */
          1
        );
        var Placement = (
          /*                    */
          2
        );
        var Update = (
          /*                       */
          4
        );
        var ChildDeletion = (
          /*                */
          16
        );
        var ContentReset = (
          /*                 */
          32
        );
        var Callback = (
          /*                     */
          64
        );
        var DidCapture = (
          /*                   */
          128
        );
        var ForceClientRender = (
          /*            */
          256
        );
        var Ref = (
          /*                          */
          512
        );
        var Snapshot = (
          /*                     */
          1024
        );
        var Passive = (
          /*                      */
          2048
        );
        var Hydrating = (
          /*                    */
          4096
        );
        var Visibility = (
          /*                   */
          8192
        );
        var StoreConsistency = (
          /*             */
          16384
        );
        var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;
        var HostEffectMask = (
          /*               */
          32767
        );
        var Incomplete = (
          /*                   */
          32768
        );
        var ShouldCapture = (
          /*                */
          65536
        );
        var ForceUpdateForLegacySuspense = (
          /* */
          131072
        );
        var Forked = (
          /*                       */
          1048576
        );
        var RefStatic = (
          /*                    */
          2097152
        );
        var LayoutStatic = (
          /*                 */
          4194304
        );
        var PassiveStatic = (
          /*                */
          8388608
        );
        var MountLayoutDev = (
          /*               */
          16777216
        );
        var MountPassiveDev = (
          /*              */
          33554432
        );
        var BeforeMutationMask = (
          // TODO: Remove Update flag from before mutation phase by re-landing Visibility
          // flag logic (see #20043)
          Update | Snapshot | 0
        );
        var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
        var LayoutMask = Update | Callback | Ref | Visibility;
        var PassiveMask = Passive | ChildDeletion;
        var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        function getNearestMountedFiber(fiber) {
          var node14 = fiber;
          var nearestMounted = fiber;
          if (!fiber.alternate) {
            var nextNode = node14;
            do {
              node14 = nextNode;
              if ((node14.flags & (Placement | Hydrating)) !== NoFlags) {
                nearestMounted = node14.return;
              }
              nextNode = node14.return;
            } while (nextNode);
          } else {
            while (node14.return) {
              node14 = node14.return;
            }
          }
          if (node14.tag === HostRoot) {
            return nearestMounted;
          }
          return null;
        }
        function getSuspenseInstanceFromFiber(fiber) {
          if (fiber.tag === SuspenseComponent) {
            var suspenseState = fiber.memoizedState;
            if (suspenseState === null) {
              var current2 = fiber.alternate;
              if (current2 !== null) {
                suspenseState = current2.memoizedState;
              }
            }
            if (suspenseState !== null) {
              return suspenseState.dehydrated;
            }
          }
          return null;
        }
        function getContainerFromFiber(fiber) {
          return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
        }
        function isFiberMounted(fiber) {
          return getNearestMountedFiber(fiber) === fiber;
        }
        function isMounted(component) {
          {
            var owner = ReactCurrentOwner.current;
            if (owner !== null && owner.tag === ClassComponent) {
              var ownerFiber = owner;
              var instance4 = ownerFiber.stateNode;
              if (!instance4.Rb) {
                error3("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
              }
              instance4.Rb = true;
            }
          }
          var fiber = get(component);
          if (!fiber) {
            return false;
          }
          return getNearestMountedFiber(fiber) === fiber;
        }
        function assertIsMounted(fiber) {
          if (getNearestMountedFiber(fiber) !== fiber) {
            throw new Error("Unable to find node on an unmounted component.");
          }
        }
        function findCurrentFiberUsingSlowPath(fiber) {
          var alternate = fiber.alternate;
          if (!alternate) {
            var nearestMounted = getNearestMountedFiber(fiber);
            if (nearestMounted === null) {
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (nearestMounted !== fiber) {
              return null;
            }
            return fiber;
          }
          var a = fiber;
          var b = alternate;
          while (true) {
            var parentA = a.return;
            if (parentA === null) {
              break;
            }
            var parentB = parentA.alternate;
            if (parentB === null) {
              var nextParent = parentA.return;
              if (nextParent !== null) {
                a = b = nextParent;
                continue;
              }
              break;
            }
            if (parentA.child === parentB.child) {
              var child = parentA.child;
              while (child) {
                if (child === a) {
                  assertIsMounted(parentA);
                  return fiber;
                }
                if (child === b) {
                  assertIsMounted(parentA);
                  return alternate;
                }
                child = child.sibling;
              }
              throw new Error("Unable to find node on an unmounted component.");
            }
            if (a.return !== b.return) {
              a = parentA;
              b = parentB;
            } else {
              var didFindChild = false;
              var _child = parentA.child;
              while (_child) {
                if (_child === a) {
                  didFindChild = true;
                  a = parentA;
                  b = parentB;
                  break;
                }
                if (_child === b) {
                  didFindChild = true;
                  b = parentA;
                  a = parentB;
                  break;
                }
                _child = _child.sibling;
              }
              if (!didFindChild) {
                _child = parentB.child;
                while (_child) {
                  if (_child === a) {
                    didFindChild = true;
                    a = parentB;
                    b = parentA;
                    break;
                  }
                  if (_child === b) {
                    didFindChild = true;
                    b = parentB;
                    a = parentA;
                    break;
                  }
                  _child = _child.sibling;
                }
                if (!didFindChild) {
                  throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                }
              }
            }
            if (a.alternate !== b) {
              throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (a.tag !== HostRoot) {
            throw new Error("Unable to find node on an unmounted component.");
          }
          if (a.stateNode.current === a) {
            return fiber;
          }
          return alternate;
        }
        function findCurrentHostFiber(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
        }
        function findCurrentHostFiberImpl(node14) {
          if (node14.tag === HostComponent || node14.tag === HostText) {
            return node14;
          }
          var child = node14.child;
          while (child !== null) {
            var match = findCurrentHostFiberImpl(child);
            if (match !== null) {
              return match;
            }
            child = child.sibling;
          }
          return null;
        }
        function findCurrentHostFiberWithNoPortals(parent) {
          var currentParent = findCurrentFiberUsingSlowPath(parent);
          return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
        }
        function findCurrentHostFiberWithNoPortalsImpl(node14) {
          if (node14.tag === HostComponent || node14.tag === HostText) {
            return node14;
          }
          var child = node14.child;
          while (child !== null) {
            if (child.tag !== HostPortal) {
              var match = findCurrentHostFiberWithNoPortalsImpl(child);
              if (match !== null) {
                return match;
              }
            }
            child = child.sibling;
          }
          return null;
        }
        var scheduleCallback = Scheduler2.unstable_scheduleCallback;
        var cancelCallback = Scheduler2.unstable_cancelCallback;
        var shouldYield = Scheduler2.unstable_shouldYield;
        var requestPaint = Scheduler2.unstable_requestPaint;
        var now3 = Scheduler2.unstable_now;
        var getCurrentPriorityLevel = Scheduler2.unstable_getCurrentPriorityLevel;
        var ImmediatePriority = Scheduler2.unstable_ImmediatePriority;
        var UserBlockingPriority = Scheduler2.unstable_UserBlockingPriority;
        var NormalPriority = Scheduler2.unstable_NormalPriority;
        var LowPriority = Scheduler2.unstable_LowPriority;
        var IdlePriority = Scheduler2.unstable_IdlePriority;
        var unstable_yieldValue = Scheduler2.unstable_yieldValue;
        var unstable_setDisableYieldValue = Scheduler2.unstable_setDisableYieldValue;
        var rendererID = null;
        var injectedHook = null;
        var injectedProfilingHooks = null;
        var hasLoggedError = false;
        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
        function injectInternals(internals) {
          if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
            return false;
          }
          var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
          if (hook.isDisabled) {
            return true;
          }
          if (!hook.supportsFiber) {
            {
              error3("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
            }
            return true;
          }
          try {
            if (enableSchedulingProfiler) {
              internals = assign2({}, internals, {
                getLaneLabelMap,
                injectProfilingHooks
              });
            }
            rendererID = hook.inject(internals);
            injectedHook = hook;
          } catch (err2) {
            {
              error3("React instrumentation encountered an error: %s.", err2);
            }
          }
          if (hook.checkDCE) {
            return true;
          } else {
            return false;
          }
        }
        function onScheduleRoot(root2, children2) {
          {
            if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
              try {
                injectedHook.onScheduleFiberRoot(rendererID, root2, children2);
              } catch (err2) {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error3("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onCommitRoot(root2, eventPriority) {
          if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
            try {
              var didError = (root2.current.flags & DidCapture) === DidCapture;
              if (enableProfilerTimer) {
                var schedulerPriority;
                switch (eventPriority) {
                  case DiscreteEventPriority:
                    schedulerPriority = ImmediatePriority;
                    break;
                  case ContinuousEventPriority:
                    schedulerPriority = UserBlockingPriority;
                    break;
                  case DefaultEventPriority:
                    schedulerPriority = NormalPriority;
                    break;
                  case IdleEventPriority:
                    schedulerPriority = IdlePriority;
                    break;
                  default:
                    schedulerPriority = NormalPriority;
                    break;
                }
                injectedHook.onCommitFiberRoot(rendererID, root2, schedulerPriority, didError);
              } else {
                injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
              }
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error3("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onPostCommitRoot(root2) {
          if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") {
            try {
              injectedHook.onPostCommitFiberRoot(rendererID, root2);
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error3("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function onCommitUnmount(fiber) {
          if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
            try {
              injectedHook.onCommitFiberUnmount(rendererID, fiber);
            } catch (err2) {
              {
                if (!hasLoggedError) {
                  hasLoggedError = true;
                  error3("React instrumentation encountered an error: %s", err2);
                }
              }
            }
          }
        }
        function setIsStrictModeForDevtools(newIsStrictMode) {
          {
            if (typeof unstable_yieldValue === "function") {
              unstable_setDisableYieldValue(newIsStrictMode);
              setSuppressWarning(newIsStrictMode);
            }
            if (injectedHook && typeof injectedHook.setStrictMode === "function") {
              try {
                injectedHook.setStrictMode(rendererID, newIsStrictMode);
              } catch (err2) {
                {
                  if (!hasLoggedError) {
                    hasLoggedError = true;
                    error3("React instrumentation encountered an error: %s", err2);
                  }
                }
              }
            }
          }
        }
        function injectProfilingHooks(profilingHooks) {
          injectedProfilingHooks = profilingHooks;
        }
        function getLaneLabelMap() {
          {
            var map2 = /* @__PURE__ */ new Map();
            var lane = 1;
            for (var index2 = 0; index2 < TotalLanes; index2++) {
              var label = getLabelForLane(lane);
              map2.set(lane, label);
              lane *= 2;
            }
            return map2;
          }
        }
        function markCommitStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") {
              injectedProfilingHooks.markCommitStarted(lanes);
            }
          }
        }
        function markCommitStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") {
              injectedProfilingHooks.markCommitStopped();
            }
          }
        }
        function markComponentRenderStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") {
              injectedProfilingHooks.markComponentRenderStarted(fiber);
            }
          }
        }
        function markComponentRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") {
              injectedProfilingHooks.markComponentRenderStopped();
            }
          }
        }
        function markComponentPassiveEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectMountStopped();
            }
          }
        }
        function markComponentPassiveEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentPassiveEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
            }
          }
        }
        function markComponentLayoutEffectMountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectMountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectMountStopped();
            }
          }
        }
        function markComponentLayoutEffectUnmountStarted(fiber) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
            }
          }
        }
        function markComponentLayoutEffectUnmountStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") {
              injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
            }
          }
        }
        function markComponentErrored(fiber, thrownValue, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") {
              injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
            }
          }
        }
        function markComponentSuspended(fiber, wakeable, lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") {
              injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
            }
          }
        }
        function markLayoutEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") {
              injectedProfilingHooks.markLayoutEffectsStarted(lanes);
            }
          }
        }
        function markLayoutEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") {
              injectedProfilingHooks.markLayoutEffectsStopped();
            }
          }
        }
        function markPassiveEffectsStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") {
              injectedProfilingHooks.markPassiveEffectsStarted(lanes);
            }
          }
        }
        function markPassiveEffectsStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") {
              injectedProfilingHooks.markPassiveEffectsStopped();
            }
          }
        }
        function markRenderStarted(lanes) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") {
              injectedProfilingHooks.markRenderStarted(lanes);
            }
          }
        }
        function markRenderYielded() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") {
              injectedProfilingHooks.markRenderYielded();
            }
          }
        }
        function markRenderStopped() {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") {
              injectedProfilingHooks.markRenderStopped();
            }
          }
        }
        function markRenderScheduled(lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") {
              injectedProfilingHooks.markRenderScheduled(lane);
            }
          }
        }
        function markForceUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") {
              injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
            }
          }
        }
        function markStateUpdateScheduled(fiber, lane) {
          {
            if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") {
              injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
            }
          }
        }
        var NoMode = (
          /*                         */
          0
        );
        var ConcurrentMode = (
          /*                 */
          1
        );
        var ProfileMode = (
          /*                    */
          2
        );
        var StrictLegacyMode = (
          /*               */
          8
        );
        var StrictEffectsMode = (
          /*              */
          16
        );
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x) {
          var asUint = x >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log(asUint) / LN2 | 0) | 0;
        }
        var TotalLanes = 31;
        var NoLanes = (
          /*                        */
          0
        );
        var NoLane = (
          /*                          */
          0
        );
        var SyncLane = (
          /*                        */
          1
        );
        var InputContinuousHydrationLane = (
          /*    */
          2
        );
        var InputContinuousLane = (
          /*             */
          4
        );
        var DefaultHydrationLane = (
          /*            */
          8
        );
        var DefaultLane = (
          /*                     */
          16
        );
        var TransitionHydrationLane = (
          /*                */
          32
        );
        var TransitionLanes = (
          /*                       */
          4194240
        );
        var TransitionLane1 = (
          /*                        */
          64
        );
        var TransitionLane2 = (
          /*                        */
          128
        );
        var TransitionLane3 = (
          /*                        */
          256
        );
        var TransitionLane4 = (
          /*                        */
          512
        );
        var TransitionLane5 = (
          /*                        */
          1024
        );
        var TransitionLane6 = (
          /*                        */
          2048
        );
        var TransitionLane7 = (
          /*                        */
          4096
        );
        var TransitionLane8 = (
          /*                        */
          8192
        );
        var TransitionLane9 = (
          /*                        */
          16384
        );
        var TransitionLane10 = (
          /*                       */
          32768
        );
        var TransitionLane11 = (
          /*                       */
          65536
        );
        var TransitionLane12 = (
          /*                       */
          131072
        );
        var TransitionLane13 = (
          /*                       */
          262144
        );
        var TransitionLane14 = (
          /*                       */
          524288
        );
        var TransitionLane15 = (
          /*                       */
          1048576
        );
        var TransitionLane16 = (
          /*                       */
          2097152
        );
        var RetryLanes = (
          /*                            */
          130023424
        );
        var RetryLane1 = (
          /*                             */
          4194304
        );
        var RetryLane2 = (
          /*                             */
          8388608
        );
        var RetryLane3 = (
          /*                             */
          16777216
        );
        var RetryLane4 = (
          /*                             */
          33554432
        );
        var RetryLane5 = (
          /*                             */
          67108864
        );
        var SomeRetryLane = RetryLane1;
        var SelectiveHydrationLane = (
          /*          */
          134217728
        );
        var NonIdleLanes = (
          /*                          */
          268435455
        );
        var IdleHydrationLane = (
          /*               */
          268435456
        );
        var IdleLane = (
          /*                        */
          536870912
        );
        var OffscreenLane = (
          /*                   */
          1073741824
        );
        function getLabelForLane(lane) {
          {
            if (lane & SyncLane) {
              return "Sync";
            }
            if (lane & InputContinuousHydrationLane) {
              return "InputContinuousHydration";
            }
            if (lane & InputContinuousLane) {
              return "InputContinuous";
            }
            if (lane & DefaultHydrationLane) {
              return "DefaultHydration";
            }
            if (lane & DefaultLane) {
              return "Default";
            }
            if (lane & TransitionHydrationLane) {
              return "TransitionHydration";
            }
            if (lane & TransitionLanes) {
              return "Transition";
            }
            if (lane & RetryLanes) {
              return "Retry";
            }
            if (lane & SelectiveHydrationLane) {
              return "SelectiveHydration";
            }
            if (lane & IdleHydrationLane) {
              return "IdleHydration";
            }
            if (lane & IdleLane) {
              return "Idle";
            }
            if (lane & OffscreenLane) {
              return "Offscreen";
            }
          }
        }
        var NoTimestamp = -1;
        var nextTransitionLane = TransitionLane1;
        var nextRetryLane = RetryLane1;
        function getHighestPriorityLanes(lanes) {
          switch (getHighestPriorityLane(lanes)) {
            case SyncLane:
              return SyncLane;
            case InputContinuousHydrationLane:
              return InputContinuousHydrationLane;
            case InputContinuousLane:
              return InputContinuousLane;
            case DefaultHydrationLane:
              return DefaultHydrationLane;
            case DefaultLane:
              return DefaultLane;
            case TransitionHydrationLane:
              return TransitionHydrationLane;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return lanes & TransitionLanes;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return lanes & RetryLanes;
            case SelectiveHydrationLane:
              return SelectiveHydrationLane;
            case IdleHydrationLane:
              return IdleHydrationLane;
            case IdleLane:
              return IdleLane;
            case OffscreenLane:
              return OffscreenLane;
            default:
              {
                error3("Should have found matching lanes. This is a bug in React.");
              }
              return lanes;
          }
        }
        function getNextLanes(root2, wipLanes) {
          var pendingLanes = root2.pendingLanes;
          if (pendingLanes === NoLanes) {
            return NoLanes;
          }
          var nextLanes = NoLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
          if (nonIdlePendingLanes !== NoLanes) {
            var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
            if (nonIdleUnblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
            } else {
              var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
              if (nonIdlePingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
              }
            }
          } else {
            var unblockedLanes = pendingLanes & ~suspendedLanes;
            if (unblockedLanes !== NoLanes) {
              nextLanes = getHighestPriorityLanes(unblockedLanes);
            } else {
              if (pingedLanes !== NoLanes) {
                nextLanes = getHighestPriorityLanes(pingedLanes);
              }
            }
          }
          if (nextLanes === NoLanes) {
            return NoLanes;
          }
          if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
          // bother waiting until the root is complete.
          (wipLanes & suspendedLanes) === NoLanes) {
            var nextLane = getHighestPriorityLane(nextLanes);
            var wipLane = getHighestPriorityLane(wipLanes);
            if (
              // Tests whether the next lane is equal or lower priority than the wip
              // one. This works because the bits decrease in priority as you go left.
              nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
              // only difference between default updates and transition updates is that
              // default updates do not support refresh transitions.
              nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes
            ) {
              return wipLanes;
            }
          }
          if ((nextLanes & InputContinuousLane) !== NoLanes) {
            nextLanes |= pendingLanes & DefaultLane;
          }
          var entangledLanes = root2.entangledLanes;
          if (entangledLanes !== NoLanes) {
            var entanglements = root2.entanglements;
            var lanes = nextLanes & entangledLanes;
            while (lanes > 0) {
              var index2 = pickArbitraryLaneIndex(lanes);
              var lane = 1 << index2;
              nextLanes |= entanglements[index2];
              lanes &= ~lane;
            }
          }
          return nextLanes;
        }
        function getMostRecentEventTime(root2, lanes) {
          var eventTimes = root2.eventTimes;
          var mostRecentEventTime = NoTimestamp;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var eventTime = eventTimes[index2];
            if (eventTime > mostRecentEventTime) {
              mostRecentEventTime = eventTime;
            }
            lanes &= ~lane;
          }
          return mostRecentEventTime;
        }
        function computeExpirationTime(lane, currentTime) {
          switch (lane) {
            case SyncLane:
            case InputContinuousHydrationLane:
            case InputContinuousLane:
              return currentTime + 250;
            case DefaultHydrationLane:
            case DefaultLane:
            case TransitionHydrationLane:
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
              return currentTime + 5e3;
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              return NoTimestamp;
            case SelectiveHydrationLane:
            case IdleHydrationLane:
            case IdleLane:
            case OffscreenLane:
              return NoTimestamp;
            default:
              {
                error3("Should have found matching lanes. This is a bug in React.");
              }
              return NoTimestamp;
          }
        }
        function markStarvedLanesAsExpired(root2, currentTime) {
          var pendingLanes = root2.pendingLanes;
          var suspendedLanes = root2.suspendedLanes;
          var pingedLanes = root2.pingedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = pendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            var expirationTime = expirationTimes[index2];
            if (expirationTime === NoTimestamp) {
              if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                expirationTimes[index2] = computeExpirationTime(lane, currentTime);
              }
            } else if (expirationTime <= currentTime) {
              root2.expiredLanes |= lane;
            }
            lanes &= ~lane;
          }
        }
        function getHighestPriorityPendingLanes(root2) {
          return getHighestPriorityLanes(root2.pendingLanes);
        }
        function getLanesToRetrySynchronouslyOnError(root2) {
          var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
          if (everythingButOffscreen !== NoLanes) {
            return everythingButOffscreen;
          }
          if (everythingButOffscreen & OffscreenLane) {
            return OffscreenLane;
          }
          return NoLanes;
        }
        function includesSyncLane(lanes) {
          return (lanes & SyncLane) !== NoLanes;
        }
        function includesNonIdleWork(lanes) {
          return (lanes & NonIdleLanes) !== NoLanes;
        }
        function includesOnlyRetries(lanes) {
          return (lanes & RetryLanes) === lanes;
        }
        function includesOnlyNonUrgentLanes(lanes) {
          var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
          return (lanes & UrgentLanes) === NoLanes;
        }
        function includesOnlyTransitions(lanes) {
          return (lanes & TransitionLanes) === lanes;
        }
        function includesBlockingLane(root2, lanes) {
          var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
          return (lanes & SyncDefaultLanes) !== NoLanes;
        }
        function includesExpiredLane(root2, lanes) {
          return (lanes & root2.expiredLanes) !== NoLanes;
        }
        function isTransitionLane(lane) {
          return (lane & TransitionLanes) !== NoLanes;
        }
        function claimNextTransitionLane() {
          var lane = nextTransitionLane;
          nextTransitionLane <<= 1;
          if ((nextTransitionLane & TransitionLanes) === NoLanes) {
            nextTransitionLane = TransitionLane1;
          }
          return lane;
        }
        function claimNextRetryLane() {
          var lane = nextRetryLane;
          nextRetryLane <<= 1;
          if ((nextRetryLane & RetryLanes) === NoLanes) {
            nextRetryLane = RetryLane1;
          }
          return lane;
        }
        function getHighestPriorityLane(lanes) {
          return lanes & -lanes;
        }
        function pickArbitraryLane(lanes) {
          return getHighestPriorityLane(lanes);
        }
        function pickArbitraryLaneIndex(lanes) {
          return 31 - clz32(lanes);
        }
        function laneToIndex(lane) {
          return pickArbitraryLaneIndex(lane);
        }
        function includesSomeLane(a, b) {
          return (a & b) !== NoLanes;
        }
        function isSubsetOfLanes(set3, subset) {
          return (set3 & subset) === subset;
        }
        function mergeLanes(a, b) {
          return a | b;
        }
        function removeLanes(set3, subset) {
          return set3 & ~subset;
        }
        function intersectLanes(a, b) {
          return a & b;
        }
        function laneToLanes(lane) {
          return lane;
        }
        function higherPriorityLane(a, b) {
          return a !== NoLane && a < b ? a : b;
        }
        function createLaneMap(initial2) {
          var laneMap = [];
          for (var i = 0; i < TotalLanes; i++) {
            laneMap.push(initial2);
          }
          return laneMap;
        }
        function markRootUpdated(root2, updateLane, eventTime) {
          root2.pendingLanes |= updateLane;
          if (updateLane !== IdleLane) {
            root2.suspendedLanes = NoLanes;
            root2.pingedLanes = NoLanes;
          }
          var eventTimes = root2.eventTimes;
          var index2 = laneToIndex(updateLane);
          eventTimes[index2] = eventTime;
        }
        function markRootSuspended(root2, suspendedLanes) {
          root2.suspendedLanes |= suspendedLanes;
          root2.pingedLanes &= ~suspendedLanes;
          var expirationTimes = root2.expirationTimes;
          var lanes = suspendedLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootPinged(root2, pingedLanes, eventTime) {
          root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
        }
        function markRootFinished(root2, remainingLanes) {
          var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
          root2.pendingLanes = remainingLanes;
          root2.suspendedLanes = NoLanes;
          root2.pingedLanes = NoLanes;
          root2.expiredLanes &= remainingLanes;
          root2.mutableReadLanes &= remainingLanes;
          root2.entangledLanes &= remainingLanes;
          var entanglements = root2.entanglements;
          var eventTimes = root2.eventTimes;
          var expirationTimes = root2.expirationTimes;
          var lanes = noLongerPendingLanes;
          while (lanes > 0) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            entanglements[index2] = NoLanes;
            eventTimes[index2] = NoTimestamp;
            expirationTimes[index2] = NoTimestamp;
            lanes &= ~lane;
          }
        }
        function markRootEntangled(root2, entangledLanes) {
          var rootEntangledLanes = root2.entangledLanes |= entangledLanes;
          var entanglements = root2.entanglements;
          var lanes = rootEntangledLanes;
          while (lanes) {
            var index2 = pickArbitraryLaneIndex(lanes);
            var lane = 1 << index2;
            if (
              // Is this one of the newly entangled lanes?
              lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
              entanglements[index2] & entangledLanes
            ) {
              entanglements[index2] |= entangledLanes;
            }
            lanes &= ~lane;
          }
        }
        function getBumpedLaneForHydration(root2, renderLanes2) {
          var renderLane = getHighestPriorityLane(renderLanes2);
          var lane;
          switch (renderLane) {
            case InputContinuousLane:
              lane = InputContinuousHydrationLane;
              break;
            case DefaultLane:
              lane = DefaultHydrationLane;
              break;
            case TransitionLane1:
            case TransitionLane2:
            case TransitionLane3:
            case TransitionLane4:
            case TransitionLane5:
            case TransitionLane6:
            case TransitionLane7:
            case TransitionLane8:
            case TransitionLane9:
            case TransitionLane10:
            case TransitionLane11:
            case TransitionLane12:
            case TransitionLane13:
            case TransitionLane14:
            case TransitionLane15:
            case TransitionLane16:
            case RetryLane1:
            case RetryLane2:
            case RetryLane3:
            case RetryLane4:
            case RetryLane5:
              lane = TransitionHydrationLane;
              break;
            case IdleLane:
              lane = IdleHydrationLane;
              break;
            default:
              lane = NoLane;
              break;
          }
          if ((lane & (root2.suspendedLanes | renderLanes2)) !== NoLane) {
            return NoLane;
          }
          return lane;
        }
        function addFiberToLanesMap(root2, fiber, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            updaters.add(fiber);
            lanes &= ~lane;
          }
        }
        function movePendingFibersToMemoized(root2, lanes) {
          if (!isDevToolsPresent) {
            return;
          }
          var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
          var memoizedUpdaters = root2.memoizedUpdaters;
          while (lanes > 0) {
            var index2 = laneToIndex(lanes);
            var lane = 1 << index2;
            var updaters = pendingUpdatersLaneMap[index2];
            if (updaters.size > 0) {
              updaters.forEach(function(fiber) {
                var alternate = fiber.alternate;
                if (alternate === null || !memoizedUpdaters.has(alternate)) {
                  memoizedUpdaters.add(fiber);
                }
              });
              updaters.clear();
            }
            lanes &= ~lane;
          }
        }
        function getTransitionsForLanes(root2, lanes) {
          {
            return null;
          }
        }
        var DiscreteEventPriority = SyncLane;
        var ContinuousEventPriority = InputContinuousLane;
        var DefaultEventPriority = DefaultLane;
        var IdleEventPriority = IdleLane;
        var currentUpdatePriority = NoLane;
        function getCurrentUpdatePriority() {
          return currentUpdatePriority;
        }
        function setCurrentUpdatePriority(newPriority) {
          currentUpdatePriority = newPriority;
        }
        function runWithPriority(priority, fn) {
          var previousPriority = currentUpdatePriority;
          try {
            currentUpdatePriority = priority;
            return fn();
          } finally {
            currentUpdatePriority = previousPriority;
          }
        }
        function higherEventPriority(a, b) {
          return a !== 0 && a < b ? a : b;
        }
        function lowerEventPriority(a, b) {
          return a === 0 || a > b ? a : b;
        }
        function isHigherEventPriority(a, b) {
          return a !== 0 && a < b;
        }
        function lanesToEventPriority(lanes) {
          var lane = getHighestPriorityLane(lanes);
          if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
            return DiscreteEventPriority;
          }
          if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
            return ContinuousEventPriority;
          }
          if (includesNonIdleWork(lane)) {
            return DefaultEventPriority;
          }
          return IdleEventPriority;
        }
        function isRootDehydrated(root2) {
          var currentState = root2.current.memoizedState;
          return currentState.isDehydrated;
        }
        var _attemptSynchronousHydration;
        function setAttemptSynchronousHydration(fn) {
          _attemptSynchronousHydration = fn;
        }
        function attemptSynchronousHydration(fiber) {
          _attemptSynchronousHydration(fiber);
        }
        var attemptContinuousHydration;
        function setAttemptContinuousHydration(fn) {
          attemptContinuousHydration = fn;
        }
        var attemptHydrationAtCurrentPriority;
        function setAttemptHydrationAtCurrentPriority(fn) {
          attemptHydrationAtCurrentPriority = fn;
        }
        var getCurrentUpdatePriority$1;
        function setGetCurrentUpdatePriority(fn) {
          getCurrentUpdatePriority$1 = fn;
        }
        var attemptHydrationAtPriority;
        function setAttemptHydrationAtPriority(fn) {
          attemptHydrationAtPriority = fn;
        }
        var hasScheduledReplayAttempt = false;
        var queuedDiscreteEvents = [];
        var queuedFocus = null;
        var queuedDrag = null;
        var queuedMouse = null;
        var queuedPointers = /* @__PURE__ */ new Map();
        var queuedPointerCaptures = /* @__PURE__ */ new Map();
        var queuedExplicitHydrationTargets = [];
        var discreteReplayableEvents = [
          "mousedown",
          "mouseup",
          "touchcancel",
          "touchend",
          "touchstart",
          "auxclick",
          "dblclick",
          "pointercancel",
          "pointerdown",
          "pointerup",
          "dragend",
          "dragstart",
          "drop",
          "compositionend",
          "compositionstart",
          "keydown",
          "keypress",
          "keyup",
          "input",
          "textInput",
          // Intentionally camelCase
          "copy",
          "cut",
          "paste",
          "click",
          "change",
          "contextmenu",
          "reset",
          "submit"
        ];
        function isDiscreteEventThatRequiresHydration(eventType) {
          return discreteReplayableEvents.indexOf(eventType) > -1;
        }
        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return {
            blockedOn,
            domEventName,
            eventSystemFlags,
            nativeEvent,
            targetContainers: [targetContainer]
          };
        }
        function clearIfContinuousEvent(domEventName, nativeEvent) {
          switch (domEventName) {
            case "focusin":
            case "focusout":
              queuedFocus = null;
              break;
            case "dragenter":
            case "dragleave":
              queuedDrag = null;
              break;
            case "mouseover":
            case "mouseout":
              queuedMouse = null;
              break;
            case "pointerover":
            case "pointerout": {
              var pointerId = nativeEvent.pointerId;
              queuedPointers.delete(pointerId);
              break;
            }
            case "gotpointercapture":
            case "lostpointercapture": {
              var _pointerId = nativeEvent.pointerId;
              queuedPointerCaptures.delete(_pointerId);
              break;
            }
          }
        }
        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
            var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
            if (blockedOn !== null) {
              var _fiber2 = getInstanceFromNode(blockedOn);
              if (_fiber2 !== null) {
                attemptContinuousHydration(_fiber2);
              }
            }
            return queuedEvent;
          }
          existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
          var targetContainers = existingQueuedEvent.targetContainers;
          if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
            targetContainers.push(targetContainer);
          }
          return existingQueuedEvent;
        }
        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          switch (domEventName) {
            case "focusin": {
              var focusEvent = nativeEvent;
              queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
              return true;
            }
            case "dragenter": {
              var dragEvent = nativeEvent;
              queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
              return true;
            }
            case "mouseover": {
              var mouseEvent = nativeEvent;
              queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
              return true;
            }
            case "pointerover": {
              var pointerEvent = nativeEvent;
              var pointerId = pointerEvent.pointerId;
              queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
              return true;
            }
            case "gotpointercapture": {
              var _pointerEvent = nativeEvent;
              var _pointerId2 = _pointerEvent.pointerId;
              queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
              return true;
            }
          }
          return false;
        }
        function attemptExplicitHydrationTarget(queuedTarget) {
          var targetInst = getClosestInstanceFromNode(queuedTarget.target);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted !== null) {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance4 = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance4 !== null) {
                  queuedTarget.blockedOn = instance4;
                  attemptHydrationAtPriority(queuedTarget.priority, function() {
                    attemptHydrationAtCurrentPriority(nearestMounted);
                  });
                  return;
                }
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (isRootDehydrated(root2)) {
                  queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                  return;
                }
              }
            }
          }
          queuedTarget.blockedOn = null;
        }
        function queueExplicitHydrationTarget(target) {
          var updatePriority = getCurrentUpdatePriority$1();
          var queuedTarget = {
            blockedOn: null,
            target,
            priority: updatePriority
          };
          var i = 0;
          for (; i < queuedExplicitHydrationTargets.length; i++) {
            if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {
              break;
            }
          }
          queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
          if (i === 0) {
            attemptExplicitHydrationTarget(queuedTarget);
          }
        }
        function attemptReplayContinuousQueuedEvent(queuedEvent) {
          if (queuedEvent.blockedOn !== null) {
            return false;
          }
          var targetContainers = queuedEvent.targetContainers;
          while (targetContainers.length > 0) {
            var targetContainer = targetContainers[0];
            var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
            if (nextBlockedOn === null) {
              {
                var nativeEvent = queuedEvent.nativeEvent;
                var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                setReplayingEvent(nativeEventClone);
                nativeEvent.target.dispatchEvent(nativeEventClone);
                resetReplayingEvent();
              }
            } else {
              var _fiber3 = getInstanceFromNode(nextBlockedOn);
              if (_fiber3 !== null) {
                attemptContinuousHydration(_fiber3);
              }
              queuedEvent.blockedOn = nextBlockedOn;
              return false;
            }
            targetContainers.shift();
          }
          return true;
        }
        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map2) {
          if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
            map2.delete(key);
          }
        }
        function replayUnblockedEvents() {
          hasScheduledReplayAttempt = false;
          if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
            queuedFocus = null;
          }
          if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
            queuedDrag = null;
          }
          if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
            queuedMouse = null;
          }
          queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
          queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
        }
        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
            if (!hasScheduledReplayAttempt) {
              hasScheduledReplayAttempt = true;
              Scheduler2.unstable_scheduleCallback(Scheduler2.unstable_NormalPriority, replayUnblockedEvents);
            }
          }
        }
        function retryIfBlockedOn(unblocked) {
          if (queuedDiscreteEvents.length > 0) {
            scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
            for (var i = 1; i < queuedDiscreteEvents.length; i++) {
              var queuedEvent = queuedDiscreteEvents[i];
              if (queuedEvent.blockedOn === unblocked) {
                queuedEvent.blockedOn = null;
              }
            }
          }
          if (queuedFocus !== null) {
            scheduleCallbackIfUnblocked(queuedFocus, unblocked);
          }
          if (queuedDrag !== null) {
            scheduleCallbackIfUnblocked(queuedDrag, unblocked);
          }
          if (queuedMouse !== null) {
            scheduleCallbackIfUnblocked(queuedMouse, unblocked);
          }
          var unblock = function(queuedEvent2) {
            return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
          };
          queuedPointers.forEach(unblock);
          queuedPointerCaptures.forEach(unblock);
          for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
            var queuedTarget = queuedExplicitHydrationTargets[_i];
            if (queuedTarget.blockedOn === unblocked) {
              queuedTarget.blockedOn = null;
            }
          }
          while (queuedExplicitHydrationTargets.length > 0) {
            var nextExplicitTarget = queuedExplicitHydrationTargets[0];
            if (nextExplicitTarget.blockedOn !== null) {
              break;
            } else {
              attemptExplicitHydrationTarget(nextExplicitTarget);
              if (nextExplicitTarget.blockedOn === null) {
                queuedExplicitHydrationTargets.shift();
              }
            }
          }
        }
        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
        var _enabled = true;
        function setEnabled(enabled) {
          _enabled = !!enabled;
        }
        function isEnabled() {
          return _enabled;
        }
        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
          var eventPriority = getEventPriority(domEventName);
          var listenerWrapper;
          switch (eventPriority) {
            case DiscreteEventPriority:
              listenerWrapper = dispatchDiscreteEvent;
              break;
            case ContinuousEventPriority:
              listenerWrapper = dispatchContinuousEvent;
              break;
            case DefaultEventPriority:
            default:
              listenerWrapper = dispatchEvent2;
              break;
          }
          return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
        }
        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(DiscreteEventPriority);
            dispatchEvent2(domEventName, eventSystemFlags, container, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = null;
          try {
            setCurrentUpdatePriority(ContinuousEventPriority);
            dispatchEvent2(domEventName, eventSystemFlags, container, nativeEvent);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig.transition = prevTransition;
          }
        }
        function dispatchEvent2(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          if (!_enabled) {
            return;
          }
          {
            dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          }
        }
        function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
          if (blockedOn === null) {
            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
            clearIfContinuousEvent(domEventName, nativeEvent);
            return;
          }
          if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
            nativeEvent.stopPropagation();
            return;
          }
          clearIfContinuousEvent(domEventName, nativeEvent);
          if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
            while (blockedOn !== null) {
              var fiber = getInstanceFromNode(blockedOn);
              if (fiber !== null) {
                attemptSynchronousHydration(fiber);
              }
              var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
              if (nextBlockedOn === null) {
                dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
              }
              if (nextBlockedOn === blockedOn) {
                break;
              }
              blockedOn = nextBlockedOn;
            }
            if (blockedOn !== null) {
              nativeEvent.stopPropagation();
            }
            return;
          }
          dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
        }
        var return_targetInst = null;
        function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
          return_targetInst = null;
          var nativeEventTarget = getEventTarget(nativeEvent);
          var targetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (targetInst !== null) {
            var nearestMounted = getNearestMountedFiber(targetInst);
            if (nearestMounted === null) {
              targetInst = null;
            } else {
              var tag = nearestMounted.tag;
              if (tag === SuspenseComponent) {
                var instance4 = getSuspenseInstanceFromFiber(nearestMounted);
                if (instance4 !== null) {
                  return instance4;
                }
                targetInst = null;
              } else if (tag === HostRoot) {
                var root2 = nearestMounted.stateNode;
                if (isRootDehydrated(root2)) {
                  return getContainerFromFiber(nearestMounted);
                }
                targetInst = null;
              } else if (nearestMounted !== targetInst) {
                targetInst = null;
              }
            }
          }
          return_targetInst = targetInst;
          return null;
        }
        function getEventPriority(domEventName) {
          switch (domEventName) {
            case "cancel":
            case "click":
            case "close":
            case "contextmenu":
            case "copy":
            case "cut":
            case "auxclick":
            case "dblclick":
            case "dragend":
            case "dragstart":
            case "drop":
            case "focusin":
            case "focusout":
            case "input":
            case "invalid":
            case "keydown":
            case "keypress":
            case "keyup":
            case "mousedown":
            case "mouseup":
            case "paste":
            case "pause":
            case "play":
            case "pointercancel":
            case "pointerdown":
            case "pointerup":
            case "ratechange":
            case "reset":
            case "resize":
            case "seeked":
            case "submit":
            case "touchcancel":
            case "touchend":
            case "touchstart":
            case "volumechange":
            case "change":
            case "selectionchange":
            case "textInput":
            case "compositionstart":
            case "compositionend":
            case "compositionupdate":
            case "beforeblur":
            case "afterblur":
            case "beforeinput":
            case "blur":
            case "fullscreenchange":
            case "focus":
            case "hashchange":
            case "popstate":
            case "select":
            case "selectstart":
              return DiscreteEventPriority;
            case "drag":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "mousemove":
            case "mouseout":
            case "mouseover":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "scroll":
            case "toggle":
            case "touchmove":
            case "wheel":
            case "mouseenter":
            case "mouseleave":
            case "pointerenter":
            case "pointerleave":
              return ContinuousEventPriority;
            case "message": {
              var schedulerPriority = getCurrentPriorityLevel();
              switch (schedulerPriority) {
                case ImmediatePriority:
                  return DiscreteEventPriority;
                case UserBlockingPriority:
                  return ContinuousEventPriority;
                case NormalPriority:
                case LowPriority:
                  return DefaultEventPriority;
                case IdlePriority:
                  return IdleEventPriority;
                default:
                  return DefaultEventPriority;
              }
            }
            default:
              return DefaultEventPriority;
          }
        }
        function addEventBubbleListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, false);
          return listener;
        }
        function addEventCaptureListener(target, eventType, listener) {
          target.addEventListener(eventType, listener, true);
          return listener;
        }
        function addEventCaptureListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            capture: true,
            passive
          });
          return listener;
        }
        function addEventBubbleListenerWithPassiveFlag(target, eventType, listener, passive) {
          target.addEventListener(eventType, listener, {
            passive
          });
          return listener;
        }
        var root = null;
        var startText = null;
        var fallbackText = null;
        function initialize(nativeEventTarget) {
          root = nativeEventTarget;
          startText = getText();
          return true;
        }
        function reset() {
          root = null;
          startText = null;
          fallbackText = null;
        }
        function getData() {
          if (fallbackText) {
            return fallbackText;
          }
          var start2;
          var startValue = startText;
          var startLength = startValue.length;
          var end2;
          var endValue = getText();
          var endLength = endValue.length;
          for (start2 = 0; start2 < startLength; start2++) {
            if (startValue[start2] !== endValue[start2]) {
              break;
            }
          }
          var minEnd = startLength - start2;
          for (end2 = 1; end2 <= minEnd; end2++) {
            if (startValue[startLength - end2] !== endValue[endLength - end2]) {
              break;
            }
          }
          var sliceTail = end2 > 1 ? 1 - end2 : void 0;
          fallbackText = endValue.slice(start2, sliceTail);
          return fallbackText;
        }
        function getText() {
          if ("value" in root) {
            return root.value;
          }
          return root.textContent;
        }
        function getEventCharCode(nativeEvent) {
          var charCode;
          var keyCode = nativeEvent.keyCode;
          if ("charCode" in nativeEvent) {
            charCode = nativeEvent.charCode;
            if (charCode === 0 && keyCode === 13) {
              charCode = 13;
            }
          } else {
            charCode = keyCode;
          }
          if (charCode === 10) {
            charCode = 13;
          }
          if (charCode >= 32 || charCode === 13) {
            return charCode;
          }
          return 0;
        }
        function functionThatReturnsTrue() {
          return true;
        }
        function functionThatReturnsFalse() {
          return false;
        }
        function createSyntheticEvent(Interface) {
          function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
            this.ud = reactName;
            this.te = targetInst;
            this.type = reactEventType;
            this.nativeEvent = nativeEvent;
            this.target = nativeEventTarget;
            this.currentTarget = null;
            for (var _propName in Interface) {
              if (!Interface.hasOwnProperty(_propName)) {
                continue;
              }
              var normalize3 = Interface[_propName];
              if (normalize3) {
                this[_propName] = normalize3(nativeEvent);
              } else {
                this[_propName] = nativeEvent[_propName];
              }
            }
            var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
            if (defaultPrevented) {
              this.isDefaultPrevented = functionThatReturnsTrue;
            } else {
              this.isDefaultPrevented = functionThatReturnsFalse;
            }
            this.isPropagationStopped = functionThatReturnsFalse;
            return this;
          }
          assign2(SyntheticBaseEvent.prototype, {
            preventDefault: function() {
              this.defaultPrevented = true;
              var event2 = this.nativeEvent;
              if (!event2) {
                return;
              }
              if (event2.preventDefault) {
                event2.preventDefault();
              } else if (typeof event2.returnValue !== "unknown") {
                event2.returnValue = false;
              }
              this.isDefaultPrevented = functionThatReturnsTrue;
            },
            stopPropagation: function() {
              var event2 = this.nativeEvent;
              if (!event2) {
                return;
              }
              if (event2.stopPropagation) {
                event2.stopPropagation();
              } else if (typeof event2.cancelBubble !== "unknown") {
                event2.cancelBubble = true;
              }
              this.isPropagationStopped = functionThatReturnsTrue;
            },
            /**
             * We release all dispatched `SyntheticEvent`s after each event loop, adding
             * them back into the pool. This allows a way to hold onto a reference that
             * won't be added back into the pool.
             */
            persist: function() {
            },
            /**
             * Checks if this event should be released back into the pool.
             *
             * @return {boolean} True if this should not be released, false otherwise.
             */
            isPersistent: functionThatReturnsTrue
          });
          return SyntheticBaseEvent;
        }
        var EventInterface = {
          eventPhase: 0,
          bubbles: 0,
          cancelable: 0,
          timeStamp: function(event2) {
            return event2.timeStamp || Date.now();
          },
          defaultPrevented: 0,
          isTrusted: 0
        };
        var SyntheticEvent = createSyntheticEvent(EventInterface);
        var UIEventInterface = assign2({}, EventInterface, {
          view: 0,
          detail: 0
        });
        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
        var lastMovementX;
        var lastMovementY;
        var lastMouseEvent;
        function updateMouseMovementPolyfillState(event2) {
          if (event2 !== lastMouseEvent) {
            if (lastMouseEvent && event2.type === "mousemove") {
              lastMovementX = event2.screenX - lastMouseEvent.screenX;
              lastMovementY = event2.screenY - lastMouseEvent.screenY;
            } else {
              lastMovementX = 0;
              lastMovementY = 0;
            }
            lastMouseEvent = event2;
          }
        }
        var MouseEventInterface = assign2({}, UIEventInterface, {
          screenX: 0,
          screenY: 0,
          clientX: 0,
          clientY: 0,
          pageX: 0,
          pageY: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          getModifierState: getEventModifierState,
          button: 0,
          buttons: 0,
          relatedTarget: function(event2) {
            if (event2.relatedTarget === void 0)
              return event2.fromElement === event2.srcElement ? event2.toElement : event2.fromElement;
            return event2.relatedTarget;
          },
          movementX: function(event2) {
            if ("movementX" in event2) {
              return event2.movementX;
            }
            updateMouseMovementPolyfillState(event2);
            return lastMovementX;
          },
          movementY: function(event2) {
            if ("movementY" in event2) {
              return event2.movementY;
            }
            return lastMovementY;
          }
        });
        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
        var DragEventInterface = assign2({}, MouseEventInterface, {
          dataTransfer: 0
        });
        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
        var FocusEventInterface = assign2({}, UIEventInterface, {
          relatedTarget: 0
        });
        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
        var AnimationEventInterface = assign2({}, EventInterface, {
          animationName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
        var ClipboardEventInterface = assign2({}, EventInterface, {
          clipboardData: function(event2) {
            return "clipboardData" in event2 ? event2.clipboardData : window.clipboardData;
          }
        });
        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
        var CompositionEventInterface = assign2({}, EventInterface, {
          data: 0
        });
        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
        var SyntheticInputEvent = SyntheticCompositionEvent;
        var normalizeKey = {
          Esc: "Escape",
          Spacebar: " ",
          Left: "ArrowLeft",
          Up: "ArrowUp",
          Right: "ArrowRight",
          Down: "ArrowDown",
          Del: "Delete",
          Win: "OS",
          Menu: "ContextMenu",
          Apps: "ContextMenu",
          Scroll: "ScrollLock",
          MozPrintableKey: "Unidentified"
        };
        var translateToKey = {
          "8": "Backspace",
          "9": "Tab",
          "12": "Clear",
          "13": "Enter",
          "16": "Shift",
          "17": "Control",
          "18": "Alt",
          "19": "Pause",
          "20": "CapsLock",
          "27": "Escape",
          "32": " ",
          "33": "PageUp",
          "34": "PageDown",
          "35": "End",
          "36": "Home",
          "37": "ArrowLeft",
          "38": "ArrowUp",
          "39": "ArrowRight",
          "40": "ArrowDown",
          "45": "Insert",
          "46": "Delete",
          "112": "F1",
          "113": "F2",
          "114": "F3",
          "115": "F4",
          "116": "F5",
          "117": "F6",
          "118": "F7",
          "119": "F8",
          "120": "F9",
          "121": "F10",
          "122": "F11",
          "123": "F12",
          "144": "NumLock",
          "145": "ScrollLock",
          "224": "Meta"
        };
        function getEventKey(nativeEvent) {
          if (nativeEvent.key) {
            var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
            if (key !== "Unidentified") {
              return key;
            }
          }
          if (nativeEvent.type === "keypress") {
            var charCode = getEventCharCode(nativeEvent);
            return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
          }
          if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
            return translateToKey[nativeEvent.keyCode] || "Unidentified";
          }
          return "";
        }
        var modifierKeyToProp = {
          Alt: "altKey",
          Control: "ctrlKey",
          Meta: "metaKey",
          Shift: "shiftKey"
        };
        function modifierStateGetter(keyArg) {
          var syntheticEvent = this;
          var nativeEvent = syntheticEvent.nativeEvent;
          if (nativeEvent.getModifierState) {
            return nativeEvent.getModifierState(keyArg);
          }
          var keyProp = modifierKeyToProp[keyArg];
          return keyProp ? !!nativeEvent[keyProp] : false;
        }
        function getEventModifierState(nativeEvent) {
          return modifierStateGetter;
        }
        var KeyboardEventInterface = assign2({}, UIEventInterface, {
          key: getEventKey,
          code: 0,
          location: 0,
          ctrlKey: 0,
          shiftKey: 0,
          altKey: 0,
          metaKey: 0,
          repeat: 0,
          locale: 0,
          getModifierState: getEventModifierState,
          // Legacy Interface
          charCode: function(event2) {
            if (event2.type === "keypress") {
              return getEventCharCode(event2);
            }
            return 0;
          },
          keyCode: function(event2) {
            if (event2.type === "keydown" || event2.type === "keyup") {
              return event2.keyCode;
            }
            return 0;
          },
          which: function(event2) {
            if (event2.type === "keypress") {
              return getEventCharCode(event2);
            }
            if (event2.type === "keydown" || event2.type === "keyup") {
              return event2.keyCode;
            }
            return 0;
          }
        });
        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
        var PointerEventInterface = assign2({}, MouseEventInterface, {
          pointerId: 0,
          width: 0,
          height: 0,
          pressure: 0,
          tangentialPressure: 0,
          tiltX: 0,
          tiltY: 0,
          twist: 0,
          pointerType: 0,
          isPrimary: 0
        });
        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
        var TouchEventInterface = assign2({}, UIEventInterface, {
          touches: 0,
          targetTouches: 0,
          changedTouches: 0,
          altKey: 0,
          metaKey: 0,
          ctrlKey: 0,
          shiftKey: 0,
          getModifierState: getEventModifierState
        });
        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
        var TransitionEventInterface = assign2({}, EventInterface, {
          propertyName: 0,
          elapsedTime: 0,
          pseudoElement: 0
        });
        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
        var WheelEventInterface = assign2({}, MouseEventInterface, {
          deltaX: function(event2) {
            return "deltaX" in event2 ? event2.deltaX : (
              // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
              "wheelDeltaX" in event2 ? -event2.wheelDeltaX : 0
            );
          },
          deltaY: function(event2) {
            return "deltaY" in event2 ? event2.deltaY : (
              // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
              "wheelDeltaY" in event2 ? -event2.wheelDeltaY : (
                // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                "wheelDelta" in event2 ? -event2.wheelDelta : 0
              )
            );
          },
          deltaZ: 0,
          // Browsers without "deltaMode" is reporting in raw wheel delta where one
          // notch on the scroll is always +/- 120, roughly equivalent to pixels.
          // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
          // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
          deltaMode: 0
        });
        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
        var END_KEYCODES = [9, 13, 27, 32];
        var START_KEYCODE = 229;
        var canUseCompositionEvent = canUseDOM3 && "CompositionEvent" in window;
        var documentMode = null;
        if (canUseDOM3 && "documentMode" in document) {
          documentMode = document.documentMode;
        }
        var canUseTextInputEvent = canUseDOM3 && "TextEvent" in window && !documentMode;
        var useFallbackCompositionData = canUseDOM3 && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
        var SPACEBAR_CODE = 32;
        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
        function registerEvents() {
          registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
          registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
          registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
        }
        var hasSpaceKeypress = false;
        function isKeypressCommand(nativeEvent) {
          return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
          !(nativeEvent.ctrlKey && nativeEvent.altKey);
        }
        function getCompositionEventType(domEventName) {
          switch (domEventName) {
            case "compositionstart":
              return "onCompositionStart";
            case "compositionend":
              return "onCompositionEnd";
            case "compositionupdate":
              return "onCompositionUpdate";
          }
        }
        function isFallbackCompositionStart(domEventName, nativeEvent) {
          return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
        }
        function isFallbackCompositionEnd(domEventName, nativeEvent) {
          switch (domEventName) {
            case "keyup":
              return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
            case "keydown":
              return nativeEvent.keyCode !== START_KEYCODE;
            case "keypress":
            case "mousedown":
            case "focusout":
              return true;
            default:
              return false;
          }
        }
        function getDataFromCustomEvent(nativeEvent) {
          var detail = nativeEvent.detail;
          if (typeof detail === "object" && "data" in detail) {
            return detail.data;
          }
          return null;
        }
        function isUsingKoreanIME(nativeEvent) {
          return nativeEvent.locale === "ko";
        }
        var isComposing = false;
        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var eventType;
          var fallbackData;
          if (canUseCompositionEvent) {
            eventType = getCompositionEventType(domEventName);
          } else if (!isComposing) {
            if (isFallbackCompositionStart(domEventName, nativeEvent)) {
              eventType = "onCompositionStart";
            }
          } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
            eventType = "onCompositionEnd";
          }
          if (!eventType) {
            return null;
          }
          if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
            if (!isComposing && eventType === "onCompositionStart") {
              isComposing = initialize(nativeEventTarget);
            } else if (eventType === "onCompositionEnd") {
              if (isComposing) {
                fallbackData = getData();
              }
            }
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
          if (listeners.length > 0) {
            var event2 = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event: event2,
              listeners
            });
            if (fallbackData) {
              event2.data = fallbackData;
            } else {
              var customData = getDataFromCustomEvent(nativeEvent);
              if (customData !== null) {
                event2.data = customData;
              }
            }
          }
        }
        function getNativeBeforeInputChars(domEventName, nativeEvent) {
          switch (domEventName) {
            case "compositionend":
              return getDataFromCustomEvent(nativeEvent);
            case "keypress":
              var which = nativeEvent.which;
              if (which !== SPACEBAR_CODE) {
                return null;
              }
              hasSpaceKeypress = true;
              return SPACEBAR_CHAR;
            case "textInput":
              var chars = nativeEvent.data;
              if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                return null;
              }
              return chars;
            default:
              return null;
          }
        }
        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
          if (isComposing) {
            if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
              var chars = getData();
              reset();
              isComposing = false;
              return chars;
            }
            return null;
          }
          switch (domEventName) {
            case "paste":
              return null;
            case "keypress":
              if (!isKeypressCommand(nativeEvent)) {
                if (nativeEvent.char && nativeEvent.char.length > 1) {
                  return nativeEvent.char;
                } else if (nativeEvent.which) {
                  return String.fromCharCode(nativeEvent.which);
                }
              }
              return null;
            case "compositionend":
              return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
            default:
              return null;
          }
        }
        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
          var chars;
          if (canUseTextInputEvent) {
            chars = getNativeBeforeInputChars(domEventName, nativeEvent);
          } else {
            chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
          }
          if (!chars) {
            return null;
          }
          var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
          if (listeners.length > 0) {
            var event2 = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
            dispatchQueue.push({
              event: event2,
              listeners
            });
            event2.data = chars;
          }
        }
        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
        }
        var supportedInputTypes = {
          color: true,
          date: true,
          datetime: true,
          "datetime-local": true,
          email: true,
          month: true,
          number: true,
          password: true,
          range: true,
          search: true,
          tel: true,
          text: true,
          time: true,
          url: true,
          week: true
        };
        function isTextInputElement(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          if (nodeName === "input") {
            return !!supportedInputTypes[elem.type];
          }
          if (nodeName === "textarea") {
            return true;
          }
          return false;
        }
        function isEventSupported(eventNameSuffix) {
          if (!canUseDOM3) {
            return false;
          }
          var eventName = "on" + eventNameSuffix;
          var isSupported = eventName in document;
          if (!isSupported) {
            var element6 = document.createElement("div");
            element6.setAttribute(eventName, "return;");
            isSupported = typeof element6[eventName] === "function";
          }
          return isSupported;
        }
        function registerEvents$1() {
          registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
        }
        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target) {
          enqueueStateRestore(target);
          var listeners = accumulateTwoPhaseListeners(inst, "onChange");
          if (listeners.length > 0) {
            var event2 = new SyntheticEvent("onChange", "change", null, nativeEvent, target);
            dispatchQueue.push({
              event: event2,
              listeners
            });
          }
        }
        var activeElement = null;
        var activeElementInst = null;
        function shouldUseChangeEvent(elem) {
          var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName === "select" || nodeName === "input" && elem.type === "file";
        }
        function manualDispatchChangeEvent(nativeEvent) {
          var dispatchQueue = [];
          createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
          batchedUpdates(runEventInBatch, dispatchQueue);
        }
        function runEventInBatch(dispatchQueue) {
          processDispatchQueue(dispatchQueue, 0);
        }
        function getInstIfValueChanged(targetInst) {
          var targetNode = getNodeFromInstance(targetInst);
          if (updateValueIfChanged(targetNode)) {
            return targetInst;
          }
        }
        function getTargetInstForChangeEvent(domEventName, targetInst) {
          if (domEventName === "change") {
            return targetInst;
          }
        }
        var isInputEventSupported = false;
        if (canUseDOM3) {
          isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
        }
        function startWatchingForValueChange(target, targetInst) {
          activeElement = target;
          activeElementInst = targetInst;
          activeElement.attachEvent("onpropertychange", handlePropertyChange);
        }
        function stopWatchingForValueChange() {
          if (!activeElement) {
            return;
          }
          activeElement.detachEvent("onpropertychange", handlePropertyChange);
          activeElement = null;
          activeElementInst = null;
        }
        function handlePropertyChange(nativeEvent) {
          if (nativeEvent.propertyName !== "value") {
            return;
          }
          if (getInstIfValueChanged(activeElementInst)) {
            manualDispatchChangeEvent(nativeEvent);
          }
        }
        function handleEventsForInputEventPolyfill(domEventName, target, targetInst) {
          if (domEventName === "focusin") {
            stopWatchingForValueChange();
            startWatchingForValueChange(target, targetInst);
          } else if (domEventName === "focusout") {
            stopWatchingForValueChange();
          }
        }
        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
          if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
            return getInstIfValueChanged(activeElementInst);
          }
        }
        function shouldUseClickEvent(elem) {
          var nodeName = elem.nodeName;
          return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
        }
        function getTargetInstForClickEvent(domEventName, targetInst) {
          if (domEventName === "click") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
          if (domEventName === "input" || domEventName === "change") {
            return getInstIfValueChanged(targetInst);
          }
        }
        function handleControlledInputBlur(node14) {
          var state = node14.fa;
          if (!state || !state.controlled || node14.type !== "number") {
            return;
          }
          {
            setDefaultValue(node14, "number", node14.value);
          }
        }
        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          var getTargetInstFunc, handleEventFunc;
          if (shouldUseChangeEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForChangeEvent;
          } else if (isTextInputElement(targetNode)) {
            if (isInputEventSupported) {
              getTargetInstFunc = getTargetInstForInputOrChangeEvent;
            } else {
              getTargetInstFunc = getTargetInstForInputEventPolyfill;
              handleEventFunc = handleEventsForInputEventPolyfill;
            }
          } else if (shouldUseClickEvent(targetNode)) {
            getTargetInstFunc = getTargetInstForClickEvent;
          }
          if (getTargetInstFunc) {
            var inst = getTargetInstFunc(domEventName, targetInst);
            if (inst) {
              createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
              return;
            }
          }
          if (handleEventFunc) {
            handleEventFunc(domEventName, targetNode, targetInst);
          }
          if (domEventName === "focusout") {
            handleControlledInputBlur(targetNode);
          }
        }
        function registerEvents$2() {
          registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
          registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
          registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
          registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
        }
        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
          var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
          if (isOverEvent && !isReplayingEvent(nativeEvent)) {
            var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
            if (related) {
              if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                return;
              }
            }
          }
          if (!isOutEvent && !isOverEvent) {
            return;
          }
          var win;
          if (nativeEventTarget.window === nativeEventTarget) {
            win = nativeEventTarget;
          } else {
            var doc = nativeEventTarget.ownerDocument;
            if (doc) {
              win = doc.defaultView || doc.parentWindow;
            } else {
              win = window;
            }
          }
          var from;
          var to;
          if (isOutEvent) {
            var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
            from = targetInst;
            to = _related ? getClosestInstanceFromNode(_related) : null;
            if (to !== null) {
              var nearestMounted = getNearestMountedFiber(to);
              if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
                to = null;
              }
            }
          } else {
            from = null;
            to = targetInst;
          }
          if (from === to) {
            return;
          }
          var SyntheticEventCtor = SyntheticMouseEvent;
          var leaveEventType = "onMouseLeave";
          var enterEventType = "onMouseEnter";
          var eventTypePrefix = "mouse";
          if (domEventName === "pointerout" || domEventName === "pointerover") {
            SyntheticEventCtor = SyntheticPointerEvent;
            leaveEventType = "onPointerLeave";
            enterEventType = "onPointerEnter";
            eventTypePrefix = "pointer";
          }
          var fromNode = from == null ? win : getNodeFromInstance(from);
          var toNode = to == null ? win : getNodeFromInstance(to);
          var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
          leave.target = fromNode;
          leave.relatedTarget = toNode;
          var enter = null;
          var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
          if (nativeTargetInst === targetInst) {
            var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
            enterEvent.target = toNode;
            enterEvent.relatedTarget = fromNode;
            enter = enterEvent;
          }
          accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
        }
        function is(x, y) {
          return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is;
        function shallowEqual(objA, objB) {
          if (objectIs(objA, objB)) {
            return true;
          }
          if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
            return false;
          }
          var keysA = Object.keys(objA);
          var keysB = Object.keys(objB);
          if (keysA.length !== keysB.length) {
            return false;
          }
          for (var i = 0; i < keysA.length; i++) {
            var currentKey = keysA[i];
            if (!hasOwnProperty3.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
              return false;
            }
          }
          return true;
        }
        function getLeafNode(node14) {
          while (node14 && node14.firstChild) {
            node14 = node14.firstChild;
          }
          return node14;
        }
        function getSiblingNode(node14) {
          while (node14) {
            if (node14.nextSibling) {
              return node14.nextSibling;
            }
            node14 = node14.parentNode;
          }
        }
        function getNodeForCharacterOffset(root2, offset4) {
          var node14 = getLeafNode(root2);
          var nodeStart = 0;
          var nodeEnd = 0;
          while (node14) {
            if (node14.nodeType === TEXT_NODE) {
              nodeEnd = nodeStart + node14.textContent.length;
              if (nodeStart <= offset4 && nodeEnd >= offset4) {
                return {
                  node: node14,
                  offset: offset4 - nodeStart
                };
              }
              nodeStart = nodeEnd;
            }
            node14 = getLeafNode(getSiblingNode(node14));
          }
        }
        function getOffsets2(outerNode) {
          var ownerDocument2 = outerNode.ownerDocument;
          var win = ownerDocument2 && ownerDocument2.defaultView || window;
          var selection = win.getSelection && win.getSelection();
          if (!selection || selection.rangeCount === 0) {
            return null;
          }
          var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
          try {
            anchorNode.nodeType;
            focusNode.nodeType;
          } catch (e) {
            return null;
          }
          return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
        }
        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
          var length = 0;
          var start2 = -1;
          var end2 = -1;
          var indexWithinAnchor = 0;
          var indexWithinFocus = 0;
          var node14 = outerNode;
          var parentNode = null;
          outer:
            while (true) {
              var next = null;
              while (true) {
                if (node14 === anchorNode && (anchorOffset === 0 || node14.nodeType === TEXT_NODE)) {
                  start2 = length + anchorOffset;
                }
                if (node14 === focusNode && (focusOffset === 0 || node14.nodeType === TEXT_NODE)) {
                  end2 = length + focusOffset;
                }
                if (node14.nodeType === TEXT_NODE) {
                  length += node14.nodeValue.length;
                }
                if ((next = node14.firstChild) === null) {
                  break;
                }
                parentNode = node14;
                node14 = next;
              }
              while (true) {
                if (node14 === outerNode) {
                  break outer;
                }
                if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                  start2 = length;
                }
                if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                  end2 = length;
                }
                if ((next = node14.nextSibling) !== null) {
                  break;
                }
                node14 = parentNode;
                parentNode = node14.parentNode;
              }
              node14 = next;
            }
          if (start2 === -1 || end2 === -1) {
            return null;
          }
          return {
            start: start2,
            end: end2
          };
        }
        function setOffsets(node14, offsets) {
          var doc = node14.ownerDocument || document;
          var win = doc && doc.defaultView || window;
          if (!win.getSelection) {
            return;
          }
          var selection = win.getSelection();
          var length = node14.textContent.length;
          var start2 = Math.min(offsets.start, length);
          var end2 = offsets.end === void 0 ? start2 : Math.min(offsets.end, length);
          if (!selection.extend && start2 > end2) {
            var temp = end2;
            end2 = start2;
            start2 = temp;
          }
          var startMarker = getNodeForCharacterOffset(node14, start2);
          var endMarker = getNodeForCharacterOffset(node14, end2);
          if (startMarker && endMarker) {
            if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
              return;
            }
            var range3 = doc.createRange();
            range3.setStart(startMarker.node, startMarker.offset);
            selection.removeAllRanges();
            if (start2 > end2) {
              selection.addRange(range3);
              selection.extend(endMarker.node, endMarker.offset);
            } else {
              range3.setEnd(endMarker.node, endMarker.offset);
              selection.addRange(range3);
            }
          }
        }
        function isTextNode(node14) {
          return node14 && node14.nodeType === TEXT_NODE;
        }
        function containsNode(outerNode, innerNode) {
          if (!outerNode || !innerNode) {
            return false;
          } else if (outerNode === innerNode) {
            return true;
          } else if (isTextNode(outerNode)) {
            return false;
          } else if (isTextNode(innerNode)) {
            return containsNode(outerNode, innerNode.parentNode);
          } else if ("contains" in outerNode) {
            return outerNode.contains(innerNode);
          } else if (outerNode.compareDocumentPosition) {
            return !!(outerNode.compareDocumentPosition(innerNode) & 16);
          } else {
            return false;
          }
        }
        function isInDocument(node14) {
          return node14 && node14.ownerDocument && containsNode(node14.ownerDocument.documentElement, node14);
        }
        function isSameOriginFrame(iframe) {
          try {
            return typeof iframe.contentWindow.location.href === "string";
          } catch (err2) {
            return false;
          }
        }
        function getActiveElementDeep() {
          var win = window;
          var element6 = getActiveElement2();
          while (element6 instanceof win.HTMLIFrameElement) {
            if (isSameOriginFrame(element6)) {
              win = element6.contentWindow;
            } else {
              return element6;
            }
            element6 = getActiveElement2(win.document);
          }
          return element6;
        }
        function hasSelectionCapabilities(elem) {
          var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
          return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
        }
        function getSelectionInformation() {
          var focusedElem = getActiveElementDeep();
          return {
            focusedElem,
            selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
          };
        }
        function restoreSelection(priorSelectionInformation) {
          var curFocusedElem = getActiveElementDeep();
          var priorFocusedElem = priorSelectionInformation.focusedElem;
          var priorSelectionRange = priorSelectionInformation.selectionRange;
          if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
            if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
              setSelection2(priorFocusedElem, priorSelectionRange);
            }
            var ancestors = [];
            var ancestor = priorFocusedElem;
            while (ancestor = ancestor.parentNode) {
              if (ancestor.nodeType === ELEMENT_NODE) {
                ancestors.push({
                  element: ancestor,
                  left: ancestor.scrollLeft,
                  top: ancestor.scrollTop
                });
              }
            }
            if (typeof priorFocusedElem.focus === "function") {
              priorFocusedElem.focus();
            }
            for (var i = 0; i < ancestors.length; i++) {
              var info = ancestors[i];
              info.element.scrollLeft = info.left;
              info.element.scrollTop = info.top;
            }
          }
        }
        function getSelection(input) {
          var selection;
          if ("selectionStart" in input) {
            selection = {
              start: input.selectionStart,
              end: input.selectionEnd
            };
          } else {
            selection = getOffsets2(input);
          }
          return selection || {
            start: 0,
            end: 0
          };
        }
        function setSelection2(input, offsets) {
          var start2 = offsets.start;
          var end2 = offsets.end;
          if (end2 === void 0) {
            end2 = start2;
          }
          if ("selectionStart" in input) {
            input.selectionStart = start2;
            input.selectionEnd = Math.min(end2, input.value.length);
          } else {
            setOffsets(input, offsets);
          }
        }
        var skipSelectionChangeEvent = canUseDOM3 && "documentMode" in document && document.documentMode <= 11;
        function registerEvents$3() {
          registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
        }
        var activeElement$1 = null;
        var activeElementInst$1 = null;
        var lastSelection = null;
        var mouseDown = false;
        function getSelection$1(node14) {
          if ("selectionStart" in node14 && hasSelectionCapabilities(node14)) {
            return {
              start: node14.selectionStart,
              end: node14.selectionEnd
            };
          } else {
            var win = node14.ownerDocument && node14.ownerDocument.defaultView || window;
            var selection = win.getSelection();
            return {
              anchorNode: selection.anchorNode,
              anchorOffset: selection.anchorOffset,
              focusNode: selection.focusNode,
              focusOffset: selection.focusOffset
            };
          }
        }
        function getEventTargetDocument(eventTarget) {
          return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
        }
        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
          var doc = getEventTargetDocument(nativeEventTarget);
          if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement2(doc)) {
            return;
          }
          var currentSelection = getSelection$1(activeElement$1);
          if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
            lastSelection = currentSelection;
            var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
            if (listeners.length > 0) {
              var event2 = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: event2,
                listeners
              });
              event2.target = activeElement$1;
            }
          }
        }
        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
          switch (domEventName) {
            case "focusin":
              if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                activeElement$1 = targetNode;
                activeElementInst$1 = targetInst;
                lastSelection = null;
              }
              break;
            case "focusout":
              activeElement$1 = null;
              activeElementInst$1 = null;
              lastSelection = null;
              break;
            case "mousedown":
              mouseDown = true;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              mouseDown = false;
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
              break;
            case "selectionchange":
              if (skipSelectionChangeEvent) {
                break;
              }
            case "keydown":
            case "keyup":
              constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
          }
        }
        function makePrefixMap(styleProp, eventName) {
          var prefixes2 = {};
          prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
          prefixes2["Webkit" + styleProp] = "webkit" + eventName;
          prefixes2["Moz" + styleProp] = "moz" + eventName;
          return prefixes2;
        }
        var vendorPrefixes = {
          animationend: makePrefixMap("Animation", "AnimationEnd"),
          animationiteration: makePrefixMap("Animation", "AnimationIteration"),
          animationstart: makePrefixMap("Animation", "AnimationStart"),
          transitionend: makePrefixMap("Transition", "TransitionEnd")
        };
        var prefixedEventNames = {};
        var style = {};
        if (canUseDOM3) {
          style = document.createElement("div").style;
          if (!("AnimationEvent" in window)) {
            delete vendorPrefixes.animationend.animation;
            delete vendorPrefixes.animationiteration.animation;
            delete vendorPrefixes.animationstart.animation;
          }
          if (!("TransitionEvent" in window)) {
            delete vendorPrefixes.transitionend.transition;
          }
        }
        function getVendorPrefixedEventName(eventName) {
          if (prefixedEventNames[eventName]) {
            return prefixedEventNames[eventName];
          } else if (!vendorPrefixes[eventName]) {
            return eventName;
          }
          var prefixMap = vendorPrefixes[eventName];
          for (var styleProp in prefixMap) {
            if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
              return prefixedEventNames[eventName] = prefixMap[styleProp];
            }
          }
          return eventName;
        }
        var ANIMATION_END = getVendorPrefixedEventName("animationend");
        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
        var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
        var simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
        function registerSimpleEvent(domEventName, reactName) {
          topLevelEventsToReactNames.set(domEventName, reactName);
          registerTwoPhaseEvent(reactName, [domEventName]);
        }
        function registerSimpleEvents() {
          for (var i = 0; i < simpleEventPluginEvents.length; i++) {
            var eventName = simpleEventPluginEvents[i];
            var domEventName = eventName.toLowerCase();
            var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
            registerSimpleEvent(domEventName, "on" + capitalizedEvent);
          }
          registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
          registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
          registerSimpleEvent(ANIMATION_START, "onAnimationStart");
          registerSimpleEvent("dblclick", "onDoubleClick");
          registerSimpleEvent("focusin", "onFocus");
          registerSimpleEvent("focusout", "onBlur");
          registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
        }
        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          var reactName = topLevelEventsToReactNames.get(domEventName);
          if (reactName === void 0) {
            return;
          }
          var SyntheticEventCtor = SyntheticEvent;
          var reactEventType = domEventName;
          switch (domEventName) {
            case "keypress":
              if (getEventCharCode(nativeEvent) === 0) {
                return;
              }
            case "keydown":
            case "keyup":
              SyntheticEventCtor = SyntheticKeyboardEvent;
              break;
            case "focusin":
              reactEventType = "focus";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "focusout":
              reactEventType = "blur";
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "beforeblur":
            case "afterblur":
              SyntheticEventCtor = SyntheticFocusEvent;
              break;
            case "click":
              if (nativeEvent.button === 2) {
                return;
              }
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              SyntheticEventCtor = SyntheticMouseEvent;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              SyntheticEventCtor = SyntheticDragEvent;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              SyntheticEventCtor = SyntheticTouchEvent;
              break;
            case ANIMATION_END:
            case ANIMATION_ITERATION:
            case ANIMATION_START:
              SyntheticEventCtor = SyntheticAnimationEvent;
              break;
            case TRANSITION_END:
              SyntheticEventCtor = SyntheticTransitionEvent;
              break;
            case "scroll":
              SyntheticEventCtor = SyntheticUIEvent;
              break;
            case "wheel":
              SyntheticEventCtor = SyntheticWheelEvent;
              break;
            case "copy":
            case "cut":
            case "paste":
              SyntheticEventCtor = SyntheticClipboardEvent;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              SyntheticEventCtor = SyntheticPointerEvent;
              break;
          }
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          {
            var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
            // nonDelegatedEvents list in DOMPluginEventSystem.
            // Then we can remove this special list.
            // This is a breaking change that can wait until React 18.
            domEventName === "scroll";
            var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
            if (_listeners.length > 0) {
              var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
              dispatchQueue.push({
                event: _event,
                listeners: _listeners
              });
            }
          }
        }
        registerSimpleEvents();
        registerEvents$2();
        registerEvents$1();
        registerEvents$3();
        registerEvents();
        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
          extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
          if (shouldProcessPolyfillPlugins) {
            extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
            extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
          }
        }
        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
        function executeDispatch(event2, listener, currentTarget) {
          var type = event2.type || "unknown-event";
          event2.currentTarget = currentTarget;
          invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event2);
          event2.currentTarget = null;
        }
        function processDispatchQueueItemsInOrder(event2, dispatchListeners, inCapturePhase) {
          var previousInstance;
          if (inCapturePhase) {
            for (var i = dispatchListeners.length - 1; i >= 0; i--) {
              var _dispatchListeners$i = dispatchListeners[i], instance4 = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
              if (instance4 !== previousInstance && event2.isPropagationStopped()) {
                return;
              }
              executeDispatch(event2, listener, currentTarget);
              previousInstance = instance4;
            }
          } else {
            for (var _i = 0; _i < dispatchListeners.length; _i++) {
              var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
              if (_instance !== previousInstance && event2.isPropagationStopped()) {
                return;
              }
              executeDispatch(event2, _listener, _currentTarget);
              previousInstance = _instance;
            }
          }
        }
        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
          var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
          for (var i = 0; i < dispatchQueue.length; i++) {
            var _dispatchQueue$i = dispatchQueue[i], event2 = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
            processDispatchQueueItemsInOrder(event2, listeners, inCapturePhase);
          }
          rethrowCaughtError();
        }
        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var nativeEventTarget = getEventTarget(nativeEvent);
          var dispatchQueue = [];
          extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
          processDispatchQueue(dispatchQueue, eventSystemFlags);
        }
        function listenToNonDelegatedEvent(domEventName, targetElement) {
          {
            if (!nonDelegatedEvents.has(domEventName)) {
              error3('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var isCapturePhaseListener = false;
          var listenerSet = getEventListenerSet(targetElement);
          var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
          if (!listenerSet.has(listenerSetKey)) {
            addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
            listenerSet.add(listenerSetKey);
          }
        }
        function listenToNativeEvent(domEventName, isCapturePhaseListener, target) {
          {
            if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
              error3('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
            }
          }
          var eventSystemFlags = 0;
          if (isCapturePhaseListener) {
            eventSystemFlags |= IS_CAPTURE_PHASE;
          }
          addTrappedEventListener(target, domEventName, eventSystemFlags, isCapturePhaseListener);
        }
        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
        function listenToAllSupportedEvents(rootContainerElement) {
          if (!rootContainerElement[listeningMarker]) {
            rootContainerElement[listeningMarker] = true;
            allNativeEvents.forEach(function(domEventName) {
              if (domEventName !== "selectionchange") {
                if (!nonDelegatedEvents.has(domEventName)) {
                  listenToNativeEvent(domEventName, false, rootContainerElement);
                }
                listenToNativeEvent(domEventName, true, rootContainerElement);
              }
            });
            var ownerDocument2 = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
            if (ownerDocument2 !== null) {
              if (!ownerDocument2[listeningMarker]) {
                ownerDocument2[listeningMarker] = true;
                listenToNativeEvent("selectionchange", false, ownerDocument2);
              }
            }
          }
        }
        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
          var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
          var isPassiveListener = void 0;
          if (passiveBrowserEventsSupported) {
            if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
              isPassiveListener = true;
            }
          }
          targetContainer = targetContainer;
          var unsubscribeListener;
          if (isCapturePhaseListener) {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
            }
          } else {
            if (isPassiveListener !== void 0) {
              unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
            } else {
              unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
            }
          }
        }
        function isMatchingRootContainer(grandContainer, targetContainer) {
          return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
        }
        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
          var ancestorInst = targetInst;
          if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
            var targetContainerNode = targetContainer;
            if (targetInst !== null) {
              var node14 = targetInst;
              mainLoop:
                while (true) {
                  if (node14 === null) {
                    return;
                  }
                  var nodeTag = node14.tag;
                  if (nodeTag === HostRoot || nodeTag === HostPortal) {
                    var container = node14.stateNode.containerInfo;
                    if (isMatchingRootContainer(container, targetContainerNode)) {
                      break;
                    }
                    if (nodeTag === HostPortal) {
                      var grandNode = node14.return;
                      while (grandNode !== null) {
                        var grandTag = grandNode.tag;
                        if (grandTag === HostRoot || grandTag === HostPortal) {
                          var grandContainer = grandNode.stateNode.containerInfo;
                          if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                            return;
                          }
                        }
                        grandNode = grandNode.return;
                      }
                    }
                    while (container !== null) {
                      var parentNode = getClosestInstanceFromNode(container);
                      if (parentNode === null) {
                        return;
                      }
                      var parentTag = parentNode.tag;
                      if (parentTag === HostComponent || parentTag === HostText) {
                        node14 = ancestorInst = parentNode;
                        continue mainLoop;
                      }
                      container = container.parentNode;
                    }
                  }
                  node14 = node14.return;
                }
            }
          }
          batchedUpdates(function() {
            return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
          });
        }
        function createDispatchListener(instance4, listener, currentTarget) {
          return {
            instance: instance4,
            listener,
            currentTarget
          };
        }
        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
          var captureName = reactName !== null ? reactName + "Capture" : null;
          var reactEventName = inCapturePhase ? captureName : reactName;
          var listeners = [];
          var instance4 = targetFiber;
          var lastHostComponent = null;
          while (instance4 !== null) {
            var _instance2 = instance4, stateNode = _instance2.stateNode, tag = _instance2.tag;
            if (tag === HostComponent && stateNode !== null) {
              lastHostComponent = stateNode;
              if (reactEventName !== null) {
                var listener = getListener(instance4, reactEventName);
                if (listener != null) {
                  listeners.push(createDispatchListener(instance4, listener, lastHostComponent));
                }
              }
            }
            if (accumulateTargetOnly) {
              break;
            }
            instance4 = instance4.return;
          }
          return listeners;
        }
        function accumulateTwoPhaseListeners(targetFiber, reactName) {
          var captureName = reactName + "Capture";
          var listeners = [];
          var instance4 = targetFiber;
          while (instance4 !== null) {
            var _instance3 = instance4, stateNode = _instance3.stateNode, tag = _instance3.tag;
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              var captureListener = getListener(instance4, captureName);
              if (captureListener != null) {
                listeners.unshift(createDispatchListener(instance4, captureListener, currentTarget));
              }
              var bubbleListener = getListener(instance4, reactName);
              if (bubbleListener != null) {
                listeners.push(createDispatchListener(instance4, bubbleListener, currentTarget));
              }
            }
            instance4 = instance4.return;
          }
          return listeners;
        }
        function getParent(inst) {
          if (inst === null) {
            return null;
          }
          do {
            inst = inst.return;
          } while (inst && inst.tag !== HostComponent);
          if (inst) {
            return inst;
          }
          return null;
        }
        function getLowestCommonAncestor(instA, instB) {
          var nodeA = instA;
          var nodeB = instB;
          var depthA = 0;
          for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
            depthA++;
          }
          var depthB = 0;
          for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
            depthB++;
          }
          while (depthA - depthB > 0) {
            nodeA = getParent(nodeA);
            depthA--;
          }
          while (depthB - depthA > 0) {
            nodeB = getParent(nodeB);
            depthB--;
          }
          var depth = depthA;
          while (depth--) {
            if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
              return nodeA;
            }
            nodeA = getParent(nodeA);
            nodeB = getParent(nodeB);
          }
          return null;
        }
        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event2, target, common, inCapturePhase) {
          var registrationName = event2.ud;
          var listeners = [];
          var instance4 = target;
          while (instance4 !== null) {
            if (instance4 === common) {
              break;
            }
            var _instance4 = instance4, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
            if (alternate !== null && alternate === common) {
              break;
            }
            if (tag === HostComponent && stateNode !== null) {
              var currentTarget = stateNode;
              if (inCapturePhase) {
                var captureListener = getListener(instance4, registrationName);
                if (captureListener != null) {
                  listeners.unshift(createDispatchListener(instance4, captureListener, currentTarget));
                }
              } else if (!inCapturePhase) {
                var bubbleListener = getListener(instance4, registrationName);
                if (bubbleListener != null) {
                  listeners.push(createDispatchListener(instance4, bubbleListener, currentTarget));
                }
              }
            }
            instance4 = instance4.return;
          }
          if (listeners.length !== 0) {
            dispatchQueue.push({
              event: event2,
              listeners
            });
          }
        }
        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
          var common = from && to ? getLowestCommonAncestor(from, to) : null;
          if (from !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
          }
          if (to !== null && enterEvent !== null) {
            accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
          }
        }
        function getListenerSetKey(domEventName, capture) {
          return domEventName + "__" + (capture ? "capture" : "bubble");
        }
        var didWarnInvalidHydration = false;
        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
        var AUTOFOCUS = "autoFocus";
        var CHILDREN = "children";
        var STYLE = "style";
        var HTML$1 = "__html";
        var warnedUnknownTags;
        var validatePropertiesInDevelopment;
        var warnForPropDifference;
        var warnForExtraAttributes;
        var warnForInvalidEventListener;
        var canDiffStyleForHydrationWarning;
        var normalizeHTML;
        {
          warnedUnknownTags = {
            // There are working polyfills for <dialog>. Let people use it.
            dialog: true,
            // Electron ships a custom <webview> tag to display external web content in
            // an isolated frame and process.
            // This tag is not present in non Electron environments such as JSDom which
            // is often used for testing purposes.
            // @see https://electronjs.org/docs/api/webview-tag
            webview: true
          };
          validatePropertiesInDevelopment = function(type, props) {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, {
              registrationNameDependencies,
              possibleRegistrationNames
            });
          };
          canDiffStyleForHydrationWarning = canUseDOM3 && !document.documentMode;
          warnForPropDifference = function(propName, serverValue, clientValue) {
            if (didWarnInvalidHydration) {
              return;
            }
            var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
            var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
            if (normalizedServerValue === normalizedClientValue) {
              return;
            }
            didWarnInvalidHydration = true;
            error3("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
          };
          warnForExtraAttributes = function(attributeNames) {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            var names = [];
            attributeNames.forEach(function(name2) {
              names.push(name2);
            });
            error3("Extra attributes from the server: %s", names);
          };
          warnForInvalidEventListener = function(registrationName, listener) {
            if (listener === false) {
              error3("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
            } else {
              error3("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
            }
          };
          normalizeHTML = function(parent, html) {
            var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
            testElement.innerHTML = html;
            return testElement.innerHTML;
          };
        }
        var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
        var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
        function normalizeMarkupForTextOrAttribute(markup) {
          {
            checkHtmlStringCoercion(markup);
          }
          var markupString = typeof markup === "string" ? markup : "" + markup;
          return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
        }
        function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
          var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
          var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
          if (normalizedServerText === normalizedClientText) {
            return;
          }
          if (shouldWarnDev) {
            {
              if (!didWarnInvalidHydration) {
                didWarnInvalidHydration = true;
                error3('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
              }
            }
          }
          if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
            throw new Error("Text content does not match server-rendered HTML.");
          }
        }
        function getOwnerDocumentFromRootContainer(rootContainerElement) {
          return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
        }
        function noop5() {
        }
        function trapClickOnNonInteractiveElement(node14) {
          node14.onclick = noop5;
        }
        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
          for (var propKey in nextProps) {
            if (!nextProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = nextProps[propKey];
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              setValueForStyles(domElement, nextProp);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              if (nextHtml != null) {
                setInnerHTML(domElement, nextHtml);
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                var canSetTextContent = tag !== "textarea" || nextProp !== "";
                if (canSetTextContent) {
                  setTextContent(domElement, nextProp);
                }
              } else if (typeof nextProp === "number") {
                setTextContent(domElement, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (nextProp != null) {
              setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
            }
          }
        }
        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
          for (var i = 0; i < updatePayload.length; i += 2) {
            var propKey = updatePayload[i];
            var propValue = updatePayload[i + 1];
            if (propKey === STYLE) {
              setValueForStyles(domElement, propValue);
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              setInnerHTML(domElement, propValue);
            } else if (propKey === CHILDREN) {
              setTextContent(domElement, propValue);
            } else {
              setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
            }
          }
        }
        function createElement168(type, props, rootContainerElement, parentNamespace) {
          var isCustomComponentTag;
          var ownerDocument2 = getOwnerDocumentFromRootContainer(rootContainerElement);
          var domElement;
          var namespaceURI = parentNamespace;
          if (namespaceURI === HTML_NAMESPACE) {
            namespaceURI = getIntrinsicNamespace(type);
          }
          if (namespaceURI === HTML_NAMESPACE) {
            {
              isCustomComponentTag = isCustomComponent(type, props);
              if (!isCustomComponentTag && type !== type.toLowerCase()) {
                error3("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
            if (type === "script") {
              var div = ownerDocument2.createElement("div");
              div.innerHTML = "<script><\/script>";
              var firstChild = div.firstChild;
              domElement = div.removeChild(firstChild);
            } else if (typeof props.is === "string") {
              domElement = ownerDocument2.createElement(type, {
                is: props.is
              });
            } else {
              domElement = ownerDocument2.createElement(type);
              if (type === "select") {
                var node14 = domElement;
                if (props.multiple) {
                  node14.multiple = true;
                } else if (props.size) {
                  node14.size = props.size;
                }
              }
            }
          } else {
            domElement = ownerDocument2.createElementNS(namespaceURI, type);
          }
          {
            if (namespaceURI === HTML_NAMESPACE) {
              if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty3.call(warnedUnknownTags, type)) {
                warnedUnknownTags[type] = true;
                error3("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
              }
            }
          }
          return domElement;
        }
        function createTextNode(text, rootContainerElement) {
          return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
        }
        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
          var isCustomComponentTag = isCustomComponent(tag, rawProps);
          {
            validatePropertiesInDevelopment(tag, rawProps);
          }
          var props;
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              props = rawProps;
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              props = rawProps;
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              props = rawProps;
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              props = rawProps;
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              props = rawProps;
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              props = getHostProps(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              props = rawProps;
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              props = getHostProps$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              props = getHostProps$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            default:
              props = rawProps;
          }
          assertValidProps(tag, props);
          setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, false);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "option":
              postMountWrapper$1(domElement, rawProps);
              break;
            case "select":
              postMountWrapper$2(domElement, rawProps);
              break;
            default:
              if (typeof props.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
        }
        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
          {
            validatePropertiesInDevelopment(tag, nextRawProps);
          }
          var updatePayload = null;
          var lastProps;
          var nextProps;
          switch (tag) {
            case "input":
              lastProps = getHostProps(domElement, lastRawProps);
              nextProps = getHostProps(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "select":
              lastProps = getHostProps$1(domElement, lastRawProps);
              nextProps = getHostProps$1(domElement, nextRawProps);
              updatePayload = [];
              break;
            case "textarea":
              lastProps = getHostProps$2(domElement, lastRawProps);
              nextProps = getHostProps$2(domElement, nextRawProps);
              updatePayload = [];
              break;
            default:
              lastProps = lastRawProps;
              nextProps = nextRawProps;
              if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          assertValidProps(tag, nextProps);
          var propKey;
          var styleName;
          var styleUpdates = null;
          for (propKey in lastProps) {
            if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
              continue;
            }
            if (propKey === STYLE) {
              var lastStyle = lastProps[propKey];
              for (styleName in lastStyle) {
                if (lastStyle.hasOwnProperty(styleName)) {
                  if (!styleUpdates) {
                    styleUpdates = {};
                  }
                  styleUpdates[styleName] = "";
                }
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
              ;
            else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (propKey === AUTOFOCUS)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (!updatePayload) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, null);
            }
          }
          for (propKey in nextProps) {
            var nextProp = nextProps[propKey];
            var lastProp = lastProps != null ? lastProps[propKey] : void 0;
            if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
              continue;
            }
            if (propKey === STYLE) {
              {
                if (nextProp) {
                  Object.freeze(nextProp);
                }
              }
              if (lastProp) {
                for (styleName in lastProp) {
                  if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = "";
                  }
                }
                for (styleName in nextProp) {
                  if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                    if (!styleUpdates) {
                      styleUpdates = {};
                    }
                    styleUpdates[styleName] = nextProp[styleName];
                  }
                }
              } else {
                if (!styleUpdates) {
                  if (!updatePayload) {
                    updatePayload = [];
                  }
                  updatePayload.push(propKey, styleUpdates);
                }
                styleUpdates = nextProp;
              }
            } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
              var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
              var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
              if (nextHtml != null) {
                if (lastHtml !== nextHtml) {
                  (updatePayload = updatePayload || []).push(propKey, nextHtml);
                }
              }
            } else if (propKey === CHILDREN) {
              if (typeof nextProp === "string" || typeof nextProp === "number") {
                (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
              }
            } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
              ;
            else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
              if (!updatePayload && lastProp !== nextProp) {
                updatePayload = [];
              }
            } else {
              (updatePayload = updatePayload || []).push(propKey, nextProp);
            }
          }
          if (styleUpdates) {
            {
              validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
            }
            (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
          }
          return updatePayload;
        }
        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
          if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
            updateChecked(domElement, nextRawProps);
          }
          var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
          var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
          updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
          switch (tag) {
            case "input":
              updateWrapper(domElement, nextRawProps);
              break;
            case "textarea":
              updateWrapper$1(domElement, nextRawProps);
              break;
            case "select":
              postUpdateWrapper(domElement, nextRawProps);
              break;
          }
        }
        function getPossibleStandardName(propName) {
          {
            var lowerCasedName = propName.toLowerCase();
            if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              return null;
            }
            return possibleStandardNames[lowerCasedName] || null;
          }
        }
        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
          var isCustomComponentTag;
          var extraAttributeNames;
          {
            isCustomComponentTag = isCustomComponent(tag, rawProps);
            validatePropertiesInDevelopment(tag, rawProps);
          }
          switch (tag) {
            case "dialog":
              listenToNonDelegatedEvent("cancel", domElement);
              listenToNonDelegatedEvent("close", domElement);
              break;
            case "iframe":
            case "object":
            case "embed":
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "video":
            case "audio":
              for (var i = 0; i < mediaEventTypes.length; i++) {
                listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
              }
              break;
            case "source":
              listenToNonDelegatedEvent("error", domElement);
              break;
            case "img":
            case "image":
            case "link":
              listenToNonDelegatedEvent("error", domElement);
              listenToNonDelegatedEvent("load", domElement);
              break;
            case "details":
              listenToNonDelegatedEvent("toggle", domElement);
              break;
            case "input":
              initWrapperState(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "option":
              validateProps(domElement, rawProps);
              break;
            case "select":
              initWrapperState$1(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
            case "textarea":
              initWrapperState$2(domElement, rawProps);
              listenToNonDelegatedEvent("invalid", domElement);
              break;
          }
          assertValidProps(tag, rawProps);
          {
            extraAttributeNames = /* @__PURE__ */ new Set();
            var attributes = domElement.attributes;
            for (var _i = 0; _i < attributes.length; _i++) {
              var name2 = attributes[_i].name.toLowerCase();
              switch (name2) {
                case "value":
                  break;
                case "checked":
                  break;
                case "selected":
                  break;
                default:
                  extraAttributeNames.add(attributes[_i].name);
              }
            }
          }
          var updatePayload = null;
          for (var propKey in rawProps) {
            if (!rawProps.hasOwnProperty(propKey)) {
              continue;
            }
            var nextProp = rawProps[propKey];
            if (propKey === CHILDREN) {
              if (typeof nextProp === "string") {
                if (domElement.textContent !== nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, nextProp];
                }
              } else if (typeof nextProp === "number") {
                if (domElement.textContent !== "" + nextProp) {
                  if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                    checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                  }
                  updatePayload = [CHILDREN, "" + nextProp];
                }
              }
            } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
              if (nextProp != null) {
                if (typeof nextProp !== "function") {
                  warnForInvalidEventListener(propKey, nextProp);
                }
                if (propKey === "onScroll") {
                  listenToNonDelegatedEvent("scroll", domElement);
                }
              }
            } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
            typeof isCustomComponentTag === "boolean") {
              var serverValue = void 0;
              var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
              if (rawProps[SUPPRESS_HYDRATION_WARNING] === true)
                ;
              else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
              // TODO: Only ignore them on controlled tags.
              propKey === "value" || propKey === "checked" || propKey === "selected")
                ;
              else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                var serverHTML = domElement.innerHTML;
                var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                if (nextHtml != null) {
                  var expectedHTML = normalizeHTML(domElement, nextHtml);
                  if (expectedHTML !== serverHTML) {
                    warnForPropDifference(propKey, serverHTML, expectedHTML);
                  }
                }
              } else if (propKey === STYLE) {
                extraAttributeNames.delete(propKey);
                if (canDiffStyleForHydrationWarning) {
                  var expectedStyle = createDangerousStringForStyles(nextProp);
                  serverValue = domElement.getAttribute("style");
                  if (expectedStyle !== serverValue) {
                    warnForPropDifference(propKey, serverValue, expectedStyle);
                  }
                }
              } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                extraAttributeNames.delete(propKey.toLowerCase());
                serverValue = getValueForAttribute(domElement, propKey, nextProp);
                if (nextProp !== serverValue) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                var isMismatchDueToBadCasing = false;
                if (propertyInfo !== null) {
                  extraAttributeNames.delete(propertyInfo.attributeName);
                  serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                } else {
                  var ownNamespace = parentNamespace;
                  if (ownNamespace === HTML_NAMESPACE) {
                    ownNamespace = getIntrinsicNamespace(tag);
                  }
                  if (ownNamespace === HTML_NAMESPACE) {
                    extraAttributeNames.delete(propKey.toLowerCase());
                  } else {
                    var standardName = getPossibleStandardName(propKey);
                    if (standardName !== null && standardName !== propKey) {
                      isMismatchDueToBadCasing = true;
                      extraAttributeNames.delete(standardName);
                    }
                    extraAttributeNames.delete(propKey);
                  }
                  serverValue = getValueForAttribute(domElement, propKey, nextProp);
                }
                var dontWarnCustomElement = enableCustomElementPropertySupport;
                if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
                  warnForPropDifference(propKey, serverValue, nextProp);
                }
              }
            }
          }
          {
            if (shouldWarnDev) {
              if (
                // $FlowFixMe - Should be inferred as not undefined.
                extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true
              ) {
                warnForExtraAttributes(extraAttributeNames);
              }
            }
          }
          switch (tag) {
            case "input":
              track(domElement);
              postMountWrapper(domElement, rawProps, true);
              break;
            case "textarea":
              track(domElement);
              postMountWrapper$3(domElement);
              break;
            case "select":
            case "option":
              break;
            default:
              if (typeof rawProps.onClick === "function") {
                trapClickOnNonInteractiveElement(domElement);
              }
              break;
          }
          return updatePayload;
        }
        function diffHydratedText(textNode, text, isConcurrentMode) {
          var isDifferent = textNode.nodeValue !== text;
          return isDifferent;
        }
        function warnForDeletedHydratableElement(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error3("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
          }
        }
        function warnForDeletedHydratableText(parentNode, child) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error3('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedElement(parentNode, tag, props) {
          {
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error3("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
          }
        }
        function warnForInsertedHydratedText(parentNode, text) {
          {
            if (text === "") {
              return;
            }
            if (didWarnInvalidHydration) {
              return;
            }
            didWarnInvalidHydration = true;
            error3('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
          }
        }
        function restoreControlledState$3(domElement, tag, props) {
          switch (tag) {
            case "input":
              restoreControlledState(domElement, props);
              return;
            case "textarea":
              restoreControlledState$2(domElement, props);
              return;
            case "select":
              restoreControlledState$1(domElement, props);
              return;
          }
        }
        var validateDOMNesting = function() {
        };
        var updatedAncestorInfo = function() {
        };
        {
          var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
          var inScopeTags = [
            "applet",
            "caption",
            "html",
            "table",
            "td",
            "th",
            "marquee",
            "object",
            "template",
            // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
            // TODO: Distinguish by namespace here -- for <title>, including it here
            // errs on the side of fewer warnings
            "foreignObject",
            "desc",
            "title"
          ];
          var buttonScopeTags = inScopeTags.concat(["button"]);
          var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
          var emptyAncestorInfo = {
            current: null,
            formTag: null,
            aTagInScope: null,
            buttonTagInScope: null,
            nobrTagInScope: null,
            pTagInButtonScope: null,
            listItemTagAutoclosing: null,
            dlItemTagAutoclosing: null
          };
          updatedAncestorInfo = function(oldInfo, tag) {
            var ancestorInfo = assign2({}, oldInfo || emptyAncestorInfo);
            var info = {
              tag
            };
            if (inScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.aTagInScope = null;
              ancestorInfo.buttonTagInScope = null;
              ancestorInfo.nobrTagInScope = null;
            }
            if (buttonScopeTags.indexOf(tag) !== -1) {
              ancestorInfo.pTagInButtonScope = null;
            }
            if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
              ancestorInfo.listItemTagAutoclosing = null;
              ancestorInfo.dlItemTagAutoclosing = null;
            }
            ancestorInfo.current = info;
            if (tag === "form") {
              ancestorInfo.formTag = info;
            }
            if (tag === "a") {
              ancestorInfo.aTagInScope = info;
            }
            if (tag === "button") {
              ancestorInfo.buttonTagInScope = info;
            }
            if (tag === "nobr") {
              ancestorInfo.nobrTagInScope = info;
            }
            if (tag === "p") {
              ancestorInfo.pTagInButtonScope = info;
            }
            if (tag === "li") {
              ancestorInfo.listItemTagAutoclosing = info;
            }
            if (tag === "dd" || tag === "dt") {
              ancestorInfo.dlItemTagAutoclosing = info;
            }
            return ancestorInfo;
          };
          var isTagValidWithParent = function(tag, parentTag) {
            switch (parentTag) {
              case "select":
                return tag === "option" || tag === "optgroup" || tag === "#text";
              case "optgroup":
                return tag === "option" || tag === "#text";
              case "option":
                return tag === "#text";
              case "tr":
                return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
              case "tbody":
              case "thead":
              case "tfoot":
                return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
              case "colgroup":
                return tag === "col" || tag === "template";
              case "table":
                return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
              case "head":
                return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
              case "html":
                return tag === "head" || tag === "body" || tag === "frameset";
              case "frameset":
                return tag === "frame";
              case "#document":
                return tag === "html";
            }
            switch (tag) {
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
              case "rp":
              case "rt":
                return impliedEndTags.indexOf(parentTag) === -1;
              case "body":
              case "caption":
              case "col":
              case "colgroup":
              case "frameset":
              case "frame":
              case "head":
              case "html":
              case "tbody":
              case "td":
              case "tfoot":
              case "th":
              case "thead":
              case "tr":
                return parentTag == null;
            }
            return true;
          };
          var findInvalidAncestorForTag = function(tag, ancestorInfo) {
            switch (tag) {
              case "address":
              case "article":
              case "aside":
              case "blockquote":
              case "center":
              case "details":
              case "dialog":
              case "dir":
              case "div":
              case "dl":
              case "fieldset":
              case "figcaption":
              case "figure":
              case "footer":
              case "header":
              case "hgroup":
              case "main":
              case "menu":
              case "nav":
              case "ol":
              case "p":
              case "section":
              case "summary":
              case "ul":
              case "pre":
              case "listing":
              case "table":
              case "hr":
              case "xmp":
              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
                return ancestorInfo.pTagInButtonScope;
              case "form":
                return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
              case "li":
                return ancestorInfo.listItemTagAutoclosing;
              case "dd":
              case "dt":
                return ancestorInfo.dlItemTagAutoclosing;
              case "button":
                return ancestorInfo.buttonTagInScope;
              case "a":
                return ancestorInfo.aTagInScope;
              case "nobr":
                return ancestorInfo.nobrTagInScope;
            }
            return null;
          };
          var didWarn$1 = {};
          validateDOMNesting = function(childTag, childText, ancestorInfo) {
            ancestorInfo = ancestorInfo || emptyAncestorInfo;
            var parentInfo = ancestorInfo.current;
            var parentTag = parentInfo && parentInfo.tag;
            if (childText != null) {
              if (childTag != null) {
                error3("validateDOMNesting: when childText is passed, childTag should be null");
              }
              childTag = "#text";
            }
            var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
            var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
            var invalidParentOrAncestor = invalidParent || invalidAncestor;
            if (!invalidParentOrAncestor) {
              return;
            }
            var ancestorTag = invalidParentOrAncestor.tag;
            var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
            if (didWarn$1[warnKey]) {
              return;
            }
            didWarn$1[warnKey] = true;
            var tagDisplayName = childTag;
            var whitespaceInfo = "";
            if (childTag === "#text") {
              if (/\S/.test(childText)) {
                tagDisplayName = "Text nodes";
              } else {
                tagDisplayName = "Whitespace text nodes";
                whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
              }
            } else {
              tagDisplayName = "<" + childTag + ">";
            }
            if (invalidParent) {
              var info = "";
              if (ancestorTag === "table" && childTag === "tr") {
                info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
              }
              error3("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
            } else {
              error3("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
            }
          };
        }
        var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
        var SUSPENSE_START_DATA = "$";
        var SUSPENSE_END_DATA = "/$";
        var SUSPENSE_PENDING_START_DATA = "$?";
        var SUSPENSE_FALLBACK_START_DATA = "$!";
        var STYLE$1 = "style";
        var eventsEnabled = null;
        var selectionInformation = null;
        function getRootHostContext(rootContainerInstance) {
          var type;
          var namespace;
          var nodeType = rootContainerInstance.nodeType;
          switch (nodeType) {
            case DOCUMENT_NODE:
            case DOCUMENT_FRAGMENT_NODE: {
              type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
              var root2 = rootContainerInstance.documentElement;
              namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
              break;
            }
            default: {
              var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
              var ownNamespace = container.namespaceURI || null;
              type = container.tagName;
              namespace = getChildNamespace(ownNamespace, type);
              break;
            }
          }
          {
            var validatedTag = type.toLowerCase();
            var ancestorInfo = updatedAncestorInfo(null, validatedTag);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
          {
            var parentHostContextDev = parentHostContext;
            var namespace = getChildNamespace(parentHostContextDev.namespace, type);
            var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
            return {
              namespace,
              ancestorInfo
            };
          }
        }
        function getPublicInstance(instance4) {
          return instance4;
        }
        function prepareForCommit(containerInfo) {
          eventsEnabled = isEnabled();
          selectionInformation = getSelectionInformation();
          var activeInstance = null;
          setEnabled(false);
          return activeInstance;
        }
        function resetAfterCommit(containerInfo) {
          restoreSelection(selectionInformation);
          setEnabled(eventsEnabled);
          eventsEnabled = null;
          selectionInformation = null;
        }
        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            validateDOMNesting(type, null, hostContextDev.ancestorInfo);
            if (typeof props.children === "string" || typeof props.children === "number") {
              var string66 = "" + props.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string66, ownAncestorInfo);
            }
            parentNamespace = hostContextDev.namespace;
          }
          var domElement = createElement168(type, props, rootContainerInstance, parentNamespace);
          precacheFiberNode(internalInstanceHandle, domElement);
          updateFiberProps(domElement, props);
          return domElement;
        }
        function appendInitialChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
          setInitialProperties(domElement, type, props, rootContainerInstance);
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              return !!props.autoFocus;
            case "img":
              return true;
            default:
              return false;
          }
        }
        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
          {
            var hostContextDev = hostContext;
            if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
              var string66 = "" + newProps.children;
              var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
              validateDOMNesting(null, string66, ownAncestorInfo);
            }
          }
          return diffProperties(domElement, type, oldProps, newProps);
        }
        function shouldSetTextContent(type, props) {
          return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.Cc != null;
        }
        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
          {
            var hostContextDev = hostContext;
            validateDOMNesting(null, text, hostContextDev.ancestorInfo);
          }
          var textNode = createTextNode(text, rootContainerInstance);
          precacheFiberNode(internalInstanceHandle, textNode);
          return textNode;
        }
        function getCurrentEventPriority() {
          var currentEvent = window.event;
          if (currentEvent === void 0) {
            return DefaultEventPriority;
          }
          return getEventPriority(currentEvent.type);
        }
        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
        var noTimeout = -1;
        var localPromise = typeof Promise === "function" ? Promise : void 0;
        var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
          return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
        } : scheduleTimeout;
        function handleErrorInNextTick(error4) {
          setTimeout(function() {
            throw error4;
          });
        }
        function commitMount(domElement, type, newProps, internalInstanceHandle) {
          switch (type) {
            case "button":
            case "input":
            case "select":
            case "textarea":
              if (newProps.autoFocus) {
                domElement.focus();
              }
              return;
            case "img": {
              if (newProps.src) {
                domElement.src = newProps.src;
              }
              return;
            }
          }
        }
        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
          updateProperties(domElement, updatePayload, type, oldProps, newProps);
          updateFiberProps(domElement, newProps);
        }
        function resetTextContent(domElement) {
          setTextContent(domElement, "");
        }
        function commitTextUpdate(textInstance, oldText, newText) {
          textInstance.nodeValue = newText;
        }
        function appendChild(parentInstance, child) {
          parentInstance.appendChild(child);
        }
        function appendChildToContainer(container, child) {
          var parentNode;
          if (container.nodeType === COMMENT_NODE) {
            parentNode = container.parentNode;
            parentNode.insertBefore(child, container);
          } else {
            parentNode = container;
            parentNode.appendChild(child);
          }
          var reactRootContainer = container.ga;
          if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
            trapClickOnNonInteractiveElement(parentNode);
          }
        }
        function insertBefore(parentInstance, child, beforeChild) {
          parentInstance.insertBefore(child, beforeChild);
        }
        function insertInContainerBefore(container, child, beforeChild) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.insertBefore(child, beforeChild);
          } else {
            container.insertBefore(child, beforeChild);
          }
        }
        function removeChild(parentInstance, child) {
          parentInstance.removeChild(child);
        }
        function removeChildFromContainer(container, child) {
          if (container.nodeType === COMMENT_NODE) {
            container.parentNode.removeChild(child);
          } else {
            container.removeChild(child);
          }
        }
        function clearSuspenseBoundary(parentInstance, suspenseInstance) {
          var node14 = suspenseInstance;
          var depth = 0;
          do {
            var nextNode = node14.nextSibling;
            parentInstance.removeChild(node14);
            if (nextNode && nextNode.nodeType === COMMENT_NODE) {
              var data2 = nextNode.data;
              if (data2 === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  parentInstance.removeChild(nextNode);
                  retryIfBlockedOn(suspenseInstance);
                  return;
                } else {
                  depth--;
                }
              } else if (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_PENDING_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA) {
                depth++;
              }
            }
            node14 = nextNode;
          } while (node14);
          retryIfBlockedOn(suspenseInstance);
        }
        function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
          if (container.nodeType === COMMENT_NODE) {
            clearSuspenseBoundary(container.parentNode, suspenseInstance);
          } else if (container.nodeType === ELEMENT_NODE) {
            clearSuspenseBoundary(container, suspenseInstance);
          }
          retryIfBlockedOn(container);
        }
        function hideInstance(instance4) {
          instance4 = instance4;
          var style2 = instance4.style;
          if (typeof style2.setProperty === "function") {
            style2.setProperty("display", "none", "important");
          } else {
            style2.display = "none";
          }
        }
        function hideTextInstance(textInstance) {
          textInstance.nodeValue = "";
        }
        function unhideInstance(instance4, props) {
          instance4 = instance4;
          var styleProp = props[STYLE$1];
          var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
          instance4.style.display = dangerousStyleValue("display", display);
        }
        function unhideTextInstance(textInstance, text) {
          textInstance.nodeValue = text;
        }
        function clearContainer(container) {
          if (container.nodeType === ELEMENT_NODE) {
            container.textContent = "";
          } else if (container.nodeType === DOCUMENT_NODE) {
            if (container.documentElement) {
              container.removeChild(container.documentElement);
            }
          }
        }
        function canHydrateInstance(instance4, type, props) {
          if (instance4.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance4.nodeName.toLowerCase()) {
            return null;
          }
          return instance4;
        }
        function canHydrateTextInstance(instance4, text) {
          if (text === "" || instance4.nodeType !== TEXT_NODE) {
            return null;
          }
          return instance4;
        }
        function canHydrateSuspenseInstance(instance4) {
          if (instance4.nodeType !== COMMENT_NODE) {
            return null;
          }
          return instance4;
        }
        function isSuspenseInstancePending(instance4) {
          return instance4.data === SUSPENSE_PENDING_START_DATA;
        }
        function isSuspenseInstanceFallback(instance4) {
          return instance4.data === SUSPENSE_FALLBACK_START_DATA;
        }
        function getSuspenseInstanceFallbackErrorDetails(instance4) {
          var dataset = instance4.nextSibling && instance4.nextSibling.dataset;
          var digest, message, stack2;
          if (dataset) {
            digest = dataset.dgst;
            {
              message = dataset.msg;
              stack2 = dataset.stck;
            }
          }
          {
            return {
              message,
              digest,
              stack: stack2
            };
          }
        }
        function registerSuspenseInstanceRetry(instance4, callback) {
          instance4.ue = callback;
        }
        function getNextHydratable(node14) {
          for (; node14 != null; node14 = node14.nextSibling) {
            var nodeType = node14.nodeType;
            if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
              break;
            }
            if (nodeType === COMMENT_NODE) {
              var nodeData = node14.data;
              if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
                break;
              }
              if (nodeData === SUSPENSE_END_DATA) {
                return null;
              }
            }
          }
          return node14;
        }
        function getNextHydratableSibling(instance4) {
          return getNextHydratable(instance4.nextSibling);
        }
        function getFirstHydratableChild(parentInstance) {
          return getNextHydratable(parentInstance.firstChild);
        }
        function getFirstHydratableChildWithinContainer(parentContainer) {
          return getNextHydratable(parentContainer.firstChild);
        }
        function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
          return getNextHydratable(parentInstance.nextSibling);
        }
        function hydrateInstance(instance4, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, instance4);
          updateFiberProps(instance4, props);
          var parentNamespace;
          {
            var hostContextDev = hostContext;
            parentNamespace = hostContextDev.namespace;
          }
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedProperties(instance4, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
        }
        function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
          precacheFiberNode(internalInstanceHandle, textInstance);
          var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
          return diffHydratedText(textInstance, text);
        }
        function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
          precacheFiberNode(internalInstanceHandle, suspenseInstance);
        }
        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
          var node14 = suspenseInstance.nextSibling;
          var depth = 0;
          while (node14) {
            if (node14.nodeType === COMMENT_NODE) {
              var data2 = node14.data;
              if (data2 === SUSPENSE_END_DATA) {
                if (depth === 0) {
                  return getNextHydratableSibling(node14);
                } else {
                  depth--;
                }
              } else if (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA || data2 === SUSPENSE_PENDING_START_DATA) {
                depth++;
              }
            }
            node14 = node14.nextSibling;
          }
          return null;
        }
        function getParentSuspenseInstance(targetInstance) {
          var node14 = targetInstance.previousSibling;
          var depth = 0;
          while (node14) {
            if (node14.nodeType === COMMENT_NODE) {
              var data2 = node14.data;
              if (data2 === SUSPENSE_START_DATA || data2 === SUSPENSE_FALLBACK_START_DATA || data2 === SUSPENSE_PENDING_START_DATA) {
                if (depth === 0) {
                  return node14;
                } else {
                  depth--;
                }
              } else if (data2 === SUSPENSE_END_DATA) {
                depth++;
              }
            }
            node14 = node14.previousSibling;
          }
          return null;
        }
        function commitHydratedContainer(container) {
          retryIfBlockedOn(container);
        }
        function commitHydratedSuspenseInstance(suspenseInstance) {
          retryIfBlockedOn(suspenseInstance);
        }
        function shouldDeleteUnhydratedTailInstances(parentType) {
          return parentType !== "head" && parentType !== "body";
        }
        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
          var shouldWarnDev = true;
          checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
        }
        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
          if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
            var shouldWarnDev = true;
            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
          }
        }
        function didNotHydrateInstanceWithinContainer(parentContainer, instance4) {
          {
            if (instance4.nodeType === ELEMENT_NODE) {
              warnForDeletedHydratableElement(parentContainer, instance4);
            } else if (instance4.nodeType === COMMENT_NODE)
              ;
            else {
              warnForDeletedHydratableText(parentContainer, instance4);
            }
          }
        }
        function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance4) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null) {
              if (instance4.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentNode, instance4);
              } else if (instance4.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentNode, instance4);
              }
            }
          }
        }
        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance4, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              if (instance4.nodeType === ELEMENT_NODE) {
                warnForDeletedHydratableElement(parentInstance, instance4);
              } else if (instance4.nodeType === COMMENT_NODE)
                ;
              else {
                warnForDeletedHydratableText(parentInstance, instance4);
              }
            }
          }
        }
        function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
          {
            warnForInsertedHydratedElement(parentContainer, type);
          }
        }
        function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
          {
            warnForInsertedHydratedText(parentContainer, text);
          }
        }
        function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedElement(parentNode, type);
          }
        }
        function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
          {
            var parentNode = parentInstance.parentNode;
            if (parentNode !== null)
              warnForInsertedHydratedText(parentNode, text);
          }
        }
        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedElement(parentInstance, type);
            }
          }
        }
        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
          {
            if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
              warnForInsertedHydratedText(parentInstance, text);
            }
          }
        }
        function errorHydratingContainer(parentContainer) {
          {
            error3("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
          }
        }
        function preparePortalMount(portalInstance) {
          listenToAllSupportedEvents(portalInstance);
        }
        var randomKey = Math.random().toString(36).slice(2);
        var internalInstanceKey = "__reactFiber$" + randomKey;
        var internalPropsKey = "__reactProps$" + randomKey;
        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
        var internalEventHandlersKey = "__reactEvents$" + randomKey;
        var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
        var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
        function detachDeletedInstance(node14) {
          delete node14[internalInstanceKey];
          delete node14[internalPropsKey];
          delete node14[internalEventHandlersKey];
          delete node14[internalEventHandlerListenersKey];
          delete node14[internalEventHandlesSetKey];
        }
        function precacheFiberNode(hostInst, node14) {
          node14[internalInstanceKey] = hostInst;
        }
        function markContainerAsRoot(hostRoot, node14) {
          node14[internalContainerInstanceKey] = hostRoot;
        }
        function unmarkContainerAsRoot(node14) {
          node14[internalContainerInstanceKey] = null;
        }
        function isContainerMarkedAsRoot(node14) {
          return !!node14[internalContainerInstanceKey];
        }
        function getClosestInstanceFromNode(targetNode) {
          var targetInst = targetNode[internalInstanceKey];
          if (targetInst) {
            return targetInst;
          }
          var parentNode = targetNode.parentNode;
          while (parentNode) {
            targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
            if (targetInst) {
              var alternate = targetInst.alternate;
              if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                var suspenseInstance = getParentSuspenseInstance(targetNode);
                while (suspenseInstance !== null) {
                  var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                  if (targetSuspenseInst) {
                    return targetSuspenseInst;
                  }
                  suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                }
              }
              return targetInst;
            }
            targetNode = parentNode;
            parentNode = targetNode.parentNode;
          }
          return null;
        }
        function getInstanceFromNode(node14) {
          var inst = node14[internalInstanceKey] || node14[internalContainerInstanceKey];
          if (inst) {
            if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
              return inst;
            } else {
              return null;
            }
          }
          return null;
        }
        function getNodeFromInstance(inst) {
          if (inst.tag === HostComponent || inst.tag === HostText) {
            return inst.stateNode;
          }
          throw new Error("getNodeFromInstance: Invalid argument.");
        }
        function getFiberCurrentPropsFromNode(node14) {
          return node14[internalPropsKey] || null;
        }
        function updateFiberProps(node14, props) {
          node14[internalPropsKey] = props;
        }
        function getEventListenerSet(node14) {
          var elementListenerSet = node14[internalEventHandlersKey];
          if (elementListenerSet === void 0) {
            elementListenerSet = node14[internalEventHandlersKey] = /* @__PURE__ */ new Set();
          }
          return elementListenerSet;
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element6) {
          {
            if (element6) {
              var owner = element6.R;
              var stack2 = describeUnknownElementTypeFrameInDEV(element6.type, element6.xa, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack2);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values2, location, componentName, element6) {
          {
            var has3 = Function.call.bind(hasOwnProperty3);
            for (var typeSpecName in typeSpecs) {
              if (has3(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element6);
                  error3("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element6);
                  error3("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var valueStack = [];
        var fiberStack;
        {
          fiberStack = [];
        }
        var index = -1;
        function createCursor(defaultValue2) {
          return {
            current: defaultValue2
          };
        }
        function pop2(cursor, fiber) {
          if (index < 0) {
            {
              error3("Unexpected pop.");
            }
            return;
          }
          {
            if (fiber !== fiberStack[index]) {
              error3("Unexpected Fiber popped.");
            }
          }
          cursor.current = valueStack[index];
          valueStack[index] = null;
          {
            fiberStack[index] = null;
          }
          index--;
        }
        function push4(cursor, value2, fiber) {
          index++;
          valueStack[index] = cursor.current;
          {
            fiberStack[index] = fiber;
          }
          cursor.current = value2;
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        var contextStackCursor = createCursor(emptyContextObject);
        var didPerformWorkStackCursor = createCursor(false);
        var previousContext = emptyContextObject;
        function getUnmaskedContext(workInProgress2, Component64, didPushOwnContextIfProvider) {
          {
            if (didPushOwnContextIfProvider && isContextProvider(Component64)) {
              return previousContext;
            }
            return contextStackCursor.current;
          }
        }
        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
          {
            var instance4 = workInProgress2.stateNode;
            instance4.vd = unmaskedContext;
            instance4.wd = maskedContext;
          }
        }
        function getMaskedContext(workInProgress2, unmaskedContext) {
          {
            var type = workInProgress2.type;
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var instance4 = workInProgress2.stateNode;
            if (instance4 && instance4.vd === unmaskedContext) {
              return instance4.wd;
            }
            var context2 = {};
            for (var key in contextTypes) {
              context2[key] = unmaskedContext[key];
            }
            {
              var name2 = getComponentNameFromFiber(workInProgress2) || "Unknown";
              checkPropTypes(contextTypes, context2, "context", name2);
            }
            if (instance4) {
              cacheContext(workInProgress2, unmaskedContext, context2);
            }
            return context2;
          }
        }
        function hasContextChanged() {
          {
            return didPerformWorkStackCursor.current;
          }
        }
        function isContextProvider(type) {
          {
            var childContextTypes = type.childContextTypes;
            return childContextTypes !== null && childContextTypes !== void 0;
          }
        }
        function popContext(fiber) {
          {
            pop2(didPerformWorkStackCursor, fiber);
            pop2(contextStackCursor, fiber);
          }
        }
        function popTopLevelContextObject(fiber) {
          {
            pop2(didPerformWorkStackCursor, fiber);
            pop2(contextStackCursor, fiber);
          }
        }
        function pushTopLevelContextObject(fiber, context2, didChange) {
          {
            if (contextStackCursor.current !== emptyContextObject) {
              throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
            }
            push4(contextStackCursor, context2, fiber);
            push4(didPerformWorkStackCursor, didChange, fiber);
          }
        }
        function processChildContext(fiber, type, parentContext) {
          {
            var instance4 = fiber.stateNode;
            var childContextTypes = type.childContextTypes;
            if (typeof instance4.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromFiber(fiber) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error3("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance4.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name2 = getComponentNameFromFiber(fiber) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name2);
            }
            return assign2({}, parentContext, childContext);
          }
        }
        function pushContextProvider(workInProgress2) {
          {
            var instance4 = workInProgress2.stateNode;
            var memoizedMergedChildContext = instance4 && instance4.Dc || emptyContextObject;
            previousContext = contextStackCursor.current;
            push4(contextStackCursor, memoizedMergedChildContext, workInProgress2);
            push4(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
            return true;
          }
        }
        function invalidateContextProvider(workInProgress2, type, didChange) {
          {
            var instance4 = workInProgress2.stateNode;
            if (!instance4) {
              throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
            }
            if (didChange) {
              var mergedContext = processChildContext(workInProgress2, type, previousContext);
              instance4.Dc = mergedContext;
              pop2(didPerformWorkStackCursor, workInProgress2);
              pop2(contextStackCursor, workInProgress2);
              push4(contextStackCursor, mergedContext, workInProgress2);
              push4(didPerformWorkStackCursor, didChange, workInProgress2);
            } else {
              pop2(didPerformWorkStackCursor, workInProgress2);
              push4(didPerformWorkStackCursor, didChange, workInProgress2);
            }
          }
        }
        function findCurrentUnmaskedContext(fiber) {
          {
            if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
              throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
            }
            var node14 = fiber;
            do {
              switch (node14.tag) {
                case HostRoot:
                  return node14.stateNode.context;
                case ClassComponent: {
                  var Component64 = node14.type;
                  if (isContextProvider(Component64)) {
                    return node14.stateNode.Dc;
                  }
                  break;
                }
              }
              node14 = node14.return;
            } while (node14 !== null);
            throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        var LegacyRoot = 0;
        var ConcurrentRoot = 1;
        var syncQueue = null;
        var includesLegacySyncCallbacks = false;
        var isFlushingSyncQueue = false;
        function scheduleSyncCallback(callback) {
          if (syncQueue === null) {
            syncQueue = [callback];
          } else {
            syncQueue.push(callback);
          }
        }
        function scheduleLegacySyncCallback(callback) {
          includesLegacySyncCallbacks = true;
          scheduleSyncCallback(callback);
        }
        function flushSyncCallbacksOnlyInLegacyMode() {
          if (includesLegacySyncCallbacks) {
            flushSyncCallbacks();
          }
        }
        function flushSyncCallbacks() {
          if (!isFlushingSyncQueue && syncQueue !== null) {
            isFlushingSyncQueue = true;
            var i = 0;
            var previousUpdatePriority = getCurrentUpdatePriority();
            try {
              var isSync = true;
              var queue = syncQueue;
              setCurrentUpdatePriority(DiscreteEventPriority);
              for (; i < queue.length; i++) {
                var callback = queue[i];
                do {
                  callback = callback(isSync);
                } while (callback !== null);
              }
              syncQueue = null;
              includesLegacySyncCallbacks = false;
            } catch (error4) {
              if (syncQueue !== null) {
                syncQueue = syncQueue.slice(i + 1);
              }
              scheduleCallback(ImmediatePriority, flushSyncCallbacks);
              throw error4;
            } finally {
              setCurrentUpdatePriority(previousUpdatePriority);
              isFlushingSyncQueue = false;
            }
          }
          return null;
        }
        var forkStack = [];
        var forkStackIndex = 0;
        var treeForkProvider = null;
        var treeForkCount = 0;
        var idStack = [];
        var idStackIndex = 0;
        var treeContextProvider = null;
        var treeContextId = 1;
        var treeContextOverflow = "";
        function isForkedChild(workInProgress2) {
          warnIfNotHydrating();
          return (workInProgress2.flags & Forked) !== NoFlags;
        }
        function getForksAtLevel(workInProgress2) {
          warnIfNotHydrating();
          return treeForkCount;
        }
        function getTreeId() {
          var overflow = treeContextOverflow;
          var idWithLeadingBit = treeContextId;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeFork(workInProgress2, totalChildren) {
          warnIfNotHydrating();
          forkStack[forkStackIndex++] = treeForkCount;
          forkStack[forkStackIndex++] = treeForkProvider;
          treeForkProvider = workInProgress2;
          treeForkCount = totalChildren;
        }
        function pushTreeId(workInProgress2, totalChildren, index2) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextProvider = workInProgress2;
          var baseIdWithLeadingBit = treeContextId;
          var baseOverflow = treeContextOverflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index2 + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            treeContextId = 1 << restOfLength | id;
            treeContextOverflow = overflow;
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            treeContextId = 1 << length | _id;
            treeContextOverflow = _overflow;
          }
        }
        function pushMaterializedTreeId(workInProgress2) {
          warnIfNotHydrating();
          var returnFiber = workInProgress2.return;
          if (returnFiber !== null) {
            var numberOfForks = 1;
            var slotIndex = 0;
            pushTreeFork(workInProgress2, numberOfForks);
            pushTreeId(workInProgress2, numberOfForks, slotIndex);
          }
        }
        function getBitLength(number41) {
          return 32 - clz32(number41);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        function popTreeContext(workInProgress2) {
          while (workInProgress2 === treeForkProvider) {
            treeForkProvider = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
            treeForkCount = forkStack[--forkStackIndex];
            forkStack[forkStackIndex] = null;
          }
          while (workInProgress2 === treeContextProvider) {
            treeContextProvider = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextOverflow = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
            treeContextId = idStack[--idStackIndex];
            idStack[idStackIndex] = null;
          }
        }
        function getSuspendedTreeContext() {
          warnIfNotHydrating();
          if (treeContextProvider !== null) {
            return {
              id: treeContextId,
              overflow: treeContextOverflow
            };
          } else {
            return null;
          }
        }
        function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
          warnIfNotHydrating();
          idStack[idStackIndex++] = treeContextId;
          idStack[idStackIndex++] = treeContextOverflow;
          idStack[idStackIndex++] = treeContextProvider;
          treeContextId = suspendedContext.id;
          treeContextOverflow = suspendedContext.overflow;
          treeContextProvider = workInProgress2;
        }
        function warnIfNotHydrating() {
          {
            if (!getIsHydrating()) {
              error3("Expected to be hydrating. This is a bug in React. Please file an issue.");
            }
          }
        }
        var hydrationParentFiber = null;
        var nextHydratableInstance = null;
        var isHydrating = false;
        var didSuspendOrErrorDEV = false;
        var hydrationErrors = null;
        function warnIfHydrating() {
          {
            if (isHydrating) {
              error3("We should not be hydrating here. This is a bug in React. Please file a bug.");
            }
          }
        }
        function markDidThrowWhileHydratingDEV() {
          {
            didSuspendOrErrorDEV = true;
          }
        }
        function didSuspendOrErrorWhileHydratingDEV() {
          {
            return didSuspendOrErrorDEV;
          }
        }
        function enterHydrationState(fiber) {
          var parentInstance = fiber.stateNode.containerInfo;
          nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          return true;
        }
        function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
          nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
          hydrationParentFiber = fiber;
          isHydrating = true;
          hydrationErrors = null;
          didSuspendOrErrorDEV = false;
          if (treeContext !== null) {
            restoreSuspendedTreeContext(fiber, treeContext);
          }
          return true;
        }
        function warnUnhydratedInstance(returnFiber, instance4) {
          {
            switch (returnFiber.tag) {
              case HostRoot: {
                didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance4);
                break;
              }
              case HostComponent: {
                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                didNotHydrateInstance(
                  returnFiber.type,
                  returnFiber.memoizedProps,
                  returnFiber.stateNode,
                  instance4,
                  // TODO: Delete this argument when we remove the legacy root API.
                  isConcurrentMode
                );
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                if (suspenseState.dehydrated !== null)
                  didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance4);
                break;
              }
            }
          }
        }
        function deleteHydratableInstance(returnFiber, instance4) {
          warnUnhydratedInstance(returnFiber, instance4);
          var childToDelete = createFiberFromHostInstanceForDeletion();
          childToDelete.stateNode = instance4;
          childToDelete.return = returnFiber;
          var deletions = returnFiber.deletions;
          if (deletions === null) {
            returnFiber.deletions = [childToDelete];
            returnFiber.flags |= ChildDeletion;
          } else {
            deletions.push(childToDelete);
          }
        }
        function warnNonhydratedInstance(returnFiber, fiber) {
          {
            if (didSuspendOrErrorDEV) {
              return;
            }
            switch (returnFiber.tag) {
              case HostRoot: {
                var parentContainer = returnFiber.stateNode.containerInfo;
                switch (fiber.tag) {
                  case HostComponent:
                    var type = fiber.type;
                    var props = fiber.pendingProps;
                    didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                    break;
                  case HostText:
                    var text = fiber.pendingProps;
                    didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                    break;
                }
                break;
              }
              case HostComponent: {
                var parentType = returnFiber.type;
                var parentProps = returnFiber.memoizedProps;
                var parentInstance = returnFiber.stateNode;
                switch (fiber.tag) {
                  case HostComponent: {
                    var _type = fiber.type;
                    var _props = fiber.pendingProps;
                    var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableInstance(
                      parentType,
                      parentProps,
                      parentInstance,
                      _type,
                      _props,
                      // TODO: Delete this argument when we remove the legacy root API.
                      isConcurrentMode
                    );
                    break;
                  }
                  case HostText: {
                    var _text = fiber.pendingProps;
                    var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                    didNotFindHydratableTextInstance(
                      parentType,
                      parentProps,
                      parentInstance,
                      _text,
                      // TODO: Delete this argument when we remove the legacy root API.
                      _isConcurrentMode
                    );
                    break;
                  }
                }
                break;
              }
              case SuspenseComponent: {
                var suspenseState = returnFiber.memoizedState;
                var _parentInstance = suspenseState.dehydrated;
                if (_parentInstance !== null)
                  switch (fiber.tag) {
                    case HostComponent:
                      var _type2 = fiber.type;
                      var _props2 = fiber.pendingProps;
                      didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                      break;
                    case HostText:
                      var _text2 = fiber.pendingProps;
                      didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                      break;
                  }
                break;
              }
              default:
                return;
            }
          }
        }
        function insertNonHydratedInstance(returnFiber, fiber) {
          fiber.flags = fiber.flags & ~Hydrating | Placement;
          warnNonhydratedInstance(returnFiber, fiber);
        }
        function tryHydrate(fiber, nextInstance) {
          switch (fiber.tag) {
            case HostComponent: {
              var type = fiber.type;
              var props = fiber.pendingProps;
              var instance4 = canHydrateInstance(nextInstance, type);
              if (instance4 !== null) {
                fiber.stateNode = instance4;
                hydrationParentFiber = fiber;
                nextHydratableInstance = getFirstHydratableChild(instance4);
                return true;
              }
              return false;
            }
            case HostText: {
              var text = fiber.pendingProps;
              var textInstance = canHydrateTextInstance(nextInstance, text);
              if (textInstance !== null) {
                fiber.stateNode = textInstance;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            case SuspenseComponent: {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
              if (suspenseInstance !== null) {
                var suspenseState = {
                  dehydrated: suspenseInstance,
                  treeContext: getSuspendedTreeContext(),
                  retryLane: OffscreenLane
                };
                fiber.memoizedState = suspenseState;
                var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                dehydratedFragment.return = fiber;
                fiber.child = dehydratedFragment;
                hydrationParentFiber = fiber;
                nextHydratableInstance = null;
                return true;
              }
              return false;
            }
            default:
              return false;
          }
        }
        function shouldClientRenderOnMismatch(fiber) {
          return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
        }
        function throwOnHydrationMismatch(fiber) {
          throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
        }
        function tryToClaimNextHydratableInstance(fiber) {
          if (!isHydrating) {
            return;
          }
          var nextInstance = nextHydratableInstance;
          if (!nextInstance) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            insertNonHydratedInstance(hydrationParentFiber, fiber);
            isHydrating = false;
            hydrationParentFiber = fiber;
            return;
          }
          var firstAttemptedInstance = nextInstance;
          if (!tryHydrate(fiber, nextInstance)) {
            if (shouldClientRenderOnMismatch(fiber)) {
              warnNonhydratedInstance(hydrationParentFiber, fiber);
              throwOnHydrationMismatch();
            }
            nextInstance = getNextHydratableSibling(firstAttemptedInstance);
            var prevHydrationParentFiber = hydrationParentFiber;
            if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
              insertNonHydratedInstance(hydrationParentFiber, fiber);
              isHydrating = false;
              hydrationParentFiber = fiber;
              return;
            }
            deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
          }
        }
        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
          var instance4 = fiber.stateNode;
          var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
          var updatePayload = hydrateInstance(instance4, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
          fiber.updateQueue = updatePayload;
          if (updatePayload !== null) {
            return true;
          }
          return false;
        }
        function prepareToHydrateHostTextInstance(fiber) {
          var textInstance = fiber.stateNode;
          var textContent = fiber.memoizedProps;
          var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
          if (shouldUpdate) {
            var returnFiber = hydrationParentFiber;
            if (returnFiber !== null) {
              switch (returnFiber.tag) {
                case HostRoot: {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedContainerTextInstance(
                    parentContainer,
                    textInstance,
                    textContent,
                    // TODO: Delete this argument when we remove the legacy root API.
                    isConcurrentMode
                  );
                  break;
                }
                case HostComponent: {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                  didNotMatchHydratedTextInstance(
                    parentType,
                    parentProps,
                    parentInstance,
                    textInstance,
                    textContent,
                    // TODO: Delete this argument when we remove the legacy root API.
                    _isConcurrentMode2
                  );
                  break;
                }
              }
            }
          }
          return shouldUpdate;
        }
        function prepareToHydrateHostSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          hydrateSuspenseInstance(suspenseInstance, fiber);
        }
        function skipPastDehydratedSuspenseInstance(fiber) {
          var suspenseState = fiber.memoizedState;
          var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
          if (!suspenseInstance) {
            throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
          }
          return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
        }
        function popToNextHostParent(fiber) {
          var parent = fiber.return;
          while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
            parent = parent.return;
          }
          hydrationParentFiber = parent;
        }
        function popHydrationState(fiber) {
          if (fiber !== hydrationParentFiber) {
            return false;
          }
          if (!isHydrating) {
            popToNextHostParent(fiber);
            isHydrating = true;
            return false;
          }
          if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
            var nextInstance = nextHydratableInstance;
            if (nextInstance) {
              if (shouldClientRenderOnMismatch(fiber)) {
                warnIfUnhydratedTailNodes(fiber);
                throwOnHydrationMismatch();
              } else {
                while (nextInstance) {
                  deleteHydratableInstance(fiber, nextInstance);
                  nextInstance = getNextHydratableSibling(nextInstance);
                }
              }
            }
          }
          popToNextHostParent(fiber);
          if (fiber.tag === SuspenseComponent) {
            nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
          } else {
            nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
          }
          return true;
        }
        function hasUnhydratedTailNodes() {
          return isHydrating && nextHydratableInstance !== null;
        }
        function warnIfUnhydratedTailNodes(fiber) {
          var nextInstance = nextHydratableInstance;
          while (nextInstance) {
            warnUnhydratedInstance(fiber, nextInstance);
            nextInstance = getNextHydratableSibling(nextInstance);
          }
        }
        function resetHydrationState() {
          hydrationParentFiber = null;
          nextHydratableInstance = null;
          isHydrating = false;
          didSuspendOrErrorDEV = false;
        }
        function upgradeHydrationErrorsToRecoverable() {
          if (hydrationErrors !== null) {
            queueRecoverableErrors(hydrationErrors);
            hydrationErrors = null;
          }
        }
        function getIsHydrating() {
          return isHydrating;
        }
        function queueHydrationError(error4) {
          if (hydrationErrors === null) {
            hydrationErrors = [error4];
          } else {
            hydrationErrors.push(error4);
          }
        }
        var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
        var NoTransition = null;
        function requestCurrentTransition() {
          return ReactCurrentBatchConfig$1.transition;
        }
        var ReactStrictModeWarnings = {
          recordUnsafeLifecycleWarnings: function(fiber, instance4) {
          },
          flushPendingUnsafeLifecycleWarnings: function() {
          },
          recordLegacyContextWarning: function(fiber, instance4) {
          },
          flushLegacyContextWarning: function() {
          },
          discardPendingWarnings: function() {
          }
        };
        {
          var findStrictRoot = function(fiber) {
            var maybeStrictRoot = null;
            var node14 = fiber;
            while (node14 !== null) {
              if (node14.mode & StrictLegacyMode) {
                maybeStrictRoot = node14;
              }
              node14 = node14.return;
            }
            return maybeStrictRoot;
          };
          var setToSortedString = function(set3) {
            var array7 = [];
            set3.forEach(function(value2) {
              array7.push(value2);
            });
            return array7.sort().join(", ");
          };
          var pendingComponentWillMountWarnings = [];
          var pendingUNSAFE_ComponentWillMountWarnings = [];
          var pendingComponentWillReceivePropsWarnings = [];
          var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
          var pendingComponentWillUpdateWarnings = [];
          var pendingUNSAFE_ComponentWillUpdateWarnings = [];
          var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance4) {
            if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
              return;
            }
            if (typeof instance4.componentWillMount === "function" && // Don't warn about react-lifecycles-compat polyfilled components.
            instance4.componentWillMount.Za !== true) {
              pendingComponentWillMountWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance4.UNSAFE_componentWillMount === "function") {
              pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
            }
            if (typeof instance4.componentWillReceiveProps === "function" && instance4.componentWillReceiveProps.Za !== true) {
              pendingComponentWillReceivePropsWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance4.UNSAFE_componentWillReceiveProps === "function") {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
            }
            if (typeof instance4.componentWillUpdate === "function" && instance4.componentWillUpdate.Za !== true) {
              pendingComponentWillUpdateWarnings.push(fiber);
            }
            if (fiber.mode & StrictLegacyMode && typeof instance4.UNSAFE_componentWillUpdate === "function") {
              pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
            var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillMountWarnings.length > 0) {
              pendingComponentWillMountWarnings.forEach(function(fiber) {
                componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillMountWarnings = [];
            }
            var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
              pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillMountWarnings = [];
            }
            var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillReceivePropsWarnings.length > 0) {
              pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillReceivePropsWarnings = [];
            }
            var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
              pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            }
            var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingComponentWillUpdateWarnings.length > 0) {
              pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingComponentWillUpdateWarnings = [];
            }
            var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
            if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
              pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutUnsafeLifecycles.add(fiber.type);
              });
              pendingUNSAFE_ComponentWillUpdateWarnings = [];
            }
            if (UNSAFE_componentWillMountUniqueNames.size > 0) {
              var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
              error3("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
            }
            if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
              error3("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
            }
            if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
              error3("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
            }
            if (componentWillMountUniqueNames.size > 0) {
              var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
              warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
            }
            if (componentWillReceivePropsUniqueNames.size > 0) {
              var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
              warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
            }
            if (componentWillUpdateUniqueNames.size > 0) {
              var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
              warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
            }
          };
          var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
          ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance4) {
            var strictRoot = findStrictRoot(fiber);
            if (strictRoot === null) {
              error3("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
              return;
            }
            if (didWarnAboutLegacyContext.has(fiber.type)) {
              return;
            }
            var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
            if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance4 !== null && typeof instance4.getChildContext === "function") {
              if (warningsForRoot === void 0) {
                warningsForRoot = [];
                pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
              }
              warningsForRoot.push(fiber);
            }
          };
          ReactStrictModeWarnings.flushLegacyContextWarning = function() {
            pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
              if (fiberArray.length === 0) {
                return;
              }
              var firstFiber = fiberArray[0];
              var uniqueNames = /* @__PURE__ */ new Set();
              fiberArray.forEach(function(fiber) {
                uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                didWarnAboutLegacyContext.add(fiber.type);
              });
              var sortedNames = setToSortedString(uniqueNames);
              try {
                setCurrentFiber(firstFiber);
                error3("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
              } finally {
                resetCurrentFiber();
              }
            });
          };
          ReactStrictModeWarnings.discardPendingWarnings = function() {
            pendingComponentWillMountWarnings = [];
            pendingUNSAFE_ComponentWillMountWarnings = [];
            pendingComponentWillReceivePropsWarnings = [];
            pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
            pendingComponentWillUpdateWarnings = [];
            pendingUNSAFE_ComponentWillUpdateWarnings = [];
            pendingLegacyContextWarning = /* @__PURE__ */ new Map();
          };
        }
        function resolveDefaultProps(Component64, baseProps) {
          if (Component64 && Component64.defaultProps) {
            var props = assign2({}, baseProps);
            var defaultProps44 = Component64.defaultProps;
            for (var propName in defaultProps44) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps44[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        var valueCursor = createCursor(null);
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var currentlyRenderingFiber = null;
        var lastContextDependency = null;
        var lastFullyObservedContext = null;
        var isDisallowedContextReadInDEV = false;
        function resetContextDependencies() {
          currentlyRenderingFiber = null;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function enterDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = true;
          }
        }
        function exitDisallowedContextReadInDEV() {
          {
            isDisallowedContextReadInDEV = false;
          }
        }
        function pushProvider(providerFiber, context2, nextValue) {
          {
            push4(valueCursor, context2.Ia, providerFiber);
            context2.Ia = nextValue;
            {
              if (context2.rb !== void 0 && context2.rb !== null && context2.rb !== rendererSigil) {
                error3("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context2.rb = rendererSigil;
            }
          }
        }
        function popProvider(context2, providerFiber) {
          var currentValue = valueCursor.current;
          pop2(valueCursor, providerFiber);
          {
            {
              context2.Ia = currentValue;
            }
          }
        }
        function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
          var node14 = parent;
          while (node14 !== null) {
            var alternate = node14.alternate;
            if (!isSubsetOfLanes(node14.childLanes, renderLanes2)) {
              node14.childLanes = mergeLanes(node14.childLanes, renderLanes2);
              if (alternate !== null) {
                alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
              }
            } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
              alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
            }
            if (node14 === propagationRoot) {
              break;
            }
            node14 = node14.return;
          }
          {
            if (node14 !== propagationRoot) {
              error3("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
        }
        function propagateContextChange(workInProgress2, context2, renderLanes2) {
          {
            propagateContextChange_eager(workInProgress2, context2, renderLanes2);
          }
        }
        function propagateContextChange_eager(workInProgress2, context2, renderLanes2) {
          var fiber = workInProgress2.child;
          if (fiber !== null) {
            fiber.return = workInProgress2;
          }
          while (fiber !== null) {
            var nextFiber = void 0;
            var list = fiber.dependencies;
            if (list !== null) {
              nextFiber = fiber.child;
              var dependency = list.firstContext;
              while (dependency !== null) {
                if (dependency.context === context2) {
                  if (fiber.tag === ClassComponent) {
                    var lane = pickArbitraryLane(renderLanes2);
                    var update2 = createUpdate(NoTimestamp, lane);
                    update2.tag = ForceUpdate;
                    var updateQueue = fiber.updateQueue;
                    if (updateQueue === null)
                      ;
                    else {
                      var sharedQueue = updateQueue.shared;
                      var pending = sharedQueue.pending;
                      if (pending === null) {
                        update2.next = update2;
                      } else {
                        update2.next = pending.next;
                        pending.next = update2;
                      }
                      sharedQueue.pending = update2;
                    }
                  }
                  fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                  var alternate = fiber.alternate;
                  if (alternate !== null) {
                    alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                  }
                  scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2);
                  list.lanes = mergeLanes(list.lanes, renderLanes2);
                  break;
                }
                dependency = dependency.next;
              }
            } else if (fiber.tag === ContextProvider) {
              nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
            } else if (fiber.tag === DehydratedFragment) {
              var parentSuspense = fiber.return;
              if (parentSuspense === null) {
                throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
              }
              parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
              var _alternate = parentSuspense.alternate;
              if (_alternate !== null) {
                _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2);
              }
              scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2);
              nextFiber = fiber.sibling;
            } else {
              nextFiber = fiber.child;
            }
            if (nextFiber !== null) {
              nextFiber.return = fiber;
            } else {
              nextFiber = fiber;
              while (nextFiber !== null) {
                if (nextFiber === workInProgress2) {
                  nextFiber = null;
                  break;
                }
                var sibling = nextFiber.sibling;
                if (sibling !== null) {
                  sibling.return = nextFiber.return;
                  nextFiber = sibling;
                  break;
                }
                nextFiber = nextFiber.return;
              }
            }
            fiber = nextFiber;
          }
        }
        function prepareToReadContext(workInProgress2, renderLanes2) {
          currentlyRenderingFiber = workInProgress2;
          lastContextDependency = null;
          lastFullyObservedContext = null;
          var dependencies = workInProgress2.dependencies;
          if (dependencies !== null) {
            {
              var firstContext = dependencies.firstContext;
              if (firstContext !== null) {
                if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                  markWorkInProgressReceivedUpdate();
                }
                dependencies.firstContext = null;
              }
            }
          }
        }
        function readContext(context2) {
          {
            if (isDisallowedContextReadInDEV) {
              error3("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          var value2 = context2.Ia;
          if (lastFullyObservedContext === context2)
            ;
          else {
            var contextItem = {
              context: context2,
              memoizedValue: value2,
              next: null
            };
            if (lastContextDependency === null) {
              if (currentlyRenderingFiber === null) {
                throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
              }
              lastContextDependency = contextItem;
              currentlyRenderingFiber.dependencies = {
                lanes: NoLanes,
                firstContext: contextItem
              };
            } else {
              lastContextDependency = lastContextDependency.next = contextItem;
            }
          }
          return value2;
        }
        var concurrentQueues = null;
        function pushConcurrentUpdateQueue(queue) {
          if (concurrentQueues === null) {
            concurrentQueues = [queue];
          } else {
            concurrentQueues.push(queue);
          }
        }
        function finishQueueingConcurrentUpdates() {
          if (concurrentQueues !== null) {
            for (var i = 0; i < concurrentQueues.length; i++) {
              var queue = concurrentQueues[i];
              var lastInterleavedUpdate = queue.interleaved;
              if (lastInterleavedUpdate !== null) {
                queue.interleaved = null;
                var firstInterleavedUpdate = lastInterleavedUpdate.next;
                var lastPendingUpdate = queue.pending;
                if (lastPendingUpdate !== null) {
                  var firstPendingUpdate = lastPendingUpdate.next;
                  lastPendingUpdate.next = firstInterleavedUpdate;
                  lastInterleavedUpdate.next = firstPendingUpdate;
                }
                queue.pending = lastInterleavedUpdate;
              }
            }
            concurrentQueues = null;
          }
        }
        function enqueueConcurrentHookUpdate(fiber, queue, update2, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update2.next = update2;
            pushConcurrentUpdateQueue(queue);
          } else {
            update2.next = interleaved.next;
            interleaved.next = update2;
          }
          queue.interleaved = update2;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update2, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update2.next = update2;
            pushConcurrentUpdateQueue(queue);
          } else {
            update2.next = interleaved.next;
            interleaved.next = update2;
          }
          queue.interleaved = update2;
        }
        function enqueueConcurrentClassUpdate(fiber, queue, update2, lane) {
          var interleaved = queue.interleaved;
          if (interleaved === null) {
            update2.next = update2;
            pushConcurrentUpdateQueue(queue);
          } else {
            update2.next = interleaved.next;
            interleaved.next = update2;
          }
          queue.interleaved = update2;
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        function enqueueConcurrentRenderForLane(fiber, lane) {
          return markUpdateLaneFromFiberToRoot(fiber, lane);
        }
        var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
          var alternate = sourceFiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, lane);
          }
          {
            if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
              warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
            }
          }
          var node14 = sourceFiber;
          var parent = sourceFiber.return;
          while (parent !== null) {
            parent.childLanes = mergeLanes(parent.childLanes, lane);
            alternate = parent.alternate;
            if (alternate !== null) {
              alternate.childLanes = mergeLanes(alternate.childLanes, lane);
            } else {
              {
                if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                  warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                }
              }
            }
            node14 = parent;
            parent = parent.return;
          }
          if (node14.tag === HostRoot) {
            var root2 = node14.stateNode;
            return root2;
          } else {
            return null;
          }
        }
        var UpdateState = 0;
        var ReplaceState = 1;
        var ForceUpdate = 2;
        var CaptureUpdate = 3;
        var hasForceUpdate = false;
        var didWarnUpdateInsideUpdate;
        var currentlyProcessingQueue;
        {
          didWarnUpdateInsideUpdate = false;
          currentlyProcessingQueue = null;
        }
        function initializeUpdateQueue(fiber) {
          var queue = {
            baseState: fiber.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: {
              pending: null,
              interleaved: null,
              lanes: NoLanes
            },
            effects: null
          };
          fiber.updateQueue = queue;
        }
        function cloneUpdateQueue(current2, workInProgress2) {
          var queue = workInProgress2.updateQueue;
          var currentQueue = current2.updateQueue;
          if (queue === currentQueue) {
            var clone2 = {
              baseState: currentQueue.baseState,
              firstBaseUpdate: currentQueue.firstBaseUpdate,
              lastBaseUpdate: currentQueue.lastBaseUpdate,
              shared: currentQueue.shared,
              effects: currentQueue.effects
            };
            workInProgress2.updateQueue = clone2;
          }
        }
        function createUpdate(eventTime, lane) {
          var update2 = {
            eventTime,
            lane,
            tag: UpdateState,
            payload: null,
            callback: null,
            next: null
          };
          return update2;
        }
        function enqueueUpdate(fiber, update2, lane) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return null;
          }
          var sharedQueue = updateQueue.shared;
          {
            if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
              error3("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
              didWarnUpdateInsideUpdate = true;
            }
          }
          if (isUnsafeClassRenderPhaseUpdate()) {
            var pending = sharedQueue.pending;
            if (pending === null) {
              update2.next = update2;
            } else {
              update2.next = pending.next;
              pending.next = update2;
            }
            sharedQueue.pending = update2;
            return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
          } else {
            return enqueueConcurrentClassUpdate(fiber, sharedQueue, update2, lane);
          }
        }
        function entangleTransitions(root2, fiber, lane) {
          var updateQueue = fiber.updateQueue;
          if (updateQueue === null) {
            return;
          }
          var sharedQueue = updateQueue.shared;
          if (isTransitionLane(lane)) {
            var queueLanes = sharedQueue.lanes;
            queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            sharedQueue.lanes = newQueueLanes;
            markRootEntangled(root2, newQueueLanes);
          }
        }
        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
          var queue = workInProgress2.updateQueue;
          var current2 = workInProgress2.alternate;
          if (current2 !== null) {
            var currentQueue = current2.updateQueue;
            if (queue === currentQueue) {
              var newFirst = null;
              var newLast = null;
              var firstBaseUpdate = queue.firstBaseUpdate;
              if (firstBaseUpdate !== null) {
                var update2 = firstBaseUpdate;
                do {
                  var clone2 = {
                    eventTime: update2.eventTime,
                    lane: update2.lane,
                    tag: update2.tag,
                    payload: update2.payload,
                    callback: update2.callback,
                    next: null
                  };
                  if (newLast === null) {
                    newFirst = newLast = clone2;
                  } else {
                    newLast.next = clone2;
                    newLast = clone2;
                  }
                  update2 = update2.next;
                } while (update2 !== null);
                if (newLast === null) {
                  newFirst = newLast = capturedUpdate;
                } else {
                  newLast.next = capturedUpdate;
                  newLast = capturedUpdate;
                }
              } else {
                newFirst = newLast = capturedUpdate;
              }
              queue = {
                baseState: currentQueue.baseState,
                firstBaseUpdate: newFirst,
                lastBaseUpdate: newLast,
                shared: currentQueue.shared,
                effects: currentQueue.effects
              };
              workInProgress2.updateQueue = queue;
              return;
            }
          }
          var lastBaseUpdate = queue.lastBaseUpdate;
          if (lastBaseUpdate === null) {
            queue.firstBaseUpdate = capturedUpdate;
          } else {
            lastBaseUpdate.next = capturedUpdate;
          }
          queue.lastBaseUpdate = capturedUpdate;
        }
        function getStateFromUpdate(workInProgress2, queue, update2, prevState, nextProps, instance4) {
          switch (update2.tag) {
            case ReplaceState: {
              var payload = update2.payload;
              if (typeof payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                var nextState = payload.call(instance4, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      payload.call(instance4, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
                return nextState;
              }
              return payload;
            }
            case CaptureUpdate: {
              workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
            }
            case UpdateState: {
              var _payload = update2.payload;
              var partialState;
              if (typeof _payload === "function") {
                {
                  enterDisallowedContextReadInDEV();
                }
                partialState = _payload.call(instance4, prevState, nextProps);
                {
                  if (workInProgress2.mode & StrictLegacyMode) {
                    setIsStrictModeForDevtools(true);
                    try {
                      _payload.call(instance4, prevState, nextProps);
                    } finally {
                      setIsStrictModeForDevtools(false);
                    }
                  }
                  exitDisallowedContextReadInDEV();
                }
              } else {
                partialState = _payload;
              }
              if (partialState === null || partialState === void 0) {
                return prevState;
              }
              return assign2({}, prevState, partialState);
            }
            case ForceUpdate: {
              hasForceUpdate = true;
              return prevState;
            }
          }
          return prevState;
        }
        function processUpdateQueue(workInProgress2, props, instance4, renderLanes2) {
          var queue = workInProgress2.updateQueue;
          hasForceUpdate = false;
          {
            currentlyProcessingQueue = queue.shared;
          }
          var firstBaseUpdate = queue.firstBaseUpdate;
          var lastBaseUpdate = queue.lastBaseUpdate;
          var pendingQueue = queue.shared.pending;
          if (pendingQueue !== null) {
            queue.shared.pending = null;
            var lastPendingUpdate = pendingQueue;
            var firstPendingUpdate = lastPendingUpdate.next;
            lastPendingUpdate.next = null;
            if (lastBaseUpdate === null) {
              firstBaseUpdate = firstPendingUpdate;
            } else {
              lastBaseUpdate.next = firstPendingUpdate;
            }
            lastBaseUpdate = lastPendingUpdate;
            var current2 = workInProgress2.alternate;
            if (current2 !== null) {
              var currentQueue = current2.updateQueue;
              var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
              if (currentLastBaseUpdate !== lastBaseUpdate) {
                if (currentLastBaseUpdate === null) {
                  currentQueue.firstBaseUpdate = firstPendingUpdate;
                } else {
                  currentLastBaseUpdate.next = firstPendingUpdate;
                }
                currentQueue.lastBaseUpdate = lastPendingUpdate;
              }
            }
          }
          if (firstBaseUpdate !== null) {
            var newState = queue.baseState;
            var newLanes = NoLanes;
            var newBaseState = null;
            var newFirstBaseUpdate = null;
            var newLastBaseUpdate = null;
            var update2 = firstBaseUpdate;
            do {
              var updateLane = update2.lane;
              var updateEventTime = update2.eventTime;
              if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                var clone2 = {
                  eventTime: updateEventTime,
                  lane: updateLane,
                  tag: update2.tag,
                  payload: update2.payload,
                  callback: update2.callback,
                  next: null
                };
                if (newLastBaseUpdate === null) {
                  newFirstBaseUpdate = newLastBaseUpdate = clone2;
                  newBaseState = newState;
                } else {
                  newLastBaseUpdate = newLastBaseUpdate.next = clone2;
                }
                newLanes = mergeLanes(newLanes, updateLane);
              } else {
                if (newLastBaseUpdate !== null) {
                  var _clone = {
                    eventTime: updateEventTime,
                    // This update is going to be committed so we never want uncommit
                    // it. Using NoLane works because 0 is a subset of all bitmasks, so
                    // this will never be skipped by the check above.
                    lane: NoLane,
                    tag: update2.tag,
                    payload: update2.payload,
                    callback: update2.callback,
                    next: null
                  };
                  newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                }
                newState = getStateFromUpdate(workInProgress2, queue, update2, newState, props, instance4);
                var callback = update2.callback;
                if (callback !== null && // If the update was already committed, we should not queue its
                // callback again.
                update2.lane !== NoLane) {
                  workInProgress2.flags |= Callback;
                  var effects = queue.effects;
                  if (effects === null) {
                    queue.effects = [update2];
                  } else {
                    effects.push(update2);
                  }
                }
              }
              update2 = update2.next;
              if (update2 === null) {
                pendingQueue = queue.shared.pending;
                if (pendingQueue === null) {
                  break;
                } else {
                  var _lastPendingUpdate = pendingQueue;
                  var _firstPendingUpdate = _lastPendingUpdate.next;
                  _lastPendingUpdate.next = null;
                  update2 = _firstPendingUpdate;
                  queue.lastBaseUpdate = _lastPendingUpdate;
                  queue.shared.pending = null;
                }
              }
            } while (true);
            if (newLastBaseUpdate === null) {
              newBaseState = newState;
            }
            queue.baseState = newBaseState;
            queue.firstBaseUpdate = newFirstBaseUpdate;
            queue.lastBaseUpdate = newLastBaseUpdate;
            var lastInterleaved = queue.shared.interleaved;
            if (lastInterleaved !== null) {
              var interleaved = lastInterleaved;
              do {
                newLanes = mergeLanes(newLanes, interleaved.lane);
                interleaved = interleaved.next;
              } while (interleaved !== lastInterleaved);
            } else if (firstBaseUpdate === null) {
              queue.shared.lanes = NoLanes;
            }
            markSkippedUpdateLanes(newLanes);
            workInProgress2.lanes = newLanes;
            workInProgress2.memoizedState = newState;
          }
          {
            currentlyProcessingQueue = null;
          }
        }
        function callCallback(callback, context2) {
          if (typeof callback !== "function") {
            throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
          }
          callback.call(context2);
        }
        function resetHasForceUpdateBeforeProcessing() {
          hasForceUpdate = false;
        }
        function checkHasForceUpdateAfterProcessing() {
          return hasForceUpdate;
        }
        function commitUpdateQueue(finishedWork, finishedQueue, instance4) {
          var effects = finishedQueue.effects;
          finishedQueue.effects = null;
          if (effects !== null) {
            for (var i = 0; i < effects.length; i++) {
              var effect = effects[i];
              var callback = effect.callback;
              if (callback !== null) {
                effect.callback = null;
                callCallback(callback, instance4);
              }
            }
          }
        }
        var fakeInternalInstance = {};
        var emptyRefsObject = new React210.Component().refs;
        var didWarnAboutStateAssignmentForComponent;
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback, callerName) {
            if (callback === null || typeof callback === "function") {
              return;
            }
            var key = callerName + "_" + callback;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error3("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error3("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
          Object.defineProperty(fakeInternalInstance, "_processChildContext", {
            enumerable: false,
            value: function() {
              throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
            }
          });
          Object.freeze(fakeInternalInstance);
        }
        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
          var prevState = workInProgress2.memoizedState;
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                partialState = getDerivedStateFromProps(nextProps, prevState);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var memoizedState = partialState === null || partialState === void 0 ? prevState : assign2({}, prevState, partialState);
          workInProgress2.memoizedState = memoizedState;
          if (workInProgress2.lanes === NoLanes) {
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = memoizedState;
          }
        }
        var classComponentUpdater = {
          isMounted,
          enqueueSetState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update2 = createUpdate(eventTime, lane);
            update2.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "setState");
              }
              update2.callback = callback;
            }
            var root2 = enqueueUpdate(fiber, update2, lane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
              entangleTransitions(root2, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueReplaceState: function(inst, payload, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update2 = createUpdate(eventTime, lane);
            update2.tag = ReplaceState;
            update2.payload = payload;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "replaceState");
              }
              update2.callback = callback;
            }
            var root2 = enqueueUpdate(fiber, update2, lane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
              entangleTransitions(root2, fiber, lane);
            }
            {
              markStateUpdateScheduled(fiber, lane);
            }
          },
          enqueueForceUpdate: function(inst, callback) {
            var fiber = get(inst);
            var eventTime = requestEventTime();
            var lane = requestUpdateLane(fiber);
            var update2 = createUpdate(eventTime, lane);
            update2.tag = ForceUpdate;
            if (callback !== void 0 && callback !== null) {
              {
                warnOnInvalidCallback(callback, "forceUpdate");
              }
              update2.callback = callback;
            }
            var root2 = enqueueUpdate(fiber, update2, lane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
              entangleTransitions(root2, fiber, lane);
            }
            {
              markForceUpdateScheduled(fiber, lane);
            }
          }
        };
        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
          var instance4 = workInProgress2.stateNode;
          if (typeof instance4.shouldComponentUpdate === "function") {
            var shouldUpdate = instance4.shouldComponentUpdate(newProps, newState, nextContext);
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  shouldUpdate = instance4.shouldComponentUpdate(newProps, newState, nextContext);
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              if (shouldUpdate === void 0) {
                error3("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
              }
            }
            return shouldUpdate;
          }
          if (ctor.prototype && ctor.prototype.isPureReactComponent) {
            return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
          }
          return true;
        }
        function checkClassInstance(workInProgress2, ctor, newProps) {
          var instance4 = workInProgress2.stateNode;
          {
            var name2 = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance4.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error3("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name2);
              } else {
                error3("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name2);
              }
            }
            if (instance4.getInitialState && !instance4.getInitialState.isReactClassApproved && !instance4.state) {
              error3("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name2);
            }
            if (instance4.getDefaultProps && !instance4.getDefaultProps.isReactClassApproved) {
              error3("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name2);
            }
            if (instance4.propTypes) {
              error3("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name2);
            }
            if (instance4.contextType) {
              error3("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name2);
            }
            {
              if (instance4.contextTypes) {
                error3("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name2);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error3("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name2);
              }
            }
            if (typeof instance4.componentShouldUpdate === "function") {
              error3("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name2);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance4.shouldComponentUpdate !== "undefined") {
              error3("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance4.componentDidUnmount === "function") {
              error3("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name2);
            }
            if (typeof instance4.componentDidReceiveProps === "function") {
              error3("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name2);
            }
            if (typeof instance4.componentWillRecieveProps === "function") {
              error3("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name2);
            }
            if (typeof instance4.UNSAFE_componentWillRecieveProps === "function") {
              error3("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name2);
            }
            var hasMutatedProps = instance4.props !== newProps;
            if (instance4.props !== void 0 && hasMutatedProps) {
              error3("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name2, name2);
            }
            if (instance4.defaultProps) {
              error3("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name2, name2);
            }
            if (typeof instance4.getSnapshotBeforeUpdate === "function" && typeof instance4.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error3("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance4.getDerivedStateFromProps === "function") {
              error3("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name2);
            }
            if (typeof instance4.getDerivedStateFromError === "function") {
              error3("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name2);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error3("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name2);
            }
            var _state = instance4.state;
            if (_state && (typeof _state !== "object" || isArray4(_state))) {
              error3("%s.state: must be set to an object or null", name2);
            }
            if (typeof instance4.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error3("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name2);
            }
          }
        }
        function adoptClassInstance(workInProgress2, instance4) {
          instance4.updater = classComponentUpdater;
          workInProgress2.stateNode = instance4;
          set2(instance4, workInProgress2);
          {
            instance4.ve = fakeInternalInstance;
          }
        }
        function constructClassInstance(workInProgress2, ctor, props) {
          var isLegacyContextConsumer = false;
          var unmaskedContext = emptyContextObject;
          var context2 = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType.P === void 0
              );
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType.P !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error3("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context2 = readContext(contextType);
          } else {
            unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            var contextTypes = ctor.contextTypes;
            isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
            context2 = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
          }
          var instance4 = new ctor(props, context2);
          {
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                instance4 = new ctor(props, context2);
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
          }
          var state = workInProgress2.memoizedState = instance4.state !== null && instance4.state !== void 0 ? instance4.state : null;
          adoptClassInstance(workInProgress2, instance4);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error3("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance4.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance4.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance4.componentWillMount === "function" && instance4.componentWillMount.Za !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance4.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance4.componentWillReceiveProps === "function" && instance4.componentWillReceiveProps.Za !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance4.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance4.componentWillUpdate === "function" && instance4.componentWillUpdate.Za !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance4.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error3("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          if (isLegacyContextConsumer) {
            cacheContext(workInProgress2, unmaskedContext, context2);
          }
          return instance4;
        }
        function callComponentWillMount(workInProgress2, instance4) {
          var oldState = instance4.state;
          if (typeof instance4.componentWillMount === "function") {
            instance4.componentWillMount();
          }
          if (typeof instance4.UNSAFE_componentWillMount === "function") {
            instance4.UNSAFE_componentWillMount();
          }
          if (oldState !== instance4.state) {
            {
              error3("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance4, instance4.state, null);
          }
        }
        function callComponentWillReceiveProps(workInProgress2, instance4, newProps, nextContext) {
          var oldState = instance4.state;
          if (typeof instance4.componentWillReceiveProps === "function") {
            instance4.componentWillReceiveProps(newProps, nextContext);
          }
          if (typeof instance4.UNSAFE_componentWillReceiveProps === "function") {
            instance4.UNSAFE_componentWillReceiveProps(newProps, nextContext);
          }
          if (instance4.state !== oldState) {
            {
              var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
              if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                didWarnAboutStateAssignmentForComponent.add(componentName);
                error3("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
              }
            }
            classComponentUpdater.enqueueReplaceState(instance4, instance4.state, null);
          }
        }
        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          {
            checkClassInstance(workInProgress2, ctor, newProps);
          }
          var instance4 = workInProgress2.stateNode;
          instance4.props = newProps;
          instance4.state = workInProgress2.memoizedState;
          instance4.refs = emptyRefsObject;
          initializeUpdateQueue(workInProgress2);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance4.context = readContext(contextType);
          } else {
            var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            instance4.context = getMaskedContext(workInProgress2, unmaskedContext);
          }
          {
            if (instance4.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error3("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance4);
            }
            {
              ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance4);
            }
          }
          instance4.state = workInProgress2.memoizedState;
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            instance4.state = workInProgress2.memoizedState;
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance4.getSnapshotBeforeUpdate !== "function" && (typeof instance4.UNSAFE_componentWillMount === "function" || typeof instance4.componentWillMount === "function")) {
            callComponentWillMount(workInProgress2, instance4);
            processUpdateQueue(workInProgress2, newProps, instance4, renderLanes2);
            instance4.state = workInProgress2.memoizedState;
          }
          if (typeof instance4.componentDidMount === "function") {
            var fiberFlags = Update;
            {
              fiberFlags |= LayoutStatic;
            }
            if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
              fiberFlags |= MountLayoutDev;
            }
            workInProgress2.flags |= fiberFlags;
          }
        }
        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
          var instance4 = workInProgress2.stateNode;
          var oldProps = workInProgress2.memoizedProps;
          instance4.props = oldProps;
          var oldContext = instance4.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance4.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance4.UNSAFE_componentWillReceiveProps === "function" || typeof instance4.componentWillReceiveProps === "function")) {
            if (oldProps !== newProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance4, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance4.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance4, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
            if (typeof instance4.componentDidMount === "function") {
              var fiberFlags = Update;
              {
                fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= fiberFlags;
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance4.UNSAFE_componentWillMount === "function" || typeof instance4.componentWillMount === "function")) {
              if (typeof instance4.componentWillMount === "function") {
                instance4.componentWillMount();
              }
              if (typeof instance4.UNSAFE_componentWillMount === "function") {
                instance4.UNSAFE_componentWillMount();
              }
            }
            if (typeof instance4.componentDidMount === "function") {
              var _fiberFlags = Update;
              {
                _fiberFlags |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags;
            }
          } else {
            if (typeof instance4.componentDidMount === "function") {
              var _fiberFlags2 = Update;
              {
                _fiberFlags2 |= LayoutStatic;
              }
              if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                _fiberFlags2 |= MountLayoutDev;
              }
              workInProgress2.flags |= _fiberFlags2;
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance4.props = newProps;
          instance4.state = newState;
          instance4.context = nextContext;
          return shouldUpdate;
        }
        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
          var instance4 = workInProgress2.stateNode;
          cloneUpdateQueue(current2, workInProgress2);
          var unresolvedOldProps = workInProgress2.memoizedProps;
          var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
          instance4.props = oldProps;
          var unresolvedNewProps = workInProgress2.pendingProps;
          var oldContext = instance4.context;
          var contextType = ctor.contextType;
          var nextContext = emptyContextObject;
          if (typeof contextType === "object" && contextType !== null) {
            nextContext = readContext(contextType);
          } else {
            var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
            nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance4.getSnapshotBeforeUpdate === "function";
          if (!hasNewLifecycles && (typeof instance4.UNSAFE_componentWillReceiveProps === "function" || typeof instance4.componentWillReceiveProps === "function")) {
            if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
              callComponentWillReceiveProps(workInProgress2, instance4, newProps, nextContext);
            }
          }
          resetHasForceUpdateBeforeProcessing();
          var oldState = workInProgress2.memoizedState;
          var newState = instance4.state = oldState;
          processUpdateQueue(workInProgress2, newProps, instance4, renderLanes2);
          newState = workInProgress2.memoizedState;
          if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
            if (typeof instance4.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance4.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            return false;
          }
          if (typeof getDerivedStateFromProps === "function") {
            applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
            newState = workInProgress2.memoizedState;
          }
          var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
          // both before and after `shouldComponentUpdate` has been called. Not ideal,
          // but I'm loath to refactor this function. This only happens for memoized
          // components so it's not that common.
          enableLazyContextPropagation;
          if (shouldUpdate) {
            if (!hasNewLifecycles && (typeof instance4.UNSAFE_componentWillUpdate === "function" || typeof instance4.componentWillUpdate === "function")) {
              if (typeof instance4.componentWillUpdate === "function") {
                instance4.componentWillUpdate(newProps, newState, nextContext);
              }
              if (typeof instance4.UNSAFE_componentWillUpdate === "function") {
                instance4.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
              }
            }
            if (typeof instance4.componentDidUpdate === "function") {
              workInProgress2.flags |= Update;
            }
            if (typeof instance4.getSnapshotBeforeUpdate === "function") {
              workInProgress2.flags |= Snapshot;
            }
          } else {
            if (typeof instance4.componentDidUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Update;
              }
            }
            if (typeof instance4.getSnapshotBeforeUpdate === "function") {
              if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                workInProgress2.flags |= Snapshot;
              }
            }
            workInProgress2.memoizedProps = newProps;
            workInProgress2.memoizedState = newState;
          }
          instance4.props = newProps;
          instance4.state = newState;
          instance4.context = nextContext;
          return shouldUpdate;
        }
        var didWarnAboutMaps;
        var didWarnAboutGenerators;
        var didWarnAboutStringRefs;
        var ownerHasKeyUseWarning;
        var ownerHasFunctionTypeWarning;
        var warnForMissingKey = function(child, returnFiber) {
        };
        {
          didWarnAboutMaps = false;
          didWarnAboutGenerators = false;
          didWarnAboutStringRefs = {};
          ownerHasKeyUseWarning = {};
          ownerHasFunctionTypeWarning = {};
          warnForMissingKey = function(child, returnFiber) {
            if (child === null || typeof child !== "object") {
              return;
            }
            if (!child.qa || child.qa.validated || child.key != null) {
              return;
            }
            if (typeof child.qa !== "object") {
              throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
            }
            child.qa.validated = true;
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasKeyUseWarning[componentName]) {
              return;
            }
            ownerHasKeyUseWarning[componentName] = true;
            error3('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
          };
        }
        function coerceRef(returnFiber, current2, element6) {
          var mixedRef = element6.ref;
          if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
            {
              if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
              // because these cannot be automatically converted to an arrow function
              // using a codemod. Therefore, we don't have to warn about string refs again.
              !(element6.R && element6.Ob && element6.R.stateNode !== element6.Ob)) {
                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                if (!didWarnAboutStringRefs[componentName]) {
                  {
                    error3('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                  }
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
            if (element6.R) {
              var owner = element6.R;
              var inst;
              if (owner) {
                var ownerFiber = owner;
                if (ownerFiber.tag !== ClassComponent) {
                  throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                }
                inst = ownerFiber.stateNode;
              }
              if (!inst) {
                throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
              }
              var resolvedInst = inst;
              {
                checkPropStringCoercion(mixedRef, "ref");
              }
              var stringRef = "" + mixedRef;
              if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref.xd === stringRef) {
                return current2.ref;
              }
              var ref = function(value2) {
                var refs = resolvedInst.refs;
                if (refs === emptyRefsObject) {
                  refs = resolvedInst.refs = {};
                }
                if (value2 === null) {
                  delete refs[stringRef];
                } else {
                  refs[stringRef] = value2;
                }
              };
              ref.xd = stringRef;
              return ref;
            } else {
              if (typeof mixedRef !== "string") {
                throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
              }
              if (!element6.R) {
                throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
              }
            }
          }
          return mixedRef;
        }
        function throwOnInvalidObjectType(returnFiber, newChild) {
          var childString = Object.prototype.toString.call(newChild);
          throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
        }
        function warnOnFunctionType(returnFiber) {
          {
            var componentName = getComponentNameFromFiber(returnFiber) || "Component";
            if (ownerHasFunctionTypeWarning[componentName]) {
              return;
            }
            ownerHasFunctionTypeWarning[componentName] = true;
            error3("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
          }
        }
        function resolveLazy(lazyType) {
          var payload = lazyType.ia;
          var init = lazyType.ja;
          return init(payload);
        }
        function ChildReconciler(shouldTrackSideEffects) {
          function deleteChild(returnFiber, childToDelete) {
            if (!shouldTrackSideEffects) {
              return;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [childToDelete];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(childToDelete);
            }
          }
          function deleteRemainingChildren(returnFiber, currentFirstChild) {
            if (!shouldTrackSideEffects) {
              return null;
            }
            var childToDelete = currentFirstChild;
            while (childToDelete !== null) {
              deleteChild(returnFiber, childToDelete);
              childToDelete = childToDelete.sibling;
            }
            return null;
          }
          function mapRemainingChildren(returnFiber, currentFirstChild) {
            var existingChildren = /* @__PURE__ */ new Map();
            var existingChild = currentFirstChild;
            while (existingChild !== null) {
              if (existingChild.key !== null) {
                existingChildren.set(existingChild.key, existingChild);
              } else {
                existingChildren.set(existingChild.index, existingChild);
              }
              existingChild = existingChild.sibling;
            }
            return existingChildren;
          }
          function useFiber(fiber, pendingProps) {
            var clone2 = createWorkInProgress(fiber, pendingProps);
            clone2.index = 0;
            clone2.sibling = null;
            return clone2;
          }
          function placeChild(newFiber, lastPlacedIndex, newIndex) {
            newFiber.index = newIndex;
            if (!shouldTrackSideEffects) {
              newFiber.flags |= Forked;
              return lastPlacedIndex;
            }
            var current2 = newFiber.alternate;
            if (current2 !== null) {
              var oldIndex = current2.index;
              if (oldIndex < lastPlacedIndex) {
                newFiber.flags |= Placement;
                return lastPlacedIndex;
              } else {
                return oldIndex;
              }
            } else {
              newFiber.flags |= Placement;
              return lastPlacedIndex;
            }
          }
          function placeSingleChild(newFiber) {
            if (shouldTrackSideEffects && newFiber.alternate === null) {
              newFiber.flags |= Placement;
            }
            return newFiber;
          }
          function updateTextNode(returnFiber, current2, textContent, lanes) {
            if (current2 === null || current2.tag !== HostText) {
              var created = createFiberFromText(textContent, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, textContent);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateElement(returnFiber, current2, element6, lanes) {
            var elementType = element6.type;
            if (elementType === REACT_FRAGMENT_TYPE) {
              return updateFragment2(returnFiber, current2, element6.props.children, lanes, element6.key);
            }
            if (current2 !== null) {
              if (current2.elementType === elementType || // Keep this check inline so it only runs on the false path:
              isCompatibleFamilyForHotReloading(current2, element6) || // Lazy types should reconcile their resolved type.
              // We need to do this after the Hot Reloading check above,
              // because hot reloading has different semantics than prod because
              // it doesn't resuspend. So we can't let the call below suspend.
              typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type) {
                var existing = useFiber(current2, element6.props);
                existing.ref = coerceRef(returnFiber, current2, element6);
                existing.return = returnFiber;
                {
                  existing.ta = element6.xa;
                  existing.da = element6.R;
                }
                return existing;
              }
            }
            var created = createFiberFromElement(element6, returnFiber.mode, lanes);
            created.ref = coerceRef(returnFiber, current2, element6);
            created.return = returnFiber;
            return created;
          }
          function updatePortal(returnFiber, current2, portal, lanes) {
            if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
              var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, portal.children || []);
              existing.return = returnFiber;
              return existing;
            }
          }
          function updateFragment2(returnFiber, current2, fragment, lanes, key) {
            if (current2 === null || current2.tag !== Fragment42) {
              var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
              created.return = returnFiber;
              return created;
            } else {
              var existing = useFiber(current2, fragment);
              existing.return = returnFiber;
              return existing;
            }
          }
          function createChild(returnFiber, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
              created.return = returnFiber;
              return created;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                  _created.ref = coerceRef(returnFiber, null, newChild);
                  _created.return = returnFiber;
                  return _created;
                }
                case REACT_PORTAL_TYPE: {
                  var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                  _created2.return = returnFiber;
                  return _created2;
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild.ia;
                  var init = newChild.ja;
                  return createChild(returnFiber, init(payload), lanes);
                }
              }
              if (isArray4(newChild) || getIteratorFn(newChild)) {
                var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                _created3.return = returnFiber;
                return _created3;
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateSlot(returnFiber, oldFiber, newChild, lanes) {
            var key = oldFiber !== null ? oldFiber.key : null;
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              if (key !== null) {
                return null;
              }
              return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  if (newChild.key === key) {
                    return updateElement(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_PORTAL_TYPE: {
                  if (newChild.key === key) {
                    return updatePortal(returnFiber, oldFiber, newChild, lanes);
                  } else {
                    return null;
                  }
                }
                case REACT_LAZY_TYPE: {
                  var payload = newChild.ia;
                  var init = newChild.ja;
                  return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                }
              }
              if (isArray4(newChild) || getIteratorFn(newChild)) {
                if (key !== null) {
                  return null;
                }
                return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              var matchedFiber = existingChildren.get(newIdx) || null;
              return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE: {
                  var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                }
                case REACT_PORTAL_TYPE: {
                  var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                  return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                }
                case REACT_LAZY_TYPE:
                  var payload = newChild.ia;
                  var init = newChild.ja;
                  return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
              }
              if (isArray4(newChild) || getIteratorFn(newChild)) {
                var _matchedFiber3 = existingChildren.get(newIdx) || null;
                return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return null;
          }
          function warnOnInvalidKey(child, knownKeys, returnFiber) {
            {
              if (typeof child !== "object" || child === null) {
                return knownKeys;
              }
              switch (child.$$typeof) {
                case REACT_ELEMENT_TYPE:
                case REACT_PORTAL_TYPE:
                  warnForMissingKey(child, returnFiber);
                  var key = child.key;
                  if (typeof key !== "string") {
                    break;
                  }
                  if (knownKeys === null) {
                    knownKeys = /* @__PURE__ */ new Set();
                    knownKeys.add(key);
                    break;
                  }
                  if (!knownKeys.has(key)) {
                    knownKeys.add(key);
                    break;
                  }
                  error3("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                  break;
                case REACT_LAZY_TYPE:
                  var payload = child.ia;
                  var init = child.ja;
                  warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                  break;
              }
            }
            return knownKeys;
          }
          function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
            {
              var knownKeys = null;
              for (var i = 0; i < newChildren.length; i++) {
                var child = newChildren[i];
                knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
              }
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (newIdx === newChildren.length) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; newIdx < newChildren.length; newIdx++) {
                var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                if (_newFiber === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber;
                } else {
                  previousNewFiber.sibling = _newFiber;
                }
                previousNewFiber = _newFiber;
              }
              if (getIsHydrating()) {
                var _numberOfForks = newIdx;
                pushTreeFork(returnFiber, _numberOfForks);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; newIdx < newChildren.length; newIdx++) {
              var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
              if (_newFiber2 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber2.alternate !== null) {
                    existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber2;
                } else {
                  previousNewFiber.sibling = _newFiber2;
                }
                previousNewFiber = _newFiber2;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks2 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks2);
            }
            return resultingFirstChild;
          }
          function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
            var iteratorFn = getIteratorFn(newChildrenIterable);
            if (typeof iteratorFn !== "function") {
              throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
            }
            {
              if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
              newChildrenIterable[Symbol.toStringTag] === "Generator") {
                if (!didWarnAboutGenerators) {
                  error3("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                }
                didWarnAboutGenerators = true;
              }
              if (newChildrenIterable.entries === iteratorFn) {
                if (!didWarnAboutMaps) {
                  error3("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                }
                didWarnAboutMaps = true;
              }
              var _newChildren = iteratorFn.call(newChildrenIterable);
              if (_newChildren) {
                var knownKeys = null;
                var _step = _newChildren.next();
                for (; !_step.done; _step = _newChildren.next()) {
                  var child = _step.value;
                  knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                }
              }
            }
            var newChildren = iteratorFn.call(newChildrenIterable);
            if (newChildren == null) {
              throw new Error("An iterable object provided no iterator.");
            }
            var resultingFirstChild = null;
            var previousNewFiber = null;
            var oldFiber = currentFirstChild;
            var lastPlacedIndex = 0;
            var newIdx = 0;
            var nextOldFiber = null;
            var step = newChildren.next();
            for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
              if (oldFiber.index > newIdx) {
                nextOldFiber = oldFiber;
                oldFiber = null;
              } else {
                nextOldFiber = oldFiber.sibling;
              }
              var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
              if (newFiber === null) {
                if (oldFiber === null) {
                  oldFiber = nextOldFiber;
                }
                break;
              }
              if (shouldTrackSideEffects) {
                if (oldFiber && newFiber.alternate === null) {
                  deleteChild(returnFiber, oldFiber);
                }
              }
              lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
              if (previousNewFiber === null) {
                resultingFirstChild = newFiber;
              } else {
                previousNewFiber.sibling = newFiber;
              }
              previousNewFiber = newFiber;
              oldFiber = nextOldFiber;
            }
            if (step.done) {
              deleteRemainingChildren(returnFiber, oldFiber);
              if (getIsHydrating()) {
                var numberOfForks = newIdx;
                pushTreeFork(returnFiber, numberOfForks);
              }
              return resultingFirstChild;
            }
            if (oldFiber === null) {
              for (; !step.done; newIdx++, step = newChildren.next()) {
                var _newFiber3 = createChild(returnFiber, step.value, lanes);
                if (_newFiber3 === null) {
                  continue;
                }
                lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber3;
                } else {
                  previousNewFiber.sibling = _newFiber3;
                }
                previousNewFiber = _newFiber3;
              }
              if (getIsHydrating()) {
                var _numberOfForks3 = newIdx;
                pushTreeFork(returnFiber, _numberOfForks3);
              }
              return resultingFirstChild;
            }
            var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
            for (; !step.done; newIdx++, step = newChildren.next()) {
              var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
              if (_newFiber4 !== null) {
                if (shouldTrackSideEffects) {
                  if (_newFiber4.alternate !== null) {
                    existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                  }
                }
                lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                if (previousNewFiber === null) {
                  resultingFirstChild = _newFiber4;
                } else {
                  previousNewFiber.sibling = _newFiber4;
                }
                previousNewFiber = _newFiber4;
              }
            }
            if (shouldTrackSideEffects) {
              existingChildren.forEach(function(child2) {
                return deleteChild(returnFiber, child2);
              });
            }
            if (getIsHydrating()) {
              var _numberOfForks4 = newIdx;
              pushTreeFork(returnFiber, _numberOfForks4);
            }
            return resultingFirstChild;
          }
          function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
            if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
              deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
              var existing = useFiber(currentFirstChild, textContent);
              existing.return = returnFiber;
              return existing;
            }
            deleteRemainingChildren(returnFiber, currentFirstChild);
            var created = createFiberFromText(textContent, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileSingleElement(returnFiber, currentFirstChild, element6, lanes) {
            var key = element6.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                var elementType = element6.type;
                if (elementType === REACT_FRAGMENT_TYPE) {
                  if (child.tag === Fragment42) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var existing = useFiber(child, element6.props.children);
                    existing.return = returnFiber;
                    {
                      existing.ta = element6.xa;
                      existing.da = element6.R;
                    }
                    return existing;
                  }
                } else {
                  if (child.elementType === elementType || // Keep this check inline so it only runs on the false path:
                  isCompatibleFamilyForHotReloading(child, element6) || // Lazy types should reconcile their resolved type.
                  // We need to do this after the Hot Reloading check above,
                  // because hot reloading has different semantics than prod because
                  // it doesn't resuspend. So we can't let the call below suspend.
                  typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                    deleteRemainingChildren(returnFiber, child.sibling);
                    var _existing = useFiber(child, element6.props);
                    _existing.ref = coerceRef(returnFiber, child, element6);
                    _existing.return = returnFiber;
                    {
                      _existing.ta = element6.xa;
                      _existing.da = element6.R;
                    }
                    return _existing;
                  }
                }
                deleteRemainingChildren(returnFiber, child);
                break;
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            if (element6.type === REACT_FRAGMENT_TYPE) {
              var created = createFiberFromFragment(element6.props.children, returnFiber.mode, lanes, element6.key);
              created.return = returnFiber;
              return created;
            } else {
              var _created4 = createFiberFromElement(element6, returnFiber.mode, lanes);
              _created4.ref = coerceRef(returnFiber, currentFirstChild, element6);
              _created4.return = returnFiber;
              return _created4;
            }
          }
          function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
            var key = portal.key;
            var child = currentFirstChild;
            while (child !== null) {
              if (child.key === key) {
                if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                  deleteRemainingChildren(returnFiber, child.sibling);
                  var existing = useFiber(child, portal.children || []);
                  existing.return = returnFiber;
                  return existing;
                } else {
                  deleteRemainingChildren(returnFiber, child);
                  break;
                }
              } else {
                deleteChild(returnFiber, child);
              }
              child = child.sibling;
            }
            var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
            created.return = returnFiber;
            return created;
          }
          function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
            var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
            if (isUnkeyedTopLevelFragment) {
              newChild = newChild.props.children;
            }
            if (typeof newChild === "object" && newChild !== null) {
              switch (newChild.$$typeof) {
                case REACT_ELEMENT_TYPE:
                  return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_PORTAL_TYPE:
                  return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                case REACT_LAZY_TYPE:
                  var payload = newChild.ia;
                  var init = newChild.ja;
                  return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
              }
              if (isArray4(newChild)) {
                return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
              }
              if (getIteratorFn(newChild)) {
                return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
              }
              throwOnInvalidObjectType(returnFiber, newChild);
            }
            if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
              return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
            }
            {
              if (typeof newChild === "function") {
                warnOnFunctionType(returnFiber);
              }
            }
            return deleteRemainingChildren(returnFiber, currentFirstChild);
          }
          return reconcileChildFibers2;
        }
        var reconcileChildFibers = ChildReconciler(true);
        var mountChildFibers = ChildReconciler(false);
        function cloneChildFibers(current2, workInProgress2) {
          if (current2 !== null && workInProgress2.child !== current2.child) {
            throw new Error("Resuming work not yet implemented.");
          }
          if (workInProgress2.child === null) {
            return;
          }
          var currentChild = workInProgress2.child;
          var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
          workInProgress2.child = newChild;
          newChild.return = workInProgress2;
          while (currentChild.sibling !== null) {
            currentChild = currentChild.sibling;
            newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
            newChild.return = workInProgress2;
          }
          newChild.sibling = null;
        }
        function resetChildFibers(workInProgress2, lanes) {
          var child = workInProgress2.child;
          while (child !== null) {
            resetWorkInProgress(child, lanes);
            child = child.sibling;
          }
        }
        var NO_CONTEXT = {};
        var contextStackCursor$1 = createCursor(NO_CONTEXT);
        var contextFiberStackCursor = createCursor(NO_CONTEXT);
        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
        function requiredContext(c) {
          if (c === NO_CONTEXT) {
            throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
          }
          return c;
        }
        function getRootHostContainer() {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          return rootInstance;
        }
        function pushHostContainer(fiber, nextRootInstance) {
          push4(rootInstanceStackCursor, nextRootInstance, fiber);
          push4(contextFiberStackCursor, fiber, fiber);
          push4(contextStackCursor$1, NO_CONTEXT, fiber);
          var nextRootContext = getRootHostContext(nextRootInstance);
          pop2(contextStackCursor$1, fiber);
          push4(contextStackCursor$1, nextRootContext, fiber);
        }
        function popHostContainer(fiber) {
          pop2(contextStackCursor$1, fiber);
          pop2(contextFiberStackCursor, fiber);
          pop2(rootInstanceStackCursor, fiber);
        }
        function getHostContext() {
          var context2 = requiredContext(contextStackCursor$1.current);
          return context2;
        }
        function pushHostContext(fiber) {
          var rootInstance = requiredContext(rootInstanceStackCursor.current);
          var context2 = requiredContext(contextStackCursor$1.current);
          var nextContext = getChildHostContext(context2, fiber.type);
          if (context2 === nextContext) {
            return;
          }
          push4(contextFiberStackCursor, fiber, fiber);
          push4(contextStackCursor$1, nextContext, fiber);
        }
        function popHostContext(fiber) {
          if (contextFiberStackCursor.current !== fiber) {
            return;
          }
          pop2(contextStackCursor$1, fiber);
          pop2(contextFiberStackCursor, fiber);
        }
        var DefaultSuspenseContext = 0;
        var SubtreeSuspenseContextMask = 1;
        var InvisibleParentSuspenseContext = 1;
        var ForceSuspenseFallback = 2;
        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
        function hasSuspenseContext(parentContext, flag) {
          return (parentContext & flag) !== 0;
        }
        function setDefaultShallowSuspenseContext(parentContext) {
          return parentContext & SubtreeSuspenseContextMask;
        }
        function setShallowSuspenseContext(parentContext, shallowContext) {
          return parentContext & SubtreeSuspenseContextMask | shallowContext;
        }
        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
          return parentContext | subtreeContext;
        }
        function pushSuspenseContext(fiber, newContext) {
          push4(suspenseStackCursor, newContext, fiber);
        }
        function popSuspenseContext(fiber) {
          pop2(suspenseStackCursor, fiber);
        }
        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
          var nextState = workInProgress2.memoizedState;
          if (nextState !== null) {
            if (nextState.dehydrated !== null) {
              return true;
            }
            return false;
          }
          var props = workInProgress2.memoizedProps;
          {
            return true;
          }
        }
        function findFirstSuspended(row) {
          var node14 = row;
          while (node14 !== null) {
            if (node14.tag === SuspenseComponent) {
              var state = node14.memoizedState;
              if (state !== null) {
                var dehydrated = state.dehydrated;
                if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                  return node14;
                }
              }
            } else if (node14.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
            // keep track of whether it suspended or not.
            node14.memoizedProps.revealOrder !== void 0) {
              var didSuspend = (node14.flags & DidCapture) !== NoFlags;
              if (didSuspend) {
                return node14;
              }
            } else if (node14.child !== null) {
              node14.child.return = node14;
              node14 = node14.child;
              continue;
            }
            if (node14 === row) {
              return null;
            }
            while (node14.sibling === null) {
              if (node14.return === null || node14.return === row) {
                return null;
              }
              node14 = node14.return;
            }
            node14.sibling.return = node14.return;
            node14 = node14.sibling;
          }
          return null;
        }
        var NoFlags$1 = (
          /*   */
          0
        );
        var HasEffect = (
          /* */
          1
        );
        var Insertion = (
          /*  */
          2
        );
        var Layout2 = (
          /*    */
          4
        );
        var Passive$1 = (
          /*   */
          8
        );
        var workInProgressSources = [];
        function resetWorkInProgressVersions() {
          for (var i = 0; i < workInProgressSources.length; i++) {
            var mutableSource = workInProgressSources[i];
            {
              mutableSource.we = null;
            }
          }
          workInProgressSources.length = 0;
        }
        function registerMutableSourceForHydration(root2, mutableSource) {
          var getVersion = mutableSource.xe;
          var version = getVersion(mutableSource.xa);
          if (root2.mutableSourceEagerHydrationData == null) {
            root2.mutableSourceEagerHydrationData = [mutableSource, version];
          } else {
            root2.mutableSourceEagerHydrationData.push(mutableSource, version);
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
        var didWarnAboutMismatchedHooksForComponent;
        var didWarnUncachedGetSnapshot;
        {
          didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
        }
        var renderLanes = NoLanes;
        var currentlyRenderingFiber$1 = null;
        var currentHook = null;
        var workInProgressHook = null;
        var didScheduleRenderPhaseUpdate = false;
        var didScheduleRenderPhaseUpdateDuringThisPass = false;
        var localIdCounter = 0;
        var globalClientIdCounter = 0;
        var RE_RENDER_LIMIT = 25;
        var currentHookNameInDev = null;
        var hookTypesDev = null;
        var hookTypesUpdateIndexDev = -1;
        var ignorePreviousDependencies = false;
        function mountHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev === null) {
              hookTypesDev = [hookName];
            } else {
              hookTypesDev.push(hookName);
            }
          }
        }
        function updateHookTypesDev() {
          {
            var hookName = currentHookNameInDev;
            if (hookTypesDev !== null) {
              hookTypesUpdateIndexDev++;
              if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                warnOnHookMismatchInDev(hookName);
              }
            }
          }
        }
        function checkDepsAreArrayDev(deps) {
          {
            if (deps !== void 0 && deps !== null && !isArray4(deps)) {
              error3("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
            }
          }
        }
        function warnOnHookMismatchInDev(currentHookName) {
          {
            var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
            if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
              didWarnAboutMismatchedHooksForComponent.add(componentName);
              if (hookTypesDev !== null) {
                var table = "";
                var secondColumnStart = 30;
                for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
                  var oldHookName = hookTypesDev[i];
                  var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                  var row = i + 1 + ". " + oldHookName;
                  while (row.length < secondColumnStart) {
                    row += " ";
                  }
                  row += newHookName + "\n";
                  table += row;
                }
                error3("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
              }
            }
          }
        }
        function throwInvalidHookError() {
          throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          {
            if (ignorePreviousDependencies) {
              return false;
            }
          }
          if (prevDeps === null) {
            {
              error3("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error3("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
            }
          }
          for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
            if (objectIs(nextDeps[i], prevDeps[i])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function renderWithHooks(current2, workInProgress2, Component64, props, secondArg, nextRenderLanes) {
          renderLanes = nextRenderLanes;
          currentlyRenderingFiber$1 = workInProgress2;
          {
            hookTypesDev = current2 !== null ? current2.Pa : null;
            hookTypesUpdateIndexDev = -1;
            ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
          }
          workInProgress2.memoizedState = null;
          workInProgress2.updateQueue = null;
          workInProgress2.lanes = NoLanes;
          {
            if (current2 !== null && current2.memoizedState !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
            } else if (hookTypesDev !== null) {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
            } else {
              ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
            }
          }
          var children2 = Component64(props, secondArg);
          if (didScheduleRenderPhaseUpdateDuringThisPass) {
            var numberOfReRenders = 0;
            do {
              didScheduleRenderPhaseUpdateDuringThisPass = false;
              localIdCounter = 0;
              if (numberOfReRenders >= RE_RENDER_LIMIT) {
                throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
              }
              numberOfReRenders += 1;
              {
                ignorePreviousDependencies = false;
              }
              currentHook = null;
              workInProgressHook = null;
              workInProgress2.updateQueue = null;
              {
                hookTypesUpdateIndexDev = -1;
              }
              ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
              children2 = Component64(props, secondArg);
            } while (didScheduleRenderPhaseUpdateDuringThisPass);
          }
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          {
            workInProgress2.Pa = hookTypesDev;
          }
          var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            currentHookNameInDev = null;
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            if (current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
            // and creates false positives. To make this work in legacy mode, we'd
            // need to mark fibers that commit in an incomplete state, somehow. For
            // now I'll disable the warning that most of the bugs that would trigger
            // it are either exclusive to concurrent mode or exist in both.
            (current2.mode & ConcurrentMode) !== NoMode) {
              error3("Internal React error: Expected static flag was missing. Please notify the React team.");
            }
          }
          didScheduleRenderPhaseUpdate = false;
          if (didRenderTooFewHooks) {
            throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
          }
          return children2;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          localIdCounter = 0;
          return didRenderIdHook;
        }
        function bailoutHooks(current2, workInProgress2, lanes) {
          workInProgress2.updateQueue = current2.updateQueue;
          if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
            workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
          } else {
            workInProgress2.flags &= ~(Passive | Update);
          }
          current2.lanes = removeLanes(current2.lanes, lanes);
        }
        function resetHooksAfterThrow() {
          ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
          if (didScheduleRenderPhaseUpdate) {
            var hook = currentlyRenderingFiber$1.memoizedState;
            while (hook !== null) {
              var queue = hook.queue;
              if (queue !== null) {
                queue.pending = null;
              }
              hook = hook.next;
            }
            didScheduleRenderPhaseUpdate = false;
          }
          renderLanes = NoLanes;
          currentlyRenderingFiber$1 = null;
          currentHook = null;
          workInProgressHook = null;
          {
            hookTypesDev = null;
            hookTypesUpdateIndexDev = -1;
            currentHookNameInDev = null;
            isUpdatingOpaqueValueInRenderPhase = false;
          }
          didScheduleRenderPhaseUpdateDuringThisPass = false;
          localIdCounter = 0;
        }
        function mountWorkInProgressHook() {
          var hook = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null
          };
          if (workInProgressHook === null) {
            currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
          } else {
            workInProgressHook = workInProgressHook.next = hook;
          }
          return workInProgressHook;
        }
        function updateWorkInProgressHook() {
          var nextCurrentHook;
          if (currentHook === null) {
            var current2 = currentlyRenderingFiber$1.alternate;
            if (current2 !== null) {
              nextCurrentHook = current2.memoizedState;
            } else {
              nextCurrentHook = null;
            }
          } else {
            nextCurrentHook = currentHook.next;
          }
          var nextWorkInProgressHook;
          if (workInProgressHook === null) {
            nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
          } else {
            nextWorkInProgressHook = workInProgressHook.next;
          }
          if (nextWorkInProgressHook !== null) {
            workInProgressHook = nextWorkInProgressHook;
            nextWorkInProgressHook = workInProgressHook.next;
            currentHook = nextCurrentHook;
          } else {
            if (nextCurrentHook === null) {
              throw new Error("Rendered more hooks than during the previous render.");
            }
            currentHook = nextCurrentHook;
            var newHook = {
              memoizedState: currentHook.memoizedState,
              baseState: currentHook.baseState,
              baseQueue: currentHook.baseQueue,
              queue: currentHook.queue,
              next: null
            };
            if (workInProgressHook === null) {
              currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
            } else {
              workInProgressHook = workInProgressHook.next = newHook;
            }
          }
          return workInProgressHook;
        }
        function createFunctionComponentUpdateQueue() {
          return {
            lastEffect: null,
            stores: null
          };
        }
        function basicStateReducer(state, action) {
          return typeof action === "function" ? action(state) : action;
        }
        function mountReducer(reducer, initialArg, init) {
          var hook = mountWorkInProgressHook();
          var initialState;
          if (init !== void 0) {
            initialState = init(initialArg);
          } else {
            initialState = initialArg;
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: reducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch2 = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch2];
        }
        function updateReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var current2 = currentHook;
          var baseQueue = current2.baseQueue;
          var pendingQueue = queue.pending;
          if (pendingQueue !== null) {
            if (baseQueue !== null) {
              var baseFirst = baseQueue.next;
              var pendingFirst = pendingQueue.next;
              baseQueue.next = pendingFirst;
              pendingQueue.next = baseFirst;
            }
            {
              if (current2.baseQueue !== baseQueue) {
                error3("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
              }
            }
            current2.baseQueue = baseQueue = pendingQueue;
            queue.pending = null;
          }
          if (baseQueue !== null) {
            var first2 = baseQueue.next;
            var newState = current2.baseState;
            var newBaseState = null;
            var newBaseQueueFirst = null;
            var newBaseQueueLast = null;
            var update2 = first2;
            do {
              var updateLane = update2.lane;
              if (!isSubsetOfLanes(renderLanes, updateLane)) {
                var clone2 = {
                  lane: updateLane,
                  action: update2.action,
                  hasEagerState: update2.hasEagerState,
                  eagerState: update2.eagerState,
                  next: null
                };
                if (newBaseQueueLast === null) {
                  newBaseQueueFirst = newBaseQueueLast = clone2;
                  newBaseState = newState;
                } else {
                  newBaseQueueLast = newBaseQueueLast.next = clone2;
                }
                currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                markSkippedUpdateLanes(updateLane);
              } else {
                if (newBaseQueueLast !== null) {
                  var _clone = {
                    // This update is going to be committed so we never want uncommit
                    // it. Using NoLane works because 0 is a subset of all bitmasks, so
                    // this will never be skipped by the check above.
                    lane: NoLane,
                    action: update2.action,
                    hasEagerState: update2.hasEagerState,
                    eagerState: update2.eagerState,
                    next: null
                  };
                  newBaseQueueLast = newBaseQueueLast.next = _clone;
                }
                if (update2.hasEagerState) {
                  newState = update2.eagerState;
                } else {
                  var action = update2.action;
                  newState = reducer(newState, action);
                }
              }
              update2 = update2.next;
            } while (update2 !== null && update2 !== first2);
            if (newBaseQueueLast === null) {
              newBaseState = newState;
            } else {
              newBaseQueueLast.next = newBaseQueueFirst;
            }
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            hook.baseState = newBaseState;
            hook.baseQueue = newBaseQueueLast;
            queue.lastRenderedState = newState;
          }
          var lastInterleaved = queue.interleaved;
          if (lastInterleaved !== null) {
            var interleaved = lastInterleaved;
            do {
              var interleavedLane = interleaved.lane;
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
              markSkippedUpdateLanes(interleavedLane);
              interleaved = interleaved.next;
            } while (interleaved !== lastInterleaved);
          } else if (baseQueue === null) {
            queue.lanes = NoLanes;
          }
          var dispatch2 = queue.dispatch;
          return [hook.memoizedState, dispatch2];
        }
        function rerenderReducer(reducer, initialArg, init) {
          var hook = updateWorkInProgressHook();
          var queue = hook.queue;
          if (queue === null) {
            throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
          }
          queue.lastRenderedReducer = reducer;
          var dispatch2 = queue.dispatch;
          var lastRenderPhaseUpdate = queue.pending;
          var newState = hook.memoizedState;
          if (lastRenderPhaseUpdate !== null) {
            queue.pending = null;
            var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
            var update2 = firstRenderPhaseUpdate;
            do {
              var action = update2.action;
              newState = reducer(newState, action);
              update2 = update2.next;
            } while (update2 !== firstRenderPhaseUpdate);
            if (!objectIs(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = newState;
            if (hook.baseQueue === null) {
              hook.baseState = newState;
            }
            queue.lastRenderedState = newState;
          }
          return [newState, dispatch2];
        }
        function mountMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function updateMutableSource(source, getSnapshot, subscribe) {
          {
            return void 0;
          }
        }
        function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = mountWorkInProgressHook();
          var nextSnapshot;
          var isHydrating2 = getIsHydrating();
          if (isHydrating2) {
            if (getServerSnapshot === void 0) {
              throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
            }
            nextSnapshot = getServerSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                if (nextSnapshot !== getServerSnapshot()) {
                  error3("The result of getServerSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
          } else {
            nextSnapshot = getSnapshot();
            {
              if (!didWarnUncachedGetSnapshot) {
                var cachedSnapshot = getSnapshot();
                if (!objectIs(nextSnapshot, cachedSnapshot)) {
                  error3("The result of getSnapshot should be cached to avoid an infinite loop");
                  didWarnUncachedGetSnapshot = true;
                }
              }
            }
            var root2 = getWorkInProgressRoot();
            if (root2 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root2, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          hook.memoizedState = nextSnapshot;
          var inst = {
            value: nextSnapshot,
            getSnapshot
          };
          hook.queue = inst;
          mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          fiber.flags |= Passive;
          pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
          return nextSnapshot;
        }
        function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var fiber = currentlyRenderingFiber$1;
          var hook = updateWorkInProgressHook();
          var nextSnapshot = getSnapshot();
          {
            if (!didWarnUncachedGetSnapshot) {
              var cachedSnapshot = getSnapshot();
              if (!objectIs(nextSnapshot, cachedSnapshot)) {
                error3("The result of getSnapshot should be cached to avoid an infinite loop");
                didWarnUncachedGetSnapshot = true;
              }
            }
          }
          var prevSnapshot = hook.memoizedState;
          var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
          if (snapshotChanged) {
            hook.memoizedState = nextSnapshot;
            markWorkInProgressReceivedUpdate();
          }
          var inst = hook.queue;
          updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
          if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
          // checking whether we scheduled a subscription effect above.
          workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
            fiber.flags |= Passive;
            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
            var root2 = getWorkInProgressRoot();
            if (root2 === null) {
              throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
            }
            if (!includesBlockingLane(root2, renderLanes)) {
              pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
            }
          }
          return nextSnapshot;
        }
        function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
          fiber.flags |= StoreConsistency;
          var check = {
            getSnapshot,
            value: renderedSnapshot
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.stores = [check];
          } else {
            var stores = componentUpdateQueue.stores;
            if (stores === null) {
              componentUpdateQueue.stores = [check];
            } else {
              stores.push(check);
            }
          }
        }
        function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
          inst.value = nextSnapshot;
          inst.getSnapshot = getSnapshot;
          if (checkIfSnapshotChanged(inst)) {
            forceStoreRerender(fiber);
          }
        }
        function subscribeToStore(fiber, inst, subscribe) {
          var handleStoreChange = function() {
            if (checkIfSnapshotChanged(inst)) {
              forceStoreRerender(fiber);
            }
          };
          return subscribe(handleStoreChange);
        }
        function checkIfSnapshotChanged(inst) {
          var latestGetSnapshot = inst.getSnapshot;
          var prevValue = inst.value;
          try {
            var nextValue = latestGetSnapshot();
            return !objectIs(prevValue, nextValue);
          } catch (error4) {
            return true;
          }
        }
        function forceStoreRerender(fiber) {
          var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
          if (root2 !== null) {
            scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
          }
        }
        function mountState(initialState) {
          var hook = mountWorkInProgressHook();
          if (typeof initialState === "function") {
            initialState = initialState();
          }
          hook.memoizedState = hook.baseState = initialState;
          var queue = {
            pending: null,
            interleaved: null,
            lanes: NoLanes,
            dispatch: null,
            lastRenderedReducer: basicStateReducer,
            lastRenderedState: initialState
          };
          hook.queue = queue;
          var dispatch2 = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
          return [hook.memoizedState, dispatch2];
        }
        function updateState(initialState) {
          return updateReducer(basicStateReducer);
        }
        function rerenderState(initialState) {
          return rerenderReducer(basicStateReducer);
        }
        function pushEffect(tag, create, destroy2, deps) {
          var effect = {
            tag,
            create,
            destroy: destroy2,
            deps,
            // Circular
            next: null
          };
          var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
          if (componentUpdateQueue === null) {
            componentUpdateQueue = createFunctionComponentUpdateQueue();
            currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
            componentUpdateQueue.lastEffect = effect.next = effect;
          } else {
            var lastEffect = componentUpdateQueue.lastEffect;
            if (lastEffect === null) {
              componentUpdateQueue.lastEffect = effect.next = effect;
            } else {
              var firstEffect = lastEffect.next;
              lastEffect.next = effect;
              effect.next = firstEffect;
              componentUpdateQueue.lastEffect = effect;
            }
          }
          return effect;
        }
        function mountRef(initialValue) {
          var hook = mountWorkInProgressHook();
          {
            var _ref2 = {
              current: initialValue
            };
            hook.memoizedState = _ref2;
            return _ref2;
          }
        }
        function updateRef(initialValue) {
          var hook = updateWorkInProgressHook();
          return hook.memoizedState;
        }
        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
        }
        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var destroy2 = void 0;
          if (currentHook !== null) {
            var prevEffect = currentHook.memoizedState;
            destroy2 = prevEffect.destroy;
            if (nextDeps !== null) {
              var prevDeps = prevEffect.deps;
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                hook.memoizedState = pushEffect(hookFlags, create, destroy2, nextDeps);
                return;
              }
            }
          }
          currentlyRenderingFiber$1.flags |= fiberFlags;
          hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy2, nextDeps);
        }
        function mountEffect(create, deps) {
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
          } else {
            return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
          }
        }
        function updateEffect(create, deps) {
          return updateEffectImpl(Passive, Passive$1, create, deps);
        }
        function mountInsertionEffect(create, deps) {
          return mountEffectImpl(Update, Insertion, create, deps);
        }
        function updateInsertionEffect(create, deps) {
          return updateEffectImpl(Update, Insertion, create, deps);
        }
        function mountLayoutEffect(create, deps) {
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout2, create, deps);
        }
        function updateLayoutEffect(create, deps) {
          return updateEffectImpl(Update, Layout2, create, deps);
        }
        function imperativeHandleEffect(create, ref) {
          if (typeof ref === "function") {
            var refCallback = ref;
            var _inst = create();
            refCallback(_inst);
            return function() {
              refCallback(null);
            };
          } else if (ref !== null && ref !== void 0) {
            var refObject = ref;
            {
              if (!refObject.hasOwnProperty("current")) {
                error3("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
              }
            }
            var _inst2 = create();
            refObject.current = _inst2;
            return function() {
              refObject.current = null;
            };
          }
        }
        function mountImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error3("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          var fiberFlags = Update;
          {
            fiberFlags |= LayoutStatic;
          }
          if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
            fiberFlags |= MountLayoutDev;
          }
          return mountEffectImpl(fiberFlags, Layout2, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function updateImperativeHandle(ref, create, deps) {
          {
            if (typeof create !== "function") {
              error3("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
            }
          }
          var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
          return updateEffectImpl(Update, Layout2, imperativeHandleEffect.bind(null, create, ref), effectDeps);
        }
        function mountDebugValue(value2, formatterFn) {
        }
        var updateDebugValue = mountDebugValue;
        function mountCallback(callback, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function updateCallback(callback, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          hook.memoizedState = [callback, nextDeps];
          return callback;
        }
        function mountMemo(nextCreate, deps) {
          var hook = mountWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function updateMemo(nextCreate, deps) {
          var hook = updateWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          var prevState = hook.memoizedState;
          if (prevState !== null) {
            if (nextDeps !== null) {
              var prevDeps = prevState[1];
              if (areHookInputsEqual(nextDeps, prevDeps)) {
                return prevState[0];
              }
            }
          }
          var nextValue = nextCreate();
          hook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function mountDeferredValue(value2) {
          var hook = mountWorkInProgressHook();
          hook.memoizedState = value2;
          return value2;
        }
        function updateDeferredValue(value2) {
          var hook = updateWorkInProgressHook();
          var resolvedCurrentHook = currentHook;
          var prevValue = resolvedCurrentHook.memoizedState;
          return updateDeferredValueImpl(hook, prevValue, value2);
        }
        function rerenderDeferredValue(value2) {
          var hook = updateWorkInProgressHook();
          if (currentHook === null) {
            hook.memoizedState = value2;
            return value2;
          } else {
            var prevValue = currentHook.memoizedState;
            return updateDeferredValueImpl(hook, prevValue, value2);
          }
        }
        function updateDeferredValueImpl(hook, prevValue, value2) {
          var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
          if (shouldDeferValue) {
            if (!objectIs(value2, prevValue)) {
              var deferredLane = claimNextTransitionLane();
              currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
              markSkippedUpdateLanes(deferredLane);
              hook.baseState = true;
            }
            return prevValue;
          } else {
            if (hook.baseState) {
              hook.baseState = false;
              markWorkInProgressReceivedUpdate();
            }
            hook.memoizedState = value2;
            return value2;
          }
        }
        function startTransition(setPending, callback, options3) {
          var previousPriority = getCurrentUpdatePriority();
          setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
          setPending(true);
          var prevTransition = ReactCurrentBatchConfig$2.transition;
          ReactCurrentBatchConfig$2.transition = {};
          var currentTransition = ReactCurrentBatchConfig$2.transition;
          {
            ReactCurrentBatchConfig$2.transition.sa = /* @__PURE__ */ new Set();
          }
          try {
            setPending(false);
            callback();
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$2.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition.sa) {
                var updatedFibersCount = currentTransition.sa.size;
                if (updatedFibersCount > 10) {
                  warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition.sa.clear();
              }
            }
          }
        }
        function mountTransition() {
          var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1];
          var start2 = startTransition.bind(null, setPending);
          var hook = mountWorkInProgressHook();
          hook.memoizedState = start2;
          return [isPending, start2];
        }
        function updateTransition() {
          var _updateState = updateState(), isPending = _updateState[0];
          var hook = updateWorkInProgressHook();
          var start2 = hook.memoizedState;
          return [isPending, start2];
        }
        function rerenderTransition() {
          var _rerenderState = rerenderState(), isPending = _rerenderState[0];
          var hook = updateWorkInProgressHook();
          var start2 = hook.memoizedState;
          return [isPending, start2];
        }
        var isUpdatingOpaqueValueInRenderPhase = false;
        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
          {
            return isUpdatingOpaqueValueInRenderPhase;
          }
        }
        function mountId() {
          var hook = mountWorkInProgressHook();
          var root2 = getWorkInProgressRoot();
          var identifierPrefix = root2.identifierPrefix;
          var id;
          if (getIsHydrating()) {
            var treeId = getTreeId();
            id = ":" + identifierPrefix + "R" + treeId;
            var localId = localIdCounter++;
            if (localId > 0) {
              id += "H" + localId.toString(32);
            }
            id += ":";
          } else {
            var globalClientId = globalClientIdCounter++;
            id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
          }
          hook.memoizedState = id;
          return id;
        }
        function updateId() {
          var hook = updateWorkInProgressHook();
          var id = hook.memoizedState;
          return id;
        }
        function dispatchReducerAction(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error3("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update2 = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update2);
          } else {
            var root2 = enqueueConcurrentHookUpdate(fiber, queue, update2, lane);
            if (root2 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
              entangleTransitionUpdate(root2, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function dispatchSetState(fiber, queue, action) {
          {
            if (typeof arguments[3] === "function") {
              error3("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
            }
          }
          var lane = requestUpdateLane(fiber);
          var update2 = {
            lane,
            action,
            hasEagerState: false,
            eagerState: null,
            next: null
          };
          if (isRenderPhaseUpdate(fiber)) {
            enqueueRenderPhaseUpdate(queue, update2);
          } else {
            var alternate = fiber.alternate;
            if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
              var lastRenderedReducer = queue.lastRenderedReducer;
              if (lastRenderedReducer !== null) {
                var prevDispatcher;
                {
                  prevDispatcher = ReactCurrentDispatcher$1.current;
                  ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                }
                try {
                  var currentState = queue.lastRenderedState;
                  var eagerState = lastRenderedReducer(currentState, action);
                  update2.hasEagerState = true;
                  update2.eagerState = eagerState;
                  if (objectIs(eagerState, currentState)) {
                    enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update2, lane);
                    return;
                  }
                } catch (error4) {
                } finally {
                  {
                    ReactCurrentDispatcher$1.current = prevDispatcher;
                  }
                }
              }
            }
            var root2 = enqueueConcurrentHookUpdate(fiber, queue, update2, lane);
            if (root2 !== null) {
              var eventTime = requestEventTime();
              scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
              entangleTransitionUpdate(root2, queue, lane);
            }
          }
          markUpdateInDevTools(fiber, lane);
        }
        function isRenderPhaseUpdate(fiber) {
          var alternate = fiber.alternate;
          return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
        }
        function enqueueRenderPhaseUpdate(queue, update2) {
          didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
          var pending = queue.pending;
          if (pending === null) {
            update2.next = update2;
          } else {
            update2.next = pending.next;
            pending.next = update2;
          }
          queue.pending = update2;
        }
        function entangleTransitionUpdate(root2, queue, lane) {
          if (isTransitionLane(lane)) {
            var queueLanes = queue.lanes;
            queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
            var newQueueLanes = mergeLanes(queueLanes, lane);
            queue.lanes = newQueueLanes;
            markRootEntangled(root2, newQueueLanes);
          }
        }
        function markUpdateInDevTools(fiber, lane, action) {
          {
            markStateUpdateScheduled(fiber, lane);
          }
        }
        var ContextOnlyDispatcher = {
          readContext,
          useCallback: throwInvalidHookError,
          useContext: throwInvalidHookError,
          useEffect: throwInvalidHookError,
          useImperativeHandle: throwInvalidHookError,
          useInsertionEffect: throwInvalidHookError,
          useLayoutEffect: throwInvalidHookError,
          useMemo: throwInvalidHookError,
          useReducer: throwInvalidHookError,
          useRef: throwInvalidHookError,
          useState: throwInvalidHookError,
          useDebugValue: throwInvalidHookError,
          useDeferredValue: throwInvalidHookError,
          useTransition: throwInvalidHookError,
          useMutableSource: throwInvalidHookError,
          useSyncExternalStore: throwInvalidHookError,
          useId: throwInvalidHookError,
          unstable_isNewReconciler: enableNewReconciler
        };
        var HooksDispatcherOnMountInDEV = null;
        var HooksDispatcherOnMountWithHookTypesInDEV = null;
        var HooksDispatcherOnUpdateInDEV = null;
        var HooksDispatcherOnRerenderInDEV = null;
        var InvalidNestedHooksDispatcherOnMountInDEV = null;
        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
        {
          var warnInvalidContextAccess = function() {
            error3("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
          };
          var warnInvalidHookAccess = function() {
            error3("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
          };
          HooksDispatcherOnMountInDEV = {
            readContext: function(context2) {
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              mountHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              mountHookTypesDev();
              checkDepsAreArrayDev(deps);
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              mountHookTypesDev();
              return mountDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnMountWithHookTypesInDEV = {
            readContext: function(context2) {
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return mountDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnUpdateInDEV = {
            readContext: function(context2) {
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return updateDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          HooksDispatcherOnRerenderInDEV = {
            readContext: function(context2) {
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              updateHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              updateHookTypesDev();
              return rerenderDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnMountInDEV = {
            readContext: function(context2) {
              warnInvalidContextAccess();
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountRef(initialValue);
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              mountHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
              try {
                return mountState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              mountHookTypesDev();
              return mountId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnUpdateInDEV = {
            readContext: function(context2) {
              warnInvalidContextAccess();
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
          InvalidNestedHooksDispatcherOnRerenderInDEV = {
            readContext: function(context2) {
              warnInvalidContextAccess();
              return readContext(context2);
            },
            useCallback: function(callback, deps) {
              currentHookNameInDev = "useCallback";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateCallback(callback, deps);
            },
            useContext: function(context2) {
              currentHookNameInDev = "useContext";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return readContext(context2);
            },
            useEffect: function(create, deps) {
              currentHookNameInDev = "useEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateEffect(create, deps);
            },
            useImperativeHandle: function(ref, create, deps) {
              currentHookNameInDev = "useImperativeHandle";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateImperativeHandle(ref, create, deps);
            },
            useInsertionEffect: function(create, deps) {
              currentHookNameInDev = "useInsertionEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateInsertionEffect(create, deps);
            },
            useLayoutEffect: function(create, deps) {
              currentHookNameInDev = "useLayoutEffect";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateLayoutEffect(create, deps);
            },
            useMemo: function(create, deps) {
              currentHookNameInDev = "useMemo";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return updateMemo(create, deps);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useReducer: function(reducer, initialArg, init) {
              currentHookNameInDev = "useReducer";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderReducer(reducer, initialArg, init);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useRef: function(initialValue) {
              currentHookNameInDev = "useRef";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateRef();
            },
            useState: function(initialState) {
              currentHookNameInDev = "useState";
              warnInvalidHookAccess();
              updateHookTypesDev();
              var prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
              try {
                return rerenderState(initialState);
              } finally {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            },
            useDebugValue: function(value2, formatterFn) {
              currentHookNameInDev = "useDebugValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateDebugValue();
            },
            useDeferredValue: function(value2) {
              currentHookNameInDev = "useDeferredValue";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderDeferredValue(value2);
            },
            useTransition: function() {
              currentHookNameInDev = "useTransition";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return rerenderTransition();
            },
            useMutableSource: function(source, getSnapshot, subscribe) {
              currentHookNameInDev = "useMutableSource";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateMutableSource();
            },
            useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
              currentHookNameInDev = "useSyncExternalStore";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateSyncExternalStore(subscribe, getSnapshot);
            },
            useId: function() {
              currentHookNameInDev = "useId";
              warnInvalidHookAccess();
              updateHookTypesDev();
              return updateId();
            },
            unstable_isNewReconciler: enableNewReconciler
          };
        }
        var now$1 = Scheduler2.unstable_now;
        var commitTime = 0;
        var layoutEffectStartTime = -1;
        var profilerStartTime = -1;
        var passiveEffectStartTime = -1;
        var currentUpdateIsNested = false;
        var nestedUpdateScheduled = false;
        function isCurrentUpdateNested() {
          return currentUpdateIsNested;
        }
        function markNestedUpdateScheduled() {
          {
            nestedUpdateScheduled = true;
          }
        }
        function resetNestedUpdateFlag() {
          {
            currentUpdateIsNested = false;
            nestedUpdateScheduled = false;
          }
        }
        function syncNestedUpdateFlag() {
          {
            currentUpdateIsNested = nestedUpdateScheduled;
            nestedUpdateScheduled = false;
          }
        }
        function getCommitTime() {
          return commitTime;
        }
        function recordCommitTime() {
          commitTime = now$1();
        }
        function startProfilerTimer(fiber) {
          profilerStartTime = now$1();
          if (fiber.actualStartTime < 0) {
            fiber.actualStartTime = now$1();
          }
        }
        function stopProfilerTimerIfRunning(fiber) {
          profilerStartTime = -1;
        }
        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
          if (profilerStartTime >= 0) {
            var elapsedTime = now$1() - profilerStartTime;
            fiber.actualDuration += elapsedTime;
            if (overrideBaseTime) {
              fiber.selfBaseDuration = elapsedTime;
            }
            profilerStartTime = -1;
          }
        }
        function recordLayoutEffectDuration(fiber) {
          if (layoutEffectStartTime >= 0) {
            var elapsedTime = now$1() - layoutEffectStartTime;
            layoutEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root2 = parentFiber.stateNode;
                  root2.effectDuration += elapsedTime;
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  parentStateNode.effectDuration += elapsedTime;
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function recordPassiveEffectDuration(fiber) {
          if (passiveEffectStartTime >= 0) {
            var elapsedTime = now$1() - passiveEffectStartTime;
            passiveEffectStartTime = -1;
            var parentFiber = fiber.return;
            while (parentFiber !== null) {
              switch (parentFiber.tag) {
                case HostRoot:
                  var root2 = parentFiber.stateNode;
                  if (root2 !== null) {
                    root2.passiveEffectDuration += elapsedTime;
                  }
                  return;
                case Profiler:
                  var parentStateNode = parentFiber.stateNode;
                  if (parentStateNode !== null) {
                    parentStateNode.passiveEffectDuration += elapsedTime;
                  }
                  return;
              }
              parentFiber = parentFiber.return;
            }
          }
        }
        function startLayoutEffectTimer() {
          layoutEffectStartTime = now$1();
        }
        function startPassiveEffectTimer() {
          passiveEffectStartTime = now$1();
        }
        function transferActualDuration(fiber) {
          var child = fiber.child;
          while (child) {
            fiber.actualDuration += child.actualDuration;
            child = child.sibling;
          }
        }
        function createCapturedValueAtFiber(value2, source) {
          return {
            value: value2,
            source,
            stack: getStackByFiberInDevAndProd(source),
            digest: null
          };
        }
        function createCapturedValue(value2, digest, stack2) {
          return {
            value: value2,
            source: null,
            stack: stack2 != null ? stack2 : null,
            digest: digest != null ? digest : null
          };
        }
        function showErrorDialog(boundary, errorInfo) {
          return true;
        }
        function logCapturedError(boundary, errorInfo) {
          try {
            var logError = showErrorDialog(boundary, errorInfo);
            if (logError === false) {
              return;
            }
            var error4 = errorInfo.value;
            if (true) {
              var source = errorInfo.source;
              var stack2 = errorInfo.stack;
              var componentStack = stack2 !== null ? stack2 : "";
              if (error4 != null && error4.sb) {
                if (boundary.tag === ClassComponent) {
                  return;
                }
                console["error"](error4);
              }
              var componentName = source ? getComponentNameFromFiber(source) : null;
              var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
              var errorBoundaryMessage;
              if (boundary.tag === HostRoot) {
                errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
              } else {
                var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
              }
              var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
              console["error"](combinedMessage);
            } else {
              console["error"](error4);
            }
          } catch (e) {
            setTimeout(function() {
              throw e;
            });
          }
        }
        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
        function createRootErrorUpdate(fiber, errorInfo, lane) {
          var update2 = createUpdate(NoTimestamp, lane);
          update2.tag = CaptureUpdate;
          update2.payload = {
            element: null
          };
          var error4 = errorInfo.value;
          update2.callback = function() {
            onUncaughtError(error4);
            logCapturedError(fiber, errorInfo);
          };
          return update2;
        }
        function createClassErrorUpdate(fiber, errorInfo, lane) {
          var update2 = createUpdate(NoTimestamp, lane);
          update2.tag = CaptureUpdate;
          var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
          if (typeof getDerivedStateFromError === "function") {
            var error$1 = errorInfo.value;
            update2.payload = function() {
              return getDerivedStateFromError(error$1);
            };
            update2.callback = function() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
            };
          }
          var inst = fiber.stateNode;
          if (inst !== null && typeof inst.componentDidCatch === "function") {
            update2.callback = function callback() {
              {
                markFailedErrorBoundaryForHotReloading(fiber);
              }
              logCapturedError(fiber, errorInfo);
              if (typeof getDerivedStateFromError !== "function") {
                markLegacyErrorBoundaryAsFailed(this);
              }
              var error$12 = errorInfo.value;
              var stack2 = errorInfo.stack;
              this.componentDidCatch(error$12, {
                componentStack: stack2 !== null ? stack2 : ""
              });
              {
                if (typeof getDerivedStateFromError !== "function") {
                  if (!includesSomeLane(fiber.lanes, SyncLane)) {
                    error3("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
                  }
                }
              }
            };
          }
          return update2;
        }
        function attachPingListener(root2, wakeable, lanes) {
          var pingCache = root2.pingCache;
          var threadIDs;
          if (pingCache === null) {
            pingCache = root2.pingCache = new PossiblyWeakMap$1();
            threadIDs = /* @__PURE__ */ new Set();
            pingCache.set(wakeable, threadIDs);
          } else {
            threadIDs = pingCache.get(wakeable);
            if (threadIDs === void 0) {
              threadIDs = /* @__PURE__ */ new Set();
              pingCache.set(wakeable, threadIDs);
            }
          }
          if (!threadIDs.has(lanes)) {
            threadIDs.add(lanes);
            var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
            {
              if (isDevToolsPresent) {
                restorePendingUpdaters(root2, lanes);
              }
            }
            wakeable.then(ping, ping);
          }
        }
        function attachRetryListener(suspenseBoundary, root2, wakeable, lanes) {
          var wakeables = suspenseBoundary.updateQueue;
          if (wakeables === null) {
            var updateQueue = /* @__PURE__ */ new Set();
            updateQueue.add(wakeable);
            suspenseBoundary.updateQueue = updateQueue;
          } else {
            wakeables.add(wakeable);
          }
        }
        function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
          var tag = sourceFiber.tag;
          if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
            var currentSource = sourceFiber.alternate;
            if (currentSource) {
              sourceFiber.updateQueue = currentSource.updateQueue;
              sourceFiber.memoizedState = currentSource.memoizedState;
              sourceFiber.lanes = currentSource.lanes;
            } else {
              sourceFiber.updateQueue = null;
              sourceFiber.memoizedState = null;
            }
          }
        }
        function getNearestSuspenseBoundaryToCapture(returnFiber) {
          var node14 = returnFiber;
          do {
            if (node14.tag === SuspenseComponent && shouldCaptureSuspense(node14)) {
              return node14;
            }
            node14 = node14.return;
          } while (node14 !== null);
          return null;
        }
        function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes) {
          if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
            if (suspenseBoundary === returnFiber) {
              suspenseBoundary.flags |= ShouldCapture;
            } else {
              suspenseBoundary.flags |= DidCapture;
              sourceFiber.flags |= ForceUpdateForLegacySuspense;
              sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;
                if (currentSourceFiber === null) {
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  var update2 = createUpdate(NoTimestamp, SyncLane);
                  update2.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update2, SyncLane);
                }
              }
              sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
            }
            return suspenseBoundary;
          }
          suspenseBoundary.flags |= ShouldCapture;
          suspenseBoundary.lanes = rootRenderLanes;
          return suspenseBoundary;
        }
        function throwException(root2, returnFiber, sourceFiber, value2, rootRenderLanes) {
          sourceFiber.flags |= Incomplete;
          {
            if (isDevToolsPresent) {
              restorePendingUpdaters(root2, rootRenderLanes);
            }
          }
          if (value2 !== null && typeof value2 === "object" && typeof value2.then === "function") {
            var wakeable = value2;
            resetSuspendedComponent(sourceFiber);
            {
              if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                markDidThrowWhileHydratingDEV();
              }
            }
            var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
            if (suspenseBoundary !== null) {
              suspenseBoundary.flags &= ~ForceClientRender;
              markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
              if (suspenseBoundary.mode & ConcurrentMode) {
                attachPingListener(root2, wakeable, rootRenderLanes);
              }
              attachRetryListener(suspenseBoundary, root2, wakeable);
              return;
            } else {
              if (!includesSyncLane(rootRenderLanes)) {
                attachPingListener(root2, wakeable, rootRenderLanes);
                renderDidSuspendDelayIfPossible();
                return;
              }
              var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
              value2 = uncaughtSuspenseError;
            }
          } else {
            if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
              markDidThrowWhileHydratingDEV();
              var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
              if (_suspenseBoundary !== null) {
                if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
                  _suspenseBoundary.flags |= ForceClientRender;
                }
                markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
                queueHydrationError(createCapturedValueAtFiber(value2, sourceFiber));
                return;
              }
            }
          }
          value2 = createCapturedValueAtFiber(value2, sourceFiber);
          renderDidError(value2);
          var workInProgress2 = returnFiber;
          do {
            switch (workInProgress2.tag) {
              case HostRoot: {
                var _errorInfo = value2;
                workInProgress2.flags |= ShouldCapture;
                var lane = pickArbitraryLane(rootRenderLanes);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update2 = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                enqueueCapturedUpdate(workInProgress2, update2);
                return;
              }
              case ClassComponent:
                var errorInfo = value2;
                var ctor = workInProgress2.type;
                var instance4 = workInProgress2.stateNode;
                if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance4 !== null && typeof instance4.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance4))) {
                  workInProgress2.flags |= ShouldCapture;
                  var _lane = pickArbitraryLane(rootRenderLanes);
                  workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                  var _update = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                  enqueueCapturedUpdate(workInProgress2, _update);
                  return;
                }
                break;
            }
            workInProgress2 = workInProgress2.return;
          } while (workInProgress2 !== null);
        }
        function getSuspendedCache() {
          {
            return null;
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var didReceiveUpdate = false;
        var didWarnAboutBadClass;
        var didWarnAboutModulePatternComponent;
        var didWarnAboutContextTypeOnFunctionComponent;
        var didWarnAboutGetDerivedStateOnFunctionComponent;
        var didWarnAboutFunctionRefs;
        var didWarnAboutReassigningProps;
        var didWarnAboutRevealOrder;
        var didWarnAboutTailOptions;
        {
          didWarnAboutBadClass = {};
          didWarnAboutModulePatternComponent = {};
          didWarnAboutContextTypeOnFunctionComponent = {};
          didWarnAboutGetDerivedStateOnFunctionComponent = {};
          didWarnAboutFunctionRefs = {};
          didWarnAboutReassigningProps = false;
          didWarnAboutRevealOrder = {};
          didWarnAboutTailOptions = {};
        }
        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
          if (current2 === null) {
            workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
          }
        }
        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
          workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
        }
        function updateForwardRef(current2, workInProgress2, Component64, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component64.propTypes;
              if (innerPropTypes) {
                checkPropTypes(
                  innerPropTypes,
                  nextProps,
                  // Resolved props
                  "prop",
                  getComponentNameFromType(Component64)
                );
              }
            }
          }
          var render6 = Component64.render;
          var ref = workInProgress2.ref;
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, render6, nextProps, ref, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, render6, nextProps, ref, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMemoComponent(current2, workInProgress2, Component64, nextProps, renderLanes2) {
          if (current2 === null) {
            var type = Component64.type;
            if (isSimpleFunctionComponent(type) && Component64.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
            Component64.defaultProps === void 0) {
              var resolvedType = type;
              {
                resolvedType = resolveFunctionForHotReloading(type);
              }
              workInProgress2.tag = SimpleMemoComponent;
              workInProgress2.type = resolvedType;
              {
                validateFunctionComponentInDev(workInProgress2, type);
              }
              return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
            }
            {
              var innerPropTypes = type.propTypes;
              if (innerPropTypes) {
                checkPropTypes(
                  innerPropTypes,
                  nextProps,
                  // Resolved props
                  "prop",
                  getComponentNameFromType(type)
                );
              }
            }
            var child = createFiberFromTypeAndProps(Component64.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
            child.ref = workInProgress2.ref;
            child.return = workInProgress2;
            workInProgress2.child = child;
            return child;
          }
          {
            var _type = Component64.type;
            var _innerPropTypes = _type.propTypes;
            if (_innerPropTypes) {
              checkPropTypes(
                _innerPropTypes,
                nextProps,
                // Resolved props
                "prop",
                getComponentNameFromType(_type)
              );
            }
          }
          var currentChild = current2.child;
          var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
          if (!hasScheduledUpdateOrContext) {
            var prevProps = currentChild.memoizedProps;
            var compare2 = Component64.compare;
            compare2 = compare2 !== null ? compare2 : shallowEqual;
            if (compare2(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
          }
          workInProgress2.flags |= PerformedWork;
          var newChild = createWorkInProgress(currentChild, nextProps);
          newChild.ref = workInProgress2.ref;
          newChild.return = workInProgress2;
          workInProgress2.child = newChild;
          return newChild;
        }
        function updateSimpleMemoComponent(current2, workInProgress2, Component64, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var outerMemoType = workInProgress2.elementType;
              if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                var lazyComponent = outerMemoType;
                var payload = lazyComponent.ia;
                var init = lazyComponent.ja;
                try {
                  outerMemoType = init(payload);
                } catch (x) {
                  outerMemoType = null;
                }
                var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                if (outerPropTypes) {
                  checkPropTypes(
                    outerPropTypes,
                    nextProps,
                    // Resolved (SimpleMemoComponent has no defaultProps)
                    "prop",
                    getComponentNameFromType(outerMemoType)
                  );
                }
              }
            }
          }
          if (current2 !== null) {
            var prevProps = current2.memoizedProps;
            if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && // Prevent bailout if the implementation changed due to hot reload.
            workInProgress2.type === current2.type) {
              didReceiveUpdate = false;
              workInProgress2.pendingProps = nextProps = prevProps;
              if (!checkScheduledUpdateOrContext(current2, renderLanes2)) {
                workInProgress2.lanes = current2.lanes;
                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
              } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              }
            }
          }
          return updateFunctionComponent(current2, workInProgress2, Component64, nextProps, renderLanes2);
        }
        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          var prevState = current2 !== null ? current2.memoizedState : null;
          if (nextProps.mode === "hidden" || enableLegacyHidden) {
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              var nextState = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = nextState;
              pushRenderLanes(workInProgress2, renderLanes2);
            } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
              var spawnedCachePool = null;
              var nextBaseLanes;
              if (prevState !== null) {
                var prevBaseLanes = prevState.baseLanes;
                nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
              } else {
                nextBaseLanes = renderLanes2;
              }
              workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
              var _nextState = {
                baseLanes: nextBaseLanes,
                cachePool: spawnedCachePool,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState;
              workInProgress2.updateQueue = null;
              pushRenderLanes(workInProgress2, nextBaseLanes);
              return null;
            } else {
              var _nextState2 = {
                baseLanes: NoLanes,
                cachePool: null,
                transitions: null
              };
              workInProgress2.memoizedState = _nextState2;
              var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
              pushRenderLanes(workInProgress2, subtreeRenderLanes2);
            }
          } else {
            var _subtreeRenderLanes;
            if (prevState !== null) {
              _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
              workInProgress2.memoizedState = null;
            } else {
              _subtreeRenderLanes = renderLanes2;
            }
            pushRenderLanes(workInProgress2, _subtreeRenderLanes);
          }
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateFragment(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateMode(current2, workInProgress2, renderLanes2) {
          var nextChildren = workInProgress2.pendingProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateProfiler(current2, workInProgress2, renderLanes2) {
          {
            workInProgress2.flags |= Update;
            {
              var stateNode = workInProgress2.stateNode;
              stateNode.effectDuration = 0;
              stateNode.passiveEffectDuration = 0;
            }
          }
          var nextProps = workInProgress2.pendingProps;
          var nextChildren = nextProps.children;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markRef(current2, workInProgress2) {
          var ref = workInProgress2.ref;
          if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
            workInProgress2.flags |= Ref;
            {
              workInProgress2.flags |= RefStatic;
            }
          }
        }
        function updateFunctionComponent(current2, workInProgress2, Component64, nextProps, renderLanes2) {
          {
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component64.propTypes;
              if (innerPropTypes) {
                checkPropTypes(
                  innerPropTypes,
                  nextProps,
                  // Resolved props
                  "prop",
                  getComponentNameFromType(Component64)
                );
              }
            }
          }
          var context2;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component64, true);
            context2 = getMaskedContext(workInProgress2, unmaskedContext);
          }
          var nextChildren;
          var hasId;
          prepareToReadContext(workInProgress2, renderLanes2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            nextChildren = renderWithHooks(current2, workInProgress2, Component64, nextProps, context2, renderLanes2);
            hasId = checkDidRenderIdHook();
            if (workInProgress2.mode & StrictLegacyMode) {
              setIsStrictModeForDevtools(true);
              try {
                nextChildren = renderWithHooks(current2, workInProgress2, Component64, nextProps, context2, renderLanes2);
                hasId = checkDidRenderIdHook();
              } finally {
                setIsStrictModeForDevtools(false);
              }
            }
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          if (current2 !== null && !didReceiveUpdate) {
            bailoutHooks(current2, workInProgress2, renderLanes2);
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          if (getIsHydrating() && hasId) {
            pushMaterializedTreeId(workInProgress2);
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateClassComponent(current2, workInProgress2, Component64, nextProps, renderLanes2) {
          {
            switch (shouldError(workInProgress2)) {
              case false: {
                var _instance = workInProgress2.stateNode;
                var ctor = workInProgress2.type;
                var tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context);
                var state = tempInstance.state;
                _instance.updater.enqueueSetState(_instance, state, null);
                break;
              }
              case true: {
                workInProgress2.flags |= DidCapture;
                workInProgress2.flags |= ShouldCapture;
                var error$1 = new Error("Simulated error coming from DevTools");
                var lane = pickArbitraryLane(renderLanes2);
                workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                var update2 = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
                enqueueCapturedUpdate(workInProgress2, update2);
                break;
              }
            }
            if (workInProgress2.type !== workInProgress2.elementType) {
              var innerPropTypes = Component64.propTypes;
              if (innerPropTypes) {
                checkPropTypes(
                  innerPropTypes,
                  nextProps,
                  // Resolved props
                  "prop",
                  getComponentNameFromType(Component64)
                );
              }
            }
          }
          var hasContext;
          if (isContextProvider(Component64)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var instance4 = workInProgress2.stateNode;
          var shouldUpdate;
          if (instance4 === null) {
            resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2);
            constructClassInstance(workInProgress2, Component64, nextProps);
            mountClassInstance(workInProgress2, Component64, nextProps, renderLanes2);
            shouldUpdate = true;
          } else if (current2 === null) {
            shouldUpdate = resumeMountClassInstance(workInProgress2, Component64, nextProps, renderLanes2);
          } else {
            shouldUpdate = updateClassInstance(current2, workInProgress2, Component64, nextProps, renderLanes2);
          }
          var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component64, shouldUpdate, hasContext, renderLanes2);
          {
            var inst = workInProgress2.stateNode;
            if (shouldUpdate && inst.props !== nextProps) {
              if (!didWarnAboutReassigningProps) {
                error3("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          return nextUnitOfWork;
        }
        function finishClassComponent(current2, workInProgress2, Component64, shouldUpdate, hasContext, renderLanes2) {
          markRef(current2, workInProgress2);
          var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (!shouldUpdate && !didCaptureError) {
            if (hasContext) {
              invalidateContextProvider(workInProgress2, Component64, false);
            }
            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
          }
          var instance4 = workInProgress2.stateNode;
          ReactCurrentOwner$1.current = workInProgress2;
          var nextChildren;
          if (didCaptureError && typeof Component64.getDerivedStateFromError !== "function") {
            nextChildren = null;
            {
              stopProfilerTimerIfRunning();
            }
          } else {
            {
              markComponentRenderStarted(workInProgress2);
            }
            {
              setIsRendering(true);
              nextChildren = instance4.render();
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  instance4.render();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
              setIsRendering(false);
            }
            {
              markComponentRenderStopped();
            }
          }
          workInProgress2.flags |= PerformedWork;
          if (current2 !== null && didCaptureError) {
            forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          workInProgress2.memoizedState = instance4.state;
          if (hasContext) {
            invalidateContextProvider(workInProgress2, Component64, true);
          }
          return workInProgress2.child;
        }
        function pushHostRootContext(workInProgress2) {
          var root2 = workInProgress2.stateNode;
          if (root2.pendingContext) {
            pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
          } else if (root2.context) {
            pushTopLevelContextObject(workInProgress2, root2.context, false);
          }
          pushHostContainer(workInProgress2, root2.containerInfo);
        }
        function updateHostRoot(current2, workInProgress2, renderLanes2) {
          pushHostRootContext(workInProgress2);
          if (current2 === null) {
            throw new Error("Should have a current fiber. This is a bug in React.");
          }
          var nextProps = workInProgress2.pendingProps;
          var prevState = workInProgress2.memoizedState;
          var prevChildren = prevState.element;
          cloneUpdateQueue(current2, workInProgress2);
          processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
          var nextState = workInProgress2.memoizedState;
          var root2 = workInProgress2.stateNode;
          var nextChildren = nextState.element;
          if (prevState.isDehydrated) {
            var overrideState = {
              element: nextChildren,
              isDehydrated: false,
              cache: nextState.cache,
              pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
              transitions: nextState.transitions
            };
            var updateQueue = workInProgress2.updateQueue;
            updateQueue.baseState = overrideState;
            workInProgress2.memoizedState = overrideState;
            if (workInProgress2.flags & ForceClientRender) {
              var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
            } else if (nextChildren !== prevChildren) {
              var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
              return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
            } else {
              enterHydrationState(workInProgress2);
              var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
              workInProgress2.child = child;
              var node14 = child;
              while (node14) {
                node14.flags = node14.flags & ~Placement | Hydrating;
                node14 = node14.sibling;
              }
            }
          } else {
            resetHydrationState();
            if (nextChildren === prevChildren) {
              return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
            }
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
          resetHydrationState();
          queueHydrationError(recoverableError);
          workInProgress2.flags |= ForceClientRender;
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostComponent(current2, workInProgress2, renderLanes2) {
          pushHostContext(workInProgress2);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          var type = workInProgress2.type;
          var nextProps = workInProgress2.pendingProps;
          var prevProps = current2 !== null ? current2.memoizedProps : null;
          var nextChildren = nextProps.children;
          var isDirectTextChild = shouldSetTextContent(type, nextProps);
          if (isDirectTextChild) {
            nextChildren = null;
          } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
            workInProgress2.flags |= ContentReset;
          }
          markRef(current2, workInProgress2);
          reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          return workInProgress2.child;
        }
        function updateHostText(current2, workInProgress2) {
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
          }
          return null;
        }
        function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var lazyComponent = elementType;
          var payload = lazyComponent.ia;
          var init = lazyComponent.ja;
          var Component64 = init(payload);
          workInProgress2.type = Component64;
          var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component64);
          var resolvedProps = resolveDefaultProps(Component64, props);
          var child;
          switch (resolvedTag) {
            case FunctionComponent: {
              {
                validateFunctionComponentInDev(workInProgress2, Component64);
                workInProgress2.type = Component64 = resolveFunctionForHotReloading(Component64);
              }
              child = updateFunctionComponent(null, workInProgress2, Component64, resolvedProps, renderLanes2);
              return child;
            }
            case ClassComponent: {
              {
                workInProgress2.type = Component64 = resolveClassForHotReloading(Component64);
              }
              child = updateClassComponent(null, workInProgress2, Component64, resolvedProps, renderLanes2);
              return child;
            }
            case ForwardRef: {
              {
                workInProgress2.type = Component64 = resolveForwardRefForHotReloading(Component64);
              }
              child = updateForwardRef(null, workInProgress2, Component64, resolvedProps, renderLanes2);
              return child;
            }
            case MemoComponent: {
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = Component64.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(
                      outerPropTypes,
                      resolvedProps,
                      // Resolved for outer only
                      "prop",
                      getComponentNameFromType(Component64)
                    );
                  }
                }
              }
              child = updateMemoComponent(
                null,
                workInProgress2,
                Component64,
                resolveDefaultProps(Component64.type, resolvedProps),
                // The inner type can have defaults too
                renderLanes2
              );
              return child;
            }
          }
          var hint = "";
          {
            if (Component64 !== null && typeof Component64 === "object" && Component64.$$typeof === REACT_LAZY_TYPE) {
              hint = " Did you wrap a component in React.lazy() more than once?";
            }
          }
          throw new Error("Element type is invalid. Received a promise that resolves to: " + Component64 + ". " + ("Lazy element type must resolve to a class or function." + hint));
        }
        function mountIncompleteClassComponent(_current, workInProgress2, Component64, nextProps, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          workInProgress2.tag = ClassComponent;
          var hasContext;
          if (isContextProvider(Component64)) {
            hasContext = true;
            pushContextProvider(workInProgress2);
          } else {
            hasContext = false;
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          constructClassInstance(workInProgress2, Component64, nextProps);
          mountClassInstance(workInProgress2, Component64, nextProps, renderLanes2);
          return finishClassComponent(null, workInProgress2, Component64, true, hasContext, renderLanes2);
        }
        function mountIndeterminateComponent(_current, workInProgress2, Component64, renderLanes2) {
          resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
          var props = workInProgress2.pendingProps;
          var context2;
          {
            var unmaskedContext = getUnmaskedContext(workInProgress2, Component64, false);
            context2 = getMaskedContext(workInProgress2, unmaskedContext);
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var value2;
          var hasId;
          {
            markComponentRenderStarted(workInProgress2);
          }
          {
            if (Component64.prototype && typeof Component64.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component64) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error3("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
            if (workInProgress2.mode & StrictLegacyMode) {
              ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
            }
            setIsRendering(true);
            ReactCurrentOwner$1.current = workInProgress2;
            value2 = renderWithHooks(null, workInProgress2, Component64, props, context2, renderLanes2);
            hasId = checkDidRenderIdHook();
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          {
            if (typeof value2 === "object" && value2 !== null && typeof value2.render === "function" && value2.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component64) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error3("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value2 === "object" && value2 !== null && typeof value2.render === "function" && value2.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component64) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error3("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            workInProgress2.tag = ClassComponent;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            var hasContext = false;
            if (isContextProvider(Component64)) {
              hasContext = true;
              pushContextProvider(workInProgress2);
            } else {
              hasContext = false;
            }
            workInProgress2.memoizedState = value2.state !== null && value2.state !== void 0 ? value2.state : null;
            initializeUpdateQueue(workInProgress2);
            adoptClassInstance(workInProgress2, value2);
            mountClassInstance(workInProgress2, Component64, props, renderLanes2);
            return finishClassComponent(null, workInProgress2, Component64, true, hasContext, renderLanes2);
          } else {
            workInProgress2.tag = FunctionComponent;
            {
              if (workInProgress2.mode & StrictLegacyMode) {
                setIsStrictModeForDevtools(true);
                try {
                  value2 = renderWithHooks(null, workInProgress2, Component64, props, context2, renderLanes2);
                  hasId = checkDidRenderIdHook();
                } finally {
                  setIsStrictModeForDevtools(false);
                }
              }
            }
            if (getIsHydrating() && hasId) {
              pushMaterializedTreeId(workInProgress2);
            }
            reconcileChildren(null, workInProgress2, value2, renderLanes2);
            {
              validateFunctionComponentInDev(workInProgress2, Component64);
            }
            return workInProgress2.child;
          }
        }
        function validateFunctionComponentInDev(workInProgress2, Component64) {
          {
            if (Component64) {
              if (Component64.childContextTypes) {
                error3("%s(...): childContextTypes cannot be defined on a function component.", Component64.displayName || Component64.name || "Component");
              }
            }
            if (workInProgress2.ref !== null) {
              var info = "";
              var ownerName = getCurrentFiberOwnerNameInDevOrNull();
              if (ownerName) {
                info += "\n\nCheck the render method of `" + ownerName + "`.";
              }
              var warningKey = ownerName || "";
              var debugSource = workInProgress2.ta;
              if (debugSource) {
                warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
              }
              if (!didWarnAboutFunctionRefs[warningKey]) {
                didWarnAboutFunctionRefs[warningKey] = true;
                error3("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
              }
            }
            if (typeof Component64.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component64) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error3("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component64.contextType === "object" && Component64.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component64) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error3("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        var SUSPENDED_MARKER = {
          dehydrated: null,
          treeContext: null,
          retryLane: NoLane
        };
        function mountSuspenseOffscreenState(renderLanes2) {
          return {
            baseLanes: renderLanes2,
            cachePool: getSuspendedCache(),
            transitions: null
          };
        }
        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
          var cachePool = null;
          return {
            baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
            cachePool,
            transitions: prevOffscreenState.transitions
          };
        }
        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            var suspenseState = current2.memoizedState;
            if (suspenseState === null) {
              return false;
            }
          }
          return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
        }
        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
          return removeLanes(current2.childLanes, renderLanes2);
        }
        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          {
            if (shouldSuspend(workInProgress2)) {
              workInProgress2.flags |= DidCapture;
            }
          }
          var suspenseContext = suspenseStackCursor.current;
          var showFallback = false;
          var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
          if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
            showFallback = true;
            workInProgress2.flags &= ~DidCapture;
          } else {
            if (current2 === null || current2.memoizedState !== null) {
              {
                suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
              }
            }
          }
          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          pushSuspenseContext(workInProgress2, suspenseContext);
          if (current2 === null) {
            tryToClaimNextHydratableInstance(workInProgress2);
            var suspenseState = workInProgress2.memoizedState;
            if (suspenseState !== null) {
              var dehydrated = suspenseState.dehydrated;
              if (dehydrated !== null) {
                return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
              }
            }
            var nextPrimaryChildren = nextProps.children;
            var nextFallbackChildren = nextProps.fallback;
            if (showFallback) {
              var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var primaryChildFragment = workInProgress2.child;
              primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackFragment;
            } else {
              return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
            }
          } else {
            var prevState = current2.memoizedState;
            if (prevState !== null) {
              var _dehydrated = prevState.dehydrated;
              if (_dehydrated !== null) {
                return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
              }
            }
            if (showFallback) {
              var _nextFallbackChildren = nextProps.fallback;
              var _nextPrimaryChildren = nextProps.children;
              var fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2);
              var _primaryChildFragment2 = workInProgress2.child;
              var prevOffscreenState = current2.child.memoizedState;
              _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
              _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            } else {
              var _nextPrimaryChildren2 = nextProps.children;
              var _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
              workInProgress2.memoizedState = null;
              return _primaryChildFragment3;
            }
          }
        }
        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
          primaryChildFragment.return = workInProgress2;
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var progressedPrimaryFragment = workInProgress2.child;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          var fallbackChildFragment;
          if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = 0;
              primaryChildFragment.treeBaseDuration = 0;
            }
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          } else {
            primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
          }
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
          return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
        }
        function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
          return createWorkInProgress(current2, offscreenProps);
        }
        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
            mode: "visible",
            children: primaryChildren
          });
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            primaryChildFragment.lanes = renderLanes2;
          }
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = null;
          if (currentFallbackChildFragment !== null) {
            var deletions = workInProgress2.deletions;
            if (deletions === null) {
              workInProgress2.deletions = [currentFallbackChildFragment];
              workInProgress2.flags |= ChildDeletion;
            } else {
              deletions.push(currentFallbackChildFragment);
            }
          }
          workInProgress2.child = primaryChildFragment;
          return primaryChildFragment;
        }
        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var mode = workInProgress2.mode;
          var currentPrimaryChildFragment = current2.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
          var primaryChildProps = {
            mode: "hidden",
            children: primaryChildren
          };
          var primaryChildFragment;
          if (
            // In legacy mode, we commit the primary tree as if it successfully
            // completed, even though it's in an inconsistent state.
            (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
            // already cloned. In legacy mode, the only case where this isn't true is
            // when DevTools forces us to display a fallback; we skip the first render
            // pass entirely and go straight to rendering the fallback. (In Concurrent
            // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
            // only codepath.)
            workInProgress2.child !== currentPrimaryChildFragment
          ) {
            var progressedPrimaryFragment = workInProgress2.child;
            primaryChildFragment = progressedPrimaryFragment;
            primaryChildFragment.childLanes = NoLanes;
            primaryChildFragment.pendingProps = primaryChildProps;
            if (workInProgress2.mode & ProfileMode) {
              primaryChildFragment.actualDuration = 0;
              primaryChildFragment.actualStartTime = -1;
              primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
              primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
            }
            workInProgress2.deletions = null;
          } else {
            primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
            primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
          }
          var fallbackChildFragment;
          if (currentFallbackChildFragment !== null) {
            fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
          } else {
            fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
            fallbackChildFragment.flags |= Placement;
          }
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          return fallbackChildFragment;
        }
        function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
          if (recoverableError !== null) {
            queueHydrationError(recoverableError);
          }
          reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          var nextProps = workInProgress2.pendingProps;
          var primaryChildren = nextProps.children;
          var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
          primaryChildFragment.flags |= Placement;
          workInProgress2.memoizedState = null;
          return primaryChildFragment;
        }
        function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
          var fiberMode = workInProgress2.mode;
          var primaryChildProps = {
            mode: "visible",
            children: primaryChildren
          };
          var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
          var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
          fallbackChildFragment.flags |= Placement;
          primaryChildFragment.return = workInProgress2;
          fallbackChildFragment.return = workInProgress2;
          primaryChildFragment.sibling = fallbackChildFragment;
          workInProgress2.child = primaryChildFragment;
          if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
            reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
          }
          return fallbackChildFragment;
        }
        function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            {
              error3("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
            }
            workInProgress2.lanes = laneToLanes(SyncLane);
          } else if (isSuspenseInstanceFallback(suspenseInstance)) {
            workInProgress2.lanes = laneToLanes(DefaultHydrationLane);
          } else {
            workInProgress2.lanes = laneToLanes(OffscreenLane);
          }
          return null;
        }
        function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
          if (!didSuspend) {
            warnIfHydrating();
            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
              return retrySuspenseComponentWithoutHydrating(
                current2,
                workInProgress2,
                renderLanes2,
                // TODO: When we delete legacy mode, we should make this error argument
                // required — every concurrent mode path that causes hydration to
                // de-opt to client rendering should have an error message.
                null
              );
            }
            if (isSuspenseInstanceFallback(suspenseInstance)) {
              var digest, message, stack2;
              {
                var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                digest = _getSuspenseInstanceF.digest;
                message = _getSuspenseInstanceF.message;
                stack2 = _getSuspenseInstanceF.stack;
              }
              var error4;
              if (message) {
                error4 = new Error(message);
              } else {
                error4 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
              }
              var capturedValue = createCapturedValue(error4, digest, stack2);
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
            }
            var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
            if (didReceiveUpdate || hasContextChanged2) {
              var root2 = getWorkInProgressRoot();
              if (root2 !== null) {
                var attemptHydrationAtLane = getBumpedLaneForHydration(root2, renderLanes2);
                if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                  suspenseState.retryLane = attemptHydrationAtLane;
                  var eventTime = NoTimestamp;
                  enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane);
                  scheduleUpdateOnFiber(root2, current2, attemptHydrationAtLane, eventTime);
                }
              }
              renderDidSuspendDelayIfPossible();
              var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
            } else if (isSuspenseInstancePending(suspenseInstance)) {
              workInProgress2.flags |= DidCapture;
              workInProgress2.child = current2.child;
              var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
              registerSuspenseInstanceRetry(suspenseInstance, retry);
              return null;
            } else {
              reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
              var primaryChildren = nextProps.children;
              var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
              primaryChildFragment.flags |= Hydrating;
              return primaryChildFragment;
            }
          } else {
            if (workInProgress2.flags & ForceClientRender) {
              workInProgress2.flags &= ~ForceClientRender;
              var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
              return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
            } else if (workInProgress2.memoizedState !== null) {
              workInProgress2.child = current2.child;
              workInProgress2.flags |= DidCapture;
              return null;
            } else {
              var nextPrimaryChildren = nextProps.children;
              var nextFallbackChildren = nextProps.fallback;
              var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
              var _primaryChildFragment4 = workInProgress2.child;
              _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2);
              workInProgress2.memoizedState = SUSPENDED_MARKER;
              return fallbackChildFragment;
            }
          }
        }
        function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
          fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
          }
          scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
        }
        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
          var node14 = firstChild;
          while (node14 !== null) {
            if (node14.tag === SuspenseComponent) {
              var state = node14.memoizedState;
              if (state !== null) {
                scheduleSuspenseWorkOnFiber(node14, renderLanes2, workInProgress2);
              }
            } else if (node14.tag === SuspenseListComponent) {
              scheduleSuspenseWorkOnFiber(node14, renderLanes2, workInProgress2);
            } else if (node14.child !== null) {
              node14.child.return = node14;
              node14 = node14.child;
              continue;
            }
            if (node14 === workInProgress2) {
              return;
            }
            while (node14.sibling === null) {
              if (node14.return === null || node14.return === workInProgress2) {
                return;
              }
              node14 = node14.return;
            }
            node14.sibling.return = node14.return;
            node14 = node14.sibling;
          }
        }
        function findLastContentRow(firstChild) {
          var row = firstChild;
          var lastContentRow = null;
          while (row !== null) {
            var currentRow = row.alternate;
            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
              lastContentRow = row;
            }
            row = row.sibling;
          }
          return lastContentRow;
        }
        function validateRevealOrder(revealOrder) {
          {
            if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
              didWarnAboutRevealOrder[revealOrder] = true;
              if (typeof revealOrder === "string") {
                switch (revealOrder.toLowerCase()) {
                  case "together":
                  case "forwards":
                  case "backwards": {
                    error3('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  case "forward":
                  case "backward": {
                    error3('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                    break;
                  }
                  default:
                    error3('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                    break;
                }
              } else {
                error3('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
              }
            }
          }
        }
        function validateTailOptions(tailMode, revealOrder) {
          {
            if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
              if (tailMode !== "collapsed" && tailMode !== "hidden") {
                didWarnAboutTailOptions[tailMode] = true;
                error3('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
              } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                didWarnAboutTailOptions[tailMode] = true;
                error3('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
              }
            }
          }
        }
        function validateSuspenseListNestedChild(childSlot, index2) {
          {
            var isAnArray = isArray4(childSlot);
            var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
            if (isAnArray || isIterable) {
              var type = isAnArray ? "array" : "iterable";
              error3("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
              return false;
            }
          }
          return true;
        }
        function validateSuspenseListChildren(children2, revealOrder) {
          {
            if ((revealOrder === "forwards" || revealOrder === "backwards") && children2 !== void 0 && children2 !== null && children2 !== false) {
              if (isArray4(children2)) {
                for (var i = 0; i < children2.length; i++) {
                  if (!validateSuspenseListNestedChild(children2[i], i)) {
                    return;
                  }
                }
              } else {
                var iteratorFn = getIteratorFn(children2);
                if (typeof iteratorFn === "function") {
                  var childrenIterator = iteratorFn.call(children2);
                  if (childrenIterator) {
                    var step = childrenIterator.next();
                    var _i = 0;
                    for (; !step.done; step = childrenIterator.next()) {
                      if (!validateSuspenseListNestedChild(step.value, _i)) {
                        return;
                      }
                      _i++;
                    }
                  }
                } else {
                  error3('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                }
              }
            }
          }
        }
        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
          var renderState = workInProgress2.memoizedState;
          if (renderState === null) {
            workInProgress2.memoizedState = {
              isBackwards,
              rendering: null,
              renderingStartTime: 0,
              last: lastContentRow,
              tail,
              tailMode
            };
          } else {
            renderState.isBackwards = isBackwards;
            renderState.rendering = null;
            renderState.renderingStartTime = 0;
            renderState.last = lastContentRow;
            renderState.tail = tail;
            renderState.tailMode = tailMode;
          }
        }
        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
          var nextProps = workInProgress2.pendingProps;
          var revealOrder = nextProps.revealOrder;
          var tailMode = nextProps.tail;
          var newChildren = nextProps.children;
          validateRevealOrder(revealOrder);
          validateTailOptions(tailMode, revealOrder);
          validateSuspenseListChildren(newChildren, revealOrder);
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          var suspenseContext = suspenseStackCursor.current;
          var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
          if (shouldForceFallback) {
            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
            workInProgress2.flags |= DidCapture;
          } else {
            var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
            if (didSuspendBefore) {
              propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
            }
            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
          }
          pushSuspenseContext(workInProgress2, suspenseContext);
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            workInProgress2.memoizedState = null;
          } else {
            switch (revealOrder) {
              case "forwards": {
                var lastContentRow = findLastContentRow(workInProgress2.child);
                var tail;
                if (lastContentRow === null) {
                  tail = workInProgress2.child;
                  workInProgress2.child = null;
                } else {
                  tail = lastContentRow.sibling;
                  lastContentRow.sibling = null;
                }
                initSuspenseListRenderState(
                  workInProgress2,
                  false,
                  // isBackwards
                  tail,
                  lastContentRow,
                  tailMode
                );
                break;
              }
              case "backwards": {
                var _tail = null;
                var row = workInProgress2.child;
                workInProgress2.child = null;
                while (row !== null) {
                  var currentRow = row.alternate;
                  if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                    workInProgress2.child = row;
                    break;
                  }
                  var nextRow = row.sibling;
                  row.sibling = _tail;
                  _tail = row;
                  row = nextRow;
                }
                initSuspenseListRenderState(
                  workInProgress2,
                  true,
                  // isBackwards
                  _tail,
                  null,
                  // last
                  tailMode
                );
                break;
              }
              case "together": {
                initSuspenseListRenderState(
                  workInProgress2,
                  false,
                  // isBackwards
                  null,
                  // tail
                  null,
                  // last
                  void 0
                );
                break;
              }
              default: {
                workInProgress2.memoizedState = null;
              }
            }
          }
          return workInProgress2.child;
        }
        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
          pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
          var nextChildren = workInProgress2.pendingProps;
          if (current2 === null) {
            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
          } else {
            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
          }
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
        function updateContextProvider(current2, workInProgress2, renderLanes2) {
          var providerType = workInProgress2.type;
          var context2 = providerType.P;
          var newProps = workInProgress2.pendingProps;
          var oldProps = workInProgress2.memoizedProps;
          var newValue = newProps.value;
          {
            if (!("value" in newProps)) {
              if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                error3("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
              }
            }
            var providerPropTypes = workInProgress2.type.propTypes;
            if (providerPropTypes) {
              checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
            }
          }
          pushProvider(workInProgress2, context2, newValue);
          {
            if (oldProps !== null) {
              var oldValue = oldProps.value;
              if (objectIs(oldValue, newValue)) {
                if (oldProps.children === newProps.children && !hasContextChanged()) {
                  return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                }
              } else {
                propagateContextChange(workInProgress2, context2, renderLanes2);
              }
            }
          }
          var newChildren = newProps.children;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        var hasWarnedAboutUsingContextAsConsumer = false;
        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
          var context2 = workInProgress2.type;
          {
            if (context2.P === void 0) {
              if (context2 !== context2.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error3("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context2 = context2.P;
            }
          }
          var newProps = workInProgress2.pendingProps;
          var render6 = newProps.children;
          {
            if (typeof render6 !== "function") {
              error3("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          prepareToReadContext(workInProgress2, renderLanes2);
          var newValue = readContext(context2);
          {
            markComponentRenderStarted(workInProgress2);
          }
          var newChildren;
          {
            ReactCurrentOwner$1.current = workInProgress2;
            setIsRendering(true);
            newChildren = render6(newValue);
            setIsRendering(false);
          }
          {
            markComponentRenderStopped();
          }
          workInProgress2.flags |= PerformedWork;
          reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
          return workInProgress2.child;
        }
        function markWorkInProgressReceivedUpdate() {
          didReceiveUpdate = true;
        }
        function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
          if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
            if (current2 !== null) {
              current2.alternate = null;
              workInProgress2.alternate = null;
              workInProgress2.flags |= Placement;
            }
          }
        }
        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
          if (current2 !== null) {
            workInProgress2.dependencies = current2.dependencies;
          }
          {
            stopProfilerTimerIfRunning();
          }
          markSkippedUpdateLanes(workInProgress2.lanes);
          if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
            {
              return null;
            }
          }
          cloneChildFibers(current2, workInProgress2);
          return workInProgress2.child;
        }
        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
          {
            var returnFiber = oldWorkInProgress.return;
            if (returnFiber === null) {
              throw new Error("Cannot swap the root fiber.");
            }
            current2.alternate = null;
            oldWorkInProgress.alternate = null;
            newWorkInProgress.index = oldWorkInProgress.index;
            newWorkInProgress.sibling = oldWorkInProgress.sibling;
            newWorkInProgress.return = oldWorkInProgress.return;
            newWorkInProgress.ref = oldWorkInProgress.ref;
            if (oldWorkInProgress === returnFiber.child) {
              returnFiber.child = newWorkInProgress;
            } else {
              var prevSibling = returnFiber.child;
              if (prevSibling === null) {
                throw new Error("Expected parent to have a child.");
              }
              while (prevSibling.sibling !== oldWorkInProgress) {
                prevSibling = prevSibling.sibling;
                if (prevSibling === null) {
                  throw new Error("Expected to find the previous sibling.");
                }
              }
              prevSibling.sibling = newWorkInProgress;
            }
            var deletions = returnFiber.deletions;
            if (deletions === null) {
              returnFiber.deletions = [current2];
              returnFiber.flags |= ChildDeletion;
            } else {
              deletions.push(current2);
            }
            newWorkInProgress.flags |= Placement;
            return newWorkInProgress;
          }
        }
        function checkScheduledUpdateOrContext(current2, renderLanes2) {
          var updateLanes = current2.lanes;
          if (includesSomeLane(updateLanes, renderLanes2)) {
            return true;
          }
          return false;
        }
        function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
          switch (workInProgress2.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress2);
              var root2 = workInProgress2.stateNode;
              resetHydrationState();
              break;
            case HostComponent:
              pushHostContext(workInProgress2);
              break;
            case ClassComponent: {
              var Component64 = workInProgress2.type;
              if (isContextProvider(Component64)) {
                pushContextProvider(workInProgress2);
              }
              break;
            }
            case HostPortal:
              pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
              break;
            case ContextProvider: {
              var newValue = workInProgress2.memoizedProps.value;
              var context2 = workInProgress2.type.P;
              pushProvider(workInProgress2, context2, newValue);
              break;
            }
            case Profiler:
              {
                var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                if (hasChildWork) {
                  workInProgress2.flags |= Update;
                }
                {
                  var stateNode = workInProgress2.stateNode;
                  stateNode.effectDuration = 0;
                  stateNode.passiveEffectDuration = 0;
                }
              }
              break;
            case SuspenseComponent: {
              var state = workInProgress2.memoizedState;
              if (state !== null) {
                if (state.dehydrated !== null) {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  workInProgress2.flags |= DidCapture;
                  return null;
                }
                var primaryChildFragment = workInProgress2.child;
                var primaryChildLanes = primaryChildFragment.childLanes;
                if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                  return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                } else {
                  pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                  var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                  if (child !== null) {
                    return child.sibling;
                  } else {
                    return null;
                  }
                }
              } else {
                pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
              }
              break;
            }
            case SuspenseListComponent: {
              var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
              var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
              if (didSuspendBefore) {
                if (_hasChildWork) {
                  return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                }
                workInProgress2.flags |= DidCapture;
              }
              var renderState = workInProgress2.memoizedState;
              if (renderState !== null) {
                renderState.rendering = null;
                renderState.tail = null;
                renderState.lastEffect = null;
              }
              pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
              if (_hasChildWork) {
                break;
              } else {
                return null;
              }
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              workInProgress2.lanes = NoLanes;
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
        }
        function beginWork(current2, workInProgress2, renderLanes2) {
          {
            if (workInProgress2.Qa && current2 !== null) {
              return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2.da || null, workInProgress2.mode, workInProgress2.lanes));
            }
          }
          if (current2 !== null) {
            var oldProps = current2.memoizedProps;
            var newProps = workInProgress2.pendingProps;
            if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
            workInProgress2.type !== current2.type) {
              didReceiveUpdate = true;
            } else {
              var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
              if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
              // may not be work scheduled on `current`, so we check for this flag.
              (workInProgress2.flags & DidCapture) === NoFlags) {
                didReceiveUpdate = false;
                return attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
              }
              if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                didReceiveUpdate = true;
              } else {
                didReceiveUpdate = false;
              }
            }
          } else {
            didReceiveUpdate = false;
            if (getIsHydrating() && isForkedChild(workInProgress2)) {
              var slotIndex = workInProgress2.index;
              var numberOfForks = getForksAtLevel();
              pushTreeId(workInProgress2, numberOfForks, slotIndex);
            }
          }
          workInProgress2.lanes = NoLanes;
          switch (workInProgress2.tag) {
            case IndeterminateComponent: {
              return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
            }
            case LazyComponent: {
              var elementType = workInProgress2.elementType;
              return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
            }
            case FunctionComponent: {
              var Component64 = workInProgress2.type;
              var unresolvedProps = workInProgress2.pendingProps;
              var resolvedProps = workInProgress2.elementType === Component64 ? unresolvedProps : resolveDefaultProps(Component64, unresolvedProps);
              return updateFunctionComponent(current2, workInProgress2, Component64, resolvedProps, renderLanes2);
            }
            case ClassComponent: {
              var _Component = workInProgress2.type;
              var _unresolvedProps = workInProgress2.pendingProps;
              var _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
              return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
            }
            case HostRoot:
              return updateHostRoot(current2, workInProgress2, renderLanes2);
            case HostComponent:
              return updateHostComponent(current2, workInProgress2, renderLanes2);
            case HostText:
              return updateHostText(current2, workInProgress2);
            case SuspenseComponent:
              return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
            case HostPortal:
              return updatePortalComponent(current2, workInProgress2, renderLanes2);
            case ForwardRef: {
              var type = workInProgress2.type;
              var _unresolvedProps2 = workInProgress2.pendingProps;
              var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
              return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
            }
            case Fragment42:
              return updateFragment(current2, workInProgress2, renderLanes2);
            case Mode:
              return updateMode(current2, workInProgress2, renderLanes2);
            case Profiler:
              return updateProfiler(current2, workInProgress2, renderLanes2);
            case ContextProvider:
              return updateContextProvider(current2, workInProgress2, renderLanes2);
            case ContextConsumer:
              return updateContextConsumer(current2, workInProgress2, renderLanes2);
            case MemoComponent: {
              var _type2 = workInProgress2.type;
              var _unresolvedProps3 = workInProgress2.pendingProps;
              var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
              {
                if (workInProgress2.type !== workInProgress2.elementType) {
                  var outerPropTypes = _type2.propTypes;
                  if (outerPropTypes) {
                    checkPropTypes(
                      outerPropTypes,
                      _resolvedProps3,
                      // Resolved for outer only
                      "prop",
                      getComponentNameFromType(_type2)
                    );
                  }
                }
              }
              _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
              return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
            }
            case SimpleMemoComponent: {
              return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
            }
            case IncompleteClassComponent: {
              var _Component2 = workInProgress2.type;
              var _unresolvedProps4 = workInProgress2.pendingProps;
              var _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
              return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
            }
            case SuspenseListComponent: {
              return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent: {
              return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function markUpdate(workInProgress2) {
          workInProgress2.flags |= Update;
        }
        function markRef$1(workInProgress2) {
          workInProgress2.flags |= Ref;
          {
            workInProgress2.flags |= RefStatic;
          }
        }
        var appendAllChildren;
        var updateHostContainer;
        var updateHostComponent$1;
        var updateHostText$1;
        {
          appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
            var node14 = workInProgress2.child;
            while (node14 !== null) {
              if (node14.tag === HostComponent || node14.tag === HostText) {
                appendInitialChild(parent, node14.stateNode);
              } else if (node14.tag === HostPortal)
                ;
              else if (node14.child !== null) {
                node14.child.return = node14;
                node14 = node14.child;
                continue;
              }
              if (node14 === workInProgress2) {
                return;
              }
              while (node14.sibling === null) {
                if (node14.return === null || node14.return === workInProgress2) {
                  return;
                }
                node14 = node14.return;
              }
              node14.sibling.return = node14.return;
              node14 = node14.sibling;
            }
          };
          updateHostContainer = function(current2, workInProgress2) {
          };
          updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
            var oldProps = current2.memoizedProps;
            if (oldProps === newProps) {
              return;
            }
            var instance4 = workInProgress2.stateNode;
            var currentHostContext = getHostContext();
            var updatePayload = prepareUpdate(instance4, type, oldProps, newProps, rootContainerInstance, currentHostContext);
            workInProgress2.updateQueue = updatePayload;
            if (updatePayload) {
              markUpdate(workInProgress2);
            }
          };
          updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
            if (oldText !== newText) {
              markUpdate(workInProgress2);
            }
          };
        }
        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
          if (getIsHydrating()) {
            return;
          }
          switch (renderState.tailMode) {
            case "hidden": {
              var tailNode = renderState.tail;
              var lastTailNode = null;
              while (tailNode !== null) {
                if (tailNode.alternate !== null) {
                  lastTailNode = tailNode;
                }
                tailNode = tailNode.sibling;
              }
              if (lastTailNode === null) {
                renderState.tail = null;
              } else {
                lastTailNode.sibling = null;
              }
              break;
            }
            case "collapsed": {
              var _tailNode = renderState.tail;
              var _lastTailNode = null;
              while (_tailNode !== null) {
                if (_tailNode.alternate !== null) {
                  _lastTailNode = _tailNode;
                }
                _tailNode = _tailNode.sibling;
              }
              if (_lastTailNode === null) {
                if (!hasRenderedATailFallback && renderState.tail !== null) {
                  renderState.tail.sibling = null;
                } else {
                  renderState.tail = null;
                }
              } else {
                _lastTailNode.sibling = null;
              }
              break;
            }
          }
        }
        function bubbleProperties(completedWork) {
          var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
          var newChildLanes = NoLanes;
          var subtreeFlags = NoFlags;
          if (!didBailout) {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var actualDuration = completedWork.actualDuration;
              var treeBaseDuration = completedWork.selfBaseDuration;
              var child = completedWork.child;
              while (child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                subtreeFlags |= child.subtreeFlags;
                subtreeFlags |= child.flags;
                actualDuration += child.actualDuration;
                treeBaseDuration += child.treeBaseDuration;
                child = child.sibling;
              }
              completedWork.actualDuration = actualDuration;
              completedWork.treeBaseDuration = treeBaseDuration;
            } else {
              var _child = completedWork.child;
              while (_child !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                subtreeFlags |= _child.subtreeFlags;
                subtreeFlags |= _child.flags;
                _child.return = completedWork;
                _child = _child.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          } else {
            if ((completedWork.mode & ProfileMode) !== NoMode) {
              var _treeBaseDuration = completedWork.selfBaseDuration;
              var _child2 = completedWork.child;
              while (_child2 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));
                subtreeFlags |= _child2.subtreeFlags & StaticMask;
                subtreeFlags |= _child2.flags & StaticMask;
                _treeBaseDuration += _child2.treeBaseDuration;
                _child2 = _child2.sibling;
              }
              completedWork.treeBaseDuration = _treeBaseDuration;
            } else {
              var _child3 = completedWork.child;
              while (_child3 !== null) {
                newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));
                subtreeFlags |= _child3.subtreeFlags & StaticMask;
                subtreeFlags |= _child3.flags & StaticMask;
                _child3.return = completedWork;
                _child3 = _child3.sibling;
              }
            }
            completedWork.subtreeFlags |= subtreeFlags;
          }
          completedWork.childLanes = newChildLanes;
          return didBailout;
        }
        function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
          if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags) {
            warnIfUnhydratedTailNodes(workInProgress2);
            resetHydrationState();
            workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture;
            return false;
          }
          var wasHydrated = popHydrationState(workInProgress2);
          if (nextState !== null && nextState.dehydrated !== null) {
            if (current2 === null) {
              if (!wasHydrated) {
                throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
              }
              prepareToHydrateHostSuspenseInstance(workInProgress2);
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var isTimedOutSuspense = nextState !== null;
                  if (isTimedOutSuspense) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            } else {
              resetHydrationState();
              if ((workInProgress2.flags & DidCapture) === NoFlags) {
                workInProgress2.memoizedState = null;
              }
              workInProgress2.flags |= Update;
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  var _isTimedOutSuspense = nextState !== null;
                  if (_isTimedOutSuspense) {
                    var _primaryChildFragment = workInProgress2.child;
                    if (_primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return false;
            }
          } else {
            upgradeHydrationErrorsToRecoverable();
            return true;
          }
        }
        function completeWork(current2, workInProgress2, renderLanes2) {
          var newProps = workInProgress2.pendingProps;
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case IndeterminateComponent:
            case LazyComponent:
            case SimpleMemoComponent:
            case FunctionComponent:
            case ForwardRef:
            case Fragment42:
            case Mode:
            case Profiler:
            case ContextConsumer:
            case MemoComponent:
              bubbleProperties(workInProgress2);
              return null;
            case ClassComponent: {
              var Component64 = workInProgress2.type;
              if (isContextProvider(Component64)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostRoot: {
              var fiberRoot = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              if (fiberRoot.pendingContext) {
                fiberRoot.context = fiberRoot.pendingContext;
                fiberRoot.pendingContext = null;
              }
              if (current2 === null || current2.child === null) {
                var wasHydrated = popHydrationState(workInProgress2);
                if (wasHydrated) {
                  markUpdate(workInProgress2);
                } else {
                  if (current2 !== null) {
                    var prevState = current2.memoizedState;
                    if (
                      // Check if this is a client root
                      !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                      (workInProgress2.flags & ForceClientRender) !== NoFlags
                    ) {
                      workInProgress2.flags |= Snapshot;
                      upgradeHydrationErrorsToRecoverable();
                    }
                  }
                }
              }
              updateHostContainer(current2, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              var rootContainerInstance = getRootHostContainer();
              var type = workInProgress2.type;
              if (current2 !== null && workInProgress2.stateNode != null) {
                updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                if (current2.ref !== workInProgress2.ref) {
                  markRef$1(workInProgress2);
                }
              } else {
                if (!newProps) {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  bubbleProperties(workInProgress2);
                  return null;
                }
                var currentHostContext = getHostContext();
                var _wasHydrated = popHydrationState(workInProgress2);
                if (_wasHydrated) {
                  if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  var instance4 = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                  appendAllChildren(instance4, workInProgress2, false, false);
                  workInProgress2.stateNode = instance4;
                  if (finalizeInitialChildren(instance4, type, newProps, rootContainerInstance)) {
                    markUpdate(workInProgress2);
                  }
                }
                if (workInProgress2.ref !== null) {
                  markRef$1(workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case HostText: {
              var newText = newProps;
              if (current2 && workInProgress2.stateNode != null) {
                var oldText = current2.memoizedProps;
                updateHostText$1(current2, workInProgress2, oldText, newText);
              } else {
                if (typeof newText !== "string") {
                  if (workInProgress2.stateNode === null) {
                    throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                }
                var _rootContainerInstance = getRootHostContainer();
                var _currentHostContext = getHostContext();
                var _wasHydrated2 = popHydrationState(workInProgress2);
                if (_wasHydrated2) {
                  if (prepareToHydrateHostTextInstance(workInProgress2)) {
                    markUpdate(workInProgress2);
                  }
                } else {
                  workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                }
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var nextState = workInProgress2.memoizedState;
              if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
                var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
                if (!fallthroughToNormalSuspensePath) {
                  if (workInProgress2.flags & ShouldCapture) {
                    return workInProgress2;
                  } else {
                    return null;
                  }
                }
              }
              if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                workInProgress2.lanes = renderLanes2;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              var nextDidTimeout = nextState !== null;
              var prevDidTimeout = current2 !== null && current2.memoizedState !== null;
              if (nextDidTimeout !== prevDidTimeout) {
                if (nextDidTimeout) {
                  var _offscreenFiber2 = workInProgress2.child;
                  _offscreenFiber2.flags |= Visibility;
                  if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                    var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                    if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                      renderDidSuspend();
                    } else {
                      renderDidSuspendDelayIfPossible();
                    }
                  }
                }
              }
              var wakeables = workInProgress2.updateQueue;
              if (wakeables !== null) {
                workInProgress2.flags |= Update;
              }
              bubbleProperties(workInProgress2);
              {
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  if (nextDidTimeout) {
                    var primaryChildFragment = workInProgress2.child;
                    if (primaryChildFragment !== null) {
                      workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                    }
                  }
                }
              }
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              updateHostContainer(current2, workInProgress2);
              if (current2 === null) {
                preparePortalMount(workInProgress2.stateNode.containerInfo);
              }
              bubbleProperties(workInProgress2);
              return null;
            case ContextProvider:
              var context2 = workInProgress2.type.P;
              popProvider(context2, workInProgress2);
              bubbleProperties(workInProgress2);
              return null;
            case IncompleteClassComponent: {
              var _Component = workInProgress2.type;
              if (isContextProvider(_Component)) {
                popContext(workInProgress2);
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              var renderState = workInProgress2.memoizedState;
              if (renderState === null) {
                bubbleProperties(workInProgress2);
                return null;
              }
              var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
              var renderedTail = renderState.rendering;
              if (renderedTail === null) {
                if (!didSuspendAlready) {
                  var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                  if (!cannotBeSuspended) {
                    var row = workInProgress2.child;
                    while (row !== null) {
                      var suspended = findFirstSuspended(row);
                      if (suspended !== null) {
                        didSuspendAlready = true;
                        workInProgress2.flags |= DidCapture;
                        cutOffTailIfNeeded(renderState, false);
                        var newThenables = suspended.updateQueue;
                        if (newThenables !== null) {
                          workInProgress2.updateQueue = newThenables;
                          workInProgress2.flags |= Update;
                        }
                        workInProgress2.subtreeFlags = NoFlags;
                        resetChildFibers(workInProgress2, renderLanes2);
                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                        return workInProgress2.child;
                      }
                      row = row.sibling;
                    }
                  }
                  if (renderState.tail !== null && now3() > getRenderTargetTime()) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                } else {
                  cutOffTailIfNeeded(renderState, false);
                }
              } else {
                if (!didSuspendAlready) {
                  var _suspended = findFirstSuspended(renderedTail);
                  if (_suspended !== null) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    var _newThenables = _suspended.updateQueue;
                    if (_newThenables !== null) {
                      workInProgress2.updateQueue = _newThenables;
                      workInProgress2.flags |= Update;
                    }
                    cutOffTailIfNeeded(renderState, true);
                    if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                      bubbleProperties(workInProgress2);
                      return null;
                    }
                  } else if (
                    // The time it took to render last row is greater than the remaining
                    // time we have to render. So rendering one more row would likely
                    // exceed it.
                    now3() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane
                  ) {
                    workInProgress2.flags |= DidCapture;
                    didSuspendAlready = true;
                    cutOffTailIfNeeded(renderState, false);
                    workInProgress2.lanes = SomeRetryLane;
                  }
                }
                if (renderState.isBackwards) {
                  renderedTail.sibling = workInProgress2.child;
                  workInProgress2.child = renderedTail;
                } else {
                  var previousSibling = renderState.last;
                  if (previousSibling !== null) {
                    previousSibling.sibling = renderedTail;
                  } else {
                    workInProgress2.child = renderedTail;
                  }
                  renderState.last = renderedTail;
                }
              }
              if (renderState.tail !== null) {
                var next = renderState.tail;
                renderState.rendering = next;
                renderState.tail = next.sibling;
                renderState.renderingStartTime = now3();
                next.sibling = null;
                var suspenseContext = suspenseStackCursor.current;
                if (didSuspendAlready) {
                  suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                } else {
                  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                }
                pushSuspenseContext(workInProgress2, suspenseContext);
                return next;
              }
              bubbleProperties(workInProgress2);
              return null;
            }
            case ScopeComponent: {
              break;
            }
            case OffscreenComponent:
            case LegacyHiddenComponent: {
              popRenderLanes(workInProgress2);
              var _nextState = workInProgress2.memoizedState;
              var nextIsHidden = _nextState !== null;
              if (current2 !== null) {
                var _prevState = current2.memoizedState;
                var prevIsHidden = _prevState !== null;
                if (prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.
                !enableLegacyHidden) {
                  workInProgress2.flags |= Visibility;
                }
              }
              if (!nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode) {
                bubbleProperties(workInProgress2);
              } else {
                if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                  bubbleProperties(workInProgress2);
                  {
                    if (workInProgress2.subtreeFlags & (Placement | Update)) {
                      workInProgress2.flags |= Visibility;
                    }
                  }
                }
              }
              return null;
            }
            case CacheComponent: {
              return null;
            }
            case TracingMarkerComponent: {
              return null;
            }
          }
          throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
        function unwindWork(current2, workInProgress2, renderLanes2) {
          popTreeContext(workInProgress2);
          switch (workInProgress2.tag) {
            case ClassComponent: {
              var Component64 = workInProgress2.type;
              if (isContextProvider(Component64)) {
                popContext(workInProgress2);
              }
              var flags = workInProgress2.flags;
              if (flags & ShouldCapture) {
                workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case HostRoot: {
              var root2 = workInProgress2.stateNode;
              popHostContainer(workInProgress2);
              popTopLevelContextObject(workInProgress2);
              resetWorkInProgressVersions();
              var _flags = workInProgress2.flags;
              if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                return workInProgress2;
              }
              return null;
            }
            case HostComponent: {
              popHostContext(workInProgress2);
              return null;
            }
            case SuspenseComponent: {
              popSuspenseContext(workInProgress2);
              var suspenseState = workInProgress2.memoizedState;
              if (suspenseState !== null && suspenseState.dehydrated !== null) {
                if (workInProgress2.alternate === null) {
                  throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                }
                resetHydrationState();
              }
              var _flags2 = workInProgress2.flags;
              if (_flags2 & ShouldCapture) {
                workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                  transferActualDuration(workInProgress2);
                }
                return workInProgress2;
              }
              return null;
            }
            case SuspenseListComponent: {
              popSuspenseContext(workInProgress2);
              return null;
            }
            case HostPortal:
              popHostContainer(workInProgress2);
              return null;
            case ContextProvider:
              var context2 = workInProgress2.type.P;
              popProvider(context2, workInProgress2);
              return null;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(workInProgress2);
              return null;
            case CacheComponent:
              return null;
            default:
              return null;
          }
        }
        function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
          popTreeContext(interruptedWork);
          switch (interruptedWork.tag) {
            case ClassComponent: {
              var childContextTypes = interruptedWork.type.childContextTypes;
              if (childContextTypes !== null && childContextTypes !== void 0) {
                popContext(interruptedWork);
              }
              break;
            }
            case HostRoot: {
              var root2 = interruptedWork.stateNode;
              popHostContainer(interruptedWork);
              popTopLevelContextObject(interruptedWork);
              resetWorkInProgressVersions();
              break;
            }
            case HostComponent: {
              popHostContext(interruptedWork);
              break;
            }
            case HostPortal:
              popHostContainer(interruptedWork);
              break;
            case SuspenseComponent:
              popSuspenseContext(interruptedWork);
              break;
            case SuspenseListComponent:
              popSuspenseContext(interruptedWork);
              break;
            case ContextProvider:
              var context2 = interruptedWork.type.P;
              popProvider(context2, interruptedWork);
              break;
            case OffscreenComponent:
            case LegacyHiddenComponent:
              popRenderLanes(interruptedWork);
              break;
          }
        }
        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
        {
          didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
        }
        var offscreenSubtreeIsHidden = false;
        var offscreenSubtreeWasHidden = false;
        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
        var nextEffect = null;
        var inProgressLanes = null;
        var inProgressRoot = null;
        function reportUncaughtErrorInDEV(error4) {
          {
            invokeGuardedCallback(null, function() {
              throw error4;
            });
            clearCaughtError();
          }
        }
        var callComponentWillUnmountWithTimer = function(current2, instance4) {
          instance4.props = current2.memoizedProps;
          instance4.state = current2.memoizedState;
          if (current2.mode & ProfileMode) {
            try {
              startLayoutEffectTimer();
              instance4.componentWillUnmount();
            } finally {
              recordLayoutEffectDuration(current2);
            }
          } else {
            instance4.componentWillUnmount();
          }
        };
        function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
          try {
            commitHookEffectListMount(Layout2, current2);
          } catch (error4) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error4);
          }
        }
        function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance4) {
          try {
            callComponentWillUnmountWithTimer(current2, instance4);
          } catch (error4) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error4);
          }
        }
        function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance4) {
          try {
            instance4.componentDidMount();
          } catch (error4) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error4);
          }
        }
        function safelyAttachRef(current2, nearestMountedAncestor) {
          try {
            commitAttachRef(current2);
          } catch (error4) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error4);
          }
        }
        function safelyDetachRef(current2, nearestMountedAncestor) {
          var ref = current2.ref;
          if (ref !== null) {
            if (typeof ref === "function") {
              var retVal;
              try {
                if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    retVal = ref(null);
                  } finally {
                    recordLayoutEffectDuration(current2);
                  }
                } else {
                  retVal = ref(null);
                }
              } catch (error4) {
                captureCommitPhaseError(current2, nearestMountedAncestor, error4);
              }
              {
                if (typeof retVal === "function") {
                  error3("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
                }
              }
            } else {
              ref.current = null;
            }
          }
        }
        function safelyCallDestroy(current2, nearestMountedAncestor, destroy2) {
          try {
            destroy2();
          } catch (error4) {
            captureCommitPhaseError(current2, nearestMountedAncestor, error4);
          }
        }
        var focusedInstanceHandle = null;
        var shouldFireAfterActiveInstanceBlur = false;
        function commitBeforeMutationEffects(root2, firstChild) {
          focusedInstanceHandle = prepareForCommit(root2.containerInfo);
          nextEffect = firstChild;
          commitBeforeMutationEffects_begin();
          var shouldFire = shouldFireAfterActiveInstanceBlur;
          shouldFireAfterActiveInstanceBlur = false;
          focusedInstanceHandle = null;
          return shouldFire;
        }
        function commitBeforeMutationEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitBeforeMutationEffects_complete();
            }
          }
        }
        function commitBeforeMutationEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              commitBeforeMutationEffectsOnFiber(fiber);
            } catch (error4) {
              captureCommitPhaseError(fiber, fiber.return, error4);
            }
            resetCurrentFiber();
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitBeforeMutationEffectsOnFiber(finishedWork) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          if ((flags & Snapshot) !== NoFlags) {
            setCurrentFiber(finishedWork);
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                break;
              }
              case ClassComponent: {
                if (current2 !== null) {
                  var prevProps = current2.memoizedProps;
                  var prevState = current2.memoizedState;
                  var instance4 = finishedWork.stateNode;
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance4.props !== finishedWork.memoizedProps) {
                        error3("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance4.state !== finishedWork.memoizedState) {
                        error3("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  var snapshot = instance4.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                  {
                    var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                    if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                      didWarnSet.add(finishedWork.type);
                      error3("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                    }
                  }
                  instance4.Ec = snapshot;
                }
                break;
              }
              case HostRoot: {
                {
                  var root2 = finishedWork.stateNode;
                  clearContainer(root2.containerInfo);
                }
                break;
              }
              case HostComponent:
              case HostText:
              case HostPortal:
              case IncompleteClassComponent:
                break;
              default: {
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            resetCurrentFiber();
          }
        }
        function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                var destroy2 = effect.destroy;
                effect.destroy = void 0;
                if (destroy2 !== void 0) {
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStarted(finishedWork);
                    } else if ((flags & Layout2) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStarted(finishedWork);
                    }
                  }
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(true);
                    }
                  }
                  safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy2);
                  {
                    if ((flags & Insertion) !== NoFlags$1) {
                      setIsRunningInsertionEffect(false);
                    }
                  }
                  {
                    if ((flags & Passive$1) !== NoFlags$1) {
                      markComponentPassiveEffectUnmountStopped();
                    } else if ((flags & Layout2) !== NoFlags$1) {
                      markComponentLayoutEffectUnmountStopped();
                    }
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitHookEffectListMount(flags, finishedWork) {
          var updateQueue = finishedWork.updateQueue;
          var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              if ((effect.tag & flags) === flags) {
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStarted(finishedWork);
                  } else if ((flags & Layout2) !== NoFlags$1) {
                    markComponentLayoutEffectMountStarted(finishedWork);
                  }
                }
                var create = effect.create;
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(true);
                  }
                }
                effect.destroy = create();
                {
                  if ((flags & Insertion) !== NoFlags$1) {
                    setIsRunningInsertionEffect(false);
                  }
                }
                {
                  if ((flags & Passive$1) !== NoFlags$1) {
                    markComponentPassiveEffectMountStopped();
                  } else if ((flags & Layout2) !== NoFlags$1) {
                    markComponentLayoutEffectMountStopped();
                  }
                }
                {
                  var destroy2 = effect.destroy;
                  if (destroy2 !== void 0 && typeof destroy2 !== "function") {
                    var hookName = void 0;
                    if ((effect.tag & Layout2) !== NoFlags) {
                      hookName = "useLayoutEffect";
                    } else if ((effect.tag & Insertion) !== NoFlags) {
                      hookName = "useInsertionEffect";
                    } else {
                      hookName = "useEffect";
                    }
                    var addendum = void 0;
                    if (destroy2 === null) {
                      addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                    } else if (typeof destroy2.then === "function") {
                      addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                    } else {
                      addendum = " You returned: " + destroy2;
                    }
                    error3("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                  }
                }
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        function commitPassiveEffectDurations(finishedRoot, finishedWork) {
          {
            if ((finishedWork.flags & Update) !== NoFlags) {
              switch (finishedWork.tag) {
                case Profiler: {
                  var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                  var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit;
                  var commitTime2 = getCommitTime();
                  var phase = finishedWork.alternate === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onPostCommit === "function") {
                    onPostCommit(id, phase, passiveEffectDuration, commitTime2);
                  }
                  var parentFiber = finishedWork.return;
                  outer:
                    while (parentFiber !== null) {
                      switch (parentFiber.tag) {
                        case HostRoot:
                          var root2 = parentFiber.stateNode;
                          root2.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                        case Profiler:
                          var parentStateNode = parentFiber.stateNode;
                          parentStateNode.passiveEffectDuration += passiveEffectDuration;
                          break outer;
                      }
                      parentFiber = parentFiber.return;
                    }
                  break;
                }
              }
            }
          }
        }
        function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
          if ((finishedWork.flags & LayoutMask) !== NoFlags) {
            switch (finishedWork.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                if (!offscreenSubtreeWasHidden) {
                  if (finishedWork.mode & ProfileMode) {
                    try {
                      startLayoutEffectTimer();
                      commitHookEffectListMount(Layout2 | HasEffect, finishedWork);
                    } finally {
                      recordLayoutEffectDuration(finishedWork);
                    }
                  } else {
                    commitHookEffectListMount(Layout2 | HasEffect, finishedWork);
                  }
                }
                break;
              }
              case ClassComponent: {
                var instance4 = finishedWork.stateNode;
                if (finishedWork.flags & Update) {
                  if (!offscreenSubtreeWasHidden) {
                    if (current2 === null) {
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance4.props !== finishedWork.memoizedProps) {
                            error3("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance4.state !== finishedWork.memoizedState) {
                            error3("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance4.componentDidMount();
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance4.componentDidMount();
                      }
                    } else {
                      var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                      var prevState = current2.memoizedState;
                      {
                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                          if (instance4.props !== finishedWork.memoizedProps) {
                            error3("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                          if (instance4.state !== finishedWork.memoizedState) {
                            error3("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                          }
                        }
                      }
                      if (finishedWork.mode & ProfileMode) {
                        try {
                          startLayoutEffectTimer();
                          instance4.componentDidUpdate(prevProps, prevState, instance4.Ec);
                        } finally {
                          recordLayoutEffectDuration(finishedWork);
                        }
                      } else {
                        instance4.componentDidUpdate(prevProps, prevState, instance4.Ec);
                      }
                    }
                  }
                }
                var updateQueue = finishedWork.updateQueue;
                if (updateQueue !== null) {
                  {
                    if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                      if (instance4.props !== finishedWork.memoizedProps) {
                        error3("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                      if (instance4.state !== finishedWork.memoizedState) {
                        error3("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                      }
                    }
                  }
                  commitUpdateQueue(finishedWork, updateQueue, instance4);
                }
                break;
              }
              case HostRoot: {
                var _updateQueue = finishedWork.updateQueue;
                if (_updateQueue !== null) {
                  var _instance = null;
                  if (finishedWork.child !== null) {
                    switch (finishedWork.child.tag) {
                      case HostComponent:
                        _instance = getPublicInstance(finishedWork.child.stateNode);
                        break;
                      case ClassComponent:
                        _instance = finishedWork.child.stateNode;
                        break;
                    }
                  }
                  commitUpdateQueue(finishedWork, _updateQueue, _instance);
                }
                break;
              }
              case HostComponent: {
                var _instance2 = finishedWork.stateNode;
                if (current2 === null && finishedWork.flags & Update) {
                  var type = finishedWork.type;
                  var props = finishedWork.memoizedProps;
                  commitMount(_instance2, type, props);
                }
                break;
              }
              case HostText: {
                break;
              }
              case HostPortal: {
                break;
              }
              case Profiler: {
                {
                  var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                  var effectDuration = finishedWork.stateNode.effectDuration;
                  var commitTime2 = getCommitTime();
                  var phase = current2 === null ? "mount" : "update";
                  {
                    if (isCurrentUpdateNested()) {
                      phase = "nested-update";
                    }
                  }
                  if (typeof onRender === "function") {
                    onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                  }
                  {
                    if (typeof onCommit === "function") {
                      onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2);
                    }
                    enqueuePendingPassiveProfilerEffect(finishedWork);
                    var parentFiber = finishedWork.return;
                    outer:
                      while (parentFiber !== null) {
                        switch (parentFiber.tag) {
                          case HostRoot:
                            var root2 = parentFiber.stateNode;
                            root2.effectDuration += effectDuration;
                            break outer;
                          case Profiler:
                            var parentStateNode = parentFiber.stateNode;
                            parentStateNode.effectDuration += effectDuration;
                            break outer;
                        }
                        parentFiber = parentFiber.return;
                      }
                  }
                }
                break;
              }
              case SuspenseComponent: {
                commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                break;
              }
              case SuspenseListComponent:
              case IncompleteClassComponent:
              case ScopeComponent:
              case OffscreenComponent:
              case LegacyHiddenComponent:
              case TracingMarkerComponent: {
                break;
              }
              default:
                throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
          if (!offscreenSubtreeWasHidden) {
            {
              if (finishedWork.flags & Ref) {
                commitAttachRef(finishedWork);
              }
            }
          }
        }
        function reappearLayoutEffectsOnFiber(node14) {
          switch (node14.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (node14.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  safelyCallCommitHookLayoutEffectListMount(node14, node14.return);
                } finally {
                  recordLayoutEffectDuration(node14);
                }
              } else {
                safelyCallCommitHookLayoutEffectListMount(node14, node14.return);
              }
              break;
            }
            case ClassComponent: {
              var instance4 = node14.stateNode;
              if (typeof instance4.componentDidMount === "function") {
                safelyCallComponentDidMount(node14, node14.return, instance4);
              }
              safelyAttachRef(node14, node14.return);
              break;
            }
            case HostComponent: {
              safelyAttachRef(node14, node14.return);
              break;
            }
          }
        }
        function hideOrUnhideAllChildren(finishedWork, isHidden) {
          var hostSubtreeRoot = null;
          {
            var node14 = finishedWork;
            while (true) {
              if (node14.tag === HostComponent) {
                if (hostSubtreeRoot === null) {
                  hostSubtreeRoot = node14;
                  try {
                    var instance4 = node14.stateNode;
                    if (isHidden) {
                      hideInstance(instance4);
                    } else {
                      unhideInstance(node14.stateNode, node14.memoizedProps);
                    }
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                }
              } else if (node14.tag === HostText) {
                if (hostSubtreeRoot === null) {
                  try {
                    var _instance3 = node14.stateNode;
                    if (isHidden) {
                      hideTextInstance(_instance3);
                    } else {
                      unhideTextInstance(_instance3, node14.memoizedProps);
                    }
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                }
              } else if ((node14.tag === OffscreenComponent || node14.tag === LegacyHiddenComponent) && node14.memoizedState !== null && node14 !== finishedWork)
                ;
              else if (node14.child !== null) {
                node14.child.return = node14;
                node14 = node14.child;
                continue;
              }
              if (node14 === finishedWork) {
                return;
              }
              while (node14.sibling === null) {
                if (node14.return === null || node14.return === finishedWork) {
                  return;
                }
                if (hostSubtreeRoot === node14) {
                  hostSubtreeRoot = null;
                }
                node14 = node14.return;
              }
              if (hostSubtreeRoot === node14) {
                hostSubtreeRoot = null;
              }
              node14.sibling.return = node14.return;
              node14 = node14.sibling;
            }
          }
        }
        function commitAttachRef(finishedWork) {
          var ref = finishedWork.ref;
          if (ref !== null) {
            var instance4 = finishedWork.stateNode;
            var instanceToUse;
            switch (finishedWork.tag) {
              case HostComponent:
                instanceToUse = getPublicInstance(instance4);
                break;
              default:
                instanceToUse = instance4;
            }
            if (typeof ref === "function") {
              var retVal;
              if (finishedWork.mode & ProfileMode) {
                try {
                  startLayoutEffectTimer();
                  retVal = ref(instanceToUse);
                } finally {
                  recordLayoutEffectDuration(finishedWork);
                }
              } else {
                retVal = ref(instanceToUse);
              }
              {
                if (typeof retVal === "function") {
                  error3("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
                }
              }
            } else {
              {
                if (!ref.hasOwnProperty("current")) {
                  error3("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                }
              }
              ref.current = instanceToUse;
            }
          }
        }
        function detachFiberMutation(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            alternate.return = null;
          }
          fiber.return = null;
        }
        function detachFiberAfterEffects(fiber) {
          var alternate = fiber.alternate;
          if (alternate !== null) {
            fiber.alternate = null;
            detachFiberAfterEffects(alternate);
          }
          {
            fiber.child = null;
            fiber.deletions = null;
            fiber.sibling = null;
            if (fiber.tag === HostComponent) {
              var hostInstance = fiber.stateNode;
              if (hostInstance !== null) {
                detachDeletedInstance(hostInstance);
              }
            }
            fiber.stateNode = null;
            {
              fiber.da = null;
            }
            {
              fiber.return = null;
              fiber.dependencies = null;
              fiber.memoizedProps = null;
              fiber.memoizedState = null;
              fiber.pendingProps = null;
              fiber.stateNode = null;
              fiber.updateQueue = null;
            }
          }
        }
        function getHostParentFiber(fiber) {
          var parent = fiber.return;
          while (parent !== null) {
            if (isHostParent(parent)) {
              return parent;
            }
            parent = parent.return;
          }
          throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
        function isHostParent(fiber) {
          return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
        }
        function getHostSibling(fiber) {
          var node14 = fiber;
          siblings:
            while (true) {
              while (node14.sibling === null) {
                if (node14.return === null || isHostParent(node14.return)) {
                  return null;
                }
                node14 = node14.return;
              }
              node14.sibling.return = node14.return;
              node14 = node14.sibling;
              while (node14.tag !== HostComponent && node14.tag !== HostText && node14.tag !== DehydratedFragment) {
                if (node14.flags & Placement) {
                  continue siblings;
                }
                if (node14.child === null || node14.tag === HostPortal) {
                  continue siblings;
                } else {
                  node14.child.return = node14;
                  node14 = node14.child;
                }
              }
              if (!(node14.flags & Placement)) {
                return node14.stateNode;
              }
            }
        }
        function commitPlacement(finishedWork) {
          var parentFiber = getHostParentFiber(finishedWork);
          switch (parentFiber.tag) {
            case HostComponent: {
              var parent = parentFiber.stateNode;
              if (parentFiber.flags & ContentReset) {
                resetTextContent(parent);
                parentFiber.flags &= ~ContentReset;
              }
              var before = getHostSibling(finishedWork);
              insertOrAppendPlacementNode(finishedWork, before, parent);
              break;
            }
            case HostRoot:
            case HostPortal: {
              var _parent = parentFiber.stateNode.containerInfo;
              var _before = getHostSibling(finishedWork);
              insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
              break;
            }
            default:
              throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
        function insertOrAppendPlacementNodeIntoContainer(node14, before, parent) {
          var tag = node14.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node14.stateNode;
            if (before) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              appendChildToContainer(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node14.child;
            if (child !== null) {
              insertOrAppendPlacementNodeIntoContainer(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        function insertOrAppendPlacementNode(node14, before, parent) {
          var tag = node14.tag;
          var isHost = tag === HostComponent || tag === HostText;
          if (isHost) {
            var stateNode = node14.stateNode;
            if (before) {
              insertBefore(parent, stateNode, before);
            } else {
              appendChild(parent, stateNode);
            }
          } else if (tag === HostPortal)
            ;
          else {
            var child = node14.child;
            if (child !== null) {
              insertOrAppendPlacementNode(child, before, parent);
              var sibling = child.sibling;
              while (sibling !== null) {
                insertOrAppendPlacementNode(sibling, before, parent);
                sibling = sibling.sibling;
              }
            }
          }
        }
        var hostParent = null;
        var hostParentIsContainer = false;
        function commitDeletionEffects(root2, returnFiber, deletedFiber) {
          {
            var parent = returnFiber;
            findParent:
              while (parent !== null) {
                switch (parent.tag) {
                  case HostComponent: {
                    hostParent = parent.stateNode;
                    hostParentIsContainer = false;
                    break findParent;
                  }
                  case HostRoot: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                  case HostPortal: {
                    hostParent = parent.stateNode.containerInfo;
                    hostParentIsContainer = true;
                    break findParent;
                  }
                }
                parent = parent.return;
              }
            if (hostParent === null) {
              throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
            }
            commitDeletionEffectsOnFiber(root2, returnFiber, deletedFiber);
            hostParent = null;
            hostParentIsContainer = false;
          }
          detachFiberMutation(deletedFiber);
        }
        function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
          var child = parent.child;
          while (child !== null) {
            commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
            child = child.sibling;
          }
        }
        function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
          onCommitUnmount(deletedFiber);
          switch (deletedFiber.tag) {
            case HostComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
              }
            }
            case HostText: {
              {
                var prevHostParent = hostParent;
                var prevHostParentIsContainer = hostParentIsContainer;
                hostParent = null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = prevHostParent;
                hostParentIsContainer = prevHostParentIsContainer;
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    removeChildFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    removeChild(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case DehydratedFragment: {
              {
                if (hostParent !== null) {
                  if (hostParentIsContainer) {
                    clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                  } else {
                    clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                  }
                }
              }
              return;
            }
            case HostPortal: {
              {
                var _prevHostParent = hostParent;
                var _prevHostParentIsContainer = hostParentIsContainer;
                hostParent = deletedFiber.stateNode.containerInfo;
                hostParentIsContainer = true;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                hostParent = _prevHostParent;
                hostParentIsContainer = _prevHostParentIsContainer;
              }
              return;
            }
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              if (!offscreenSubtreeWasHidden) {
                var updateQueue = deletedFiber.updateQueue;
                if (updateQueue !== null) {
                  var lastEffect = updateQueue.lastEffect;
                  if (lastEffect !== null) {
                    var firstEffect = lastEffect.next;
                    var effect = firstEffect;
                    do {
                      var _effect = effect, destroy2 = _effect.destroy, tag = _effect.tag;
                      if (destroy2 !== void 0) {
                        if ((tag & Insertion) !== NoFlags$1) {
                          safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy2);
                        } else if ((tag & Layout2) !== NoFlags$1) {
                          {
                            markComponentLayoutEffectUnmountStarted(deletedFiber);
                          }
                          if (deletedFiber.mode & ProfileMode) {
                            startLayoutEffectTimer();
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy2);
                            recordLayoutEffectDuration(deletedFiber);
                          } else {
                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy2);
                          }
                          {
                            markComponentLayoutEffectUnmountStopped();
                          }
                        }
                      }
                      effect = effect.next;
                    } while (effect !== firstEffect);
                  }
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ClassComponent: {
              if (!offscreenSubtreeWasHidden) {
                safelyDetachRef(deletedFiber, nearestMountedAncestor);
                var instance4 = deletedFiber.stateNode;
                if (typeof instance4.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance4);
                }
              }
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case ScopeComponent: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
            case OffscreenComponent: {
              if (
                // TODO: Remove this dead flag
                deletedFiber.mode & ConcurrentMode
              ) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              }
              break;
            }
            default: {
              recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
              return;
            }
          }
        }
        function commitSuspenseCallback(finishedWork) {
          var newState = finishedWork.memoizedState;
        }
        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
          var newState = finishedWork.memoizedState;
          if (newState === null) {
            var current2 = finishedWork.alternate;
            if (current2 !== null) {
              var prevState = current2.memoizedState;
              if (prevState !== null) {
                var suspenseInstance = prevState.dehydrated;
                if (suspenseInstance !== null) {
                  commitHydratedSuspenseInstance(suspenseInstance);
                }
              }
            }
          }
        }
        function attachSuspenseRetryListeners(finishedWork) {
          var wakeables = finishedWork.updateQueue;
          if (wakeables !== null) {
            finishedWork.updateQueue = null;
            var retryCache = finishedWork.stateNode;
            if (retryCache === null) {
              retryCache = finishedWork.stateNode = new PossiblyWeakSet();
            }
            wakeables.forEach(function(wakeable) {
              var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
              if (!retryCache.has(wakeable)) {
                retryCache.add(wakeable);
                {
                  if (isDevToolsPresent) {
                    if (inProgressLanes !== null && inProgressRoot !== null) {
                      restorePendingUpdaters(inProgressRoot, inProgressLanes);
                    } else {
                      throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                    }
                  }
                }
                wakeable.then(retry, retry);
              }
            });
          }
        }
        function commitMutationEffects(root2, finishedWork, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root2;
          setCurrentFiber(finishedWork);
          commitMutationEffectsOnFiber(finishedWork, root2);
          setCurrentFiber(finishedWork);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function recursivelyTraverseMutationEffects(root2, parentFiber, lanes) {
          var deletions = parentFiber.deletions;
          if (deletions !== null) {
            for (var i = 0; i < deletions.length; i++) {
              var childToDelete = deletions[i];
              try {
                commitDeletionEffects(root2, parentFiber, childToDelete);
              } catch (error4) {
                captureCommitPhaseError(childToDelete, parentFiber, error4);
              }
            }
          }
          var prevDebugFiber = getCurrentFiber();
          if (parentFiber.subtreeFlags & MutationMask) {
            var child = parentFiber.child;
            while (child !== null) {
              setCurrentFiber(child);
              commitMutationEffectsOnFiber(child, root2);
              child = child.sibling;
            }
          }
          setCurrentFiber(prevDebugFiber);
        }
        function commitMutationEffectsOnFiber(finishedWork, root2, lanes) {
          var current2 = finishedWork.alternate;
          var flags = finishedWork.flags;
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case MemoComponent:
            case SimpleMemoComponent: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                try {
                  commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                  commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                } catch (error4) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                }
                if (finishedWork.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout2 | HasEffect, finishedWork, finishedWork.return);
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                  recordLayoutEffectDuration(finishedWork);
                } else {
                  try {
                    commitHookEffectListUnmount(Layout2 | HasEffect, finishedWork, finishedWork.return);
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                }
              }
              return;
            }
            case ClassComponent: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              return;
            }
            case HostComponent: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Ref) {
                if (current2 !== null) {
                  safelyDetachRef(current2, current2.return);
                }
              }
              {
                if (finishedWork.flags & ContentReset) {
                  var instance4 = finishedWork.stateNode;
                  try {
                    resetTextContent(instance4);
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                }
                if (flags & Update) {
                  var _instance4 = finishedWork.stateNode;
                  if (_instance4 != null) {
                    var newProps = finishedWork.memoizedProps;
                    var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                    var type = finishedWork.type;
                    var updatePayload = finishedWork.updateQueue;
                    finishedWork.updateQueue = null;
                    if (updatePayload !== null) {
                      try {
                        commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                      } catch (error4) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostText: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (finishedWork.stateNode === null) {
                    throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                  }
                  var textInstance = finishedWork.stateNode;
                  var newText = finishedWork.memoizedProps;
                  var oldText = current2 !== null ? current2.memoizedProps : newText;
                  try {
                    commitTextUpdate(textInstance, oldText, newText);
                  } catch (error4) {
                    captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                  }
                }
              }
              return;
            }
            case HostRoot: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                {
                  if (current2 !== null) {
                    var prevRootState = current2.memoizedState;
                    if (prevRootState.isDehydrated) {
                      try {
                        commitHydratedContainer(root2.containerInfo);
                      } catch (error4) {
                        captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                      }
                    }
                  }
                }
              }
              return;
            }
            case HostPortal: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
            case SuspenseComponent: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              var offscreenFiber = finishedWork.child;
              if (offscreenFiber.flags & Visibility) {
                var offscreenInstance = offscreenFiber.stateNode;
                var newState = offscreenFiber.memoizedState;
                var isHidden = newState !== null;
                offscreenInstance.isHidden = isHidden;
                if (isHidden) {
                  var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                  if (!wasHidden) {
                    markCommitTimeOfFallback();
                  }
                }
              }
              if (flags & Update) {
                try {
                  commitSuspenseCallback(finishedWork);
                } catch (error4) {
                  captureCommitPhaseError(finishedWork, finishedWork.return, error4);
                }
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case OffscreenComponent: {
              var _wasHidden = current2 !== null && current2.memoizedState !== null;
              if (
                // TODO: Remove this dead flag
                finishedWork.mode & ConcurrentMode
              ) {
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                recursivelyTraverseMutationEffects(root2, finishedWork);
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
              } else {
                recursivelyTraverseMutationEffects(root2, finishedWork);
              }
              commitReconciliationEffects(finishedWork);
              if (flags & Visibility) {
                var _offscreenInstance = finishedWork.stateNode;
                var _newState = finishedWork.memoizedState;
                var _isHidden = _newState !== null;
                var offscreenBoundary = finishedWork;
                _offscreenInstance.isHidden = _isHidden;
                {
                  if (_isHidden) {
                    if (!_wasHidden) {
                      if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                        nextEffect = offscreenBoundary;
                        var offscreenChild = offscreenBoundary.child;
                        while (offscreenChild !== null) {
                          nextEffect = offscreenChild;
                          disappearLayoutEffects_begin(offscreenChild);
                          offscreenChild = offscreenChild.sibling;
                        }
                      }
                    }
                  }
                }
                {
                  hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                }
              }
              return;
            }
            case SuspenseListComponent: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              if (flags & Update) {
                attachSuspenseRetryListeners(finishedWork);
              }
              return;
            }
            case ScopeComponent: {
              return;
            }
            default: {
              recursivelyTraverseMutationEffects(root2, finishedWork);
              commitReconciliationEffects(finishedWork);
              return;
            }
          }
        }
        function commitReconciliationEffects(finishedWork) {
          var flags = finishedWork.flags;
          if (flags & Placement) {
            try {
              commitPlacement(finishedWork);
            } catch (error4) {
              captureCommitPhaseError(finishedWork, finishedWork.return, error4);
            }
            finishedWork.flags &= ~Placement;
          }
          if (flags & Hydrating) {
            finishedWork.flags &= ~Hydrating;
          }
        }
        function commitLayoutEffects(finishedWork, root2, committedLanes) {
          inProgressLanes = committedLanes;
          inProgressRoot = root2;
          nextEffect = finishedWork;
          commitLayoutEffects_begin(finishedWork, root2, committedLanes);
          inProgressLanes = null;
          inProgressRoot = null;
        }
        function commitLayoutEffects_begin(subtreeRoot, root2, committedLanes) {
          var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent && isModernRoot) {
              var isHidden = fiber.memoizedState !== null;
              var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
              if (newOffscreenSubtreeIsHidden) {
                commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                continue;
              } else {
                var current2 = fiber.alternate;
                var wasHidden = current2 !== null && current2.memoizedState !== null;
                var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                  nextEffect = fiber;
                  reappearLayoutEffects_begin(fiber);
                }
                var child = firstChild;
                while (child !== null) {
                  nextEffect = child;
                  commitLayoutEffects_begin(
                    child,
                    // New root; bubble back up to here and stop.
                    root2,
                    committedLanes
                  );
                  child = child.sibling;
                }
                nextEffect = fiber;
                offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                continue;
              }
            }
            if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
            }
          }
        }
        function commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & LayoutMask) !== NoFlags) {
              var current2 = fiber.alternate;
              setCurrentFiber(fiber);
              try {
                commitLayoutEffectOnFiber(root2, current2, fiber, committedLanes);
              } catch (error4) {
                captureCommitPhaseError(fiber, fiber.return, error4);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function disappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case MemoComponent:
              case SimpleMemoComponent: {
                if (fiber.mode & ProfileMode) {
                  try {
                    startLayoutEffectTimer();
                    commitHookEffectListUnmount(Layout2, fiber, fiber.return);
                  } finally {
                    recordLayoutEffectDuration(fiber);
                  }
                } else {
                  commitHookEffectListUnmount(Layout2, fiber, fiber.return);
                }
                break;
              }
              case ClassComponent: {
                safelyDetachRef(fiber, fiber.return);
                var instance4 = fiber.stateNode;
                if (typeof instance4.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance4);
                }
                break;
              }
              case HostComponent: {
                safelyDetachRef(fiber, fiber.return);
                break;
              }
              case OffscreenComponent: {
                var isHidden = fiber.memoizedState !== null;
                if (isHidden) {
                  disappearLayoutEffects_complete(subtreeRoot);
                  continue;
                }
                break;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              disappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function disappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function reappearLayoutEffects_begin(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if (fiber.tag === OffscreenComponent) {
              var isHidden = fiber.memoizedState !== null;
              if (isHidden) {
                reappearLayoutEffects_complete(subtreeRoot);
                continue;
              }
            }
            if (firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              reappearLayoutEffects_complete(subtreeRoot);
            }
          }
        }
        function reappearLayoutEffects_complete(subtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            try {
              reappearLayoutEffectsOnFiber(fiber);
            } catch (error4) {
              captureCommitPhaseError(fiber, fiber.return, error4);
            }
            resetCurrentFiber();
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountEffects(root2, finishedWork, committedLanes, committedTransitions) {
          nextEffect = finishedWork;
          commitPassiveMountEffects_begin(finishedWork, root2, committedLanes, committedTransitions);
        }
        function commitPassiveMountEffects_begin(subtreeRoot, root2, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var firstChild = fiber.child;
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
              firstChild.return = fiber;
              nextEffect = firstChild;
            } else {
              commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions);
            }
          }
        }
        function commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              try {
                commitPassiveMountOnFiber(root2, fiber, committedLanes, committedTransitions);
              } catch (error4) {
                captureCommitPhaseError(fiber, fiber.return, error4);
              }
              resetCurrentFiber();
            }
            if (fiber === subtreeRoot) {
              nextEffect = null;
              return;
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                } finally {
                  recordPassiveEffectDuration(finishedWork);
                }
              } else {
                commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffects(firstChild) {
          nextEffect = firstChild;
          commitPassiveUnmountEffects_begin();
        }
        function commitPassiveUnmountEffects_begin() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var child = fiber.child;
            if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
              var deletions = fiber.deletions;
              if (deletions !== null) {
                for (var i = 0; i < deletions.length; i++) {
                  var fiberToDelete = deletions[i];
                  nextEffect = fiberToDelete;
                  commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                }
                {
                  var previousFiber = fiber.alternate;
                  if (previousFiber !== null) {
                    var detachedChild = previousFiber.child;
                    if (detachedChild !== null) {
                      previousFiber.child = null;
                      do {
                        var detachedSibling = detachedChild.sibling;
                        detachedChild.sibling = null;
                        detachedChild = detachedSibling;
                      } while (detachedChild !== null);
                    }
                  }
                }
                nextEffect = fiber;
              }
            }
            if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffects_complete();
            }
          }
        }
        function commitPassiveUnmountEffects_complete() {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            if ((fiber.flags & Passive) !== NoFlags) {
              setCurrentFiber(fiber);
              commitPassiveUnmountOnFiber(fiber);
              resetCurrentFiber();
            }
            var sibling = fiber.sibling;
            if (sibling !== null) {
              sibling.return = fiber.return;
              nextEffect = sibling;
              return;
            }
            nextEffect = fiber.return;
          }
        }
        function commitPassiveUnmountOnFiber(finishedWork) {
          switch (finishedWork.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (finishedWork.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                recordPassiveEffectDuration(finishedWork);
              } else {
                commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
              }
              break;
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            setCurrentFiber(fiber);
            commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
            resetCurrentFiber();
            var child = fiber.child;
            if (child !== null) {
              child.return = fiber;
              nextEffect = child;
            } else {
              commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
            }
          }
        }
        function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
          while (nextEffect !== null) {
            var fiber = nextEffect;
            var sibling = fiber.sibling;
            var returnFiber = fiber.return;
            {
              detachFiberAfterEffects(fiber);
              if (fiber === deletedSubtreeRoot) {
                nextEffect = null;
                return;
              }
            }
            if (sibling !== null) {
              sibling.return = returnFiber;
              nextEffect = sibling;
              return;
            }
            nextEffect = returnFiber;
          }
        }
        function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
          switch (current2.tag) {
            case FunctionComponent:
            case ForwardRef:
            case SimpleMemoComponent: {
              if (current2.mode & ProfileMode) {
                startPassiveEffectTimer();
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                recordPassiveEffectDuration(current2);
              } else {
                commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
              }
              break;
            }
          }
        }
        function invokeLayoutEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Layout2 | HasEffect, fiber);
                } catch (error4) {
                  captureCommitPhaseError(fiber, fiber.return, error4);
                }
                break;
              }
              case ClassComponent: {
                var instance4 = fiber.stateNode;
                try {
                  instance4.componentDidMount();
                } catch (error4) {
                  captureCommitPhaseError(fiber, fiber.return, error4);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectMountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                } catch (error4) {
                  captureCommitPhaseError(fiber, fiber.return, error4);
                }
                break;
              }
            }
          }
        }
        function invokeLayoutEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Layout2 | HasEffect, fiber, fiber.return);
                } catch (error4) {
                  captureCommitPhaseError(fiber, fiber.return, error4);
                }
                break;
              }
              case ClassComponent: {
                var instance4 = fiber.stateNode;
                if (typeof instance4.componentWillUnmount === "function") {
                  safelyCallComponentWillUnmount(fiber, fiber.return, instance4);
                }
                break;
              }
            }
          }
        }
        function invokePassiveEffectUnmountInDEV(fiber) {
          {
            switch (fiber.tag) {
              case FunctionComponent:
              case ForwardRef:
              case SimpleMemoComponent: {
                try {
                  commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                } catch (error4) {
                  captureCommitPhaseError(fiber, fiber.return, error4);
                }
              }
            }
          }
        }
        var COMPONENT_TYPE = 0;
        var HAS_PSEUDO_CLASS_TYPE = 1;
        var ROLE_TYPE = 2;
        var TEST_NAME_TYPE = 3;
        var TEXT_TYPE = 4;
        if (typeof Symbol === "function" && Symbol.for) {
          var symbolFor = Symbol.for;
          COMPONENT_TYPE = symbolFor("selector.component");
          HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
          ROLE_TYPE = symbolFor("selector.role");
          TEST_NAME_TYPE = symbolFor("selector.test_id");
          TEXT_TYPE = symbolFor("selector.text");
        }
        var commitHooks = [];
        function onCommitRoot$1() {
          {
            commitHooks.forEach(function(commitHook) {
              return commitHook();
            });
          }
        }
        var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
        function isLegacyActEnvironment(fiber) {
          {
            var isReactActEnvironmentGlobal = (
              // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
              typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0
            );
            var jestIsDefined = typeof jest !== "undefined";
            return jestIsDefined && isReactActEnvironmentGlobal !== false;
          }
        }
        function isConcurrentActEnvironment() {
          {
            var isReactActEnvironmentGlobal = (
              // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
              typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0
            );
            if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
              error3("The current testing environment is not configured to support act(...)");
            }
            return isReactActEnvironmentGlobal;
          }
        }
        var ceil = Math.ceil;
        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
        var NoContext = (
          /*             */
          0
        );
        var BatchedContext = (
          /*               */
          1
        );
        var RenderContext = (
          /*                */
          2
        );
        var CommitContext = (
          /*                */
          4
        );
        var RootInProgress = 0;
        var RootFatalErrored = 1;
        var RootErrored = 2;
        var RootSuspended = 3;
        var RootSuspendedWithDelay = 4;
        var RootCompleted = 5;
        var RootDidNotComplete = 6;
        var executionContext = NoContext;
        var workInProgressRoot = null;
        var workInProgress = null;
        var workInProgressRootRenderLanes = NoLanes;
        var subtreeRenderLanes = NoLanes;
        var subtreeRenderLanesCursor = createCursor(NoLanes);
        var workInProgressRootExitStatus = RootInProgress;
        var workInProgressRootFatalError = null;
        var workInProgressRootIncludedLanes = NoLanes;
        var workInProgressRootSkippedLanes = NoLanes;
        var workInProgressRootInterleavedUpdatedLanes = NoLanes;
        var workInProgressRootPingedLanes = NoLanes;
        var workInProgressRootConcurrentErrors = null;
        var workInProgressRootRecoverableErrors = null;
        var globalMostRecentFallbackTime = 0;
        var FALLBACK_THROTTLE_MS = 500;
        var workInProgressRootRenderTargetTime = Infinity;
        var RENDER_TIMEOUT_MS = 500;
        var workInProgressTransitions = null;
        function resetRenderTimer() {
          workInProgressRootRenderTargetTime = now3() + RENDER_TIMEOUT_MS;
        }
        function getRenderTargetTime() {
          return workInProgressRootRenderTargetTime;
        }
        var hasUncaughtError = false;
        var firstUncaughtError = null;
        var legacyErrorBoundariesThatAlreadyFailed = null;
        var rootDoesHavePassiveEffects = false;
        var rootWithPendingPassiveEffects = null;
        var pendingPassiveEffectsLanes = NoLanes;
        var pendingPassiveProfilerEffects = [];
        var pendingPassiveTransitions = null;
        var NESTED_UPDATE_LIMIT = 50;
        var nestedUpdateCount = 0;
        var rootWithNestedUpdates = null;
        var isFlushingPassiveEffects = false;
        var didScheduleUpdateDuringPassiveEffects = false;
        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
        var nestedPassiveUpdateCount = 0;
        var rootWithPassiveNestedUpdates = null;
        var currentEventTime = NoTimestamp;
        var currentEventTransitionLane = NoLanes;
        var isRunningInsertionEffect = false;
        function getWorkInProgressRoot() {
          return workInProgressRoot;
        }
        function requestEventTime() {
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            return now3();
          }
          if (currentEventTime !== NoTimestamp) {
            return currentEventTime;
          }
          currentEventTime = now3();
          return currentEventTime;
        }
        function requestUpdateLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
            return pickArbitraryLane(workInProgressRootRenderLanes);
          }
          var isTransition = requestCurrentTransition() !== NoTransition;
          if (isTransition) {
            if (ReactCurrentBatchConfig$3.transition !== null) {
              var transition = ReactCurrentBatchConfig$3.transition;
              if (!transition.sa) {
                transition.sa = /* @__PURE__ */ new Set();
              }
              transition.sa.add(fiber);
            }
            if (currentEventTransitionLane === NoLane) {
              currentEventTransitionLane = claimNextTransitionLane();
            }
            return currentEventTransitionLane;
          }
          var updateLane = getCurrentUpdatePriority();
          if (updateLane !== NoLane) {
            return updateLane;
          }
          var eventLane = getCurrentEventPriority();
          return eventLane;
        }
        function requestRetryLane(fiber) {
          var mode = fiber.mode;
          if ((mode & ConcurrentMode) === NoMode) {
            return SyncLane;
          }
          return claimNextRetryLane();
        }
        function scheduleUpdateOnFiber(root2, fiber, lane, eventTime) {
          checkForNestedUpdates();
          {
            if (isRunningInsertionEffect) {
              error3("useInsertionEffect must not schedule updates.");
            }
          }
          {
            if (isFlushingPassiveEffects) {
              didScheduleUpdateDuringPassiveEffects = true;
            }
          }
          markRootUpdated(root2, lane, eventTime);
          if ((executionContext & RenderContext) !== NoLanes && root2 === workInProgressRoot) {
            warnAboutRenderPhaseUpdatesInDEV(fiber);
          } else {
            {
              if (isDevToolsPresent) {
                addFiberToLanesMap(root2, fiber, lane);
              }
            }
            warnIfUpdatesNotWrappedWithActDEV(fiber);
            if (root2 === workInProgressRoot) {
              if ((executionContext & RenderContext) === NoContext) {
                workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
              }
              if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                markRootSuspended$1(root2, workInProgressRootRenderLanes);
              }
            }
            ensureRootIsScheduled(root2, eventTime);
            if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function scheduleInitialHydrationOnRoot(root2, lane, eventTime) {
          var current2 = root2.current;
          current2.lanes = lane;
          markRootUpdated(root2, lane, eventTime);
          ensureRootIsScheduled(root2, eventTime);
        }
        function isUnsafeClassRenderPhaseUpdate(fiber) {
          return (
            // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
            // decided not to enable it.
            (executionContext & RenderContext) !== NoContext
          );
        }
        function ensureRootIsScheduled(root2, currentTime) {
          var existingCallbackNode = root2.callbackNode;
          markStarvedLanesAsExpired(root2, currentTime);
          var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (nextLanes === NoLanes) {
            if (existingCallbackNode !== null) {
              cancelCallback$1(existingCallbackNode);
            }
            root2.callbackNode = null;
            root2.callbackPriority = NoLane;
            return;
          }
          var newCallbackPriority = getHighestPriorityLane(nextLanes);
          var existingCallbackPriority = root2.callbackPriority;
          if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
          // Scheduler task, rather than an `act` task, cancel it and re-scheduled
          // on the `act` queue.
          !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
            {
              if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
                error3("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
            return;
          }
          if (existingCallbackNode != null) {
            cancelCallback$1(existingCallbackNode);
          }
          var newCallbackNode;
          if (newCallbackPriority === SyncLane) {
            if (root2.tag === LegacyRoot) {
              if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {
                ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
              }
              scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root2));
            } else {
              scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
            }
            {
              if (ReactCurrentActQueue$1.current !== null) {
                ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
              } else {
                scheduleMicrotask(function() {
                  if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                    flushSyncCallbacks();
                  }
                });
              }
            }
            newCallbackNode = null;
          } else {
            var schedulerPriorityLevel;
            switch (lanesToEventPriority(nextLanes)) {
              case DiscreteEventPriority:
                schedulerPriorityLevel = ImmediatePriority;
                break;
              case ContinuousEventPriority:
                schedulerPriorityLevel = UserBlockingPriority;
                break;
              case DefaultEventPriority:
                schedulerPriorityLevel = NormalPriority;
                break;
              case IdleEventPriority:
                schedulerPriorityLevel = IdlePriority;
                break;
              default:
                schedulerPriorityLevel = NormalPriority;
                break;
            }
            newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
          }
          root2.callbackPriority = newCallbackPriority;
          root2.callbackNode = newCallbackNode;
        }
        function performConcurrentWorkOnRoot(root2, didTimeout) {
          {
            resetNestedUpdateFlag();
          }
          currentEventTime = NoTimestamp;
          currentEventTransitionLane = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var originalCallbackNode = root2.callbackNode;
          var didFlushPassiveEffects = flushPassiveEffects();
          if (didFlushPassiveEffects) {
            if (root2.callbackNode !== originalCallbackNode) {
              return null;
            }
          }
          var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
          if (lanes === NoLanes) {
            return null;
          }
          var shouldTimeSlice = !includesBlockingLane(root2, lanes) && !includesExpiredLane(root2, lanes) && !didTimeout;
          var exitStatus = shouldTimeSlice ? renderRootConcurrent(root2, lanes) : renderRootSync(root2, lanes);
          if (exitStatus !== RootInProgress) {
            if (exitStatus === RootErrored) {
              var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
              if (errorRetryLanes !== NoLanes) {
                lanes = errorRetryLanes;
                exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
              }
            }
            if (exitStatus === RootFatalErrored) {
              var fatalError = workInProgressRootFatalError;
              prepareFreshStack(root2, NoLanes);
              markRootSuspended$1(root2, lanes);
              ensureRootIsScheduled(root2, now3());
              throw fatalError;
            }
            if (exitStatus === RootDidNotComplete) {
              markRootSuspended$1(root2, lanes);
            } else {
              var renderWasConcurrent = !includesBlockingLane(root2, lanes);
              var finishedWork = root2.current.alternate;
              if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                exitStatus = renderRootSync(root2, lanes);
                if (exitStatus === RootErrored) {
                  var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                  if (_errorRetryLanes !== NoLanes) {
                    lanes = _errorRetryLanes;
                    exitStatus = recoverFromConcurrentError(root2, _errorRetryLanes);
                  }
                }
                if (exitStatus === RootFatalErrored) {
                  var _fatalError = workInProgressRootFatalError;
                  prepareFreshStack(root2, NoLanes);
                  markRootSuspended$1(root2, lanes);
                  ensureRootIsScheduled(root2, now3());
                  throw _fatalError;
                }
              }
              root2.finishedWork = finishedWork;
              root2.finishedLanes = lanes;
              finishConcurrentRender(root2, exitStatus, lanes);
            }
          }
          ensureRootIsScheduled(root2, now3());
          if (root2.callbackNode === originalCallbackNode) {
            return performConcurrentWorkOnRoot.bind(null, root2);
          }
          return null;
        }
        function recoverFromConcurrentError(root2, errorRetryLanes) {
          var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
          if (isRootDehydrated(root2)) {
            var rootWorkInProgress = prepareFreshStack(root2, errorRetryLanes);
            rootWorkInProgress.flags |= ForceClientRender;
            {
              errorHydratingContainer(root2.containerInfo);
            }
          }
          var exitStatus = renderRootSync(root2, errorRetryLanes);
          if (exitStatus !== RootErrored) {
            var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
            workInProgressRootRecoverableErrors = errorsFromFirstAttempt;
            if (errorsFromSecondAttempt !== null) {
              queueRecoverableErrors(errorsFromSecondAttempt);
            }
          }
          return exitStatus;
        }
        function queueRecoverableErrors(errors3) {
          if (workInProgressRootRecoverableErrors === null) {
            workInProgressRootRecoverableErrors = errors3;
          } else {
            workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors3);
          }
        }
        function finishConcurrentRender(root2, exitStatus, lanes) {
          switch (exitStatus) {
            case RootInProgress:
            case RootFatalErrored: {
              throw new Error("Root did not complete. This is a bug in React.");
            }
            case RootErrored: {
              commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspended: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
              !shouldForceFlushFallbacksInDEV()) {
                var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now3();
                if (msUntilTimeout > 10) {
                  var nextLanes = getNextLanes(root2, NoLanes);
                  if (nextLanes !== NoLanes) {
                    break;
                  }
                  var suspendedLanes = root2.suspendedLanes;
                  if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                    var eventTime = requestEventTime();
                    markRootPinged(root2, suspendedLanes);
                    break;
                  }
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootSuspendedWithDelay: {
              markRootSuspended$1(root2, lanes);
              if (includesOnlyTransitions(lanes)) {
                break;
              }
              if (!shouldForceFlushFallbacksInDEV()) {
                var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                var eventTimeMs = mostRecentEventTime;
                var timeElapsedMs = now3() - eventTimeMs;
                var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                if (_msUntilTimeout > 10) {
                  root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                  break;
                }
              }
              commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            case RootCompleted: {
              commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
              break;
            }
            default: {
              throw new Error("Unknown root exit status.");
            }
          }
        }
        function isRenderConsistentWithExternalStores(finishedWork) {
          var node14 = finishedWork;
          while (true) {
            if (node14.flags & StoreConsistency) {
              var updateQueue = node14.updateQueue;
              if (updateQueue !== null) {
                var checks = updateQueue.stores;
                if (checks !== null) {
                  for (var i = 0; i < checks.length; i++) {
                    var check = checks[i];
                    var getSnapshot = check.getSnapshot;
                    var renderedValue = check.value;
                    try {
                      if (!objectIs(getSnapshot(), renderedValue)) {
                        return false;
                      }
                    } catch (error4) {
                      return false;
                    }
                  }
                }
              }
            }
            var child = node14.child;
            if (node14.subtreeFlags & StoreConsistency && child !== null) {
              child.return = node14;
              node14 = child;
              continue;
            }
            if (node14 === finishedWork) {
              return true;
            }
            while (node14.sibling === null) {
              if (node14.return === null || node14.return === finishedWork) {
                return true;
              }
              node14 = node14.return;
            }
            node14.sibling.return = node14.return;
            node14 = node14.sibling;
          }
          return true;
        }
        function markRootSuspended$1(root2, suspendedLanes) {
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
          suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
          markRootSuspended(root2, suspendedLanes);
        }
        function performSyncWorkOnRoot(root2) {
          {
            syncNestedUpdateFlag();
          }
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          flushPassiveEffects();
          var lanes = getNextLanes(root2, NoLanes);
          if (!includesSomeLane(lanes, SyncLane)) {
            ensureRootIsScheduled(root2, now3());
            return null;
          }
          var exitStatus = renderRootSync(root2, lanes);
          if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
            var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
            if (errorRetryLanes !== NoLanes) {
              lanes = errorRetryLanes;
              exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
            }
          }
          if (exitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            prepareFreshStack(root2, NoLanes);
            markRootSuspended$1(root2, lanes);
            ensureRootIsScheduled(root2, now3());
            throw fatalError;
          }
          if (exitStatus === RootDidNotComplete) {
            throw new Error("Root did not complete. This is a bug in React.");
          }
          var finishedWork = root2.current.alternate;
          root2.finishedWork = finishedWork;
          root2.finishedLanes = lanes;
          commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
          ensureRootIsScheduled(root2, now3());
          return null;
        }
        function flushRoot(root2, lanes) {
          if (lanes !== NoLanes) {
            markRootEntangled(root2, mergeLanes(lanes, SyncLane));
            ensureRootIsScheduled(root2, now3());
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              resetRenderTimer();
              flushSyncCallbacks();
            }
          }
        }
        function batchedUpdates$1(fn, a) {
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          try {
            return fn(a);
          } finally {
            executionContext = prevExecutionContext;
            if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
            !ReactCurrentActQueue$1.isBatchingLegacy) {
              resetRenderTimer();
              flushSyncCallbacksOnlyInLegacyMode();
            }
          }
        }
        function discreteUpdates(fn, a, b, c, d) {
          var previousPriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            return fn(a, b, c, d);
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            if (executionContext === NoContext) {
              resetRenderTimer();
            }
          }
        }
        function flushSync(fn) {
          if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
            flushPassiveEffects();
          }
          var prevExecutionContext = executionContext;
          executionContext |= BatchedContext;
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          var previousPriority = getCurrentUpdatePriority();
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            if (fn) {
              return fn();
            } else {
              return void 0;
            }
          } finally {
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
            executionContext = prevExecutionContext;
            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
              flushSyncCallbacks();
            }
          }
        }
        function isAlreadyRendering() {
          return (executionContext & (RenderContext | CommitContext)) !== NoContext;
        }
        function pushRenderLanes(fiber, lanes) {
          push4(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
          subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
          workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
        }
        function popRenderLanes(fiber) {
          subtreeRenderLanes = subtreeRenderLanesCursor.current;
          pop2(subtreeRenderLanesCursor, fiber);
        }
        function prepareFreshStack(root2, lanes) {
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          var timeoutHandle = root2.timeoutHandle;
          if (timeoutHandle !== noTimeout) {
            root2.timeoutHandle = noTimeout;
            cancelTimeout(timeoutHandle);
          }
          if (workInProgress !== null) {
            var interruptedWork = workInProgress.return;
            while (interruptedWork !== null) {
              var current2 = interruptedWork.alternate;
              unwindInterruptedWork(current2, interruptedWork);
              interruptedWork = interruptedWork.return;
            }
          }
          workInProgressRoot = root2;
          var rootWorkInProgress = createWorkInProgress(root2.current, null);
          workInProgress = rootWorkInProgress;
          workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
          workInProgressRootExitStatus = RootInProgress;
          workInProgressRootFatalError = null;
          workInProgressRootSkippedLanes = NoLanes;
          workInProgressRootInterleavedUpdatedLanes = NoLanes;
          workInProgressRootPingedLanes = NoLanes;
          workInProgressRootConcurrentErrors = null;
          workInProgressRootRecoverableErrors = null;
          finishQueueingConcurrentUpdates();
          {
            ReactStrictModeWarnings.discardPendingWarnings();
          }
          return rootWorkInProgress;
        }
        function handleError(root2, thrownValue) {
          do {
            var erroredWork = workInProgress;
            try {
              resetContextDependencies();
              resetHooksAfterThrow();
              resetCurrentFiber();
              ReactCurrentOwner$2.current = null;
              if (erroredWork === null || erroredWork.return === null) {
                workInProgressRootExitStatus = RootFatalErrored;
                workInProgressRootFatalError = thrownValue;
                workInProgress = null;
                return;
              }
              if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
              }
              if (enableSchedulingProfiler) {
                markComponentRenderStopped();
                if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                  var wakeable = thrownValue;
                  markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                } else {
                  markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                }
              }
              throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
              completeUnitOfWork(erroredWork);
            } catch (yetAnotherThrownValue) {
              thrownValue = yetAnotherThrownValue;
              if (workInProgress === erroredWork && erroredWork !== null) {
                erroredWork = erroredWork.return;
                workInProgress = erroredWork;
              } else {
                erroredWork = workInProgress;
              }
              continue;
            }
            return;
          } while (true);
        }
        function pushDispatcher() {
          var prevDispatcher = ReactCurrentDispatcher$2.current;
          ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
          if (prevDispatcher === null) {
            return ContextOnlyDispatcher;
          } else {
            return prevDispatcher;
          }
        }
        function popDispatcher(prevDispatcher) {
          ReactCurrentDispatcher$2.current = prevDispatcher;
        }
        function markCommitTimeOfFallback() {
          globalMostRecentFallbackTime = now3();
        }
        function markSkippedUpdateLanes(lane) {
          workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
        }
        function renderDidSuspend() {
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootSuspended;
          }
        }
        function renderDidSuspendDelayIfPossible() {
          if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
            workInProgressRootExitStatus = RootSuspendedWithDelay;
          }
          if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
            markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
          }
        }
        function renderDidError(error4) {
          if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
            workInProgressRootExitStatus = RootErrored;
          }
          if (workInProgressRootConcurrentErrors === null) {
            workInProgressRootConcurrentErrors = [error4];
          } else {
            workInProgressRootConcurrentErrors.push(error4);
          }
        }
        function renderHasNotSuspendedYet() {
          return workInProgressRootExitStatus === RootInProgress;
        }
        function renderRootSync(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root2.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root2, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            prepareFreshStack(root2, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);
          if (workInProgress !== null) {
            throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
          }
          {
            markRenderStopped();
          }
          workInProgressRoot = null;
          workInProgressRootRenderLanes = NoLanes;
          return workInProgressRootExitStatus;
        }
        function workLoopSync() {
          while (workInProgress !== null) {
            performUnitOfWork(workInProgress);
          }
        }
        function renderRootConcurrent(root2, lanes) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher();
          if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
            {
              if (isDevToolsPresent) {
                var memoizedUpdaters = root2.memoizedUpdaters;
                if (memoizedUpdaters.size > 0) {
                  restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                  memoizedUpdaters.clear();
                }
                movePendingFibersToMemoized(root2, lanes);
              }
            }
            workInProgressTransitions = getTransitionsForLanes();
            resetRenderTimer();
            prepareFreshStack(root2, lanes);
          }
          {
            markRenderStarted(lanes);
          }
          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root2, thrownValue);
            }
          } while (true);
          resetContextDependencies();
          popDispatcher(prevDispatcher);
          executionContext = prevExecutionContext;
          if (workInProgress !== null) {
            {
              markRenderYielded();
            }
            return RootInProgress;
          } else {
            {
              markRenderStopped();
            }
            workInProgressRoot = null;
            workInProgressRootRenderLanes = NoLanes;
            return workInProgressRootExitStatus;
          }
        }
        function workLoopConcurrent() {
          while (workInProgress !== null && !shouldYield()) {
            performUnitOfWork(workInProgress);
          }
        }
        function performUnitOfWork(unitOfWork) {
          var current2 = unitOfWork.alternate;
          setCurrentFiber(unitOfWork);
          var next;
          if ((unitOfWork.mode & ProfileMode) !== NoMode) {
            startProfilerTimer(unitOfWork);
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
            stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
          } else {
            next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
          }
          resetCurrentFiber();
          unitOfWork.memoizedProps = unitOfWork.pendingProps;
          if (next === null) {
            completeUnitOfWork(unitOfWork);
          } else {
            workInProgress = next;
          }
          ReactCurrentOwner$2.current = null;
        }
        function completeUnitOfWork(unitOfWork) {
          var completedWork = unitOfWork;
          do {
            var current2 = completedWork.alternate;
            var returnFiber = completedWork.return;
            if ((completedWork.flags & Incomplete) === NoFlags) {
              setCurrentFiber(completedWork);
              var next = void 0;
              if ((completedWork.mode & ProfileMode) === NoMode) {
                next = completeWork(current2, completedWork, subtreeRenderLanes);
              } else {
                startProfilerTimer(completedWork);
                next = completeWork(current2, completedWork, subtreeRenderLanes);
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
              }
              resetCurrentFiber();
              if (next !== null) {
                workInProgress = next;
                return;
              }
            } else {
              var _next = unwindWork(current2, completedWork);
              if (_next !== null) {
                _next.flags &= HostEffectMask;
                workInProgress = _next;
                return;
              }
              if ((completedWork.mode & ProfileMode) !== NoMode) {
                stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                var actualDuration = completedWork.actualDuration;
                var child = completedWork.child;
                while (child !== null) {
                  actualDuration += child.actualDuration;
                  child = child.sibling;
                }
                completedWork.actualDuration = actualDuration;
              }
              if (returnFiber !== null) {
                returnFiber.flags |= Incomplete;
                returnFiber.subtreeFlags = NoFlags;
                returnFiber.deletions = null;
              } else {
                workInProgressRootExitStatus = RootDidNotComplete;
                workInProgress = null;
                return;
              }
            }
            var siblingFiber = completedWork.sibling;
            if (siblingFiber !== null) {
              workInProgress = siblingFiber;
              return;
            }
            completedWork = returnFiber;
            workInProgress = completedWork;
          } while (completedWork !== null);
          if (workInProgressRootExitStatus === RootInProgress) {
            workInProgressRootExitStatus = RootCompleted;
          }
        }
        function commitRoot(root2, recoverableErrors, transitions) {
          var previousUpdateLanePriority = getCurrentUpdatePriority();
          var prevTransition = ReactCurrentBatchConfig$3.transition;
          try {
            ReactCurrentBatchConfig$3.transition = null;
            setCurrentUpdatePriority(DiscreteEventPriority);
            commitRootImpl(root2, recoverableErrors, transitions, previousUpdateLanePriority);
          } finally {
            ReactCurrentBatchConfig$3.transition = prevTransition;
            setCurrentUpdatePriority(previousUpdateLanePriority);
          }
          return null;
        }
        function commitRootImpl(root2, recoverableErrors, transitions, renderPriorityLevel) {
          do {
            flushPassiveEffects();
          } while (rootWithPendingPassiveEffects !== null);
          flushRenderPhaseStrictModeWarningsInDEV();
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Should not already be working.");
          }
          var finishedWork = root2.finishedWork;
          var lanes = root2.finishedLanes;
          {
            markCommitStarted(lanes);
          }
          if (finishedWork === null) {
            {
              markCommitStopped();
            }
            return null;
          } else {
            {
              if (lanes === NoLanes) {
                error3("root.finishedLanes should not be empty during a commit. This is a bug in React.");
              }
            }
          }
          root2.finishedWork = null;
          root2.finishedLanes = NoLanes;
          if (finishedWork === root2.current) {
            throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
          }
          root2.callbackNode = null;
          root2.callbackPriority = NoLane;
          var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
          markRootFinished(root2, remainingLanes);
          if (root2 === workInProgressRoot) {
            workInProgressRoot = null;
            workInProgress = null;
            workInProgressRootRenderLanes = NoLanes;
          }
          if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              pendingPassiveTransitions = transitions;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
          var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
          if (subtreeHasEffects || rootHasEffect) {
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            ReactCurrentBatchConfig$3.transition = null;
            var previousPriority = getCurrentUpdatePriority();
            setCurrentUpdatePriority(DiscreteEventPriority);
            var prevExecutionContext = executionContext;
            executionContext |= CommitContext;
            ReactCurrentOwner$2.current = null;
            var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root2, finishedWork);
            {
              recordCommitTime();
            }
            commitMutationEffects(root2, finishedWork, lanes);
            resetAfterCommit(root2.containerInfo);
            root2.current = finishedWork;
            {
              markLayoutEffectsStarted(lanes);
            }
            commitLayoutEffects(finishedWork, root2, lanes);
            {
              markLayoutEffectsStopped();
            }
            requestPaint();
            executionContext = prevExecutionContext;
            setCurrentUpdatePriority(previousPriority);
            ReactCurrentBatchConfig$3.transition = prevTransition;
          } else {
            root2.current = finishedWork;
            {
              recordCommitTime();
            }
          }
          var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
          if (rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = false;
            rootWithPendingPassiveEffects = root2;
            pendingPassiveEffectsLanes = lanes;
          } else {
            {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
            }
          }
          remainingLanes = root2.pendingLanes;
          if (remainingLanes === NoLanes) {
            legacyErrorBoundariesThatAlreadyFailed = null;
          }
          {
            if (!rootDidHavePassiveEffects) {
              commitDoubleInvokeEffectsInDEV(root2.current, false);
            }
          }
          onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
          {
            if (isDevToolsPresent) {
              root2.memoizedUpdaters.clear();
            }
          }
          {
            onCommitRoot$1();
          }
          ensureRootIsScheduled(root2, now3());
          if (recoverableErrors !== null) {
            var onRecoverableError = root2.onRecoverableError;
            for (var i = 0; i < recoverableErrors.length; i++) {
              var recoverableError = recoverableErrors[i];
              var componentStack = recoverableError.stack;
              var digest = recoverableError.digest;
              onRecoverableError(recoverableError.value, {
                componentStack,
                digest
              });
            }
          }
          if (hasUncaughtError) {
            hasUncaughtError = false;
            var error$1 = firstUncaughtError;
            firstUncaughtError = null;
            throw error$1;
          }
          if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root2.tag !== LegacyRoot) {
            flushPassiveEffects();
          }
          remainingLanes = root2.pendingLanes;
          if (includesSomeLane(remainingLanes, SyncLane)) {
            {
              markNestedUpdateScheduled();
            }
            if (root2 === rootWithNestedUpdates) {
              nestedUpdateCount++;
            } else {
              nestedUpdateCount = 0;
              rootWithNestedUpdates = root2;
            }
          } else {
            nestedUpdateCount = 0;
          }
          flushSyncCallbacks();
          {
            markCommitStopped();
          }
          return null;
        }
        function flushPassiveEffects() {
          if (rootWithPendingPassiveEffects !== null) {
            var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
            var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
            var prevTransition = ReactCurrentBatchConfig$3.transition;
            var previousPriority = getCurrentUpdatePriority();
            try {
              ReactCurrentBatchConfig$3.transition = null;
              setCurrentUpdatePriority(priority);
              return flushPassiveEffectsImpl();
            } finally {
              setCurrentUpdatePriority(previousPriority);
              ReactCurrentBatchConfig$3.transition = prevTransition;
            }
          }
          return false;
        }
        function enqueuePendingPassiveProfilerEffect(fiber) {
          {
            pendingPassiveProfilerEffects.push(fiber);
            if (!rootDoesHavePassiveEffects) {
              rootDoesHavePassiveEffects = true;
              scheduleCallback$1(NormalPriority, function() {
                flushPassiveEffects();
                return null;
              });
            }
          }
        }
        function flushPassiveEffectsImpl() {
          if (rootWithPendingPassiveEffects === null) {
            return false;
          }
          var transitions = pendingPassiveTransitions;
          pendingPassiveTransitions = null;
          var root2 = rootWithPendingPassiveEffects;
          var lanes = pendingPassiveEffectsLanes;
          rootWithPendingPassiveEffects = null;
          pendingPassiveEffectsLanes = NoLanes;
          if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
            throw new Error("Cannot flush passive effects while already rendering.");
          }
          {
            isFlushingPassiveEffects = true;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          {
            markPassiveEffectsStarted(lanes);
          }
          var prevExecutionContext = executionContext;
          executionContext |= CommitContext;
          commitPassiveUnmountEffects(root2.current);
          commitPassiveMountEffects(root2, root2.current, lanes, transitions);
          {
            var profilerEffects = pendingPassiveProfilerEffects;
            pendingPassiveProfilerEffects = [];
            for (var i = 0; i < profilerEffects.length; i++) {
              var _fiber = profilerEffects[i];
              commitPassiveEffectDurations(root2, _fiber);
            }
          }
          {
            markPassiveEffectsStopped();
          }
          {
            commitDoubleInvokeEffectsInDEV(root2.current, true);
          }
          executionContext = prevExecutionContext;
          flushSyncCallbacks();
          {
            if (didScheduleUpdateDuringPassiveEffects) {
              if (root2 === rootWithPassiveNestedUpdates) {
                nestedPassiveUpdateCount++;
              } else {
                nestedPassiveUpdateCount = 0;
                rootWithPassiveNestedUpdates = root2;
              }
            } else {
              nestedPassiveUpdateCount = 0;
            }
            isFlushingPassiveEffects = false;
            didScheduleUpdateDuringPassiveEffects = false;
          }
          onPostCommitRoot(root2);
          {
            var stateNode = root2.current.stateNode;
            stateNode.effectDuration = 0;
            stateNode.passiveEffectDuration = 0;
          }
          return true;
        }
        function isAlreadyFailedLegacyErrorBoundary(instance4) {
          return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance4);
        }
        function markLegacyErrorBoundaryAsFailed(instance4) {
          if (legacyErrorBoundariesThatAlreadyFailed === null) {
            legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance4]);
          } else {
            legacyErrorBoundariesThatAlreadyFailed.add(instance4);
          }
        }
        function prepareToThrowUncaughtError(error4) {
          if (!hasUncaughtError) {
            hasUncaughtError = true;
            firstUncaughtError = error4;
          }
        }
        var onUncaughtError = prepareToThrowUncaughtError;
        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error4) {
          var errorInfo = createCapturedValueAtFiber(error4, sourceFiber);
          var update2 = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
          var root2 = enqueueUpdate(rootFiber, update2, SyncLane);
          var eventTime = requestEventTime();
          if (root2 !== null) {
            markRootUpdated(root2, SyncLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
          }
        }
        function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
          {
            reportUncaughtErrorInDEV(error$1);
            setIsRunningInsertionEffect(false);
          }
          if (sourceFiber.tag === HostRoot) {
            captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
            return;
          }
          var fiber = null;
          {
            fiber = nearestMountedAncestor;
          }
          while (fiber !== null) {
            if (fiber.tag === HostRoot) {
              captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
              return;
            } else if (fiber.tag === ClassComponent) {
              var ctor = fiber.type;
              var instance4 = fiber.stateNode;
              if (typeof ctor.getDerivedStateFromError === "function" || typeof instance4.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance4)) {
                var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                var update2 = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                var root2 = enqueueUpdate(fiber, update2, SyncLane);
                var eventTime = requestEventTime();
                if (root2 !== null) {
                  markRootUpdated(root2, SyncLane, eventTime);
                  ensureRootIsScheduled(root2, eventTime);
                }
                return;
              }
            }
            fiber = fiber.return;
          }
          {
            error3("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
          }
        }
        function pingSuspendedRoot(root2, wakeable, pingedLanes) {
          var pingCache = root2.pingCache;
          if (pingCache !== null) {
            pingCache.delete(wakeable);
          }
          var eventTime = requestEventTime();
          markRootPinged(root2, pingedLanes);
          warnIfSuspenseResolutionNotWrappedWithActDEV(root2);
          if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
            if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now3() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
              prepareFreshStack(root2, NoLanes);
            } else {
              workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
            }
          }
          ensureRootIsScheduled(root2, eventTime);
        }
        function retryTimedOutBoundary(boundaryFiber, retryLane) {
          if (retryLane === NoLane) {
            retryLane = requestRetryLane(boundaryFiber);
          }
          var eventTime = requestEventTime();
          var root2 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
          if (root2 !== null) {
            markRootUpdated(root2, retryLane, eventTime);
            ensureRootIsScheduled(root2, eventTime);
          }
        }
        function retryDehydratedSuspenseBoundary(boundaryFiber) {
          var suspenseState = boundaryFiber.memoizedState;
          var retryLane = NoLane;
          if (suspenseState !== null) {
            retryLane = suspenseState.retryLane;
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function resolveRetryWakeable(boundaryFiber, wakeable) {
          var retryLane = NoLane;
          var retryCache;
          switch (boundaryFiber.tag) {
            case SuspenseComponent:
              retryCache = boundaryFiber.stateNode;
              var suspenseState = boundaryFiber.memoizedState;
              if (suspenseState !== null) {
                retryLane = suspenseState.retryLane;
              }
              break;
            case SuspenseListComponent:
              retryCache = boundaryFiber.stateNode;
              break;
            default:
              throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
          }
          if (retryCache !== null) {
            retryCache.delete(wakeable);
          }
          retryTimedOutBoundary(boundaryFiber, retryLane);
        }
        function jnd(timeElapsed) {
          return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
        }
        function checkForNestedUpdates() {
          if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
            nestedUpdateCount = 0;
            rootWithNestedUpdates = null;
            throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
          }
          {
            if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
              nestedPassiveUpdateCount = 0;
              rootWithPassiveNestedUpdates = null;
              error3("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
            }
          }
        }
        function flushRenderPhaseStrictModeWarningsInDEV() {
          {
            ReactStrictModeWarnings.flushLegacyContextWarning();
            {
              ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
            }
          }
        }
        function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
          {
            setCurrentFiber(fiber);
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
            }
            invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
            if (hasPassiveEffects) {
              invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
            }
            resetCurrentFiber();
          }
        }
        function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
          {
            var current2 = firstChild;
            var subtreeRoot = null;
            while (current2 !== null) {
              var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
              if (current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags) {
                current2 = current2.child;
              } else {
                if ((current2.flags & fiberFlags) !== NoFlags) {
                  invokeEffectFn(current2);
                }
                if (current2.sibling !== null) {
                  current2 = current2.sibling;
                } else {
                  current2 = subtreeRoot = current2.return;
                }
              }
            }
          }
        }
        var didWarnStateUpdateForNotYetMountedComponent = null;
        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
          {
            if ((executionContext & RenderContext) !== NoContext) {
              return;
            }
            if (!(fiber.mode & ConcurrentMode)) {
              return;
            }
            var tag = fiber.tag;
            if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
              return;
            }
            var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
            if (didWarnStateUpdateForNotYetMountedComponent !== null) {
              if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                return;
              }
              didWarnStateUpdateForNotYetMountedComponent.add(componentName);
            } else {
              didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
            }
            var previousFiber = current;
            try {
              setCurrentFiber(fiber);
              error3("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
            } finally {
              if (previousFiber) {
                setCurrentFiber(fiber);
              } else {
                resetCurrentFiber();
              }
            }
          }
        }
        var beginWork$1;
        {
          var dummyFiber = null;
          beginWork$1 = function(current2, unitOfWork, lanes) {
            var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
            try {
              return beginWork(current2, unitOfWork, lanes);
            } catch (originalError) {
              if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                throw originalError;
              }
              resetContextDependencies();
              resetHooksAfterThrow();
              unwindInterruptedWork(current2, unitOfWork);
              assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
              if (unitOfWork.mode & ProfileMode) {
                startProfilerTimer(unitOfWork);
              }
              invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
              if (hasCaughtError()) {
                var replayError = clearCaughtError();
                if (typeof replayError === "object" && replayError !== null && replayError.sb && typeof originalError === "object" && originalError !== null && !originalError.sb) {
                  originalError.sb = true;
                }
              }
              throw originalError;
            }
          };
        }
        var didWarnAboutUpdateInRender = false;
        var didWarnAboutUpdateInRenderForAnotherComponent;
        {
          didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
        }
        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
          {
            if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
              switch (fiber.tag) {
                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent: {
                  var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                  var dedupeKey = renderingComponentName;
                  if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                    didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                    var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                    error3("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                  }
                  break;
                }
                case ClassComponent: {
                  if (!didWarnAboutUpdateInRender) {
                    error3("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                    didWarnAboutUpdateInRender = true;
                  }
                  break;
                }
              }
            }
          }
        }
        function restorePendingUpdaters(root2, lanes) {
          {
            if (isDevToolsPresent) {
              var memoizedUpdaters = root2.memoizedUpdaters;
              memoizedUpdaters.forEach(function(schedulingFiber) {
                addFiberToLanesMap(root2, schedulingFiber, lanes);
              });
            }
          }
        }
        var fakeActCallbackNode = {};
        function scheduleCallback$1(priorityLevel, callback) {
          {
            var actQueue = ReactCurrentActQueue$1.current;
            if (actQueue !== null) {
              actQueue.push(callback);
              return fakeActCallbackNode;
            } else {
              return scheduleCallback(priorityLevel, callback);
            }
          }
        }
        function cancelCallback$1(callbackNode) {
          if (callbackNode === fakeActCallbackNode) {
            return;
          }
          return cancelCallback(callbackNode);
        }
        function shouldForceFlushFallbacksInDEV() {
          return ReactCurrentActQueue$1.current !== null;
        }
        function warnIfUpdatesNotWrappedWithActDEV(fiber) {
          {
            if (fiber.mode & ConcurrentMode) {
              if (!isConcurrentActEnvironment()) {
                return;
              }
            } else {
              if (!isLegacyActEnvironment()) {
                return;
              }
              if (executionContext !== NoContext) {
                return;
              }
              if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
                return;
              }
            }
            if (ReactCurrentActQueue$1.current === null) {
              var previousFiber = current;
              try {
                setCurrentFiber(fiber);
                error3("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
              } finally {
                if (previousFiber) {
                  setCurrentFiber(fiber);
                } else {
                  resetCurrentFiber();
                }
              }
            }
          }
        }
        function warnIfSuspenseResolutionNotWrappedWithActDEV(root2) {
          {
            if (root2.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
              error3("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
            }
          }
        }
        function setIsRunningInsertionEffect(isRunning) {
          {
            isRunningInsertionEffect = isRunning;
          }
        }
        var resolveFamily = null;
        var failedBoundaries = null;
        var setRefreshHandler = function(handler) {
          {
            resolveFamily = handler;
          }
        };
        function resolveFunctionForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              return type;
            }
            return family.current;
          }
        }
        function resolveClassForHotReloading(type) {
          return resolveFunctionForHotReloading(type);
        }
        function resolveForwardRefForHotReloading(type) {
          {
            if (resolveFamily === null) {
              return type;
            }
            var family = resolveFamily(type);
            if (family === void 0) {
              if (type !== null && type !== void 0 && typeof type.render === "function") {
                var currentRender = resolveFunctionForHotReloading(type.render);
                if (type.render !== currentRender) {
                  var syntheticType = {
                    $$typeof: REACT_FORWARD_REF_TYPE,
                    render: currentRender
                  };
                  if (type.displayName !== void 0) {
                    syntheticType.displayName = type.displayName;
                  }
                  return syntheticType;
                }
              }
              return type;
            }
            return family.current;
          }
        }
        function isCompatibleFamilyForHotReloading(fiber, element6) {
          {
            if (resolveFamily === null) {
              return false;
            }
            var prevType = fiber.elementType;
            var nextType = element6.type;
            var needsCompareFamilies = false;
            var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
            switch (fiber.tag) {
              case ClassComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                }
                break;
              }
              case FunctionComponent: {
                if (typeof nextType === "function") {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case ForwardRef: {
                if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              case MemoComponent:
              case SimpleMemoComponent: {
                if ($$typeofNextType === REACT_MEMO_TYPE) {
                  needsCompareFamilies = true;
                } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                  needsCompareFamilies = true;
                }
                break;
              }
              default:
                return false;
            }
            if (needsCompareFamilies) {
              var prevFamily = resolveFamily(prevType);
              if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                return true;
              }
            }
            return false;
          }
        }
        function markFailedErrorBoundaryForHotReloading(fiber) {
          {
            if (resolveFamily === null) {
              return;
            }
            if (typeof WeakSet !== "function") {
              return;
            }
            if (failedBoundaries === null) {
              failedBoundaries = /* @__PURE__ */ new WeakSet();
            }
            failedBoundaries.add(fiber);
          }
        }
        var scheduleRefresh = function(root2, update2) {
          {
            if (resolveFamily === null) {
              return;
            }
            var staleFamilies = update2.staleFamilies, updatedFamilies = update2.updatedFamilies;
            flushPassiveEffects();
            flushSync(function() {
              scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
            });
          }
        };
        var scheduleRoot = function(root2, element6) {
          {
            if (root2.context !== emptyContextObject) {
              return;
            }
            flushPassiveEffects();
            flushSync(function() {
              updateContainer(element6, root2, null, null);
            });
          }
        };
        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
          {
            var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            if (resolveFamily === null) {
              throw new Error("Expected resolveFamily to be set during hot reload.");
            }
            var needsRender = false;
            var needsRemount = false;
            if (candidateType !== null) {
              var family = resolveFamily(candidateType);
              if (family !== void 0) {
                if (staleFamilies.has(family)) {
                  needsRemount = true;
                } else if (updatedFamilies.has(family)) {
                  if (tag === ClassComponent) {
                    needsRemount = true;
                  } else {
                    needsRender = true;
                  }
                }
              }
            }
            if (failedBoundaries !== null) {
              if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                needsRemount = true;
              }
            }
            if (needsRemount) {
              fiber.Qa = true;
            }
            if (needsRemount || needsRender) {
              var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (_root !== null) {
                scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
              }
            }
            if (child !== null && !needsRemount) {
              scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
            }
            if (sibling !== null) {
              scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
            }
          }
        }
        var findHostInstancesForRefresh = function(root2, families) {
          {
            var hostInstances = /* @__PURE__ */ new Set();
            var types = new Set(families.map(function(family) {
              return family.current;
            }));
            findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
            return hostInstances;
          }
        };
        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
          {
            var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
            var candidateType = null;
            switch (tag) {
              case FunctionComponent:
              case SimpleMemoComponent:
              case ClassComponent:
                candidateType = type;
                break;
              case ForwardRef:
                candidateType = type.render;
                break;
            }
            var didMatch = false;
            if (candidateType !== null) {
              if (types.has(candidateType)) {
                didMatch = true;
              }
            }
            if (didMatch) {
              findHostInstancesForFiberShallowly(fiber, hostInstances);
            } else {
              if (child !== null) {
                findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
              }
            }
            if (sibling !== null) {
              findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
            }
          }
        }
        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
            if (foundHostInstances) {
              return;
            }
            var node14 = fiber;
            while (true) {
              switch (node14.tag) {
                case HostComponent:
                  hostInstances.add(node14.stateNode);
                  return;
                case HostPortal:
                  hostInstances.add(node14.stateNode.containerInfo);
                  return;
                case HostRoot:
                  hostInstances.add(node14.stateNode.containerInfo);
                  return;
              }
              if (node14.return === null) {
                throw new Error("Expected to reach root first.");
              }
              node14 = node14.return;
            }
          }
        }
        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
          {
            var node14 = fiber;
            var foundHostInstances = false;
            while (true) {
              if (node14.tag === HostComponent) {
                foundHostInstances = true;
                hostInstances.add(node14.stateNode);
              } else if (node14.child !== null) {
                node14.child.return = node14;
                node14 = node14.child;
                continue;
              }
              if (node14 === fiber) {
                return foundHostInstances;
              }
              while (node14.sibling === null) {
                if (node14.return === null || node14.return === fiber) {
                  return foundHostInstances;
                }
                node14 = node14.return;
              }
              node14.sibling.return = node14.return;
              node14 = node14.sibling;
            }
          }
          return false;
        }
        var hasBadMapPolyfill;
        {
          hasBadMapPolyfill = false;
          try {
            var nonExtensibleObject = Object.preventExtensions({});
            /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
            /* @__PURE__ */ new Set([nonExtensibleObject]);
          } catch (e) {
            hasBadMapPolyfill = true;
          }
        }
        function FiberNode(tag, pendingProps, key, mode) {
          this.tag = tag;
          this.key = key;
          this.elementType = null;
          this.type = null;
          this.stateNode = null;
          this.return = null;
          this.child = null;
          this.sibling = null;
          this.index = 0;
          this.ref = null;
          this.pendingProps = pendingProps;
          this.memoizedProps = null;
          this.updateQueue = null;
          this.memoizedState = null;
          this.dependencies = null;
          this.mode = mode;
          this.flags = NoFlags;
          this.subtreeFlags = NoFlags;
          this.deletions = null;
          this.lanes = NoLanes;
          this.childLanes = NoLanes;
          this.alternate = null;
          {
            this.actualDuration = Number.NaN;
            this.actualStartTime = Number.NaN;
            this.selfBaseDuration = Number.NaN;
            this.treeBaseDuration = Number.NaN;
            this.actualDuration = 0;
            this.actualStartTime = -1;
            this.selfBaseDuration = 0;
            this.treeBaseDuration = 0;
          }
          {
            this.ta = null;
            this.da = null;
            this.Qa = false;
            this.Pa = null;
            if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
              Object.preventExtensions(this);
            }
          }
        }
        var createFiber = function(tag, pendingProps, key, mode) {
          return new FiberNode(tag, pendingProps, key, mode);
        };
        function shouldConstruct$1(Component64) {
          var prototype = Component64.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function isSimpleFunctionComponent(type) {
          return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
        }
        function resolveLazyComponentTag(Component64) {
          if (typeof Component64 === "function") {
            return shouldConstruct$1(Component64) ? ClassComponent : FunctionComponent;
          } else if (Component64 !== void 0 && Component64 !== null) {
            var $$typeof = Component64.$$typeof;
            if ($$typeof === REACT_FORWARD_REF_TYPE) {
              return ForwardRef;
            }
            if ($$typeof === REACT_MEMO_TYPE) {
              return MemoComponent;
            }
          }
          return IndeterminateComponent;
        }
        function createWorkInProgress(current2, pendingProps) {
          var workInProgress2 = current2.alternate;
          if (workInProgress2 === null) {
            workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
            workInProgress2.elementType = current2.elementType;
            workInProgress2.type = current2.type;
            workInProgress2.stateNode = current2.stateNode;
            {
              workInProgress2.ta = current2.ta;
              workInProgress2.da = current2.da;
              workInProgress2.Pa = current2.Pa;
            }
            workInProgress2.alternate = current2;
            current2.alternate = workInProgress2;
          } else {
            workInProgress2.pendingProps = pendingProps;
            workInProgress2.type = current2.type;
            workInProgress2.flags = NoFlags;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            {
              workInProgress2.actualDuration = 0;
              workInProgress2.actualStartTime = -1;
            }
          }
          workInProgress2.flags = current2.flags & StaticMask;
          workInProgress2.childLanes = current2.childLanes;
          workInProgress2.lanes = current2.lanes;
          workInProgress2.child = current2.child;
          workInProgress2.memoizedProps = current2.memoizedProps;
          workInProgress2.memoizedState = current2.memoizedState;
          workInProgress2.updateQueue = current2.updateQueue;
          var currentDependencies = current2.dependencies;
          workInProgress2.dependencies = currentDependencies === null ? null : {
            lanes: currentDependencies.lanes,
            firstContext: currentDependencies.firstContext
          };
          workInProgress2.sibling = current2.sibling;
          workInProgress2.index = current2.index;
          workInProgress2.ref = current2.ref;
          {
            workInProgress2.selfBaseDuration = current2.selfBaseDuration;
            workInProgress2.treeBaseDuration = current2.treeBaseDuration;
          }
          {
            workInProgress2.Qa = current2.Qa;
            switch (workInProgress2.tag) {
              case IndeterminateComponent:
              case FunctionComponent:
              case SimpleMemoComponent:
                workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                break;
              case ClassComponent:
                workInProgress2.type = resolveClassForHotReloading(current2.type);
                break;
              case ForwardRef:
                workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                break;
            }
          }
          return workInProgress2;
        }
        function resetWorkInProgress(workInProgress2, renderLanes2) {
          workInProgress2.flags &= StaticMask | Placement;
          var current2 = workInProgress2.alternate;
          if (current2 === null) {
            workInProgress2.childLanes = NoLanes;
            workInProgress2.lanes = renderLanes2;
            workInProgress2.child = null;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.memoizedProps = null;
            workInProgress2.memoizedState = null;
            workInProgress2.updateQueue = null;
            workInProgress2.dependencies = null;
            workInProgress2.stateNode = null;
            {
              workInProgress2.selfBaseDuration = 0;
              workInProgress2.treeBaseDuration = 0;
            }
          } else {
            workInProgress2.childLanes = current2.childLanes;
            workInProgress2.lanes = current2.lanes;
            workInProgress2.child = current2.child;
            workInProgress2.subtreeFlags = NoFlags;
            workInProgress2.deletions = null;
            workInProgress2.memoizedProps = current2.memoizedProps;
            workInProgress2.memoizedState = current2.memoizedState;
            workInProgress2.updateQueue = current2.updateQueue;
            workInProgress2.type = current2.type;
            var currentDependencies = current2.dependencies;
            workInProgress2.dependencies = currentDependencies === null ? null : {
              lanes: currentDependencies.lanes,
              firstContext: currentDependencies.firstContext
            };
            {
              workInProgress2.selfBaseDuration = current2.selfBaseDuration;
              workInProgress2.treeBaseDuration = current2.treeBaseDuration;
            }
          }
          return workInProgress2;
        }
        function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
          var mode;
          if (tag === ConcurrentRoot) {
            mode = ConcurrentMode;
            if (isStrictMode === true) {
              mode |= StrictLegacyMode;
              {
                mode |= StrictEffectsMode;
              }
            }
          } else {
            mode = NoMode;
          }
          if (isDevToolsPresent) {
            mode |= ProfileMode;
          }
          return createFiber(HostRoot, null, null, mode);
        }
        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
          var fiberTag = IndeterminateComponent;
          var resolvedType = type;
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              fiberTag = ClassComponent;
              {
                resolvedType = resolveClassForHotReloading(resolvedType);
              }
            } else {
              {
                resolvedType = resolveFunctionForHotReloading(resolvedType);
              }
            }
          } else if (typeof type === "string") {
            fiberTag = HostComponent;
          } else {
            getTag:
              switch (type) {
                case REACT_FRAGMENT_TYPE:
                  return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                case REACT_STRICT_MODE_TYPE:
                  fiberTag = Mode;
                  mode |= StrictLegacyMode;
                  if ((mode & ConcurrentMode) !== NoMode) {
                    mode |= StrictEffectsMode;
                  }
                  break;
                case REACT_PROFILER_TYPE:
                  return createFiberFromProfiler(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_TYPE:
                  return createFiberFromSuspense(pendingProps, mode, lanes, key);
                case REACT_SUSPENSE_LIST_TYPE:
                  return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                case REACT_OFFSCREEN_TYPE:
                  return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                case REACT_LEGACY_HIDDEN_TYPE:
                case REACT_SCOPE_TYPE:
                case REACT_CACHE_TYPE:
                case REACT_TRACING_MARKER_TYPE:
                case REACT_DEBUG_TRACING_MODE_TYPE:
                default: {
                  if (typeof type === "object" && type !== null) {
                    switch (type.$$typeof) {
                      case REACT_PROVIDER_TYPE:
                        fiberTag = ContextProvider;
                        break getTag;
                      case REACT_CONTEXT_TYPE:
                        fiberTag = ContextConsumer;
                        break getTag;
                      case REACT_FORWARD_REF_TYPE:
                        fiberTag = ForwardRef;
                        {
                          resolvedType = resolveForwardRefForHotReloading(resolvedType);
                        }
                        break getTag;
                      case REACT_MEMO_TYPE:
                        fiberTag = MemoComponent;
                        break getTag;
                      case REACT_LAZY_TYPE:
                        fiberTag = LazyComponent;
                        resolvedType = null;
                        break getTag;
                    }
                  }
                  var info = "";
                  {
                    if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                      info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                    }
                    var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                    if (ownerName) {
                      info += "\n\nCheck the render method of `" + ownerName + "`.";
                    }
                  }
                  throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
                }
              }
          }
          var fiber = createFiber(fiberTag, pendingProps, key, mode);
          fiber.elementType = type;
          fiber.type = resolvedType;
          fiber.lanes = lanes;
          {
            fiber.da = owner;
          }
          return fiber;
        }
        function createFiberFromElement(element6, mode, lanes) {
          var owner = null;
          {
            owner = element6.R;
          }
          var type = element6.type;
          var key = element6.key;
          var pendingProps = element6.props;
          var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
          {
            fiber.ta = element6.xa;
            fiber.da = element6.R;
          }
          return fiber;
        }
        function createFiberFromFragment(elements, mode, lanes, key) {
          var fiber = createFiber(Fragment42, elements, key, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
          {
            if (typeof pendingProps.id !== "string") {
              error3('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
            }
          }
          var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
          fiber.elementType = REACT_PROFILER_TYPE;
          fiber.lanes = lanes;
          {
            fiber.stateNode = {
              effectDuration: 0,
              passiveEffectDuration: 0
            };
          }
          return fiber;
        }
        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
          var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
          fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
          var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
          fiber.elementType = REACT_OFFSCREEN_TYPE;
          fiber.lanes = lanes;
          var primaryChildInstance = {
            isHidden: false
          };
          fiber.stateNode = primaryChildInstance;
          return fiber;
        }
        function createFiberFromText(content, mode, lanes) {
          var fiber = createFiber(HostText, content, null, mode);
          fiber.lanes = lanes;
          return fiber;
        }
        function createFiberFromHostInstanceForDeletion() {
          var fiber = createFiber(HostComponent, null, null, NoMode);
          fiber.elementType = "DELETED";
          return fiber;
        }
        function createFiberFromDehydratedFragment(dehydratedNode) {
          var fiber = createFiber(DehydratedFragment, null, null, NoMode);
          fiber.stateNode = dehydratedNode;
          return fiber;
        }
        function createFiberFromPortal(portal, mode, lanes) {
          var pendingProps = portal.children !== null ? portal.children : [];
          var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
          fiber.lanes = lanes;
          fiber.stateNode = {
            containerInfo: portal.containerInfo,
            pendingChildren: null,
            // Used by persistent updates
            implementation: portal.implementation
          };
          return fiber;
        }
        function assignFiberPropertiesInDEV(target, source) {
          if (target === null) {
            target = createFiber(IndeterminateComponent, null, null, NoMode);
          }
          target.tag = source.tag;
          target.key = source.key;
          target.elementType = source.elementType;
          target.type = source.type;
          target.stateNode = source.stateNode;
          target.return = source.return;
          target.child = source.child;
          target.sibling = source.sibling;
          target.index = source.index;
          target.ref = source.ref;
          target.pendingProps = source.pendingProps;
          target.memoizedProps = source.memoizedProps;
          target.updateQueue = source.updateQueue;
          target.memoizedState = source.memoizedState;
          target.dependencies = source.dependencies;
          target.mode = source.mode;
          target.flags = source.flags;
          target.subtreeFlags = source.subtreeFlags;
          target.deletions = source.deletions;
          target.lanes = source.lanes;
          target.childLanes = source.childLanes;
          target.alternate = source.alternate;
          {
            target.actualDuration = source.actualDuration;
            target.actualStartTime = source.actualStartTime;
            target.selfBaseDuration = source.selfBaseDuration;
            target.treeBaseDuration = source.treeBaseDuration;
          }
          target.ta = source.ta;
          target.da = source.da;
          target.Qa = source.Qa;
          target.Pa = source.Pa;
          return target;
        }
        function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
          this.tag = tag;
          this.containerInfo = containerInfo;
          this.pendingChildren = null;
          this.current = null;
          this.pingCache = null;
          this.finishedWork = null;
          this.timeoutHandle = noTimeout;
          this.context = null;
          this.pendingContext = null;
          this.callbackNode = null;
          this.callbackPriority = NoLane;
          this.eventTimes = createLaneMap(NoLanes);
          this.expirationTimes = createLaneMap(NoTimestamp);
          this.pendingLanes = NoLanes;
          this.suspendedLanes = NoLanes;
          this.pingedLanes = NoLanes;
          this.expiredLanes = NoLanes;
          this.mutableReadLanes = NoLanes;
          this.finishedLanes = NoLanes;
          this.entangledLanes = NoLanes;
          this.entanglements = createLaneMap(NoLanes);
          this.identifierPrefix = identifierPrefix;
          this.onRecoverableError = onRecoverableError;
          {
            this.mutableSourceEagerHydrationData = null;
          }
          {
            this.effectDuration = 0;
            this.passiveEffectDuration = 0;
          }
          {
            this.memoizedUpdaters = /* @__PURE__ */ new Set();
            var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
            for (var _i = 0; _i < TotalLanes; _i++) {
              pendingUpdatersLaneMap.push(/* @__PURE__ */ new Set());
            }
          }
          {
            switch (tag) {
              case ConcurrentRoot:
                this.yd = hydrate2 ? "hydrateRoot()" : "createRoot()";
                break;
              case LegacyRoot:
                this.yd = hydrate2 ? "hydrate()" : "render()";
                break;
            }
          }
        }
        function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var root2 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError);
          var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
          root2.current = uninitializedFiber;
          uninitializedFiber.stateNode = root2;
          {
            var _initialState = {
              element: initialChildren,
              isDehydrated: hydrate2,
              cache: null,
              // not enabled yet
              transitions: null,
              pendingSuspenseBoundaries: null
            };
            uninitializedFiber.memoizedState = _initialState;
          }
          initializeUpdateQueue(uninitializedFiber);
          return root2;
        }
        var ReactVersion = "18.2.0";
        function createPortal8(children2, containerInfo, implementation) {
          var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
          {
            checkKeyStringCoercion(key);
          }
          return {
            // This tag allow us to uniquely identify this as a React Portal
            $$typeof: REACT_PORTAL_TYPE,
            key: key == null ? null : "" + key,
            children: children2,
            containerInfo,
            implementation
          };
        }
        var didWarnAboutNestedUpdates;
        var didWarnAboutFindNodeInStrictMode;
        {
          didWarnAboutNestedUpdates = false;
          didWarnAboutFindNodeInStrictMode = {};
        }
        function getContextForSubtree(parentComponent) {
          if (!parentComponent) {
            return emptyContextObject;
          }
          var fiber = get(parentComponent);
          var parentContext = findCurrentUnmaskedContext(fiber);
          if (fiber.tag === ClassComponent) {
            var Component64 = fiber.type;
            if (isContextProvider(Component64)) {
              return processChildContext(fiber, Component64, parentContext);
            }
          }
          return parentContext;
        }
        function findHostInstanceWithWarning(component, methodName) {
          {
            var fiber = get(component);
            if (fiber === void 0) {
              if (typeof component.render === "function") {
                throw new Error("Unable to find node on an unmounted component.");
              } else {
                var keys2 = Object.keys(component).join(",");
                throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys2);
              }
            }
            var hostFiber = findCurrentHostFiber(fiber);
            if (hostFiber === null) {
              return null;
            }
            if (hostFiber.mode & StrictLegacyMode) {
              var componentName = getComponentNameFromFiber(fiber) || "Component";
              if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                didWarnAboutFindNodeInStrictMode[componentName] = true;
                var previousFiber = current;
                try {
                  setCurrentFiber(hostFiber);
                  if (fiber.mode & StrictLegacyMode) {
                    error3("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  } else {
                    error3("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                  }
                } finally {
                  if (previousFiber) {
                    setCurrentFiber(previousFiber);
                  } else {
                    resetCurrentFiber();
                  }
                }
              }
            }
            return hostFiber.stateNode;
          }
        }
        function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = false;
          var initialChildren = null;
          return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
        }
        function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
          var hydrate2 = true;
          var root2 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          root2.context = getContextForSubtree(null);
          var current2 = root2.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current2);
          var update2 = createUpdate(eventTime, lane);
          update2.callback = callback !== void 0 && callback !== null ? callback : null;
          enqueueUpdate(current2, update2, lane);
          scheduleInitialHydrationOnRoot(root2, lane, eventTime);
          return root2;
        }
        function updateContainer(element6, container, parentComponent, callback) {
          {
            onScheduleRoot(container, element6);
          }
          var current$1 = container.current;
          var eventTime = requestEventTime();
          var lane = requestUpdateLane(current$1);
          {
            markRenderScheduled(lane);
          }
          var context2 = getContextForSubtree(parentComponent);
          if (container.context === null) {
            container.context = context2;
          } else {
            container.pendingContext = context2;
          }
          {
            if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
              didWarnAboutNestedUpdates = true;
              error3("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
            }
          }
          var update2 = createUpdate(eventTime, lane);
          update2.payload = {
            element: element6
          };
          callback = callback === void 0 ? null : callback;
          if (callback !== null) {
            {
              if (typeof callback !== "function") {
                error3("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
              }
            }
            update2.callback = callback;
          }
          var root2 = enqueueUpdate(current$1, update2, lane);
          if (root2 !== null) {
            scheduleUpdateOnFiber(root2, current$1, lane, eventTime);
            entangleTransitions(root2, current$1, lane);
          }
          return lane;
        }
        function getPublicRootInstance(container) {
          var containerFiber = container.current;
          if (!containerFiber.child) {
            return null;
          }
          switch (containerFiber.child.tag) {
            case HostComponent:
              return getPublicInstance(containerFiber.child.stateNode);
            default:
              return containerFiber.child.stateNode;
          }
        }
        function attemptSynchronousHydration$1(fiber) {
          switch (fiber.tag) {
            case HostRoot: {
              var root2 = fiber.stateNode;
              if (isRootDehydrated(root2)) {
                var lanes = getHighestPriorityPendingLanes(root2);
                flushRoot(root2, lanes);
              }
              break;
            }
            case SuspenseComponent: {
              flushSync(function() {
                var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                if (root3 !== null) {
                  var eventTime = requestEventTime();
                  scheduleUpdateOnFiber(root3, fiber, SyncLane, eventTime);
                }
              });
              var retryLane = SyncLane;
              markRetryLaneIfNotHydrated(fiber, retryLane);
              break;
            }
          }
        }
        function markRetryLaneImpl(fiber, retryLane) {
          var suspenseState = fiber.memoizedState;
          if (suspenseState !== null && suspenseState.dehydrated !== null) {
            suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
          }
        }
        function markRetryLaneIfNotHydrated(fiber, retryLane) {
          markRetryLaneImpl(fiber, retryLane);
          var alternate = fiber.alternate;
          if (alternate) {
            markRetryLaneImpl(alternate, retryLane);
          }
        }
        function attemptContinuousHydration$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = SelectiveHydrationLane;
          var root2 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function attemptHydrationAtCurrentPriority$1(fiber) {
          if (fiber.tag !== SuspenseComponent) {
            return;
          }
          var lane = requestUpdateLane(fiber);
          var root2 = enqueueConcurrentRenderForLane(fiber, lane);
          if (root2 !== null) {
            var eventTime = requestEventTime();
            scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
          }
          markRetryLaneIfNotHydrated(fiber, lane);
        }
        function findHostInstanceWithNoPortals(fiber) {
          var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        var shouldErrorImpl = function(fiber) {
          return null;
        };
        function shouldError(fiber) {
          return shouldErrorImpl(fiber);
        }
        var shouldSuspendImpl = function(fiber) {
          return false;
        };
        function shouldSuspend(fiber) {
          return shouldSuspendImpl(fiber);
        }
        var overrideHookState = null;
        var overrideHookStateDeletePath = null;
        var overrideHookStateRenamePath = null;
        var overrideProps = null;
        var overridePropsDeletePath = null;
        var overridePropsRenamePath = null;
        var scheduleUpdate = null;
        var setErrorHandler = null;
        var setSuspenseHandler = null;
        {
          var copyWithDeleteImpl = function(obj, path, index2) {
            var key = path[index2];
            var updated = isArray4(obj) ? obj.slice() : assign2({}, obj);
            if (index2 + 1 === path.length) {
              if (isArray4(updated)) {
                updated.splice(key, 1);
              } else {
                delete updated[key];
              }
              return updated;
            }
            updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
            return updated;
          };
          var copyWithDelete = function(obj, path) {
            return copyWithDeleteImpl(obj, path, 0);
          };
          var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
            var oldKey = oldPath[index2];
            var updated = isArray4(obj) ? obj.slice() : assign2({}, obj);
            if (index2 + 1 === oldPath.length) {
              var newKey = newPath[index2];
              updated[newKey] = updated[oldKey];
              if (isArray4(updated)) {
                updated.splice(oldKey, 1);
              } else {
                delete updated[oldKey];
              }
            } else {
              updated[oldKey] = copyWithRenameImpl(
                // $FlowFixMe number or string is fine here
                obj[oldKey],
                oldPath,
                newPath,
                index2 + 1
              );
            }
            return updated;
          };
          var copyWithRename = function(obj, oldPath, newPath) {
            if (oldPath.length !== newPath.length) {
              warn("copyWithRename() expects paths of the same length");
              return;
            } else {
              for (var i = 0; i < newPath.length - 1; i++) {
                if (oldPath[i] !== newPath[i]) {
                  warn("copyWithRename() expects paths to be the same except for the deepest key");
                  return;
                }
              }
            }
            return copyWithRenameImpl(obj, oldPath, newPath, 0);
          };
          var copyWithSetImpl = function(obj, path, index2, value2) {
            if (index2 >= path.length) {
              return value2;
            }
            var key = path[index2];
            var updated = isArray4(obj) ? obj.slice() : assign2({}, obj);
            updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value2);
            return updated;
          };
          var copyWithSet = function(obj, path, value2) {
            return copyWithSetImpl(obj, path, 0, value2);
          };
          var findHook = function(fiber, id) {
            var currentHook2 = fiber.memoizedState;
            while (currentHook2 !== null && id > 0) {
              currentHook2 = currentHook2.next;
              id--;
            }
            return currentHook2;
          };
          overrideHookState = function(fiber, id, path, value2) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithSet(hook.memoizedState, path, value2);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign2({}, fiber.memoizedProps);
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateDeletePath = function(fiber, id, path) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithDelete(hook.memoizedState, path);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign2({}, fiber.memoizedProps);
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
            var hook = findHook(fiber, id);
            if (hook !== null) {
              var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
              hook.memoizedState = newState;
              hook.baseState = newState;
              fiber.memoizedProps = assign2({}, fiber.memoizedProps);
              var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
              if (root2 !== null) {
                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
              }
            }
          };
          overrideProps = function(fiber, path, value2) {
            fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value2);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsDeletePath = function(fiber, path) {
            fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
            }
          };
          overridePropsRenamePath = function(fiber, oldPath, newPath) {
            fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
            if (fiber.alternate) {
              fiber.alternate.pendingProps = fiber.pendingProps;
            }
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
            }
          };
          scheduleUpdate = function(fiber) {
            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
            if (root2 !== null) {
              scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
            }
          };
          setErrorHandler = function(newShouldErrorImpl) {
            shouldErrorImpl = newShouldErrorImpl;
          };
          setSuspenseHandler = function(newShouldSuspendImpl) {
            shouldSuspendImpl = newShouldSuspendImpl;
          };
        }
        function findHostInstanceByFiber(fiber) {
          var hostFiber = findCurrentHostFiber(fiber);
          if (hostFiber === null) {
            return null;
          }
          return hostFiber.stateNode;
        }
        function emptyFindFiberByHostInstance(instance4) {
          return null;
        }
        function getCurrentFiberForDevTools() {
          return current;
        }
        function injectIntoDevTools(devToolsConfig) {
          var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
          var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
          return injectInternals({
            bundleType: devToolsConfig.bundleType,
            version: devToolsConfig.version,
            rendererPackageName: devToolsConfig.rendererPackageName,
            rendererConfig: devToolsConfig.rendererConfig,
            overrideHookState,
            overrideHookStateDeletePath,
            overrideHookStateRenamePath,
            overrideProps,
            overridePropsDeletePath,
            overridePropsRenamePath,
            setErrorHandler,
            setSuspenseHandler,
            scheduleUpdate,
            currentDispatcherRef: ReactCurrentDispatcher2,
            findHostInstanceByFiber,
            findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
            // React Refresh
            findHostInstancesForRefresh,
            scheduleRefresh,
            scheduleRoot,
            setRefreshHandler,
            // Enables DevTools to append owner stacks to error messages in DEV mode.
            getCurrentFiber: getCurrentFiberForDevTools,
            // Enables DevTools to detect reconciler version rather than renderer version
            // which may not match for third party renderers.
            reconcilerVersion: ReactVersion
          });
        }
        var defaultOnRecoverableError = typeof reportError === "function" ? (
          // In modern browsers, reportError will dispatch an error event,
          // emulating an uncaught JavaScript error.
          reportError
        ) : function(error4) {
          console["error"](error4);
        };
        function ReactDOMRoot(internalRoot) {
          this.tb = internalRoot;
        }
        ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children2) {
          var root2 = this.tb;
          if (root2 === null) {
            throw new Error("Cannot update an unmounted root.");
          }
          {
            if (typeof arguments[1] === "function") {
              error3("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            } else if (isValidContainer(arguments[1])) {
              error3("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
            } else if (typeof arguments[1] !== "undefined") {
              error3("You passed a second argument to root.render(...) but it only accepts one argument.");
            }
            var container = root2.containerInfo;
            if (container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(root2.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error3("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                }
              }
            }
          }
          updateContainer(children2, root2, null, null);
        };
        ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
          {
            if (typeof arguments[0] === "function") {
              error3("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
            }
          }
          var root2 = this.tb;
          if (root2 !== null) {
            this.tb = null;
            var container = root2.containerInfo;
            {
              if (isAlreadyRendering()) {
                error3("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
              }
            }
            flushSync(function() {
              updateContainer(null, root2, null, null);
            });
            unmarkContainerAsRoot(container);
          }
        };
        function createRoot(container, options3) {
          if (!isValidContainer(container)) {
            throw new Error("createRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container);
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          var transitionCallbacks = null;
          if (options3 !== null && options3 !== void 0) {
            {
              if (options3.hydrate) {
                warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
              } else {
                if (typeof options3 === "object" && options3 !== null && options3.$$typeof === REACT_ELEMENT_TYPE) {
                  error3("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
                }
              }
            }
            if (options3.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options3.identifierPrefix !== void 0) {
              identifierPrefix = options3.identifierPrefix;
            }
            if (options3.onRecoverableError !== void 0) {
              onRecoverableError = options3.onRecoverableError;
            }
            if (options3.transitionCallbacks !== void 0) {
              transitionCallbacks = options3.transitionCallbacks;
            }
          }
          var root2 = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root2.current, container);
          var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
          listenToAllSupportedEvents(rootContainerElement);
          return new ReactDOMRoot(root2);
        }
        function ReactDOMHydrationRoot(internalRoot) {
          this.tb = internalRoot;
        }
        function scheduleHydration(target) {
          if (target) {
            queueExplicitHydrationTarget(target);
          }
        }
        ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
        function hydrateRoot(container, initialChildren, options3) {
          if (!isValidContainer(container)) {
            throw new Error("hydrateRoot(...): Target container is not a DOM element.");
          }
          warnIfReactDOMContainerInDEV(container);
          {
            if (initialChildren === void 0) {
              error3("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
            }
          }
          var hydrationCallbacks = options3 != null ? options3 : null;
          var mutableSources = options3 != null && options3.hydratedSources || null;
          var isStrictMode = false;
          var concurrentUpdatesByDefaultOverride = false;
          var identifierPrefix = "";
          var onRecoverableError = defaultOnRecoverableError;
          if (options3 !== null && options3 !== void 0) {
            if (options3.unstable_strictMode === true) {
              isStrictMode = true;
            }
            if (options3.identifierPrefix !== void 0) {
              identifierPrefix = options3.identifierPrefix;
            }
            if (options3.onRecoverableError !== void 0) {
              onRecoverableError = options3.onRecoverableError;
            }
          }
          var root2 = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
          markContainerAsRoot(root2.current, container);
          listenToAllSupportedEvents(container);
          if (mutableSources) {
            for (var i = 0; i < mutableSources.length; i++) {
              var mutableSource = mutableSources[i];
              registerMutableSourceForHydration(root2, mutableSource);
            }
          }
          return new ReactDOMHydrationRoot(root2);
        }
        function isValidContainer(node14) {
          return !!(node14 && (node14.nodeType === ELEMENT_NODE || node14.nodeType === DOCUMENT_NODE || node14.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
        }
        function isValidContainerLegacy(node14) {
          return !!(node14 && (node14.nodeType === ELEMENT_NODE || node14.nodeType === DOCUMENT_NODE || node14.nodeType === DOCUMENT_FRAGMENT_NODE || node14.nodeType === COMMENT_NODE && node14.nodeValue === " react-mount-point-unstable "));
        }
        function warnIfReactDOMContainerInDEV(container) {
          {
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error3("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
            }
            if (isContainerMarkedAsRoot(container)) {
              if (container.ga) {
                error3("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
              } else {
                error3("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
              }
            }
          }
        }
        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
        var topLevelUpdateWarnings;
        {
          topLevelUpdateWarnings = function(container) {
            if (container.ga && container.nodeType !== COMMENT_NODE) {
              var hostInstance = findHostInstanceWithNoPortals(container.ga.current);
              if (hostInstance) {
                if (hostInstance.parentNode !== container) {
                  error3("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                }
              }
            }
            var isRootRenderedBySomeReact = !!container.ga;
            var rootEl = getReactRootElementInContainer(container);
            var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
            if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
              error3("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
            }
            if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
              error3("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
            }
          };
        }
        function getReactRootElementInContainer(container) {
          if (!container) {
            return null;
          }
          if (container.nodeType === DOCUMENT_NODE) {
            return container.documentElement;
          } else {
            return container.firstChild;
          }
        }
        function noopOnRecoverableError() {
        }
        function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
          if (isHydrationContainer) {
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance4 = getPublicRootInstance(root2);
                originalCallback.call(instance4);
              };
            }
            var root2 = createHydrationContainer(
              initialChildren,
              callback,
              container,
              LegacyRoot,
              null,
              // hydrationCallbacks
              false,
              // isStrictMode
              false,
              // concurrentUpdatesByDefaultOverride,
              "",
              // identifierPrefix
              noopOnRecoverableError
            );
            container.ga = root2;
            markContainerAsRoot(root2.current, container);
            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(rootContainerElement);
            flushSync();
            return root2;
          } else {
            var rootSibling;
            while (rootSibling = container.lastChild) {
              container.removeChild(rootSibling);
            }
            if (typeof callback === "function") {
              var _originalCallback = callback;
              callback = function() {
                var instance4 = getPublicRootInstance(_root);
                _originalCallback.call(instance4);
              };
            }
            var _root = createContainer(
              container,
              LegacyRoot,
              null,
              // hydrationCallbacks
              false,
              // isStrictMode
              false,
              // concurrentUpdatesByDefaultOverride,
              "",
              // identifierPrefix
              noopOnRecoverableError
            );
            container.ga = _root;
            markContainerAsRoot(_root.current, container);
            var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
            listenToAllSupportedEvents(_rootContainerElement);
            flushSync(function() {
              updateContainer(initialChildren, _root, parentComponent, callback);
            });
            return _root;
          }
        }
        function warnOnInvalidCallback$1(callback, callerName) {
          {
            if (callback !== null && typeof callback !== "function") {
              error3("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
            }
          }
        }
        function legacyRenderSubtreeIntoContainer(parentComponent, children2, container, forceHydrate, callback) {
          {
            topLevelUpdateWarnings(container);
            warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
          }
          var maybeRoot = container.ga;
          var root2;
          if (!maybeRoot) {
            root2 = legacyCreateRootFromDOMContainer(container, children2, parentComponent, callback, forceHydrate);
          } else {
            root2 = maybeRoot;
            if (typeof callback === "function") {
              var originalCallback = callback;
              callback = function() {
                var instance4 = getPublicRootInstance(root2);
                originalCallback.call(instance4);
              };
            }
            updateContainer(children2, root2, parentComponent, callback);
          }
          return getPublicRootInstance(root2);
        }
        function findDOMNode(componentOrElement) {
          {
            var owner = ReactCurrentOwner$3.current;
            if (owner !== null && owner.stateNode !== null) {
              var warnedAboutRefsInRender = owner.stateNode.Rb;
              if (!warnedAboutRefsInRender) {
                error3("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
              }
              owner.stateNode.Rb = true;
            }
          }
          if (componentOrElement == null) {
            return null;
          }
          if (componentOrElement.nodeType === ELEMENT_NODE) {
            return componentOrElement;
          }
          {
            return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
          }
        }
        function hydrate(element6, container, callback) {
          {
            error3("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container.ga === void 0;
            if (isModernRoot) {
              error3("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element6, container, true, callback);
        }
        function render5(element6, container, callback) {
          {
            error3("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container.ga === void 0;
            if (isModernRoot) {
              error3("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
            }
          }
          return legacyRenderSubtreeIntoContainer(null, element6, container, false, callback);
        }
        function unstable_renderSubtreeIntoContainer(parentComponent, element6, containerNode, callback) {
          {
            error3("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
          }
          if (!isValidContainerLegacy(containerNode)) {
            throw new Error("Target container is not a DOM element.");
          }
          if (parentComponent == null || !has2(parentComponent)) {
            throw new Error("parentComponent must be a valid React Component");
          }
          return legacyRenderSubtreeIntoContainer(parentComponent, element6, containerNode, false, callback);
        }
        function unmountComponentAtNode2(container) {
          if (!isValidContainerLegacy(container)) {
            throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
          }
          {
            var isModernRoot = isContainerMarkedAsRoot(container) && container.ga === void 0;
            if (isModernRoot) {
              error3("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
            }
          }
          if (container.ga) {
            {
              var rootEl = getReactRootElementInContainer(container);
              var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
              if (renderedByDifferentReact) {
                error3("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
              }
            }
            flushSync(function() {
              legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                container.ga = null;
                unmarkContainerAsRoot(container);
              });
            });
            return true;
          } else {
            {
              var _rootEl = getReactRootElementInContainer(container);
              var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
              var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode.ga;
              if (hasNonRootReactChild) {
                error3("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
              }
            }
            return false;
          }
        }
        setAttemptSynchronousHydration(attemptSynchronousHydration$1);
        setAttemptContinuousHydration(attemptContinuousHydration$1);
        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
        setGetCurrentUpdatePriority(getCurrentUpdatePriority);
        setAttemptHydrationAtPriority(runWithPriority);
        {
          if (typeof Map !== "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
          Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
          Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
            error3("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
          }
        }
        setRestoreImplementation(restoreControlledState$3);
        setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
        function createPortal$1(children2, container) {
          var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
          if (!isValidContainer(container)) {
            throw new Error("Target container is not a DOM element.");
          }
          return createPortal8(children2, container, null, key);
        }
        function renderSubtreeIntoContainer(parentComponent, element6, containerNode, callback) {
          return unstable_renderSubtreeIntoContainer(parentComponent, element6, containerNode, callback);
        }
        var Internals = {
          usingClientEntryPoint: false,
          // Keep in sync with ReactTestUtils.js.
          // This is an array for better minification.
          Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
        };
        function createRoot$1(container, options3) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error3('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return createRoot(container, options3);
        }
        function hydrateRoot$1(container, initialChildren, options3) {
          {
            if (!Internals.usingClientEntryPoint && true) {
              error3('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
            }
          }
          return hydrateRoot(container, initialChildren, options3);
        }
        function flushSync$1(fn) {
          {
            if (isAlreadyRendering()) {
              error3("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
            }
          }
          return flushSync(fn);
        }
        var foundDevTools = injectIntoDevTools({
          findFiberByHostInstance: getClosestInstanceFromNode,
          bundleType: 1,
          version: ReactVersion,
          rendererPackageName: "react-dom"
        });
        {
          if (!foundDevTools && canUseDOM3 && window.top === window.self) {
            if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
              var protocol = window.location.protocol;
              if (/^(https?|file):$/.test(protocol)) {
                console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
              }
            }
          }
        }
        exports.zc = Internals;
        exports.createPortal = createPortal$1;
        exports.createRoot = createRoot$1;
        exports.findDOMNode = findDOMNode;
        exports.flushSync = flushSync$1;
        exports.hydrate = hydrate;
        exports.hydrateRoot = hydrateRoot$1;
        exports.render = render5;
        exports.unmountComponentAtNode = unmountComponentAtNode2;
        exports.unstable_batchedUpdates = batchedUpdates$1;
        exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
        exports.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "node_modules/react-dom/index.js"(exports, module) {
    "use strict";
    function checkDCE() {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
        return;
      }
      if (true) {
        throw new Error("^_^");
      }
      try {
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
      } catch (err2) {
        console.error(err2);
      }
    }
    if (false) {
      checkDCE();
      module.exports = null;
    } else {
      module.exports = require_react_dom_development();
    }
  }
});

// node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object22) {
          if (typeof object22 === "object" && object22 !== null) {
            var $$typeof = object22.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object22.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element3 = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment42 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object22) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object22) || typeOf(object22) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object22) {
          return typeOf(object22) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object22) {
          return typeOf(object22) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object22) {
          return typeOf(object22) === REACT_PROVIDER_TYPE;
        }
        function isElement(object22) {
          return typeof object22 === "object" && object22 !== null && object22.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object22) {
          return typeOf(object22) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object22) {
          return typeOf(object22) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object22) {
          return typeOf(object22) === REACT_LAZY_TYPE;
        }
        function isMemo(object22) {
          return typeOf(object22) === REACT_MEMO_TYPE;
        }
        function isPortal(object22) {
          return typeOf(object22) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object22) {
          return typeOf(object22) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object22) {
          return typeOf(object22) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object22) {
          return typeOf(object22) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element3;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment42;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty3 = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject2(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err2) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject2(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty3.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has2 = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function checkPropTypes(typeSpecs, values2, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has2(typeSpecs, typeSpecName)) {
            var error3;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err2 = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err2.name = "Invariant Violation";
                throw err2;
              }
              error3 = typeSpecs[typeSpecName](values2, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error3 = ex;
            }
            if (error3 && !(error3 instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error3 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error3 instanceof Error && !(error3.message in loggedTypeFailures)) {
              loggedTypeFailures[error3.message] = true;
              var stack2 = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error3.message + (stack2 != null ? stack2 : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has2;
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign2 = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has2 = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement4, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data2) {
        this.message = message;
        this.data = data2 && typeof data2 === "object" ? data2 : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err2 = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err2.name = "Invariant Violation";
              throw err2;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error3 = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error3 instanceof Error) {
              return error3;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement4(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value2) {
            var type = getPreciseType(value2);
            if (type === "symbol") {
              return String(value2);
            }
            return value2;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has2(propValue, key)) {
              var error3 = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error3 instanceof Error) {
                return error3;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has2(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error3 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error3) {
              return error3;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign2({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has2(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error3 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error3) {
              return error3;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement4(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value2) {
        var type = getPreciseType(value2);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/dotvvm-jscomponent-react/dist/dotvvm-react.js
var React = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
function getKnockoutContext(element6) {
  while (element6) {
    const cx = ko.contextFor(element6);
    if (cx)
      return cx;
    element6 = element6.parentElement;
  }
  throw new Error("Could not find knockout context");
}
var KnockoutTemplateReactComponent = class extends React.Component {
  constructor() {
    super(...arguments);
    this.wrapRef = React.createRef();
    this.templateName = ko.observable();
  }
  // TODO: how to dispose the template?
  // componentWillUnmount() {
  // }
  componentDidMount() {
    this.initializeTemplate();
  }
  initializeTemplate() {
    const e = this.wrapRef.current;
    let context2 = getKnockoutContext(e);
    if (this.props.getChildContext) {
      context2 = this.props.getChildContext(context2);
    } else if (this.props.viewModel !== void 0) {
      const updateEvent = new dotvvm.DotvvmEvent("templateInReact.newState");
      this.viewModelStateManager = new dotvvm.StateManager(this.props.viewModel, updateEvent);
      context2 = context2.createChildContext(this.viewModelStateManager.stateObservable);
    }
    this.updateStuff();
    ko.renderTemplate(this.templateName, context2, {}, e);
  }
  componentDidUpdate() {
    this.updateStuff();
  }
  updateStuff() {
    if (this.templateName() !== this.props.templateName)
      this.templateName(this.props.templateName);
    if (this.viewModelStateManager) {
      this.viewModelStateManager.setState(this.props.viewModel);
    }
  }
  render() {
    return React.createElement(this.props.wrapperTag, Object.assign({ ref: this.wrapRef }, this.props.wrapperAttributes));
  }
};
KnockoutTemplateReactComponent.defaultProps = {
  wrapperTag: "div"
};
var registerReactControl = (ReactControl, defaultProps44 = {}) => ({
  create: (elm, props, commands, templates, setPropsRaw) => {
    const initialProps = Object.assign(Object.assign(Object.assign({ setProps }, defaultProps44), commands), templates);
    let currentProps = Object.assign(Object.assign({}, initialProps), props);
    rerender();
    return {
      updateProps(updatedProps) {
        currentProps = Object.assign(Object.assign({}, currentProps), updatedProps);
        rerender();
      },
      dispose() {
        ReactDOM.unmountComponentAtNode(elm);
      }
    };
    function rerender() {
      ReactDOM.render(React.createElement(ReactControl, Object.assign({}, currentProps)), elm);
    }
    function setProps(updatedProps) {
      currentProps = Object.assign(Object.assign({}, currentProps), updatedProps);
      setPropsRaw(updatedProps);
      rerender();
    }
  }
});

// node_modules/@progress/kendo-date-math/dist/es/clone-date.js
var cloneDate = function(date2) {
  return date2 ? new Date(date2.getTime()) : null;
};

// node_modules/@progress/kendo-date-math/dist/es/adjust-dst.js
var adjustDST = function(date2, hour) {
  var newDate = cloneDate(date2);
  if (hour === 0 && newDate.getHours() === 23) {
    newDate.setHours(newDate.getHours() + 2);
  }
  return newDate;
};

// node_modules/@progress/kendo-date-math/dist/es/add-days.js
var addDays = function(date2, offset4) {
  var newDate = cloneDate(date2);
  newDate.setDate(newDate.getDate() + offset4);
  return adjustDST(newDate, date2.getHours());
};

// node_modules/@progress/kendo-date-math/dist/es/create-date.js
var createDate = function(year, month, day, hours, minutes, seconds, milliseconds) {
  if (hours === void 0) {
    hours = 0;
  }
  if (minutes === void 0) {
    minutes = 0;
  }
  if (seconds === void 0) {
    seconds = 0;
  }
  if (milliseconds === void 0) {
    milliseconds = 0;
  }
  var date2 = new Date(year, month, day, hours, minutes, seconds, milliseconds);
  if (year > -1 && year < 100) {
    date2.setFullYear(date2.getFullYear() - 1900);
  }
  return adjustDST(date2, hours);
};

// node_modules/@progress/kendo-date-math/dist/es/last-day-of-month.js
var lastDayOfMonth = function(date2) {
  var newDate = createDate(date2.getFullYear(), date2.getMonth() + 1, 1, date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds());
  return addDays(newDate, -1);
};

// node_modules/@progress/kendo-date-math/dist/es/add-months.js
var MONTHS_LENGTH = 12;
var normalize = function(date2, expectedMonth) {
  return date2.getMonth() !== expectedMonth ? lastDayOfMonth(addMonths(date2, -1)) : date2;
};
var addMonths = function(date2, offset4) {
  var newDate = cloneDate(date2);
  var diff = (newDate.getMonth() + offset4) % MONTHS_LENGTH;
  var expectedMonth = (MONTHS_LENGTH + diff) % MONTHS_LENGTH;
  newDate.setMonth(newDate.getMonth() + offset4);
  return normalize(adjustDST(newDate, date2.getHours()), expectedMonth);
};

// node_modules/@progress/kendo-date-math/dist/es/set-year.js
var setYear = function(value2, year) {
  var month = value2.getMonth();
  var candidate = createDate(year, month, value2.getDate(), value2.getHours(), value2.getMinutes(), value2.getSeconds(), value2.getMilliseconds());
  return candidate.getMonth() === month ? candidate : lastDayOfMonth(addMonths(candidate, -1));
};

// node_modules/@progress/kendo-date-math/dist/es/add-years.js
var addYears = function(value2, offset4) {
  return adjustDST(setYear(value2, value2.getFullYear() + offset4), value2.getHours());
};

// node_modules/@progress/kendo-date-math/dist/es/add-centuries.js
var addCenturies = function(value2, offset4) {
  return addYears(value2, 100 * offset4);
};

// node_modules/@progress/kendo-date-math/dist/es/add-decades.js
var addDecades = function(value2, offset4) {
  return addYears(value2, 10 * offset4);
};

// node_modules/@progress/kendo-date-math/dist/es/add-weeks.js
var addWeeks = function(date2, offset4) {
  return addDays(date2, offset4 * 7);
};

// node_modules/@progress/kendo-date-math/dist/es/constants.js
var MS_PER_MINUTE = 6e4;
var MS_PER_HOUR = 36e5;
var MS_PER_DAY = 864e5;

// node_modules/@progress/kendo-date-math/dist/es/direction.enum.js
var Direction;
(function(Direction4) {
  Direction4[Direction4["Forward"] = 1] = "Forward";
  Direction4[Direction4["Backward"] = -1] = "Backward";
})(Direction || (Direction = {}));

// node_modules/@progress/kendo-date-math/dist/es/day-of-week.js
var dayOfWeek = function(date2, weekDay, direction) {
  if (direction === void 0) {
    direction = Direction.Forward;
  }
  var newDate = cloneDate(date2);
  var newDay = (weekDay - newDate.getDay() + 7 * direction) % 7;
  newDate.setDate(newDate.getDate() + newDay);
  return adjustDST(newDate, date2.getHours());
};

// node_modules/@progress/kendo-date-math/dist/es/day.enum.js
var Day;
(function(Day2) {
  Day2[Day2["Sunday"] = 0] = "Sunday";
  Day2[Day2["Monday"] = 1] = "Monday";
  Day2[Day2["Tuesday"] = 2] = "Tuesday";
  Day2[Day2["Wednesday"] = 3] = "Wednesday";
  Day2[Day2["Thursday"] = 4] = "Thursday";
  Day2[Day2["Friday"] = 5] = "Friday";
  Day2[Day2["Saturday"] = 6] = "Saturday";
})(Day || (Day = {}));

// node_modules/@progress/kendo-date-math/dist/es/normalize-year.js
var normalizeYear = function(value2, year) {
  return setYear(value2, year(value2.getFullYear()));
};

// node_modules/@progress/kendo-date-math/dist/es/first-decade-of-century.js
var firstDecadeOfCentury = function(value2) {
  return normalizeYear(value2, function(y) {
    return y - y % 100;
  });
};

// node_modules/@progress/kendo-date-math/dist/es/duration-in-centuries.js
var durationInCenturies = function(start2, end2) {
  return (firstDecadeOfCentury(end2).getFullYear() - firstDecadeOfCentury(start2).getFullYear()) / 100;
};

// node_modules/@progress/kendo-date-math/dist/es/first-year-of-decade.js
var firstYearOfDecade = function(value2) {
  return normalizeYear(value2, function(y) {
    return y - y % 10;
  });
};

// node_modules/@progress/kendo-date-math/dist/es/duration-in-decades.js
var durationInDecades = function(start2, end2) {
  return (firstYearOfDecade(end2).getFullYear() - firstYearOfDecade(start2).getFullYear()) / 10;
};

// node_modules/@progress/kendo-date-math/dist/es/duration-in-months.js
var durationInMonths = function(start2, end2) {
  return (end2.getFullYear() - start2.getFullYear()) * 12 + (end2.getMonth() - start2.getMonth());
};

// node_modules/@progress/kendo-date-math/dist/es/duration-in-years.js
var durationInYears = function(start2, end2) {
  return end2.getFullYear() - start2.getFullYear();
};

// node_modules/@progress/kendo-date-math/dist/es/first-day-in-week.js
var firstDayInWeek = function(date2, weekStartDay) {
  if (weekStartDay === void 0) {
    weekStartDay = Day.Sunday;
  }
  var first2 = cloneDate(date2);
  while (first2.getDay() !== weekStartDay) {
    first2.setDate(first2.getDate() - 1);
  }
  return first2;
};

// node_modules/@progress/kendo-date-math/dist/es/first-day-of-month.js
var firstDayOfMonth = function(date2) {
  return createDate(date2.getFullYear(), date2.getMonth(), 1, date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds());
};

// node_modules/@progress/kendo-date-math/dist/es/set-month.js
var setMonth = function(value2, month) {
  var day = value2.getDate();
  var candidate = createDate(value2.getFullYear(), month, day, value2.getHours(), value2.getMinutes(), value2.getSeconds(), value2.getMilliseconds());
  return candidate.getDate() === day ? candidate : lastDayOfMonth(addMonths(candidate, -1));
};

// node_modules/@progress/kendo-date-math/dist/es/first-month-of-year.js
var firstMonthOfYear = function(value2) {
  return setMonth(value2, 0);
};

// node_modules/@progress/kendo-date-math/dist/es/get-date.js
var getDate = function(date2) {
  return createDate(date2.getFullYear(), date2.getMonth(), date2.getDate(), 0, 0, 0);
};

// node_modules/@progress/kendo-date-math/dist/es/is-equal.js
var isEqual = function(candidate, expected) {
  if (!candidate && !expected) {
    return true;
  }
  return candidate && expected && candidate.getTime() === expected.getTime();
};

// node_modules/@progress/kendo-date-math/dist/es/is-equal-date.js
var isEqualDate = function(candidate, expected) {
  if (!candidate && !expected) {
    return true;
  }
  return candidate && expected && isEqual(getDate(candidate), getDate(expected));
};

// node_modules/@progress/kendo-date-math/dist/es/last-decade-of-century.js
var lastDecadeOfCentury = function(value2) {
  return normalizeYear(value2, function(y) {
    return y - y % 100 + 90;
  });
};

// node_modules/@progress/kendo-date-math/dist/es/last-month-of-year.js
var lastMonthOfYear = function(value2) {
  return setMonth(value2, 11);
};

// node_modules/@progress/kendo-date-math/dist/es/last-year-of-decade.js
var lastYearOfDecade = function(value2) {
  return normalizeYear(value2, function(y) {
    return y - y % 10 + 9;
  });
};

// node_modules/@progress/kendo-date-math/dist/es/prev-day-of-week.js
var prevDayOfWeek = function(date2, weekDay) {
  return dayOfWeek(date2, weekDay, Direction.Backward);
};

// node_modules/@progress/kendo-date-math/dist/es/tz/timezones.js
var timezones = {
  rules: {},
  titles: {},
  zones: {}
};

// node_modules/@progress/kendo-date-math/dist/es/tz/rule-to-date.js
var MONTHS = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 };
var DAYS = { Sun: 0, Mon: 1, Tue: 2, Wed: 3, Thu: 4, Fri: 5, Sat: 6 };
var MS_PER_MINUTE2 = 6e4;
var ruleToDate = function(year, rule, zoneOffset) {
  var month = rule[3];
  var on = rule[4];
  var time2 = rule[5];
  var date2;
  var ruleOffset = time2[3] === "u" ? -zoneOffset * MS_PER_MINUTE2 : 0;
  if (!isNaN(on)) {
    date2 = new Date(Date.UTC(year, MONTHS[month], on, time2[0], time2[1], time2[2]) + ruleOffset);
  } else if (on.indexOf("last") === 0) {
    date2 = new Date(Date.UTC(year, MONTHS[month] + 1, 1, time2[0] - 24, time2[1], time2[2]) + ruleOffset);
    var targetDay = DAYS[on.substr(4, 3)];
    var ourDay = date2.getUTCDay();
    date2.setUTCDate(date2.getUTCDate() + targetDay - ourDay - (targetDay > ourDay ? 7 : 0));
  } else if (on.indexOf(">=") >= 0) {
    date2 = new Date(Date.UTC(year, MONTHS[month], on.substr(5), time2[0], time2[1], time2[2], 0) + ruleOffset);
    var targetDay = DAYS[on.substr(0, 3)];
    var ourDay = date2.getUTCDay();
    date2.setUTCDate(date2.getUTCDate() + targetDay - ourDay + (targetDay < ourDay ? 7 : 0));
  }
  return date2;
};

// node_modules/@progress/kendo-date-math/dist/es/tz/find-rule.js
var CURRENT_UTC_TIME = (/* @__PURE__ */ new Date()).getTime();
var findRule = function(zoneRule, utcTime, zoneOffset) {
  if (utcTime === void 0) {
    utcTime = CURRENT_UTC_TIME;
  }
  if (zoneOffset === void 0) {
    zoneOffset = 0;
  }
  var rules3 = timezones.rules[zoneRule];
  if (!rules3) {
    var time2 = zoneRule.split(":");
    var offset4 = 0;
    if (time2.length > 1) {
      offset4 = time2[0] * 60 + Number(time2[1]);
    }
    return [-1e6, "max", "-", "Jan", 1, [0, 0, 0], offset4, "-"];
  }
  var year = new Date(utcTime).getUTCFullYear();
  rules3 = rules3.filter(function(currentRule) {
    var from = currentRule[0];
    var to = currentRule[1];
    return from <= year && (to >= year || from === year && to === "only" || to === "max");
  });
  rules3.push(utcTime);
  rules3.sort(function(a, b) {
    if (typeof a !== "number") {
      a = Number(ruleToDate(year, a, zoneOffset));
    }
    if (typeof b !== "number") {
      b = Number(ruleToDate(year, b, zoneOffset));
    }
    return a - b;
  });
  var rule = rules3[rules3.indexOf(utcTime) - 1] || rules3[rules3.length - 1];
  return isNaN(rule) ? rule : null;
};

// node_modules/@progress/kendo-date-math/dist/es/errors.js
var NO_TZ_INFO = "The required {0} timezone information is not provided!";
var INVALID_TZ_STRUCTURE = "The provided timezone information has invalid stucture!";
var formatRegExp = /\{(\d+)}?\}/g;
var flatten = function(arr) {
  return arr.reduce(function(a, b) {
    return a.concat(b);
  }, []);
};
var formatMessage = function(message) {
  var values2 = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    values2[_i - 1] = arguments[_i];
  }
  var flattenValues = flatten(values2);
  return message.replace(formatRegExp, function(_2, index) {
    return flattenValues[parseInt(index, 10)];
  });
};

// node_modules/@progress/kendo-date-math/dist/es/tz/get-zone.js
var getZoneRules = function(timezone) {
  var zones = timezones.zones;
  if (!zones) {
    throw new Error(formatMessage(NO_TZ_INFO, timezone));
  }
  var zoneRules = zones[timezone];
  var result = typeof zoneRules === "string" ? zones[zoneRules] : zoneRules;
  if (!result) {
    throw new Error(formatMessage(NO_TZ_INFO, timezone));
  }
  return result;
};

// node_modules/@progress/kendo-date-math/dist/es/tz/find-zone.js
var findZone = function(timezone, utcTime) {
  if (utcTime === void 0) {
    utcTime = (/* @__PURE__ */ new Date()).getTime();
  }
  if (timezone === "Etc/UTC" || timezone === "Etc/GMT") {
    return [0, "-", "UTC", null];
  }
  var zoneRules = getZoneRules(timezone);
  var idx = zoneRules.length - 1;
  for (; idx >= 0; idx--) {
    var until = zoneRules[idx][3];
    if (until && utcTime > until) {
      break;
    }
  }
  var zone = zoneRules[idx + 1];
  if (!zone) {
    throw new Error(formatMessage(NO_TZ_INFO, timezone));
  }
  return zone;
};

// node_modules/@progress/kendo-date-math/dist/es/tz/zone-and-rule.js
var zoneAndRule = function(timezone, date2) {
  var utcTime = date2.getTime();
  var zone = findZone(timezone, utcTime);
  return {
    rule: findRule(zone[1], utcTime, zone[0]),
    zone
  };
};

// node_modules/@progress/kendo-date-math/dist/es/tz/abbr-timezone.js
var abbrTimezone = function(timezone, date2) {
  if (date2 === void 0) {
    date2 = /* @__PURE__ */ new Date();
  }
  if (timezone === "Etc/UTC") {
    return "UTC";
  }
  if (timezone === "Etc/GMT") {
    return "GMT";
  }
  if (timezone === "") {
    return "";
  }
  var _a14 = zoneAndRule(timezone, date2), zone = _a14.zone, rule = _a14.rule;
  var base = zone[2];
  if (base.indexOf("/") >= 0) {
    return base.split("/")[rule && +rule[6] ? 1 : 0];
  } else if (base.indexOf("%s") >= 0) {
    return base.replace("%s", !rule || rule[7] === "-" ? "" : rule[7]);
  }
  return base;
};

// node_modules/@progress/kendo-date-math/dist/es/tz/offset.js
var offset = function(timezone, date2) {
  if (date2 === void 0) {
    date2 = /* @__PURE__ */ new Date();
  }
  if (timezone === "Etc/UTC" || timezone === "Etc/GMT") {
    return 0;
  }
  if (timezone === "") {
    return date2.getTimezoneOffset();
  }
  var _a14 = zoneAndRule(timezone, date2), rule = _a14.rule, zone = _a14.zone;
  return parseFloat(rule ? zone[0] - rule[6] : zone[0]);
};

// node_modules/@progress/kendo-date-math/dist/es/tz/timezone-names.js
var timezoneNames = function() {
  return Object.keys(timezones.zones);
};

// node_modules/@progress/kendo-date-math/dist/es/tz/to-local-date.js
function toLocalDate(date2) {
  return new Date(date2.getUTCFullYear(), date2.getUTCMonth(), date2.getUTCDate(), date2.getUTCHours(), date2.getUTCMinutes(), date2.getUTCSeconds(), date2.getUTCMilliseconds());
}

// node_modules/@progress/kendo-date-math/dist/es/tz/zoned-date.js
var addMinutes = function(date2, minutes) {
  return new Date(date2.getTime() + minutes * MS_PER_MINUTE);
};
var addHours = function(date2, hours) {
  return new Date(date2.getTime() + hours * MS_PER_HOUR);
};
var dayAbbr = [
  "Sun",
  "Mon",
  "Tue",
  "Wed",
  "Thu",
  "Fri",
  "Sat"
];
var monthAbbr = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dev"
];
var datePrefix = function(utcDate) {
  return dayAbbr[utcDate.getUTCDay()] + " " + monthAbbr[utcDate.getUTCMonth()];
};
var padNumber = function(num, len) {
  if (len === void 0) {
    len = 2;
  }
  var sign = num < 0 ? "-" : "";
  return sign + new Array(len).concat([Math.abs(num)]).join("0").slice(-len);
};
function isZoneMissingHour(date2, timezone) {
  var currentOffset = offset(timezone, date2);
  var prevHour = addHours(date2, -1);
  var prevOffset = offset(timezone, prevHour);
  return currentOffset < prevOffset;
}
function shiftZoneMissingHour(utcDate, timezone) {
  var dstOffset = isZoneMissingHour(utcDate, timezone) ? 1 : 0;
  return addHours(utcDate, dstOffset);
}
function convertTimezoneUTC(utcLocal, fromTimezone, toTimezone) {
  if (fromTimezone === toTimezone) {
    return utcLocal;
  }
  var fromOffset = offset(fromTimezone, utcLocal);
  var toOffset = offset(toTimezone, utcLocal);
  var baseDiff = fromOffset - toOffset;
  var midDate = addMinutes(utcLocal, baseDiff);
  var midOffset = offset(toTimezone, midDate);
  var dstDiff = toOffset - midOffset;
  return addMinutes(utcLocal, baseDiff + dstDiff);
}
function formatOffset(tzOffset) {
  var sign = tzOffset <= 0 ? "+" : "-";
  var value2 = Math.abs(tzOffset);
  var hours = padNumber(Math.floor(value2 / 60));
  var minutes = padNumber(value2 % 60);
  return "GMT" + sign + hours + minutes;
}
var ZonedDate = (
  /** @class */
  function() {
    function ZonedDate2(utcDate, timezone) {
      this.C = cloneDate(utcDate);
      this.timezone = timezone;
      var tzOffset = offset(timezone, utcDate);
      this.timezoneOffset = tzOffset;
      var localDate = shiftZoneMissingHour(utcDate, timezone);
      this.V = convertTimezoneUTC(localDate, timezone, "Etc/UTC");
    }
    Object.defineProperty(ZonedDate2.prototype, "cachedLocalDate", {
      /**
       * Returns a cached local date that denotes the exact time in the set timezone.
       *
       * @return Date - A local date that denotes the exact time in the set timezone.
       *
       * This property is an alternative to `toLocalDate()` that returns a cached value instead of cloning it.
       *
       * > Modifying the returned instance will corrupt the `ZonedDate` state.
       */
      get: function() {
        return this.V;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ZonedDate2.prototype, "cachedUTCDate", {
      /**
       * Returns a cached `Date` instance with UTC date parts that are set to the local time in the set timezone.
       *
       * @returns Date - A `Date` with UTC date parts that are set to the local time in the set timezone.
       *
       * This property is an alternative to `toUTCDate()` that returns a cached value instead of cloning it.
       *
       * > Modifying the returned instance will corrupt the `ZonedDate` state.
       */
      get: function() {
        return this.C;
      },
      enumerable: true,
      configurable: true
    });
    ZonedDate2.fromLocalDate = function(date2, timezone) {
      if (timezone === void 0) {
        timezone = "";
      }
      var utcDate = convertTimezoneUTC(date2, "Etc/UTC", timezone);
      var shiftZone = isZoneMissingHour(utcDate, timezone);
      var zoneOffset = offset(timezone, utcDate);
      var fixedOffset = 0;
      if (shiftZone) {
        fixedOffset = zoneOffset > 0 ? -1 : 1;
      }
      var adjDate = addHours(utcDate, fixedOffset);
      return ZonedDate2.fromUTCDate(adjDate, timezone);
    };
    ZonedDate2.fromUTCDate = function(utcDate, timezone) {
      if (timezone === void 0) {
        timezone = "";
      }
      return new ZonedDate2(utcDate, timezone);
    };
    ZonedDate2.prototype.toLocalDate = function() {
      return cloneDate(this.V);
    };
    ZonedDate2.prototype.toUTCDate = function() {
      return cloneDate(this.C);
    };
    ZonedDate2.prototype.toTimezone = function(toTimezone) {
      if (this.timezone === toTimezone) {
        return this.clone();
      }
      var tzOffset = offset(this.timezone, this.C);
      var date2 = addMinutes(this.C, tzOffset);
      return ZonedDate2.fromLocalDate(date2, toTimezone);
    };
    ZonedDate2.prototype.clone = function() {
      return ZonedDate2.fromUTCDate(this.C, this.timezone);
    };
    ZonedDate2.prototype.addDays = function(days) {
      var newDate = new Date(this.C.getTime());
      newDate.setUTCDate(newDate.getUTCDate() + days);
      return ZonedDate2.fromUTCDate(newDate, this.timezone);
    };
    ZonedDate2.prototype.addTime = function(milliseconds) {
      var utcDate = new Date(this.C.getTime());
      var utcMid = shiftZoneMissingHour(utcDate, this.timezone);
      utcMid.setTime(utcMid.getTime() + milliseconds);
      var utcResult = shiftZoneMissingHour(utcMid, this.timezone);
      return ZonedDate2.fromUTCDate(utcResult, this.timezone);
    };
    ZonedDate2.prototype.stripTime = function() {
      var date2 = this.C;
      var ticks = Date.UTC(date2.getUTCFullYear(), date2.getUTCMonth(), date2.getUTCDate(), 0, 0, 0);
      return ZonedDate2.fromUTCDate(new Date(ticks), this.timezone);
    };
    ZonedDate2.prototype.getTime = function() {
      return this.V.getTime();
    };
    ZonedDate2.prototype.getTimezoneOffset = function() {
      return this.timezoneOffset;
    };
    ZonedDate2.prototype.getFullYear = function() {
      return this.C.getUTCFullYear();
    };
    ZonedDate2.prototype.getMonth = function() {
      return this.C.getUTCMonth();
    };
    ZonedDate2.prototype.getDate = function() {
      return this.C.getUTCDate();
    };
    ZonedDate2.prototype.getDay = function() {
      return this.C.getUTCDay();
    };
    ZonedDate2.prototype.getHours = function() {
      return this.C.getUTCHours();
    };
    ZonedDate2.prototype.getMinutes = function() {
      return this.C.getUTCMinutes();
    };
    ZonedDate2.prototype.getSeconds = function() {
      return this.C.getUTCSeconds();
    };
    ZonedDate2.prototype.getMilliseconds = function() {
      return this.C.getUTCMilliseconds();
    };
    ZonedDate2.prototype.getUTCDate = function() {
      return this.V.getUTCDate();
    };
    ZonedDate2.prototype.getUTCDay = function() {
      return this.V.getUTCDay();
    };
    ZonedDate2.prototype.getUTCFullYear = function() {
      return this.V.getUTCFullYear();
    };
    ZonedDate2.prototype.getUTCHours = function() {
      return this.V.getUTCHours();
    };
    ZonedDate2.prototype.getUTCMilliseconds = function() {
      return this.V.getUTCMilliseconds();
    };
    ZonedDate2.prototype.getUTCMinutes = function() {
      return this.V.getUTCMinutes();
    };
    ZonedDate2.prototype.getUTCMonth = function() {
      return this.V.getUTCMonth();
    };
    ZonedDate2.prototype.getUTCSeconds = function() {
      return this.V.getUTCSeconds();
    };
    ZonedDate2.prototype.setTime = function(time2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setMilliseconds = function(ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCMilliseconds = function(ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setSeconds = function(sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCSeconds = function(sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setMinutes = function(min, sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCMinutes = function(min, sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setHours = function(hours, min, sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCHours = function(hours, min, sec, ms) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setDate = function(date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCDate = function(date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setMonth = function(month, date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCMonth = function(month, date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setFullYear = function(year, month, date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.setUTCFullYear = function(year, month, date2) {
      throw new Error("Method not implemented.");
    };
    ZonedDate2.prototype.toISOString = function() {
      return this.V.toISOString();
    };
    ZonedDate2.prototype.toJSON = function() {
      return this.V.toJSON();
    };
    ZonedDate2.prototype.toString = function() {
      var dateString = datePrefix(this.C);
      var timeString = this.toTimeString();
      return dateString + " " + this.getDate() + " " + this.getFullYear() + " " + timeString;
    };
    ZonedDate2.prototype.toDateString = function() {
      return toLocalDate(this.C).toDateString();
    };
    ZonedDate2.prototype.toTimeString = function() {
      var hours = padNumber(this.getHours());
      var minutes = padNumber(this.getMinutes());
      var seconds = padNumber(this.getSeconds());
      var time2 = hours + ":" + minutes + ":" + seconds;
      var tzOffset = formatOffset(this.timezoneOffset);
      var abbrev = abbrTimezone(this.timezone, this.C);
      if (abbrev) {
        abbrev = " (" + abbrev + ")";
      }
      return time2 + " " + tzOffset + abbrev;
    };
    ZonedDate2.prototype.toLocaleString = function(locales, options2) {
      return this.V.toLocaleString(locales, options2);
    };
    ZonedDate2.prototype.toLocaleDateString = function(locales, options2) {
      return this.V.toLocaleDateString(locales, options2);
    };
    ZonedDate2.prototype.toLocaleTimeString = function(locales, options2) {
      return this.V.toLocaleTimeString(locales, options2);
    };
    ZonedDate2.prototype.toUTCString = function() {
      return this.toTimezone("Etc/UTC").toString();
    };
    ZonedDate2.prototype[Symbol.toPrimitive] = function(hint) {
      if (hint === "string" || hint === "default") {
        return this.toString();
      }
      return this.V.getTime();
    };
    ZonedDate2.prototype.valueOf = function() {
      return this.getTime();
    };
    ZonedDate2.prototype.getVarDate = function() {
      throw new Error("Not implemented.");
    };
    ZonedDate2.prototype.format = function(_2) {
      throw new Error("Not implemented.");
    };
    ZonedDate2.prototype.formatUTC = function(_2) {
      throw new Error("Not implemented.");
    };
    return ZonedDate2;
  }()
);

// node_modules/@progress/kendo-date-math/dist/es/week-in-year.js
var moveDateToWeekStart = function(date2, weekStartDay) {
  if (weekStartDay !== Day.Monday) {
    return addDays(prevDayOfWeek(date2, weekStartDay), 4);
  }
  return addDays(date2, 4 - (date2.getDay() || 7));
};
var calcWeekInYear = function(date2, weekStartDay) {
  var firstWeekInYear = createDate(date2.getFullYear(), 0, 1, -6);
  var newDate = moveDateToWeekStart(date2, weekStartDay);
  var diffInMS = newDate.getTime() - firstWeekInYear.getTime();
  var days = Math.floor(diffInMS / MS_PER_DAY);
  return 1 + Math.floor(days / 7);
};
var weekInYear = function(date2, weekStartDay) {
  if (weekStartDay === void 0) {
    weekStartDay = Day.Monday;
  }
  date2 = getDate(date2);
  var prevWeekDate = addDays(date2, -7);
  var nextWeekDate = addDays(date2, 7);
  var weekNumber = calcWeekInYear(date2, weekStartDay);
  if (weekNumber === 0) {
    return calcWeekInYear(prevWeekDate, weekStartDay) + 1;
  }
  if (weekNumber === 53 && calcWeekInYear(nextWeekDate, weekStartDay) > 1) {
    return 1;
  }
  return weekNumber;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/common/utils.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var last = function(arr) {
  return arr[arr.length - 1];
};
var toFlatGroupResources = function(resources, index, depth, parents) {
  if (index === void 0) {
    index = 0;
  }
  if (depth === void 0) {
    depth = 0;
  }
  if (parents === void 0) {
    parents = [];
  }
  if (resources.length <= index) {
    return [parents];
  }
  var result = [];
  resources[index].data.map(function(item) {
    result.push.apply(result, toFlatGroupResources(resources, index + 1, depth + 1, __spreadArray(__spreadArray([], parents, true), [__assign(__assign({}, item), { field: resources[index].field, valueField: resources[index].valueField, colorField: resources[index].colorField, multiple: resources[index].multiple })], false)));
  });
  return result;
};
var calculateEventRect = function(slots, vertical) {
  if (slots.length < 1 || !slots[0].n || !slots[0].n.current) {
    return null;
  }
  var firstSlotRect = getRect(slots[0].n.current.element);
  var rect = {
    top: firstSlotRect.top,
    left: firstSlotRect.left,
    right: firstSlotRect.right,
    width: firstSlotRect.width,
    height: 0
  };
  slots.forEach(function(slot) {
    if (!slot.n.current) {
      return;
    }
    var height = getRect(slot.n.current.element).height;
    if (height !== void 0) {
      if (!vertical && height >= rect.height) {
        rect.height = height;
      } else {
        rect.height += height;
      }
    }
  });
  return rect;
};
function toGroupResources(group2, resources) {
  var result = [];
  if (!resources || !resources.length) {
    return result;
  }
  if (group2 && group2.resources && group2.resources.length) {
    var groups_1 = group2.resources;
    var _loop_1 = function(idx2) {
      var resource = resources.find(function(r) {
        return r.name === groups_1[idx2];
      });
      result.push(resource);
    };
    for (var idx = 0; idx < groups_1.length; idx++) {
      _loop_1(idx);
    }
  }
  return result;
}
function addUTCDays(date2, offset4) {
  var newDate = new Date(date2.getTime());
  newDate.setUTCDate(newDate.getUTCDate() + offset4);
  return newDate;
}
var expandResources = function(resources, lastIndex) {
  if (lastIndex === void 0) {
    lastIndex = resources.length - 1;
  }
  var currentLastIndex = Math.max(0, lastIndex);
  var data2 = [];
  if (!(resources && resources.length)) {
    resources = [{}];
  }
  var lastData = (resources[currentLastIndex].data || []).map(function(d) {
    return __assign(__assign({}, d), { text: d[resources[currentLastIndex].textField] });
  }) || [];
  var length = lastData.length;
  var count2 = 1;
  for (var idx = 0; idx <= currentLastIndex; idx++) {
    count2 *= (resources[idx].data || []).length || 1;
  }
  for (var idx = 0; idx < count2; idx++) {
    if (lastData[idx % length]) {
      data2.push(lastData[idx % length]);
    }
  }
  return data2;
};
var resourcesByIndex = function(index, taskResources, spans) {
  var resources = taskResources;
  var result = [];
  var currentIndex = index;
  for (var idx = 0; idx < resources.length; idx++) {
    var data2 = resources[idx].data || [];
    var dataIdx = Math.floor(currentIndex / spans[idx]);
    result.push(data2[dataIdx]);
    currentIndex -= dataIdx * spans[idx];
  }
  return result;
};
var getRect = function(el) {
  if (!el) {
    return { top: 0, left: 0, width: 0, height: 0, right: 0 };
  }
  var top = el.offsetTop;
  var left2 = el.offsetLeft;
  var right2 = el.offsetParent ? el.offsetParent.offsetWidth - (el.offsetLeft + el.offsetWidth) : 0;
  var width = el.offsetWidth;
  var height = el.offsetHeight;
  return {
    top,
    left: left2,
    right: right2,
    width,
    height
  };
};
var getPadding = function(el, horizontal) {
  if (horizontal === void 0) {
    horizontal = false;
  }
  return parseFloat(window.getComputedStyle(el)[horizontal ? "paddingLeft" : "paddingTop"] || "0") + parseFloat(window.getComputedStyle(el)[horizontal ? "paddingRight" : "paddingBottom"] || "0");
};
var getBorders = function(el, horizontal) {
  if (horizontal === void 0) {
    horizontal = false;
  }
  return parseFloat(window.getComputedStyle(el)[horizontal ? "borderLeftWidth" : "borderTopWidth"] || "0") + parseFloat(window.getComputedStyle(el)[horizontal ? "borderRightWidth" : "borderBottomWidth"] || "0");
};
var setRect = function(el, rect, minHeightInsteadOfHeight) {
  if (minHeightInsteadOfHeight === void 0) {
    minHeightInsteadOfHeight = false;
  }
  if (!el) {
    return;
  }
  if (rect.top !== void 0) {
    el.style.top = "".concat(rect.top, "px");
  }
  if (rect.left !== void 0) {
    el.style.left = "".concat(rect.left, "px");
  }
  if (rect.width !== void 0) {
    el.style.width = "".concat(rect.width, "px");
  }
  if (rect.height !== void 0 && !minHeightInsteadOfHeight) {
    el.style.height = typeof rect.height === "number" ? "".concat(rect.height, "px") : rect.height;
  }
  if (minHeightInsteadOfHeight) {
    el.style.minHeight = rect.height !== void 0 && rect.height > 0 ? "".concat(rect.height, "px") : "";
  }
};

// node_modules/@progress/kendo-react-common/dist/es/contexts/ZIndexContext.js
var React2 = __toESM(require_react());
var ZIndexContext = React2.createContext(0);
var useZIndexContext = function() {
  return React2.useContext(ZIndexContext);
};
ZIndexContext.displayName = "KendoReactZIndexContext";

// node_modules/@progress/kendo-react-common/dist/es/browser-support.service.js
var getDocument = function() {
  return typeof document !== "undefined" ? document : {};
};
var BrowserSupportService = (
  /** @class */
  function() {
    function BrowserSupportService2() {
      this.scrollbar = 0;
    }
    Object.defineProperty(BrowserSupportService2.prototype, "scrollbarWidth", {
      get: function() {
        var document2 = getDocument();
        if (!this.scrollbar && document2 && document2.createElement) {
          var div = document2.createElement("div");
          div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
          div.innerHTML = "&nbsp;";
          document2.body.appendChild(div);
          this.scrollbar = div.offsetWidth - div.scrollWidth;
          document2.body.removeChild(div);
        }
        return this.scrollbar;
      },
      enumerable: false,
      configurable: true
    });
    return BrowserSupportService2;
  }()
);

// node_modules/@progress/kendo-react-common/dist/es/canUseDOM.js
var canUseDOM = Boolean(
  // from fbjs
  typeof window !== "undefined" && window.document && window.document.createElement
);

// node_modules/@progress/kendo-react-common/dist/es/classNames.js
var classNames = function() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  var result = {};
  var addLeafKeys = function(arg) {
    return typeof arg === "object" ? Object.keys(arg).forEach(function(key) {
      result[key] = arg[key];
    }) : result[arg] = true;
  };
  ;
  var addKeys = function(list) {
    return list.filter(function(arg) {
      return arg !== true && !!arg;
    }).map(function(arg) {
      return Array.isArray(arg) ? addKeys(arg) : addLeafKeys(arg);
    });
  };
  ;
  addKeys(args);
  return Object.keys(result).map(function(key) {
    return result[key] && key || null;
  }).filter(function(el) {
    return el !== null;
  }).join(" ");
};

// node_modules/@progress/kendo-react-common/dist/es/clone.js
var React3 = __toESM(require_react());
var cloneDate2 = function(date2) {
  return date2 ? new Date(date2.getTime()) : null;
};
function clone(obj) {
  var result = {};
  cloneObject(obj, result);
  return result;
}
function cloneObject(obj, result) {
  for (var field in obj) {
    if (obj.hasOwnProperty(field)) {
      var value2 = obj[field];
      result[field] = cloneValue(value2, result[field]);
    }
  }
}
function cloneValue(value2, nextValue) {
  if (Array.isArray(value2)) {
    return cloneArray(value2);
  } else if (value2 instanceof Date) {
    return cloneDate2(value2);
  } else if (React3.isValidElement(value2)) {
    return React3.cloneElement(value2, value2.props);
  } else if (value2 && typeof value2 === "object") {
    var newNextValue = nextValue || {};
    cloneObject(value2, newNextValue);
    return newNextValue;
  } else {
    return value2;
  }
}
function cloneArray(array7) {
  return array7.map(function(value2) {
    return cloneValue(value2, void 0);
  });
}

// node_modules/@progress/kendo-react-common/dist/es/focus.js
var focusFirstFocusableChild = function(target) {
  if (target) {
    if ((target instanceof HTMLInputElement || target.tabIndex !== -1) && target.focus) {
      target.focus();
      return;
    }
    var element6 = target.querySelector('input, [tabindex]:not([tabindex="-1"])');
    if (element6 && element6.focus) {
      element6.focus();
    }
  }
};

// node_modules/@progress/kendo-react-common/dist/es/getTabIndex.js
var DISABLED_TABINDEX = -1;
var DEFAULT_TABINDEX = 0;
var getTabIndex = function(tabIndex, disabled, useDefaultTabIndexWhenDisabled) {
  var parsedTabIndex = typeof tabIndex === "string" ? parseInt(tabIndex, void 0) : tabIndex;
  if (parsedTabIndex === NaN) {
    return void 0;
  }
  return parsedTabIndex !== void 0 ? parsedTabIndex : disabled ? useDefaultTabIndexWhenDisabled ? void 0 : DISABLED_TABINDEX : DEFAULT_TABINDEX;
};

// node_modules/@progress/kendo-react-common/dist/es/constants/index.js
var FIELD_REGEX = /\[(?:(\d+)|['"](.*?)['"])\]|((?:(?!\[.*?\]|\.).)+)/g;

// node_modules/@progress/kendo-react-common/dist/es/fieldList.js
function fieldList(field) {
  var fields = [];
  field.replace(FIELD_REGEX, function(_match, index, indexAccessor, fieldName) {
    fields.push(index !== void 0 ? index : indexAccessor || fieldName);
  });
  return fields;
}

// node_modules/@progress/kendo-react-common/dist/es/getter.js
var getterCache = {};
getterCache.undefined = function() {
  return void 0;
};
function getter(field) {
  if (getterCache[field]) {
    return getterCache[field];
  }
  var fields = fieldList(field);
  getterCache[field] = function(obj) {
    var result = obj;
    for (var idx = 0; idx < fields.length && result; idx++) {
      result = result[fields[idx]];
    }
    return result;
  };
  return getterCache[field];
}

// node_modules/@progress/kendo-react-common/dist/es/guid.js
var guid = function() {
  var id = "";
  var i;
  var random;
  for (i = 0; i < 32; i++) {
    random = Math.random() * 16 | 0;
    if (i === 8 || i === 12 || i === 16 || i === 20) {
      id += "-";
    }
    id += (i === 12 ? 4 : i === 16 ? random & 3 | 8 : random).toString(16);
  }
  return id;
};

// node_modules/@progress/kendo-react-common/dist/es/keys.js
var Keys = {
  backspace: 8,
  tab: 9,
  enter: 13,
  shift: 16,
  esc: 27,
  space: 32,
  pageUp: 33,
  pageDown: 34,
  end: 35,
  home: 36,
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  delete: 46
};

// node_modules/@progress/kendo-react-common/dist/es/noop.js
var noop = function() {
};

// node_modules/@progress/kendo-react-common/dist/es/scrollbarWidth.js
var getScrollbarWidth = function() {
  if (!canUseDOM || !document.body) {
    return false;
  }
  var scrollbarWidth2 = new BrowserSupportService().scrollbarWidth;
  return scrollbarWidth2;
};
var setScrollbarWidth = function() {
  if (!canUseDOM || !document.body) {
    return false;
  }
  var scrollbarWidth2 = new BrowserSupportService().scrollbarWidth;
  document.body.style.setProperty("--kendo-scrollbar-width", "".concat(scrollbarWidth2, "px"));
};

// node_modules/@progress/kendo-react-common/dist/es/setter.js
var setterCache = {};
setterCache.undefined = function(obj) {
  return obj;
};
var defaultValue = function(nextField, options2) {
  return options2 && options2.arrays && !isNaN(Number(nextField)) ? [] : {};
};
function setter(field) {
  if (setterCache[field]) {
    return setterCache[field];
  }
  var fields = fieldList(field);
  setterCache[field] = function(obj, value2, options2) {
    var root = obj;
    var depth = fields.length - 1;
    for (var idx = 0; idx < depth && root; idx++) {
      root = root[fields[idx]] = root[fields[idx]] || defaultValue(fields[idx + 1], options2);
    }
    root[fields[depth]] = value2;
  };
  return setterCache[field];
}

// node_modules/@progress/kendo-react-common/dist/es/treeDataOperations.js
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function children(item, subItemsField, subItems) {
  var _a14;
  if (subItems) {
    return __assign2(__assign2({}, item), (_a14 = {}, _a14[subItemsField] = subItems.length ? __spreadArray2([], subItems, true) : void 0, _a14));
  } else {
    return item && item[subItemsField] ? __spreadArray2([], item[subItemsField], true) : [];
  }
}
function mapItem(dataItem, subItemsField, callbackfn) {
  if (dataItem[subItemsField]) {
    var subItems = children(dataItem, subItemsField).map(function(child) {
      return mapItem(child, subItemsField, callbackfn);
    });
    return callbackfn(children(dataItem, subItemsField, subItems));
  }
  return callbackfn(dataItem);
}
var mapTree = function(tree, subItemsField, callback) {
  return __spreadArray2([], tree.map(function(item) {
    return mapItem(item, subItemsField, callback);
  }), true);
};
var mapTreeItem = function(tree, level, subItemsField, callback) {
  var curData = tree;
  var parentNodes = [];
  for (var i = 0; i < level.length; i++) {
    curData = curData[level[i]];
    curData = Array.isArray(curData) ? curData : curData[subItemsField];
    parentNodes.push(curData);
  }
  var parent = parentNodes.length > 1 ? parentNodes[parentNodes.length - 2] : tree;
  var newItemIndex = level[level.length - 1];
  var newItem = callback(parent[newItemIndex]);
  parent.splice(newItemIndex, 1, newItem);
};
var extendDataItem = function(item, subItemsField, propsToExtend) {
  var _a14;
  return Object.assign({}, item, item[subItemsField] ? (_a14 = {}, _a14[subItemsField] = item[subItemsField].slice(), _a14) : {}, propsToExtend || {});
};
var getItemPath = function(tree, level, subItemsField) {
  var nodes = [];
  var itemLevel = __spreadArray2([], level, true);
  if (itemLevel.length) {
    var element6 = tree[itemLevel.shift() || 0];
    nodes.push(element6);
    while (itemLevel.length && subItemsField) {
      element6 = element6[subItemsField][itemLevel.shift() || 0];
      nodes.push(element6);
    }
  }
  return nodes;
};

// node_modules/@progress/kendo-licensing/dist/index-esm.js
var index_esm_exports = {};
__export(index_esm_exports, {
  setScriptKey: () => setScriptKey,
  validatePackage: () => validatePackage
});
var _0x3f5f = ["tMjXqw8=", "ALvUuLu=", "DMvYC2LVBG==", "B2jQzwn0", "zNvUy3rPB24=", "AgfZ", "CgfYC2u=", "se52y2S=", "CeTOB0C=", "Ag9dwha=", "ChjVzhvJDe5HBwu=", "y29Kzq==", "BgDyrK4=", "zgf0yq==", "DgLTzxn0yw1W", "vgHLihbYB2r1y3qGAxmGBM90igLUy2X1zgvKigLUihrOzsbSAwnLBNnLlGO=", "vevpChm=", "CgfJA2fNzu5HBwu=", "C2v0", "CNzVquK=", "DhLWzq==", "rK9ht3q=", "A29lt3C=", "C2nYAxb0s2v5", "D2fYBG==", "lcb0AguGCgfJA2fNzsb3yxmGChvIBgLZAgvKig9Uia==", "tM8GBgLJzw5ZzsbMB3vUzc4k", "Dw5KzwzPBMvK", "zxHWAxj5rgf0zq==", "qxPWD00=", "DwD0D1a=", "ww91CIbSAwnLBNnLigv4CgLYzwqGB24G", "BgvUz3rO", "zeDetM8=", "rgTIvfi=", "zg9JC1vYBa==", "ChjVzhvJDenVzgvZ", "Dg9mB2nHBgvtDhjPBMC=", "q3jhuhy=", "D0f4tMu=", "q09jChO=", "z2v0", "BgLJzw5Zzuv4CgLYyxrPB25eyxrL", "BuTXu3e=", "ChjVzhvJDhm=", "DfrNreS=", "C29YDa==", "zMLUza==", "u2vLia==", "u2XdEfO=", "uhjVz3jLC3mG", "z3jVDxa=", "BMfTzq==", "CejABNy=", "BgLJzw5ZAw5Nrg9JC1vYBa==", "igzVCIbTB3jLigLUzM9YBwf0Aw9UlGO=", "y29Uy2f0", "ChvIBgLZAerHDgu=", "z3jVDxbfBMq=", "CK1fru8=", "uwzXvuK=", "tgLJzw5ZzsbHy3rPDMf0Aw9UigzHAwXLzcbMB3iG"];
(function(_0x3ffcd8, _0x3f5fc6) {
  var _0x4fe1c2 = function(_0x228463) {
    while (--_0x228463) {
      _0x3ffcd8["push"](_0x3ffcd8["shift"]());
    }
  };
  _0x4fe1c2(++_0x3f5fc6);
})(_0x3f5f, 369);
var _0x4fe1 = function(_0x3ffcd8, _0x3f5fc6) {
  _0x3ffcd8 = _0x3ffcd8 - 0;
  var _0x4fe1c2 = _0x3f5f[_0x3ffcd8];
  if (_0x4fe1["rlqmyH"] === void 0) {
    var _0x228463 = function(_0x31bd4d) {
      var _0x1ae84e = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/=", _0x18c0a1 = String(_0x31bd4d)["replace"](/=+$/, "");
      var _0x34f60f = "";
      for (var _0x2f90c2 = 0, _0x1e97d4, _0x3ffa722, _0x161b802 = 0; _0x3ffa722 = _0x18c0a1["charAt"](_0x161b802++); ~_0x3ffa722 && (_0x1e97d4 = _0x2f90c2 % 4 ? _0x1e97d4 * 64 + _0x3ffa722 : _0x3ffa722, _0x2f90c2++ % 4) ? _0x34f60f += String["fromCharCode"](255 & _0x1e97d4 >> (-2 * _0x2f90c2 & 6)) : 0) {
        _0x3ffa722 = _0x1ae84e["indexOf"](_0x3ffa722);
      }
      return _0x34f60f;
    };
    _0x4fe1["tDWcmv"] = function(_0x54b76b) {
      var _0x446133 = _0x228463(_0x54b76b);
      var _0x286684 = [];
      for (var _0x34c59d2 = 0, _0x3b51a62 = _0x446133["length"]; _0x34c59d2 < _0x3b51a62; _0x34c59d2++) {
        _0x286684 += "%" + ("00" + _0x446133["charCodeAt"](_0x34c59d2)["toString"](16))["slice"](-2);
      }
      return decodeURIComponent(_0x286684);
    }, _0x4fe1["GoSChA"] = {}, _0x4fe1["rlqmyH"] = !![];
  }
  var _0x2bf482 = _0x4fe1["GoSChA"][_0x3ffcd8];
  return _0x2bf482 === void 0 ? (_0x4fe1c2 = _0x4fe1["tDWcmv"](_0x4fe1c2), _0x4fe1["GoSChA"][_0x3ffcd8] = _0x4fe1c2) : _0x4fe1c2 = _0x2bf482, _0x4fe1c2;
};
var context = { data: '  {"timestamp":1685367679,"products":[{"trial":false,"code":"KENDOUIREACT","licenseExpirationDate":1683900000},{"trial":false,"code":"KENDOUICOMPLETE","licenseExpirationDate":1683900000},{"trial":false,"code":"KENDOUIVUE","licenseExpirationDate":1683900000},{"trial":false,"code":"KENDOUIANGULAR","licenseExpirationDate":1683900000}],"integrity":"OcjzhrYMDZUTTdxCkrRxUotrYHw="}  ' }, cache = /* @__PURE__ */ new Map();
function setScriptKey(_0x332c3f) {
}
function validatePackage(_0x288448) {
  if (cache[_0x4fe1("0x8")](_0x288448[_0x4fe1("0x37")])) {
    if (_0x4fe1("0x19") === _0x4fe1("0x19"))
      return cache[_0x4fe1("0x2c")](_0x288448[_0x4fe1("0x37")]);
    else {
      let _0x1d633f = function() {
        _0x47c5ba = { "type": 1, "packageName": _0x404fc4, "docsUrl": _0x35fad0[_0x4fe1("0x39")] };
      };
    }
  }
  var _0x1dbcb5 = _0x288448[_0x4fe1("0x5")] ? " v" + _0x288448[_0x4fe1("0x5")] : "", _0x36c009 = _0x288448[_0x4fe1("0x37")] + _0x1dbcb5, _0x41f400 = JSON[_0x4fe1("0x9")](context[_0x4fe1("0x10")]), _0x3fe82f = !_0x41f400[_0x4fe1("0x1a")] && !_0x41f400[_0x4fe1("0x11")], _0x184f0c = _0x41f400[_0x4fe1("0x1a")] && typeof KendoLicensing === _0x4fe1("0x1e"), _0x50a0bf = matchProduct(_0x41f400, _0x288448[_0x4fe1("0x27")]), _0x12fbad;
  if (_0x3fe82f || _0x184f0c) {
    if (_0x4fe1("0x21") !== _0x4fe1("0x13"))
      _0x12fbad = { "type": 0, "packageName": _0x36c009, "docsUrl": _0x288448[_0x4fe1("0x39")] };
    else {
      let _0x10e197 = function() {
        _0x26dcf1 = { "type": 2, "packageName": _0x4a8fb8, "publishDate": _0x394bc9(_0x20a329[_0x4fe1("0x3c")]), "expiryDate": _0x2076a8(_0x4c8acd[_0x4fe1("0x2d")]), "docsUrl": _0x2c90b5[_0x4fe1("0x39")] };
      };
    }
  } else {
    if (_0x4fe1("0x38") !== _0x4fe1("0x0")) {
      if (!_0x50a0bf) {
        if (_0x4fe1("0xf") !== _0x4fe1("0xf")) {
          let _0x40dac7 = function() {
            return _0x2b7e21[_0x4fe1("0x2d")] - _0x283ffd[_0x4fe1("0x2d")];
          };
        } else
          _0x12fbad = { "type": 1, "packageName": _0x36c009, "docsUrl": _0x288448[_0x4fe1("0x39")] };
      } else {
        if (_0x4fe1("0x34") !== _0x4fe1("0x34")) {
          let _0x335a37 = function() {
            _0x451252 += _0x4fe1("0x22")[_0x4fe1("0x3b")](_0x5b4393[_0x4fe1("0x1f")][_0x4fe1("0x28")](), _0x4fe1("0x1c"))[_0x4fe1("0x3b")](_0x427d68[_0x4fe1("0x3c")][_0x4fe1("0x28")](), ".\n");
          };
        } else {
          if (_0x50a0bf[_0x4fe1("0x2d")] < _0x288448[_0x4fe1("0x3c")]) {
            if (_0x4fe1("0x25") !== _0x4fe1("0xc"))
              _0x12fbad = { "type": 2, "packageName": _0x36c009, "publishDate": parseDate(_0x288448[_0x4fe1("0x3c")]), "expiryDate": parseDate(_0x50a0bf[_0x4fe1("0x2d")]), "docsUrl": _0x288448[_0x4fe1("0x39")] };
            else {
              let _0x5258b7 = function() {
                _0x1bdee6[_0x4fe1("0x36")](_0x1b76ca);
              };
            }
          }
        }
      }
    } else {
      let _0x280f77 = function() {
        _0x38b037[_0x4fe1("0x2d")] < _0x617673[_0x4fe1("0x3c")] && (_0x189610 = { "type": 2, "packageName": _0x44ed7b, "publishDate": _0x54a628(_0x577a38[_0x4fe1("0x3c")]), "expiryDate": _0x16dcb4(_0x23f6ce[_0x4fe1("0x2d")]), "docsUrl": _0x429372[_0x4fe1("0x39")] });
      };
    }
  }
  if (_0x12fbad && typeof console === _0x4fe1("0x6")) {
    if (_0x4fe1("0x20") !== _0x4fe1("0x20")) {
      let _0x5d228a = function() {
        var _0x4230b5 = _0x103455[_0x4fe1("0x2f")];
        if (!_0x4230b5 || !_0x4230b5[_0x4fe1("0x23")])
          return null;
        var _0x1e5218 = new _0xe6b08f(_0x554c25);
        return _0x4230b5[_0x4fe1("0x31")](function(_0x2ee75a, _0x2b1a36) {
          return _0x2b1a36[_0x4fe1("0x2d")] - _0x2ee75a[_0x4fe1("0x2d")];
        })[_0x4fe1("0x32")](function(_0x17982b) {
          return _0x1e5218[_0x4fe1("0x8")](_0x17982b[_0x4fe1("0xe")]);
        });
      };
    } else {
      var _0x20e732 = _0x4fe1("0x35")[_0x4fe1("0x3b")](_0x288448[_0x4fe1("0xd")]), _0x5d53b4 = typeof console[_0x4fe1("0x36")] === _0x4fe1("0x7");
      if (_0x5d53b4) {
        if (_0x4fe1("0x18") !== _0x4fe1("0x24"))
          console[_0x4fe1("0x36")](_0x20e732);
        else {
          let _0x8fc6c0 = function() {
            var _0x333192 = _0x4fe1("0x2")[_0x4fe1("0x3b")](_0x532507[_0x4fe1("0x14")], "\n");
            if (_0x2d53ef[_0x4fe1("0x17")] === 2)
              _0x333192 += _0x4fe1("0x22")[_0x4fe1("0x3b")](_0x4ebbe6[_0x4fe1("0x1f")][_0x4fe1("0x28")](), _0x4fe1("0x1c"))[_0x4fe1("0x3b")](_0x4c2c15[_0x4fe1("0x3c")][_0x4fe1("0x28")](), ".\n");
            else {
              if (_0x6a6452[_0x4fe1("0x17")] === 0)
                _0x333192 += _0x4fe1("0x1d");
              else
                _0x1b6fe2[_0x4fe1("0x17")] === 1 && (_0x333192 += _0x4fe1("0x12"));
            }
            return _0x333192 += _0x4fe1("0x33")[_0x4fe1("0x3b")](_0x585a35[_0x4fe1("0x26")], _0x4fe1("0x3a")), _0x333192;
          };
        }
      } else {
        if (_0x4fe1("0x4") === _0x4fe1("0x4"))
          console[_0x4fe1("0x1b")](_0x20e732);
        else {
          let _0x32c891 = function() {
            return new _0x5c247c(_0x332fe8 * 1e3);
          };
        }
      }
      console[_0x4fe1("0x1b")](formatError(_0x12fbad));
      if (_0x5d53b4) {
        if (_0x4fe1("0x2b") === _0x4fe1("0x2b"))
          console[_0x4fe1("0x3d")]();
        else {
          let _0x145e8c = function() {
            return _0x2a692e[_0x4fe1("0x8")](_0x32480f[_0x4fe1("0xe")]);
          };
        }
      }
    }
  }
  var _0x3f9e87 = !_0x12fbad;
  return cache[_0x4fe1("0x15")](_0x288448[_0x4fe1("0x37")], _0x3f9e87), _0x3f9e87;
}
function formatError(_0x5996d0) {
  var _0x369fe1 = _0x4fe1("0x2")[_0x4fe1("0x3b")](_0x5996d0[_0x4fe1("0x14")], "\n");
  if (_0x5996d0[_0x4fe1("0x17")] === 2) {
    if (_0x4fe1("0xb") !== _0x4fe1("0xb")) {
      let _0x42b4e8 = function() {
        _0x57e852 += _0x4fe1("0x12");
      };
    } else
      _0x369fe1 += _0x4fe1("0x22")[_0x4fe1("0x3b")](_0x5996d0[_0x4fe1("0x1f")][_0x4fe1("0x28")](), _0x4fe1("0x1c"))[_0x4fe1("0x3b")](_0x5996d0[_0x4fe1("0x3c")][_0x4fe1("0x28")](), ".\n");
  } else {
    if (_0x5996d0[_0x4fe1("0x17")] === 0) {
      if (_0x4fe1("0x2e") !== _0x4fe1("0x2e")) {
        let _0x170217 = function() {
          return null;
        };
      } else
        _0x369fe1 += _0x4fe1("0x1d");
    } else {
      if (_0x5996d0[_0x4fe1("0x17")] === 1) {
        if (_0x4fe1("0x2a") === _0x4fe1("0x2a"))
          _0x369fe1 += _0x4fe1("0x12");
        else {
          let _0x589fb9 = function() {
            return _0x3ffa72[_0x4fe1("0x2c")](_0x161b80[_0x4fe1("0x37")]);
          };
        }
      }
    }
  }
  return _0x369fe1 += _0x4fe1("0x33")[_0x4fe1("0x3b")](_0x5996d0[_0x4fe1("0x26")], _0x4fe1("0x3a")), _0x369fe1;
}
function matchProduct(_0x2fe56c, _0x1db63e) {
  var _0x48173a = _0x2fe56c[_0x4fe1("0x2f")];
  if (!_0x48173a || !_0x48173a[_0x4fe1("0x23")]) {
    if (_0x4fe1("0x29") !== _0x4fe1("0x16"))
      return null;
    else {
      let _0x5d3cfe = function() {
        _0x3e8f7b += _0x4fe1("0x1d");
      };
    }
  }
  var _0x1dd0f6 = new Set(_0x1db63e);
  return _0x48173a[_0x4fe1("0x31")](function(_0xd163b7, _0x23878c) {
    if (_0x4fe1("0x30") === _0x4fe1("0x3")) {
      let _0x134c08 = function() {
        !_0xbcc2ed ? _0xb3f5b6 = { "type": 1, "packageName": _0x495d13, "docsUrl": _0x4dead0[_0x4fe1("0x39")] } : _0xa8b7ca[_0x4fe1("0x2d")] < _0x177345[_0x4fe1("0x3c")] && (_0x2625da = { "type": 2, "packageName": _0x5e46dc, "publishDate": _0x10f6c5(_0x357f8a[_0x4fe1("0x3c")]), "expiryDate": _0x70483f(_0x32abbc[_0x4fe1("0x2d")]), "docsUrl": _0x4a4999[_0x4fe1("0x39")] });
      };
    } else
      return _0x23878c[_0x4fe1("0x2d")] - _0xd163b7[_0x4fe1("0x2d")];
  })[_0x4fe1("0x32")](function(_0x1d8f83) {
    if (_0x4fe1("0xa") === _0x4fe1("0x1")) {
      let _0x428ed6 = function() {
        _0x34c59d = { "type": 0, "packageName": _0x3b51a6, "docsUrl": _0x3d18c6[_0x4fe1("0x39")] };
      };
    } else
      return _0x1dd0f6[_0x4fe1("0x8")](_0x1d8f83[_0x4fe1("0xe")]);
  });
}
function parseDate(_0x9d6621) {
  return new Date(_0x9d6621 * 1e3);
}

// node_modules/@progress/kendo-react-common/dist/es/validate-package.js
function validatePackage2(packageMetadata14) {
  if (typeof index_esm_exports !== "undefined") {
    validatePackage(packageMetadata14);
  } else {
    var message = "License activation failed for ".concat(packageMetadata14.name, "\n");
    message += "The @progress/kendo-licensing script is not loaded.\n";
    message += "See ".concat(packageMetadata14.licensingDocsUrl, " for more information.\n");
    console.warn(message);
  }
}

// node_modules/@progress/kendo-react-common/dist/es/events/dispatchEvent.js
function dispatchEvent(eventHandler, dispatchedEvent, target, eventData) {
  if (eventHandler) {
    var eventBaseData = {
      syntheticEvent: dispatchedEvent,
      nativeEvent: dispatchedEvent.nativeEvent,
      target
    };
    eventHandler.call(void 0, Object.assign(eventBaseData, eventData));
  }
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useAsyncFocusBlur.js
var React4 = __toESM(require_react());
var __spreadArray3 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
function useAsyncFocusBlur(_a14) {
  var onFocus = _a14.onFocus, onBlur = _a14.onBlur, onSyncFocus = _a14.onSyncFocus, onSyncBlur = _a14.onSyncBlur;
  var focused = React4.useRef(false);
  var tick = React4.useRef(0);
  var nextTick = React4.useCallback(function(f) {
    clearTimeout(tick.current);
    tick.current = window.setTimeout(function() {
      return f();
    });
  }, [tick]);
  var handleFocus = React4.useCallback(function() {
    var event2 = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      event2[_i] = arguments[_i];
    }
    clearTimeout(tick.current);
    if (onSyncFocus) {
      onSyncFocus.call(void 0, event2[0]);
    }
    if (focused.current) {
      return;
    }
    ;
    focused.current = true;
    if (onFocus) {
      onFocus.call.apply(onFocus, __spreadArray3([void 0], event2, false));
    }
  }, [focused, onFocus, onSyncFocus]);
  var handleBlur = React4.useCallback(function() {
    var event2 = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      event2[_i] = arguments[_i];
    }
    if (onSyncBlur) {
      onSyncBlur.call(void 0, event2[0]);
    }
    nextTick(function() {
      if (!focused.current) {
        return;
      }
      if (onBlur) {
        focused.current = false;
        onBlur.call.apply(onBlur, __spreadArray3([void 0], event2, false));
      }
    });
  }, [focused, nextTick, onBlur, onSyncBlur]);
  React4.useEffect(function() {
    return function() {
      clearTimeout(tick.current);
    };
  }, []);
  return {
    onFocus: handleFocus,
    onBlur: handleBlur
  };
}

// node_modules/@progress/kendo-react-common/dist/es/hocs/AsyncFocusBlur.js
var React5 = __toESM(require_react());
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var AsyncFocusBlur = function(_a14) {
  var children2 = _a14.children, onFocus = _a14.onFocus, onBlur = _a14.onBlur, onSyncFocus = _a14.onSyncFocus, onSyncBlur = _a14.onSyncBlur;
  var args = useAsyncFocusBlur({ onFocus, onBlur, onSyncFocus, onSyncBlur });
  return React5.createElement(React5.Fragment, null, children2.call(void 0, __assign3({}, args)));
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/usePropsContext.js
var React6 = __toESM(require_react());
var usePropsContext = function(context2, props) {
  var contextPropsCallback = React6.useContext(context2);
  var contextProps = contextPropsCallback(props);
  return contextProps;
};

// node_modules/@progress/kendo-react-common/dist/es/hocs/withPropsContext.js
var React7 = __toESM(require_react());
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var createPropsContext = function() {
  return React7.createContext(function(props) {
    return props;
  });
};
var withPropsContext = function(context2, Component64) {
  return React7.forwardRef(function(props, ref) {
    var contextProps = usePropsContext(context2, props);
    return React7.createElement(Component64, __assign4({}, contextProps, { ref }));
  });
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDir.js
var React8 = __toESM(require_react());
function useDir(elementRef, initialDir, args) {
  var _a14 = React8.useState(initialDir), dir = _a14[0], setDir = _a14[1];
  React8.useEffect(function() {
    if (!dir && window && elementRef.current) {
      var rtlCandidate = window.getComputedStyle(elementRef.current).direction;
      if (rtlCandidate) {
        setDir(rtlCandidate);
      }
    }
  }, args);
  return dir;
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useRtl.js
var React9 = __toESM(require_react());
function useRtl(elementRef, initialDir, args) {
  var _a14 = React9.useState(initialDir), dir = _a14[0], setDir = _a14[1];
  React9.useEffect(function() {
    if (!dir && window && elementRef.current) {
      var rtlCandidate = window.getComputedStyle(elementRef.current).direction;
      if (rtlCandidate) {
        setDir(rtlCandidate);
      }
    }
  }, args);
  return dir;
}

// node_modules/@progress/kendo-react-common/dist/es/hooks/useMouse.js
var React10 = __toESM(require_react());
var useMouse = function(props, target, extend) {
  if (extend === void 0) {
    extend = {};
  }
  var handleMouseDown = React10.useCallback(function(event2) {
    if (extend.onMouseDown) {
      extend.onMouseDown.call(void 0, event2);
    }
    if (props.onMouseDown) {
      props.onMouseDown.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseDown, props.onMouseDown, target]);
  var handleMouseUp = React10.useCallback(function(event2) {
    if (extend.onMouseUp) {
      extend.onMouseUp.call(void 0, event2);
    }
    if (props.onMouseUp) {
      props.onMouseUp.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseUp, props.onMouseUp, target]);
  var handleClick = React10.useCallback(function(event2) {
    if (extend.onClick) {
      extend.onClick.call(void 0, event2);
    }
    if (props.onClick) {
      props.onClick.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onClick, props.onClick, target]);
  var handleDoubleClick = React10.useCallback(function(event2) {
    if (extend.onDoubleClick) {
      extend.onDoubleClick.call(void 0, event2);
    }
    if (props.onDoubleClick) {
      props.onDoubleClick.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onDoubleClick, props.onDoubleClick, target]);
  var handleMouseEnter = React10.useCallback(function(event2) {
    if (extend.onMouseEnter) {
      extend.onMouseEnter.call(void 0, event2);
    }
    if (props.onMouseEnter) {
      props.onMouseEnter.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseEnter, props.onMouseEnter, target]);
  var handleMouseLeave = React10.useCallback(function(event2) {
    if (extend.onMouseLeave) {
      extend.onMouseLeave.call(void 0, event2);
    }
    if (props.onMouseLeave) {
      props.onMouseLeave.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseLeave, props.onMouseLeave, target]);
  var handelMouseMove = React10.useCallback(function(event2) {
    if (extend.onMouseMove) {
      extend.onMouseMove.call(void 0, event2);
    }
    if (props.onMouseMove) {
      props.onMouseMove.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseMove, props.onMouseMove, target]);
  var handleMouseOut = React10.useCallback(function(event2) {
    if (extend.onMouseOut) {
      extend.onMouseOut.call(void 0, event2);
    }
    if (props.onMouseOut) {
      props.onMouseOut.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseOut, props.onMouseOut, target]);
  var handleMouseOver = React10.useCallback(function(event2) {
    if (extend.onMouseOver) {
      extend.onMouseOver.call(void 0, event2);
    }
    if (props.onMouseOver) {
      props.onMouseOver.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [extend.onMouseOver, props.onMouseOver, target]);
  return {
    onClick: handleClick,
    onMouseUp: handleMouseUp,
    onMouseDown: handleMouseDown,
    onDoubleClick: handleDoubleClick,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onMouseMove: handelMouseMove,
    onMouseOut: handleMouseOut,
    onMouseOver: handleMouseOver
  };
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useCustomComponent.js
var useCustomComponent = function(comp) {
  return [comp, {}];
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useCollection.js
var React11 = __toESM(require_react());
var COLLECTION_ACTION;
(function(COLLECTION_ACTION2) {
  COLLECTION_ACTION2[COLLECTION_ACTION2["add"] = 0] = "add";
  COLLECTION_ACTION2[COLLECTION_ACTION2["remove"] = 1] = "remove";
})(COLLECTION_ACTION || (COLLECTION_ACTION = {}));
var useCollection = function(initial2) {
  if (initial2 === void 0) {
    initial2 = [];
  }
  var collection = React11.useRef(initial2);
  var handleCollectionAction = React11.useCallback(function(action) {
    switch (action.type) {
      case COLLECTION_ACTION.add:
        collection.current.push(action.item);
        break;
      case COLLECTION_ACTION.remove:
        var index = collection.current.indexOf(action.item);
        collection.current.splice(index, 1);
        break;
      default:
        break;
    }
  }, []);
  return [collection.current, handleCollectionAction];
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDocument.js
var React12 = __toESM(require_react());
var useDocument = function(ref) {
  var getElement = React12.useCallback(function() {
    return ref.current && ref.current.element ? ref.current.element : ref.current;
  }, [ref]);
  var getDocument4 = React12.useCallback(function() {
    var element6 = getElement();
    return element6 ? element6.ownerDocument || document : document;
  }, [getElement]);
  return getDocument4;
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useWindow.js
var React13 = __toESM(require_react());
var useWindow = function(ref) {
  var getDocument4 = useDocument(ref);
  var getWindow4 = React13.useCallback(function() {
    var document2 = getDocument4();
    return document2 ? document2.defaultView || window : window;
  }, [getDocument4]);
  return getWindow4;
};

// node_modules/@progress/kendo-react-common/dist/es/icons/constants.js
var SIZE_CLASSES = {
  "default": "",
  "xsmall": "k-icon-xs",
  "small": "k-icon-sm",
  "medium": "k-icon-md",
  "large": "k-icon-lg",
  "xlarge": "k-icon-xl",
  "xxlarge": "k-icon-xxl",
  "xxxlarge": "k-icon-xxxl"
};

// node_modules/@progress/kendo-react-common/dist/es/icons/Icon.js
var React14 = __toESM(require_react());
var PropTypes = __toESM(require_prop_types());
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Icon = React14.forwardRef(function(props, ref) {
  var className = props.className, name2 = props.name, themeColor = props.themeColor, size = props.size, flip2 = props.flip, style = props.style, id = props.id, tabIndex = props.tabIndex, others = __rest(props, ["className", "name", "themeColor", "size", "flip", "style", "id", "tabIndex"]);
  var target = React14.useRef(null);
  var elementRef = React14.useRef(null);
  React14.useImperativeHandle(target, function() {
    return {
      element: elementRef.current
    };
  });
  React14.useImperativeHandle(ref, function() {
    return target.current;
  });
  var sizeProp = React14.useMemo(function() {
    return size || defaultProps.size;
  }, [size]);
  var flipProp = React14.useMemo(function() {
    return flip2 || defaultProps.flip;
  }, [flip2]);
  var fontClassNames = React14.useMemo(function() {
    var _a14;
    return classNames("k-icon", name2 && toIconClass(name2), (_a14 = {}, _a14["k-color-".concat(themeColor)] = themeColor, _a14["k-flip-h"] = flipProp === "horizontal" || flipProp === "both", _a14["k-flip-v"] = flipProp === "vertical" || flipProp === "both", _a14), SIZE_CLASSES[sizeProp], className);
  }, [name2, themeColor, sizeProp, flipProp, className]);
  var mouseProps = useMouse(props, target);
  return React14.createElement("span", __assign5({ ref: elementRef }, others, mouseProps, { className: fontClassNames, id, tabIndex, style, role: "presentation" }));
});
Icon.propTypes = {
  style: PropTypes.object,
  classNames: PropTypes.string,
  name: PropTypes.string,
  themeColor: PropTypes.oneOf([
    "inherit",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "error",
    "warning",
    "dark",
    "light",
    "inverse"
  ]),
  size: PropTypes.oneOf(["default", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "xxxlarge"]),
  flip: PropTypes.oneOf(["default", "horizontal", "vertical", "both"])
};
var defaultProps = {
  size: "default",
  flip: "default"
};
Icon.displayName = "KendoIcon";

// node_modules/@progress/kendo-react-common/dist/es/icons/SvgIcon.js
var React15 = __toESM(require_react());
var PropTypes2 = __toESM(require_prop_types());
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SvgIcon = React15.forwardRef(function(props, ref) {
  var children2 = props.children, className = props.className, svgClassName = props.svgClassName, icon = props.icon, flip2 = props.flip, id = props.id, tabIndex = props.tabIndex, size = props.size, style = props.style, svgStyle = props.svgStyle, themeColor = props.themeColor, viewBox = props.viewBox, name2 = props.name, others = __rest2(props, ["children", "className", "svgClassName", "icon", "flip", "id", "tabIndex", "size", "style", "svgStyle", "themeColor", "viewBox", "name"]);
  var elementRef = React15.useRef(null);
  React15.useImperativeHandle(ref, function() {
    return {
      element: elementRef.current
    };
  });
  var iconNameProp = React15.useMemo(function() {
    return icon ? icon.name : defaultProps2.icon;
  }, [icon]);
  var sizeProp = React15.useMemo(function() {
    return size || defaultProps2.size;
  }, [size]);
  var flipProp = React15.useMemo(function() {
    return flip2 || defaultProps2.flip;
  }, [flip2]);
  var viewBoxProp = React15.useMemo(function() {
    return viewBox || defaultProps2.viewBox;
  }, [viewBox]);
  var elementClassNames = React15.useMemo(function() {
    var _a14;
    return classNames("k-svg-icon", "k-svg-i-" + iconNameProp, (_a14 = {}, _a14["k-color-".concat(themeColor)] = themeColor, _a14["k-flip-h"] = flipProp === "horizontal" || flipProp === "both", _a14["k-flip-v"] = flipProp === "vertical" || flipProp === "both", _a14), SIZE_CLASSES[sizeProp], className);
  }, [iconNameProp, themeColor, sizeProp, flipProp, className]);
  var elementStyle = React15.useMemo(function() {
    if (props.width && props.height) {
      return __assign6({ width: props.width, height: props.height }, style);
    } else if (props.width) {
      return __assign6({ width: props.width, height: props.width }, style);
    } else if (props.height) {
      return __assign6({ width: props.height, height: props.height }, style);
    } else {
      return __assign6({}, style);
    }
  }, [props.width, props.height, style]);
  return React15.createElement(
    "span",
    { className: elementClassNames, style: elementStyle, ref: elementRef },
    React15.createElement("svg", __assign6({ id, className: svgClassName, style: svgStyle, "aria-hidden": true, tabIndex, focusable: false, xmlns: "http://www.w3.org/2000/svg", viewBox: icon ? icon.viewBox : viewBoxProp, dangerouslySetInnerHTML: icon ? { Cc: icon.content } : void 0 }, others), icon ? void 0 : children2)
  );
});
SvgIcon.propTypes = {
  style: PropTypes2.object,
  classNames: PropTypes2.string,
  children: PropTypes2.any,
  icon: PropTypes2.object,
  themeColor: PropTypes2.oneOf([
    "inherit",
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "error",
    "warning",
    "dark",
    "light",
    "inverse"
  ]),
  size: PropTypes2.oneOf(["default", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "xxxlarge"]),
  flip: PropTypes2.oneOf(["default", "horizontal", "vertical", "both"])
};
var defaultProps2 = {
  size: "default",
  flip: "default",
  icon: "",
  viewBox: "0 0 24 24"
};
SvgIcon.displayName = "KendoSvgIcon";

// node_modules/@progress/kendo-react-common/dist/es/icons/IconsContext.js
var React16 = __toESM(require_react());
;
var IconsContext = React16.createContext({ type: "svg" });
IconsContext.displayName = "KendoReactIconsContext";

// node_modules/@progress/kendo-react-common/dist/es/icons/IconWrap.js
var React17 = __toESM(require_react());
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var IconWrap = React17.forwardRef(function(props, ref) {
  var _a14;
  var _b3 = React17.useContext(IconsContext), type = _b3.type, icons = _b3.icons;
  var icon = props.icon, fontIconProps = __rest3(props, ["icon"]);
  var name2 = ((_a14 = props.icon) === null || _a14 === void 0 ? void 0 : _a14.name) || props.name;
  var svg = name2 && icons && icons[name2] && typeof icons[name2] !== "string" ? icons[name2] : icon;
  name2 = name2 && icons && icons[name2] && typeof icons[name2] === "string" ? icons[name2] : name2;
  return type === "svg" && svg ? React17.createElement(SvgIcon, __assign7({}, props, { icon: svg, ref })) : React17.createElement(Icon, __assign7({}, fontIconProps, { name: name2, ref }));
});
IconWrap.displayName = "KendoIconWrap";

// node_modules/@progress/kendo-react-common/dist/es/icons/utils.js
var PropTypes3 = __toESM(require_prop_types());
var toIconName = function(iconClass) {
  return iconClass.replace(/^k-i-/, "");
};
var toIconClass = function(name2) {
  return "k-i-" + name2;
};
var svgIconPropType = PropTypes3.shape({
  name: PropTypes3.string.isRequired,
  content: PropTypes3.string.isRequired,
  viewBox: PropTypes3.string.isRequired
});

// node_modules/@progress/kendo-draggable-common/dist/es/algorithms/intersect.js
var getRatio = function(element6, target) {
  var elementRect = element6.getBoundingClientRect();
  var targetRect = target.getBoundingClientRect();
  var top = Math.max(targetRect.top, elementRect.top);
  var left2 = Math.max(targetRect.left, elementRect.left);
  var right2 = Math.min(targetRect.left + targetRect.width, elementRect.left + elementRect.width);
  var bottom = Math.min(targetRect.top + targetRect.height, elementRect.top + elementRect.height);
  var width = right2 - left2;
  var height = bottom - top;
  if (left2 < right2 && top < bottom) {
    var targetArea = targetRect.width * targetRect.height;
    var entryArea = elementRect.width * elementRect.height;
    var intersectionArea = width * height;
    var intersectionRatio = intersectionArea / (targetArea + entryArea - intersectionArea);
    return Number(intersectionRatio.toFixed(4));
  }
  return 0;
};
var intersect = function(element6, candidates) {
  var max = 0;
  var result = null;
  candidates.forEach(function(candidate) {
    if (candidate && element6) {
      var ration = getRatio(element6, candidate);
      if (ration > max) {
        max = ration;
        result = candidate;
      }
    }
  });
  return result;
};

// node_modules/@progress/kendo-draggable-common/dist/es/utils/index.js
var detectBrowser = function() {
  var ua = window && window.navigator.userAgent;
  if (!ua) {
    return false;
  }
  var browser4 = false;
  var match = [];
  var browserRxs = {
    edge: /(edge)[ \/]([\w.]+)/i,
    webkit: /(chrome|crios)[ \/]([\w.]+)/i,
    safari: /(webkit)[ \/]([\w.]+)/i,
    opera: /(opera)(?:.*version|)[ \/]([\w.]+)/i,
    msie: /(msie\s|trident.*? rv:)([\w.]+)/i,
    mozilla: /(mozilla)(?:.*? rv:([\w.]+)|)/i
  };
  for (var agent in browserRxs) {
    if (browserRxs.hasOwnProperty(agent)) {
      match = ua.match(browserRxs[agent]);
      if (match) {
        browser4 = {};
        browser4[agent] = true;
        browser4[match[1].toLowerCase().split(" ")[0].split("/")[0]] = true;
        browser4.version = parseInt(document.DOCUMENT_NODE || match[2], 10);
        break;
      }
    }
  }
  return browser4;
};
var getDocument2 = function(element6) {
  return element6 ? element6.ownerDocument || window.document : window.document;
};
var getWindow = function(element6) {
  var document2 = getDocument2(element6);
  return document2 ? document2.defaultView || window : window;
};
var scrollableRoot = function(element6) {
  var support3 = { browser: detectBrowser() };
  var document2 = getDocument2(element6);
  return support3.browser.edge || support3.browser.safari ? document2.body : document2.documentElement;
};
var isScrollable = function(el) {
  if (el && el.className && typeof el.className === "string" && el.className.indexOf("k-auto-scrollable") > -1) {
    return true;
  }
  var overflow = window.getComputedStyle(el, "overflow").overflow;
  return overflow.indexOf("auto") > -1 || overflow.indexOf("scroll") > -1;
};
var getScrollableParent = function(el) {
  var root = scrollableRoot(el);
  if (!el || el === document.body || el === document.documentElement) {
    return root;
  }
  var parent = el;
  while (parent && parent !== document.body && parent.nodeType !== Node.DOCUMENT_FRAGMENT_NODE && parent.nodeType !== Node.DOCUMENT_NODE && !isScrollable(parent)) {
    parent = parent.parentNode;
  }
  if (parent && (parent === document.body || parent.nodeType === Node.DOCUMENT_FRAGMENT_NODE)) {
    return root;
  }
  return parent;
};
var autoScrollVelocity = function(mouseX, mouseY, rect) {
  var velocity = { x: 0, y: 0 };
  var AUTO_SCROLL_AREA = 50;
  if (mouseX - rect.left < AUTO_SCROLL_AREA) {
    velocity.x = -(AUTO_SCROLL_AREA - (mouseX - rect.left));
  } else if (rect.right - mouseX < AUTO_SCROLL_AREA) {
    velocity.x = AUTO_SCROLL_AREA - (rect.right - mouseX);
  }
  if (mouseY - rect.top < AUTO_SCROLL_AREA) {
    velocity.y = -(AUTO_SCROLL_AREA - (mouseY - rect.top));
  } else if (rect.bottom - mouseY < AUTO_SCROLL_AREA) {
    velocity.y = AUTO_SCROLL_AREA - (rect.bottom - mouseY);
  }
  return velocity;
};
var scrollableViewPort = function(el, window2) {
  var root = scrollableRoot(el);
  if (el === root) {
    return {
      top: root.scrollTop,
      left: root.scrollLeft,
      bottom: root.scrollTop + window2.innerHeight,
      right: root.scrollLeft + window2.innerWidth
    };
  } else {
    var rect = el.getBoundingClientRect();
    return {
      bottom: rect.top + rect.height,
      right: rect.left + rect.width,
      left: rect.left,
      top: rect.top
    };
  }
};
var isPointerInsideContainer = function(x, y, container) {
  var rect = container.getBoundingClientRect();
  return rect.top <= y && rect.left <= x && y <= rect.bottom && x <= rect.right;
};

// node_modules/@progress/kendo-draggable-common/dist/es/drag-n-drop.js
var DRAG_AND_DROP_DISPATCH_ACTION;
(function(DRAG_AND_DROP_DISPATCH_ACTION2) {
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_DOWN"] = "pointerdown";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_MOVE"] = "pointermove";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_UP"] = "pointerup";
  DRAG_AND_DROP_DISPATCH_ACTION2["POINTER_CANCEL"] = "pointercancel";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_DOWN"] = "mousedown";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_MOVE"] = "mousemove";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOUSE_UP"] = "mouseup";
  DRAG_AND_DROP_DISPATCH_ACTION2["CONTEXT_MENU"] = "contextmenu";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_START"] = "touchstart";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_MOVE"] = "touchmove";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_END"] = "touchend";
  DRAG_AND_DROP_DISPATCH_ACTION2["TOUCH_CANCEL"] = "touchcancel";
  DRAG_AND_DROP_DISPATCH_ACTION2["SCROLL"] = "scroll";
  DRAG_AND_DROP_DISPATCH_ACTION2["START"] = "KENDO_DRAG_AND_DROP_START";
  DRAG_AND_DROP_DISPATCH_ACTION2["MOVE"] = "KENDO_DRAG_AND_DROP_MOVE";
  DRAG_AND_DROP_DISPATCH_ACTION2["END"] = "KENDO_DRAG_AND_DROP_END";
  DRAG_AND_DROP_DISPATCH_ACTION2["CANCEL"] = "KENDO_DRAG_AND_DROP_CANCEL";
})(DRAG_AND_DROP_DISPATCH_ACTION || (DRAG_AND_DROP_DISPATCH_ACTION = {}));
var isTouchEvent = function(event2) {
  return /^touch/.test(event2.type);
};
var isScrollEvent = function(event2) {
  return /^(scroll)/.test(event2.type);
};
var normalizeEvent = function(event2, state) {
  return isTouchEvent(event2) ? {
    pageX: event2.changedTouches[0].pageX,
    pageY: event2.changedTouches[0].pageY,
    clientX: event2.changedTouches[0].clientX,
    clientY: event2.changedTouches[0].clientY,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    offsetX: state.offset.x,
    offsetY: state.offset.y,
    type: event2.type,
    originalEvent: event2,
    isTouch: true,
    altKey: false,
    ctrlKey: false,
    shiftKey: false,
    metaKey: false
  } : isScrollEvent(event2) ? {
    pageX: state.pageOffset.x,
    pageY: state.pageOffset.y,
    clientX: state.clientOffset.x,
    clientY: state.clientOffset.y,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    offsetX: state.offset.x,
    offsetY: state.offset.y,
    type: event2.type,
    originalEvent: event2,
    altKey: false,
    ctrlKey: false,
    shiftKey: false,
    metaKey: false
  } : {
    pageX: event2.pageX,
    pageY: event2.pageY,
    clientX: event2.clientX,
    clientY: event2.clientY,
    offsetX: event2.offsetX,
    offsetY: event2.offsetY,
    scrollX: state.scrollOffset.x,
    scrollY: state.scrollOffset.y,
    type: event2.type,
    ctrlKey: event2.ctrlKey,
    shiftKey: event2.shiftKey,
    altKey: event2.altKey,
    metaKey: event2.metaKey,
    originalEvent: event2
  };
};
var noop2 = function() {
};
var dispatchDragAndDrop = function(state, action, callbacks) {
  if (callbacks === void 0) {
    callbacks = {};
  }
  var _a14 = callbacks.onIsPressedChange, onIsPressedChange = _a14 === void 0 ? noop2 : _a14, _b3 = callbacks.onIsScrollingChange, onIsScrollingChange = _b3 === void 0 ? noop2 : _b3, _c2 = callbacks.onVelocityChange, onVelocityChange = _c2 === void 0 ? noop2 : _c2, _d = callbacks.onOffsetChange, onOffsetChange = _d === void 0 ? noop2 : _d, _e = callbacks.onPageOffsetChange, onPageOffsetChange = _e === void 0 ? noop2 : _e, _f = callbacks.onClientOffsetChange, onClientOffsetChange = _f === void 0 ? noop2 : _f, _g = callbacks.onScrollOffsetChange, onScrollOffsetChange = _g === void 0 ? noop2 : _g, _h = callbacks.onInitialScrollOffsetChange, onInitialScrollOffsetChange = _h === void 0 ? noop2 : _h;
  var drag = action.payload;
  var element6 = drag.element;
  var hint = drag.hint;
  var autoScrollDirection = state.autoScrollDirection;
  var overrideScrollableParent = state.scrollableParent;
  var event2 = normalizeEvent(action.event, state);
  switch (event2.type) {
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_DOWN:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_DOWN && (!event2.originalEvent.isPrimary || event2.originalEvent.button !== 0)) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_DOWN:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_DOWN && (event2.originalEvent.which && event2.originalEvent.which > 1) || state.ignoreMouse) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_START:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_START && event2.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.START: {
      var scrollableParent_1 = overrideScrollableParent || getScrollableParent(action.payload.element);
      onInitialScrollOffsetChange(scrollableParent_1 instanceof Window ? { x: scrollableParent_1.scrollX, y: scrollableParent_1.scrollY } : { x: scrollableParent_1.scrollLeft, y: scrollableParent_1.scrollTop });
      onClientOffsetChange({
        x: event2.clientX,
        y: event2.clientY
      });
      onPageOffsetChange({
        x: event2.pageX,
        y: event2.pageY
      });
      onOffsetChange({
        x: event2.offsetX,
        y: event2.offsetY
      });
      onIsPressedChange(true);
      if (drag.onPress) {
        drag.onPress(event2);
      }
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.SCROLL:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.SCROLL && !state.pressed) {
        break;
      }
      var scrollableParent = overrideScrollableParent || getScrollableParent(element6);
      var scrollOffset = scrollableParent instanceof Window ? { x: scrollableParent.scrollX, y: scrollableParent.scrollY } : { x: scrollableParent.scrollLeft, y: scrollableParent.scrollTop };
      event2.scrollX = scrollOffset.x - state.initialScrollOffset.x;
      event2.scrollY = scrollOffset.y - state.initialScrollOffset.y;
      onScrollOffsetChange({
        x: event2.scrollX,
        y: event2.scrollY
      });
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_MOVE:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_MOVE && !event2.originalEvent.isPrimary) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_MOVE:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_MOVE:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_MOVE && event2.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOVE: {
      if (state.pressed) {
        if (state.autoScroll && event2.originalEvent.type !== "scroll") {
          if (element6) {
            var document_1 = getDocument2(element6);
            var scrollableParent_2 = overrideScrollableParent || getScrollableParent(document_1.elementFromPoint(event2.clientX, event2.clientY));
            var newVelocity = autoScrollVelocity(event2.clientX, event2.clientY, scrollableViewPort(scrollableParent_2, getWindow(element6)));
            onVelocityChange({
              x: autoScrollDirection && autoScrollDirection.horizontal === false ? 0 : newVelocity.x,
              y: autoScrollDirection && autoScrollDirection.vertical === false ? 0 : newVelocity.y
            });
            onIsScrollingChange(newVelocity.y !== 0 || newVelocity.x !== 0);
          }
        }
        if (!state.drag && drag.onDragStart) {
          drag.onDragStart(event2);
        }
        if (drag.onDrag) {
          drag.onDrag(event2);
        }
        var dropElement_1 = intersect(hint || element6, state.drops.map(function(drop2) {
          return drop2 && drop2.element;
        }).filter(function(d) {
          return d !== (hint || element6);
        }));
        var drop = state.drops.find(function(drop2) {
          return drop2.element === dropElement_1;
        });
        if (drop && dropElement_1 && isPointerInsideContainer(event2.clientX, event2.clientY, overrideScrollableParent || getScrollableParent(dropElement_1)) && dropElement_1 !== element6) {
          if ((state.drop && state.drop.element) !== dropElement_1) {
            if (state.drop && state.drop.onDragLeave) {
              state.drop.onDragLeave(event2);
            }
            if (drop.onDragEnter) {
              drop.onDragEnter(event2);
            }
          } else {
            if (drop.onDragOver) {
              drop.onDragOver(event2);
            }
          }
        } else if (state.drop && state.drop.onDragLeave) {
          state.drop.onDragLeave(event2);
        }
      }
      onClientOffsetChange({
        x: event2.clientX,
        y: event2.clientY
      });
      onPageOffsetChange({
        x: event2.pageX,
        y: event2.pageY
      });
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_UP:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.POINTER_UP && !event2.originalEvent.isPrimary) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.MOUSE_UP:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_END:
      if (event2.type === DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_END && event2.originalEvent.touches.length !== 1) {
        break;
      }
    case DRAG_AND_DROP_DISPATCH_ACTION.END: {
      onIsPressedChange(false);
      onIsScrollingChange(false);
      onScrollOffsetChange({ x: 0, y: 0 });
      if (drag.onRelease) {
        drag.onRelease(event2);
      }
      if (state.drop && state.drop.onDrop) {
        state.drop.onDrop(event2);
      }
      if (state.drag && drag.onDragEnd) {
        drag.onDragEnd(event2);
      }
      break;
    }
    case DRAG_AND_DROP_DISPATCH_ACTION.POINTER_CANCEL:
    case DRAG_AND_DROP_DISPATCH_ACTION.CONTEXT_MENU:
    case DRAG_AND_DROP_DISPATCH_ACTION.TOUCH_CANCEL:
    case DRAG_AND_DROP_DISPATCH_ACTION.CANCEL: {
      onIsPressedChange(false);
      onIsScrollingChange(false);
      onScrollOffsetChange({ x: 0, y: 0 });
      if (drag.onDragEnd) {
        drag.onDragEnd(event2);
      }
      if (state.drop && state.drop.onDragLeave) {
        state.drop.onDragLeave(event2);
      }
      break;
    }
    default:
      break;
  }
};

// node_modules/@progress/kendo-draggable-common/dist/es/auto-scroll.js
var autoScroll = function(scrollableParent, vel) {
  if (!scrollableParent) {
    return;
  }
  var yIsScrollable;
  var xIsScrollable;
  var isRootNode = scrollableParent === scrollableRoot(scrollableParent);
  if (isRootNode) {
    yIsScrollable = document.body.scrollHeight > window.innerHeight;
    xIsScrollable = document.body.scrollWidth > window.innerWidth;
  } else {
    yIsScrollable = scrollableParent.offsetHeight <= scrollableParent.scrollHeight;
    xIsScrollable = scrollableParent.offsetWidth <= scrollableParent.scrollWidth;
  }
  var yDelta = scrollableParent.scrollTop + vel.y;
  var yInBounds = yIsScrollable && yDelta > 0 && yDelta < scrollableParent.scrollHeight;
  var xDelta = scrollableParent.scrollLeft + vel.x;
  var xInBounds = xIsScrollable && xDelta > 0 && xDelta < scrollableParent.scrollWidth;
  if (yInBounds) {
    scrollableParent.scrollTop += vel.y;
  } else if (yIsScrollable && yDelta < 0) {
    scrollableParent.scrollTop = 0;
  }
  if (xInBounds) {
    scrollableParent.scrollLeft += vel.x;
  } else if (xIsScrollable && xDelta < 0) {
    scrollableParent.scrollLeft = 0;
  }
};

// node_modules/@progress/kendo-react-common/dist/es/hooks/useInheritedState.js
var React18 = __toESM(require_react());
var useInheritedState = function(context2, defaultValue2) {
  var _a14 = React18.useContext(context2), contextValue = _a14[0], contextSetter = _a14[1];
  var _b3 = React18.useState(defaultValue2), localValue = _b3[0], localSetter = _b3[1];
  var value2 = contextValue !== void 0 ? contextValue : localValue;
  var handleValueChange = function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    contextValue !== void 0 ? contextSetter.apply(void 0, args) : localSetter(args[0]);
  };
  return [
    value2,
    handleValueChange
  ];
};

// node_modules/@progress/kendo-react-common/dist/es/drag-n-drop/context/index.js
var React19 = __toESM(require_react());
var DragContext = React19.createContext([
  void 0,
  noop
]);
var DropContext = React19.createContext([
  void 0,
  noop
]);
var DragsContext = React19.createContext([[], noop, noop]);
var DropsContext = React19.createContext([[], noop, noop]);

// node_modules/@progress/kendo-react-common/dist/es/hooks/useDraggable.js
var React20 = __toESM(require_react());
var IGNORE_MOUSE_TIMEOUT = 2e3;
function useDraggable(ref, callbacks, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _a14 = callbacks.onPress, onPress = _a14 === void 0 ? noop : _a14, _b3 = callbacks.onRelease, onRelease = _b3 === void 0 ? noop : _b3, _c2 = callbacks.onDragStart, onDragStart = _c2 === void 0 ? noop : _c2, _d = callbacks.onDrag, onDrag = _d === void 0 ? noop : _d, _e = callbacks.onDragEnd, onDragEnd = _e === void 0 ? noop : _e;
  var _f = options2.hint, hint = _f === void 0 ? null : _f, _g = options2.mouseOnly, mouseOnly = _g === void 0 ? false : _g, _h = options2.autoScroll, autoScroll2 = _h === void 0 ? true : _h, _j = options2.scrollContainer, scrollContainer = _j === void 0 ? null : _j;
  var _k = React20.useState(false), pressed = _k[0], setPressed = _k[1];
  var _l = React20.useState(false), scrolling = _l[0], setScrolling = _l[1];
  var drop = useInheritedState(DropContext)[0];
  var _m = useInheritedState(DragContext), drag = _m[0], setDrag = _m[1];
  var drops = React20.useContext(DropsContext)[0];
  var _o = React20.useContext(DragsContext), drags = _o[0], registerDrag = _o[1], deregisterDrag = _o[2];
  var velocity = React20.useRef({ x: 0, y: 0 });
  var scrollInterval = React20.useRef();
  var ignoreMouse = React20.useRef(false);
  var restoreMouseTimeout = React20.useRef();
  var scrollable = React20.useRef(null);
  var unmount = React20.useRef(false);
  var offset4 = React20.useRef({ x: 0, y: 0 });
  var pageOffset = React20.useRef({ x: 0, y: 0 });
  var clientOffset = React20.useRef({ x: 0, y: 0 });
  var initialClientOffset = React20.useRef({ x: 0, y: 0 });
  var scrollOffset = React20.useRef({ x: 0, y: 0 });
  var initialScrollOffset = React20.useRef({ x: 0, y: 0 });
  var supportPointerEvent = Boolean(typeof window !== "undefined" && window.PointerEvent);
  var pointers = !mouseOnly && supportPointerEvent;
  var getElement = React20.useCallback(function() {
    return ref.current && ref.current.element ? ref.current.element : ref.current;
  }, [ref]);
  var getHintElement = React20.useCallback(function() {
    return hint && hint.current && hint.current.element ? hint.current.element : hint ? hint.current : null;
  }, [hint]);
  var getScrollContainer = React20.useCallback(function() {
    return scrollContainer && scrollContainer.current && scrollContainer.current.element ? scrollContainer.current.element : scrollContainer ? scrollContainer.current : null;
  }, [scrollContainer]);
  var getAutoScrollContainer = React20.useCallback(function() {
    return typeof autoScroll2 === "object" && autoScroll2.boundaryElementRef && autoScroll2.boundaryElementRef.current && autoScroll2.boundaryElementRef.current.element ? autoScroll2.boundaryElementRef.current.element : typeof autoScroll2 === "object" && autoScroll2.boundaryElementRef && autoScroll2.boundaryElementRef.current ? autoScroll2.boundaryElementRef.current : null;
  }, [autoScroll2]);
  var target = React20.useRef(null);
  React20.useImperativeHandle(target, function() {
    return {
      element: getElement(),
      hint: getHintElement(),
      onPress: handlePress,
      onDragStart: handleDragStart,
      onDrag: handleDrag,
      onDragEnd: handleDragEnd,
      onRelease: handleRelease,
      data: ref.current
    };
  });
  var getDocument4 = React20.useCallback(function() {
    var element6 = getElement();
    return element6 ? element6.ownerDocument || document : document;
  }, [getElement]);
  var getWindow4 = React20.useCallback(function() {
    var document2 = getDocument4();
    return document2 ? document2.defaultView || window : window;
  }, [getDocument4]);
  var getState = React20.useCallback(function() {
    return {
      drag: drag ? drag.current : null,
      drop: drop ? drop.current : null,
      drags: drags.map(function(d) {
        return d.current;
      }),
      drops: drops.map(function(d) {
        return d.current;
      }),
      pressed,
      ignoreMouse: ignoreMouse.current,
      scrollOffset: scrollOffset.current,
      offset: offset4.current,
      pageOffset: pageOffset.current,
      initialScrollOffset: initialScrollOffset.current,
      clientOffset: clientOffset.current,
      initialClientOffset: initialClientOffset.current,
      velocity: velocity.current,
      autoScroll: Boolean(typeof autoScroll2 === "object" ? autoScroll2.enabled !== false : autoScroll2),
      scrollableParent: getAutoScrollContainer(),
      autoScrollDirection: typeof autoScroll2 === "object" ? autoScroll2.direction : { horizontal: true, vertical: true },
      isScrolling: scrolling
    };
  }, [drag, drop, drags, drops, pressed, autoScroll2, getAutoScrollContainer, scrolling]);
  var handlePressedChange = React20.useCallback(function(value2) {
    setPressed(value2);
  }, []);
  var handleScrollingChange = React20.useCallback(function(value2) {
    setScrolling(value2);
  }, []);
  var handleVelocityChange = React20.useCallback(function(value2) {
    velocity.current = value2;
  }, []);
  var handleOffsetChange = React20.useCallback(function(value2) {
    offset4.current = value2;
  }, []);
  var handleClientOffsetChange = React20.useCallback(function(value2) {
    clientOffset.current = value2;
  }, []);
  var handlePageOffsetChange = React20.useCallback(function(value2) {
    pageOffset.current = value2;
  }, []);
  var handleInitialClientOffsetChange = React20.useCallback(function(value2) {
    initialClientOffset.current = value2;
  }, []);
  var handleScrollOffsetChange = React20.useCallback(function(value2) {
    scrollOffset.current = value2;
  }, []);
  var handleInitialScrollOffsetChange = React20.useCallback(function(value2) {
    initialScrollOffset.current = value2;
  }, []);
  var handlePress = React20.useCallback(function(event2) {
    onPress(event2);
  }, [onPress]);
  var handleRelease = React20.useCallback(function(event2) {
    onRelease(event2);
  }, [onRelease]);
  var handleDragStart = React20.useCallback(function(event2) {
    setDrag(target, { target: ref.current, event: event2 });
    onDragStart(event2);
  }, [setDrag, ref, onDragStart]);
  var handleDrag = React20.useCallback(function(event2) {
    onDrag(event2);
  }, [onDrag]);
  var handleDragEnd = React20.useCallback(function(event2) {
    if (unmount.current) {
      return;
    }
    setDrag(null, { target: ref.current, event: event2 });
    onDragEnd(event2);
  }, [onDragEnd, setDrag, ref]);
  var dispatchDragEvent = React20.useCallback(function(event2) {
    dispatchDragAndDrop(getState(), { event: event2, payload: target.current }, {
      onVelocityChange: handleVelocityChange,
      onOffsetChange: handleOffsetChange,
      onClientOffsetChange: handleClientOffsetChange,
      onPageOffsetChange: handlePageOffsetChange,
      onInitialClientOffsetChange: handleInitialClientOffsetChange,
      onScrollOffsetChange: handleScrollOffsetChange,
      onInitialScrollOffsetChange: handleInitialScrollOffsetChange,
      onIsPressedChange: handlePressedChange,
      onIsScrollingChange: handleScrollingChange
    });
  }, [
    getState,
    handleVelocityChange,
    handleOffsetChange,
    handlePageOffsetChange,
    handleClientOffsetChange,
    handleInitialClientOffsetChange,
    handleInitialScrollOffsetChange,
    handlePressedChange,
    handleScrollOffsetChange,
    handleScrollingChange
  ]);
  var handlePointerDown = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handlePointerMove = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handlePointerCancel = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handlePointerUp = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleMouseDown = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleMouseMove = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleMouseUp = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleContextMenu = React20.useCallback(function(event2) {
    event2.preventDefault();
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleTouchStart = React20.useCallback(function(event2) {
    event2.preventDefault();
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleTouchMove = React20.useCallback(function(event2) {
    event2.preventDefault();
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var handleTouchEnd = React20.useCallback(function(event2) {
    if (event2.touches.length === 0 && event2.changedTouches.length === 1) {
      var currentWindow = getWindow4();
      ignoreMouse.current = true;
      restoreMouseTimeout.current = currentWindow.setTimeout(function() {
        ignoreMouse.current = false;
      }, IGNORE_MOUSE_TIMEOUT);
    }
    dispatchDragEvent(event2);
  }, [dispatchDragEvent, getWindow4]);
  var handleScroll = React20.useCallback(function(event2) {
    dispatchDragEvent(event2);
  }, [dispatchDragEvent]);
  var prerequisites = React20.useCallback(function() {
    var element6 = getElement();
    if (element6) {
      var initialTouchAction_1 = element6.style.touchAction;
      element6.style.touchAction = "none";
      return function() {
        element6.style.touchAction = initialTouchAction_1;
      };
    }
  }, [getElement]);
  var register = React20.useCallback(function() {
    registerDrag(target);
    return function() {
      deregisterDrag(target);
    };
  }, [deregisterDrag, registerDrag]);
  var init = function() {
    var window2 = getWindow4();
    var element6 = getElement();
    var document2 = getDocument4();
    if (pointers) {
      if (element6) {
        scrollable.current = getScrollableParent(element6);
        if (scrollable.current) {
          scrollable.current.addEventListener("scroll", handleScroll, { passive: true });
        }
        element6.addEventListener("pointerdown", handlePointerDown, { passive: true });
      }
      if (pressed) {
        document2.addEventListener("pointermove", handlePointerMove);
        document2.addEventListener("pointerup", handlePointerUp, true);
        document2.addEventListener("contextmenu", handleContextMenu);
        document2.addEventListener("pointercancel", handlePointerCancel, { passive: true });
      }
    } else {
      window2.addEventListener("touchmove", noop, { capture: false, passive: false });
      if (element6) {
        element6.addEventListener("mousedown", handleMouseDown, { passive: true });
        if (!mouseOnly) {
          element6.addEventListener("touchstart", handleTouchStart, { passive: true });
          if (pressed) {
            element6.addEventListener("touchmove", handleTouchMove, { passive: true });
            element6.addEventListener("touchend", handleTouchEnd, { passive: true });
          }
        }
      }
      if (pressed) {
        document2.addEventListener("mousemove", handleMouseMove, { passive: true });
        document2.addEventListener("mouseup", handleMouseUp, { passive: true });
      }
    }
    return function() {
      if (scrollable.current) {
        scrollable.current.removeEventListener("scroll", handleScroll);
      }
      if (element6) {
        element6.removeEventListener("pointerdown", handlePointerDown);
        element6.removeEventListener("mousedown", handleMouseDown);
        element6.removeEventListener("touchstart", handleTouchStart);
        element6.removeEventListener("touchmove", handleTouchMove);
        element6.removeEventListener("touchend", handleTouchEnd);
      }
      document2.removeEventListener("pointermove", handlePointerMove);
      document2.removeEventListener("pointerup", handlePointerUp, true);
      document2.removeEventListener("contextmenu", handleContextMenu);
      document2.removeEventListener("pointercancel", handlePointerCancel);
      document2.removeEventListener("mousemove", handleMouseMove);
      document2.removeEventListener("mouseup", handleMouseUp);
      window2.removeEventListener("touchmove", noop);
      window2.clearTimeout(restoreMouseTimeout.current);
    };
  };
  React20.useEffect(function() {
    var window2 = getWindow4();
    if (scrolling) {
      var scrollableParent_1 = getScrollContainer() || getScrollableParent(document.elementFromPoint(clientOffset.current.x, clientOffset.current.y));
      window2.clearInterval(scrollInterval.current);
      scrollInterval.current = window2.setInterval(function() {
        autoScroll(scrollableParent_1, { x: velocity.current.x, y: velocity.current.y });
      }, 50);
    }
    return function() {
      window2.clearInterval(scrollInterval.current);
    };
  }, [getElement, getScrollContainer, getWindow4, scrolling]);
  React20.useEffect(prerequisites, [prerequisites]);
  React20.useEffect(init, [
    pressed,
    getWindow4,
    getElement,
    getDocument4,
    mouseOnly,
    pointers,
    handleContextMenu,
    handleMouseDown,
    handleMouseMove,
    handleMouseUp,
    handlePointerCancel,
    handlePointerDown,
    handlePointerMove,
    handlePointerUp,
    handleTouchEnd,
    handleTouchMove,
    handleTouchStart,
    handleScroll
  ]);
  React20.useEffect(function() {
    unmount.current = false;
    return function() {
      unmount.current = true;
    };
  }, []);
  React20.useLayoutEffect(register, [register]);
}

// node_modules/@progress/kendo-react-common/dist/es/Draggable.js
var React21 = __toESM(require_react());
var Draggable = React21.forwardRef(function(props, ref) {
  var childRef = React21.useRef(null);
  var target = React21.useRef(null);
  var getElement = React21.useCallback(function() {
    return childRef.current && childRef.current.element ? childRef.current.element : childRef.current;
  }, [childRef]);
  React21.useImperativeHandle(target, function() {
    return { element: getElement() || null };
  });
  React21.useImperativeHandle(ref, function() {
    return target.current;
  });
  React21.useImperativeHandle(props.childRef, function() {
    return childRef.current;
  });
  var handlePress = React21.useCallback(function(event2) {
    if (!props.onPress) {
      return;
    }
    props.onPress({
      element: getElement(),
      target: target.current,
      event: event2
    });
  }, [getElement, props.onPress]);
  var handleRelease = React21.useCallback(function(event2) {
    if (!props.onRelease) {
      return;
    }
    props.onRelease({
      element: getElement(),
      target: target.current,
      event: event2
    });
  }, [getElement, props.onRelease]);
  var handleDragStart = React21.useCallback(function(event2) {
    if (!props.onDragStart) {
      return;
    }
    props.onDragStart({
      element: getElement(),
      target: target.current,
      event: event2
    });
  }, [props, getElement]);
  var handleDrag = React21.useCallback(function(event2) {
    if (!props.onDrag) {
      return;
    }
    props.onDrag({
      element: getElement(),
      target: target.current,
      event: event2
    });
  }, [getElement, props.onDrag]);
  var handleDragEnd = React21.useCallback(function(event2) {
    if (!props.onDragEnd) {
      return;
    }
    props.onDragEnd({
      element: getElement(),
      target: target.current,
      event: event2
    });
  }, [getElement, props.onDragEnd]);
  useDraggable(childRef, {
    onPress: handlePress,
    onRelease: handleRelease,
    onDragStart: handleDragStart,
    onDrag: handleDrag,
    onDragEnd: handleDragEnd
  }, {
    mouseOnly: props.mouseOnly,
    autoScroll: props.autoScroll,
    hint: props.hint,
    scrollContainer: props.scrollContainer
  });
  return props.children ? React21.cloneElement(React21.Children.only(props.children), { ref: childRef }) : null;
});
Draggable.displayName = "KendoReactDraggable";

// node_modules/@progress/kendo-react-common/dist/es/theme.js
var kendoThemeMaps = {
  sizeMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  },
  roundedMap: {
    small: "sm",
    medium: "md",
    large: "lg"
  }
};

// node_modules/@progress/kendo-react-common/dist/es/navigation.js
var FOCUSABLE_ELEMENTS = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var Navigation = (
  /** @class */
  function() {
    function Navigation4(options2) {
      var _this3 = this;
      this.rovingTabIndex = true;
      this.update = function() {
      };
      this.focusNextIndex = function(target, indexDiff) {
        var all = _this3.elements;
        var index = all.indexOf(target) + indexDiff;
        index = index < 0 ? all.length - 1 : index;
        _this3.focusElement(all[index % all.length], target);
      };
      this.tabIndex = options2.tabIndex || 0;
      this.root = options2.root;
      this.selectors = options2.selectors;
      this.rovingTabIndex = options2.rovingTabIndex !== void 0 ? options2.rovingTabIndex : true;
      this.mouseEvents = options2.mouseEvents || {};
      this.keyboardEvents = options2.keyboardEvents || {};
    }
    Object.defineProperty(Navigation4.prototype, "elements", {
      get: function() {
        return this.root.current ? Array.from(this.root.current.querySelectorAll(this.selectors.join(","))) : [];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation4.prototype, "first", {
      get: function() {
        return this.root.current && this.root.current.querySelector(this.selectors.join(",")) || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation4.prototype, "last", {
      get: function() {
        var all = this.elements;
        return all[all.length - 1] || null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Navigation4.prototype, "current", {
      get: function() {
        return this.elements.find(function(el) {
          return el.matches(":focus");
        }) || null;
      },
      enumerable: false,
      configurable: true
    });
    Navigation4.prototype.focusNext = function(target) {
      this.focusNextIndex(target, 1);
    };
    Navigation4.prototype.focusPrevious = function(target) {
      this.focusNextIndex(target, -1);
    };
    Navigation4.prototype.triggerKeyboardEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var key = ev.key === " " ? "Space" : ev.key;
      var eventType = ev.nativeEvent.type;
      if (target && this.keyboardEvents[eventType][key]) {
        this.keyboardEvents[eventType][key].call(void 0, target, this, ev);
      }
    };
    Navigation4.prototype.triggerMouseEvent = function(ev) {
      var target = ev.target instanceof Element && ev.target.closest(this.selectors.join(","));
      var eventType = ev.nativeEvent.type;
      if (target) {
        this.mouseEvents[eventType].call(void 0, target, this, ev);
      }
    };
    Navigation4.prototype.focusElement = function(element6, previous) {
      if (element6) {
        if (previous) {
          if (this.rovingTabIndex) {
            previous.removeAttribute("tabindex");
          }
          previous.classList.remove("k-focus");
        }
        if (this.rovingTabIndex) {
          element6.setAttribute("tabindex", String(this.tabIndex));
        }
        element6.focus({ preventScroll: true });
      }
    };
    return Navigation4;
  }()
);
;

// node_modules/@progress/kendo-react-common/dist/es/getActiveElement.js
var getActiveElement = function(document2) {
  if (!document2) {
    return void 0;
  }
  var activeElement = document2.activeElement;
  var shadowRoot = activeElement === null || activeElement === void 0 ? void 0 : activeElement.shadowRoot;
  return shadowRoot ? shadowRoot.activeElement : activeElement;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/constants/index.js
var MIDNIGHT_INVARIANT = new Date(1980, 0, 1);
var MS_PER_SECOND = 1e3;
var MS_PER_MINUTE3 = 60 * MS_PER_SECOND;
var MS_PER_HOUR2 = 60 * MS_PER_MINUTE3;
var TIME_FORMAT = "t";
var BORDER_WIDTH = 1;
var DEFAULT_EVENT_HEIGHT = 25;
var DAYS_IN_WEEK_COUNT = 7;
var WEEKS_COUNT = 6;
var HOURS_IN_DAY_COUNT = 24;
var EMPTY_RESOURCE = [{}];
var OCCURRENCE_ID = 0;
var DEFAULT_ID = void 0;
var DISPLAY_NONE_STYLES = { display: "none" };
var VISIBILITY_HIDDEN_STYLES = { visibility: "hidden" };
var DEFAULT_GROUP = {
  index: 0,
  resources: []
};
var MIN_DATE = new Date(1900, 0, 1);
var MAX_DATE = new Date(2099, 11, 31);
var DEFAULT_RANGE = {
  index: 0,
  start: MIN_DATE,
  end: MAX_DATE,
  zonedStart: ZonedDate.fromLocalDate(MIN_DATE),
  zonedEnd: ZonedDate.fromLocalDate(MAX_DATE)
};

// node_modules/@progress/kendo-data-query/dist/es/utils.js
var isPresent = function(value2) {
  return value2 !== null && value2 !== void 0;
};
var isBlank = function(value2) {
  return value2 === null || value2 === void 0;
};
var isArray = function(value2) {
  return Array.isArray(value2);
};
var isFunction = function(value2) {
  return typeof value2 === "function";
};
var isString = function(value2) {
  return typeof value2 === "string";
};
var isTruthy = function(value2) {
  return !!value2;
};
var isNullOrEmptyString = function(value2) {
  return isBlank(value2) || value2.trim().length === 0;
};
var isNotNullOrEmptyString = function(value2) {
  return !isNullOrEmptyString(value2);
};
var isNumeric = function(value2) {
  return !isNaN(value2 - parseFloat(value2));
};
var isDate = function(value2) {
  return value2 && value2.getTime;
};

// node_modules/@progress/kendo-data-query/dist/es/filtering/filter-descriptor.interface.js
var isCompositeFilterDescriptor = function(source) {
  return isPresent(source.filters);
};

// node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign8,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest4,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
var extendStatics = function(d, b) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
    d2.__proto__ = b2;
  } || function(d2, b2) {
    for (var p in b2)
      if (b2.hasOwnProperty(p))
        d2[p] = b2[p];
  };
  return extendStatics(d, b);
};
function __extends(d, b) {
  extendStatics(d, b);
  function __() {
    this.constructor = d;
  }
  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}
var __assign8 = function() {
  __assign8 = Object.assign || function __assign122(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
function __rest4(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d = decorators[i])
        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
    return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value2) {
    return value2 instanceof P ? value2 : new P(function(resolve) {
      resolve(value2);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value2) {
      try {
        step(generator.next(value2));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value2) {
      try {
        step(generator["throw"](value2));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_2)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t = _2.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t[1]) {
              _2.label = t[1];
              t = op;
              break;
            }
            if (t && _2.label < t[2]) {
              _2.label = t[2];
              _2.ops.push(op);
              break;
            }
            if (t[2])
              _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body.call(thisArg, _2);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o, m, k, k2) {
  if (k2 === void 0)
    k2 = k;
  o[k2] = m[k];
}
function __exportStar(m, exports) {
  for (var p in m)
    if (p !== "default" && !exports.hasOwnProperty(p))
      exports[p] = m[p];
}
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error3) {
    e = { error: error3 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
}
function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++)
    ar = ar.concat(__read(arguments[i]));
  return ar;
}
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++)
    s += arguments[i].length;
  for (var r = Array(s), k = 0, i = 0; i < il; i++)
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
      r[k] = a[j];
  return r;
}
;
function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function verb(n) {
    if (g[n])
      i[n] = function(v) {
        return new Promise(function(a, b) {
          q.push([n, v, a, b]) > 1 || resume(n, v);
        });
      };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value2) {
    resume("next", value2);
  }
  function reject(value2) {
    resume("throw", value2);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length)
      resume(q[0][0], q[0][1]);
  }
}
function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function(e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function() {
    return this;
  }, i;
  function verb(n, f) {
    i[n] = o[n] ? function(v) {
      return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v;
    } : f;
  }
}
function __asyncValues(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw2) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw2 });
  } else {
    cooked.raw = raw2;
  }
  return cooked;
}
;
function __importStar(mod) {
  if (mod && mod.zd)
    return mod;
  var result = {};
  if (mod != null) {
    for (var k in mod)
      if (Object.hasOwnProperty.call(mod, k))
        result[k] = mod[k];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.zd ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value2) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value2);
  return value2;
}

// node_modules/@progress/kendo-data-query/dist/es/funcs.js
var ifElse = function(predicate, right2, left2) {
  return function(value2) {
    return predicate(value2) ? right2(value2) : left2(value2);
  };
};
var compose = function() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  return function(data2) {
    return args.reduceRight(function(acc, curr) {
      return curr(acc);
    }, data2);
  };
};
var constant = function(x) {
  return function() {
    return x;
  };
};
var identity = function(x) {
  return x;
};

// node_modules/@progress/kendo-data-query/dist/es/filter-serialization.common.js
var wrapIf = function(predicate) {
  return function(str) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }
    return predicate() ? "" + str[0] + args[0] + str[1] : args[0];
  };
};
var toUTC = function(date2) {
  return new Date(Date.UTC(date2.getFullYear(), date2.getMonth(), date2.getDate(), date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds()));
};
var quote = function(_a14) {
  var field = _a14.field, value2 = _a14.value, ignoreCase = _a14.ignoreCase, operator = _a14.operator;
  return {
    value: "'" + value2.replace(/'/g, "''") + "'",
    field,
    ignoreCase,
    operator
  };
};
var encodeValue = function(_a14) {
  var field = _a14.field, value2 = _a14.value, ignoreCase = _a14.ignoreCase, operator = _a14.operator;
  return {
    value: "" + encodeURIComponent(value2),
    field,
    ignoreCase,
    operator
  };
};
var toLower = function(_a14) {
  var field = _a14.field, value2 = _a14.value, ignoreCase = _a14.ignoreCase, operator = _a14.operator;
  return {
    field: wrapIf(function() {
      return ignoreCase;
    })(templateObject_1 || (templateObject_1 = tslib_es6_exports.Sb(["tolower(", ")"], ["tolower(", ")"])), field),
    value: value2,
    ignoreCase,
    operator
  };
};
var normalizeField = function(_a14) {
  var field = _a14.field, value2 = _a14.value, ignoreCase = _a14.ignoreCase, operator = _a14.operator;
  return {
    value: value2,
    field: field.replace(/\./g, "/"),
    ignoreCase,
    operator
  };
};
var isStringValue = function(x) {
  return isString(x.value);
};
var isDateValue = function(x) {
  return isDate(x.value);
};
var serializeFilters = function(map2, join3) {
  return function(filter2) {
    var brackets = wrapIf(function() {
      return filter2.filters.length > 1;
    });
    return brackets(templateObject_2 || (templateObject_2 = tslib_es6_exports.Sb(["(", ")"], [
      "(",
      ")"
    ])), filter2.filters.map(map2).join(join3(filter2)));
  };
};
var templateObject_1, templateObject_2;

// node_modules/@progress/kendo-data-query/dist/es/filtering/filter.operators.js
var operatorMap = function(key) {
  return {
    "!=": "neq",
    "<": "lt",
    "<=": "lte",
    "==": "eq",
    ">": "gt",
    ">=": "gte",
    equal: "eq",
    equals: "eq",
    equalto: "eq",
    ge: "gte",
    greater: "gt",
    greaterthan: "gt",
    greaterthanequal: "gte",
    isempty: "isempty",
    isequalto: "eq",
    isgreaterthan: "gt",
    isgreaterthanorequalto: "gte",
    islessthan: "lt",
    islessthanorequalto: "lte",
    isnotempty: "isnotempty",
    isnotequalto: "neq",
    isnull: "isnull",
    le: "lte",
    less: "lt",
    lessthan: "lt",
    lessthanequal: "lte",
    ne: "neq",
    notequal: "neq",
    notequals: "neq",
    notequalto: "neq",
    notsubstringof: "doesnotcontain"
  }[key.toLowerCase()] || key;
};
var normalizeOperator = function(descriptor) {
  if (descriptor.filters) {
    descriptor.filters = descriptor.filters.map(function(filter2) {
      var result = Object.assign({}, filter2);
      if (!isCompositeFilterDescriptor(filter2) && isString(filter2.operator)) {
        result.operator = operatorMap(filter2.operator);
      }
      if (isCompositeFilterDescriptor(filter2)) {
        normalizeOperator(result);
      }
      return result;
    });
  }
};
var normalizeDescriptor = function(descriptor) {
  if (!isCompositeFilterDescriptor(descriptor)) {
    return {
      filters: isArray(descriptor) ? descriptor : [descriptor],
      logic: "and"
    };
  }
  return Object.assign({}, descriptor);
};
var normalizeFilters = function(descriptor) {
  if (isPresent(descriptor)) {
    descriptor = normalizeDescriptor(descriptor);
    normalizeOperator(descriptor);
  }
  return descriptor;
};

// node_modules/@progress/kendo-data-query/dist/es/odata-filtering.operators.js
var formatDate = function(_a14) {
  var utcDates = _a14.utcDates;
  return function(_a15) {
    var field = _a15.field, value2 = _a15.value, ignoreCase = _a15.ignoreCase, operator = _a15.operator;
    return {
      value: JSON.stringify(!utcDates ? toUTC(value2) : value2).replace(/"/g, ""),
      field,
      ignoreCase,
      operator
    };
  };
};
var fnFormatter = function(_a14) {
  var operator = _a14.operator;
  return function(_a15) {
    var field = _a15.field, value2 = _a15.value;
    return operator + "(" + field + "," + value2 + ")";
  };
};
var singleOperatorFormatter = function(_a14) {
  var operator = _a14.operator;
  return function(_a15) {
    var field = _a15.field, value2 = _a15.value;
    return field + " " + operator + " " + value2;
  };
};
var stringFormat = function(formatter) {
  return compose(formatter, encodeValue, quote, toLower, normalizeField);
};
var stringFnOperator = function(settings) {
  return stringFormat(fnFormatter(settings));
};
var stringOperator = function(settings) {
  return stringFormat(singleOperatorFormatter(settings));
};
var numericOperator = function(settings) {
  return compose(singleOperatorFormatter(settings), normalizeField);
};
var dateOperator = function(settings) {
  return compose(singleOperatorFormatter(settings), normalizeField, formatDate(settings));
};
var ifDate = function(settings) {
  return ifElse(isDateValue, dateOperator(settings), numericOperator(settings));
};
var typedOperator = function(settings) {
  return ifElse(isStringValue, stringOperator(settings), ifDate(settings));
};
var appendEqual = function(str) {
  return str + " eq -1";
};
var nonValueExpression = function(formatter) {
  return compose(formatter, normalizeField);
};
var filterOperators = function(operator, settings) {
  return {
    contains: stringFnOperator(tslib_es6_exports.ua({}, settings, { operator: "contains" })),
    doesnotcontain: compose(appendEqual, stringFnOperator(tslib_es6_exports.ua({}, settings, { operator: "indexof" }))),
    endswith: stringFnOperator(tslib_es6_exports.ua({}, settings, { operator: "endswith" })),
    eq: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "eq" })),
    gt: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "gt" })),
    gte: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "ge" })),
    isempty: nonValueExpression(function(_a14) {
      var field = _a14.field;
      return field + " eq ''";
    }),
    isnotempty: nonValueExpression(function(_a14) {
      var field = _a14.field;
      return field + " ne ''";
    }),
    isnotnull: nonValueExpression(function(_a14) {
      var field = _a14.field;
      return field + " ne null";
    }),
    isnull: nonValueExpression(function(_a14) {
      var field = _a14.field;
      return field + " eq null";
    }),
    lt: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "lt" })),
    lte: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "le" })),
    neq: typedOperator(tslib_es6_exports.ua({}, settings, { operator: "ne" })),
    startswith: stringFnOperator(tslib_es6_exports.ua({}, settings, { operator: "startswith" }))
  }[operator];
};
var join = function(x) {
  return " " + x.logic + " ";
};
var serialize = function(settings) {
  return function(x) {
    return filterOperators(x.operator, settings)(x);
  };
};
var serializeAll = function(settings) {
  return serializeFilters(function(filter2) {
    return ifElse(isCompositeFilterDescriptor, serializeAll(settings), serialize(settings))(filter2);
  }, join);
};
var serializeFilter = function(filter2, settings) {
  if (settings === void 0) {
    settings = {};
  }
  if (filter2.filters && filter2.filters.length) {
    return "$filter=" + serializeAll(settings)(normalizeFilters(filter2));
  }
  return "";
};

// node_modules/@progress/kendo-data-query/dist/es/odata.operators.js
var serializeSort = function(orderby) {
  var str = orderby.filter(function(sort3) {
    return isPresent(sort3.dir);
  }).map(function(sort3) {
    var order = sort3.field.replace(/\./g, "/");
    return sort3.dir === "desc" ? order + " desc" : order;
  }).join(",");
  return str ? "$orderby=" + str : str;
};
var emptyString = constant("");
var concat = function(a) {
  return function(b) {
    return a + b;
  };
};
var serializeKey = function(strings, val) {
  return ifElse(isPresent, concat(strings[0]), emptyString)(val);
};
var rules = function(settings, state) {
  return function(key) {
    return {
      "filter": serializeFilter(state.filter || {}, settings),
      "skip": serializeKey(templateObject_12 || (templateObject_12 = tslib_es6_exports.Sb(["$skip=", ""], ["$skip=", ""])), state.skip),
      "sort": serializeSort(state.sort || []),
      "take": serializeKey(templateObject_22 || (templateObject_22 = tslib_es6_exports.Sb(["$top=", ""], ["$top=", ""])), state.take)
    }[key];
  };
};
var toODataString = function(state, settings) {
  if (settings === void 0) {
    settings = {};
  }
  return Object.keys(state).map(rules(settings, state)).filter(isNotNullOrEmptyString).join("&");
};
var templateObject_12, templateObject_22;

// node_modules/@progress/kendo-data-query/dist/es/accessor.js
var getterCache2 = {};
var FIELD_REGEX2 = /\[(?:(\d+)|['"](.*?)['"])\]|((?:(?!\[.*?\]|\.).)+)/g;
getterCache2["undefined"] = function(obj) {
  return obj;
};
var getter2 = function(field, safe) {
  var key = field + safe;
  if (getterCache2[key]) {
    return getterCache2[key];
  }
  var fields = [];
  field.replace(FIELD_REGEX2, function(_2, index, indexAccessor, field2) {
    fields.push(isPresent(index) ? index : indexAccessor || field2);
    return void 0;
  });
  getterCache2[key] = function(obj) {
    var result = obj;
    for (var idx = 0; idx < fields.length; idx++) {
      result = result[fields[idx]];
      if (!isPresent(result) && safe) {
        return result;
      }
    }
    return result;
  };
  return getterCache2[key];
};

// node_modules/@progress/kendo-data-query/dist/es/mvc/operators.js
var toQueryString = function(values2) {
  return values2.reduce(function(acc, _a14) {
    var key = _a14[0], value2 = _a14[1];
    return acc.concat([key + "=" + value2]);
  }, []);
};
var toObject = function(values2) {
  return values2.reduce(function(acc, _a14) {
    var key = _a14[0], value2 = _a14[1];
    var _b3;
    return tslib_es6_exports.ua({}, acc, (_b3 = {}, _b3[key] = value2, _b3));
  }, {});
};
var pairwise = function(key) {
  return function(value2) {
    return [key, value2];
  };
};
var empty = function() {
  return null;
};
var isNotEmptyArray = function(value2) {
  return isPresent(value2) && isArray(value2) && value2.length > 0;
};
var has = function(accessor) {
  return function(value2) {
    return isPresent(accessor(value2));
  };
};
var isNotEmpty = function(accessor) {
  return function(value2) {
    return isNotEmptyArray(accessor(value2));
  };
};
var runOrEmpty = function(predicate, fn) {
  return ifElse(predicate, fn, empty);
};
var calcPage = function(_a14) {
  var skip3 = _a14.skip, take3 = _a14.take;
  return Math.floor((skip3 || 0) / take3) + 1;
};
var formatDescriptors = function(accessor, formatter) {
  return function(state) {
    return accessor(state).map(formatter).join("~");
  };
};
var removeAfter = function(what) {
  return function(str) {
    return str.slice(0, str.indexOf(what));
  };
};
var replace = function(patterns) {
  return compose.apply(void 0, patterns.map(function(_a14) {
    var left2 = _a14[0], right2 = _a14[1];
    return function(s) {
      return s.replace(new RegExp(left2, "g"), right2);
    };
  }));
};
var sanitizeDateLiterals = replace([['"', ""], [":", "-"]]);
var removeAfterDot = removeAfter(".");
var directionFormatter = function(_a14) {
  var field = _a14.field, _b3 = _a14.dir, dir = _b3 === void 0 ? "asc" : _b3;
  return field + "-" + dir;
};
var aggregateFormatter = function(_a14) {
  var field = _a14.field, aggregate = _a14.aggregate;
  return field + "-" + aggregate;
};
var take = getter2("take");
var aggregates = getter2("aggregates");
var skip = getter2("skip");
var group = getter2("group");
var sort = getter2("sort", true);
var formatSort = formatDescriptors(sort, directionFormatter);
var formatGroup = formatDescriptors(group, directionFormatter);
var formatAggregates = formatDescriptors(aggregates, aggregateFormatter);
var prefixDateValue = function(value2) {
  return "datetime'" + value2 + "'";
};
var formatDateValue = compose(prefixDateValue, removeAfterDot, sanitizeDateLiterals, JSON.stringify, toUTC);
var formatDate2 = function(_a14) {
  var field = _a14.field, value2 = _a14.value, ignoreCase = _a14.ignoreCase, operator = _a14.operator;
  return {
    value: formatDateValue(value2),
    field,
    ignoreCase,
    operator
  };
};
var normalizeSort = function(state) {
  return Object.assign({}, state, {
    sort: (sort(state) || []).filter(function(_a14) {
      var dir = _a14.dir;
      return isNotNullOrEmptyString(dir);
    })
  });
};
var transformSkip = compose(pairwise("page"), calcPage);
var transformTake = compose(pairwise("pageSize"), take);
var transformGroup = compose(pairwise("group"), formatGroup);
var transformSort = compose(pairwise("sort"), formatSort);
var transformAggregates = compose(pairwise("aggregate"), formatAggregates);
var serializePage = runOrEmpty(has(skip), transformSkip);
var serializePageSize = runOrEmpty(has(take), transformTake);
var serializeGroup = runOrEmpty(isNotEmpty(group), transformGroup);
var serializeAggregates = runOrEmpty(has(aggregates), transformAggregates);
var serializeSort2 = compose(runOrEmpty(isNotEmpty(sort), transformSort), normalizeSort);
var hasField = function(_a14) {
  var field = _a14.field;
  return isNotNullOrEmptyString(field);
};
var filterFormatter = function(_a14) {
  var field = _a14.field, operator = _a14.operator, value2 = _a14.value;
  return field + "~" + operator + "~" + value2;
};
var dateFormatter = ifElse(isDateValue, compose(filterFormatter, formatDate2), filterFormatter);
var typedFormatter = function(encode) {
  return runOrEmpty(hasField, ifElse(isStringValue, compose(filterFormatter, quote, encode ? encodeValue : identity), dateFormatter));
};
var join2 = function(_a14) {
  var logic2 = _a14.logic;
  return "~" + logic2 + "~";
};
var serialize2 = function(encode) {
  return serializeFilters(function(filter2) {
    return ifElse(isCompositeFilterDescriptor, serialize2(encode), typedFormatter(encode))(filter2);
  }, join2);
};
var serializeFilter2 = function(_a14, encode) {
  var filter2 = _a14.filter;
  if (filter2 && filter2.filters) {
    var filters = serialize2(encode)(filter2);
    if (filters.length) {
      return ["filter", filters];
    }
  }
  return null;
};
var rules2 = function(state, encode) {
  if (encode === void 0) {
    encode = true;
  }
  return function(key) {
    return {
      "aggregates": serializeAggregates(state),
      "filter": serializeFilter2(state, encode),
      "group": serializeGroup(state),
      "skip": serializePage(state),
      "sort": serializeSort2(state),
      "take": serializePageSize(state)
    }[key];
  };
};
var toDataSourceRequestString = function(state) {
  return toQueryString(Object.keys(state).map(rules2(state)).filter(isPresent)).join("&");
};
var toDataSourceRequest = function(state) {
  return toObject(Object.keys(state).map(rules2(state, false)).filter(isPresent));
};

// node_modules/@progress/kendo-data-query/dist/es/mvc/deserialization.js
var set = function(field, target, value2) {
  target[field] = value2;
  return target;
};
var toCamelCase = function(str) {
  return str.replace(/(^[A-Z])/g, function(_2, g1) {
    return g1.toLowerCase();
  });
};
var prop = function(fieldName) {
  return function(obj) {
    var value2 = obj[fieldName];
    if (isPresent(value2)) {
      return value2;
    }
    return obj[toCamelCase(fieldName)];
  };
};
var member = prop("Member");
var aggregateMethodName = prop("AggregateMethodName");
var value = prop("Value");
var convert = function(mapper) {
  return function(values2) {
    return Object.keys(values2).reduce(mapper.bind(null, values2), {});
  };
};
var translateAggregate = convert(function(source, acc, field) {
  return set(field.toLowerCase(), acc, source[field]);
});
var translateAggregates = convert(function(source, acc, field) {
  return set(field, acc, translateAggregate(source[field]));
});
var valueOrDefault = function(value2, defaultValue2) {
  return isPresent(value2) ? value2 : defaultValue2;
};
var normalizeGroup = function(group2) {
  return {
    aggregates: group2.Aggregates || group2.aggregates,
    field: group2.Member || group2.member || group2.field,
    hasSubgroups: group2.HasSubgroups || group2.hasSubgroups || false,
    items: group2.Items || group2.items,
    value: valueOrDefault(group2.Key, valueOrDefault(group2.key, group2.value))
  };
};
var translateGroup = compose(function(_a14) {
  var field = _a14.field, hasSubgroups = _a14.hasSubgroups, value2 = _a14.value, aggregates2 = _a14.aggregates, items = _a14.items;
  return {
    aggregates: translateAggregates(aggregates2),
    field,
    items: hasSubgroups ? items.map(translateGroup) : items,
    value: value2
  };
}, normalizeGroup);
var translateDataSourceResultGroups = function(data2) {
  return data2.map(translateGroup);
};
var translateAggregateResults = function(data2) {
  return (data2 || []).reduce(function(acc, x) {
    return set(member(x), acc, set(aggregateMethodName(x).toLowerCase(), acc[member(x)] || {}, value(x)));
  }, {});
};

// node_modules/@progress/kendo-data-query/dist/es/sorting/sort-array.operator.js
var compare = function(a, b) {
  if (isBlank(a)) {
    return a === b ? 0 : -1;
  }
  if (isBlank(b)) {
    return 1;
  }
  if (a.localeCompare) {
    return a.localeCompare(b);
  }
  return a > b ? 1 : a < b ? -1 : 0;
};
var compareDesc = function(a, b) {
  return compare(b, a);
};
var descriptorAsFunc = function(descriptor) {
  var prop2 = getter2(descriptor.field, true);
  return function(a, b) {
    return (descriptor.dir === "asc" ? compare : compareDesc)(prop2(a), prop2(b));
  };
};
var initial = function(_a14, _b3) {
  return 0;
};
var composeSortDescriptors = function(descriptors) {
  return descriptors.filter(function(x) {
    return isPresent(x.dir);
  }).map(function(descriptor) {
    return descriptorAsFunc(descriptor);
  }).reduce(function(acc, curr) {
    return function(a, b) {
      return acc(a, b) || curr(a, b);
    };
  }, initial);
};

// node_modules/@progress/kendo-data-query/dist/es/transducers.js
var valueToString = function(value2) {
  value2 = isPresent(value2) && value2.getTime ? value2.getTime() : value2;
  return value2 + "";
};
var groupCombinator = function(field) {
  var prop2 = getter2(field, true);
  var position4 = 0;
  return function(agg, value2) {
    agg[field] = agg[field] || {};
    var groupValue = prop2(value2);
    var key = valueToString(groupValue);
    var values2 = agg[field][key] || { Ad: position4++, aggregates: {}, items: [], value: groupValue };
    values2.items.push(value2);
    agg[field][key] = values2;
    return agg;
  };
};
var expandAggregates = function(result) {
  if (result === void 0) {
    result = {};
  }
  Object.keys(result).forEach(function(field) {
    var aggregates2 = result[field];
    Object.keys(aggregates2).forEach(function(aggregate) {
      aggregates2[aggregate] = aggregates2[aggregate].result();
    });
  });
  return result;
};
var aggregatesFuncs = function(name2) {
  return {
    average: function() {
      var value2 = 0;
      var count2 = 0;
      return {
        calc: function(curr) {
          if (isNumeric(curr)) {
            value2 += curr;
            count2++;
          } else {
            value2 = curr;
          }
        },
        result: function() {
          return isNumeric(value2) ? value2 / count2 : value2;
        }
      };
    },
    count: function() {
      var state = 0;
      return {
        calc: function() {
          return state++;
        },
        result: function() {
          return state;
        }
      };
    },
    max: function() {
      var state = Number.NEGATIVE_INFINITY;
      return {
        calc: function(value2) {
          state = isNumeric(state) || isDate(state) ? state : value2;
          if (state < value2 && (isNumeric(value2) || isDate(value2))) {
            state = value2;
          }
        },
        result: function() {
          return state;
        }
      };
    },
    min: function() {
      var state = Number.POSITIVE_INFINITY;
      return {
        calc: function(value2) {
          state = isNumeric(state) || isDate(state) ? state : value2;
          if (state > value2 && (isNumeric(value2) || isDate(value2))) {
            state = value2;
          }
        },
        result: function() {
          return state;
        }
      };
    },
    sum: function() {
      var state = 0;
      return {
        calc: function(value2) {
          value2 = isPresent(value2) ? value2 : 0;
          state += value2;
        },
        result: function() {
          return state;
        }
      };
    }
  }[name2]();
};
var aggregatesCombinator = function(descriptors) {
  var functions = descriptors.map(function(descriptor) {
    var fieldAccessor = getter2(descriptor.field, true);
    var aggregateName = (descriptor.aggregate || "").toLowerCase();
    var aggregateAccessor = getter2(aggregateName, true);
    return function(state, value2) {
      var fieldAggregates = state[descriptor.field] || {};
      var aggregateFunction = aggregateAccessor(fieldAggregates) || aggregatesFuncs(aggregateName);
      aggregateFunction.calc(fieldAccessor(value2));
      fieldAggregates[descriptor.aggregate] = aggregateFunction;
      state[descriptor.field] = fieldAggregates;
      return state;
    };
  });
  return function(state, value2) {
    return functions.reduce(function(agg, calc) {
      return calc(agg, value2);
    }, state);
  };
};
var concat2 = function(arr, value2) {
  arr.push(value2);
  return arr;
};
var map = function(transform2) {
  return function(reduce) {
    return function(acc, curr, index) {
      return reduce(acc, transform2(curr, index));
    };
  };
};
var filter = function(predicate) {
  return function(reduce) {
    return function(acc, curr) {
      return predicate(curr) ? reduce(acc, curr) : acc;
    };
  };
};
var isTransformerResult = function(source) {
  return isPresent(source.Fc);
};
var reduced = function(x) {
  if (isTransformerResult(x)) {
    return x;
  }
  return {
    Fc: x,
    reduced: true
  };
};
var take2 = function(count2) {
  return function(reduce) {
    return function(acc, curr) {
      return count2-- > 0 ? reduce(acc, curr) : reduced(acc);
    };
  };
};
var takeWhile = function(predicate) {
  return function(reduce) {
    return function(acc, curr) {
      return predicate(curr) ? reduce(acc, curr) : reduced(acc);
    };
  };
};
var skip2 = function(count2) {
  return function(reduce) {
    return function(acc, curr) {
      return count2-- <= 0 ? reduce(acc, curr) : acc;
    };
  };
};
var exec = function(transform2, initialValue, data2) {
  var result = initialValue;
  for (var idx = 0, length_1 = data2.length; idx < length_1; idx++) {
    result = transform2(result, data2[idx], idx);
    if (isTransformerResult(result)) {
      result = result.Fc;
      break;
    }
  }
  return result;
};

// node_modules/@progress/kendo-data-query/dist/es/grouping/aggregate.operators.js
var identity2 = map(function(x) {
  return x;
});
var aggregateBy = function(data2, descriptors, transformers) {
  if (descriptors === void 0) {
    descriptors = [];
  }
  if (transformers === void 0) {
    transformers = identity2;
  }
  var initialValue = {};
  if (!descriptors.length) {
    return initialValue;
  }
  var result = exec(transformers(aggregatesCombinator(descriptors)), initialValue, data2);
  return expandAggregates(result);
};

// node_modules/@progress/kendo-data-query/dist/es/filtering/filter-no-eval.js
var logic = {
  "or": {
    concat: function(acc, fn) {
      return function(a) {
        return acc(a) || fn(a);
      };
    },
    identity: function() {
      return false;
    }
  },
  "and": {
    concat: function(acc, fn) {
      return function(a) {
        return acc(a) && fn(a);
      };
    },
    identity: function() {
      return true;
    }
  }
};
var operatorsMap = {
  contains: function(a, b) {
    return (a || "").indexOf(b) >= 0;
  },
  doesnotcontain: function(a, b) {
    return (a || "").indexOf(b) === -1;
  },
  doesnotendwith: function(a, b) {
    return (a || "").indexOf(b, (a || "").length - (b || "").length) < 0;
  },
  doesnotstartwith: function(a, b) {
    return (a || "").lastIndexOf(b, 0) === -1;
  },
  endswith: function(a, b) {
    return (a || "").indexOf(b, (a || "").length - (b || "").length) >= 0;
  },
  eq: function(a, b) {
    return a === b;
  },
  gt: function(a, b) {
    return a > b;
  },
  gte: function(a, b) {
    return a >= b;
  },
  isempty: function(a) {
    return a === "";
  },
  isnotempty: function(a) {
    return a !== "";
  },
  isnotnull: function(a) {
    return isPresent(a);
  },
  isnull: function(a) {
    return isBlank(a);
  },
  lt: function(a, b) {
    return a < b;
  },
  lte: function(a, b) {
    return a <= b;
  },
  neq: function(a, b) {
    return a != b;
  },
  startswith: function(a, b) {
    return (a || "").lastIndexOf(b, 0) === 0;
  }
};
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var convertValue = function(value2, ignoreCase) {
  if (value2 != null && isString(value2)) {
    var date2 = dateRegExp.exec(value2);
    if (date2) {
      return (/* @__PURE__ */ new Date(+date2[1])).getTime();
    } else if (ignoreCase) {
      return value2.toLowerCase();
    }
  } else if (value2 != null && isDate(value2)) {
    return value2.getTime();
  }
  return value2;
};
var typedGetter = function(prop2, value2, ignoreCase) {
  if (!isPresent(value2)) {
    return prop2;
  }
  var acc = prop2;
  if (isString(value2)) {
    var date2 = dateRegExp.exec(value2);
    if (date2) {
      value2 = /* @__PURE__ */ new Date(+date2[1]);
    } else {
      acc = function(a) {
        var x = prop2(a);
        if (typeof x === "string" && ignoreCase) {
          return x.toLowerCase();
        } else {
          return isNumeric(x) ? x + "" : x;
        }
      };
    }
  }
  if (isDate(value2)) {
    return function(a) {
      var x = acc(a);
      return isDate(x) ? x.getTime() : x;
    };
  }
  return acc;
};
var transformFilter = function(_a14) {
  var field = _a14.field, ignoreCase = _a14.ignoreCase, value2 = _a14.value, operator = _a14.operator;
  field = !isPresent(field) ? function(a) {
    return a;
  } : field;
  ignoreCase = isPresent(ignoreCase) ? ignoreCase : true;
  var itemProp = typedGetter(isFunction(field) ? field : getter2(field, true), value2, ignoreCase);
  value2 = convertValue(value2, ignoreCase);
  var op = isFunction(operator) ? operator : operatorsMap[operator];
  return function(a) {
    return op(itemProp(a), value2, ignoreCase);
  };
};
var transformCompositeFilter = function(filter2) {
  var combiner = logic[filter2.logic];
  return filter2.filters.filter(isPresent).map(function(x) {
    return isCompositeFilterDescriptor(x) ? transformCompositeFilter(x) : transformFilter(x);
  }).reduce(combiner.concat, combiner.identity);
};

// node_modules/@progress/kendo-data-query/dist/es/filtering/filter-expression.factory.js
var compileFilter = function(descriptor) {
  if (!descriptor || descriptor.filters.length === 0) {
    return function() {
      return true;
    };
  }
  return transformCompositeFilter(descriptor);
};
var filterBy = function(data2, descriptor) {
  if (!isPresent(descriptor) || isCompositeFilterDescriptor(descriptor) && descriptor.filters.length === 0) {
    return data2;
  }
  return data2.filter(compileFilter(normalizeFilters(descriptor)));
};

// node_modules/@progress/kendo-data-query/dist/es/grouping/group.operators.js
var normalizeGroups = function(descriptors) {
  descriptors = isArray(descriptors) ? descriptors : [descriptors];
  return descriptors.map(function(x) {
    return Object.assign({ dir: "asc" }, x);
  });
};
var identity3 = map(function(x) {
  return x;
});
var groupBy = function(data2, descriptors, transformers, originalData) {
  if (descriptors === void 0) {
    descriptors = [];
  }
  if (transformers === void 0) {
    transformers = identity3;
  }
  if (originalData === void 0) {
    originalData = data2;
  }
  descriptors = normalizeGroups(descriptors);
  if (!descriptors.length) {
    return data2;
  }
  var descriptor = descriptors[0];
  var initialValue = {};
  var view = exec(transformers(groupCombinator(descriptor.field)), initialValue, data2);
  var result = [];
  Object.keys(view).forEach(function(field) {
    Object.keys(view[field]).forEach(function(value2) {
      var group2 = view[field][value2];
      var aggregateResult = {};
      var filteredData = originalData;
      if (isPresent(descriptor.aggregates)) {
        filteredData = filterBy(originalData, {
          field: descriptor.field,
          ignoreCase: false,
          operator: "eq",
          value: group2.value
        });
        aggregateResult = aggregateBy(filteredData, descriptor.aggregates);
      }
      result[group2.Ad] = {
        aggregates: aggregateResult,
        field,
        items: descriptors.length > 1 ? groupBy(group2.items, descriptors.slice(1), identity3, filteredData) : group2.items,
        value: group2.value
      };
    });
  });
  return result;
};

// node_modules/@progress/kendo-data-query/dist/es/sorting/sort.js
var merge = function(data2, left2, middle, right2, compare2) {
  var leftLength = middle - left2;
  var rightLength = right2 - middle;
  var temp = [];
  for (var idx = 0; idx < leftLength; idx++) {
    temp.push(data2[left2 + idx]);
  }
  var cursor1 = 0;
  var cursor2 = middle;
  var dest = left2;
  do {
    if (compare2(data2[cursor2], temp[cursor1]) < 0) {
      data2[dest++] = data2[cursor2++];
      rightLength--;
    } else {
      data2[dest++] = temp[cursor1++];
      leftLength--;
    }
  } while (rightLength > 0 && leftLength > 0);
  while (leftLength) {
    data2[dest++] = temp[cursor1++];
    leftLength--;
  }
  while (rightLength) {
    data2[dest++] = data2[cursor2++];
    rightLength--;
  }
};
var sort2 = function(data2, start2, end2, compare2) {
  if (end2 - start2 < 2) {
    return;
  }
  var mid = start2 + end2 >>> 1;
  sort2(data2, start2, mid, compare2);
  sort2(data2, mid, end2, compare2);
  merge(data2, start2, mid, end2, compare2);
};

// node_modules/@progress/kendo-data-query/dist/es/array.operators.js
var orderBy = function(data2, descriptors) {
  if (descriptors.some(function(x) {
    return isPresent(x.dir);
  })) {
    data2 = data2.slice(0);
    var comparer = composeSortDescriptors(descriptors);
    sort2(data2, 0, data2.length, comparer);
  }
  return data2;
};
var defaultComparer = function(a, b) {
  return a === b;
};
var normalizeComparer = function(comparer) {
  if (isString(comparer)) {
    var accessor_1 = getter2(comparer);
    comparer = function(a, b) {
      return accessor_1(a) === accessor_1(b);
    };
  }
  return comparer;
};
var _distinct = function(data2, comparer) {
  return data2.filter(function(x, idx, xs) {
    return xs.findIndex(comparer.bind(null, x)) === idx;
  });
};
var distinct = function(data2, comparer) {
  if (comparer === void 0) {
    comparer = defaultComparer;
  }
  return _distinct(data2, normalizeComparer(comparer));
};
var count = function(data2, predicate) {
  var counter = 0;
  for (var idx = 0, length_1 = data2.length; idx < length_1; idx++) {
    if (predicate(data2[idx])) {
      counter++;
    }
  }
  return counter;
};
var limit = function(data2, predicate) {
  if (predicate) {
    return data2.filter(predicate);
  }
  return data2;
};
var process2 = function(data2, state) {
  var skipCount = state.skip, takeCount = state.take, filterDescriptor = state.filter, sort3 = state.sort, group2 = state.group;
  var sortDescriptors = normalizeGroups(group2 || []).concat(sort3 || []);
  if (sortDescriptors.length) {
    data2 = orderBy(data2, sortDescriptors);
  }
  var hasFilters = isPresent(filterDescriptor) && filter.length;
  var hasGroups = isPresent(group2) && group2.length;
  if (!hasFilters && !hasGroups) {
    return {
      data: takeCount ? data2.slice(skipCount, skipCount + takeCount) : data2,
      total: data2.length
    };
  }
  var total;
  var transformers = [];
  var predicate;
  if (hasFilters) {
    predicate = compileFilter(normalizeFilters(filterDescriptor));
    total = count(data2, predicate);
    transformers.push(filter(predicate));
  } else {
    total = data2.length;
  }
  if (isPresent(skipCount) && isPresent(takeCount)) {
    transformers.push(skip2(skipCount));
    transformers.push(take2(takeCount));
  }
  if (transformers.length) {
    var transform2 = compose.apply(void 0, transformers);
    var result = hasGroups ? groupBy(data2, group2, transform2, limit(data2, predicate)) : exec(transform2(concat2), [], data2);
    return { data: result, total };
  }
  return {
    data: hasGroups ? groupBy(data2, group2) : data2,
    total
  };
};

// node_modules/@progress/kendo-data-query/dist/es/filtering/operators.enum.js
var FilterOperator;
(function(FilterOperator2) {
  FilterOperator2["Contains"] = "contains";
  FilterOperator2["DoesNotContain"] = "doesnotcontain";
  FilterOperator2["DoesNotEndWith"] = "doesnotendwith";
  FilterOperator2["DoesNotStartWith"] = "doesnotstartwith";
  FilterOperator2["EndsWith"] = "endswith";
  FilterOperator2["EqualTo"] = "eq";
  FilterOperator2["GreaterThan"] = "gt";
  FilterOperator2["GreaterThanOrEqual"] = "gte";
  FilterOperator2["IsEmpty"] = "isempty";
  FilterOperator2["IsNotEmpty"] = "isnotempty";
  FilterOperator2["IsNotNull"] = "isnotnull";
  FilterOperator2["IsNull"] = "isnull";
  FilterOperator2["LessThan"] = "lt";
  FilterOperator2["LessThanOrEqual"] = "lte";
  FilterOperator2["NotEqualTo"] = "neq";
  FilterOperator2["StartsWith"] = "startswith";
})(FilterOperator || (FilterOperator = {}));

// node_modules/@progress/kendo-react-scheduler/dist/es/utils/index.js
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var __spreadArray4 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var first = function(arr) {
  return arr[0];
};
var last2 = function(arr) {
  return arr[arr.length - 1];
};
var isMultiDay = function(item) {
  var result = item.end.getTime() - item.start.getTime() > (/* @__PURE__ */ new Date(0)).setHours(24);
  return result;
};
var isGroupped = function(resources) {
  var set2 = /* @__PURE__ */ new Set();
  resources.forEach(function(resource) {
    set2.add(resource.field);
  });
  return set2.size === resources.length;
};
function formatEventTime(intl, start2, end2, isAllDay) {
  var startTimeFormat = { skeleton: "yMMMMEEEEdhm" };
  var startDateFormat = { skeleton: "yMMMMEEEEd" };
  var endFormat = "t";
  return isAllDay ? "".concat(intl.formatDate(start2, startDateFormat)) : "".concat(intl.formatDate(start2, startTimeFormat), "\u2013").concat(intl.formatDate(end2, endFormat));
}
var addUTCDays2 = function(date2, offset4) {
  var newDate = new Date(date2.getTime());
  newDate.setUTCDate(newDate.getUTCDate() + offset4);
  return newDate;
};
function dateWithTime(target, time2) {
  return new Date(target.getFullYear(), target.getMonth(), target.getDate(), time2.getHours(), time2.getMinutes());
}
var getToday = function() {
  return getDate(/* @__PURE__ */ new Date());
};
var slotDive = function(x, y, maxDepth, level) {
  if (level === void 0) {
    level = 0;
  }
  if (level === maxDepth) {
    return null;
  }
  var result = null;
  var element6 = document.elementFromPoint(x, y);
  if (!element6) {
    return result;
  }
  var isSlot = element6.getAttribute("data-slot") === "true";
  if (isSlot) {
    return element6;
  } else {
    var oldPointerEvents = element6.style.pointerEvents;
    element6.style.pointerEvents = "none";
    result = slotDive(x, y, maxDepth, level + 1);
    element6.style.pointerEvents = oldPointerEvents;
  }
  return result;
};
var getField = function(obj, field) {
  return getter(field)(obj);
};
var setField = function(obj, field, value2) {
  if (!field) {
    return;
  }
  return setter(field)(obj, value2);
};
function assignField(target, source, field) {
  setField(target, field, getField(source, field));
}
function assignFields(target, source) {
  var fields = [];
  for (var _i = 2; _i < arguments.length; _i++) {
    fields[_i - 2] = arguments[_i];
  }
  for (var idx = 0; idx < fields.length; idx++) {
    assignField(target, source, fields[idx]);
  }
}
var isPresent2 = function(value2) {
  return value2 !== null && value2 !== void 0;
};
var isRecurringMaster = function(event2) {
  return event2.recurrenceRule && !isPresent2(event2.recurrenceId);
};
function toUTCDate(localDate) {
  return new Date(Date.UTC(localDate.getFullYear(), localDate.getMonth(), localDate.getDate()));
}
function getUTCDate(utcDate) {
  return new Date(Date.UTC(utcDate.getUTCFullYear(), utcDate.getUTCMonth(), utcDate.getUTCDate()));
}
function toUTCDateTime(localDate) {
  return new Date(Date.UTC(localDate.getFullYear(), localDate.getMonth(), localDate.getDate(), localDate.getHours(), localDate.getMinutes(), localDate.getSeconds(), localDate.getMilliseconds()));
}
function toInvariantTime(date2) {
  var staticDate = new Date(1980, 1, 1, 0, 0, 0);
  if (date2) {
    staticDate.setHours(date2.getHours(), date2.getMinutes(), date2.getSeconds(), date2.getMilliseconds());
  }
  return staticDate;
}
function isRecurringException(event2) {
  return event2 && isPresent2(event2.recurrenceId) && !event2.recurrenceRule;
}
var isRecurring = function(event2, fields) {
  var recurrenceId = getter(fields.recurrenceId || "recurrenceId")(event2);
  var recurrenceRule = getter(fields.recurrenceRule || "recurrenceRule")(event2);
  return !!(recurrenceRule || recurrenceId);
};
var groupResources = function(group2, resources) {
  var result = [];
  if (group2 && group2.resources && group2.resources.length) {
    var groups_1 = group2.resources;
    var _loop_1 = function(idx2) {
      var resource = resources.find(function(r) {
        return r.name === groups_1[idx2];
      });
      result.push(resource);
    };
    for (var idx = 0; idx < groups_1.length; idx++) {
      _loop_1(idx);
    }
  }
  return result;
};
var findMaster = function(event2, fields, data2) {
  var headId = isMaster(event2, fields) ? getField(event2, fields.id) : getField(event2, fields.recurrenceId);
  return data2.find(function(currentEvent) {
    return getField(currentEvent, fields.id) === headId;
  });
};
var isMaster = function(event2, fields) {
  var id = getField(event2, fields.id);
  var recurrenceId = getField(event2, fields.recurrenceId);
  var recurrenceRule = getField(event2, fields.recurrenceRule);
  return !!(id && recurrenceRule && (recurrenceId === void 0 || recurrenceId === null));
};
var buildException = function(event2, fields, data2) {
  var headEvent = findMaster(event2, fields, data2);
  var copy = clone(event2);
  assignField(copy, headEvent, fields.id);
  if (fields.id !== void 0) {
    setField(copy, fields.id, DEFAULT_ID);
  }
  if (fields.recurrenceRule !== void 0) {
    setField(copy, fields.recurrenceRule, void 0);
  }
  if (fields.recurrenceId !== void 0) {
    setField(copy, fields.recurrenceId, getField(headEvent, fields.id));
  }
  return copy;
};
var isException = function(event2, fields) {
  return isPresent2(getField(event2, fields.recurrenceId)) && !getField(event2, fields.recurrenceRule);
};
var maxDate = function(x, y) {
  return Math.max(x.getTime(), y.getTime());
};
var minDate = function(x, y) {
  return Math.min(x.getTime(), y.getTime());
};
var intersects = function(startTime, endTime, periodStart, periodEnd, inclusive) {
  if (inclusive === void 0) {
    inclusive = false;
  }
  return inclusive ? maxDate(endTime, periodEnd) - minDate(startTime, periodStart) <= endTime.getTime() - startTime.getTime() + (periodEnd.getTime() - periodStart.getTime()) : maxDate(endTime, periodEnd) - minDate(startTime, periodStart) < endTime.getTime() - startTime.getTime() + (periodEnd.getTime() - periodStart.getTime());
};
var roundAllDayEnd = function(_a14) {
  var start2 = _a14.start, end2 = _a14.end;
  var startDate = start2.stripTime();
  var endDate = end2.stripTime();
  return endDate.getTime() !== end2.getTime() || startDate.getTime() === endDate.getTime() ? endDate.addDays(1) : endDate;
};
var defaultModelFields = {
  id: "id",
  start: "start",
  startTimezone: "startTimezone",
  originalStart: "originalStart",
  end: "end",
  endTimezone: "endTimezone",
  isAllDay: "isAllDay",
  title: "title",
  description: "description",
  recurrenceRule: "recurrenceRule",
  recurrenceId: "recurrenceId",
  recurrenceExceptions: "recurrenceExceptions"
};
var getModelFields = function(modelFields) {
  return { fields: __assign9(__assign9({}, defaultModelFields), modelFields) };
};
var isInTimeRange = function(date2, min, max) {
  return (min.getHours() < date2.getHours() || min.getHours() === date2.getHours() && min.getMinutes() <= date2.getMinutes()) && (date2.getHours() < max.getHours() || max.getHours() === date2.getHours() && date2.getMinutes() < max.getMinutes());
};
var isInDaysRange = function(date2, min, max) {
  return min < max ? min <= date2 && date2 <= max : date2 <= max || min <= date2;
};
var toSchedulerGroups = function(group2, resources) {
  var groupedResources = toGroupResources(group2, resources);
  var flat = toFlatGroupResources(groupedResources);
  if (flat.length === 1) {
    return [{
      index: 0,
      // resources: []
      resources: (resources || []).reduce(function(all, res) {
        return __spreadArray4(__spreadArray4([], all, true), res.data.map(function(item) {
          return __assign9(__assign9({}, item), { field: res.field, valueField: res.valueField, colorField: res.colorField, multiple: res.multiple });
        }), true);
      }, [])
    }];
  } else {
    return flat.map(function(res, index) {
      return {
        index,
        resources: res
      };
    });
  }
};
var toSchedulerResources = function(resources) {
  if (resources === void 0) {
    resources = [];
  }
  return resources.reduce(function(all, res) {
    return __spreadArray4(__spreadArray4([], all, true), res.data.map(function(item) {
      return __assign9(__assign9({}, item), { field: res.field, valueField: res.valueField, colorField: res.colorField, multiple: res.multiple });
    }), true);
  }, []);
};
var generateResourceFields = function(groups, defaultFields) {
  if (!groups || !groups.length) {
    return defaultFields;
  }
  var result = {};
  groups.forEach(function(group2) {
    group2.resources.forEach(function(resource) {
      if (result[resource.field] === void 0) {
        result[resource.field] = resource[resource.valueField];
      }
    });
  });
  return result;
};
var isBlank2 = function(value2) {
  return value2 === null || value2 === void 0;
};
var isNullOrEmptyString2 = function(value2) {
  return isBlank2(value2) || value2.trim && value2.trim().length === 0;
};
var setTime = function(origin, candidate) {
  var date2 = cloneDate(origin);
  date2.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());
  return date2;
};
function getDataIdx(value2, resource) {
  var data2 = resource.data;
  for (var dataIdx = 0; dataIdx < data2.length; dataIdx++) {
    if (getField(data2[dataIdx], resource.valueField) === value2) {
      return dataIdx;
    }
  }
  return 0;
}
var extractGroups = function(dataItem, fields, group2, resources) {
  var groupedResources = toGroupResources(group2, resources);
  var flat = toFlatGroupResources(groupedResources);
  var flatGroupsReducer = function(acc, items, index) {
    var match = true;
    items.forEach(function(item) {
      var expected = item[item.valueField];
      var actual = dataItem[fields[item.field] || item.field];
      if (Array.isArray(actual)) {
        match = match && actual.indexOf(expected) >= 0;
      } else {
        match = match && actual === expected;
      }
    });
    if (match) {
      return __spreadArray4(__spreadArray4([], acc, true), [{ index, resources: items }], false);
    } else {
      return acc;
    }
  };
  return flat.reduce(flatGroupsReducer, []);
};
var findLeafResource = function(level) {
  if (level === void 0) {
    level = 0;
  }
  return findLeafResource(level + 1);
};
var extractResourceFields = function(dataItem, fields, resources) {
  var result = {};
  if (!resources || !resources.length) {
    return result;
  }
  resources.forEach(function(resource) {
    var match = resource.data.find(function(item) {
      return item.value === dataItem[fields[resource.field] || resource.field];
    });
    if (match) {
      result[resource.field] = match.value;
    }
  });
  return result;
};
var extractResources = function(dataItem, fields, resources) {
  if (resources === void 0) {
    resources = [];
  }
  var resourceIndex = 0;
  var itemResources = [];
  for (var resourceIdx = 0; resourceIdx < resources.length; resourceIdx++) {
    var resource = resources[resourceIdx];
    var values2 = getField(dataItem, fields[resource.field] || resource.field);
    if (!Array.isArray(values2)) {
      values2 = [values2];
    }
    for (var valueIndex = 0; valueIndex < values2.length; valueIndex++) {
      if (values2[valueIndex] !== void 0) {
        var dataIdx = getDataIdx(values2[valueIndex], resource);
        var data2 = resource.data[dataIdx];
        var itemResource = {
          text: getField(data2, resource.textField),
          color: getField(data2, resource.colorField),
          value: getField(data2, resource.valueField)
        };
        itemResources.push(__assign9(__assign9({}, itemResource), { index: resourceIndex }));
      }
      resourceIndex++;
    }
  }
  return itemResources;
};
var shallowCompare = function(x, y) {
  return JSON.stringify(x) === JSON.stringify(y);
};
var findMissing = function(orderNumbers) {
  var result = 0;
  var numbers = orderNumbers.slice();
  numbers.sort(function(a, b) {
    return a - b;
  }).forEach(function(_2, index) {
    if (numbers[index] === index) {
      result = index + 1;
    }
  });
  return result;
};
var calculateOrder = function(current, items, slots, ignoreIsAllDay) {
  if (ignoreIsAllDay === void 0) {
    ignoreIsAllDay = false;
  }
  var result;
  slots.forEach(function(slot) {
    var orderNumbers = [];
    var sorted = items.sort(function(a, b) {
      return a.props.start.getTime() - b.props.start.getTime();
    });
    sorted.forEach(function(item) {
      var fit3 = (ignoreIsAllDay || item.props.isAllDay === slot.current.props.isAllDay) && item.props.range.index === slot.current.props.range.index && item.props.group.index === slot.current.props.group.index && intersects(item.props.start, item.props.end, slot.current.props.start, slot.current.props.end);
      if (fit3) {
        var order = findMissing(orderNumbers);
        if (item === current && result === void 0) {
          result = order;
        }
        orderNumbers.splice(order, 0, order);
      }
    });
  });
  return result;
};
var mapSlotsToItems = function(items, slots, ignoreIsAllDay) {
  if (ignoreIsAllDay === void 0) {
    ignoreIsAllDay = false;
  }
  slots.forEach(function(slot) {
    return slot.items.splice(0, slot.items.length);
  });
  slots.forEach(function(slot) {
    var orderNumbers = [];
    items.forEach(function(item) {
      var fit3 = (ignoreIsAllDay || item.isAllDay === slot.isAllDay) && item.range.index === slot.range.index && item.group.index === slot.group.index && intersects(item.start, item.end, slot.start, slot.end);
      if (fit3) {
        var order = findMissing(orderNumbers);
        if (item.order === null || item.order === void 0 || item.order < order) {
          item.order = order;
        }
        orderNumbers.splice(item.order, 0, item.order);
        slot.items.push(item);
      }
    });
  });
};
var mapItemsToSlots = function(items, slots, ignoreIsAllDay) {
  if (ignoreIsAllDay === void 0) {
    ignoreIsAllDay = false;
  }
  items.forEach(function(item) {
    return item.slots.splice(0, item.slots.length);
  });
  items.forEach(function(item) {
    slots.forEach(function(slot) {
      var fit3 = (ignoreIsAllDay || item.isAllDay === slot.isAllDay) && item.range.index === slot.range.index && item.group.index === slot.group.index && intersects(item.start, item.end, slot.start, slot.end);
      if (fit3) {
        item.slots.push(slot);
      }
    });
  });
};
var noop3 = function() {
  var _args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    _args[_i] = arguments[_i];
  }
};
var findFirstItem = function(current) {
  var next = current.props.items.find(function(i) {
    return i.order === 0;
  }) || current.props.items[0];
  return next && next.n.current;
};
var findNextItem = function(ref, all, ignoreIsAllDay, backwards) {
  if (ignoreIsAllDay === void 0) {
    ignoreIsAllDay = false;
  }
  if (backwards === void 0) {
    backwards = false;
  }
  var current = ref.current;
  if (!current || !all) {
    return null;
  }
  var filtered = all.filter(function(i) {
    return i.current !== null && i.current.element !== null;
  });
  var sorted = orderBy(filtered, [
    { field: "current.props.group.index", dir: "asc" },
    { field: "current.props.range.index", dir: "asc" },
    ignoreIsAllDay ? { field: "" } : { field: "current.props.isAllDay", dir: "desc" },
    { field: "current.props.start", dir: "asc" }
  ]);
  var currentIndex = sorted.findIndex(function(i) {
    return i.current !== null && Boolean(i.current.props.uid === current.props.uid && (i.current.props.occurrenceId === void 0 || i.current.props.occurrenceId === current.props.occurrenceId) && i.current.props.group.index === current.props.group.index && i.current.props.range.index === current.props.range.index && (ignoreIsAllDay || i.current.props.isAllDay === current.props.isAllDay));
  });
  var next = sorted[currentIndex + (backwards ? -1 : 1)];
  return next;
};
var orderSort = function(a, b) {
  return (a.order || 0) - (b.order || 0);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerContext.js
var React22 = __toESM(require_react());
var SchedulerElementContext = React22.createContext({ current: null });
var useSchedulerElementContext = function() {
  return React22.useContext(SchedulerElementContext);
};
SchedulerElementContext.displayName = "SchedulerElementContext";
var SchedulerPropsContext = React22.createContext({});
var useSchedulerPropsContext = function() {
  return React22.useContext(SchedulerPropsContext);
};
SchedulerPropsContext.displayName = "SchedulerPropsContext";
var SchedulerViewsContext = React22.createContext([]);
var useSchedulerViewsContext = function() {
  return React22.useContext(SchedulerViewsContext);
};
SchedulerViewsContext.displayName = "SchedulerViewsContext";
var SchedulerFieldsContext = React22.createContext(defaultModelFields);
var useSchedulerFieldsContext = function() {
  return React22.useContext(SchedulerFieldsContext);
};
SchedulerFieldsContext.displayName = "SchedulerFieldsContext";
var SchedulerDateFormatContext = React22.createContext({ dateFormat: "{0:D}", shortDateFormat: "{0:d}" });
var useSchedulerDateFormatContext = function() {
  return React22.useContext(SchedulerDateFormatContext);
};
SchedulerDateFormatContext.displayName = "SchedulerDateFormatContext";
var SchedulerGroupsContext = React22.createContext([DEFAULT_GROUP]);
var useSchedulerGroupsContext = function() {
  return React22.useContext(SchedulerGroupsContext);
};
SchedulerGroupsContext.displayName = "SchedulerGroupsContext";
var SchedulerDateRangeContext = React22.createContext({ start: /* @__PURE__ */ new Date(), end: /* @__PURE__ */ new Date(), zonedStart: ZonedDate.fromLocalDate(/* @__PURE__ */ new Date()), zonedEnd: ZonedDate.fromLocalDate(/* @__PURE__ */ new Date()) });
var useSchedulerDateRangeContext = function() {
  return React22.useContext(SchedulerDateRangeContext);
};
SchedulerDateRangeContext.displayName = "SchedulerDateRangeContext";
var SchedulerOrientationContext = React22.createContext(null);
var useSchedulerOrientationContext = function() {
  return React22.useContext(SchedulerOrientationContext);
};
SchedulerOrientationContext.displayName = "SchedulerOrientationContext";
var SchedulerDateContext = React22.createContext([/* @__PURE__ */ new Date(), noop3]);
var useSchedulerDateContext = function() {
  return React22.useContext(SchedulerDateContext);
};
SchedulerDateContext.displayName = "SchedulerDateContext";
var SchedulerDataContext = React22.createContext([[], noop3]);
var useSchedulerDataContext = function() {
  return React22.useContext(SchedulerDataContext);
};
SchedulerDataContext.displayName = "SchedulerDataContext";
var SchedulerActiveViewContext = React22.createContext(["day", noop3]);
var useSchedulerActiveViewContext = function() {
  return React22.useContext(SchedulerActiveViewContext);
};
SchedulerActiveViewContext.displayName = "SchedulerActiveViewContext";
var SchedulerItemSelectionContext = React22.createContext([null, function() {
}]);
var useSchedulerItemSelectionContext = function() {
  return React22.useContext(SchedulerItemSelectionContext);
};
SchedulerItemSelectionContext.displayName = "SchedulerItemSelectionContext";
var SchedulerContext = function(_a14) {
  var children2 = _a14.children, element6 = _a14.element, props = _a14.props, views = _a14.views, fields = _a14.fields, groups = _a14.groups, dateRange = _a14.dateRange, dateFormat = _a14.dateFormat, orientation = _a14.orientation, date2 = _a14.date, data2 = _a14.data, activeView = _a14.activeView, selection = _a14.selection;
  return React22.createElement(
    SchedulerElementContext.Provider,
    { value: element6 },
    React22.createElement(
      SchedulerPropsContext.Provider,
      { value: props },
      React22.createElement(
        SchedulerViewsContext.Provider,
        { value: views },
        React22.createElement(
          SchedulerFieldsContext.Provider,
          { value: fields },
          React22.createElement(
            SchedulerDateFormatContext.Provider,
            { value: dateFormat },
            React22.createElement(
              SchedulerGroupsContext.Provider,
              { value: groups },
              React22.createElement(
                SchedulerDateRangeContext.Provider,
                { value: dateRange },
                React22.createElement(
                  SchedulerOrientationContext.Provider,
                  { value: orientation },
                  React22.createElement(
                    SchedulerDateContext.Provider,
                    { value: date2 },
                    React22.createElement(
                      SchedulerDataContext.Provider,
                      { value: data2 },
                      React22.createElement(
                        SchedulerActiveViewContext.Provider,
                        { value: activeView },
                        React22.createElement(SchedulerItemSelectionContext.Provider, { value: selection }, children2)
                      )
                    )
                  )
                )
              )
            )
          )
        )
      )
    )
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useControlledState.js
var React23 = __toESM(require_react());
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var useControlledState = function(defaultProp, prop2, callback) {
  var _a14 = React23.useState(prop2 || defaultProp), state = _a14[0], setState = _a14[1];
  var handleSetEdit = React23.useCallback(function(value2, args) {
    setState(value2);
    if (callback) {
      callback.call(void 0, __assign10(__assign10({}, args), { value: value2 }));
    }
  }, [callback, setState]);
  return [prop2 !== void 0 ? prop2 : state, handleSetEdit];
};

// node_modules/@progress/kendo-intl/dist/es/cldr/default-data.js
var defaultData = {
  en: {
    name: "en",
    identity: {
      version: {
        ye: "14.0.0",
        Bd: "41"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "\xD7",
        perMille: "\u2030",
        infinity: "\u221E",
        nan: "NaN",
        timeSeparator: ":",
        approximatelySign: "~"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "\u20AC",
          "symbol-alt-narrow": "\u20AC"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMd: "M/d/y GGGGG",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era",
          short: "era",
          narrow: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        weekOfMonth: {
          wide: "week of month",
          short: "wk. of mo.",
          narrow: "wk. of mo."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        dayOfYear: {
          wide: "day of year",
          short: "day of yr.",
          narrow: "day of yr."
        },
        weekday: {
          wide: "day of the week",
          short: "day of wk.",
          narrow: "day of wk."
        },
        weekdayOfMonth: {
          wide: "weekday of the month",
          short: "wkday. of mo.",
          narrow: "wkday. of mo."
        },
        dayperiod: {
          short: "AM/PM",
          wide: "AM/PM",
          narrow: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        zone: {
          wide: "time zone",
          short: "zone",
          narrow: "zone"
        },
        millisecond: {
          narrow: "ms",
          short: "ms",
          wide: "millisecond"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              Ja: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default = defaultData;

// node_modules/@progress/kendo-intl/dist/es/common/is-string.js
function isString2(value2) {
  return typeof value2 === "string";
}

// node_modules/@progress/kendo-intl/dist/es/error-details.js
var error_details_default = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@progress/kendo-intl/dist/es/errors.js
var formatRegExp2 = /\{(\d+)}?\}/g;
var IntlError = function IntlError2(ref) {
  var name2 = ref.name;
  var message = ref.message;
  if (!name2 || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name2;
  this.message = message;
};
IntlError.prototype.formatMessage = function formatMessage2() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  var flattenValues = flatten2(values2);
  var formattedMessage = this.message.replace(formatRegExp2, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError.prototype.error = function error() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  return new Error(this.formatMessage(values2));
};
var flatten2 = function(arr) {
  return arr.reduce(function(a, b) {
    return a.concat(b);
  }, []);
};
var toIntlErrors = function(errors3) {
  var predicate = function(prev, name2) {
    prev[name2] = new IntlError({ name: name2, message: errors3[name2] });
    return prev;
  };
  return Object.keys(errors3).reduce(predicate, {});
};
var errors = toIntlErrors(error_details_default);

// node_modules/@progress/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo(fullName, suffixes) {
  var parts = fullName.split("-");
  var language = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr[fullName] || suffixes.indexOf(territory) !== -1 && cldr[language + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr[language + "-" + script] || cldr[language];
}
function localeFullName(language, suffixes) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name2 = likelySubtags[language + "-" + suffixes[idx]];
    if (name2) {
      return name2;
    }
  }
  if (likelySubtags[language]) {
    return likelySubtags[language];
  }
}
var cldr = default_data_default;
function getLocaleInfo(locale) {
  var info;
  if (isString2(locale)) {
    info = localeInfo(locale);
  } else {
    info = locale;
  }
  return info;
}
function localeInfo(locale) {
  if (cldr[locale]) {
    return cldr[locale];
  }
  var likelySubtags = cldr.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale.split("-");
    var language = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName(language, suffixes);
    var info = fullName ? availableLocaleInfo(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors.NoLocale.error(locale);
}

// node_modules/@progress/kendo-intl/dist/es/common/constants.js
var DECIMAL = "decimal";
var CURRENCY = "currency";
var ACCOUNTING = "accounting";
var PERCENT = "percent";
var SCIENTIFIC = "scientific";
var CURRENCY_PLACEHOLDER = "$";
var PERCENT_PLACEHOLDER = "%";
var NUMBER_PLACEHOLDER = "n";
var LIST_SEPARATOR = ";";
var GROUP_SEPARATOR = ",";
var POINT = ".";
var EMPTY = "";
var DEFAULT_LOCALE = "en";

// node_modules/@progress/kendo-intl/dist/es/cldr/load-numbers.js
var LATIN_NUMBER_FORMATS = "Formats-numberSystem-latn";
var LATIN_NUMBER_SYMBOLS = "symbols-numberSystem-latn";
var patternRegExp = /([#,0.]+)/g;
var cldrCurrencyRegExp = /¤/g;
function getPatterns(pattern) {
  patternRegExp.lastIndex = 0;
  return pattern.replace(cldrCurrencyRegExp, CURRENCY_PLACEHOLDER).replace(patternRegExp, NUMBER_PLACEHOLDER).split(LIST_SEPARATOR);
}
function getGroupSize(pattern) {
  patternRegExp.lastIndex = 0;
  var numberPatterns = patternRegExp.exec(pattern.split(LIST_SEPARATOR)[0])[0].split(POINT);
  var integer = numberPatterns[0];
  var groupSize = integer.split(GROUP_SEPARATOR).slice(1).map(function(group2) {
    return group2.length;
  }).reverse();
  return groupSize;
}
function loadCurrencyUnitPatterns(currencyInfo, currencyFormats) {
  for (var field in currencyFormats) {
    if (field.startsWith("unitPattern")) {
      currencyInfo[field] = currencyFormats[field].replace("{0}", NUMBER_PLACEHOLDER).replace("{1}", CURRENCY_PLACEHOLDER);
    }
  }
}
function loadNumbersInfo(locale, info) {
  var localeInfo3 = cldr[locale];
  var numbers = localeInfo3.numbers = localeInfo3.numbers || {};
  numbers.symbols = numbers.symbols || {};
  for (var field in info) {
    if (field === LATIN_NUMBER_SYMBOLS) {
      Object.assign(numbers.symbols, info[field]);
    } else if (field.includes(LATIN_NUMBER_FORMATS)) {
      var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS));
      var pattern = info[field].standard;
      numbers[style] = {
        patterns: getPatterns(pattern)
      };
      if (style === CURRENCY) {
        numbers[style].groupSize = getGroupSize((info[DECIMAL + LATIN_NUMBER_FORMATS] || info[field]).standard);
        loadCurrencyUnitPatterns(numbers[style], info[field]);
        numbers[ACCOUNTING] = {
          patterns: getPatterns(info[field][ACCOUNTING]),
          groupSize: numbers[style].groupSize
        };
      } else {
        numbers[style].groupSize = getGroupSize(pattern);
      }
    } else if (field === "currencies") {
      numbers.currencies = info[field];
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-dates.js
var predefinedDatePatterns = {
  s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
  u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
};
var YEAR_REGEX = /y+/g;
var SHORT_DATE = [["dateFormats", "short"]];
var datePatterns = {
  D: [["dateFormats", "full"]],
  m: [["dateTimeFormats", "availableFormats", "MMMd"]],
  M: [["dateTimeFormats", "availableFormats", "MMMMd"]],
  y: [["dateTimeFormats", "availableFormats", "yMMM"]],
  Y: [["dateTimeFormats", "availableFormats", "yMMMM"]],
  F: [["dateFormats", "full"], ["timeFormats", "medium"]],
  g: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "short"]],
  G: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "medium"]],
  t: [["timeFormats", "short"]],
  T: [["timeFormats", "medium"]]
};
function toArray(obj) {
  var result = [];
  var names = Object.getOwnPropertyNames(obj);
  for (var idx = 0; idx < names.length; idx++) {
    var value2 = obj[names[idx]];
    result.push(value2);
  }
  return result;
}
function getCalendarNames(info, isObj) {
  var result = {};
  for (var formatType in info) {
    var names = result[formatType] = {};
    for (var format3 in info[formatType]) {
      var formats = info[formatType][format3];
      names[format3] = isObj ? formats : toArray(formats);
    }
  }
  return result;
}
function getEraNames(eras) {
  var result = {};
  var format3 = result.format = {};
  var eraNameMap = {
    eraAbbr: "abbreviated",
    eraNames: "wide",
    eraNarrow: "narrow"
  };
  for (var eraFormatName in eras) {
    var formatName = eraNameMap[eraFormatName];
    format3[formatName] = eras[eraFormatName];
  }
  return result;
}
function loadCalendarNames(locale, calendar) {
  var localeCalendar = cldr[locale].calendar;
  localeCalendar.days = getCalendarNames(calendar.days);
  localeCalendar.months = getCalendarNames(calendar.months);
  localeCalendar.quarters = getCalendarNames(calendar.quarters);
  localeCalendar.dayPeriods = getCalendarNames(calendar.dayPeriods, true);
  localeCalendar.eras = getEraNames(calendar.eras);
}
function loadCalendarDateFields(locale, fields) {
  var localeCalendar = cldr[locale].calendar;
  var dateFields = {};
  for (var field in fields) {
    var ref = field.split("-");
    var fieldName = ref[0];
    var formatType = ref[1];
    if (formatType === void 0)
      formatType = "wide";
    var fieldInfo = dateFields[fieldName] || {};
    var displayName = fields[field].displayName;
    if (!displayName) {
      continue;
    }
    fieldInfo[formatType] = displayName;
    dateFields[fieldName] = fieldInfo;
  }
  localeCalendar.dateFields = dateFields;
}
function getPredefinedFormat(paths, calendar) {
  var result = [];
  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {
    var fields = paths[pathIdx];
    var pattern = calendar;
    for (var idx = 0; idx < fields.length; idx++) {
      pattern = pattern[fields[idx]];
    }
    result.push(pattern);
  }
  return result.join(" ");
}
function loadCalendarPatterns(locale, calendar) {
  var cldrCalendar = cldr[locale].calendar;
  var patterns = cldrCalendar.patterns = {};
  patterns.d = getPredefinedFormat(SHORT_DATE, calendar).replace(YEAR_REGEX, "y");
  for (var pattern in datePatterns) {
    patterns[pattern] = getPredefinedFormat(datePatterns[pattern], calendar);
  }
  for (var pattern$1 in predefinedDatePatterns) {
    patterns[pattern$1] = predefinedDatePatterns[pattern$1];
  }
  var dateTimeFormats = calendar.dateTimeFormats;
  cldrCalendar.dateTimeFormats = {
    full: dateTimeFormats.full,
    long: dateTimeFormats.long,
    medium: dateTimeFormats.medium,
    short: dateTimeFormats.short,
    availableFormats: dateTimeFormats.availableFormats
  };
  cldrCalendar.timeFormats = calendar.timeFormats;
  cldrCalendar.dateFormats = calendar.dateFormats;
}
function loadCalendarInfo(locale, info) {
  var calendar = cldr[locale].calendar = cldr[locale].calendar || {};
  for (var field in info) {
    if (field === "timeZoneNames") {
      calendar.gmtFormat = info[field].gmtFormat;
      calendar.gmtZeroFormat = info[field].gmtZeroFormat;
    } else if (field === "calendars" && info[field].gregorian) {
      loadCalendarPatterns(locale, info[field].gregorian);
      loadCalendarNames(locale, info[field].gregorian);
    } else if (field === "fields") {
      loadCalendarDateFields(locale, info.fields);
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/territory.js
function territoryFromName(name2, identity4) {
  var likelySubtags = cldr.supplemental.likelySubtags;
  var parts = name2.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name2] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity4) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity4.variant || part === identity4.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory(info) {
  if (info.territory) {
    return info.territory;
  }
  var name2 = info.name;
  var identity4 = info.identity;
  var territory;
  if (identity4 && identity4.territory) {
    territory = identity4.territory;
  } else {
    territory = territoryFromName(name2, identity4);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load-units.js
var MILLISECOND = "duration-millisecond";
var UNIT_PATTERN_ONE = "unitPattern-count-one";
var UNIT_PATTERN_OTHER = "unitPattern-count-other";
var placeholderPattern = /\{0\}\s?/;
function extractUnit(unit) {
  var value2 = unit[UNIT_PATTERN_ONE] || unit[UNIT_PATTERN_OTHER];
  return value2.replace(placeholderPattern, "");
}
function loadUnits(localeInfo3, units) {
  localeInfo3.calendar.dateFields.millisecond = {
    narrow: extractUnit(units.narrow[MILLISECOND]),
    short: extractUnit(units.short[MILLISECOND]),
    wide: extractUnit(units.long[MILLISECOND])
  };
}

// node_modules/@progress/kendo-intl/dist/es/cldr/load.js
function loadLocale(locale, info) {
  for (var field in info) {
    if (field === "numbers") {
      loadNumbersInfo(locale, info[field]);
    } else if (field === "dates") {
      loadCalendarInfo(locale, info[field]);
    }
  }
}
function load() {
  var arguments$1 = arguments;
  var length = arguments.length;
  for (var idx = 0; idx < length; idx++) {
    var entry = arguments$1[idx];
    if (entry.main) {
      var locale = Object.keys(entry.main)[0];
      var info = entry.main[locale];
      var localeInfo3 = cldr[locale] = cldr[locale] || {};
      if (info.units) {
        loadUnits(localeInfo3, info.units);
      } else {
        localeInfo3.name = localeInfo3.name || locale;
        localeInfo3.identity = localeInfo3.identity || info.identity;
        localeTerritory(localeInfo3);
        loadLocale(locale, info);
      }
    } else if (entry.supplemental) {
      if (entry.supplemental.weekData) {
        cldr.supplemental.weekData = {
          firstDay: entry.supplemental.weekData.firstDay,
          weekendStart: entry.supplemental.weekData.weekendStart,
          weekendEnd: entry.supplemental.weekData.weekendEnd
        };
      } else if (entry.supplemental.likelySubtags) {
        cldr.supplemental.likelySubtags = Object.assign(cldr.supplemental.likelySubtags, entry.supplemental.likelySubtags);
      } else if (entry.supplemental.currencyData) {
        var currencyData = cldr.supplemental.currencyData;
        currencyData.region = Object.assign(currencyData.region || {}, entry.supplemental.currencyData.region);
        currencyData.fractions = Object.assign(currencyData.fractions || {}, entry.supplemental.currencyData.fractions);
      }
    }
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/set-data.js
function setData(data2) {
  var locale = data2.name;
  var info = cldr[locale] = cldr[locale] || {};
  var supplemental = cldr.supplemental = cldr.supplemental || {};
  if (data2.likelySubtags) {
    supplemental.likelySubtags = Object.assign(supplemental.likelySubtags || {}, data2.likelySubtags);
  }
  if (data2.currencyData) {
    supplemental.currencyData = supplemental.currencyData || {};
    supplemental.currencyData.fractions = Object.assign(supplemental.currencyData.fractions || {}, data2.currencyData);
  }
  var numbers = info.numbers;
  Object.assign(info, data2);
  if (numbers && data2.numbers) {
    info.numbers = Object.assign({}, numbers, data2.numbers);
  }
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName(options2, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options2.type] || {};
  return fieldNameInfo[options2.nameType] || fieldNameInfo["wide"];
}

// node_modules/@progress/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower(obj) {
  var result = Array.isArray(obj) ? lowerArray(obj) : lowerObject(obj);
  return result;
}
function dateFormatNames(locale, options2) {
  var type = options2.type;
  var nameType = options2.nameType;
  var standAlone = options2.standAlone;
  var lower = options2.lower;
  var info = getLocaleInfo(locale);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY) + nameType;
  var formatNames3 = info.calendar[type][formatType];
  var result = formatNames3[lowerNameType];
  if (!result && lower) {
    result = formatNames3[lowerNameType] = cloneLower(formatNames3[nameType]);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate(value2) {
  var parts = value2.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@progress/kendo-intl/dist/es/cldr/currency.js
var NoCurrency = errors.NoCurrency;
var NoCurrencyDisplay = errors.NoCurrencyDisplay;
var NoSupplementalCurrency = errors.NoSupplementalCurrency;
var NoCurrencyRegion = errors.NoCurrencyRegion;
var NoValidCurrency = errors.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS = 2;
var SYMBOL = "symbol";
var INVALID_CURRENCY_CODE = "XXX";
var GLOBAL_CURRENCIES = {
  "001": "USD",
  // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error
  "150": "EUR"
  // 150 territory for Europe
};
function getCurrencyInfo(locale, currency, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer(a, b) {
  return b.length - a.length;
}
function regionCurrency(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code = Object.keys(currency)[0];
    var info = currency[code];
    if (code !== INVALID_CURRENCY_CODE && info.Cd !== "false" && info.Ja) {
      if (!info.Tb) {
        var stillValidDate = parseRangeDate(info.Ja);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate(info.Ja);
        var validTo = parseRangeDate(info.Tb);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays(locale, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo(locale, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay(locale, options2) {
  var value2 = options2.value;
  var currency = options2.currency;
  var currencyDisplay3 = options2.currencyDisplay;
  if (currencyDisplay3 === void 0)
    currencyDisplay3 = SYMBOL;
  if (currencyDisplay3 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo(locale, currency, true);
  var result;
  if (currencyDisplay3 === SYMBOL) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL];
  } else {
    if (typeof value2 === "undefined" || value2 !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions(code) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS;
  var fractions = ((cldr.supplemental.currencyData || {}).fractions || {})[code];
  if (fractions && fractions.Ub) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions.Ub, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  if (GLOBAL_CURRENCIES[territory]) {
    return GLOBAL_CURRENCIES[territory];
  }
  var currencyData = cldr.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency(regionCurrencies);
  return currencyCode;
}
function localeCurrency(locale, throwIfNoValid) {
  var info = getLocaleInfo(locale);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode(localeTerritory(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY = "001";

// node_modules/@progress/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData = errors.NoWeekData;
var NoFirstDay = errors.NoFirstDay;
function firstDay(locale) {
  var info = getLocaleInfo(locale);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData.error();
  }
  var firstDay3 = weekData.firstDay[localeTerritory(info)] || weekData.firstDay[DEFAULT_TERRITORY];
  if (!firstDay3) {
    throw NoFirstDay.error();
  }
  info.firstDay = DAYS_OF_WEEK.indexOf(firstDay3);
  return info.firstDay;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData2 = errors.NoWeekData;
function weekendRange(locale) {
  var info = getLocaleInfo(locale);
  if (info.weekendRange) {
    return info.weekendRange;
  }
  var weekData = cldr.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData2.error();
  }
  var territory = localeTerritory(info);
  var start2 = weekData.weekendStart[territory] || weekData.weekendStart[DEFAULT_TERRITORY];
  var end2 = weekData.weekendEnd[territory] || weekData.weekendEnd[DEFAULT_TERRITORY];
  info.weekendRange = {
    start: DAYS_OF_WEEK.indexOf(start2),
    end: DAYS_OF_WEEK.indexOf(end2)
  };
  return info.weekendRange;
}

// node_modules/@progress/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols(locale) {
  var info = getLocaleInfo(locale);
  return info.numbers.symbols;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero(value2) {
  return 1 / value2 === -Infinity;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol(info, options2) {
  if (options2 === void 0)
    options2 = {};
  if (!options2.currency) {
    options2.currency = localeCurrency(info, true);
  }
  var display = currencyDisplay(info, options2);
  return display;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger(number41, start2, end2, options2, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number41.indexOf(symbols.decimal);
  var groupSizes = options2.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end2 + 1;
  var integer = number41.substring(start2, integerEnd);
  var result = number41;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value2 = integer.substring(idx - groupSize, idx);
      if (value2) {
        parts.push(value2);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value2 = integer.substring(0, idx);
        if (value2) {
          parts.push(value2);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number41.substring(0, start2) + integer + number41.substring(integerEnd);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle(style) {
  return style === CURRENCY || style === ACCOUNTING;
}

// node_modules/@progress/kendo-intl/dist/es/common/pad.js
function pad(number41, digits, right2) {
  if (digits === void 0)
    digits = 2;
  if (right2 === void 0)
    right2 = false;
  var count2 = digits - String(number41).length;
  var result = number41;
  if (count2 > 0) {
    var padString = new Array(count2 + 1).join("0");
    result = right2 ? number41 + padString : padString + number41;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/round.js
var MAX_PRECISION = 20;
function round(value2, precision) {
  var result = value2;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION));
}

// node_modules/@progress/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING = 3;
var DEFAULT_PERCENT_ROUNDING = 0;
var trailingZeroRegex = /0+$/;
function fractionOptions(options2) {
  var minimumFractionDigits = options2.minimumFractionDigits;
  var maximumFractionDigits = options2.maximumFractionDigits;
  var style = options2.style;
  var isCurrency = isCurrencyStyle(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions(options2.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern(value2, pattern, symbol) {
  var result = EMPTY;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER) {
      result += value2;
    } else if (ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern(info, value2) {
  var currencyInfo = info.numbers.currency;
  var pattern = value2 !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value2 < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER, "-" + NUMBER_PLACEHOLDER);
  }
  return pattern;
}
function standardNumberFormat(number41, options2, info) {
  var symbols = info.numbers.symbols;
  var style = options2.style;
  var isCurrency = isCurrencyStyle(style);
  if (style === SCIENTIFIC) {
    var exponential = options2.minimumFractionDigits !== void 0 ? number41.toExponential(options2.minimumFractionDigits) : number41.toExponential();
    return exponential.replace(POINT, symbols.decimal);
  }
  var value2 = number41;
  var symbol;
  if (isCurrency) {
    options2.value = value2;
    symbol = formatCurrencySymbol(info, options2);
  }
  if (style === PERCENT) {
    value2 *= 100;
    symbol = symbols.percentSign;
  }
  var ref = fractionOptions(options2);
  var minimumFractionDigits = ref.minimumFractionDigits;
  var maximumFractionDigits = ref.maximumFractionDigits;
  value2 = round(value2, maximumFractionDigits);
  var negative = value2 < 0;
  var negativeZero = isNegativeZero(number41);
  var parts = value2.split(POINT);
  var integer = parts[0];
  var fraction = pad(parts[1] ? parts[1].replace(trailingZeroRegex, EMPTY) : EMPTY, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options2.minimumIntegerDigits) {
    integer = pad(integer, options2.minimumIntegerDigits);
  }
  var formattedValue = options2.useGrouping !== false ? groupInteger(integer, 0, integer.length, options2, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options2.currencyDisplay === "name") {
    pattern = currencyUnitPattern(info, number41);
  } else {
    var patterns = options2.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER && !negative) {
    return formattedValue;
  }
  var result = applyPattern(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/utils.js
var literalRegExp = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER = "__??__";
function setStyleOptions(formatOptions3, info) {
  var format3 = formatOptions3.format;
  if (format3.indexOf(PERCENT_PLACEHOLDER) !== -1) {
    formatOptions3.style = PERCENT;
    formatOptions3.symbol = info.numbers.symbols.percentSign;
    formatOptions3.number *= 100;
  }
  if (format3.indexOf(CURRENCY_PLACEHOLDER) !== -1) {
    formatOptions3.style = CURRENCY;
    formatOptions3.symbol = formatCurrencySymbol(info);
  }
}
function setFormatLiterals(formatOptions3) {
  var format3 = formatOptions3.format;
  if (format3.indexOf("'") > -1 || format3.indexOf('"') > -1 || format3.indexOf("\\") > -1) {
    var literals2 = formatOptions3.literals = [];
    formatOptions3.format = format3.replace(literalRegExp, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY);
      var literal = match.slice(1).replace(quoteChar, EMPTY);
      literals2.push(literal);
      return PLACEHOLDER;
    });
  }
}
function replaceLiterals(number41, literals2) {
  var result = number41;
  if (literals2) {
    var length = literals2.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER, literals2[idx]);
    }
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP = "#";
var ZERO = "0";
var trailingZerosRegExp = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp = /\.$/;
var commaRegExp = /,/g;
function trimTrailingZeros(value2, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value2.replace(trimRegex, "$1").replace(trailingPointRegExp, EMPTY);
}
function roundNumber(formatOptions3) {
  var number41 = formatOptions3.number;
  var format3 = formatOptions3.format;
  var decimalIndex = format3.indexOf(POINT);
  if (decimalIndex !== -1) {
    var zeroIndex = format3.lastIndexOf(ZERO) - decimalIndex;
    var sharpIndex = format3.lastIndexOf(SHARP) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number41.toString().split("e");
    if (fraction[1]) {
      fraction = round(number41, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT)[1] || EMPTY;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions3.format = format3.substring(0, decimalIndex) + format3.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number41 = round(number41, precision);
      if (trailingZeros > -1) {
        number41 = trimTrailingZeros(number41, trailingZeros);
      }
    }
  } else {
    number41 = round(number41);
  }
  if (formatOptions3.negative && number41 * -1 >= 0 && !formatOptions3.negativeZero) {
    formatOptions3.negative = false;
  }
  formatOptions3.number = number41;
  formatOptions3.decimalIndex = decimalIndex;
}
function isConstantFormat(format3) {
  return format3.indexOf(SHARP) === -1 && format3.indexOf(ZERO) === -1;
}
function setValueSpecificFormat(formatOptions3) {
  var number41 = formatOptions3.number;
  var format3 = formatOptions3.format;
  format3 = format3.split(LIST_SEPARATOR);
  if ((formatOptions3.negative || formatOptions3.negativeZero) && format3[1]) {
    format3 = format3[1];
    formatOptions3.hasNegativeFormat = true;
  } else if (number41 === 0) {
    var zeroFormat = format3[2];
    format3 = zeroFormat || format3[0];
    if (zeroFormat && isConstantFormat(zeroFormat)) {
      formatOptions3.constant = zeroFormat;
    }
  } else {
    format3 = format3[0];
  }
  formatOptions3.format = format3;
}
function setGroupOptions(formatOptions3) {
  formatOptions3.hasGroup = formatOptions3.format.indexOf(GROUP_SEPARATOR) > -1;
  if (formatOptions3.hasGroup) {
    formatOptions3.format = formatOptions3.format.replace(commaRegExp, EMPTY);
  }
}
function placeholderIndex(index1, index2, start2) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start2 ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices(formatOptions3) {
  var format3 = formatOptions3.format;
  var sharpIndex = format3.indexOf(SHARP);
  var zeroIndex = format3.indexOf(ZERO);
  var start2 = placeholderIndex(sharpIndex, zeroIndex, true);
  sharpIndex = format3.lastIndexOf(SHARP);
  zeroIndex = format3.lastIndexOf(ZERO);
  var end2 = placeholderIndex(sharpIndex, zeroIndex);
  if (start2 === format3.length) {
    end2 = start2;
  }
  formatOptions3.start = start2;
  formatOptions3.end = end2;
  formatOptions3.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols(number41, style, symbol) {
  var result = number41;
  if (style === CURRENCY || style === PERCENT) {
    result = EMPTY;
    for (var idx = 0, length = number41.length; idx < length; idx++) {
      var ch = number41.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER || ch === PERCENT_PLACEHOLDER ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders(formatOptions3, info) {
  var start2 = formatOptions3.start;
  var end2 = formatOptions3.end;
  var negative = formatOptions3.negative;
  var negativeZero = formatOptions3.negativeZero;
  var format3 = formatOptions3.format;
  var decimalIndex = formatOptions3.decimalIndex;
  var lastZeroIndex = formatOptions3.lastZeroIndex;
  var hasNegativeFormat = formatOptions3.hasNegativeFormat;
  var hasGroup = formatOptions3.hasGroup;
  var number41 = formatOptions3.number;
  var value2 = number41.toString().split(POINT);
  var length = format3.length;
  var integer = value2[0];
  var fraction = value2[1] || EMPTY;
  var integerLength = integer.length;
  var replacement = EMPTY;
  number41 = format3.substring(0, start2);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number41 += "-";
  }
  for (var idx = start2; idx < length; idx++) {
    var ch = format3.charAt(idx);
    if (decimalIndex === -1) {
      if (end2 - idx < integerLength) {
        number41 += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number41 += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number41 += (fraction ? info.numbers.symbols.decimal : EMPTY) + fraction;
        idx += end2 - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO) {
      number41 += ch;
      replacement = ch;
    } else if (ch === SHARP) {
      number41 += replacement;
    }
  }
  if (hasGroup) {
    number41 = groupInteger(number41, start2 + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end2, integerLength + start2), info.numbers.decimal, info);
  }
  if (end2 >= start2) {
    number41 += format3.substring(end2 + 1);
  }
  return number41;
}
function applyCustomFormat(formatOptions3, info) {
  var number41 = formatOptions3.number;
  if (formatOptions3.start !== -1) {
    number41 = replacePlaceHolders(formatOptions3, info);
    number41 = replaceStyleSymbols(number41, formatOptions3.style, formatOptions3.symbol);
    number41 = replaceLiterals(number41, formatOptions3.literals);
  }
  return number41;
}
function customNumberFormat(number41, format3, info) {
  var formatOptions3 = {
    negative: number41 < 0,
    number: Math.abs(number41),
    negativeZero: isNegativeZero(number41),
    format: format3
  };
  setValueSpecificFormat(formatOptions3);
  if (formatOptions3.constant) {
    return formatOptions3.constant;
  }
  setFormatLiterals(formatOptions3);
  setStyleOptions(formatOptions3, info);
  setGroupOptions(formatOptions3);
  roundNumber(formatOptions3);
  setPlaceholderIndices(formatOptions3);
  return applyCustomFormat(formatOptions3, info);
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions(format3) {
  var formatAndPrecision = standardFormatRegExp.exec(format3);
  if (formatAndPrecision) {
    var options2 = {
      style: DECIMAL
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options2.style = CURRENCY;
    } else if (style === "a") {
      options2.style = ACCOUNTING;
    } else if (style === "p") {
      options2.style = PERCENT;
    } else if (style === "e") {
      options2.style = SCIENTIFIC;
    }
    if (formatAndPrecision[2]) {
      options2.minimumFractionDigits = options2.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options2;
  }
}
function formatOptions(format3) {
  var options2;
  if (isString2(format3)) {
    options2 = standardFormatOptions(format3);
  } else {
    options2 = format3;
  }
  return options2;
}

// node_modules/@progress/kendo-intl/dist/es/numbers/format-number.js
function formatNumber(number41, format3, locale) {
  if (format3 === void 0)
    format3 = NUMBER_PLACEHOLDER;
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (number41 === void 0 || number41 === null) {
    return EMPTY;
  }
  if (!isFinite(number41)) {
    return String(number41);
  }
  var info = localeInfo(locale);
  var options2 = formatOptions(format3);
  var result;
  if (options2) {
    var style = options2.style || DECIMAL;
    result = standardNumberFormat(number41, Object.assign({}, info.numbers[style], options2), info);
  } else {
    result = customNumberFormat(number41, format3, info);
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/common/is-number.js
function isNumber(value2) {
  return typeof value2 === "number";
}

// node_modules/@progress/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp = /[eE][-+]?[0-9]+/;
var nonBreakingSpaceRegExp = /\u00A0/g;
function cleanNegativePattern(number41, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY).replace(CURRENCY_PLACEHOLDER, EMPTY).split(NUMBER_PLACEHOLDER);
    if (number41.indexOf(parts[0]) > -1 && number41.indexOf(parts[1]) > -1) {
      return number41.replace(parts[0], EMPTY).replace(parts[1], EMPTY);
    }
  }
}
function cleanCurrencyNumber(value2, info, format3) {
  var options2 = formatOptions(format3) || {};
  var isCurrency = isCurrencyStyle(options2.style);
  var number41 = value2;
  var negative;
  var currency = options2.currency || localeCurrency(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number41.includes(display)) {
          number41 = number41.replace(display, EMPTY);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern(number41, info.numbers.currency.patterns) || cleanNegativePattern(number41, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number41 = cleanNumber;
      }
    }
  }
  return {
    number: number41,
    negative
  };
}
function cleanLiterals(number41, formatOptions3) {
  var literals2 = formatOptions3.literals;
  var result = number41;
  if (literals2) {
    for (var idx = 0; idx < literals2.length; idx++) {
      result = result.replace(literals2[idx], EMPTY);
    }
  }
  return result;
}
function divideBy100(number41) {
  var strNumber = String(number41);
  var pointIndex = strNumber.indexOf(POINT);
  var zeroesCount = 2;
  var result = number41 / Math.pow(10, zeroesCount);
  if (pointIndex === -1 || String(result).length <= strNumber.length + zeroesCount) {
    return result;
  }
  var fractionDigits = strNumber.length - pointIndex + 1 + zeroesCount;
  return parseFloat(result.toFixed(fractionDigits));
}
function parseNumber(value2, locale, format3) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (format3 === void 0)
    format3 = {};
  if (!value2 && value2 !== 0) {
    return null;
  }
  if (isNumber(value2)) {
    return value2;
  }
  var info = localeInfo(locale);
  var symbols = info.numbers.symbols;
  var number41 = value2.toString();
  var formatOptions3 = format3 || {};
  var isPercent;
  if (isString2(format3)) {
    formatOptions3 = { format: format3 };
    setFormatLiterals(formatOptions3);
    number41 = cleanLiterals(number41, formatOptions3);
    setStyleOptions(formatOptions3, info);
  }
  if (formatOptions3.style === PERCENT || number41.indexOf(symbols.percentSign) > -1) {
    number41 = number41.replace(symbols.percentSign, EMPTY);
    isPercent = true;
  }
  if (exponentRegExp.test(number41)) {
    number41 = parseFloat(number41.replace(symbols.decimal, POINT));
    return isNaN(number41) ? null : number41;
  }
  var ref = cleanCurrencyNumber(number41, info, formatOptions3);
  var negativeCurrency = ref.negative;
  var currencyNumber = ref.number;
  number41 = String(currencyNumber).trim();
  var negativeSignIndex = number41.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number41 = number41.replace("-", EMPTY).replace(nonBreakingSpaceRegExp, " ").split(symbols.group.replace(nonBreakingSpaceRegExp, " ")).join(EMPTY).replace(symbols.decimal, POINT);
  number41 = parseFloat(number41);
  if (isNaN(number41)) {
    number41 = null;
  } else if (isNegative) {
    number41 *= -1;
  }
  if (number41 && isPercent) {
    number41 = divideBy100(number41);
  }
  return number41;
}

// node_modules/@progress/kendo-intl/dist/es/common/format-string.js
var formatRegExp3 = /\{(\d+)}/g;
function formatString(format3) {
  var values2 = arguments;
  return format3.replace(formatRegExp3, function(match, index) {
    var value2 = values2[parseInt(index, 10) + 1];
    return value2;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY = 120;
var ADDITION_PENALTY = 20;
var LENGHT_DELTA = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA = -2;
var SHORT_LESS_PENALTY_DELTA = -1;
var SHORT_MORE_PENALTY_DELTA = 1;
var LONG_MORE_PENALTY_DELTA = 2;
var PENALTIES = {};
PENALTIES[LONG_LESS_PENALTY_DELTA.toString()] = 8;
PENALTIES[SHORT_LESS_PENALTY_DELTA.toString()] = 6;
PENALTIES[LONG_MORE_PENALTY_DELTA.toString()] = 6;
PENALTIES[SHORT_MORE_PENALTY_DELTA.toString()] = 3;
var VALUE_FORMAT_LENGTH = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX = /[hHmsSzZoOvVxX]/;
function getHourSpecifier(options2) {
  return options2.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex = {};
var resolvedFormats = {};
function getSpecifierRegex(specifier) {
  if (!specifiersRegex[specifier]) {
    specifiersRegex[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex[specifier];
}
function skeletonSpecifiers(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format3 in availableFormats) {
    var matches = [];
    var currentFormat = format3.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA[match.length] - LENGHT_DELTA[specifier.length], 2), -2);
          score -= PENALTIES[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers(currentFormat).length * ADDITION_PENALTY;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format3];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS[matchSpecifier]) {
        result = result.replace(getSpecifierRegex(STAND_ALONE_SPECIFIERS[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat(skeleton, format3, locale) {
  if (!resolvedFormats[locale]) {
    resolvedFormats[locale] = {};
  }
  resolvedFormats[locale][skeleton] = format3;
}
function skeletonFormat(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats[info.name] && resolvedFormats[info.name][skeleton]) {
    return resolvedFormats[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString(
      info.calendar.dateTimeFormats.short,
      //should be deterimed based on specifiers
      availableFormats[timeSkeleton] || findBestMatch(skeletonSpecifiers(timeSkeleton), availableFormats),
      availableFormats[dateSkeleton] || findBestMatch(skeletonSpecifiers(dateSkeleton), availableFormats)
    );
  } else {
    result = findBestMatch(skeletonSpecifiers(skeleton), availableFormats);
  }
  cacheFormat(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions(options2) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP.length; idx++) {
    var option = DATE_OPTIONS_MAP[idx];
    var field = option.key;
    var value2 = options2[field];
    if (value2) {
      var spcifier = option.specifier || option.getSpecifier(options2);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH[value2]));
    }
  }
  return result.join(EMPTY);
}
function datePattern(format3, info) {
  var calendar = info.calendar;
  var result;
  if (isString2(format3)) {
    if (calendar.patterns[format3]) {
      result = calendar.patterns[format3];
    } else {
      result = format3;
    }
  } else if (format3) {
    if (format3.pattern) {
      return format3.pattern;
    }
    var skeleton = format3.skeleton;
    if (!skeleton) {
      if (format3.datetime) {
        result = formatString(calendar.dateTimeFormats[format3.datetime], calendar.timeFormats[format3.datetime], calendar.dateFormats[format3.datetime]);
      } else if (format3.date) {
        result = calendar.dateFormats[format3.date];
      } else if (format3.time) {
        result = calendar.timeFormats[format3.time];
      } else {
        skeleton = skeletonFromOptions(format3);
      }
    }
    if (skeleton) {
      result = skeletonFormat(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@progress/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@progress/kendo-intl/dist/es/dates/format-names.js
function formatNames(locale, type, formatLength, standAlone, lower) {
  return dateFormatNames(locale, {
    type,
    nameType: dateNameType(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@progress/kendo-intl/dist/es/common/is-date.js
function isFunction2(fun) {
  return typeof fun === "function";
}
function isDate2(value2) {
  return Boolean(value2) && isFunction2(value2.getTime) && isFunction2(value2.getMonth);
}

// node_modules/@progress/kendo-intl/dist/es/dates/constants.js
var MONTH = "month";
var HOUR = "hour";
var ZONE = "zone";
var WEEKDAY = "weekday";
var QUARTER = "quarter";
var DATE_FIELD_MAP = {
  "G": "era",
  "y": "year",
  "q": QUARTER,
  "Q": QUARTER,
  "M": MONTH,
  "L": MONTH,
  "d": "day",
  "E": WEEKDAY,
  "c": WEEKDAY,
  "e": WEEKDAY,
  "h": HOUR,
  "H": HOUR,
  "k": HOUR,
  "K": HOUR,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE,
  "X": ZONE,
  "z": ZONE,
  "Z": ZONE
};
var dateFormatRegExp = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@progress/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex(day, formatLength, localeInfo3) {
  var firstDayIndex = firstDay(localeInfo3);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad(month + 1, formatLength);
  }
  return formatNames(info, "months", formatLength, standAlone)[month];
}
function formatQuarter(date2, formatLength, info, standAlone) {
  var quarter = Math.floor(date2.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone(date2, info, options2) {
  var shortHours = options2.shortHours;
  var optionalMinutes = options2.optionalMinutes;
  var separator2 = options2.separator;
  var localizedName = options2.localizedName;
  var zZeroOffset = options2.zZeroOffset;
  var offset4 = date2.getTimezoneOffset() / 60;
  if (offset4 === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset4 <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset4).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator2 ? ":" : EMPTY) + pad(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset4 === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek(date2, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex(date2.getDay(), formatLength, info);
  } else {
    result = formatNames(info, "days", formatLength, standAlone)[date2.getDay()];
  }
  return result;
}
var formatters = {};
formatters.d = function(date2, formatLength) {
  return pad(date2.getDate(), formatLength);
};
formatters.E = function(date2, formatLength, info) {
  return formatNames(info, "days", formatLength)[date2.getDay()];
};
formatters.M = function(date2, formatLength, info) {
  return formatMonth(date2.getMonth(), formatLength, info, false);
};
formatters.L = function(date2, formatLength, info) {
  return formatMonth(date2.getMonth(), formatLength, info, true);
};
formatters.y = function(date2, formatLength) {
  var year = date2.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad(year, formatLength);
};
formatters.h = function(date2, formatLength) {
  var hours = date2.getHours() % 12 || 12;
  return pad(hours, formatLength);
};
formatters.H = function(date2, formatLength) {
  return pad(date2.getHours(), formatLength);
};
formatters.k = function(date2, formatLength) {
  return pad(date2.getHours() || 24, formatLength);
};
formatters.K = function(date2, formatLength) {
  return pad(date2.getHours() % 12, formatLength);
};
formatters.m = function(date2, formatLength) {
  return pad(date2.getMinutes(), formatLength);
};
formatters.s = function(date2, formatLength) {
  return pad(date2.getSeconds(), formatLength);
};
formatters.S = function(date2, formatLength) {
  var milliseconds = date2.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad(EMPTY, formatLength);
  }
  return result;
};
formatters.a = function(date2, formatLength, info) {
  return formatNames(info, "dayPeriods", formatLength)[date2.getHours() < 12 ? "am" : "pm"];
};
formatters.z = function(date2, formatLength, info) {
  return formatTimeZone(date2, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters.Z = function(date2, formatLength, info) {
  return formatTimeZone(date2, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters.x = function(date2, formatLength, info) {
  return formatTimeZone(date2, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters.X = function(date2, formatLength, info) {
  return formatTimeZone(date2, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters.G = function(date2, formatLength, info) {
  var era = date2.getFullYear() >= 0 ? 1 : 0;
  return formatNames(info, "eras", formatLength)[era];
};
formatters.e = formatDayOfWeek;
formatters.c = function(date2, formatLength, info) {
  return formatDayOfWeek(date2, formatLength, info, true);
};
formatters.q = function(date2, formatLength, info) {
  return formatQuarter(date2, formatLength, info, true);
};
formatters.Q = formatQuarter;
function formatDate3(date2, format3, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (!isDate2(date2)) {
    if (date2 === void 0 || date2 === null) {
      return EMPTY;
    }
    return date2;
  }
  var info = localeInfo(locale);
  var pattern = datePattern(format3, info);
  return pattern.replace(dateFormatRegExp, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters[match[0]](date2, formatLength, info);
    }
    return result;
  });
}

// node_modules/@progress/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone(date2, fromOffset, toOffset) {
  var fromLocalOffset = date2.getTimezoneOffset();
  var offsetDate = new Date(date2.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST2(date2, hours) {
  if (!hours && date2.getHours() === 23) {
    date2.setHours(date2.getHours() + 2);
  }
}

// node_modules/@progress/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp = /([+|-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp2 = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
var numberRegExp = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex = /\d+/;
var PLACEHOLDER2 = "{0}";
var leadingSpacesRegex = /^ */;
var trailingSpacesRegex = / *$/;
var standardDateFormats = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX = 2029;
function outOfRange(value2, start2, end2) {
  return !(value2 >= start2 && value2 <= end2);
}
function lookAhead(match, state) {
  var format3 = state.format;
  var idx = state.idx;
  var i = 0;
  while (format3[idx] === match) {
    i++;
    idx++;
  }
  if (i > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i;
}
function getNumber(size, state) {
  var regex = size ? numberRegExp[size] || new RegExp("^\\d{1," + size + "}") : numberRegex, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName(names, state, lower) {
  var i = 0, length = names.length, name2, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i < length; i++) {
    name2 = names[i];
    nameLength = name2.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name2 && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER2, EMPTY).toLowerCase()];
}
function parseTimeZoneOffset(state, info, options2) {
  var shortHours = options2.shortHours;
  var noSeparator = options2.noSeparator;
  var optionalMinutes = options2.optionalMinutes;
  var localizedName = options2.localizedName;
  var zLiteral = options2.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName(calendarGmtFormats(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator2 = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator2) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange(hoursOffset, -12, 13) || minutesOffset && outOfRange(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth(ch, state, info) {
  var count2 = lookAhead(ch, state);
  var names = formatNames(info, "months", count2, ch === "L", true);
  var month = count2 < 3 ? getNumber(2, state) : getIndexByName(names, state, true);
  if (month === null || outOfRange(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek(ch, state, info) {
  var count2 = lookAhead(ch, state);
  var names = formatNames(info, "days", count2, ch === "c", true);
  var dayOfWeek2 = count2 < 3 ? getNumber(1, state) : getIndexByName(names, state, true);
  if (!dayOfWeek2 && dayOfWeek2 !== 0 || outOfRange(dayOfWeek2, 1, 7)) {
    return true;
  }
}
var parsers = {};
parsers.d = function(state) {
  lookAhead("d", state);
  var day = getNumber(2, state);
  if (day === null || outOfRange(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers.E = function(state, info) {
  var count2 = lookAhead("E", state);
  var dayOfWeek2 = getIndexByName(formatNames(info, "days", count2, false, true), state, true);
  if (dayOfWeek2 === null) {
    return true;
  }
};
parsers.M = function(state, info) {
  return parseMonth("M", state, info);
};
parsers.L = function(state, info) {
  return parseMonth("L", state, info);
};
parsers.y = function(state) {
  var count2 = lookAhead("y", state);
  var year = getNumber(count2 === 1 ? void 0 : count2, state);
  if (year === null) {
    return true;
  }
  if (count2 === 2) {
    var currentYear = (/* @__PURE__ */ new Date()).getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers.h = function(state) {
  lookAhead("h", state);
  var hours = getNumber(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.K = function(state) {
  lookAhead("K", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers.a = function(state, info) {
  var count2 = lookAhead("a", state);
  var periodFormats = formatNames(info, "dayPeriods", count2, false, true);
  var pmHour = getIndexByName([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers.H = function(state) {
  lookAhead("H", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers.k = function(state) {
  lookAhead("k", state);
  var hours = getNumber(2, state);
  if (hours === null || outOfRange(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers.m = function(state) {
  lookAhead("m", state);
  var minutes = getNumber(2, state);
  if (minutes === null || outOfRange(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers.s = function(state) {
  lookAhead("s", state);
  var seconds = getNumber(2, state);
  if (seconds === null || outOfRange(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers.S = function(state) {
  var count2 = lookAhead("S", state);
  var match = state.value.substr(state.valueIdx, count2);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count2;
  }
  if (milliseconds === null || outOfRange(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers.z = function(state, info) {
  var count2 = lookAhead("z", state);
  var shortFormat = count2 < 4;
  var invalid = parseTimeZoneOffset(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.Z = function(state, info) {
  var count2 = lookAhead("Z", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count2 < 4,
    zLiteral: count2 === 5,
    localizedName: count2 === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers.x = function(state, info) {
  var count2 = lookAhead("x", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count2 !== 3 && count2 !== 5,
    optionalMinutes: count2 === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers.X = function(state, info) {
  var count2 = lookAhead("X", state);
  var invalid = parseTimeZoneOffset(state, info, {
    noSeparator: count2 !== 3 && count2 !== 5,
    optionalMinutes: count2 === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers.G = function(state, info) {
  var count2 = lookAhead("G", state);
  var eras = formatNames(info, "eras", count2, false, true);
  var era = getIndexByName([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers.e = function(state, info) {
  return parseDayOfWeek("e", state, info);
};
parsers.c = function(state, info) {
  return parseDayOfWeek("c", state, info);
};
function createDate2(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date2 = /* @__PURE__ */ new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date2.getFullYear();
    month = date2.getMonth();
    day = date2.getDate();
  } else {
    if (year === null) {
      year = date2.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST2(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces(value2, format3) {
  var leadingSpaces = leadingSpacesRegex.exec(format3)[0];
  var trailingSpaces = trailingSpacesRegex.exec(format3)[0];
  return "" + leadingSpaces + value2 + trailingSpaces;
}
function parseExact(value2, format3, info) {
  var pattern = datePattern(format3, info).split(EMPTY);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces(value2, format3),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral(state);
    } else {
      if (parsers[ch]) {
        var invalid = parsers[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral(state);
      } else if (!checkLiteral(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value2.length) {
    return null;
  }
  return createDate2(state) || null;
}
function parseMicrosoftDateOffset(offset4) {
  var sign = offset4.substr(0, 1) === "-" ? -1 : 1;
  var result = offset4.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat(value2) {
  if (value2 && value2.indexOf("/D") === 0) {
    var date2 = dateRegExp2.exec(value2);
    if (date2) {
      date2 = date2[1];
      var tzoffset = offsetRegExp.exec(date2.substring(1));
      date2 = new Date(parseInt(date2, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset(tzoffset[0]);
        date2 = convertTimeZone(date2, date2.getTimezoneOffset(), 0);
        date2 = convertTimeZone(date2, 0, -1 * tzoffset);
      }
      return date2;
    }
  }
}
function defaultFormats(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE[idx]]);
  }
  return formats.concat(standardDateFormats);
}
function parseDate2(value2, formats, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  if (!value2) {
    return null;
  }
  if (isDate2(value2)) {
    return value2;
  }
  var parseValue = String(value2).trim();
  var date2 = parseMicrosoftDateFormat(parseValue);
  if (date2) {
    return date2;
  }
  var info = localeInfo(locale);
  var parseFormats = formats || defaultFormats(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date2 = parseExact(parseValue, parseFormats[idx], info);
    if (date2) {
      return date2;
    }
  }
  return date2;
}

// node_modules/@progress/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL = "literal";
function addLiteral(parts, value2) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL) {
    lastPart.pattern += value2;
  } else {
    parts.push({
      type: LITERAL,
      pattern: value2
    });
  }
}
function isHour12(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat(format3, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE;
  var info = localeInfo(locale);
  var pattern = datePattern(format3, info);
  var parts = [];
  var lastIndex = dateFormatRegExp.lastIndex = 0;
  var match = dateFormatRegExp.exec(pattern);
  while (match) {
    var value2 = match[0];
    if (lastIndex < match.index) {
      addLiteral(parts, pattern.substring(lastIndex, match.index));
    }
    if (value2.startsWith('"') || value2.startsWith("'")) {
      addLiteral(parts, value2);
    } else {
      var specifier = value2[0];
      var type = DATE_FIELD_MAP[specifier];
      var part = {
        type,
        pattern: value2
      };
      if (type === "hour") {
        part.hour12 = isHour12(value2);
      }
      var names = NAME_TYPES[type];
      if (names) {
        var minLength = isNumber(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value2.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp.lastIndex;
    match = dateFormatRegExp.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@progress/kendo-intl/dist/es/format.js
var formatRegExp4 = /\{(\d+)(:[^}]+)?\}/g;
function toString(value2, format3, locale) {
  if (format3) {
    if (isDate2(value2)) {
      return formatDate3(value2, format3, locale);
    } else if (isNumber(value2)) {
      return formatNumber(value2, format3, locale);
    }
  }
  return value2 !== void 0 && value2 !== null ? value2 : EMPTY;
}
function format(format3, values2, locale) {
  return format3.replace(formatRegExp4, function(match, index, placeholderFormat) {
    var value2 = values2[parseInt(index, 10)];
    return toString(value2, placeholderFormat ? placeholderFormat.substring(1) : EMPTY, locale);
  });
}

// node_modules/@progress/kendo-react-intl/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-react-intl",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225061,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-intl/dist/es/Intl/IntlService.js
var IntlService = (
  /** @class */
  function() {
    function IntlService2(locale) {
      this.locale = locale;
      if (typeof index_esm_exports !== "undefined") {
        validatePackage(packageMetadata);
      } else {
        var message = "License activation failed for ".concat(packageMetadata.name, "\n");
        message += "The @progress/kendo-licensing script is not loaded.\n";
        message += "See ".concat(packageMetadata.licensingDocsUrl, " for more information.\n");
        console.warn(message);
      }
      if (locale === "" && true) {
        throw "Locale should not be empty string";
      }
    }
    IntlService2.prototype.format = function(format3) {
      var values2 = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        values2[_i - 1] = arguments[_i];
      }
      if (values2.length === 1 && Array.isArray(values2[0])) {
        return format(format3, values2[0], this.locale);
      }
      return format(format3, values2, this.locale);
    };
    IntlService2.prototype.formatDate = function(value2, format3) {
      return formatDate3(value2, format3, this.locale);
    };
    IntlService2.prototype.toString = function(value2, format3) {
      return toString(value2, format3, this.locale);
    };
    IntlService2.prototype.parseNumber = function(value2, format3) {
      return parseNumber(value2, this.locale, format3);
    };
    IntlService2.prototype.parseDate = function(value2, format3) {
      return parseDate2(value2, format3, this.locale);
    };
    IntlService2.prototype.formatNumber = function(value2, format3) {
      return formatNumber(value2, format3, this.locale);
    };
    IntlService2.prototype.dateFieldName = function(options2) {
      return dateFieldName(options2, this.locale);
    };
    IntlService2.prototype.dateFormatNames = function(options2) {
      return dateFormatNames(this.locale, options2);
    };
    IntlService2.prototype.splitDateFormat = function(format3) {
      return splitDateFormat(format3, this.locale);
    };
    IntlService2.prototype.numberSymbols = function() {
      return numberSymbols(this.locale);
    };
    IntlService2.prototype.firstDay = function() {
      return firstDay(this.locale);
    };
    IntlService2.prototype.localeInfo = function() {
      return localeInfo(this.locale);
    };
    return IntlService2;
  }()
);

// node_modules/@progress/kendo-react-intl/dist/es/Localization/messages.js
var messages = /* @__PURE__ */ Object.create({});

// node_modules/@progress/kendo-react-intl/dist/es/Localization/LocalizationService.js
var LocalizationService = (
  /** @class */
  function() {
    function LocalizationService2(language) {
      this.language = language;
      if (language === "" && true) {
        throw "Language should not be an empty string";
      }
    }
    LocalizationService2.prototype.toLanguageString = function(key, defaultValue2) {
      if (this.language && messages[this.language] && messages[this.language].hasOwnProperty(key)) {
        return messages[this.language][key];
      } else {
        return defaultValue2;
      }
    };
    return LocalizationService2;
  }()
);

// node_modules/@progress/kendo-react-intl/dist/es/globalization/GlobalizationContext.js
var React24 = __toESM(require_react());
var GlobalizationContext = React24.createContext({
  intl: new IntlService("en"),
  localization: new LocalizationService()
});

// node_modules/@progress/kendo-react-intl/dist/es/intlUtils.js
function provideIntlService(component) {
  if (!component && true) {
    throw "Passed component - ".concat(component, " is invalid.");
  }
  var context2 = component.context;
  return context2 && context2.intl ? context2.intl : new IntlService("en");
}
function provideLocalizationService(component) {
  if (!component && true) {
    throw "Passed component - ".concat(component, " is invalid.");
  }
  var context2 = component.context;
  return context2 && context2.localization ? context2.localization : new LocalizationService();
}
function registerForIntl(component) {
  component.contextType = GlobalizationContext;
}
function registerForLocalization(component) {
  component.contextType = GlobalizationContext;
}

// node_modules/@progress/kendo-react-intl/dist/es/hooks/useInternationalization.js
var React25 = __toESM(require_react());
var useInternationalization = function() {
  return React25.useContext(GlobalizationContext).intl;
};

// node_modules/@progress/kendo-react-intl/dist/es/hooks/useLocalization.js
var React26 = __toESM(require_react());
var useLocalization = function() {
  return React26.useContext(GlobalizationContext).localization;
};

// node_modules/@progress/kendo-react-buttons/dist/es/package-metadata.js
var packageMetadata2 = {
  name: "@progress/kendo-react-buttons",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225186,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-buttons/dist/es/Button.js
var React27 = __toESM(require_react());
var PropTypes4 = __toESM(require_prop_types());
var __extends2 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __rest5 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
function iconElement(_a14) {
  var imageUrl = _a14.imageUrl, name2 = _a14.name, iconClass = _a14.iconClass, svgIcon = _a14.svgIcon, imageAlt = _a14.imageAlt;
  if (imageUrl) {
    return React27.createElement("img", { role: "presentation", className: "k-button-icon", alt: imageAlt, src: imageUrl });
  } else if (name2 || svgIcon) {
    return React27.createElement(IconWrap, { className: "k-button-icon", name: name2, icon: svgIcon });
  } else if (iconClass) {
    return React27.createElement("span", { role: "presentation", className: classNames("k-button-icon", iconClass) });
  }
  return null;
}
var Button = (
  /** @class */
  function(_super) {
    __extends2(Button2, _super);
    function Button2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.handleClick = function(event2) {
        _this3.toggleIfApplicable();
        if (_this3.props.onClick) {
          _this3.props.onClick.call(void 0, event2);
        }
      };
      validatePackage2(packageMetadata2);
      _this3.state = { selected: _this3.props.togglable === true && _this3.props.selected === true };
      return _this3;
    }
    Object.defineProperty(Button2.prototype, "element", {
      /**
       * Gets the DOM element of the Button component.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Button2.prototype, "selected", {
      /**
       * Returns `true` when the component is togglable and selected ([see example]({% slug toggleable_button %})).
       * Otherwise, returns `false`.
       */
      get: function() {
        return this.Vb !== void 0 ? this.Vb : this.state.selected;
      },
      enumerable: false,
      configurable: true
    });
    Button2.getDerivedStateFromProps = function(props, state) {
      if (props.togglable && props.selected !== void 0 && props.selected !== state.selected) {
        return { selected: props.selected };
      }
      return null;
    };
    Button2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      var _b3 = this.props, children2 = _b3.children, togglable = _b3.togglable, icon = _b3.icon, iconClass = _b3.iconClass, svgIcon = _b3.svgIcon, imageUrl = _b3.imageUrl, imageAlt = _b3.imageAlt, className = _b3.className, onClick = _b3.onClick, _c2 = _b3.size, size = _c2 === void 0 ? Button2.defaultProps.size : _c2, _d = _b3.rounded, rounded = _d === void 0 ? Button2.defaultProps.rounded : _d, _e = _b3.fillMode, fillMode = _e === void 0 ? Button2.defaultProps.fillMode : _e, _f = _b3.themeColor, themeColor = _f === void 0 ? Button2.defaultProps.themeColor : _f, htmlAttributes = __rest5(_b3, ["children", "togglable", "icon", "iconClass", "svgIcon", "imageUrl", "imageAlt", "className", "onClick", "size", "rounded", "fillMode", "themeColor"]);
      var hasIcon = icon !== void 0 || iconClass !== void 0 || imageUrl !== void 0;
      var hasChildren2 = children2 !== void 0;
      var iconEl = iconElement({
        name: icon,
        svgIcon,
        iconClass,
        imageUrl,
        imageAlt
      });
      return React27.createElement(
        "button",
        __assign11({ ref: function(button) {
          return _this3.i = button;
        }, "aria-pressed": togglable ? this.state.selected : void 0 }, htmlAttributes, { onClick: this.handleClick, className: classNames("k-button", (_a14 = {}, _a14["k-button-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-button-".concat(fillMode)] = fillMode, _a14["k-button-".concat(fillMode, "-").concat(themeColor)] = Boolean(fillMode && themeColor), _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a14["k-icon-button"] = !hasChildren2 && hasIcon, _a14["k-disabled"] = this.props.disabled, _a14["k-selected"] = this.state.selected, _a14["k-rtl"] = this.props.dir === "rtl", _a14), this.props.className) }),
        iconEl,
        children2 && React27.createElement("span", { className: "k-button-text" }, children2)
      );
    };
    Button2.prototype.toggleIfApplicable = function() {
      var _this3 = this;
      if (this.props.togglable && this.props.selected === void 0) {
        var selected = !this.state.selected;
        this.Vb = selected;
        this.setState({ selected }, function() {
          return _this3.Vb = void 0;
        });
      }
    };
    Button2.propTypes = {
      children: PropTypes4.node,
      selected: PropTypes4.bool,
      togglable: PropTypes4.bool,
      icon: PropTypes4.string,
      svgIcon: svgIconPropType,
      iconClass: PropTypes4.string,
      imageUrl: PropTypes4.string,
      imageAlt: PropTypes4.string,
      size: PropTypes4.oneOf([null, "small", "medium", "large"]),
      rounded: PropTypes4.oneOf([null, "small", "medium", "large", "full"]),
      fillMode: PropTypes4.oneOf([null, "flat", "link", "outline", "solid"]),
      // eslint-disable-next-line max-len
      themeColor: PropTypes4.oneOf([null, "base", "primary", "secondary", "tertiary", "info", "success", "warning", "error", "dark", "light", "inverse"])
    };
    Button2.defaultProps = {
      togglable: false,
      size: "medium",
      rounded: "medium",
      fillMode: "solid",
      themeColor: "base"
    };
    return Button2;
  }(React27.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/util.js
var styles = {
  button: "k-button",
  "flat": "k-flat",
  "outline": "k-outline",
  "clear": "k-button-clear",
  "primary": "k-primary",
  "state-selected": "k-selected",
  "button-icon": "k-button-icon",
  "button-icontext": "k-button-icontext",
  "state-disabled": "k-disabled",
  "group-start": "k-group-start",
  "group-end": "k-group-end",
  "button-group": "k-button-group",
  "button-group-stretched": "k-button-group-stretched",
  "ltr": "k-ltr",
  "rtl": "k-rtl"
};
var noInnerButton = ":not(.k-dropdownlist button):not(.k-colorpicker button):not(.k-split-button .k-split-button-arrow)";
var toolbarButtons = [
  "button" + noInnerButton,
  ".k-button-group > button" + noInnerButton,
  ".k-dropdownlist",
  ".k-colorpicker"
];
var util_default = {
  styles
};

// node_modules/@progress/kendo-react-buttons/dist/es/ButtonGroup.js
var React28 = __toESM(require_react());
var PropTypes5 = __toESM(require_prop_types());
var __extends3 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var styles2 = util_default.styles;
var ButtonGroup = (
  /** @class */
  function(_super) {
    __extends3(ButtonGroup2, _super);
    function ButtonGroup2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      validatePackage2(packageMetadata2);
      return _this3;
    }
    ButtonGroup2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      var buttons = this.mapButtons(this.props.children);
      var groupClasses = classNames([styles2["button-group"]], (_a14 = {}, _a14["k-disabled"] = this.props.disabled, _a14[styles2["button-group-stretched"]] = !!this.props.width, _a14), this.props.className);
      var groupProps = {
        className: groupClasses,
        style: { "width": "".concat(this.props.width) },
        dir: this.props.dir,
        // Accessibility properties
        role: "group",
        "aria-disabled": this.props.disabled
      };
      return React28.createElement("div", __assign12({ ref: function(div) {
        _this3.i = div;
      } }, groupProps, { className: groupClasses }), buttons);
    };
    ButtonGroup2.prototype.mapButtons = function(children2) {
      var _this3 = this;
      var count2 = React28.Children.count(children2);
      var rtl = this.props.dir !== void 0 ? this.props.dir === "rtl" : this.i && getComputedStyle(this.i).direction === "rtl" || false;
      return React28.Children.map(children2, function(child, index) {
        if (React28.isValidElement(child)) {
          return _this3.renderButton(child, index, index === count2 - 1, rtl);
        }
        return child;
      });
    };
    ButtonGroup2.prototype.renderButton = function(child, index, isLast, isRtl) {
      var _a14;
      var className = classNames(child.props.className, (_a14 = {}, _a14[styles2["group-start"]] = isRtl ? isLast : index === 0, _a14[styles2["group-end"]] = isRtl ? index === 0 : isLast, _a14));
      var style = __assign12(__assign12({}, this.props.width ? { width: this.props.width } : {}), child.props.style || {});
      var disabled = this.props.disabled || child.props.disabled;
      var buttonProps = __assign12(__assign12(__assign12(__assign12({}, child.props), className ? { className } : {}), Object.keys(style).length ? { style } : {}), disabled !== void 0 ? { disabled } : {});
      return React28.Children.count(child.props.children) > 0 ? React28.cloneElement(child, buttonProps, child.props.children) : React28.cloneElement(child, buttonProps);
    };
    ButtonGroup2.propTypes = {
      children: PropTypes5.oneOfType([PropTypes5.arrayOf(PropTypes5.element), PropTypes5.element]),
      className: PropTypes5.string,
      disabled: PropTypes5.bool,
      width: PropTypes5.string,
      dir: PropTypes5.string
    };
    return ButtonGroup2;
  }(React28.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/ButtonItem.js
var React29 = __toESM(require_react());
var ButtonItem = function(props) {
  var handleClick = React29.useCallback(function(event2) {
    props.onClick(event2, props.index);
  }, [props]);
  var As = props.dataItem.render || props.item || (props.item === void 0 ? props.render : null);
  var text = props.dataItem.text !== void 0 ? props.dataItem.text : props.textField ? props.dataItem[props.textField] : props.dataItem;
  var item = React29.createElement("li", { id: props.id, className: classNames("k-item", props.className, { "k-focus": props.focused }), tabIndex: -1, onClick: handleClick, onMouseDown: props.onDown, onPointerDown: props.onDown, role: "menuitem", "aria-disabled": props.dataItem.disabled || void 0 }, React29.createElement("span", { tabIndex: -1, className: classNames("k-link k-menu-link", {
    "k-selected": props.dataItem.selected,
    "k-disabled": props.dataItem.disabled
  }), key: "icon" }, As ? React29.createElement(As, { item: props.dataItem, itemIndex: props.index }) : React29.createElement(
    React29.Fragment,
    null,
    (props.dataItem.icon || props.dataItem.iconClass) && React29.createElement(IconWrap, { className: props.dataItem.iconClass, name: props.dataItem.icon, icon: props.dataItem.svgIcon }),
    props.dataItem.imageUrl && React29.createElement("img", { role: "presentation", alt: "", src: props.dataItem.imageUrl, className: "k-icon" }),
    text && React29.createElement("span", { className: "k-menu-link-text" }, text)
  )));
  return props.item !== void 0 && /* to be removed in 5.0.0 */
  props.render !== void 0 ? props.render.call(void 0, item, props) : item;
};
ButtonItem.displayName = "KendoReactButtonItem";

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/SplitButtonItem.js
var React30 = __toESM(require_react());
var PropTypes6 = __toESM(require_prop_types());
var __extends4 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButtonItem = (
  /** @class */
  function(_super) {
    __extends4(SplitButtonItem2, _super);
    function SplitButtonItem2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SplitButtonItem2.prototype.render = function() {
      return null;
    };
    SplitButtonItem2.propTypes = {
      text: PropTypes6.string,
      icon: PropTypes6.string,
      iconClass: PropTypes6.string,
      imageUrl: PropTypes6.string,
      disabled: PropTypes6.bool,
      render: PropTypes6.any
    };
    return SplitButtonItem2;
  }(React30.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/utils/navigation.js
var navigate = function(focusedIndex, keyCode, altKey, total) {
  if (altKey) {
    return focusedIndex;
  }
  var index = Math.min(total - 1, Math.max(0, focusedIndex));
  switch (keyCode) {
    case Keys.enter:
    case Keys.space:
    case Keys.esc:
      return -1;
    case Keys.up:
    case Keys.left:
      return index - 1 < 0 ? total - 1 : index - 1;
    case Keys.down:
    case Keys.right:
      return index + 1 >= total ? 0 : index + 1;
    case Keys.home:
      return 0;
    case Keys.end:
      return total - 1;
    default:
      return focusedIndex;
  }
};

// node_modules/@progress/kendo-react-popup/dist/es/animation.js
var clearSlide = function(element6) {
  element6.style.transitionDuration = "";
  Array.from(element6.classList).forEach(function(c) {
    if (c.startsWith("k-slide-")) {
      element6.classList.remove(c);
    }
  });
};
var firefox = typeof window !== "undefined" && /Firefox/.test(window.navigator.userAgent);
var slide = function(element6, direction, duration2, type, callback) {
  if (duration2 === 0) {
    return callback();
  }
  var slideClass = "k-slide-" + direction + "-" + type;
  var slideActiveClass = slideClass + "-active";
  var transitionend = function(e) {
    if (e.target === element6) {
      element6.removeEventListener("transitionend", transitionend);
      clearSlide(element6);
      if (type === "exit") {
        element6.style.display = "none";
      } else {
        element6.style.display = "";
      }
      callback();
    }
  };
  element6.addEventListener("transitionend", transitionend);
  var ownerDocument2 = element6.ownerDocument;
  if (!ownerDocument2) {
    return;
  }
  var defaultView = ownerDocument2.defaultView;
  if (!defaultView) {
    return;
  }
  var animate = function() {
    clearSlide(element6);
    element6.classList.add(slideClass);
    defaultView.requestAnimationFrame(function() {
      element6.style.transitionDuration = duration2 + "ms";
      element6.classList.add(slideActiveClass);
    });
  };
  if (firefox) {
    defaultView.requestAnimationFrame(animate);
  } else {
    animate();
  }
};

// node_modules/@progress/kendo-popup-common/dist/es/align-point.js
var align_point_default = {
  "bottom": "bottom",
  "center": "center",
  "middle": "middle",
  "left": "left",
  "right": "right",
  "top": "top"
};

// node_modules/@progress/kendo-popup-common/dist/es/align.js
var align = function(options2) {
  var anchorRect = options2.anchorRect;
  var anchorAlign = options2.anchorAlign;
  var elementRect = options2.elementRect;
  var elementAlign = options2.elementAlign;
  var margin = options2.margin;
  if (margin === void 0)
    margin = {};
  var anchorHorizontal = anchorAlign.horizontal;
  var anchorVertical = anchorAlign.vertical;
  var elementHorizontal = elementAlign.horizontal;
  var elementVertical = elementAlign.vertical;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var top = anchorRect.top;
  var left2 = anchorRect.left;
  if (anchorVertical === align_point_default.bottom) {
    top += anchorRect.height;
  }
  if (anchorVertical === align_point_default.center || anchorVertical === align_point_default.middle) {
    top += Math.round(anchorRect.height / 2);
  }
  if (elementVertical === align_point_default.bottom) {
    top -= elementRect.height;
    verticalMargin *= -1;
  }
  if (elementVertical === align_point_default.center || elementVertical === align_point_default.middle) {
    top -= Math.round(elementRect.height / 2);
    verticalMargin *= -1;
  }
  if (anchorHorizontal === align_point_default.right) {
    left2 += anchorRect.width;
  }
  if (anchorHorizontal === align_point_default.center || anchorHorizontal === align_point_default.middle) {
    left2 += Math.round(anchorRect.width / 2);
  }
  if (elementHorizontal === align_point_default.right) {
    left2 -= elementRect.width;
    horizontalMargin *= -1;
  }
  if (elementHorizontal === align_point_default.center || elementHorizontal === align_point_default.middle) {
    left2 -= Math.round(elementRect.width / 2);
    horizontalMargin *= -1;
  }
  return {
    top: top + verticalMargin,
    left: left2 + horizontalMargin
  };
};
var align_default = align;

// node_modules/@progress/kendo-popup-common/dist/es/add-scroll.js
function addScroll(rect, scroll) {
  return {
    top: rect.top + scroll.y,
    left: rect.left + scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/owner-document.js
function ownerDocument(element6) {
  return element6.ownerDocument || element6.document || element6;
}

// node_modules/@progress/kendo-popup-common/dist/es/window.js
var getWindow2 = function(element6) {
  return ownerDocument(element6).defaultView;
};
var window_default = getWindow2;

// node_modules/@progress/kendo-popup-common/dist/es/document.js
var getDocument3 = function(element6) {
  return ownerDocument(element6).documentElement;
};
var document_default = getDocument3;

// node_modules/@progress/kendo-popup-common/dist/es/scrollbar-width.js
var cachedWidth = 0;
function scrollbarWidth() {
  if (!cachedWidth && typeof document !== "undefined") {
    var div = document.createElement("div");
    div.style.cssText = "overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block";
    div.innerHTML = "&nbsp;";
    document.body.appendChild(div);
    cachedWidth = div.offsetWidth - div.scrollWidth;
    document.body.removeChild(div);
  }
  return cachedWidth;
}

// node_modules/@progress/kendo-popup-common/dist/es/window-viewport.js
function windowViewport(element6) {
  var win = window_default(element6);
  var document2 = document_default(element6);
  var result = {
    height: win.innerHeight,
    width: win.innerWidth
  };
  if (document2.scrollHeight - document2.clientHeight > 0) {
    result.width -= scrollbarWidth();
  }
  return result;
}

// node_modules/@progress/kendo-popup-common/dist/es/bounding-offset.js
var boundingOffset = function(element6) {
  if (!element6.getBoundingClientRect) {
    var viewport = windowViewport(element6);
    return {
      bottom: viewport.height,
      left: 0,
      right: viewport.width,
      top: 0
    };
  }
  var ref = element6.getBoundingClientRect();
  var bottom = ref.bottom;
  var left2 = ref.left;
  var right2 = ref.right;
  var top = ref.top;
  return {
    bottom,
    left: left2,
    right: right2,
    top
  };
};
var bounding_offset_default = boundingOffset;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent.js
var offsetParent = function(element6) {
  var offsetParent2 = element6.offsetParent;
  while (offsetParent2 && offsetParent2.style.position === "static") {
    offsetParent2 = offsetParent2.offsetParent;
  }
  return offsetParent2 || document_default(element6);
};
var offset_parent_default = offsetParent;

// node_modules/@progress/kendo-popup-common/dist/es/is-body-offset.js
var isBodyOffset = function(element6) {
  return offset_parent_default(element6) === element6.ownerDocument.body;
};
var is_body_offset_default = isBodyOffset;

// node_modules/@progress/kendo-popup-common/dist/es/offset.js
var rectOfHiddenElement = function(element6) {
  var ref = element6.style;
  var display = ref.display;
  var left2 = ref.left;
  var position4 = ref.position;
  element6.style.display = "";
  element6.style.left = "-10000px";
  element6.style.position = "absolute";
  var rect = element6.getBoundingClientRect();
  element6.style.display = display;
  element6.style.left = left2;
  element6.style.position = position4;
  return rect;
};
var offset2 = function(element6) {
  var rect = element6.getBoundingClientRect();
  var left2 = rect.left;
  var top = rect.top;
  if (!rect.height && !rect.width) {
    rect = rectOfHiddenElement(element6);
  }
  return {
    top,
    left: left2,
    height: rect.height,
    width: rect.width
  };
};
var offset_default = offset2;

// node_modules/@progress/kendo-popup-common/dist/es/parents.js
function parents_default(element6, until) {
  var result = [];
  var next = element6.parentNode;
  while (next) {
    result.push(next);
    if (next === until) {
      break;
    }
    next = next.parentNode;
  }
  return result;
}
;

// node_modules/@progress/kendo-popup-common/dist/es/scroll-position.js
function scrollPosition(element6) {
  var documentElement = document_default(element6);
  var win = window_default(element6);
  return {
    x: win.pageXOffset || documentElement.scrollLeft || 0,
    y: win.pageYOffset || documentElement.scrollTop || 0
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/element-scroll-position.js
function element_scroll_position_default(element6) {
  if (element6 === (element6.ownerDocument || {}).body) {
    return scrollPosition(element6);
  }
  return {
    x: element6.scrollLeft,
    y: element6.scrollTop
  };
}
;

// node_modules/@progress/kendo-popup-common/dist/es/parent-scroll-position.js
function parentScrollPosition(element6) {
  var parent = offset_parent_default(element6);
  return parent ? element_scroll_position_default(parent) : { x: 0, y: 0 };
}

// node_modules/@progress/kendo-popup-common/dist/es/position.js
var position = function(element6, parent) {
  var win = window_default(element6);
  var elementStyles2 = win.getComputedStyle(element6);
  var offset4 = offset_default(element6);
  var parentElement = parent || offset_parent_default(element6);
  var ownerDocument2 = element6.ownerDocument;
  var useRelative = parentElement !== ownerDocument2.body && parentElement !== ownerDocument2.documentElement;
  var parentOffset = { top: 0, left: 0 };
  if (elementStyles2.position !== "fixed" && useRelative) {
    var parentStyles = win.getComputedStyle(parentElement);
    parentOffset = offset_default(parentElement);
    parentOffset.top += parseInt(parentStyles.borderTopWidth, 10);
    parentOffset.left += parseInt(parentStyles.borderLeftWidth, 10);
  }
  return {
    top: offset4.top - parentOffset.top,
    left: offset4.left - parentOffset.left,
    height: offset4.height,
    width: offset4.width
  };
};
var position_default = position;

// node_modules/@progress/kendo-popup-common/dist/es/offset-parent-scroll-position.js
function offset_parent_scroll_position_default(offsetParentElement, element6) {
  return (
    // eslint-disable-line no-arrow-condition
    offsetParentElement ? element_scroll_position_default(offsetParentElement) : parentScrollPosition(element6)
  );
}
;

// node_modules/@progress/kendo-popup-common/dist/es/position-with-scroll.js
function position_with_scroll_default(element6, parent, scale) {
  if (scale === void 0)
    scale = 1;
  var offsetParentElement = parent ? offset_parent_default(parent) : null;
  var ref = position_default(element6, offsetParentElement);
  var top = ref.top;
  var left2 = ref.left;
  var height = ref.height;
  var width = ref.width;
  var ref$1 = offset_parent_scroll_position_default(offsetParentElement, element6);
  var x = ref$1.x;
  var y = ref$1.y;
  var ownerDocument2 = element6.ownerDocument;
  var positionScale = offsetParentElement === ownerDocument2.body || offsetParentElement === ownerDocument2.documentElement ? 1 : scale;
  return {
    top: top + y * positionScale,
    left: left2 + x * positionScale,
    height,
    width
  };
}
;

// node_modules/@progress/kendo-popup-common/dist/es/remove-scroll.js
function removeScroll(rect, scroll) {
  return {
    top: rect.top - scroll.y,
    left: rect.left - scroll.x,
    height: rect.height,
    width: rect.width
  };
}

// node_modules/@progress/kendo-popup-common/dist/es/collision.js
var collision_default = {
  "fit": "fit",
  "flip": "flip",
  "none": "none"
};

// node_modules/@progress/kendo-popup-common/dist/es/restrict-to-view.js
var fit = function(position4, size, viewPortSize) {
  var output = 0;
  if (position4 + size > viewPortSize) {
    output = viewPortSize - (position4 + size);
  }
  if (position4 < 0) {
    output = -position4;
  }
  return output;
};
var flip = function(ref) {
  var offset4 = ref.offset;
  var size = ref.size;
  var anchorSize = ref.anchorSize;
  var viewPortSize = ref.viewPortSize;
  var anchorAlignPoint = ref.anchorAlignPoint;
  var elementAlignPoint = ref.elementAlignPoint;
  var margin = ref.margin;
  var output = 0;
  var isPositionCentered = elementAlignPoint === align_point_default.center || elementAlignPoint === align_point_default.middle;
  var isOriginCentered = anchorAlignPoint === align_point_default.center || anchorAlignPoint === align_point_default.middle;
  var marginToAdd = 2 * margin;
  if (elementAlignPoint !== anchorAlignPoint && !isPositionCentered && !isOriginCentered) {
    var isBeforeAnchor = anchorAlignPoint === align_point_default.top || anchorAlignPoint === align_point_default.left;
    if (offset4 < 0 && isBeforeAnchor) {
      output = size + anchorSize + marginToAdd;
      if (offset4 + output + size > viewPortSize) {
        output = 0;
      }
    } else if (offset4 >= 0 && !isBeforeAnchor) {
      if (offset4 + size > viewPortSize) {
        output += -(anchorSize + size + marginToAdd);
      }
      if (offset4 + output < 0) {
        output = 0;
      }
    }
  }
  return output;
};
var restrictToView = function(options2) {
  var anchorRect = options2.anchorRect;
  var anchorAlign = options2.anchorAlign;
  var elementRect = options2.elementRect;
  var elementAlign = options2.elementAlign;
  var collisions = options2.collisions;
  var viewPort = options2.viewPort;
  var margin = options2.margin;
  if (margin === void 0)
    margin = {};
  var elementTop = elementRect.top;
  var elementLeft = elementRect.left;
  var elementHeight = elementRect.height;
  var elementWidth = elementRect.width;
  var viewPortHeight = viewPort.height;
  var viewPortWidth = viewPort.width;
  var horizontalMargin = margin.horizontal || 0;
  var verticalMargin = margin.vertical || 0;
  var left2 = 0;
  var top = 0;
  var isVerticalFit = collisions.vertical === collision_default.fit;
  var isHorizontalFit = collisions.horizontal === collision_default.fit;
  var isVerticalFlip = collisions.vertical === collision_default.flip;
  var isHorizontalFlip = collisions.horizontal === collision_default.flip;
  if (isVerticalFit) {
    top += fit(elementTop, elementHeight, viewPortHeight);
  }
  if (isHorizontalFit) {
    left2 += fit(elementLeft, elementWidth, viewPortWidth);
  }
  if (isVerticalFlip) {
    top += flip({
      margin: verticalMargin,
      offset: elementTop,
      size: elementHeight,
      anchorSize: anchorRect.height,
      viewPortSize: viewPortHeight,
      anchorAlignPoint: anchorAlign.vertical,
      elementAlignPoint: elementAlign.vertical
    });
  }
  if (isHorizontalFlip) {
    left2 += flip({
      margin: horizontalMargin,
      offset: elementLeft,
      size: elementWidth,
      anchorSize: anchorRect.width,
      viewPortSize: viewPortWidth,
      anchorAlignPoint: anchorAlign.horizontal,
      elementAlignPoint: elementAlign.horizontal
    });
  }
  var flippedVertical = isVerticalFlip && top !== 0;
  var flippedHorizontal = isHorizontalFlip && left2 !== 0;
  var fittedVertical = isVerticalFit && top !== 0;
  var fittedHorizontal = isHorizontalFit && left2 !== 0;
  return {
    flipped: flippedHorizontal || flippedVertical,
    fitted: fittedVertical || fittedHorizontal,
    flip: {
      horizontal: flippedHorizontal,
      vertical: flippedVertical
    },
    fit: {
      horizontal: fittedHorizontal,
      vertical: fittedVertical
    },
    offset: {
      left: left2,
      top
    }
  };
};
var restrict_to_view_default = restrictToView;

// node_modules/@progress/kendo-popup-common/dist/es/siblings.js
function siblings_default(element6) {
  var result = [];
  var sibling = element6.parentNode.firstElementChild;
  while (sibling) {
    if (sibling !== element6) {
      result.push(sibling);
    }
    sibling = sibling.nextElementSibling;
  }
  return result;
}
;

// node_modules/@progress/kendo-popup-common/dist/es/sibling-container.js
function sibling_container_default(anchor, container) {
  var parentElements = parents_default(anchor);
  var containerElement = container;
  var siblingElements;
  var result;
  while (containerElement) {
    siblingElements = siblings_default(containerElement);
    result = parentElements.reduce(
      function(list, p) {
        return list.concat(siblingElements.filter(function(s) {
          return s === p;
        }));
      },
      []
    )[0];
    if (result) {
      break;
    }
    containerElement = containerElement.parentElement;
  }
  return result;
}
;

// node_modules/@progress/kendo-popup-common/dist/es/z-index.js
function zIndex(anchor, container) {
  if (!anchor || !container) {
    return null;
  }
  var sibling = sibling_container_default(anchor, container);
  if (!sibling) {
    return null;
  }
  var result = [anchor].concat(parents_default(anchor, sibling)).reduce(
    function(index, p) {
      var zIndexStyle = p.style.zIndex || window.getComputedStyle(p).zIndex;
      var current = parseInt(zIndexStyle, 10);
      return current > index ? current : index;
    },
    0
  );
  return result ? result + 1 : null;
}

// node_modules/@progress/kendo-popup-common/dist/es/utils.js
var eitherRect = function(rect, offset4) {
  if (!rect) {
    return { height: 0, left: offset4.left, top: offset4.top, width: 0 };
  }
  return rect;
};
var scaleRect = function(rect, scale) {
  if (!rect || scale === 1) {
    return rect;
  }
  return {
    height: rect.height / scale,
    left: rect.left / scale,
    top: rect.top / scale,
    width: rect.width / scale
  };
};
var removeStackingOffset = function(rect, stackingOffset) {
  if (!stackingOffset) {
    return rect;
  }
  var result = {
    height: rect.height,
    left: rect.left - stackingOffset.left,
    top: rect.top - stackingOffset.top,
    width: rect.width
  };
  return result;
};
function memoize(fun) {
  var result;
  var called = false;
  return function() {
    var args = [], len = arguments.length;
    while (len--)
      args[len] = arguments[len];
    if (called) {
      return result;
    }
    result = fun.apply(void 0, args);
    called = true;
    return result;
  };
}
var hasRelativeStackingContext = memoize(function(elementSource) {
  if (!canUseDOM2()) {
    return false;
  }
  var currentDocument = elementSource ? elementSource.ownerDocument : document;
  if (!currentDocument || !currentDocument.body) {
    return false;
  }
  var top = 10;
  var parent = currentDocument.createElement("div");
  parent.style.transform = "matrix(10, 0, 0, 10, 0, 0)";
  parent.innerHTML = '<div style="position: fixed; top: ' + top + 'px;">child</div>';
  currentDocument.body.appendChild(parent);
  var isDifferent = parent.children[0].getBoundingClientRect().top !== top;
  currentDocument.body.removeChild(parent);
  return isDifferent;
});
var canUseDOM2 = function() {
  return Boolean(
    // from fbjs
    typeof window !== "undefined" && window.document && window.document.createElement
  );
};
var utils = {
  eitherRect,
  scaleRect,
  removeStackingOffset,
  hasRelativeStackingContext,
  canUseDOM: canUseDOM2
};
var utils_default = utils;

// node_modules/@progress/kendo-popup-common/dist/es/dom-utils.js
var STYLES = [
  "font-size",
  "font-family",
  "font-stretch",
  "font-style",
  "font-weight",
  "line-height"
];
var addOffset = function(current, addition) {
  return {
    left: current.left + addition.left,
    top: current.top + addition.top
  };
};
var getWindow3 = function() {
  return utils_default.canUseDOM() ? window : null;
};
var getFontStyles = function(el) {
  var window2 = getWindow3();
  if (!window2 || !el) {
    return [];
  }
  var computedStyles = window2.getComputedStyle(el);
  return STYLES.map(function(font) {
    return { key: font, value: computedStyles[font] };
  });
};
var hasOffsetParent = function(el) {
  if (!el) {
    return false;
  }
  return Boolean(el.offsetParent);
};
var offset3 = function(el) {
  if (!el) {
    return null;
  }
  return offset_default(el);
};
var offsetAtPoint = function(element6, currentLocation) {
  if (!element6) {
    return null;
  }
  var ref = element6.style;
  var left2 = ref.left;
  var top = ref.top;
  var transition = ref.transition;
  element6.style.transition = "none";
  element6.style.left = currentLocation.left + "px";
  element6.style.top = currentLocation.top + "px";
  var currentOffset = offset_default(element6);
  element6.style.left = left2;
  element6.style.top = top;
  element6.offsetHeight;
  element6.style.transition = transition;
  return currentOffset;
};
var position2 = function(element6, popupElement, scale) {
  if (!element6 || !popupElement) {
    return null;
  }
  var currentScale = scale || 1;
  return position_with_scroll_default(element6, popupElement, currentScale);
};
var OVERFLOW_REGEXP = /auto|scroll/;
var overflowElementStyle = function(element6) {
  return "" + element6.style.overflow + element6.style.overflowX + element6.style.overflowY;
};
var overflowComputedStyle = function(element6) {
  var styles6 = window.getComputedStyle(element6);
  return "" + styles6.overflow + styles6.overflowX + styles6.overflowY;
};
var overflowStyle = function(element6) {
  return overflowElementStyle(element6) || overflowComputedStyle(element6);
};
var scrollableParents = function(element6) {
  var parentElements = [];
  if (!utils_default.canUseDOM()) {
    return parentElements;
  }
  var parent = element6.parentElement;
  while (parent) {
    if (OVERFLOW_REGEXP.test(overflowStyle(parent)) || parent.hasAttribute("data-scrollable")) {
      parentElements.push(parent);
    }
    parent = parent.parentElement;
  }
  parentElements.push(window);
  return parentElements;
};
var getRelativeContextElement = function(el) {
  if (!el || !utils_default.hasRelativeStackingContext()) {
    return null;
  }
  var parent = el.parentElement;
  while (parent) {
    if (window.getComputedStyle(parent).transform !== "none") {
      return parent;
    }
    parent = parent.parentElement;
  }
  return null;
};
var stackingElementOffset = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return offset_default(relativeContextElement);
};
var stackingElementScroll = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return { x: 0, y: 0 };
  }
  return {
    x: relativeContextElement.scrollLeft,
    y: relativeContextElement.scrollTop
  };
};
var stackingElementViewPort = function(el) {
  var relativeContextElement = getRelativeContextElement(el);
  if (!relativeContextElement) {
    return null;
  }
  return {
    height: relativeContextElement.scrollHeight,
    width: relativeContextElement.scrollWidth
  };
};
var useRelativePosition = function(el) {
  return Boolean(getRelativeContextElement(el));
};
var zoomLevel = function() {
  if (!utils_default.canUseDOM()) {
    return 1;
  }
  return parseFloat((document.documentElement.clientWidth / window.innerWidth).toFixed(2)) || 1;
};
var isZoomed = function() {
  return zoomLevel() > 1;
};
var zIndex2 = function(anchor, container) {
  if (!anchor || !utils_default.canUseDOM()) {
    return null;
  }
  var sibling = sibling_container_default(anchor, container);
  if (!sibling) {
    return null;
  }
  var result = [anchor].concat(parents_default(anchor, sibling)).reduce(
    function(index, p) {
      var zIndexStyle = p.style.zIndex || window.getComputedStyle(p).zIndex;
      var current = parseInt(zIndexStyle, 10);
      return current > index ? current : index;
    },
    0
  );
  return result ? result + 1 : null;
};
var domUtils = {
  addOffset,
  addScroll,
  align: align_default,
  boundingOffset: bounding_offset_default,
  getFontStyles,
  getWindow: getWindow3,
  hasOffsetParent,
  offset: offset3,
  offsetAtPoint,
  position: position2,
  removeScroll,
  restrictToView: restrict_to_view_default,
  scrollPosition,
  scrollableParents,
  getRelativeContextElement,
  stackingElementOffset,
  stackingElementScroll,
  stackingElementViewPort,
  useRelativePosition,
  windowViewPort: windowViewport,
  zoomLevel,
  isZoomed,
  zIndex: zIndex2
};
var dom_utils_default = domUtils;

// node_modules/@progress/kendo-popup-common/dist/es/align-element.js
var absoluteRect = function(anchor, element6, offset4, scale) {
  var scrollPos = elementScrollPosition(anchor, element6);
  var rect = utils_default.eitherRect(dom_utils_default.offset(anchor), offset4);
  var stackScale = 2 * scale;
  var stackScroll = dom_utils_default.stackingElementScroll(element6);
  if (scale !== 1 && stackScroll) {
    stackScroll.x /= stackScale;
    stackScroll.y /= stackScale;
  }
  var stackOffset = dom_utils_default.stackingElementOffset(element6);
  if (scale !== 1 && stackOffset) {
    stackOffset.left /= stackScale;
    stackOffset.top /= stackScale;
  }
  return dom_utils_default.removeScroll(
    dom_utils_default.addScroll(
      utils_default.removeStackingOffset(
        utils_default.scaleRect(rect, scale),
        stackOffset
      ),
      stackScroll
    ),
    scrollPos
  );
};
var relativeRect = function(anchor, element6, offset4, scale) {
  var rect = utils_default.eitherRect(dom_utils_default.position(anchor, element6, scale), offset4);
  return utils_default.scaleRect(rect, scale);
};
var elementScrollPosition = function(anchor, element6) {
  return anchor ? { x: 0, y: 0 } : dom_utils_default.scrollPosition(element6);
};
var alignElement = function(settings) {
  var anchor = settings.anchor;
  var element6 = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var margin = settings.margin;
  var offset4 = settings.offset;
  var positionMode = settings.positionMode;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var fixedMode = positionMode === "fixed" || !dom_utils_default.hasOffsetParent(element6);
  var anchorRect = fixedMode ? absoluteRect(anchor, element6, offset4, currentScale) : relativeRect(anchor, element6, offset4, currentScale);
  var elementRect = utils_default.scaleRect(dom_utils_default.offset(element6), currentScale);
  var result = dom_utils_default.align({
    anchorAlign,
    anchorRect,
    elementAlign,
    elementRect,
    margin
  });
  return result;
};
var align_element_default = alignElement;

// node_modules/@progress/kendo-popup-common/dist/es/position-element.js
var positionElement = function(settings) {
  var anchor = settings.anchor;
  var currentLocation = settings.currentLocation;
  var element6 = settings.element;
  var anchorAlign = settings.anchorAlign;
  var elementAlign = settings.elementAlign;
  var collisions = settings.collisions;
  var margin = settings.margin;
  var scale = settings.scale;
  var currentScale = scale || 1;
  var elementOffset2 = dom_utils_default.offsetAtPoint(element6, currentLocation);
  var elementRect = utils_default.scaleRect(elementOffset2, currentScale);
  var anchorOffset = utils_default.scaleRect(dom_utils_default.offset(anchor), currentScale);
  var anchorRect = utils_default.eitherRect(anchorOffset, currentLocation);
  var viewPort = settings.viewPort || dom_utils_default.windowViewPort(element6);
  viewPort.width = viewPort.width / currentScale;
  viewPort.height = viewPort.height / currentScale;
  var result = dom_utils_default.restrictToView({
    anchorAlign,
    anchorRect,
    collisions,
    elementAlign,
    elementRect,
    margin,
    viewPort
  });
  var offset4 = dom_utils_default.addOffset(currentLocation, result.offset);
  return {
    flip: result.flip,
    flipped: result.flipped,
    offset: offset4
  };
};
var position_element_default = positionElement;

// node_modules/@progress/kendo-react-popup/dist/es/util.js
var isDifferentOffset = function(oldOffset, newOffset) {
  var oldLeft = oldOffset.left, oldTop = oldOffset.top;
  var newLeft = newOffset.left, newTop = newOffset.top;
  return Math.abs(oldLeft - newLeft) >= 1 || Math.abs(oldTop - newTop) >= 1;
};
var hasBoundingRect = function(elem) {
  return !!elem.getBoundingClientRect;
};
var FRAME_DURATION = 1e3 / 60;
var throttle = function(func32, wait, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var timeout2, context2, args, result;
  var previous = 0;
  options2 = options2 || {};
  var later = function() {
    previous = options2.leading === false ? 0 : (/* @__PURE__ */ new Date()).getTime();
    timeout2 = void 0;
    result = func32.apply(context2, args);
    if (!timeout2) {
      context2 = args = null;
    }
  };
  var throttled = function() {
    var now3 = (/* @__PURE__ */ new Date()).getTime();
    if (!previous && options2.leading === false) {
      previous = now3;
    }
    var remaining = wait - (now3 - previous);
    context2 = void 0;
    args = arguments;
    if (remaining <= 0 || remaining > wait) {
      if (timeout2) {
        clearTimeout(timeout2);
        timeout2 = void 0;
      }
      previous = now3;
      result = func32.apply(context2, args);
      if (!timeout2) {
        context2 = args = null;
      }
    } else if (!timeout2 && options2.trailing !== false) {
      timeout2 = window.setTimeout(later, remaining);
    }
    return result;
  };
  return throttled;
};

// node_modules/@progress/kendo-react-popup/dist/es/package-metadata.js
var packageMetadata3 = {
  name: "@progress/kendo-react-popup",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225147,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-popup/dist/es/PopupWithoutContext.js
var React31 = __toESM(require_react());
var ReactDOM2 = __toESM(require_react_dom());
var PropTypes7 = __toESM(require_prop_types());
var __extends5 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var DEFAULT_POPUP_ZINDEX = 100;
var ZINDEX_POPUP_STEP = 1;
function isEquivalent(a, b) {
  if (a === b) {
    return true;
  }
  if (!!a !== !!b) {
    return false;
  }
  var aProps = Object.getOwnPropertyNames(a);
  var bProps = Object.getOwnPropertyNames(b);
  if (aProps.length !== bProps.length) {
    return false;
  }
  for (var i = 0; i < aProps.length; i++) {
    var propName = aProps[i];
    if (a[propName] !== b[propName]) {
      return false;
    }
  }
  return true;
}
var DEFAULT_OFFSET = {
  left: -1e3,
  top: 0
};
var Status;
(function(Status2) {
  Status2["hiding"] = "hiding";
  Status2["hidden"] = "hidden";
  Status2["showing"] = "showing";
  Status2["shown"] = "shown";
  Status2["reposition"] = "reposition";
})(Status || (Status = {}));
var ANIMATION_CONTAINER = "k-animation-container";
var ANIMATION_CONTAINER_SHOWN = "k-animation-container-shown";
var ANIMATION_CONTAINER_RELATIVE = "k-animation-container-relative";
var ANIMATION_CONTAINER_CHILD = "k-child-animation-container";
var K_POPUP = "k-popup";
var PopupWithoutContext = (
  /** @class */
  function(_super) {
    __extends5(PopupWithoutContext2, _super);
    function PopupWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.context = 0;
      _this3.state = { current: Status.hidden, previous: Status.hidden, props: {} };
      _this3.$ = null;
      _this3.show = function(popup) {
        _this3.setPosition(popup);
        _this3.animate(popup.firstChild, "enter", _this3.onOpened);
        _this3.setState({ current: Status.shown, previous: _this3.state.current });
      };
      _this3.setPosition = function(popup) {
        var _a14 = _this3.props, anchorAlign = _a14.anchorAlign, popupAlign = _a14.popupAlign, collision = _a14.collision, offset4 = _a14.offset, anchor = _a14.anchor, margin = _a14.margin, scale = _a14.scale, positionMode = _a14.positionMode;
        var _b3 = popup.style, width = _b3.width, height = _b3.height;
        popup.style.width = popup.offsetWidth + "px";
        popup.style.height = popup.offsetHeight + "px";
        var alignedOffset = align_element_default({
          anchor,
          anchorAlign,
          element: popup,
          elementAlign: popupAlign,
          offset: offset4,
          margin,
          positionMode,
          scale
        });
        var position4 = position_element_default({
          anchor,
          anchorAlign,
          element: popup,
          elementAlign: popupAlign,
          collisions: collision,
          currentLocation: alignedOffset,
          margin: _this3.props.margin
        });
        popup.style.top = position4.offset.top + "px";
        popup.style.left = position4.offset.left + "px";
        popup.style.width = width;
        popup.style.height = height;
        _this3.Gc = {
          fit: position4.fit,
          fitted: position4.fitted,
          flip: position4.flip,
          flipped: position4.flipped
        };
        if (_this3.props.onPosition) {
          var event_1 = {
            target: _this3,
            flipped: position4.flipped,
            fitted: position4.fitted
          };
          _this3.props.onPosition.call(void 0, event_1);
        }
      };
      _this3.onOpened = function() {
        var element6 = _this3.$;
        if (!element6) {
          return;
        }
        if (_this3.props.show) {
          element6.classList.add(ANIMATION_CONTAINER_SHOWN);
        }
        _this3.attachRepositionHandlers(element6);
        if (_this3.props.onOpen) {
          _this3.props.onOpen.call(void 0, { target: _this3 });
        }
      };
      _this3.animate = function(element6, type, callback) {
        if (!_this3.props.popupAlign) {
          return;
        }
        var animationDirection;
        var _a14 = _this3.props.popupAlign, horizontal = _a14.horizontal, vertical = _a14.vertical;
        if (horizontal === "left" && vertical === "center") {
          animationDirection = "right";
        } else if (horizontal === "right" && vertical === "center") {
          animationDirection = "left";
        } else if (vertical === "top") {
          animationDirection = "down";
        } else {
          animationDirection = "up";
        }
        var flipPositions = {
          down: "up",
          up: "down",
          left: "right",
          right: "left"
        };
        if (_this3.Gc && _this3.Gc.flipped) {
          animationDirection = flipPositions[animationDirection];
        }
        slide(element6, animationDirection, _this3.animationDuration[type], type, callback);
      };
      _this3.onClosing = function(popup) {
        if (!_this3.props.show) {
          popup.classList.remove(ANIMATION_CONTAINER_SHOWN);
        }
        _this3.detachRepositionHandlers();
      };
      _this3.onClosed = function() {
        if (_this3.state.current === Status.hiding && _this3.state.previous === Status.shown) {
          _this3.setState({ current: Status.hidden, previous: _this3.state.current });
        }
        if (_this3.props.onClose) {
          _this3.props.onClose.call(void 0, { target: _this3 });
        }
      };
      _this3.getCurrentZIndex = function() {
        return _this3.context ? _this3.context + ZINDEX_POPUP_STEP : DEFAULT_POPUP_ZINDEX;
      };
      validatePackage2(packageMetadata3);
      _this3.reposition = throttle(_this3.reposition.bind(_this3), FRAME_DURATION);
      return _this3;
    }
    Object.defineProperty(PopupWithoutContext2.prototype, "element", {
      /**
       * Represents the Popup DOM element.
       */
      get: function() {
        return this.$;
      },
      enumerable: false,
      configurable: true
    });
    PopupWithoutContext2.getDerivedStateFromProps = function(props, state) {
      var show = props.show, anchor = props.anchor, anchorAlign = props.anchorAlign, appendTo = props.appendTo, collision = props.collision, popupAlign = props.popupAlign, className = props.className, popupClass = props.popupClass, style = props.style, offset4 = props.offset, contentKey = props.contentKey;
      var nextState = __assign13(__assign13({}, state), { props: {
        show,
        anchor,
        anchorAlign,
        appendTo,
        collision,
        popupAlign,
        className,
        popupClass,
        style,
        offset: offset4,
        contentKey
      } });
      if (props.show) {
        if (state.current === Status.hidden || state.current === Status.hiding) {
          return __assign13(__assign13({}, nextState), { current: Status.showing, previous: state.current });
        }
        if (state.current === Status.showing) {
          return __assign13(__assign13({}, nextState), { current: Status.shown, previous: state.current });
        }
        if (state.current === Status.shown && (!isEquivalent(offset4, state.props.offset) || !isEquivalent(anchorAlign, state.props.anchorAlign) || !isEquivalent(appendTo, state.props.appendTo) || !isEquivalent(collision, state.props.collision) || !isEquivalent(popupAlign, state.props.popupAlign) || !isEquivalent(style, state.props.style) || anchor !== state.props.anchor || popupClass !== state.props.popupClass || className !== state.props.className)) {
          return __assign13(__assign13({}, nextState), { current: Status.reposition, previous: state.current });
        }
        return nextState;
      }
      if (state.current === Status.hiding || state.current === Status.hidden) {
        return __assign13(__assign13({}, nextState), { current: Status.hidden, previous: state.current });
      }
      return __assign13(__assign13({}, nextState), { current: Status.hiding, previous: state.current });
    };
    PopupWithoutContext2.prototype.componentDidUpdate = function(prevProps) {
      if (this.state.current === Status.showing && this.$) {
        this.show(this.$);
      } else if (this.state.current === Status.hiding && this.$) {
        this.onClosing(this.$);
        this.animate(this.$.firstChild, "exit", this.onClosed);
      } else if (this.state.current === Status.reposition && this.state.previous === Status.shown) {
        this.setState({ current: Status.shown, previous: this.state.current });
      } else if (this.state.current === Status.shown && prevProps.contentKey !== this.props.contentKey && this.$) {
        this.setPosition(this.$);
      }
    };
    PopupWithoutContext2.prototype.componentDidMount = function() {
      if (this.state.current === Status.showing && this.$) {
        this.show(this.$);
      }
    };
    PopupWithoutContext2.prototype.componentWillUnmount = function() {
      this.detachRepositionHandlers();
    };
    PopupWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, children2 = _a14.children, className = _a14.className, popupClass = _a14.popupClass, show = _a14.show, id = _a14.id, positionMode = _a14.positionMode;
      var calculatedAppendTo = this.props.appendTo ? this.props.appendTo : canUseDOM ? this.props.anchor && this.props.anchor.ownerDocument ? this.props.anchor.ownerDocument.body : document.body : void 0;
      if (this.state.current === Status.reposition && this.state.previous === Status.shown && this.$) {
        this.setPosition(this.$);
      }
      var style = Object.assign({}, { position: positionMode, top: 0, left: -1e4 }, this.props.style || {});
      var closing = this.state.current === Status.hiding;
      if ((show || closing) && calculatedAppendTo) {
        var currentZIndex = this.getCurrentZIndex();
        var popupElement = React31.createElement(
          ZIndexContext.Provider,
          { value: currentZIndex },
          React31.createElement(
            "div",
            { className: classNames(ANIMATION_CONTAINER, ANIMATION_CONTAINER_RELATIVE, className), id, ref: function(e) {
              return _this3.$ = e;
            }, style: __assign13({ zIndex: currentZIndex }, style) },
            React31.createElement("div", { role: this.props.role, className: classNames(K_POPUP, popupClass, ANIMATION_CONTAINER_CHILD), style: { transitionDelay: "0ms" } }, children2)
          )
        );
        return this.props.appendTo !== null ? ReactDOM2.createPortal(popupElement, calculatedAppendTo) : popupElement;
      }
      return null;
    };
    Object.defineProperty(PopupWithoutContext2.prototype, "animationDuration", {
      get: function() {
        var animate = this.props.animate;
        var enter = 0;
        var exit = 0;
        if (animate) {
          if (animate === true) {
            enter = exit = 300;
          } else {
            enter = animate.openDuration || 0;
            exit = animate.closeDuration || 0;
          }
        }
        return { enter, exit };
      },
      enumerable: false,
      configurable: true
    });
    PopupWithoutContext2.prototype.attachRepositionHandlers = function(element6) {
      var _this3 = this;
      this.detachRepositionHandlers();
      this._a = dom_utils_default.scrollableParents(this.props.anchor || element6);
      if (this._a) {
        this._a.map(function(p) {
          return p.addEventListener("scroll", _this3.reposition);
        });
      }
      window.addEventListener("resize", this.reposition);
    };
    PopupWithoutContext2.prototype.detachRepositionHandlers = function() {
      var _this3 = this;
      if (this._a) {
        this._a.map(function(p) {
          return p.removeEventListener("scroll", _this3.reposition);
        });
        this._a = void 0;
      }
      window.removeEventListener("resize", this.reposition);
    };
    PopupWithoutContext2.prototype.reposition = function() {
      this.setState({ current: Status.reposition, previous: this.state.current });
    };
    PopupWithoutContext2.propTypes = {
      anchor: function(props) {
        var anchor = props.anchor;
        if (anchor && typeof anchor.nodeType !== "number") {
          return new Error("Invalid prop `anchor` supplied to `Kendo React Popup`. Validation failed.");
        }
        return null;
      },
      appendTo: function(props) {
        var element6 = props.appendTo;
        if (element6 && typeof element6.nodeType !== "number") {
          return new Error("Invalid prop `appendTo` supplied to `Kendo React Popup`. Validation failed.");
        }
        return null;
      },
      className: PropTypes7.oneOfType([
        PropTypes7.string,
        PropTypes7.arrayOf(PropTypes7.string),
        PropTypes7.object
      ]),
      id: PropTypes7.string,
      popupClass: PropTypes7.oneOfType([
        PropTypes7.string,
        PropTypes7.arrayOf(PropTypes7.string),
        PropTypes7.object
      ]),
      collision: PropTypes7.shape({
        horizontal: PropTypes7.oneOf([
          collision_default.fit,
          collision_default.flip,
          collision_default.none
        ]),
        vertical: PropTypes7.oneOf([
          collision_default.fit,
          collision_default.flip,
          collision_default.none
        ])
      }),
      anchorAlign: PropTypes7.shape({
        horizontal: PropTypes7.oneOf([
          align_point_default.left,
          align_point_default.center,
          align_point_default.right
        ]),
        vertical: PropTypes7.oneOf([
          align_point_default.top,
          align_point_default.center,
          align_point_default.bottom
        ])
      }),
      popupAlign: PropTypes7.shape({
        horizontal: PropTypes7.oneOf([
          align_point_default.left,
          align_point_default.center,
          align_point_default.right
        ]),
        vertical: PropTypes7.oneOf([
          align_point_default.top,
          align_point_default.center,
          align_point_default.bottom
        ])
      }),
      offset: PropTypes7.shape({
        left: PropTypes7.number,
        top: PropTypes7.number
      }),
      children: PropTypes7.oneOfType([
        PropTypes7.element,
        PropTypes7.node
      ]),
      show: PropTypes7.bool,
      animate: PropTypes7.oneOfType([
        PropTypes7.bool,
        PropTypes7.shape({
          openDuration: PropTypes7.number,
          closeDuration: PropTypes7.number
        })
      ]),
      margin: PropTypes7.shape({
        horizontal: PropTypes7.number,
        vertical: PropTypes7.number
      }),
      positionMode: PropTypes7.oneOf([
        "fixed",
        "absolute"
      ]),
      scale: PropTypes7.number,
      style: PropTypes7.object,
      onClose: PropTypes7.func,
      onPosition: PropTypes7.func,
      onOpen: PropTypes7.func
    };
    PopupWithoutContext2.defaultProps = {
      collision: {
        horizontal: collision_default.fit,
        vertical: collision_default.flip
      },
      anchorAlign: {
        horizontal: align_point_default.left,
        vertical: align_point_default.bottom
      },
      popupAlign: {
        horizontal: align_point_default.left,
        vertical: align_point_default.top
      },
      offset: DEFAULT_OFFSET,
      animate: true,
      show: false,
      margin: {
        horizontal: 0,
        vertical: 0
      },
      positionMode: "absolute"
    };
    PopupWithoutContext2.contextType = ZIndexContext;
    PopupWithoutContext2.displayName = "PopupComponent";
    return PopupWithoutContext2;
  }(React31.Component)
);

// node_modules/@progress/kendo-react-popup/dist/es/Popup.js
var React32 = __toESM(require_react());
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var PopupPropsContext = React32.createContext(function(props) {
  return props;
});
var Popup = React32.forwardRef(function(props, ref) {
  var contextPropsCallback = React32.useContext(PopupPropsContext);
  var popupProps = contextPropsCallback.call(void 0, props);
  return React32.createElement(PopupWithoutContext, __assign14({ ref }, popupProps));
});
Popup.displayName = "Popup";

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/utils/popup.js
function getAnchorAlign(isDirectionRightToLeft) {
  var align3 = { horizontal: "left", vertical: "bottom" };
  if (isDirectionRightToLeft) {
    align3.horizontal = "right";
  }
  return align3;
}
function getPopupAlign(isDirectionRightToLeft) {
  var align3 = { horizontal: "left", vertical: "top" };
  if (isDirectionRightToLeft) {
    align3.horizontal = "right";
  }
  return align3;
}

// node_modules/@progress/kendo-svg-icons/dist/index.es.js
var caretTrIcon = {
  name: "caret-tr",
  content: '<path d="M352 160v192L160 160h192z" />',
  viewBox: "0 0 512 512"
};
var caretBrIcon = {
  name: "caret-br",
  content: '<path d="M352 352H160l192-192v192z" />',
  viewBox: "0 0 512 512"
};
var caretBlIcon = {
  name: "caret-bl",
  content: '<path d="M160 352V160l192 192H160z" />',
  viewBox: "0 0 512 512"
};
var caretTlIcon = {
  name: "caret-tl",
  content: '<path d="M160 160h192L160 352V160z" />',
  viewBox: "0 0 512 512"
};
var caretAltUpIcon = {
  name: "caret-alt-up",
  content: '<path d="m256 160 128 192H128l128-192z" />',
  viewBox: "0 0 512 512"
};
var caretAltRightIcon = {
  name: "caret-alt-right",
  content: '<path d="M352 256 160 384V128l192 128z" />',
  viewBox: "0 0 512 512"
};
var caretAltDownIcon = {
  name: "caret-alt-down",
  content: '<path d="M256 352 128 160h256L256 352z" />',
  viewBox: "0 0 512 512"
};
var caretAltLeftIcon = {
  name: "caret-alt-left",
  content: '<path d="m160 256 192-128v256L160 256z" />',
  viewBox: "0 0 512 512"
};
var caretAltToTopIcon = {
  name: "caret-alt-to-top",
  content: '<path d="m128 352 128-192 128 192H128zm256-224H128v32h256v-32z" />',
  viewBox: "0 0 512 512"
};
var caretAltToRightIcon = {
  name: "caret-alt-to-right",
  content: '<path d="m128 128 192 128-192 128V128zm224 256V128h-32v256h32z" />',
  viewBox: "0 0 512 512"
};
var caretAltToBottomIcon = {
  name: "caret-alt-to-bottom",
  content: '<path d="M384 128 256 320 128 128h256zM128 352h256v-32H128v32z" />',
  viewBox: "0 0 512 512"
};
var caretAltToLeftIcon = {
  name: "caret-alt-to-left",
  content: '<path d="M352 384 160 256l192-128v256zM128 128v256h32V128h-32z" />',
  viewBox: "0 0 512 512"
};
var caretDoubleAltUpIcon = {
  name: "caret-double-alt-up",
  content: '<path d="m128 448 128-192 128 192H128zM256 64 128 256h256L256 64z" />',
  viewBox: "0 0 512 512"
};
var caretDoubleAltRightIcon = {
  name: "caret-double-alt-right",
  content: '<path d="m64 128 192 128L64 384V128zm384 128L256 128v256l192-128z" />',
  viewBox: "0 0 512 512"
};
var caretDoubleAltDownIcon = {
  name: "caret-double-alt-down",
  content: '<path d="M384 64 256 256 128 64h256zM256 448l128-192-128 1H128l128 191z" />',
  viewBox: "0 0 512 512"
};
var caretDoubleAltLeftIcon = {
  name: "caret-double-alt-left",
  content: '<path d="M448 384 256 256.001l192-128V384zM64 256.001 256 384V128L64 256.001z" />',
  viewBox: "0 0 512 512"
};
var caretAltExpandIcon = {
  name: "caret-alt-expand",
  content: '<path d="M128 288h256L256 480 128 288zM256 32 128 224h256.001L256 32z" />',
  viewBox: "0 0 512 512"
};
var arrowsNoChangeIcon = {
  name: "arrows-no-change",
  content: '<path d="M256 160 128 352 0 160h256zm96 0L224 352h256.001L352 160z" />',
  viewBox: "0 0 512 512"
};
var arrowOverflowDownIcon = {
  name: "arrow-overflow-down",
  content: '<path d="M384 160 256 352 128 160h256zM128 96v32h256V96H128z" />',
  viewBox: "0 0 512 512"
};
var chevronUpIcon = {
  name: "chevron-up",
  content: '<path d="m129.941 353.941 126.06-126.06 126.061 126.06L416 320 256.001 160 96 320l33.941 33.941z" />',
  viewBox: "0 0 512 512"
};
var chevronRightIcon = {
  name: "chevron-right",
  content: '<path d="m158.059 129.941 126.06 126.06-126.06 126.061L192 416l160-159.999L192 96l-33.941 33.941z" />',
  viewBox: "0 0 512 512"
};
var chevronDownIcon = {
  name: "chevron-down",
  content: '<path d="m382.059 158.059-126.06 126.06-126.061-126.06L96 192l159.999 160L416 192l-33.941-33.941z" />',
  viewBox: "0 0 512 512"
};
var chevronLeftIcon = {
  name: "chevron-left",
  content: '<path d="m353.941 382.059-126.06-126.06 126.06-126.061L320 96 160 255.999 320 416l33.941-33.941z" />',
  viewBox: "0 0 512 512"
};
var arrowUpIcon = {
  name: "arrow-up",
  content: '<path d="M384 288h-96v128h-64l-.001-128H128L255.999 96 384 288z" />',
  viewBox: "0 0 512 512"
};
var arrowRightIcon = {
  name: "arrow-right",
  content: '<path d="M224 384v-96H96v-64h128v-96l192 128-192 128z" />',
  viewBox: "0 0 512 512"
};
var arrowDownIcon = {
  name: "arrow-down",
  content: '<path d="M128 224h96V96h64l.001 128H384L256.001 416 128 224z" />',
  viewBox: "0 0 512 512"
};
var arrowLeftIcon = {
  name: "arrow-left",
  content: '<path d="M288 128v96h128v64l-128 .001V384L96 256.001 288 128z" />',
  viewBox: "0 0 512 512"
};
var levelDownIcon = {
  name: "level-down",
  content: '<path d="M288 192v64h64l-80 128-80-128h64v-64H128v-32h288v32H288z" />',
  viewBox: "0 0 512 512"
};
var levelUpIcon = {
  name: "level-up",
  content: '<path d="m128 288 80-128 80 128h-64v64h192v32H192v-96h-64z" />',
  viewBox: "0 0 512 512"
};
var levelToTopIcon = {
  name: "level-to-top",
  content: '<path d="m128 288 80-128 80 128h-64v64h192v32H192v-96h-64zm288-160H96v32h320v-32z" />',
  viewBox: "0 0 512 512"
};
var colResizeIcon = {
  name: "col-resize",
  content: '<path d="M128 255h64v33h-64v64.6L0 271.9l128-80.7V255zm96 225h64V32h-64v448zm288-207.9-128-80.7V256h-64v33h64v63.9l128-80.8z" />',
  viewBox: "0 0 512 512"
};
var arrowsAxesIcon = {
  name: "arrows-axes",
  content: '<path d="M352 480v-64H128v64H96v-64H32v-32h64V160H32l80-128 80 128h-64v224h224v-64l128 80-128 80z" />',
  viewBox: "0 0 512 512"
};
var arrowsSwapIcon = {
  name: "arrows-swap",
  content: '<path d="M256 160h-64v224h-32V160H96l80-128 80 128zm96 192V128h-32v224h-64l80 128 80-128h-64z" />',
  viewBox: "0 0 512 512"
};
var dragAndDropIcon = {
  name: "drag-and-drop",
  content: '<path d="m32 128 192 112L32 352V128zm224 96v32h224v-32H256z" />',
  viewBox: "0 0 512 512"
};
var categorizeIcon = {
  name: "categorize",
  content: '<path d="M32 32v192l160-96L32 32zm0 448V288l160 96-160 96zM192 64h288v32H192V64zm0 96h288v32H192v-32zm0 160h288v32H192v-32zm0 96h288v32H192v-32z" />',
  viewBox: "0 0 512 512"
};
var gridIcon = {
  name: "grid",
  content: '<path d="M32 32h128v128H32V32zm160 448h128V352H192v128zm-160 0h128V352H32v128zm0-160h128V192H32v128zm160 0h128V192H192v128zM352 32v128h128V32H352zm0 288h128V192H352v128zM192 160h128V32H192v128zm160 320h128V352H352v128z" />',
  viewBox: "0 0 512 512"
};
var gridLayoutIcon = {
  name: "grid-layout",
  content: '<path d="M32 32h96v96H32V32zm128 0v96h320V32H160zM32 288h96v-96H32v96zm128 0h320v-96H160v96zM32 448h96v-96H32v96zm128 0h320v-96H160v96z" />',
  viewBox: "0 0 512 512"
};
var groupIcon = {
  name: "group",
  content: '<path d="M32 256h192v192H32V256zm0-32h192V32H32v192zm224 224h192V256H256v192zm0-416v192h192V32H256z" />',
  viewBox: "0 0 512 512"
};
var ungroupIcon = {
  name: "ungroup",
  content: '<path d="M32 256h192v192H32V256zm32-64h128V64H64v128zm224 224h128V288H288v128zM256 32v192h192V32H256z" />',
  viewBox: "0 0 512 512"
};
var handleDragIcon = {
  name: "handle-drag",
  content: '<path d="M160 64h64v384h-64V64zm96 0v384h64V64h-64z" />',
  viewBox: "0 0 512 512"
};
var layoutIcon = {
  name: "layout",
  content: '<path d="M192 416h256v64H192v-64zm0-32h256v-64H192v64zM32 480h128V128H32v352zm160-288h256v-64H192v64zm0 96h256v-64H192v64zM32 0v96h416V0H32z" />',
  viewBox: "0 0 512 512"
};
var layout1By4Icon = {
  name: "layout-1-by-4",
  content: '<path d="M32 0h192v480H32V0zm224 0v96h192V0H256zm0 224h192v-96H256v96zm0 128h192v-96H256v96zm0 128h192v-96H256v96z" />',
  viewBox: "0 0 512 512"
};
var layout2By2Icon = {
  name: "layout-2-by-2",
  content: '<path d="M32 224h192V0H32v224zm224 0h192V0H256v224zM32 480h192V256H32v224zm224 0h192V256H256v224z" />',
  viewBox: "0 0 512 512"
};
var layoutSideBySideIcon = {
  name: "layout-side-by-side",
  content: '<path d="M32 384h416v96H32v-96zm0-32h416v-96H32v96zm0-128h416v-96H32v96zM32 0v96h416V0H32z" />',
  viewBox: "0 0 512 512"
};
var layoutStackedIcon = {
  name: "layout-stacked",
  content: '<path d="M32 256h192v96H32v-96zm0 224h192v-96H32v96zm224-128h192v-96H256v96zM32 0v224h416V0H32zm224 480h192v-96H256v96z" />',
  viewBox: "0 0 512 512"
};
var columnsIcon = {
  name: "columns",
  content: '<path d="M64 32h96v448H64V32zm128 448h96V32h-96v448zM320 32v448h96V32h-96z" />',
  viewBox: "0 0 512 512"
};
var rowsIcon = {
  name: "rows",
  content: '<path d="M480 64v96H32V64h448zM32 192v96h448v-96H32zm448 128H32v96h448v-96z" />',
  viewBox: "0 0 512 512"
};
var reorderIcon = {
  name: "reorder",
  content: '<path d="M480 128v64H32v-64h448zM32 224v64h448v-64H32zm448 96H32v64h448v-64z" />',
  viewBox: "0 0 512 512"
};
var menuIcon = {
  name: "menu",
  content: '<path d="M480 32v96H32V32h448zM32 192v96h448v-96H32zm448 160H32v96h448v-96z" />',
  viewBox: "0 0 512 512"
};
var moreVerticalIcon = {
  name: "more-vertical",
  content: '<path d="M240 128c26.4 0 48-21.6 48-48s-21.6-48-48-48-48 21.6-48 48 21.6 48 48 48zm0 64c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48zm0 160c-26.4 0-48 21.6-48 48s21.6 48 48 48 48-21.6 48-48-21.6-48-48-48z" />',
  viewBox: "0 0 512 512"
};
var moreHorizontalIcon = {
  name: "more-horizontal",
  content: '<path d="M128 240c0-26.4-21.6-48-48-48s-48 21.6-48 48 21.6 48 48 48 48-21.6 48-48zm64 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48zm160 0c0 26.4 21.6 48 48 48s48-21.6 48-48-21.6-48-48-48-48 21.6-48 48z" />',
  viewBox: "0 0 512 512"
};
var overlapIcon = {
  name: "overlap",
  content: '<path d="M320 320V64H64v256h256zM192 448h256V192h-96v160H192v96z" />',
  viewBox: "0 0 512 512"
};
var homeIcon = {
  name: "home",
  content: '<path d="M480 256c0 17.7-14.3 32-32 32-9.1 0-17.4-3.8-23.2-10l-8.8-8.7V416c0 17.7-14.3 32-32 32h-64c-17.7 0-32-14.3-32-32v-96h-64v96c0 17.7-14.3 32-32 32h-64c-17.7 0-32-14.3-32-32V268.6l-8.3 8.9C81.8 284 73.4 288 64 288c-17.7 0-32-14.3-32-32 0-8.5 3.3-16.1 8.6-21.9l.2-.2 1-1 191-191.3 1-1c5.8-5.5 13.6-8.9 22.2-8.9 9.1 0 17.3 3.8 23.1 9.9L470.3 233l.7.7.3.3c5.4 5.8 8.7 13.5 8.7 22z" />',
  viewBox: "0 0 512 512"
};
var arrowsLeftRightIcon = {
  name: "arrows-left-right",
  content: '<path d="m512 240-128-80v64H128v-64L0 240l128 80v-64h256v64z" />',
  viewBox: "0 0 512 512"
};
var arrowsTopBottomIcon = {
  name: "arrows-top-bottom",
  content: '<path d="m240 512 80-128h-64V128h64L240 0l-80 128h64v256h-64z" />',
  viewBox: "0 0 512 512"
};
var borderRadiusBottomLeftIcon = {
  name: "border-radius-bottom-left",
  content: '<path d="M384 368c0 8.8-7.2 16-16 16h-64c-97 0-176-79-176-176v-64c0-8.8 7.2-16 16-16s16 7.2 16 16v64c0 79.4 64.6 144 144 144h64c8.8 0 16 7.2 16 16z" />',
  viewBox: "0 0 512 512"
};
var borderRadiusBottomRightIcon = {
  name: "border-radius-bottom-right",
  content: '<path d="M368 128c8.8 0 16 7.2 16 16v64c0 97-79 176-176 176h-64c-8.8 0-16-7.2-16-16s7.2-16 16-16h64c79.4 0 144-64.6 144-144v-64c0-8.8 7.2-16 16-16z" />',
  viewBox: "0 0 512 512"
};
var borderRadiusTopLeftIcon = {
  name: "border-radius-top-left",
  content: '<path d="M144 384c-8.8 0-16-7.2-16-16v-64c0-97 79-176 176-176h64c8.8 0 16 7.2 16 16s-7.2 16-16 16h-64c-79.4 0-144 64.6-144 144v64c0 8.8-7.2 16-16 16z" />',
  viewBox: "0 0 512 512"
};
var borderRadiusTopRightIcon = {
  name: "border-radius-top-right",
  content: '<path d="M128 144c0-8.8 7.2-16 16-16h64c97 0 176 79 176 176v64c0 8.8-7.2 16-16 16s-16-7.2-16-16v-64c0-79.4-64.6-144-144-144h-64c-8.8 0-16-7.2-16-16z" />',
  viewBox: "0 0 512 512"
};
var borderRadiusIcon = {
  name: "border-radius",
  content: '<path d="M64 32h96v32H64v96H32V32h32zm384 416h-96v32h128V352h-32v96zM352 32v32h96v96h32V32H352zM64 352H32v128h128v-32H64v-96z" />',
  viewBox: "0 0 512 512"
};
var borderStyleBottomIcon = {
  name: "border-style-bottom",
  content: '<path d="M96 480v-64h320v64H96zm1-416h320V32H97v32zM64 416V96H32v320h32zm416 0V96h-32v320h32z" />',
  viewBox: "0 0 512 512"
};
var borderStyleLeftIcon = {
  name: "border-style-left",
  content: '<path d="M32 96h64v320H32V96zm416 1v320h32V97h-32zM96 64h320V32H96v32zm0 416h320v-32H96v32z" />',
  viewBox: "0 0 512 512"
};
var borderStyleRightIcon = {
  name: "border-style-right",
  content: '<path d="M480 416h-64V96h64v320zm-416-1V95H32v320h32zm352 33H96v32h320v-32zm0-416H96v32h320V32z" />',
  viewBox: "0 0 512 512"
};
var borderStyleTopIcon = {
  name: "border-style-top",
  content: '<path d="M416 32v64H96V32h320zm-1 416H95v32h320v-32zm33-352v320h32V96h-32zM32 96v320h32V96H32z" />',
  viewBox: "0 0 512 512"
};
var borderStyleIcon = {
  name: "border-style",
  content: '<path d="M32 96h32v320H32zm416 1h32v320h-32zM96 32h320v32H96zm0 416h320v32H96z" />',
  viewBox: "0 0 512 512"
};
var boxSizingIcon = {
  name: "box-sizing",
  content: '<path d="M32 0H0v480h480V0H32zm416 448H32V32h416v416zm-96-320h-32V96h32v32zM96 192H64v-32h32v32zm0-64H64V96h32v32zm64 0h-32V96h32v32zm64 0h-32V96h32v32zm64 0h-32V96h32v32zM96 256H64v-32h32v32zm320-128h-32V96h32v32zm0 128h-32v-32h32v32zm0-64h-32v-32h32v32zM96 384H64v-32h32v32zm256 0h-32v-32h32v32zm-192 0h-32v-32h32v32zm64 0h-32v-32h32v32zm64 0h-32v-32h32v32zm128 0h-32v-32h32v32zM96 320H64v-32h32v32zm320 0h-32v-32h32v32z" />',
  viewBox: "0 0 512 512"
};
var chevronDoubleDownIcon = {
  name: "chevron-double-down",
  content: '<path d="M382.1 224 256 350.1 129.9 224 96 257.9l160 160 160-160-33.9-33.9zm0-128L256 222.1 129.9 96 96 129.9l160 160 160-160L382.1 96z" />',
  viewBox: "0 0 512 512"
};
var chevronDoubleLeftIcon = {
  name: "chevron-double-left",
  content: '<path d="M289 383 162.9 257 289 130.9 255 97 95 257l160 160 34-34zm128 0L290.9 257 417 130.9 383 97 223 257l160 160 34-34z" />',
  viewBox: "0 0 512 512"
};
var chevronDoubleRightIcon = {
  name: "chevron-double-right",
  content: '<path d="M223 130.9 349.1 257 223 383l34 34 160-160L257 97l-34 33.9zm-128 0L221.1 257 95 383l34 34 160-160L129 97l-34 33.9z" />',
  viewBox: "0 0 512 512"
};
var chevronDoubleUpIcon = {
  name: "chevron-double-up",
  content: '<path d="m129.9 289.9 126.1-126L382.1 290l33.9-34L256 96 96 256l33.9 33.9zm0 128 126.1-126L382.1 418l33.9-34-160-160L96 384l33.9 33.9z" />',
  viewBox: "0 0 512 512"
};
var dataOdsIcon = {
  name: "data-ods",
  content: '<path d="M415.94 93.61v.33c-.53 33.88-86.26 61.29-191.93 61.29S32.6 127.82 32.07 93.94v-.33C32.06 59.59 118 32 224 32s191.94 27.59 191.94 61.61Zm-.06 46.39v.32c-.53 33.88-86.26 61.29-191.93 61.29S32.54 174.2 32 140.32V140l.12 86.81v.32c.53 33.88 86.26 61.29 191.93 61.29S415.46 261 416 227.13v-.32Zm.12 180-.07-52v.32c-.34 21.73-35.73 40.8-88.93 51.68Zm-256 6.11C85.73 317.69 32.43 295 32 268.32V268l.12 86.81v.32C32.55 381.8 85.8 404.47 160 412.9Zm73.5 123.55q-22.26 0-36.28-14.49t-14-37.76q0-24.57 14.24-39.74t37.72-15.18q22.18 0 35.88 14.53t13.69 38.3q0 24.42-14.2 39.38t-37.05 14.96Zm1-87.08q-12.28 0-19.51 9.22t-7.23 24.39q0 15.39 7.23 24.35a23.15 23.15 0 0 0 18.93 9q12.07 0 19.15-8.71t7.08-24.17q0-16.11-6.86-25.08t-18.78-9Zm68.9 85.28V344.23h36.71q55.22 0 55.21 50.51 0 24.21-15.06 38.66t-40.15 14.46Zm23.34-84.63v65.69h11.57q15.17 0 23.81-9.1t8.64-24.82q0-14.82-8.56-23.31t-24-8.49Zm82.49 80.65v-23.12a44.75 44.75 0 0 0 13.66 7.91 43.91 43.91 0 0 0 14.89 2.64 33.06 33.06 0 0 0 7.7-.8 18 18 0 0 0 5.49-2.2 9.67 9.67 0 0 0 3.29-3.33 8.29 8.29 0 0 0 1.08-4.15 9 9 0 0 0-1.73-5.42 18.77 18.77 0 0 0-4.74-4.41 49 49 0 0 0-7.12-3.9q-4.11-1.87-8.89-3.83-12.14-5.06-18.1-12.36a27 27 0 0 1-6-17.63 28.05 28.05 0 0 1 3.25-13.91 27.71 27.71 0 0 1 8.85-9.58 39.85 39.85 0 0 1 13-5.53 66.6 66.6 0 0 1 15.61-1.77 93.91 93.91 0 0 1 14.34 1 56.36 56.36 0 0 1 11.53 3v21.6a35.76 35.76 0 0 0-5.68-3.18 44.84 44.84 0 0 0-6.32-2.27 48.64 48.64 0 0 0-6.47-1.34 45.54 45.54 0 0 0-6.1-.43 31.65 31.65 0 0 0-7.23.76 18.18 18.18 0 0 0-5.49 2.13 10.47 10.47 0 0 0-3.47 3.29 7.77 7.77 0 0 0-1.23 4.3 8.27 8.27 0 0 0 1.37 4.66 15.88 15.88 0 0 0 3.91 3.9 40.85 40.85 0 0 0 6.14 3.61q3.61 1.77 8.16 3.65a91.56 91.56 0 0 1 11.17 5.53 39.85 39.85 0 0 1 8.49 6.61 25.82 25.82 0 0 1 5.42 8.42 29.82 29.82 0 0 1 1.88 11q0 8.67-3.29 14.56a26.68 26.68 0 0 1-8.92 9.54 38.57 38.57 0 0 1-13.12 5.24 75.82 75.82 0 0 1-15.79 1.59 88.11 88.11 0 0 1-16.22-1.44 49.18 49.18 0 0 1-13.31-4.34Z" />',
  viewBox: "0 0 512 512"
};
var nonRecurrenceIcon = {
  name: "non-recurrence",
  content: '<path d="m321 434.2 47.5 47.5C335.5 501 297 512 256 512 132.3 512 32 411.7 32 288c0-41 11-79.5 30.3-112.6l47.5 47.5c-8.9 19.9-13.8 41.9-13.8 65 0 88.2 71.8 160 160 160 23.1.1 45.2-4.8 65-13.7Zm118.3-17.5c12.9-18.3 23.1-38.7 30.1-60.4 6.9-21.5 10.6-44.5 10.6-68.3 0-40.8-10.9-79.1-30-112l-55.5 32c13.6 23.5 21.5 50.9 21.5 80 0 4.8-.2 9.5-.6 14.2-2.2 24.8-10.1 47.9-22.3 68.2L173.6 150.9c20.3-12.2 43.4-20.1 68.2-22.3 4.7-.4 9.4-.6 14.2-.6v64l160-96L256 0v64c-23.8 0-46.7 3.7-68.3 10.6-21.8 7-42.1 17.2-60.4 30.1L22.6 0 0 22.6 489.4 512l22.6-22.6-72.7-72.7Z" />',
  viewBox: "0 0 512 512"
};
var displayBlockIcon = {
  name: "display-block",
  content: '<path d="M32 32h448v32H32zm0 416h448v32H32zm0-64h448V128H32v256zm64-192h320v128H96V192z" />',
  viewBox: "0 0 512 512"
};
var displayFlexIcon = {
  name: "display-flex",
  content: '<path d="M32 32v448h448V32H32zm416 416H64V64h384v384zM128 128h96v256h-96zm160 0h96v256h-96z" />',
  viewBox: "0 0 512 512"
};
var displayInlineFlexIcon = {
  name: "display-inline-flex",
  content: '<path d="M96 416h320V96H96v320zm32-288h256v256H128V128zm32 32h64v192h-64zm128 0h64v192h-64zM32 32h32v448H32zm416 0h32v448h-32z" />',
  viewBox: "0 0 512 512"
};
var dropletSliderIcon = {
  name: "droplet-slider",
  content: '<path d="M192 384v32c-53 0-96-43-96-96h32c0 35.3 28.7 64 64 64zm160-72c0 92.8-71.6 168-160 168S32 404.8 32 312C32 181.3 192 32 192 32s160 149.3 160 280zm-32 0c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-47.8 64.3-73 122.8-73 169 0 75 57.4 136 128 136s128-61 128-136zm128-88h-32v256h32V224zm0-192h-32v64h32V32zm-64 96v64h96v-64h-96z" />',
  viewBox: "0 0 512 512"
};
var fileReportIcon = {
  name: "file-report",
  content: '<path d="M416 32H96a32 32 0 0 0-32 32v384a32 32 0 0 0 32 32h320a32 32 0 0 0 32-32V64a32 32 0 0 0-32-32Zm0 416H96V64h320Zm-96-96-160 .14V384l160-.14Zm32-64-192 .17V320l192-.17ZM223.15 127.9a64 64 0 1 0 64 64h-64Zm32-32v64h64a64 64 0 0 0-63.99-64Z" />',
  viewBox: "0 0 512 512"
};
var gapColumnIcon = {
  name: "gap-column",
  content: '<path d="M32 32v448h448V32H32zm416 416H64V64h384v384zM96 96h96v320H96zm224 0h96v320h-96z" />',
  viewBox: "0 0 512 512"
};
var gapRowIcon = {
  name: "gap-row",
  content: '<path d="M480 32H32v448h448V32zM64 448V64h384v384H64zM96 96h320v96H96zm0 224h320v96H96z" />',
  viewBox: "0 0 512 512"
};
var handleResizeAltIcon = {
  name: "handle-resize-alt",
  content: '<path d="M480 224v256H224v-64h192V224h64z" />',
  viewBox: "0 0 512 512"
};
var handleResizeIcon = {
  name: "handle-resize",
  content: '<path d="m379.5 475.5-22.6-22.6 96-96 22.6 22.6-96 96zm79.7-208.2-22.6-22.6-191.9 191.9 22.6 22.6 191.9-191.9z" />',
  viewBox: "0 0 512 512"
};
var imagesIcon = {
  name: "images",
  content: '<path d="M256 288c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm96-64v192c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32zm-31.8 0c-.1-.1-.1-.1 0 0l-256.1-.1-.1.1v149.9l74.6-70 85.3 80 53.3-50 42.7 40 .3-149.9zm63.8-96H128c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32zm64-64H192c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32z" />',
  viewBox: "0 0 512 512"
};
var letterSpaceIcon = {
  name: "letter-space",
  content: '<path d="m310 336 26 80h48L280 96h-48L128 416h48l26-80h108zm-54-166.2L294.4 288h-76.8L256 169.8zM448 32h32v448h-32zM32 32h32v448H32z" />',
  viewBox: "0 0 512 512"
};
var lineHeightIcon = {
  name: "line-height",
  content: '<path d="m310 336 26 80h48L280 96h-48L128 416h48l26-80h108zm-54-166.2L294.4 288h-76.8L256 169.8zM32 32h448v32H32zm0 416h448v32H32z" />',
  viewBox: "0 0 512 512"
};
var listLatinBigIcon = {
  name: "list-latin-big",
  content: '<path d="M115.1 136H72.6l-7.4 24H32.1L79.3 31.5h29.1L155.9 160h-33.3l-7.5-24zm-35-23.9h27.6L93.8 67.5l-13.7 44.6zM42.1 320V191.5h46.2c16.5 0 29.1 3 37.7 9.1 8.6 6.1 12.9 14.9 12.9 26.4 0 6.6-1.5 12.3-4.6 17-3.1 4.7-7.6 8.2-13.5 10.4 6.7 1.8 11.9 5.1 15.4 9.9 3.6 4.8 5.4 10.7 5.4 17.7 0 12.6-4 22.1-12 28.4-8 6.3-19.8 9.5-35.4 9.7H42.1zm31-74.9h16.2c6.8-.1 11.6-1.3 14.5-3.7 2.9-2.4 4.3-6 4.3-10.7 0-5.4-1.6-9.3-4.7-11.7-3.1-2.4-8.2-3.6-15.1-3.6H73.1v29.7zm0 20.3v30.8h20.3c5.6 0 9.9-1.3 12.9-3.8 3-2.6 4.5-6.2 4.5-10.8 0-10.7-5.3-16.1-16-16.2H73.1zm73 171.1c-.4 8.9-2.8 16.8-7.2 23.7-4.4 6.9-10.6 12.2-18.6 15.9-8 3.8-17.1 5.6-27.3 5.6-16.9 0-30.2-5.5-39.9-16.5s-14.6-26.5-14.6-46.6v-6.4c0-12.6 2.2-23.6 6.6-33.1 4.4-9.4 10.7-16.7 18.9-21.9 8.2-5.1 17.8-7.7 28.6-7.7 15.6 0 28.1 4.1 37.6 12.3 9.5 8.2 14.9 19.5 16.2 33.9h-30.9c-.2-7.8-2.2-13.4-5.9-16.9-3.7-3.4-9.4-5.1-16.9-5.1-7.7 0-13.4 2.9-16.9 8.6-3.6 5.8-5.5 15-5.6 27.6v9.1c0 13.7 1.7 23.5 5.2 29.4 3.4 5.9 9.4 8.8 17.8 8.8 7.1 0 12.6-1.7 16.3-5 3.8-3.4 5.8-8.7 6-16h30.6zM192 96h288v32H192V96zm0 160h288v32H192v-32zm0 160h288v32H192v-32z" />',
  viewBox: "0 0 512 512"
};
var listLatinSmallIcon = {
  name: "list-latin-small",
  content: '<path d="M94.5 152c-1.1-1.9-2-4.8-2.8-8.6-5.5 6.9-13.1 10.3-22.9 10.3-9 0-16.7-2.7-22.9-8.2-6.3-5.4-9.4-12.3-9.4-20.5 0-10.4 3.8-18.2 11.5-23.5 7.6-5.3 18.8-7.9 33.4-7.9h9.2v-5.1c0-8.8-3.8-13.2-11.4-13.2-7.1 0-10.6 3.5-10.6 10.5H38.7c0-9.2 3.9-16.7 11.8-22.5s17.9-8.6 30.1-8.6 21.8 3 28.9 8.9c7.1 5.9 10.7 14.1 10.9 24.4v42.3c.1 8.8 1.5 15.5 4.1 20.1v1.5l-30 .1zm-18.6-19.4c3.7 0 6.8-.8 9.2-2.4 2.4-1.6 4.2-3.4 5.3-5.4v-15.3h-8.6c-10.4 0-15.5 4.6-15.5 13.9 0 2.7.9 4.9 2.7 6.6 1.8 1.7 4.1 2.6 6.9 2.6zM129.4 280c0 15.7-3.2 27.7-9.7 36.1s-15.6 12.6-27.4 12.6c-9.7 0-17.5-3.9-23.5-11.6l-1.2 9.8H41V191.4h29.7v47.7c5.5-6.3 12.7-9.4 21.4-9.4 11.9 0 21.1 4.3 27.5 12.8 6.5 8.5 9.7 20.5 9.7 36l.1 1.5zm-29.8-1.9c0-9.2-1.2-15.7-3.7-19.6-2.4-3.9-6.2-5.9-11.3-5.9-6.7 0-11.4 2.6-13.9 7.7v37.9c2.5 5.1 7.2 7.6 14.1 7.6 7 0 11.4-3.4 13.3-10.2 1-3.4 1.5-9.2 1.5-17.5zM81.1 452.8c4.2 0 7.4-1.1 9.7-3.4s3.4-5.4 3.4-9.5h27.9c0 10.5-3.8 19.1-11.3 25.8-7.5 6.7-17.2 10.1-29 10.1-13.9 0-24.8-4.4-32.8-13.1s-12-20.8-12-36.2v-1.2c0-9.6 1.8-18.2 5.3-25.6 3.6-7.4 8.7-13.1 15.4-17 6.7-4 14.7-6 23.8-6 12.4 0 22.3 3.4 29.6 10.3 7.3 6.9 10.9 16.2 10.9 28H94.2c0-4.9-1.2-8.7-3.6-11.4-2.4-2.6-5.6-4-9.7-4-7.7 0-12.2 4.9-13.5 14.7-.4 3.1-.6 7.4-.6 12.9 0 9.6 1.1 16.2 3.4 19.9s5.9 5.7 10.9 5.7zM192 96h288v32H192V96zm0 160h288v32H192v-32zm0 160h288v32H192v-32z" />',
  viewBox: "0 0 512 512"
};
var listRomanBigIcon = {
  name: "list-roman-big",
  content: '<path d="M32 32h32v128H32V32zm0 288h32V192H32v128zm64 0h32V192H96v128zM32 480h32V352H32v128zm64 0h32V352H96v128zm64 0h32V352h-32v128zM128 96h352v32H128V96zm64 160h288v32H192v-32zm64 160h224v32H256v-32zM96 152c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8z" />',
  viewBox: "0 0 512 512"
};
var listRomanSmallIcon = {
  name: "list-roman-small",
  content: '<path d="M32 64h16v96H32V64zm0 256h16v-96H32v96zm32 0h16v-96H64v96zM32 480h16v-96H32v96zm32 0h16v-96H64v96zm32 0h16v-96H96v96zM48 40c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM48 200c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM48 360c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM128 96h352v32H128V96zm32 160h320v32H160v-32zm32 160h288v32H192v-32z" />',
  viewBox: "0 0 512 512"
};
var listUnorderedOutlineIcon = {
  name: "list-unordered-outline",
  content: '<path d="M192 80h288v32H192V80zm0 160h288v32H192v-32zm0 160h288v32H192v-32zM80 80c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 192c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 192c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16m0-32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z" />',
  viewBox: "0 0 512 512"
};
var listUnorderedSquareIcon = {
  name: "list-unordered-square",
  content: '<path d="M128 160H32V64h96v96zm0 64H32v96h96v-96zm0 160H32v96h96v-96zm64-256h288V96H192v32zm0 160h288v-32H192v32zm0 160h288v-32H192v32z" />',
  viewBox: "0 0 512 512"
};
var maxHeightIcon = {
  name: "max-height",
  content: '<path d="M384 0H96v32h288zm0 479H240.6L320 352h-64V160h64L240 32l-80 128h64v192h-64l79.4 127H96v32h288z" />',
  viewBox: "0 0 512 512"
};
var maxWidthIcon = {
  name: "max-width",
  content: '<path d="M0 96v288h32V96zm479 0v143.4L352 160v64H160v-64L32 240l128 80v-64h192v64l127-79.4V384h32V96z" />',
  viewBox: "0 0 512 512"
};
var minHeightIcon = {
  name: "min-height",
  content: '<path d="M240 192H96v32h288v-32zm144 96H96v32h288zM160 448h160l-80-128zm64 0h32v64h-32zm32-384V0h-32v64h-64l80 128 80-128z" />',
  viewBox: "0 0 512 512"
};
var minWidthIcon = {
  name: "min-width",
  content: '<path d="M192 240v144h32V96h-32zm96-144v288h32V96zm160 224V160l-128 80zm0-96h64v32h-64zm-384 0H0v32h64v64l128-80-128-80z" />',
  viewBox: "0 0 512 512"
};
var outlineOffsetIcon = {
  name: "outline-offset",
  content: '<path d="M448 32H32v448h448V32h-32zm0 416H64V64h384v384zM160 320v32h192V160H160v160zm32-128h128v128H192V192z" />',
  viewBox: "0 0 512 512"
};
var outlineWidthIcon = {
  name: "outline-width",
  content: '<path d="M416 32H32v448h448V32h-64zm0 384H96V96h320v320zm-256-32h224V128H128v256h32zm0-224h192v192H160V160z" />',
  viewBox: "0 0 512 512"
};
var paddingBottomIcon = {
  name: "padding-bottom",
  content: '<path d="M288.2 352H256v64h64v64H160v-64h64v-64h-32v-64h96.2v64zM160 32h64v96h-32.2v32H288v-32h-32V32h64V0H160v32zm192 192v-32.2h-32V288h32v-32h96v64h32V160h-32v64h-96zm-224 32v32.2h32V192h-32v32H32v-64H0v160h32v-64h96z" />',
  viewBox: "0 0 512 512"
};
var paddingLeftIcon = {
  name: "padding-left",
  content: '<path d="M128 288.2V256H64v64H0V160h64v64h64v-32h64v96.2h-64zM448 160v64h-96v-32.2h-32V288h32v-32h96v64h32V160h-32zM256 352h32.2v-32H192v32h32v96h-64v32h160v-32h-64v-96zm-32-224h-32.2v32H288v-32h-32V32h64V0H160v32h64v96z" />',
  viewBox: "0 0 512 512"
};
var paddingRightIcon = {
  name: "padding-right",
  content: '<path d="M352 191.8V224h64v-64h64v160h-64v-64h-64v32h-64v-96.2h64zM32 320v-64h96v32.2h32V192h-32v32H32v-64H0v160h32zm192-192h-32.2v32H288v-32h-32V32h64V0H160v32h64v96zm32 224h32.2v-32H192v32h32v96h-64v32h160v-32h-64v-96z" />',
  viewBox: "0 0 512 512"
};
var paddingTopIcon = {
  name: "padding-top",
  content: '<path d="M191.8 128H224V64h-64V0h160v64h-64v64h32v64h-96.2v-64zM320 448h-64v-96h32.2v-32H192v32h32v96h-64v32h160v-32zM128 256v32.2h32V192h-32v32H32v-64H0v160h32v-64h96zm224-32v-32.2h-32V288h32v-32h96v64h32V160h-32v64h-96z" />',
  viewBox: "0 0 512 512"
};
var paddingIcon = {
  name: "padding",
  content: '<path d="M128 288.2V256H32v64H0V160h32v64h96v-32h32v96.2h-32zM448 160v64h-96v-32.2h-32V288h32v-32h96v64h32V160h-32zM256 352h32.2v-32H192v32h32v96h-64v32h160v-32h-64v-96zm-32-224h-32.2v32H288v-32h-32V32h64V0H160v32h64v96z" />',
  viewBox: "0 0 512 512"
};
var positionBottomIcon = {
  name: "position-bottom",
  content: '<path d="M32 64v416h448V32H32v32zm416 0v384H64V64h384zM96 320h320v96H96z" />',
  viewBox: "0 0 512 512"
};
var positionLeftIcon = {
  name: "position-left",
  content: '<path d="M448 32H32v448h448V32h-32zm0 416H64V64h384v384zM96 96h96v320H96z" />',
  viewBox: "0 0 512 512"
};
var positionRightIcon = {
  name: "position-right",
  content: '<path d="M64 480h416V32H32v448h32zm0-416h384v384H64V64zm256 32h96v320h-96z" />',
  viewBox: "0 0 512 512"
};
var positionTopIcon = {
  name: "position-top",
  content: '<path d="M480 448V32H32v448h448v-32zm-416 0V64h384v384H64zM96 96h320v96H96z" />',
  viewBox: "0 0 512 512"
};
var regularExpressionIcon = {
  name: "regular-expression",
  content: '<path d="M442.6 299.7 352 247.4V352h-64V247.4l-90.6 52.3-32-55.4L256 192l-90.6-52.3 32-55.4 90.6 52.3V32h64v104.6l90.6-52.3 32 55.4L384 192l90.6 52.3-32 55.4zM80 384c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z" />',
  viewBox: "0 0 512 512"
};
var replaceAllIcon = {
  name: "replace-all",
  content: '<path d="M288 288h192v192H288V288zm64-64H224V32h128v192zM320 64h-64v128h64V64zM160 352H96V160h96V96H96c-35.3 0-64 28.7-64 64v192c0 35.3 28.7 64 64 64h64v64l96-96-96-96v64zM448 32v192h32V32h-32zm-32 0h-32v192h32V32z" />',
  viewBox: "0 0 512 512"
};
var replaceSingleIcon = {
  name: "replace-single",
  content: '<path d="M288 288h192v192H288V288zM32 160v192c0 35.3 28.7 64 64 64h64v64l96-96-96-96v64H96V160h160V96H96c-35.3 0-64 28.7-64 64zM480 32v192H288V32h192zm-32 32H320v128h128V64z" />',
  viewBox: "0 0 512 512"
};
var reportElementIcon = {
  name: "report-element",
  content: '<path d="M480 320V192H160v48H96v-80h256V32H32v128h32v320h32v-48h64v48h256V352H160v48H96V272h64v48ZM64 64h256v64H64Zm128 320h192v64H192v-64Z" />',
  viewBox: "0 0 512 512"
};
var rightDoubleQuotesIcon = {
  name: "right-double-quotes",
  content: '<path d="M136 100.2c-57.4 0-104 46.6-104 104s46.6 104 104 104c20.1 0 38.9-5.7 54.8-15.6-14.2 30.5-37.4 55.2-69.2 73.7-44 25.6-89.1 29.6-89.6 29.6l1.3 15.9 1.3 15.9c2.1-.2 51.8-4.4 102-33.2 47.1-27 103.3-81.3 103.3-186.1.1-1.4.1-2.8.1-4.3 0-57.3-46.6-103.9-104-103.9zm344 104c0-57.4-46.6-104-104-104s-104 46.6-104 104 46.6 104 104 104c20.1 0 38.9-5.7 54.8-15.6-14.2 30.5-37.4 55.2-69.2 73.7-44 25.6-89.1 29.6-89.6 29.6l2.6 31.9c2.1-.2 51.8-4.4 102-33.2 47.1-27 103.3-81.3 103.3-186.1.1-1.4.1-2.8.1-4.3z" />',
  viewBox: "0 0 512 512"
};
var wholeWordIcon = {
  name: "whole-word",
  content: '<path d="M379 243.6c-2.7-9.3-6.5-17.2-11.7-23.8-5-6.4-11.4-11.4-18.6-15-7.4-3.5-15.9-5.2-25.3-5.2-16.3 0-30 6.9-41.4 20.5V160h-26v192h26v-14.8c10.8 9.8 24.1 14.8 39.7 14.8 8.7 0 16.9-1.8 24.3-5.4 7.5-3.8 14-8.9 19.5-15.5 5.5-6.8 9.7-14.9 12.9-24.4 3-9.6 4.6-20.3 4.6-32.1 0-11.5-1.3-21.8-4-31zm-31.8 73.7c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.3-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.1 9.2 9.3 22.9 9.3 41 0 18.9-3.3 33.3-9.7 42.7zm-139-107.8c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 44.6h26.1c.7-16.2 12.8-24.4 36-24.4 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.4 6.2 5.1 1.5 1.8 2.5 4 3.2 6.6s1.1 5.6 1.4 9.4c.1 3.6.1 8.3.1 13.5h-12.8c-59.3.1-89.1 17.3-89.1 51.5 0 6.4 1.3 12 3.8 17.2 2.4 5.3 5.9 9.6 10.4 13.4 4.4 3.8 9.8 6.7 16 8.7 6.1 2.2 12.7 3.2 20 3.2 20.9 0 51.8-18.6 51.8-18.6V351h26v-97.5c0-22-5.4-36.6-15.8-44zm-10.2 100c-2.3 3.4-5.1 6.3-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8-3.9 1.8-8 3.3-12.2 4.3s-8.6 1.4-12.8 1.4c-9.6 0-17-2-22.5-5.9-5.5-4.1-8.3-9.8-8.3-17.2 0-20.6 18.9-30.9 56.9-30.9h18v32.5zM448 96h-32v320h32V96zm0-32H64V32h384v32zm0 415.6H64v-32h384v32z" />',
  viewBox: "0 0 512 512"
};
var dataSdsIcon = {
  name: "data-sds",
  content: '<path d="M224 152.54c105.6 0 191.4-27.4 191.9-61.3v-.3c0-34-85.9-61.6-191.9-61.6S32.1 56.94 32.1 90.94v.3c.5 33.9 86.3 61.3 191.9 61.3Zm-191.9 71.9c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.5c-.5 33.9-86.3 61.3-191.9 61.3s-191.49-27.4-192-61.29l.1 86.49v.3Zm-.1 41.21.1 86.49v.3c.4 26.7 53.7 49.3 127.9 57.8v-86.8c-74.29-8.4-127.59-31.1-128-57.79Zm320 37.69 105 70-105 70v-52.5H189v-35h163v-52.5Z" />',
  viewBox: "0 0 512 512"
};
var downloadLightIcon = {
  name: "download-light",
  content: '<path d="M368 256 256 384 144 256h96V32h32v224h96Zm112 192H32v32h448v-32Z" />',
  viewBox: "0 0 512 512"
};
var eyeSlashIcon = {
  name: "eye-slash",
  content: '<path d="m245.43 358.68 24.92 24.92c-4.75.26-9.54.4-14.34.4-94.7 0-179.7-51.5-224-128 13.19-22.83 30.01-43.43 49.65-61.1l23.01 23.01C91.46 229.29 79.51 242.07 69.8 256c26.33 33.77 54.15 53.86 72.6 65.1 39.18 23.88 77.54 33.37 103.03 37.58m131.42-4.44L480 457.39 457.39 480 345.51 368.12s-.07.03-.1.04L232.2 254.94l.11-.03-39.21-39.21-.03.11-26.8-26.8s.04-.05.06-.08l-7.01-7.01s-.06.03-.09.04l-24.17-24.17s.06-.03.09-.05L32 54.61 54.61 32l111.87 111.87A260.193 260.193 0 0 1 256 128c94.8 0 179.8 51.5 224 128-24 41.53-60.05 75.69-103.15 98.24Zm-7.25-33.14c27.8-16.4 54.1-38.7 72.6-65.1-18.4-26.4-44.8-48.7-72.6-65.1-12.2-7.2-25.1-13.2-38.4-17.9 22.6 20.5 36.8 50.1 36.8 83 0 25.15-8.31 48.37-22.32 67.08l7.01 7.01c5.76-2.76 11.41-5.74 16.91-8.99Z" />',
  viewBox: "0 0 512 512"
};
var displayInlineBlockIcon = {
  name: "display-inline-block",
  content: '<path d="M448 32h32v448h-32zM32 32h32v448H32zm64 352h320V128H96v256zm64-192h192v128H160V192z" />',
  viewBox: "0 0 512 512"
};
var paperPlaneIcon = {
  name: "paper-plane",
  content: '<path d="M469.783 271.879 54.329 446.734c-13.149 5.534-26.266-8.042-21.225-21.967l48.3-133.404c2.16-5.966 7.298-10.169 13.326-10.901C312.467 256 239.85 263.839 312.467 256c-72.618-7.839 0 0-217.739-24.462-6.027-.732-11.165-4.935-13.325-10.901l-48.3-133.404C28.063 73.308 41.18 59.732 54.33 65.266l415.454 174.855c13.623 5.734 13.623 26.024 0 31.758Z" />',
  viewBox: "0 0 512 512"
};
var undoIcon = {
  name: "undo",
  content: '<path d="M479.9 416c-57.7-56.6-136.7-96-223.9-96v128L32 256 256 64v128c122.2 0 221.5 102.4 223.9 224z" />',
  viewBox: "0 0 512 512"
};
var redoIcon = {
  name: "redo",
  content: '<path d="M256 192V64l224 192-224 192V320c-87.2 0-166.2 39.4-223.9 96C34.5 294.4 133.9 192 256 192z" />',
  viewBox: "0 0 512 512"
};
var arrowRotateCcwIcon = {
  name: "arrow-rotate-ccw",
  content: '<path d="m62 176 55.5 32C103.8 231.6 96 258.9 96 288c0 88.2 71.8 160 160 160s160-71.8 160-160-71.8-160-160-160v64L96 96 256 0v64c123.7 0 224 100.3 224 224S379.7 512 256 512 32 411.7 32 288c0-40.8 10.9-79.1 30-112z" />',
  viewBox: "0 0 512 512"
};
var arrowRotateCwIcon = {
  name: "arrow-rotate-cw",
  content: '<path d="M480 288c0 123.7-100.3 224-224 224S32 411.7 32 288 132.3 64 256 64V0l160 96-160 96v-64c-88.2 0-160 71.8-160 160s71.8 160 160 160 160-71.8 160-160c0-29.1-7.8-56.4-21.5-80l55.5-32c19.1 32.9 30 71.2 30 112z" />',
  viewBox: "0 0 512 512"
};
var arrowsNoRepeatIcon = {
  name: "arrows-no-repeat",
  content: '<path d="m321 434.2 47.5 47.5C335.5 501 297 512 256 512 132.3 512 32 411.7 32 288c0-41 11-79.5 30.3-112.6l47.5 47.5c-8.9 19.9-13.8 41.9-13.8 65 0 88.2 71.8 160 160 160 23.1.1 45.2-4.8 65-13.7zm118.3-17.5c12.9-18.3 23.1-38.7 30.1-60.4 6.9-21.5 10.6-44.5 10.6-68.3 0-40.8-10.9-79.1-30-112l-55.5 32c13.6 23.5 21.5 50.9 21.5 80 0 4.8-.2 9.5-.6 14.2-2.2 24.8-10.1 47.9-22.3 68.2L173.6 150.9c20.3-12.2 43.4-20.1 68.2-22.3 4.7-.4 9.4-.6 14.2-.6v64l160-96L256 0v64c-23.8 0-46.7 3.7-68.3 10.6-21.8 7-42.1 17.2-60.4 30.1L22.6 0 0 22.6 489.4 512l22.6-22.6-72.7-72.7z" />',
  viewBox: "0 0 512 512"
};
var arrowRotateCcwSmallIcon = {
  name: "arrow-rotate-ccw-small",
  content: '<path d="m101.4 238.6 46.4 12.4c-2.5 9.3-3.8 19-3.8 29 0 61.8 50.2 112 112 112s112-50.2 112-112-50.2-112-112-112v56l-128-80 128-80v56c88.4 0 160 71.6 160 160s-71.6 160-160 160S96 368.4 96 280c0-14.3 1.9-28.2 5.4-41.4z" />',
  viewBox: "0 0 512 512"
};
var arrowRotateCwSmallIcon = {
  name: "arrow-rotate-cw-small",
  content: '<path d="M416 280c0 88.4-71.6 160-160 160S96 368.4 96 280s71.6-160 160-160V64l128 80-128 80v-56c-61.8 0-112 50.2-112 112s50.2 112 112 112 112-50.2 112-112c0-10-1.3-19.7-3.8-29l46.4-12.4c3.5 13.2 5.4 27.1 5.4 41.4z" />',
  viewBox: "0 0 512 512"
};
var clockIcon = {
  name: "clock",
  content: '<path d="M256 128h-32v160h160v-32H256V128zm0-96C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 416c-105.9 0-192-86.1-192-192S150.1 64 256 64s192 86.1 192 192-86.1 192-192 192z" />',
  viewBox: "0 0 512 512"
};
var calendarIcon = {
  name: "calendar",
  content: '<path d="M416 416H288V288h128v128zm64-352v384c0 17.6-14.4 32-32 32H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h64V0h64v32h128V0h64v32h64c17.6 0 32 14.4 32 32zm-32 128H64v255.9l.1.1 383.9-.1V192zm0-127.9c-.1-.1-.1-.1 0 0l-64-.1v32h-64V64H192v32h-64V64H64.1l-.1.1V160h384V64.1z" />',
  viewBox: "0 0 512 512"
};
var saveIcon = {
  name: "save",
  content: '<path d="M384 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V128l-96-96zm-64 32v128h-64V64h64zm128 384-383.9.1-.1-.1V64.1l.1-.1H96v160h256V64h18.7l77.3 77.3V448z" />',
  viewBox: "0 0 512 512"
};
var printIcon = {
  name: "print",
  content: '<path d="M448 160h-32V96l-64-64H128c-17.7 0-32 14.3-32 32v96H64c-17.6 0-32 14.4-32 32v160c0 17.6 14.4 32 32 32h32v64c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32v-64h32c17.6 0 32-14.4 32-32V192c0-17.6-14.4-32-32-32zM128 64h192v64h64v64H128V64zm320 256h-64v127.9l-.1.1H128.1l-.1-.1V320H64v-32h384v32zm-288 0h192v32H160v-32zm0 64h160v32H160v-32z" />',
  viewBox: "0 0 512 512"
};
var pencilIcon = {
  name: "pencil",
  content: '<path d="m334.9 86.6 45.3-45.3c12.4-12.4 32.8-12.4 45.3 0l45.3 45.3c12.4 12.4 12.4 32.8 0 45.3l-45.3 45.3-90.6-90.6zm-22.6 22.6L32 389.5V480h90.5l280.3-280.3-90.5-90.5zM99.9 412.1l-22.6-22.6 235-235 22.6 22.6-235 235z" />',
  viewBox: "0 0 512 512"
};
var trashIcon = {
  name: "trash",
  content: '<path d="M416 96h-96V64c0-17.6-14.4-32-32-32h-96c-17.6 0-32 14.4-32 32v32H64v64h32v288c0 17.6 14.4 32 32 32h224c17.6 0 32-14.4 32-32V160h32V96zM192 64h95.9l.1.1V96h-96c.1-.1.1-32.1 0-32zm160 384H128.1l-.1-.1V160h32v256h32V160h32v256h32V160h32v256h32V160h32v288z" />',
  viewBox: "0 0 512 512"
};
var paperclipIcon = {
  name: "paperclip",
  content: '<path d="M384 128v256h-32V128c0-52.9-43.1-96-96-96s-96 43.1-96 96v288c0 35.3 28.7 64 64 64s64-28.7 64-64V128c0-17.6-14.4-32-32-32s-32 14.4-32 32v256h-32V128c0-35.3 28.7-64 64-64s64 28.7 64 64v288c0 52.9-43.1 96-96 96s-96-43.1-96-96V128C128 57.4 185.4 0 256 0s128 57.4 128 128z" />',
  viewBox: "0 0 512 512"
};
var paperclipAltIcon = {
  name: "paperclip-alt",
  content: '<path d="M407 452.1c-18.6 18.6-43 27.9-67.5 27.9s-48.9-9.3-67.6-27.9L69.3 249.4c-49.7-49.7-49.7-130.5 0-180.2s130.5-49.7 180.2 0l180.2 180.2-22.7 22.5L226.9 91.8c-37.2-37.2-97.9-37.2-135.1 0-37.2 37.2-37.2 97.9 0 135.1l202.7 202.7c24.8 24.8 65.2 24.8 90.1 0 24.8-24.8 24.8-65.2 0-90.1L181.9 136.8c-12.4-12.4-32.7-12.4-45 0s-12.4 32.7 0 45L317 362l-22.5 22.5-180.2-180.1c-24.8-24.8-24.8-65.2 0-90.1s65.2-24.8 90.1 0L407 317c37.3 37.2 37.3 97.9 0 135.1z" />',
  viewBox: "0 0 512 512"
};
var linkIcon = {
  name: "link",
  content: '<path d="M384 384c-47.4 0-88.7-25.8-110.8-64H384c35.4 0 64-28.6 64-64s-28.7-64-64-64H273.2c22.1-38.2 63.5-64 110.8-64 70.7 0 128 57.3 128 128s-57.3 128-128 128zM96 256c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32s-14.3 32-32 32H128c-17.7 0-32-14.3-32-32zm-32 0c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.4 0-64 28.6-64 64z" />',
  viewBox: "0 0 512 512"
};
var unlinkIcon = {
  name: "unlink",
  content: '<path d="M384 384c-47.4 0-88.7-25.8-110.8-64H384c35.4 0 64-28.6 64-64s-28.7-64-64-64H273.2c22.1-38.2 63.5-64 110.8-64 70.7 0 128 57.3 128 128s-57.3 128-128 128zM64 256c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.3 0-64 28.6-64 64zM272 97.6V0h-32v97.6c5.2-1 10.5-1.6 16-1.6s10.8.6 16 1.6zm-60.1 11.7-69-69-22.6 22.6 69 69c5.9-9 13.6-16.7 22.6-22.6zm110.8 22.6 69-69-22.6-22.6-69 69c9 5.9 16.7 13.6 22.6 22.6zM256 416c-5.5 0-10.8-.6-16-1.6V512h32v-97.6c-5.2 1-10.5 1.6-16 1.6zm-66.7-35.9-69 69 22.6 22.6 69-69c-9-5.9-16.7-13.6-22.6-22.6zm110.8 22.6 69 69 22.6-22.6-69-69c-5.9 9-13.6 16.7-22.6 22.6z" />',
  viewBox: "0 0 512 512"
};
var linkVerticalIcon = {
  name: "link-vertical",
  content: '<path d="M128 384c0-47.4 25.8-88.7 64-110.8V384c0 35.4 28.6 64 64 64s64-28.7 64-64V273.2c38.2 22.1 64 63.5 64 110.8 0 70.7-57.3 128-128 128s-128-57.3-128-128zM256 96c17.7 0 32 14.3 32 32v256c0 17.7-14.3 32-32 32s-32-14.3-32-32V128c0-17.7 14.3-32 32-32zm0-32c-35.4 0-64 28.6-64 64v110.8c-38.2-22.1-64-63.5-64-110.8C128 57.3 185.3 0 256 0s128 57.3 128 128c0 47.4-25.8 88.7-64 110.8V128c0-35.4-28.6-64-64-64z" />',
  viewBox: "0 0 512 512"
};
var unlinkVerticalIcon = {
  name: "unlink-vertical",
  content: '<path d="M414.4 272H512v-32h-97.6c1 5.2 1.6 10.5 1.6 16s-.5 10.8-1.6 16zm-11.6-60.1 69-69-22.6-22.6-69 69c8.9 5.9 16.6 13.6 22.6 22.6zm-22.7 110.8 69 69 22.6-22.6-69-69c-5.9 9-13.6 16.7-22.6 22.6zM96 256c0-5.5.6-10.8 1.6-16H0v32h97.6c-1-5.2-1.6-10.5-1.6-16zm35.9-66.8-69-69-22.6 22.6 69 69c5.9-8.9 13.6-16.6 22.6-22.6zm-22.6 110.9-69 69 22.6 22.6 69-69c-9-5.9-16.7-13.6-22.6-22.6zM128 384c0-47.4 25.8-88.7 64-110.8V384c0 35.4 28.6 64 64 64s64-28.7 64-64V273.2c38.2 22.1 64 63.5 64 110.8 0 70.7-57.3 128-128 128s-128-57.3-128-128zM256 64c-35.4 0-64 28.6-64 64v110.8c-38.2-22.1-64-63.5-64-110.8C128 57.3 185.3 0 256 0s128 57.3 128 128c0 47.4-25.8 88.7-64 110.8V128c0-35.4-28.6-64-64-64z" />',
  viewBox: "0 0 512 512"
};
var lockIcon = {
  name: "lock",
  content: '<path d="M384 224h-32v-96c0-53-43-96-96-96s-96 43-96 96v96h-32c-17.6 0-32 14.4-32 32v192c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V256c0-17.6-14.4-32-32-32zm-192-96c0-35.3 28.7-64 64-64s64 28.7 64 64v96H192v-96zm64 256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" />',
  viewBox: "0 0 512 512"
};
var unlockIcon = {
  name: "unlock",
  content: '<path d="M416 224H224v-96c0-53-43-96-96-96s-96 43-96 96v128h32V128c0-35.3 28.7-64 64-64s64 28.7 64 64v96h-32c-17.6 0-32 14.4-32 32v192c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V256c0-17.6-14.4-32-32-32zM288 384c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32z" />',
  viewBox: "0 0 512 512"
};
var cancelIcon = {
  name: "cancel",
  content: '<path d="M256 32c-50.3 0-96.8 16.6-134.1 44.6-17.2 12.8-32.4 28.1-45.3 45.3C48.6 159.2 32 205.7 32 256c0 123.7 100.3 224 224 224 50.3 0 96.8-16.6 134.1-44.6 17.2-12.8 32.4-28.1 45.3-45.3 28-37.4 44.6-83.8 44.6-134.1 0-123.7-100.3-224-224-224zm0 384c-88.2 0-160-71.8-160-160 0-32.6 9.8-62.9 26.6-88.2l221.6 221.6C318.9 406.2 288.6 416 256 416zm133.4-71.8L167.8 122.6C193.1 105.8 223.4 96 256 96c88.2 0 160 71.8 160 160 0 32.6-9.8 62.9-26.6 88.2z" />',
  viewBox: "0 0 512 512"
};
var cancelOutlineIcon = {
  name: "cancel-outline",
  content: '<path d="M256 32c-56.1 0-107.4 20.6-146.7 54.7-8.1 7-15.6 14.6-22.6 22.6C52.6 148.6 32 199.9 32 256c0 123.7 100.3 224 224 224 56.1 0 107.4-20.6 146.7-54.7 8.1-7 15.6-14.6 22.6-22.6C459.4 363.4 480 312.1 480 256c0-123.7-100.3-224-224-224zm0 416c-106 0-192-86-192-192 0-47.2 17.1-90.5 45.4-124L380 402.6c-33.5 28.3-76.8 45.4-124 45.4zm146.6-68L132 109.4C165.5 81.1 208.8 64 256 64c106 0 192 86 192 192 0 47.2-17.1 90.5-45.4 124z" />',
  viewBox: "0 0 512 512"
};
var cancelCircleIcon = {
  name: "cancel-circle",
  content: '<path d="m169.4 214.6 128 128c-12.5 6-26.6 9.4-41.4 9.4-52.9 0-96-43.1-96-96 0-14.8 3.4-28.8 9.4-41.4zM256 160c-14.8 0-28.8 3.4-41.4 9.4l128 128c6-12.5 9.4-26.6 9.4-41.4 0-52.9-43.1-96-96-96zm224 96c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224zm-64 0c0-88.2-71.8-160-160-160-32.6 0-62.9 9.8-88.2 26.6-17.9 11.9-33.4 27.3-45.3 45.3C105.8 193.1 96 223.4 96 256c0 88.2 71.8 160 160 160 32.6 0 62.9-9.8 88.2-26.6 17.9-11.9 33.4-27.3 45.3-45.3 16.7-25.2 26.5-55.5 26.5-88.1z" />',
  viewBox: "0 0 512 512"
};
var checkIcon = {
  name: "check",
  content: '<path d="M434.7 82.7 480 128 192 416 32 256l45.3-45.3L192 325.5 434.7 82.7z" />',
  viewBox: "0 0 512 512"
};
var checkOutlineIcon = {
  name: "check-outline",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192zm-32-154-83-83-45 45 128 128 176-176-45-45-131 131z" />',
  viewBox: "0 0 512 512"
};
var checkCircleIcon = {
  name: "check-circle",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm-32 352L96 256l45-45 83 83 147-147 45 45-192 192z" />',
  viewBox: "0 0 512 512"
};
var xIcon = {
  name: "x",
  content: '<path d="M416 141.3 301.3 256 416 370.7 370.7 416 256 301.3 141.3 416 96 370.7 210.7 256 96 141.3 141.3 96 256 210.7 370.7 96l45.3 45.3z" />',
  viewBox: "0 0 512 512"
};
var xOutlineIcon = {
  name: "x-outline",
  content: '<path d="M384 338.7 338.7 384 256 301.3 173.3 384 128 338.7l82.7-82.7-82.7-82.7 45.3-45.3 82.7 82.7 82.7-82.7 45.3 45.3-82.7 82.7 82.7 82.7zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192z" />',
  viewBox: "0 0 512 512"
};
var xCircleIcon = {
  name: "x-circle",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm128 306.7L338.7 384 256 301.3 173.3 384 128 338.7l82.7-82.7-82.7-82.7 45.3-45.3 82.7 82.7 82.7-82.7 45.3 45.3-82.7 82.7 82.7 82.7z" />',
  viewBox: "0 0 512 512"
};
var plusIcon = {
  name: "plus",
  content: '<path d="M288 224V96h-64v128H96v64h128v128h64V288h128v-64H288z" />',
  viewBox: "0 0 512 512"
};
var plusOutlineIcon = {
  name: "plus-outline",
  content: '<path d="M288 288v96h-64v-96h-96v-64h96v-96h64v96h96v64h-96zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192z" />',
  viewBox: "0 0 512 512"
};
var plusCircleIcon = {
  name: "plus-circle",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm32 256v96h-64v-96h-96v-64h96v-96h64v96h96v64h-96z" />',
  viewBox: "0 0 512 512"
};
var minusIcon = {
  name: "minus",
  content: '<path d="M96 224v64h320v-64H96z" />',
  viewBox: "0 0 512 512"
};
var minusOutlineIcon = {
  name: "minus-outline",
  content: '<path d="M128 224h256v64H128v-64zM256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm0 416c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192z" />',
  viewBox: "0 0 512 512"
};
var minusCircleIcon = {
  name: "minus-circle",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zM128 288v-64h256v64H128z" />',
  viewBox: "0 0 512 512"
};
var sortAscIcon = {
  name: "sort-asc",
  content: '<path d="M96 352h320v64H96v-64zm0-128h224v64H96v-64zm0-128h128v64H96V96z" />',
  viewBox: "0 0 512 512"
};
var sortDescIcon = {
  name: "sort-desc",
  content: '<path d="M96 96h320v64H96V96zm0 128h224v64H96v-64zm0 128h128v64H96v-64z" />',
  viewBox: "0 0 512 512"
};
var sortClearIcon = {
  name: "sort-clear",
  content: '<path d="m110.9 224 64 64H96v-64h14.9zM96 416h128v-64H96v64zm214.6-128h9.4v-64h-73.4l-64-64H416V96H118.6l-64-64L32 54.6 457.4 480l22.6-22.6L310.6 288z" />',
  viewBox: "0 0 512 512"
};
var sortAscSmallIcon = {
  name: "sort-asc-small",
  content: '<path d="M256 192v224h-32V192h-96L240 64l112 128h-96z" />',
  viewBox: "0 0 512 512"
};
var sortDescSmallIcon = {
  name: "sort-desc-small",
  content: '<path d="M352 288 240 416 128 288h96V64h32v224h96z" />',
  viewBox: "0 0 512 512"
};
var filterIcon = {
  name: "filter",
  content: '<path d="M64 64v32l160 160v224l64-64V256L448 96V64H64z" />',
  viewBox: "0 0 512 512"
};
var filterClearIcon = {
  name: "filter-clear",
  content: '<path d="m143.5 64 168.2 168.2L288 256v160l-64 64V256L64 96V64h79.5zm236.1 100.4L448 96V64H279.3l-64-64L192 22l298 298 22-23.3-132.4-132.3z" />',
  viewBox: "0 0 512 512"
};
var filterSmallIcon = {
  name: "filter-small",
  content: '<path d="M128 128h256v32l-96 96v96l-64 64V256l-96-96v-32z" />',
  viewBox: "0 0 512 512"
};
var filterSortAscSmallIcon = {
  name: "filter-sort-asc-small",
  content: '<path d="M448 128v32l-96 96v64l-32 64V256l-96-96v-32h224zM64 224h64v160h32V224h64l-80-96-80 96z" />',
  viewBox: "0 0 512 512"
};
var filterSortDescSmallIcon = {
  name: "filter-sort-desc-small",
  content: '<path d="M448 128v32l-96 96v64l-32 64V256l-96-96v-32h224zM144 384l80-96h-64V128h-32v160H64l80 96z" />',
  viewBox: "0 0 512 512"
};
var filterAddExpressionIcon = {
  name: "filter-add-expression",
  content: '<path d="M480 64v32H32V64h448zm-192 96h192v-32H288v32zm0 128h192v-64H288v64zm0 96h192v-32H288v32zm0 64h192v-32H288v32zM96 352h64v-64h64v-64h-64v-64H96v64H32v64h64v64z" />',
  viewBox: "0 0 512 512"
};
var filterAddGroupIcon = {
  name: "filter-add-group",
  content: '<path d="M352 352v32h-32v64h32v32h-64V352h64zm64 0v32h32v64h-32v32h64V352h-64zM160 160H96v64H32v64h64v64h64v-64h64v-64h-64v-64zm128 0h192v-32H288v32zM32 64v32h448V64H32zm256 224h192v-64H288v64z" />',
  viewBox: "0 0 512 512"
};
var loginIcon = {
  name: "login",
  content: '<path d="M384 480h96V32h-96v448zM32 224v64h128v96l160-128-160-128v96H32z" />',
  viewBox: "0 0 512 512"
};
var logoutIcon = {
  name: "logout",
  content: '<path d="M128 32H32v448h96V32zm64 192v64h128v96l160-128-160-128v96H192z" />',
  viewBox: "0 0 512 512"
};
var downloadIcon = {
  name: "download",
  content: '<path d="M32 384v96h448v-96H32zM288 32h-64v128h-96l128 160 128-160h-96V32z" />',
  viewBox: "0 0 512 512"
};
var uploadIcon = {
  name: "upload",
  content: '<path d="M32 384v96h448v-96H32zm192-64h64V192h96L256 32 128 192h96v128z" />',
  viewBox: "0 0 512 512"
};
var hyperlinkOpenIcon = {
  name: "hyperlink-open",
  content: '<path d="M32 480h448V256h-32v192H64V64h192V32H32v448zM320 32l56.9 56.9.5.5L224 242.7l45.3 45.3 153.3-153.4L480 192V32H320z" />',
  viewBox: "0 0 512 512"
};
var hyperlinkOpenSmIcon = {
  name: "hyperlink-open-sm",
  content: '<path d="M96 416h320v-96h-32v64H128V128h64V96H96v320zM256 96h160v160l-57.4-57.4L237.3 320 192 274.7l121.4-121.4-.5-.5L256 96z" />',
  viewBox: "0 0 512 512"
};
var launchIcon = {
  name: "launch",
  content: '<path d="M96 96v320h96v-32h-64V128h256v64h32V96H96zm320 160v160H256l57.4-57.4L192 237.3l45.3-45.3 121.4 121.4.5-.5L416 256z" />',
  viewBox: "0 0 512 512"
};
var windowIcon = {
  name: "window",
  content: '<path d="M96 96v320h320V96H96zm288 288H128V192h256v192z" />',
  viewBox: "0 0 512 512"
};
var windowRestoreIcon = {
  name: "window-restore",
  content: '<path d="M448 32v288h-32V128H160V32h288zM64 192h288v288H64V192zm32 256h224V288H96v160z" />',
  viewBox: "0 0 512 512"
};
var windowMinimizeIcon = {
  name: "window-minimize",
  content: '<path d="M416 288v64H96v-64h320z" />',
  viewBox: "0 0 512 512"
};
var gearIcon = {
  name: "gear",
  content: '<path d="m462.7 317.9-41.5-31.4c1.8-9.9 2.8-20.1 2.8-30.5 0-10.4-1-20.6-2.8-30.5l41.5-31.4c6.4-4.9 8.2-13.8 4.2-20.8L433 114.6c-4-7-12.6-9.9-20.1-6.7l-48 20.2c-15.4-13.2-33.3-23.6-52.8-30.5L305.8 46c-1-8-7.8-14-15.9-14h-67.8c-8.1 0-14.9 6-15.9 14l-6.5 51.6c-19.5 6.9-37.4 17.3-52.8 30.5l-48-20.2c-7.4-3.1-16-.2-20.1 6.7l-33.9 58.7c-4 7-2.2 15.9 4.2 20.8l41.5 31.4C89 235.4 88 245.6 88 256c0 10.4 1 20.6 2.8 30.5l-41.5 31.4c-6.4 4.9-8.2 13.8-4.2 20.8L79 397.4c4 7 12.6 9.9 20.1 6.7l48-20.2c15.4 13.2 33.3 23.6 52.8 30.5l6.5 51.6c1 8 7.8 14 15.9 14h67.8c8.1 0 14.9-6 15.9-14l6.5-51.6c19.5-6.9 37.4-17.3 52.8-30.5l48 20.2c7.4 3.1 16 .2 20.1-6.7l33.9-58.7c3.7-7 1.9-15.9-4.6-20.8zM256 340c-46.4 0-84-37.6-84-84s37.6-84 84-84 84 37.6 84 84-37.6 84-84 84z" />',
  viewBox: "0 0 512 512"
};
var gearsIcon = {
  name: "gears",
  content: '<path d="m331.9 364.2-29.6-22.4c1.3-7.1 2-14.3 2-21.8 0-7.4-.7-14.7-2-21.8l29.6-22.4c4.6-3.5 5.9-9.8 3-14.8l-24.2-42c-2.9-5-9-7.1-14.3-4.8L262 228.7c-11-9.4-23.8-16.9-37.7-21.8l-4.6-36.9c-.7-5.7-5.6-10-11.3-10H160c-5.8 0-10.6 4.3-11.3 10l-4.6 36.9c-13.9 4.9-26.7 12.4-37.7 21.8l-34.3-14.5c-5.3-2.2-11.5-.2-14.3 4.8l-24.3 42c-2.9 5-1.6 11.3 3 14.8l29.6 22.4c-1.3 7.1-2 14.3-2 21.8 0 7.4.7 14.7 2 21.8l-29.6 22.4c-4.6 3.5-5.9 9.8-3 14.8l24.2 42c2.9 5 9 7.1 14.3 4.8l34.3-14.5c11 9.4 23.8 16.9 37.7 21.8l4.6 36.9c.7 5.7 5.6 10 11.3 10h48.4c5.8 0 10.6-4.3 11.3-10l4.6-36.9c13.9-4.9 26.7-12.4 37.7-21.8l34.3 14.5c5.3 2.2 11.5.2 14.3-4.8l24.2-41.9c3-5 1.8-11.4-2.8-14.9zM184.2 380c-33.1 0-60-26.9-60-60s26.9-60 60-60 60 26.9 60 60-26.9 60-60 60zm293.1-225.5L459.4 141c.8-4.2 1.2-8.6 1.2-13 0-4.5-.4-8.8-1.2-13l17.8-13.4c2.7-2.1 3.5-5.9 1.8-8.9l-14.5-25.2c-1.8-3-5.4-4.2-8.6-2.8l-20.6 8.7c-6.7-5.7-14.3-10.1-22.7-13.1L409.9 38c-.4-3.4-3.3-6-6.8-6h-29c-3.4 0-6.4 2.5-6.8 6l-2.7 22.2c-8.3 2.9-16 7.5-22.7 13.1l-20.6-8.7c-3.2-1.4-6.9-.1-8.6 2.8l-14.5 25.2c-1.8 3-1 6.9 1.8 8.9l17.8 13.4c-.8 4.2-1.2 8.6-1.2 13 0 4.5.4 8.8 1.2 13L300 154.5c-2.7 2.1-3.5 5.9-1.8 8.9l14.5 25.2c1.8 3 5.4 4.2 8.6 2.8l20.6-8.7c6.7 5.7 14.3 10.1 22.7 13.1l2.7 22.2c.4 3.4 3.3 6 6.8 6h29c3.4 0 6.4-2.5 6.8-6l2.7-22.2c8.3-2.9 16-7.5 22.7-13.1l20.6 8.7c3.2 1.4 6.9.1 8.6-2.8l14.5-25.2c1.8-3 1-6.9-1.7-8.9zm-88.7 9.5c-19.9 0-36.1-16.2-36.1-36.1s16.2-36.1 36.1-36.1c19.9 0 36.1 16.2 36.1 36.1-.1 19.9-16.1 36.1-36.1 36.1z" />',
  viewBox: "0 0 512 512"
};
var wrenchIcon = {
  name: "wrench",
  content: '<path d="M470.7 402.7 306 238.1c9-18.8 14-39.8 14-62.1 0-79.5-64.5-144-144-144-22.2 0-43.3 5-62.1 14l76.4 76.4c12.4 12.4 12.4 32.8 0 45.3l-22.6 22.6c-12.4 12.4-32.8 12.4-45.3 0L46 113.9c-9 18.8-14 39.9-14 62.1 0 79.5 64.5 144 144 144 22.3 0 43.4-5.1 62.2-14.1l164.7 164.7c12.3 12.5 32.7 12.5 45.1.1l22.7-22.7c12.4-12.4 12.4-32.8 0-45.3zM448 425.5 425.4 448 265.8 288.5c8.3-6.7 15.9-14.3 22.6-22.6L448 425.5z" />',
  viewBox: "0 0 512 512"
};
var eyeIcon = {
  name: "eye",
  content: '<path d="M256 128c-94.8 0-179.8 51.5-224 128 44.3 76.5 129.3 128 224 128s179.8-51.5 224-128c-44.2-76.5-129.2-128-224-128zm-32 64c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM69.8 256c18.4-26.4 44.8-48.7 72.6-65.1 12.2-7.2 25.1-13.2 38.4-17.9-22.6 20.5-36.8 50.1-36.8 83s14.2 62.5 36.8 83c-13.3-4.7-26.2-10.7-38.4-17.9-27.8-16.4-54.2-38.7-72.6-65.1zm299.8 65.1c-12.2 7.2-25.1 13.2-38.4 17.9 22.6-20.5 36.8-50.1 36.8-83s-14.2-62.5-36.8-83c13.3 4.7 26.2 10.7 38.4 17.9 27.8 16.4 54.2 38.7 72.6 65.1-18.5 26.4-44.8 48.7-72.6 65.1z" />',
  viewBox: "0 0 512 512"
};
var searchIcon = {
  name: "search",
  content: '<path d="M365.3 320h-22.7l-26.7-26.7C338.5 265.7 352 230.4 352 192c0-88.4-71.6-160-160-160S32 103.6 32 192s71.6 160 160 160c38.4 0 73.7-13.5 101.3-36.1l26.7 26.7v22.7L434.7 480l45.3-45.3L365.3 320zM64 192c0-70.7 57.3-128 128-128s128 57.3 128 128-57.3 128-128 128S64 262.7 64 192z" />',
  viewBox: "0 0 512 512"
};
var zoomInIcon = {
  name: "zoom-in",
  content: '<path d="M288 224h-64v64h-64v-64H96v-64h64V96h64v64h64v64zm192 210.7L434.7 480 320 365.3v-22.7l-26.7-26.7C265.7 338.5 230.4 352 192 352c-88.4 0-160-71.6-160-160S103.6 32 192 32s160 71.6 160 160c0 38.4-13.5 73.7-36.1 101.3l26.7 26.7h22.7L480 434.7zM192 320c70.7 0 128-57.3 128-128S262.7 64 192 64 64 121.3 64 192s57.3 128 128 128z" />',
  viewBox: "0 0 512 512"
};
var zoomOutIcon = {
  name: "zoom-out",
  content: '<path d="M288 224H96v-64h192v64zm192 210.7L434.7 480 320 365.3v-22.7l-26.7-26.7C265.7 338.5 230.4 352 192 352c-88.4 0-160-71.6-160-160S103.6 32 192 32s160 71.6 160 160c0 38.4-13.5 73.7-36.1 101.3l26.7 26.7h22.7L480 434.7zM192 320c70.7 0 128-57.3 128-128S262.7 64 192 64 64 121.3 64 192s57.3 128 128 128z" />',
  viewBox: "0 0 512 512"
};
var arrowsMoveIcon = {
  name: "arrows-move",
  content: '<path d="M384 320v-32h-96v96h32l-64 96-64-96h32v-96h-96v32l-96-64 96-64v32h96v-96h-32l64-96 64 96h-32v96h96v-32l96 64-96 64z" />',
  viewBox: "0 0 512 512"
};
var calculatorIcon = {
  name: "calculator",
  content: '<path d="M64 64v384h384V64H64zm96 352H96v-64h64v64zm0-96H96v-64h64v64zm96 96h-64v-64h64v64zm0-96h-64v-64h64v64zm160 96h-96V256h96v160zm0-224H96V96h320v96z" />',
  viewBox: "0 0 512 512"
};
var cartIcon = {
  name: "cart",
  content: '<path d="M192 368c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm144-48c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM128 96V64H32v32h64v192h288v-32H128V96zm32 128h256v-32H160v32zm0-96v32h288v-32H160z" />',
  viewBox: "0 0 512 512"
};
var connectorIcon = {
  name: "connector",
  content: '<path d="M416 112c0 26.51-21.49 48-48 48-20.898 0-38.667-13.359-45.258-32H256v288h-98.742c-6.591 18.641-24.36 32-45.258 32-26.51 0-48-21.49-48-48s21.49-48 48-48c20.898 0 38.667 13.359 45.258 32H224V96h98.742c6.591-18.641 24.36-32 45.258-32 26.51 0 48 21.49 48 48z" />',
  viewBox: "0 0 512 512"
};
var plusSmIcon = {
  name: "plus-sm",
  content: '<path d="M352 224v64h-64v64h-64v-64h-64v-64h64v-64h64v64h64z" />',
  viewBox: "0 0 512 512"
};
var minusSmIcon = {
  name: "minus-sm",
  content: '<path d="M352 224v64H160v-64h192z" />',
  viewBox: "0 0 512 512"
};
var kpiStatusDenyIcon = {
  name: "kpi-status-deny",
  content: '<path d="M480 256 256 480 32 256 256 32l224 224z" />',
  viewBox: "0 0 512 512"
};
var kpiStatusHoldIcon = {
  name: "kpi-status-hold",
  content: '<path d="M256 64 32 448h448L256 64z" />',
  viewBox: "0 0 512 512"
};
var kpiStatusOpenIcon = {
  name: "kpi-status-open",
  content: '<path d="M480 256c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224z" />',
  viewBox: "0 0 512 512"
};
var equalIcon = {
  name: "equal",
  content: '<path d="M96 288h320v64H96v-64zm0-128v64h320v-64H96z" />',
  viewBox: "0 0 512 512"
};
var notEqualIcon = {
  name: "not-equal",
  content: '<path d="m290.7 224-37.3 64H416v64H216l-56 96h-48l56-96H96v-64h109.3l37.3-64H96v-64h184l56-96h48l-56 96h88v64H290.7z" />',
  viewBox: "0 0 512 512"
};
var lessOrEqualIcon = {
  name: "less-or-equal",
  content: '<path d="m318.1 352-160-160 160-160L352 65.9 225.9 192 352 318.1 318.1 352zM128 416v32h256v-32H128z" />',
  viewBox: "0 0 512 512"
};
var greaterOrEqualIcon = {
  name: "greater-or-equal",
  content: '<path d="M160 318.1 286.1 192 160 65.9 193.9 32l160 160-160 160-33.9-33.9zM128 416v32h256v-32H128z" />',
  viewBox: "0 0 512 512"
};
var divideIcon = {
  name: "divide",
  content: '<path d="M416 64 192 448h-64L352 64h64z" />',
  viewBox: "0 0 512 512"
};
var accessibilityIcon = {
  name: "accessibility",
  content: '<path d="M208 48c0-26.5 21.5-48 48-48s48 21.5 48 48-21.5 48-48 48-48-21.5-48-48zm240 112v-32H64v32l128 16v80l-32 224h48l32-160h32l32 160h48l-32-224v-80l128-16z" />',
  viewBox: "0 0 512 512"
};
var barcodeOutlineIcon = {
  name: "barcode-outline",
  content: '<path d="M96 384H64V128h32v256zm96-256h-64v224h64V128zm64 0h-32v224h32V128zm64 0h-32v224h32V128zm64 0h-32v224h32V128zm64 0h-32v256h32V128zm64-32v320c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h448c17.7 0 32 14.3 32 32zm-32 0H32v320h448V96z" />',
  viewBox: "0 0 512 512"
};
var barcodeIcon = {
  name: "barcode",
  content: '<path d="M480 64H32C14.3 64 0 78.3 0 96v320c0 17.7 14.3 32 32 32h448c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zM96 384H64V128h32v256zm96-32h-64V128h64v224zm64 0h-32V128h32v224zm64 0h-32V128h32v224zm64 0h-32V128h32v224zm64 32h-32V128h32v256z" />',
  viewBox: "0 0 512 512"
};
var barcodeScannerIcon = {
  name: "barcode-scanner",
  content: '<path d="M32 96H0V0h96v32H32v64zm0 288H0v96h96v-32H32v-64zM416 0v32h64v64h32V0h-96zm64 448h-64v32h96v-96h-32v64zm-192-32h32V288h-32v128zm32-352h-32v128h32V64zm-64 0h-32v128h32V64zM128 416h64V288h-64v128zm-64 0h32V288H64v128zM192 64h-64v128h64V64zm32 352h32V288h-32v128zM64 64v128h32V64H64zm384 0h-32v128h32V64zm0 352V288h-32v128h32zm-96 0h32V288h-32v128zm32-352h-32v128h32V64zm96 160H32v32h448v-32z" />',
  viewBox: "0 0 512 512"
};
var qrCodeOutlineIcon = {
  name: "qr-code-outline",
  content: '<path d="M192 224v32h-32v-32h32zm-64 64h32v-32h-32v32zm-32-64v32h32v-32H96zm-32 64h32v-32H64v32zm128 0h32v-32h-32v32zm64-64h-32v32h32v-32zm32-32h-32v32h32v-32zm-64-32v32h32v-32h-32zm64-32h-32v32h32v-32zm-64-32v32h32V96h-32zm64-32h-32v32h32V64zm32 192v-32h-32v32h32zm-96 32v32h32v-32h-32zm64-32h-32v32h32v-32zm0 64h-32v32h32v-32zm-64 32v32h32v-32h-32zm32 32v32h32v-32h-32zm-32 64h32v-32h-32v32zm64-96v32h32v-32h-32zm32-32v-32h-32v32h32zm32-32v-32h-32v32h32zm32-64h-32v32h32v-32zm32 64v-32h-32v32h32zm32-64h-32v32h32v-32zm-64 96v-32h-32v32h32zm-32 32v-32h-32v32h32zm0 32h32v-32h-32v32zm32-32h32v-32h-32v32zm64-32v-32h-32v32h32zm-128 64v32h32v-32h-32zm-32 64h32v-32h-32v32zm64 0h32v-32h-32v32zm32-32h32v-32h-32v32zm64-32v-32h-32v32h32zm0 64v-32h-32v32h32zM512 0v512H0V0h512zm-32 32H32v448h448V32zm-32 160H320V64h128v128zm-32-32-.5-64H352v64h64zm-224 32H64V64h128v128zm-32-32-.5-64H96v64h64zm32 288H64V320h128v128zm-32-32-.5-64H96v64h64z" />',
  viewBox: "0 0 512 512"
};
var qrCodeIcon = {
  name: "qr-code",
  content: '<path d="M320 0v192h192V0H320zm160 160H352V32h128v128zm-32-32h-64V64h64v64zM0 0v192h192V0H0zm160 160H32V32h128v128zm-32-32H64V64h64v64zM0 320v192h192V320H0zm160 160H32V352h128v128zm-32-32H64v-64h64v64zm32-224h32v32h-32v-32zm0 64h-32v-32h32v32zm-64-64h32v32H96v-32zm-32 32H32v-32h32v32zm32 32H64v-32h32v32zm128 0h-32v-32h32v32zm32-32h-32v-32h32v32zm0-64h32v32h-32v-32zm0 0h-32v-32h32v32zm0-64h32v32h-32v-32zm0 0h-32V96h32v32zm0-64h32v32h-32V64zm0 0h-32V32h32v32zm64 192h-32v-32h32v32zm-96 32h32v32h-32v-32zm64 0h-32v-32h32v32zm0 64h-32v-32h32v32zm-32 32h-32v-32h32v32zm0 0h32v32h-32v-32zm0 64h-32v-32h32v32zm64-64h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h32v32h-32v-32zm64 0h-32v-32h32v32zm32 32h-32v-32h32v32zm32-32h-32v-32h32v32zm-96 32h32v32h-32v-32zm0 64h-32v-32h32v32zm0 0h32v32h-32v-32zm32-32h32v32h-32v-32zm32-32h32v32h-32v-32zm-96 96h32v32h-32v-32zm0 64h-32v-32h32v32zm-32 32h-32v-32h32v32zm192-192h-32v-32h32v32zM352 416h32v32h-32v-32zm0 64h-32v-32h32v32zm64-64h-32v-32h32v32zm32-96h32v32h-32v-32zm0 64h-32v-32h32v32zm-32 32h32v32h-32v-32zm0 64h-32v-32h32v32zm64-64h-32v-32h32v32zm0 64h-32v-32h32v32zm32-32h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32v-32h32v32zM256 512h-32v-32h32v32zm64 0h-32v-32h32v32zm32-32h32v32h-32v-32zm64 0h32v32h-32v-32zm96 32h-32v-32h32v32z" />',
  viewBox: "0 0 512 512"
};
var qrCodeScannerIcon = {
  name: "qr-code-scanner",
  content: '<path d="M512 0v96h-32V32h-64V0h96zm-32 448h-64v32h96v-96h-32v64zM64 64h128v128H64V64zm32 96h64V96H96v64zM32 32h64V0H0v96h32V32zm0 224h448v-32H32v32zm0 128H0v96h96v-32H32v-64zM288 96h-32v32h32V96zm-64-32v32h32V64h-32zm224 128H320V64h128v128zm-32-96h-64v64h64V96zm-128 96v-32h-32v32h32zm-32-64h-32v32h32v-32zM64 288h128v128H64V288zm32 96h64v-64H96v64zm192-64h-32v32h32v-32zm-64-32v32h32v-32h-32zm32 128h32v-32h-32v32zm-32-64v32h32v-32h-32zm96-64h-32v32h32v-32zm-32 64v32h32v-32h-32zm64 0v-32h-32v32h32zm-32 64h32v-32h-32v32zm64-128h-32v32h32v-32zm-32 64v32h32v-32h-32zm64 0v-32h-32v32h32zm0 64v-32h-32v32h32zm32-128h-32v32h32v-32zm0 96v-32h-32v32h32z" />',
  viewBox: "0 0 512 512"
};
var barcodeQrCodeScannerIcon = {
  name: "barcode-qr-code-scanner",
  content: '<path d="M256 288h32v128h-32V288zm64 128h64V288h-64v128zm128 0V288h-32v128h32zM32 32h64V0H0v96h32V32zm0 352H0v96h96v-32H32v-64zM416 0v32h64v64h32V0h-96zm64 448h-64v32h96v-96h-32v64zm0-224H32v32h448v-32zM288 64h-32v128h32V64zm96 0h-64v128h64V64zm64 0h-32v128h32V64zM64 64h96v96H64V64zm32 64h32V96H96v32zm128 32h-32v32h32v-32zm0-96h-32v64h32V64zM64 320h96v96H64v-96zm32 64h32v-32H96v32zm96 0v32h32v-64h-32v32zm0-64h32v-32h-32v32z" />',
  viewBox: "0 0 512 512"
};
var signatureIcon = {
  name: "signature",
  content: '<path d="M32 448h448v32H32v-32zM448 32H288v64h160V32zm-96 340.9L256 224l32-96h160l32 96-96 148.9V416h-32v-43.1zm0-59.1V256h32v57.8l60.8-94.3-19.9-59.5H311.1l-19.9 59.6 60.8 94.2zM78.8 377.3c8.7-10.3 23.9-25.6 37.2-17.3 14.9 9.3 25.1 42.1 56.9 43.8 27.2-.6 18.9-34.6 36.7-33.2 16.6 0 19.5 47.8 46.5 47.9 25.7.1 37.4-14.5 37.3-28 .1-29-62.5-87.7-85.4-98-21.4-9.6-34-2.3-39.7 6-5.3 7.9 9.3 34.5-13.7 41.2-17.3 1.5-29.2-33.2-62.1-33.2S77 354.1 32 352c13.1 6 32.8 42 46.8 25.3z" />',
  viewBox: "0 0 512 512"
};
var handIcon = {
  name: "hand",
  content: '<path d="M442.5 130.7c-15.5-6.7-33.7-.2-41.4 15.1-8.2 21.3-23.3 79.9-25.8 87.6-2.1 6.5-5 12-11.3 9.7-4.7-1.7-3.5-7.2-2.4-12.6l2.7-17 18.1-112.4c2.8-17.4-9-33.8-26.5-36.6-17.4-2.8-33.8 9-36.6 26.5L304 197.9s-2.1 14.1-3 18.7c-1 5.2-1.4 12.3-7.7 11.9-5-.3-5.3-3.8-5.3-7.3V64c0-17.6-14.2-31.9-31.8-32h.1-.3c-17.7 0-32 14.3-32 32v.4c0 1.1.9 140.6.6 149.7-.2 5.4-.7 9.5-6.8 10.3-7.8 1.1-8.6-8-8.6-8l-3.1-20.9v.7L190 90.8v.1c-2.6-17.5-18.9-29.5-36.2-26.9-17.5 2.6-29.5 18.9-26.9 36.2 0 .1 0 .2.1.3l24.8 165.3 2.4 15.9c.5 3.2-.7 6.6-3.3 8.6l-.1.1c-4.1 3.1-10 2.5-13.5-1.4l-12.2-13.2-37.3-41-.1-.1c-11.9-13-32.1-14-45.3-2.1-13 11.9-14 32.1-2.1 45.2l55.7 61s34.1 49 62.5 88.4c28.3 39.3 72.3 52.4 129.5 52.4s113.9-21.8 126.9-95.4c13.7-78.5 6.5-107.9 23.7-150.4 11.6-28.9 15.1-45.8 21.1-63.2 5.4-15.6-1.9-33.3-17.2-39.9z" />',
  viewBox: "0 0 512 512"
};
var pointerIcon = {
  name: "pointer",
  content: '<path d="m285.5 326.1 43.9 124.4-83.5 29.5-43.8-124.2L128 416V32l256 288-98.5 6.1z" />',
  viewBox: "0 0 512 512"
};
var stickIcon = {
  name: "stick",
  content: '<path d="M192 96c0-17.7-14.3-32-32-32H96c-17.7 0-32 14.3-32 32v32h128V96zm128 160c0 35.3-28.7 64-64 64s-64-28.7-64-64v-96H64v96c0 106 86 192 192 192s192-86 192-192v-96H320v96zm96-192h-64c-17.7 0-32 14.3-32 32v32h128V96c0-17.7-14.3-32-32-32z" />',
  viewBox: "0 0 512 512"
};
var unstickIcon = {
  name: "unstick",
  content: '<path d="M290.6 131.4c12.4-12.4 12.4-32.6 0-45l-45-45c-12.4-12.4-32.6-12.4-45 0L178 63.8l90.1 90 22.5-22.4zM268.1 334c-24.9 24.9-65.2 24.9-90.1 0s-24.9-65.2 0-90.1l67.5-67.5-90-90.1L88 153.9C13.4 228.5 13.4 349.4 88 424s195.5 74.6 270.1 0l67.5-67.5-90-90.1-67.5 67.6zm202.6-67.5-45-45c-12.4-12.4-32.6-12.4-45 0L358.2 244l90 90 22.5-22.5c12.4-12.4 12.4-32.6 0-45z" />',
  viewBox: "0 0 512 512"
};
var setColumnPositionIcon = {
  name: "set-column-position",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM192 416H96V96h96v320zm224 0H224v-32h192v32zm0-64H224v-64h192v64zm0-96H224v-64h192v64zm0-96H224V96h192v64z" />',
  viewBox: "0 0 512 512"
};
var clockArrowRotateIcon = {
  name: "clock-arrow-rotate",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256h32c0-105.9 86.1-192 192-192s192 86.1 192 192-86.1 192-192 192c-57 0-108.3-25-143.5-64.5L176 320H32v144l57.8-57.8C130.8 451.5 190 480 256 480c123.7 0 224-100.3 224-224S379.7 32 256 32Zm-32 96v160h160v-32H256V128h-32Z" />',
  viewBox: "0 0 512 512"
};
var playIcon = {
  name: "play",
  content: '<path d="M0 512V0l512 256L0 512z" />',
  viewBox: "0 0 512 512"
};
var pauseIcon = {
  name: "pause",
  content: '<path d="M320 0h160v512H320V0zM32 512h160V0H32v512z" />',
  viewBox: "0 0 512 512"
};
var stopIcon = {
  name: "stop",
  content: '<path d="M512 512H0V0h512v512z" />',
  viewBox: "0 0 512 512"
};
var rewindIcon = {
  name: "rewind",
  content: '<path d="M256 256 512 96v320L256 256zm0 160V96L0 256l256 160z" />',
  viewBox: "0 0 512 512"
};
var forwardIcon = {
  name: "forward",
  content: '<path d="M0 416V96l256 160L0 416zm512-160L256 96v320l256-160z" />',
  viewBox: "0 0 512 512"
};
var volumeDownIcon = {
  name: "volume-down",
  content: '<path d="M0 352h96l128 128V32L96 160H0v192zm288 28V132c55.2 14.2 96 64.3 96 124s-40.8 109.8-96 124z" />',
  viewBox: "0 0 512 512"
};
var volumeUpIcon = {
  name: "volume-up",
  content: '<path d="M0 352h96l128 128V32L96 160H0v192zm288 28V132c55.2 14.2 96 64.3 96 124s-40.8 109.8-96 124zm0-380v44.8c45.2 0 88.3 20.8 121.2 58.4C444.6 143.6 464 197.8 464 256s-19.4 112.4-54.8 152.8c-33 37.7-76 58.4-121.2 58.4V512c123.7 0 224-114.6 224-256S411.7 0 288 0z" />',
  viewBox: "0 0 512 512"
};
var volumeMuteIcon = {
  name: "volume-mute",
  content: '<path d="M96 160 224 32v448L96 352H0V160h96zm416 29.3L466.7 144 400 210.7 333.2 144 288 189.3l66.7 66.7-66.7 66.7 45.3 45.3 66.7-66.7 66.7 66.7 45.3-45.3-66.8-66.7 66.8-66.7z" />',
  viewBox: "0 0 512 512"
};
var hdIcon = {
  name: "hd",
  content: '<path d="M480 64H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h448c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32zM256 384h-64v-96h-64v96H64V128h64v96h64v-96h64v256zm210.3-68.9c-5.1 16.2-11.8 29.4-19.8 39.1-8.2 9.8-18.2 17.4-29.8 22.4-11.5 4.9-26.3 7.4-43.9 7.4H288V128h82.6c20.3 0 35.4 2.2 46.1 6.8 10.7 4.6 20.6 12.2 29.5 22.8 8.7 10.5 15.7 24.1 20.6 40.6 4.8 16.2 7.3 36.5 7.3 60.3-.1 21.5-2.7 40.6-7.8 56.6zm-54.2-94.2c2.6 8.5 3.9 20.5 3.9 35.6 0 14.5-1.3 26.3-3.9 35.1-2.5 8.4-5.5 14.4-8.9 18-3.3 3.5-7.5 6-12.8 7.7-3.8 1.2-11.8 2.7-28.3 2.7H336V192h12.9c21.4 0 30.6.9 34.5 1.7 6.9 1.4 12.6 4.1 17.5 8.4 4.9 4.5 8.7 10.8 11.2 18.8z" />',
  viewBox: "0 0 512 512"
};
var closedCaptionsIcon = {
  name: "closed-captions",
  content: '<path d="M480 64H32S0 64 0 96v320c0 32 32 32 32 32h448c32 0 32-32 32-32V96s0-32-32-32zM240 205c-6.1-4.5-13.5-7.8-21.9-10.1-8.5-2.3-17.1-3.5-25.8-3.5-18 0-32.2 5.8-42.6 17.4-10.4 11.6-15.6 27.4-15.6 47.3 0 19.8 5.2 35.4 15.6 46.9 10.4 11.5 24.3 17.2 41.7 17.2 16.1 0 32.3-4.6 47.6-13.8V373c-17.2 7.4-38.2 11-62.1 11-23.4 0-43.6-5-60.6-15.1s-29.9-24.4-38.9-43-13.4-40-13.4-64.3c0-26.1 5-49.4 15-69.7 10-20.4 24.2-36.1 42.5-47.2s39.4-16.7 63.2-16.7c19 0 37.4 2.6 55.3 7.8V205zm208 0c-6.1-4.5-13.5-7.8-21.9-10.1-8.5-2.3-17.1-3.5-25.8-3.5-18 0-32.2 5.8-42.6 17.4-10.4 11.6-15.6 27.4-15.6 47.3 0 19.8 5.2 35.4 15.6 46.9s24.3 17.2 41.7 17.2c16.1 0 32.3-4.6 47.6-13.8V373c-17.2 7.4-38.2 11-62.1 11-23.4 0-43.6-5-60.6-15.1s-29.9-24.4-38.9-43-13.4-40-13.4-64.3c0-26.1 5-49.4 15-69.7 10-20.4 24.2-36.1 42.5-47.2s39.4-16.7 63.2-16.7c19 0 37.4 2.6 55.3 7.8V205z" />',
  viewBox: "0 0 512 512"
};
var playlistIcon = {
  name: "playlist",
  content: '<path d="M0 256h320v64H0v-64zM512 64H0V0h512v64zm-128 64.8V397c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V193h96v-65l-128 .8zM0 128v64h320v-64H0z" />',
  viewBox: "0 0 512 512"
};
var musicNotesIcon = {
  name: "music-notes",
  content: '<path d="M160 170v-64m0-.2v259c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V162.5l256-59.1v165.4c-13.4-8-30-12.8-48-12.8-44.2 0-80 28.7-80 64s35.8 64 80 64 80-28.7 80-64V32l-320 73.8z" />',
  viewBox: "0 0 512 512"
};
var playSmIcon = {
  name: "play-sm",
  content: '<path d="M96 416V96l320 160L96 416z" />',
  viewBox: "0 0 512 512"
};
var pauseSmIcon = {
  name: "pause-sm",
  content: '<path d="M288 96h96v320h-96V96zM96 416h96V96H96v320z" />',
  viewBox: "0 0 512 512"
};
var stopSmIcon = {
  name: "stop-sm",
  content: '<path d="M416 416H96V96h320v320z" />',
  viewBox: "0 0 512 512"
};
var heartOutlineIcon = {
  name: "heart-outline",
  content: '<path d="M447.2 96.8c-43.7-43.7-114.7-43.7-158.4 0L256 129.6l-32.8-32.8c-43.7-43.7-114.7-43.7-158.4 0s-43.7 116.3 0 160l32.8 32.8L256 448l158.4-158.4 32.8-32.8c43.7-43.7 43.7-116.3 0-160zm-22.6 137.4L256 402.7 87.4 234.2C72.3 219.1 64 198.7 64 176.8s8.3-42.3 23.4-57.4C102.5 104.3 122.6 96 144 96s41.5 8.3 56.6 23.4l55.4 55.4 55.4-55.4C326.5 104.3 346.6 96 368 96s41.5 8.3 56.6 23.4c15.1 15.1 23.4 35.5 23.4 57.4s-8.3 42.3-23.4 57.4z" />',
  viewBox: "0 0 512 512"
};
var heartIcon = {
  name: "heart",
  content: '<path d="m447.2 256.8-32.8 32.8L256 448 97.6 289.6l-32.8-32.8c-43.7-43.7-43.7-116.3 0-160s114.7-43.7 158.4 0l32.8 32.8 32.8-32.8c43.7-43.7 114.7-43.7 158.4 0s43.7 116.3 0 160z" />',
  viewBox: "0 0 512 512"
};
var starOutlineIcon = {
  name: "star-outline",
  content: '<path d="M480 202.4 319.1 188 256 32l-63.1 156L32 202.4l122 111.7L117.2 480 256 391.5 394.8 480 358 314.1l122-111.7zM256 353.6l-90.8 57.9 24-108.5-82.1-75.2 108.1-9.7L256 117.3l40.8 100.8 108.1 9.7-82.1 75.2 24.1 108.5-90.9-57.9z" />',
  viewBox: "0 0 512 512"
};
var starIcon = {
  name: "star",
  content: '<path d="M256 391.5 117.2 480 154 314.1 32 202.4 192.9 188 256 32l63.1 156L480 202.4 358 314.1 394.8 480 256 391.5z" />',
  viewBox: "0 0 512 512"
};
var checkboxIcon = {
  name: "checkbox",
  content: '<path d="M64 64v384h384V64H64zm352 352H96V96h320v320z" />',
  viewBox: "0 0 512 512"
};
var checkboxCheckedIcon = {
  name: "checkbox-checked",
  content: '<path d="M64 64v384h384V64H64zm352 352H96V96h320v320zm-77.3-269.3L384 192 224 352l-96-96 45.3-45.3 50.7 50.7 114.7-114.7z" />',
  viewBox: "0 0 512 512"
};
var checkboxIndeterminateIcon = {
  name: "checkbox-indeterminate",
  content: '<path d="M128 128h256v256H128V128zM64 64v384h384V64H64zm352 352H96V96h320v320z" />',
  viewBox: "0 0 512 512"
};
var checkboxNullIcon = {
  name: "checkbox-null",
  content: '<path d="M192 64h128v32H192V64zm224 0h-64v32h64v64h32V64h-32zm0 256h32V192h-32v128zm0 96h-64v32h96v-96h-32v64zm-224 32h128v-32H192v32zm-96-96H64v96h96v-32H96v-64zm0-160H64v128h32V192zM64 64v96h32V96h64V64H64z" />',
  viewBox: "0 0 512 512"
};
var circleIcon = {
  name: "circle",
  content: '<path d="M384 256c0 70.7-57.3 128-128 128s-128-57.3-128-128 57.3-128 128-128 128 57.3 128 128z" />',
  viewBox: "0 0 512 512"
};
var radiobuttonIcon = {
  name: "radiobutton",
  content: '<path d="M256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64zm0 352c-88.4 0-160-71.6-160-160S167.6 96 256 96s160 71.6 160 160-71.6 160-160 160z" />',
  viewBox: "0 0 512 512"
};
var radiobuttonCheckedIcon = {
  name: "radiobutton-checked",
  content: '<path d="M351.6 255.3c0 53.2-43.1 96.4-96.4 96.4s-96.4-43.1-96.4-96.4 43.1-96.4 96.4-96.4 96.4 43.2 96.4 96.4zM256 64C150 64 64 150 64 256s86 192 192 192 192-86 192-192S362 64 256 64zm0 352c-88.4 0-160-71.6-160-160S167.6 96 256 96s160 71.6 160 160-71.6 160-160 160z" />',
  viewBox: "0 0 512 512"
};
var bellIcon = {
  name: "bell",
  content: '<path d="M192 416h128c0 35.3-28.7 64-64 64s-64-28.7-64-64zm160-256c0-42-26.9-77.6-64.4-90.7.3-1.7.4-3.5.4-5.3 0-17.7-14.3-32-32-32s-32 14.3-32 32c0 1.8.2 3.6.4 5.3C186.9 82.4 160 118 160 160c0 88.4-43 160-96 160v64h384v-64c-53 0-96-71.6-96-160z" />',
  viewBox: "0 0 512 512"
};
var infoCircleIcon = {
  name: "info-circle",
  content: '<path d="M288 352h32v32H192v-32h32v-96h-32v-32h96v128zm0-224h-64v64h64v-64zm192 128c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224zm-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z" />',
  viewBox: "0 0 512 512"
};
var questionCircleIcon = {
  name: "question-circle",
  content: '<path d="M352 192c0 45.2-23.4 65.9-40.6 81-15.1 13.3-23.4 20.7-23.4 47h-64c0-55.2 27.1-79.2 45.1-95 13.8-12.1 18.9-16.7 18.9-33 0-17.6-14.4-32-32-32s-32 14.4-32 32h-64c0-53 43-96 96-96s96 43 96 96zM224 416h64v-64h-64v64zm256-160c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224zm-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z" />',
  viewBox: "0 0 512 512"
};
var exclamationCircleIcon = {
  name: "exclamation-circle",
  content: '<path d="M224 128h64v160h-64V128zm0 256h64v-64h-64v64zm256-128c0 123.7-100.3 224-224 224S32 379.7 32 256 132.3 32 256 32s224 100.3 224 224zm-32 0c0-106-86-192-192-192S64 150 64 256s86 192 192 192 192-86 192-192z" />',
  viewBox: "0 0 512 512"
};
var cameraIcon = {
  name: "camera",
  content: '<path d="M448 128h-64l-64-64H192l-64 64H64c-17.6 0-32 14.4-32 32v288c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V160c0-17.6-14.4-32-32-32zM256 416c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112zm64-112c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64z" />',
  viewBox: "0 0 512 512"
};
var imageIcon = {
  name: "image",
  content: '<path d="M304 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm144-96H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32zm-.1 272-64-64-80 80L176 224 64 336V96.1l.1-.1h383.8l.1.1-.1 239.9z" />',
  viewBox: "0 0 512 512"
};
var imageExportIcon = {
  name: "image-export",
  content: '<path d="M384 384v-79.9l-32-32-80 80-128-128-112 112v-240l.1-.1h383.8l.1.1-.1 223.9H448V96c0-17.6-14.4-32-32-32H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h256v-64h96zM272 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm48 288h96v64l96-80-96-80v64h-96v32z" />',
  viewBox: "0 0 512 512"
};
var zoomActualSizeIcon = {
  name: "zoom-actual-size",
  content: '<path d="M0 32v128L128 32H0zm384 0 128 128V32H384zm-260.6 96c-15.1 0-27.4 12.3-27.4 27.4v201.2c0 15.1 12.3 27.4 27.4 27.4h265.2c15.1 0 27.4-12.3 27.4-27.4V155.4c0-15.1-12.3-27.4-27.4-27.4H123.4zM384 160v160l-48-64-48 64-80-96-80 96V160h256zm-96 32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zM0 352v128h128L0 352zm512 0L384 480h128V352z" />',
  viewBox: "0 0 512 512"
};
var zoomBestFitIcon = {
  name: "zoom-best-fit",
  content: '<path d="M388.6 128H123.4c-15.1 0-27.4 12.3-27.4 27.4v201.2c0 15.1 12.3 27.4 27.4 27.4h265.2c15.1 0 27.4-12.3 27.4-27.4V155.4c0-15.1-12.3-27.4-27.4-27.4zM384 320l-48-64-48 64-80-96-80 96V160h256v160zM0 160l96 96-96 96V160zm160 320 96-96 96 96H160zM352 32l-96 96-96-96h192zm160 128v192l-96-96 96-96zm-256 64c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32z" />',
  viewBox: "0 0 512 512"
};
var imageResizeIcon = {
  name: "image-resize",
  content: '<path d="M427.3 404.7 352 329.4V32H32v320h297.4l75.3 75.3L352 480h128V352l-52.7 52.7zM64 320V64h256v233.4L203.3 180.7 256 128H128v128l52.7-52.7L297.4 320H64z" />',
  viewBox: "0 0 512 512"
};
var cropIcon = {
  name: "crop",
  content: '<path d="M0 96h64v64H0V96zm448 256v64h64v-64h-64zm-32-224c0-17.6-14.4-32-32-32H192v64h160v320h64V128zM96 384c0 17.6 14.4 32 32 32h192v-64H160V32H96v352z" />',
  viewBox: "0 0 512 512"
};
var mirrorIcon = {
  name: "mirror",
  content: '<path d="M192 64H32v384h160V64zm-31 352s0 .1 0 0l-96.9.1-.1-.1V96.1l.1-.1H160v320h1zm95 64h-32V32h32v448zm32-416h160v384H288V64z" />',
  viewBox: "0 0 512 512"
};
var flipHorizontalIcon = {
  name: "flip-horizontal",
  content: '<path d="M448 448H288V64l160 384zm-384 0L224 64v384H64zm128-224-80 192h80V224z" />',
  viewBox: "0 0 512 512"
};
var flipVerticalIcon = {
  name: "flip-vertical",
  content: '<path d="M64 288h384L64 448V288zm0-224v160h384L64 64zm32 128v-80l192 80H96z" />',
  viewBox: "0 0 512 512"
};
var rotateIcon = {
  name: "rotate",
  content: '<path d="M256 448c8.2 0 16.2-.6 24-1.8v32.3c-7.9 1-15.9 1.5-24 1.5s-16.1-.5-24-1.5v-32.3c7.8 1.2 15.8 1.8 24 1.8zm-116-7c12.7 9.7 26.6 17.8 41.5 24l16.2-28c-15.1-5.9-29.1-14.1-41.5-24.1L140 441zm-61-78.5c6.3 14.9 14.4 28.8 24 41.5l28-16.2c-10-12.5-18.1-26.4-24.1-41.5L79 362.5zM256 128v64l128-80-128-80v64c-8.1 0-16.1.5-24 1.5-17.7 2.2-34.6 6.8-50.5 13.5-14.9 6.3-28.8 14.4-41.5 24-14 10.6-26.4 23-37 37-9.7 12.7-17.8 26.6-24 41.5-6.7 15.9-11.3 32.8-13.5 50.5-1 7.9-1.5 15.9-1.5 24s.5 16.1 1.5 24h32.3c-1.2-7.8-1.8-15.8-1.8-24s.6-16.2 1.8-24c1.8-11.9 4.9-23.4 9.2-34.3 5.9-15.1 14.1-29.1 24.1-41.5 7.4-9.3 15.8-17.7 25.1-25.1 12.5-10 26.4-18.1 41.5-24.1 10.9-4.3 22.4-7.4 34.3-9.2 7.8-1.2 15.8-1.8 24-1.8zm190.5 136h-32.3c1.2 7.8 1.8 15.8 1.8 24s-.6 16.2-1.8 24h32.3c1-7.9 1.5-15.9 1.5-24s-.5-16.1-1.5-24zm-65.6 123.8 28 16.2c9.7-12.7 17.8-26.6 24-41.5l-28-16.2c-5.8 15.1-14 29.1-24 41.5zM314.3 437l16.2 28c14.9-6.3 28.8-14.4 41.5-24l-16.2-28c-12.4 9.9-26.4 18.1-41.5 24z" />',
  viewBox: "0 0 512 512"
};
var rotateRightIcon = {
  name: "rotate-right",
  content: '<path d="M320 448V64l160 384H320zm-32 0H32l256-160v160zm-32-102.3L143.6 416H256v-70.3zM64 160v128h32v-96h96v64l96-80-96-80v64H64z" />',
  viewBox: "0 0 512 512"
};
var rotateLeftIcon = {
  name: "rotate-left",
  content: '<path d="M32 448 192 64v384H32zm192-160 256 160H224V288zm32 128h112.4L256 345.7V416zm64-256V96l-96 80 96 80v-64h96v96h32V160H320z" />',
  viewBox: "0 0 512 512"
};
var brushIcon = {
  name: "brush",
  content: '<path d="M32 480s46.4-5.6 96-16c22.3-4.7 46.9-14 70.7-37.7 56.9-56.9.2-112.9.2-112.9s-56.7-56.9-113.3-.2c-23.4 23.4-20.1 57.1-19.7 89.8.8 59.7-33.9 77-33.9 77zM470.7 64 448 41.3c-12.4-12.4-32.8-12.4-45.3 0L204.3 239.8c11.5 5.8 20.8 12.2 27.7 17.6 5.3 4.2 9.2 7.7 11.3 9.8l.8.8.8.8c2.1 2.1 5.6 5.9 9.7 11.1 5.4 6.8 11.8 16.2 17.6 27.6l23.5-23.5 174.9-174.9c12.5-12.3 12.5-32.7.1-45.1zM448 86.6 277.4 257.3c-4.8-5.8-8.6-9.9-10.6-11.9-2.3-2.3-6.3-6.1-12-10.7L425.4 64h.1L448 86.6z" />',
  viewBox: "0 0 512 512"
};
var paletteIcon = {
  name: "palette",
  content: '<path d="m206 256.6 160-160c-2.2-5.7-4.8-11.1-7.9-16.3-24.2-40.8-60.1-66-107.8-75.9-2.3-.5-4.7-1-7.1-1.4C192-5.8 143.1 4.8 96.5 34.6 49.3 64.7 19.2 107.2 6.1 162c-13 54.8-5.2 106.4 23.4 154.6 14.2 23.8 31.3 43.2 51.4 58.4 3.8-25.2 13.4-52 36.4-75 31.3-31.4 64-41.3 88.7-43.4zM288 64c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm-96-32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM64 256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm0-128c0-17.7 14.3-32 32-32s32 14.3 32 32-14.3 32-32 32-32-14.3-32-32zm438.7 12.9L480 118.3c-12.4-12.4-32.8-12.4-45.3 0L281.1 271.9c11.5 5.8 20.8 12.2 27.7 17.6 5.3 4.2 9.2 7.7 11.3 9.8l11.3 12.7c5.4 6.8 11.8 16.2 17.6 27.6l153.5-153.5c12.6-12.4 12.6-32.8.2-45.2zM354.3 289.3c-4.8-5.8-8.6-9.9-10.6-11.9-2.3-2.3-6.3-6.1-12-10.7L457.4 141h.1l22.5 22.5-125.7 125.8zm-78.7 169c-23.8 23.7-48.4 33-70.7 37.7-49.6 10.4-96 16-96 16s34.7-17.3 33.9-77c-.4-32.7-3.7-66.4 19.7-89.8 56.6-56.7 113.3.2 113.3.2s56.7 56-.2 112.9z" />',
  viewBox: "0 0 512 512"
};
var dropletIcon = {
  name: "droplet",
  content: '<path d="M256 384v32c-53 0-96-43-96-96h32c0 35.3 28.7 64 64 64zm160-72c0 92.8-71.6 168-160 168S96 404.8 96 312C96 181.3 256 32 256 32s160 149.3 160 280zm-32 0c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-47.8 64.3-73 122.8-73 169 0 75 57.4 136 128 136s128-61 128-136z" />',
  viewBox: "0 0 512 512"
};
var shapeLineIcon = {
  name: "shape-line",
  content: '<path d="M480 54.6 54.6 480 32 457.4 457.4 32 480 54.6z" />',
  viewBox: "0 0 512 512"
};
var brightnessContrastIcon = {
  name: "brightness-contrast",
  content: '<path d="M165.5 346.5c12.4 12.5 12.4 32.9 0 45.3l-22.6 22.6c-12.5 12.4-32.8 12.4-45.3 0-12.4-12.5-12.4-32.9 0-45.3l22.6-22.6c12.5-12.4 32.9-12.4 45.3 0zM256 128c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32s-32 14.4-32 32v32c0 17.6 14.4 32 32 32zm135.8 37.5 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6c-12.4 12.4-12.4 32.8 0 45.3 12.5 12.4 32.8 12.4 45.3 0zm-271.6 0c12.4 12.4 32.8 12.4 45.3 0 12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0-12.4 12.5-12.4 32.8 0 45.3l22.6 22.6zM128 256c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32s14.4 32 32 32h32c17.6 0 32-14.4 32-32zm263.8 90.5c-12.4-12.4-32.8-12.4-45.3 0-12.4 12.5-12.4 32.8 0 45.3l22.6 22.6c12.4 12.4 32.8 12.4 45.3 0 12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6zM448 224h-32c-17.6 0-32 14.4-32 32s14.4 32 32 32h32c17.6 0 32-14.4 32-32s-14.4-32-32-32zm-96 32c0 53-43 96-96 96s-96-43-96-96 43-96 96-96 96 43 96 96zm-32 0c0-35.3-28.7-64-64-64v128c35.3 0 64-28.7 64-64zm-64 128c-17.6 0-32 14.4-32 32v32c0 17.6 14.4 32 32 32s32-14.4 32-32v-32c0-17.6-14.4-32-32-32z" />',
  viewBox: "0 0 512 512"
};
var slidersIcon = {
  name: "sliders",
  content: '<path d="M480 96v32H285.3c-6.6 18.6-24.4 32-45.3 32s-38.7-13.4-45.3-32H32V96h162.7c6.6-18.6 24.4-32 45.3-32s38.7 13.4 45.3 32H480zm-112 96c-20.9 0-38.7 13.4-45.3 32H32v32h290.7c6.6 18.6 24.4 32 45.3 32s38.7-13.4 45.3-32H480v-32h-66.7c-6.6-18.6-24.4-32-45.3-32zM176 320c-20.9 0-38.7 13.4-45.3 32H32v32h98.7c6.6 18.6 24.4 32 45.3 32s38.7-13.4 45.3-32H480v-32H221.3c-6.6-18.6-24.4-32-45.3-32z" />',
  viewBox: "0 0 512 512"
};
var invertColorsIcon = {
  name: "invert-colors",
  content: '<path d="m320 32-64 48 64 48V96h64v64h-32l48 64 48-64h-32V64h-96V32zM32 64v192h192V64H32zm192 192v192h192V256H224zM64 96h128v128H64V96z" />',
  viewBox: "0 0 512 512"
};
var transparencyIcon = {
  name: "transparency",
  content: '<path d="M64 64v352h352V64H64zm32 32h96v96h96V96h96v96h-96v96h96v96h-96v-96h-96v96H96v-96h96v-96H96V96z" />',
  viewBox: "0 0 512 512"
};
var grayscaleIcon = {
  name: "grayscale",
  content: '<path d="M32 64C14.3 64 0 78.3 0 96v320c0 17.7 14.3 32 32 32h416c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32H32zm0 32h416v320H32V96zm48 32c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm64 0c-8.8 0-16 7.2-16 16v224c0 8.8 7.2 16 16 16s16-7.2 16-16V144c0-8.8-7.2-16-16-16zm0 4c6.6 0 12 5.4 12 12v224c0 6.6-5.4 12-12 12s-12-5.4-12-12V144c0-6.6 5.4-12 12-12zm-64 1c6.1 0 11 4.9 11 11v224c0 6.1-4.9 11-11 11s-11-4.9-11-11V144c0-6.1 4.9-11 11-11zm-64 2c5 0 9 4 9 9v224c0 5-4 9-9 9s-9-4-9-9V144c0-5 4-9 9-9zm-64 1c4.4 0 8 3.6 8 8v224c0 4.4-3.6 8-8 8s-8-3.6-8-8V144c0-4.4 3.6-8 8-8zm-64 4c2.2 0 4 1.8 4 4v224c0 2.2-1.8 4-4 4s-4-1.8-4-4V144c0-2.2 1.8-4 4-4z" />',
  viewBox: "0 0 512 512"
};
var blurIcon = {
  name: "blur",
  content: '<path d="M384 320c0 64-32 128-128 128-64 0-128-48-128-128 0-96 128-128 128-256 0 0 128 129.1 128 256z" />',
  viewBox: "0 0 512 512"
};
var sharpenIcon = {
  name: "sharpen",
  content: '<path d="M256 32 128 480h256L256 32zm0 116.5L341.6 448H170.4L256 148.5z" />',
  viewBox: "0 0 512 512"
};
var shapesIcon = {
  name: "shapes",
  content: '<path d="M480 32H160v131.204C86.969 178.029 32 242.594 32 320c0 88.365 71.635 160 160 160 77.406 0 141.972-54.969 156.797-128H480V32zM192 448c-70.692 0-128-57.308-128-128 0-59.643 40.793-109.758 96-123.967 1.173-.302 2.354-.583 3.539-.852.357-.081.717-.156 1.076-.234a125.086 125.086 0 0 1 3.764-.762 126.34 126.34 0 0 1 2.557-.448c.369-.061.736-.125 1.105-.184 2.423-.379 4.869-.69 7.335-.932.379-.037.759-.067 1.139-.101a132.167 132.167 0 0 1 3.913-.29c.872-.051 1.747-.091 2.623-.125.392-.015.782-.033 1.174-.045 1.254-.036 2.512-.06 3.775-.06 70.692 0 128 57.308 128 128 0 1.264-.023 2.521-.06 3.775-.012.393-.03.782-.045 1.174a126.511 126.511 0 0 1-.207 3.922c-.06.874-.13 1.744-.207 2.613-.034.38-.064.761-.102 1.14a127.326 127.326 0 0 1-.933 7.339c-.057.365-.121.728-.181 1.092a128.132 128.132 0 0 1-.683 3.785c-.17.86-.349 1.718-.535 2.571-.075.346-.147.692-.226 1.037a135.047 135.047 0 0 1-.855 3.552c-14.208 55.207-64.323 96-123.966 96zm256-128h-96c0-88.365-71.635-160-160-160V64h256v256z" />',
  viewBox: "0 0 512 512"
};
var roundCornersIcon = {
  name: "round-corners",
  content: '<path d="M448 320c0 70.692-57.308 128-128 128H192c-70.692 0-128-57.308-128-128V192c0-70.692 57.308-128 128-128h128c70.692 0 128 57.308 128 128v128z" />',
  viewBox: "0 0 512 512"
};
var bringToFrontIcon = {
  name: "bring-to-front",
  content: '<path d="M96 128V96h96V64H64v128h32v-64zm224 256h64V128H128v256h192zm96-64v96h-96v32h128V320h-32z" />',
  viewBox: "0 0 512 512"
};
var bringToBackIcon = {
  name: "bring-to-back",
  content: '<path d="M128 192h64V64H64v128h64zM96 96h64v64H96V96zm192 192h96V128H224v96h-96v160h160v-96zm128 32h-96v128h128V320h-32zm0 96h-64v-64h64v64z" />',
  viewBox: "0 0 512 512"
};
var bringForwardIcon = {
  name: "bring-forward",
  content: '<path d="M448 192v256H192V320H64V64h256v128h128zm-32 32h-96v96h-96v96h192V224z" />',
  viewBox: "0 0 512 512"
};
var bringBackwardIcon = {
  name: "bring-backward",
  content: '<path d="M192 192v256h256V192H192zm224 224H224V224h192v192zM320 64H64v256h96V160h160V64z" />',
  viewBox: "0 0 512 512"
};
var alignSelfStartIcon = {
  name: "align-self-start",
  content: '<path d="M31 32h32v448H31V32zm288 64H95v128h224V96zm128 192v128H95V288h352zm-32 32H127v64h288v-64z" />',
  viewBox: "0 0 512 512"
};
var alignSelfCenterIcon = {
  name: "align-self-center",
  content: '<path d="M255 288v-64h96V96h-96V32h-32v64h-96v128h96v64H63v128h160v64h32v-64h160V288H255zm128 96H95v-64h288v64z" />',
  viewBox: "0 0 512 512"
};
var alignSelfEndIcon = {
  name: "align-self-end",
  content: '<path d="M64 416h352V288H64v128zm32-96h288v64H96v-64zm96-224h224v128H192V96zm288-64v448h-32V32h32z" />',
  viewBox: "0 0 512 512"
};
var alignSelfStartAltIcon = {
  name: "align-self-start-alt",
  content: '<path d="M95 96h128v224H95V96zm192 0h128v352H287V96zm32 320h64V128h-64v288zM31 32v32h448V32H31z" />',
  viewBox: "0 0 512 512"
};
var alignSelfCenterAltIcon = {
  name: "align-self-center-alt",
  content: '<path d="M415 224V64H287v160h-64v-96H95v96H31v32h64v96h128v-96h64v160h128V256h64v-32h-64zm-32 0v160h-64V96h64v128z" />',
  viewBox: "0 0 512 512"
};
var alignSelfEndAltIcon = {
  name: "align-self-end-alt",
  content: '<path d="M479 449v32H31v-32h448zM223 193H95v224h128V193zm192 224H287V65h128v352zM383 97h-64v288h64V97z" />',
  viewBox: "0 0 512 512"
};
var thumbnailsUpIcon = {
  name: "thumbnails-up",
  content: '<path d="M352 32h96v96h-96V32zm-160 0h96v96h-96V32zM32 32h96v96H32V32zm0 160h416v256H32V192z" />',
  viewBox: "0 0 512 512"
};
var thumbnailsRightIcon = {
  name: "thumbnails-right",
  content: '<path d="M352 352h96v96h-96v-96zm0-160h96v96h-96v-96zm0-160h96v96h-96V32zM32 32h256v416H32V32z" />',
  viewBox: "0 0 512 512"
};
var thumbnailsDownIcon = {
  name: "thumbnails-down",
  content: '<path d="M352 352h96v96h-96v-96zm-160 0h96v96h-96v-96zm-160 0h96v96H32v-96zm0-320h416v256H32V32z" />',
  viewBox: "0 0 512 512"
};
var thumbnailsLeftIcon = {
  name: "thumbnails-left",
  content: '<path d="M32 32v96h96V32H32zm160 0v416h256V32H192zM32 192v96h96v-96H32zm0 160v96h96v-96H32z" />',
  viewBox: "0 0 512 512"
};
var fullscreenIcon = {
  name: "fullscreen",
  content: '<path d="M0 32h160v64H64v96H0V32zm64 288H0v160h160v-64H64v-96zM352 32v64h96v96h64V32H352zm96 384h-96v64h160V320h-64v96z" />',
  viewBox: "0 0 512 512"
};
var fullscreenExitIcon = {
  name: "fullscreen-exit",
  content: '<path d="M160 32H96v96H0v64h160V32zM96 480h64V320H0v64h96v96zm416-288v-64h-96V32h-64v160h160zm-96 192h96v-64H352v160h64v-96z" />',
  viewBox: "0 0 512 512"
};
var dropletSlashIcon = {
  name: "droplet-slash",
  content: '<path d="m317.9 431 23.2 23.2C316.5 470.6 287.3 480 256 480c-88.4 0-160-75.2-160-168 0-27.8 7.2-56.4 18.6-84.2l24.8 24.8C131.9 274 128 293.9 128 312c0 75 57.4 136 128 136 22.4 0 43.5-6.2 61.9-17zM256 416v-32c-35.3 0-64-28.7-64-64h-32c0 53 43 96 96 96zm224 41.4L457.4 480 32 54.6 54.6 32l108.7 108.7C207 77.7 256 32 256 32s160 149.3 160 280c0 24.1-4.9 47.1-13.6 67.8l77.6 77.6zM384 312c0-46.3-25.3-104.7-73-169-20-27-40.3-49.8-55-65.4-14.7 15.6-34.9 38.5-55 65.4-1.4 1.9-2.7 3.7-4.1 5.6-.8 1.1-1.5 2.1-2.3 3.2l-1.5 2.1-3 4.2c-.2.3-.4.5-.6.8-1 1.5-2.1 3-3.1 4.5-.1.1-.1.2-.2.3l191.2 191.2c.5-1.6 1-3.3 1.4-4.9 0-.2.1-.4.1-.5.4-1.5.8-2.9 1.1-4.4.1-.3.1-.6.2-.9.3-1.4.6-2.7.9-4.1.1-.4.2-.8.2-1.2.2-1.3.5-2.6.7-3.9.1-.5.2-1 .2-1.5.2-1.2.3-2.5.5-3.7.1-.5.1-1.1.2-1.6l.3-3.6c0-.6.1-1.1.1-1.7.1-1.3.2-2.5.2-3.8 0-.5.1-1 .1-1.6.4-1.9.4-3.7.4-5.5z" />',
  viewBox: "0 0 512 512"
};
var photosIcon = {
  name: "photos",
  content: '<path d="M256 288c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm96-64v192c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32V224c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32zm-31.8 0c-.1-.1-.1-.1 0 0l-256.1-.1-.1.1v149.9l74.6-70 85.3 80 53.3-50 42.7 40 .3-149.9zm63.8-96H128c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V160c0-17.7-14.3-32-32-32zm64-64H192c-17.7 0-32 14.3-32 32h288v224c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32z" />',
  viewBox: "0 0 512 512"
};
var alignToGridIcon = {
  name: "align-to-grid",
  content: '<path d="M320 320H128V128h192v192zM96 0H64v512h32V0zm352 0h-32v512h32V0zm64 64H0v32h512V64zm0 352H0v32h512v-32z" />',
  viewBox: "0 0 512 512"
};
var sizeToGridIcon = {
  name: "size-to-grid",
  content: '<path d="M384 384H128V128h256v256zM96 0H64v512h32V0zm352 0h-32v512h32V0zm64 64H0v32h512V64zm0 352H0v32h512v-32z" />',
  viewBox: "0 0 512 512"
};
var makeSameSizeIcon = {
  name: "make-same-size",
  content: '<path d="M288 192v96h-96v-96h96zM240.1 0l-48.4 64H224v64h33V64h31.6L240.1 0zM256 416v-64h-32v64h-32l48 64 48-64h-32zm224-175.9-64-48.4V224h-64v33h64v31.6l64-48.5zM64 224v-32L0 240l64 48v-32h64v-32H64zM128 0H0v128h32V32h96V0zm320 0h-96v32h96v96h32V0h-32zM32 448v-96H0v128h128v-32H32zm416-96v96h-96v32h128V352h-32z" />',
  viewBox: "0 0 512 512"
};
var makeSameWidthIcon = {
  name: "make-same-width",
  content: '<path d="M480 128H0V32h480v96zm-192 96h-96v96h96v-96zm192 48.1-64-48.4V256h-64v33h64v31.6l64-48.5zM64 256v-32L0 272l64 48v-32h64v-32H64zm384 96v96h-96v32h128V352h-32zM32 448v-96H0v128h128v-32H32z" />',
  viewBox: "0 0 512 512"
};
var makeSameHeightIcon = {
  name: "make-same-height",
  content: '<path d="M128 0v480H32V0h96zm96 192v96h96v-96h-96zM272.1 0l-48.4 64H256v64h33V64h31.6L272.1 0zM288 416v-64h-32v64h-32l48 64 48-64h-32zM448 0h-96v32h96v96h32V0h-32zm0 352v96h-96v32h128V352h-32z" />',
  viewBox: "0 0 512 512"
};
var makeHorizontalSpacingEqualIcon = {
  name: "make-horizontal-spacing-equal",
  content: '<path d="M480 160v160h-96v-64h-96v160h-96V256H96v96H32V128h64v96h96V64h96v160h96v-64h96z" />',
  viewBox: "0 0 512 512"
};
var increaseHorizontalSpacingIcon = {
  name: "increase-horizontal-spacing",
  content: '<path d="M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96h96zM335.7 352l-22.6 22.6 57.4 57.4-57.4 57.4 22.6 22.6 80-80-80-80zM64 432l80 80 22.6-22.6-57.3-57.4 57.4-57.4L144 352l-80 80z" />',
  viewBox: "0 0 512 512"
};
var decreaseHorizontalSpacingIcon = {
  name: "decrease-horizontal-spacing",
  content: '<path d="M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96h96zM111.6 352 89 374.6l57.4 57.4L89 489.4l22.6 22.6 80-80-80-80zM288 432l80 80 22.6-22.6-57.3-57.4 57.4-57.4L368 352l-80 80z" />',
  viewBox: "0 0 512 512"
};
var removeHorizontalSpacingIcon = {
  name: "remove-horizontal-spacing",
  content: '<path d="M480 96v160h-96v-64h-96v160h-96V192H96v96H32V64h64v96h96V0h96v160h96V96h96zm-32.5 278.2-22.6-22.6-57.4 57.4-57.4-57.4-22.6 22.6 57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4 57.4-57.4zm-256 0-22.6-22.6-57.4 57.4-57.4-57.4-22.6 22.6 57.4 57.4L31.5 489l22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4 57.4-57.4z" />',
  viewBox: "0 0 512 512"
};
var makeVerticalSpacingEqualIcon = {
  name: "make-vertical-spacing-equal",
  content: '<path d="M256 320v96h96v64H128v-64h96v-96H64v-96h160v-96h-64V32h160v96h-64v96h160v96H256z" />',
  viewBox: "0 0 512 512"
};
var increaseVerticalSpacingIcon = {
  name: "increase-vertical-spacing",
  content: '<path d="M192 320v96h96v64H64v-64h96v-96H0v-96h160v-96H96V32h160v96h-64v96h160v96H192zm320 48.1-22.6-22.6-57.4 57.3-57.4-57.4-22.6 22.7 80 80 80-80zM432 96l-80 80 22.6 22.6 57.4-57.4 57.4 57.4L512 176l-80-80z" />',
  viewBox: "0 0 512 512"
};
var decreaseVerticalSpacingIcon = {
  name: "decrease-vertical-spacing",
  content: '<path d="M191 320v96h96v64H63v-64h96v-96H-1v-96h160v-96H95V32h160v96h-64v96h160v96H191zm160 105.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-80-80-80 80zm80-226.8 80-80L488.4 96 431 153.4 373.6 96 351 118.6l80 80z" />',
  viewBox: "0 0 512 512"
};
var removeVerticalSpacingIcon = {
  name: "remove-vertical-spacing",
  content: '<path d="M192 320v96h96v64H64v-64h96v-96H0v-96h160v-96H96V32h160v96h-64v96h160v96H192zm320 22.6L489.4 320 432 377.4 374.6 320 352 342.6l57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4 57.4-57.4zm0-288L489.4 32 432 89.4 374.6 32 352 54.6l57.4 57.4-57.4 57.4 22.6 22.6 57.4-57.4 57.4 57.4 22.6-22.6-57.4-57.4L512 54.6z" />',
  viewBox: "0 0 512 512"
};
var eyedropperIcon = {
  name: "eyedropper",
  content: '<path d="m461.1 56.9-6.2-6.2c-25-25-65.5-25-90.5 0l-60.8 60.8-4.3-4.3c-6.2-6.2-16.4-6.2-22.6 0l-9.4 9.4c-6.2 6.2-6.2 16.4 0 22.6l4.3 4.3L70.8 344.4c-8.2 8.2-14 18.5-16.8 29.7l-21.5 85.7c-2.2 8.6 3.1 17.4 11.7 19.5 2.6.6 5.2.6 7.8 0l85.7-21.4c11.3-2.8 21.5-8.6 29.7-16.8l200.8-200.8 4.4 4.4c6.2 6.2 16.4 6.2 22.6 0l9.4-9.4c6.2-6.2 6.2-16.4 0-22.6l-4.4-4.4 60.8-60.8c25-25 24.9-65.5.1-90.6zM224 320h-64l144-144 32 32-112 112z" />',
  viewBox: "0 0 512 512"
};
var snapGridIcon = {
  name: "snap-grid",
  content: '<path d="M480 128V96h-96V0h-32v96h-96V0h-32v96h-96V0H96v96H0v32h96v96H0v32h96v96H0v32h96v96h32v-96h96v96h32v-96h96v96h32v-96h96v-32h-96v-96h96v-32h-96v-96h96zm-352 0h96v96h-96v-96zm0 224v-96h96v96h-96zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96z" />',
  viewBox: "0 0 512 512"
};
var snapToGridlinesIcon = {
  name: "snap-to-gridlines",
  content: '<path d="M160 32H0v416h288V32H160zm-32 384H32v-96h96v96zm0-128H32v-96h96v96zm0-128H32V64h96v96zm128 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96zm256 80c0 44.2-35.8 80-80 80h-32v-32h32c26.5 0 48-21.5 48-48s-21.5-48-48-48h-32v-32h32c44.2 0 80 35.8 80 80zm-160-48h32v-32h-32v32zm0 128h32v-32h-32v32z" />',
  viewBox: "0 0 512 512"
};
var snapToSnaplinesIcon = {
  name: "snap-to-snaplines",
  content: '<path d="M224 128h96V96h-96V32h-32v64h-64V32H96v64H32v32h64v256H32v32h64v64h32v-64h64v64h32v-64h256v-32H224V128zm-32 256h-64V128h64v256zm208-64h-32v-32h32c26.5 0 48-21.5 48-48s-21.5-48-48-48h-32v-32h32c44.2 0 80 35.8 80 80s-35.8 80-80 80zm-48-160h-32v32h32v-32zm-32 160h32v-32h-32v32z" />',
  viewBox: "0 0 512 512"
};
var dimensionsIcon = {
  name: "dimensions",
  content: '<path d="M320 0H0v512h128V128h384V0H320zM32 32h64v64H32V32zm64 352H64v32h32v64H32V320h64v64zm0-192H64v32h32v64H32V128h64v64zm128-96V64h-32v32h-64V32h160v64h-64zm256 0h-64V64h-32v32h-64V32h160v64z" />',
  viewBox: "0 0 512 512"
};
var alignSelfStretchIcon = {
  name: "align-self-stretch",
  content: '<path d="M95 96h320v128H95V96zM31 480h32V32H31v448zm64-192h320v128H95V288zm32 96h256v-64H127v64zM447 32v448h32V32h-32z" />',
  viewBox: "0 0 512 512"
};
var alignSelfStretchAltIcon = {
  name: "align-self-stretch-alt",
  content: '<path d="M223 96v320H95V96h128zM31 480h448v-32H31v32zM415 96v320H287V96h128zm-32 32h-64v256h64V128zM31 32v32h448V32H31z" />',
  viewBox: "0 0 512 512"
};
var alignItemsStartIcon = {
  name: "align-items-start",
  content: '<path d="M319 224H95V96h224v128zM31 480h32V32H31v448zm64-192v128h352V288H95z" />',
  viewBox: "0 0 512 512"
};
var alignItemsCenterIcon = {
  name: "align-items-center",
  content: '<path d="M415 416H255v64h-32v-64H63V288h160v-64h-96V96h96V32h32v64h96v128h-96v64h160v128z" />',
  viewBox: "0 0 512 512"
};
var alignItemsEndIcon = {
  name: "align-items-end",
  content: '<path d="M192 96h224v128H192V96zm256-64v448h32V32h-32zM64 416h352V288H64v128z" />',
  viewBox: "0 0 512 512"
};
var alignItemsStretchIcon = {
  name: "align-items-stretch",
  content: '<path d="M415 224H95V96h320v128zM31 480h32V32H31v448zM447 32v448h32V32h-32zM96 416h320V288H96v128z" />',
  viewBox: "0 0 512 512"
};
var alignItemsBaselineIcon = {
  name: "align-items-baseline",
  content: '<path d="M415 224V64H287v160h-64v-96H95v96H31v32h64v96h128v-96h64v160h128V256h64v-32h-64zm-224 96h-64v-64h64v64zm192 64h-64V256h64v128z" />',
  viewBox: "0 0 512 512"
};
var alignItemsStartAltIcon = {
  name: "align-items-start-alt",
  content: '<path d="M96 96h128v224H96V96zM32 32v32h448V32H32zm256 416h128V96H288v352z" />',
  viewBox: "0 0 512 512"
};
var alignItemsCenterAltIcon = {
  name: "align-items-center-alt",
  content: '<path d="M479 256h-64v160H287V256h-64v96H95v-96H31v-32h64v-96h128v96h64V64h128v160h64v32z" />',
  viewBox: "0 0 512 512"
};
var alignItemsEndAltIcon = {
  name: "align-items-end-alt",
  content: '<path d="M223 417H95V193h128v224zM31 449v32h448v-32H31zM415 65H287v352h128V65z" />',
  viewBox: "0 0 512 512"
};
var alignItemsStretchAltIcon = {
  name: "align-items-stretch-alt",
  content: '<path d="M223 96v320H95V96h128zM31 480h448v-32H31v32zm0-448v32h448V32H31zm256 63v320h128V95H287z" />',
  viewBox: "0 0 512 512"
};
var alignItemsBaselineAltIcon = {
  name: "align-items-baseline-alt",
  content: '<path d="M255 288v-64h96V96h-96V32h-32v64h-96v128h96v64H63v128h160v64h32v-64h160V288H255zm-32 96H95v-64h128v64zm0-192h-64v-64h64v64z" />',
  viewBox: "0 0 512 512"
};
var justifyContentStartIcon = {
  name: "justify-content-start",
  content: '<path d="M95 96h128v320H95V96zM31 480h32V32H31v448zM255 95v320h128V95H255z" />',
  viewBox: "0 0 512 512"
};
var justifyContentCenterIcon = {
  name: "justify-content-center",
  content: '<path d="M63 96h128v320H63V96zm160 384h32V32h-32v448zm64-385v320h128V95H287z" />',
  viewBox: "0 0 512 512"
};
var justifyContentEndIcon = {
  name: "justify-content-end",
  content: '<path d="M128 96h128v320H128V96zm320-64v448h32V32h-32zM288 415h128V95H288v320z" />',
  viewBox: "0 0 512 512"
};
var justifyContentBetweenIcon = {
  name: "justify-content-between",
  content: '<path d="M63 96h128v320H63V96zm416-64v448h32V32h-32zM319 415h128V95H319v320zM-1 480h32V32H-1v448z" />',
  viewBox: "0 0 512 512"
};
var justifyContentAroundIcon = {
  name: "justify-content-around",
  content: '<path d="M95 96h128v320H95V96zm384-64v448h32V32h-32zM287 415h128V95H287v320zM-1 480h32V32H-1v448z" />',
  viewBox: "0 0 512 512"
};
var justifyContentStartAltIcon = {
  name: "justify-content-start-alt",
  content: '<path d="M415 224H95V96h320v128zM31 32v32h448V32H31zm65 352h320V256H96v128z" />',
  viewBox: "0 0 512 512"
};
var justifyContentCenterAltIcon = {
  name: "justify-content-center-alt",
  content: '<path d="M415 192H95V64h320v128zM31 224v32h448v-32H31zm65 192h320V288H96v128z" />',
  viewBox: "0 0 512 512"
};
var justifyContentEndAltIcon = {
  name: "justify-content-end-alt",
  content: '<path d="M415 257H95V129h320v128zM31 449v32h448v-32H31zm65-32h320V289H96v128z" />',
  viewBox: "0 0 512 512"
};
var justifyContentBetweenAltIcon = {
  name: "justify-content-between-alt",
  content: '<path d="M95 64h320v128H95V64zM31 512h448v-32H31v32zm65-64h320V320H96v128zM31 0v32h448V0H31z" />',
  viewBox: "0 0 512 512"
};
var justifyContentAroundAltIcon = {
  name: "justify-content-around-alt",
  content: '<path d="M95 96h320v128H95V96zM31 512h448v-32H31v32zm65-96h320V288H96v128zM31 0v32h448V0H31z" />',
  viewBox: "0 0 512 512"
};
var fileWrenchIcon = {
  name: "file-wrench",
  content: '<path d="M470.7 480 448 502.7c-12.4 12.4-32.8 12.4-45.1-.1l-93.1-93.1c-11.8 4.2-24.5 6.5-37.8 6.5-61.9 0-112-50.1-112-112 0-13.2 2.3-25.9 6.5-37.6l48.9 48.9c12.4 12.4 32.8 12.4 45.3 0l22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-48.9-48.9c11.8-4.2 24.4-6.5 37.6-6.5 61.9 0 112 50.1 112 112 0 13.2-2.3 25.9-6.5 37.6l93.2 93.1c12.4 12.5 12.4 32.9 0 45.3zm-22.8-23-86.3-86.3c-6.4 8.6-14 16.2-22.6 22.6l86.4 86.3 22.6-22.5v-.1h-.1zM96 64h224v96h96v128h32V128l-96-96H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h160v-32H96V64z" />',
  viewBox: "0 0 512 512"
};
var boldIcon = {
  name: "bold",
  content: '<path d="M128 96h115.8c25.3 0 44.2 1.1 56.6 3.2 12.4 2.1 23.6 6.5 33.4 13.2 9.8 6.7 18 15.6 24.6 26.7 6.6 11.1 9.8 23.6 9.8 37.4 0 15-4.1 28.7-12.1 41.2-8.1 12.5-19.1 21.9-32.9 28.2 19.5 5.7 34.5 15.4 45 29s15.7 29.8 15.7 48.2c0 14.6-3.4 28.7-10.2 42.4-6.7 13.8-16 24.8-27.7 33s-26.1 13.3-43.3 15.2c-10.8 1.2-36.7 1.9-78 2.2H128V96zm64 53v74h30.9c25.2 0 40.8-.4 46.9-1.1 11.1-1.3 19.7-5.2 26.1-11.5 6.3-6.3 9.5-14.7 9.5-25 0-9.9-2.7-18-8.2-24.1-5.5-6.2-13.6-10-24.4-11.2-6.4-.7-24.8-1.1-55.2-1.1H192zm0 127.1V362h48.6c23.4 0 38.1-.7 44.5-2 9.6-1.8 17.5-6 23.6-12.8 6.1-6.8 9-15.9 9-27.3 0-9.6-2.3-17.9-7-24.6-4.7-6.7-11.4-11.6-20.3-14.7-8.8-3.1-28-4.6-57.5-4.6l-40.9.1z" />',
  viewBox: "0 0 512 512"
};
var italicIcon = {
  name: "italic",
  content: '<path d="m377.2 128 6.8-32H198.8l-6.8 32h59.2l-54.4 256h-62l-6.8 32h185.2l6.8-32h-59.2l54.4-256h62z" />',
  viewBox: "0 0 512 512"
};
var underlineIcon = {
  name: "underline",
  content: '<path d="M128 416h256v32H128v-32zM320 64v224c0 11.6-3.5 16-10.3 20.3-11.8 7.4-31.3 11.7-53.7 11.7s-41.9-4.3-53.7-11.7c-6.8-4.3-10.3-8.7-10.3-20.3V64h-64v224c0 70.4 64.3 96 128 96s128-25.6 128-96V64h-64z" />',
  viewBox: "0 0 512 512"
};
var fontFamilyIcon = {
  name: "font-family",
  content: '<path d="M224 416V160h-95l-.8-64H384v64h-96v256h-64z" />',
  viewBox: "0 0 512 512"
};
var foregroundColorIcon = {
  name: "foreground-color",
  content: '<path d="M299.5 96h-87.1L96 416h64l23.3-64h145.4l23.3 64h64L299.5 96zm-92.9 192L256 152.2 305.4 288h-98.8z" />',
  viewBox: "0 0 512 512"
};
var convertLowercaseIcon = {
  name: "convert-lowercase",
  content: '<path d="M480.1 416H436v-36h-.7c-13.8 24-34.1 36-60.8 36-19.7 0-35.1-5.3-46.3-16-11.1-10.7-16.7-24.9-16.7-42.5 0-37.8 21.7-59.9 65.3-66.2l59.4-8.4c0-28.6-13.5-42.8-40.7-42.8-23.8 0-45.4 8.2-64.5 24.7V225c21.1-12.5 45.5-18.8 73.1-18.8 50.6 0 75.9 25 75.9 74.8v135h.1zM436 313.1l-42 5.9c-13 1.7-22.8 4.9-29.4 9.5s-9.9 12.7-9.9 24.3c0 8.5 3 15.4 9.1 20.8s14.2 8.1 24.3 8.1c13.8 0 25.2-4.8 34.3-14.5 9-9.7 13.6-21.9 13.6-36.6v-17.5zM240 416h48L184 96h-48L32 416h48l26-80h108l26 80zM121.6 288 160 169.8 198.4 288h-76.8z" />',
  viewBox: "0 0 512 512"
};
var convertUppercaseIcon = {
  name: "convert-uppercase",
  content: '<path d="M200.1 416H156v-36h-.7c-13.8 24-34.1 36-60.8 36-19.7 0-35.1-5.3-46.3-16-11.1-10.7-16.7-24.9-16.7-42.5 0-37.8 21.7-59.9 65.3-66.2l59.4-8.4c0-28.6-13.5-42.8-40.7-42.8-23.8 0-45.4 8.2-64.5 24.7V225c21.1-12.5 45.5-18.8 73.1-18.8 50.6 0 75.9 25 75.9 74.8v135h.1zM157 313.1l-42 5.9c-13 1.7-22.8 4.9-29.4 9.5s-9.9 12.7-9.9 24.3c0 8.5 3 15.4 9.1 20.8s14.2 8.1 24.3 8.1c13.8 0 25.2-4.8 34.3-14.5 9-9.7 13.6-21.9 13.6-36.6v-17.5zM432 416h48L376 96h-48L224 416h48l26-80h108l26 80zM313.6 288 352 169.8 390.4 288h-76.8z" />',
  viewBox: "0 0 512 512"
};
var strikethroughIcon = {
  name: "strikethrough",
  content: '<path d="M393.9 320c.1-23.9 4.5-41.4 13.5-52.5 9.1-11.1 20.8-16.7 35.3-16.7 9.6 0 17.7 3.1 24.5 9.3 6.8 6.2 11.4 15.4 14.1 27.7l27.9-4.7c-3.3-18.4-10.8-32.7-22.5-42.7s-26.8-15-45.2-15c-14.5 0-28.1 3.6-40.4 11.1-12.4 7.4-21.6 18.5-27.7 33.2-5.9 14.4-8.9 31.2-9.1 50.4h-25.5v-2.2c0-13.2-1.7-25.6-5.1-37.1-3.4-11.5-8.1-21.4-14.2-29.6-6-8.1-13.7-14.5-23-19s-19.2-6.8-29.6-6.8c-18.9 0-34.3 8.2-46.4 24.6v-90H192v160h-45v-25.8c0-13.7-.5-23.3-1.4-28.5-1.7-8.5-4.7-15.5-9-21.1-4.3-5.5-10.9-10.2-19.9-13.8-9-3.6-20.8-5.5-35.3-5.5-14.6 0-27.4 2.1-38.5 6.4-11.1 4.3-19.5 10.4-25.4 18.4-5.8 8-10 18.4-12.6 31.4l28.1 4.1c3.1-13 7.8-22 14.3-27.1s16.4-7.7 29.9-7.7c14.5 0 25.4 3.5 32.7 10.5 5.4 5.1 8.1 14 8.1 26.6 0 1.1 0 3.8-.2 8.1-11 4.1-28 7.7-51.2 10.7-11.4 1.5-19.9 3-25.5 4.7-6.7 2-12.9 4.9-18.5 8.6H0v32h1.2c-.8 3.8-1.2 7.7-1.2 11.8 0 15.2 5 27.8 15 37.6S39.3 416 57.9 416c11.3 0 21.8-1.9 31.6-6s20.1-10.9 30.7-20.6h.1c.8 8.6 2.7 20.3 5.7 26.7h30c-3.6-7-6-18.4-7.3-26.1-1-6-1.6-18.7-1.8-37.9h45v64h26.6V389c11.4 18 27.1 27 47.1 27 20.1 0 37.3-8.5 51.7-25.6 8.6-10.2 14.6-23 18-38.3h31.8c3.3 16 9.4 29.2 18.3 39.5 14.1 16.3 32.7 24.5 55.9 24.5 18.5 0 34.1-6 46.8-17.8 12.1-11.3 19.8-26.7 23.2-46.2h.5v-32H393.9zm-280.7 42.6c-4.1 9-10.4 16.1-19 21.4-8.6 5.2-18.4 7.8-29.5 7.8-11.2 0-19.6-2.8-25.4-8.2-5.8-5.6-8.7-12.4-8.7-20.7 0-3.9.7-7.5 2.1-10.9h83.6c-.7 4.1-1.8 7.7-3.1 10.6zm105.1-43.3c0-22.2 4.6-39.2 13.7-50.9 9.1-11.8 20-17.6 32.5-17.6s23.1 5.6 31.8 17c8.8 11.3 13.1 28.7 13.2 52.3h-91.3c.1-.3.1-.6.1-.8zm77.6 53.6c-9.1 11.8-20 17.7-32.5 17.7-15.5 0-27.7-8-36.7-23.9-2.2-3.9-4-8.8-5.3-14.7H306c-2.4 8.3-5.7 15.3-10.1 20.9zm173.5 6.6c-7.5 7.5-16.9 11.2-28.2 11.2-14 0-25.4-5.6-34.1-16.7-4.4-5.6-7.7-12.9-9.9-21.9h85.5c-2.6 11.9-7 21.1-13.3 27.4z" />',
  viewBox: "0 0 512 512"
};
var subscriptIcon = {
  name: "subscript",
  content: '<path d="m198.6 304 89.4 89.4-22.6 22.6-89.4-89.4L86.6 416 64 393.4l89.4-89.4L64 214.6 86.6 192l89.4 89.4 89.4-89.4 22.6 22.6-89.4 89.4zm167.7 144h81.4v32H320v-11.9c0-8 1.7-15.3 5-21.7 3.3-6.4 7.5-12.1 12.5-17.2s10.5-9.6 16.4-13.5c5.9-3.9 11.6-7.4 16.9-10.6 5.6-3.3 10.6-6.4 14.8-9.4 4.2-3 7.8-6 10.7-8.9 2.9-3 5.1-6 6.5-9 1.4-3 2.1-6.3 2.1-9.7 0-6.7-2.3-11.8-7-15.3-4.6-3.4-11.7-5.2-21.3-5.2-16.5 0-32.3 5.4-47.4 16.1v-30.5c16.7-8.9 35.5-13.3 56.5-13.3 9.7 0 18.5 1 26.2 3.1 7.7 2.1 14.3 5.1 19.6 8.9 5.4 3.9 9.4 8.6 12.3 14.1 2.8 5.5 4.2 11.7 4.2 18.5 0 7.2-1.4 13.7-4.1 19.3-2.7 5.6-6.3 10.8-10.8 15.4-4.5 4.6-9.7 8.8-15.6 12.7-5.9 3.8-12 7.6-18.3 11.1-4.3 2.5-8.4 5-12.4 7.4-4 2.5-7.5 4.9-10.5 7.2-3.1 2.6-7.1 6.6-10 10.4z" />',
  viewBox: "0 0 512 512"
};
var supscriptIcon = {
  name: "supscript",
  content: '<path d="m198.6 304 89.4 89.4-22.6 22.6-89.4-89.4L86.6 416 64 393.4l89.4-89.4L64 214.6 86.6 192l89.4 89.4 89.4-89.4 22.6 22.6-89.4 89.4zm167.7-112h81.4v32H320v-11.9c0-8 1.7-15.3 5-21.7s7.5-12.1 12.5-17.2 10.5-9.6 16.4-13.5 11.6-7.4 16.9-10.6c5.6-3.3 10.6-6.4 14.8-9.4 4.2-3 7.8-6 10.7-8.9 2.9-3 5.1-6 6.5-9s2.1-6.3 2.1-9.7c0-6.7-2.3-11.8-7-15.3-4.6-3.4-11.7-5.2-21.3-5.2-16.5 0-32.3 5.4-47.4 16.1V77.3c16.7-8.9 35.5-13.3 56.5-13.3 9.7 0 18.5 1 26.2 3.1s14.3 5.1 19.6 8.9c5.4 3.9 9.4 8.6 12.3 14.1 2.8 5.5 4.2 11.7 4.2 18.5 0 7.2-1.4 13.7-4.1 19.3-2.7 5.6-6.3 10.8-10.8 15.4-4.5 4.6-9.7 8.8-15.6 12.7-5.9 3.8-12 7.6-18.3 11.1-4.3 2.5-8.4 5-12.4 7.4-4 2.5-7.5 4.9-10.5 7.2-3.1 2.5-7.1 6.5-10 10.3z" />',
  viewBox: "0 0 512 512"
};
var divIcon = {
  name: "div",
  content: '<path d="M0 416v-6h7.1c7.9 0 13.6-3 16.9-9.1 2-3.6 3-11.8 3-24.5V231.6c0-14-1.3-22.8-3.9-26.3-3.6-4.9-9-7.3-16.1-7.3H0v-6h77.6c28.5 0 50.2 3.8 65 11.4 14.9 7.6 26.8 20.3 35.8 38 9 17.7 13.6 38.2 13.6 61.5 0 31.2-8.1 57.2-24.2 78.1-18.1 23.3-45.6 35-82.6 35H0zm54-16.2c11.9 3.1 21.9 4.6 29.9 4.6 21.7 0 39.8-9 54.1-26.9 14.3-17.9 21.5-42.3 21.5-73 0-30.9-7.2-55.3-21.5-73.2-14.3-17.8-32.8-26.8-55.2-26.8-8.4 0-18 1.6-28.8 4.8v190.5zM298 410v6h-83v-6h6.7c7.8 0 13.5-2.7 17-8.1 2.2-3.5 3.3-12 3.3-25.5V231.6c0-11.4-.6-18.9-1.8-22.5-.9-2.8-2.8-5.1-5.7-7.1-4.1-2.6-8.4-4-12.8-4H215v-6h83v6h-7c-7.9 0-13.7 2.7-17.4 8.1-2.4 3.5-3.6 12-3.6 25.5v144.9c0 11.4.6 18.9 1.9 22.5 1 2.8 3 5.1 6 7.1 4.1 2.6 8.5 4 13.1 4h7zm214-218v6c-6.4 1.4-11.3 3.9-14.6 7.4-4.7 5.3-8.9 13.4-12.6 24.2L421.6 416h-4.9l-67.9-188.8c-3.5-9.7-5.9-15.6-7.4-17.8-2.2-3.3-5-5.9-8.2-7.8-3.3-1.9-7.6-3.1-13.2-3.6v-6h74v6c-8.4 1-13.8 2.7-16.3 5.2s-3.7 5.7-3.7 9.5c0 5.4 2 13.8 6.1 25.2l46.1 128.4L469 239.5c4.2-12.5 6.3-21.2 6.3-26 0-3.1-1.3-6.1-3.9-9-2.6-2.9-6.9-4.9-13.1-6.1-.4-.1-1.2-.3-2.3-.5v-6h56zm0-96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var allIcon = {
  name: "all",
  content: '<path d="M120.1 343H52l-12 34.4c-2.9 8.5-4.4 14.8-4.4 19 0 3.3 1.3 6.2 3.8 8.8s8.1 4.2 16.5 4.9v5.9H0v-6c7.4-1.6 12.2-3.7 14.4-6.3 4.4-5.2 9.4-15.7 14.8-31.5L91.4 192H96l61.6 182.2c5 14.6 9.5 24.1 13.5 28.5 4 4.4 9.7 6.8 16.9 7.3v6h-70v-5.9c7-.4 11.7-1.9 14.2-4.3 2.5-2.5 3.7-5.5 3.7-9 0-4.7-1.7-12.2-5.2-22.3L120.1 343zm-3.5-12-30-88.5L55.8 331h60.8zm227.7 23.1 4.3 1.2-15.1 60.7H197v-6h6.5c7.4 0 12.6-3.1 15.8-9.3 1.8-3.5 2.7-11.7 2.7-24.5V222.7c0-14-1.2-13.9-3.6-17.5-3.3-4.9-8.3-7.3-14.9-7.3H196v-6h80v6.1s-15.4 1-19.2 3.3c-3.8 2.3-6.4 5.2-7.8 8.8-1.4 3.5-2.1 3.1-2 16.5v149.6c-.1 9.1.6 15.4 2 18.8 1 2.3 2.7 4 4.8 5.1 2.2 1.1 9 1.7 20.4 1.9h12.9c13.6-.2 23.1-1.5 28.6-4s10.5-7 15-13.5 9.1-16.6 13.6-30.4zm163.4 0 4.3 1.2-15.1 60.7H360v-6h6.5c7.4 0 12.6-3.1 15.8-9.3 1.8-3.5 2.7-11.7 2.7-24.5V222.7c0-14-1.2-13.9-3.6-17.5-3.3-4.9-8.3-7.3-14.9-7.3H360v-6h80v6.1s-16.1 1-19.9 3.3-6.4 5.2-7.8 8.8c-1.4 3.5-2.1 3.1-2.4 16.5v149.6c.3 9.1 1 15.4 2.4 18.8 1 2.3 2.7 4 4.8 5.1s9 1.7 20.4 1.9h12.9c13.6-.2 23.1-1.5 28.6-4s10.5-7 15-13.5 9.2-16.6 13.7-30.4zM512 96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h1Icon = {
  name: "h1",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm192-69.9 63-26.1h1v185.3c0 12.3.5 20 1.5 23s3.2 5.3 6.4 7 14.1 2.5 24.1 2.8v6h-96v-6c10.4-.2 20.9-1.1 23.9-2.7s5.1-3.7 6.3-6.3c1.2-2.6 1.8-10.5 1.8-23.7V258.8c0-16-.5-26.2-1.6-30.8-.8-3.5-2.1-6-4.1-7.6-2-1.6-4.4-2.4-7.2-2.4-4 0-9.5 1.7-16.7 5l-2.4-4.9zM512 96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h2Icon = {
  name: "h2",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm336 86-15.3 42H320v-5.5c38.2-34.9 65.1-63.3 80.7-85.4 15.6-22.1 23.4-42.3 23.4-60.6 0-14-4.3-25.4-12.8-34.4-8.6-9-18.8-13.5-30.7-13.5-10.8 0-20.5 3.2-29.1 9.5-8.6 6.3-15 15.6-19.1 27.8h-6c2.7-20 9.7-35.4 20.9-46.1 11.2-10.7 25.2-16.1 42-16.1 17.9 0 32.8 5.7 44.7 17.2 12 11.5 17.9 25 17.9 40.6 0 11.1-2.6 22.3-7.8 33.4-8 17.5-21 36.1-39 55.7-27 29.4-43.8 47.2-50.5 53.3h56.9c11.8 0 20-.4 24.8-1.3 4.7-.9 9-2.6 12.8-5.3 3.8-2.7 7.1-6.5 10-11.4l4.9.1zm48-278H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h3Icon = {
  name: "h3",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm195.6-50.6c6.4-14.5 14.5-25.7 24.3-33.6 9.8-7.9 22-11.9 36.6-11.9 18 0 31.9 5.6 41.5 16.9 7.3 8.4 11 17.3 11 26.9 0 15.7-10.3 31.9-30.9 48.7 13.8 5.2 24.3 12.6 31.4 22.3 7.1 9.7 10.6 21 10.6 34 0 18.7-6.2 34.8-18.6 48.5-16.2 17.8-39.6 26.7-70.2 26.7-15.2 0-25.5-1.8-31-5.4s-8.2-7.5-8.2-11.6c0-3.1 1.3-5.8 3.9-8.1 2.6-2.3 5.7-3.5 9.4-3.5 2.8 0 5.6.4 8.5 1.3 1.9.5 6.1 2.5 12.8 5.8 6.6 3.3 11.2 5.3 13.8 6 4.1 1.2 8.5 1.8 13.1 1.8 11.3 0 21.1-4.2 29.5-12.6s12.5-18.3 12.5-29.8c0-8.4-1.9-16.5-5.8-24.5-2.9-5.9-6-10.4-9.5-13.5-4.8-4.2-11.3-8.1-19.6-11.5s-16.8-5.2-25.4-5.2H358v-4.8c8.7-1.1 17.5-4.1 26.3-9.1s15.2-11 19.2-18 6-14.7 6-23.1c0-10.9-3.6-19.8-10.7-26.5s-16-10.1-26.6-10.1c-17.2 0-31.5 8.8-43 26.4l-5.6-2.5zM512 96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h4Icon = {
  name: "h4",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm341 47v23h-29v58h-27v-58h-93v-20.7L422.1 192H440v143h29zm-56 0V226.1L336 335h77zm99-239H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h5Icon = {
  name: "h5",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm320-96-12.6 28h-66L355 249.1c28.6 4.2 51.2 14.9 68 32 14.3 14.7 21.5 32 21.5 51.9 0 11.6-2.3 22.3-7 32.1s-10.6 18.2-17.7 25.2c-7.1 6.9-15 12.5-23.8 16.7-12.4 6-25.1 8.9-38.2 8.9-13.2 0-22.7-2.2-28.7-6.7s-9-9.4-9-14.9c0-3 1.2-5.7 3.7-8s5.6-3.5 9.4-3.5c2.8 0 5.3.4 7.4 1.3 2.1.9 5.7 3.1 10.8 6.7 8.1 5.6 16.3 8.4 24.6 8.4 12.6 0 23.7-4.8 33.3-14.4s14.3-21.2 14.3-35c0-13.3-4.3-25.7-12.8-37.3-8.5-11.5-20.3-20.4-35.3-26.7-11.8-4.9-27.8-7.7-48.1-8.4l42.1-85.5H448zm64-96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var h6Icon = {
  name: "h6",
  content: '<path d="M128 288h96v-57c0-11.2-.7-18.6-2.1-22.2-1.1-2.7-3.3-5-6.8-7-4.6-2.6-10.1-3.9-15.3-3.9H192v-6h96v6h-7.7c-5.1 0-10 1.2-14.5 3.7-3.4 1.7-5.7 4.3-7 7.8-1.2 3.5-1.8 10.7-1.8 28.3V384c0 4.3.7 11.6 2.1 15.2 1.1 2.7 3.2 5 6.6 7 4.7 2.6 9.6 3.9 14.7 3.9h7.7v6h-96v-6h7.7c9 0 16.2-2.6 20.3-7.9 2.7-3.5 4.1-11.8 4.1-24.9V304h-96v73.1c0 11.1.7 18.4 2.1 22 1.1 2.7 3.4 5 6.8 7 4.7 2.6 9.6 3.9 14.8 3.9h8.3v6H64v-6h7.8c9.1 0 16.2-2.6 20.3-7.9 2.6-3.5 3.9-11.8 3.9-18.1V237.9c0-18.1-.7-25.5-2.1-29-1.1-2.7-3.3-5-6.6-7-4.8-2.6-10.3-3.9-15.5-3.9H64v-6h96v6h-8c-5.3 0-10.2 1.2-14.9 3.7-3.4 1.7-5.7 4.3-7.1 7.8-1.3 3.5-2 10.7-2 21.4V288zm316-96v5.9c-13.1 1.4-23.9 4.2-32.2 8.4s-16.5 10.6-24.6 19.2c-8.1 8.6-14.8 18.2-20.2 28.7-5.3 10.6-9.8 23.1-13.4 37.6 14.3-10.5 28.7-15.8 43.2-15.8 13.8 0 25.8 5.9 36 17.8S448 321 448 339.6c0 18-5.1 34.5-15.4 49.3-12.3 18-28.7 27-49 27-13.8 0-25.6-4.9-35.2-14.6-18.9-19-28.4-43.6-28.4-73.8 0-19.3 3.6-37.7 10.9-55s17.6-32.8 31.1-46.3 26.4-22.5 38.8-27.2 23.8-7 34.5-7h8.7zm-92.9 111.4c-1.8 14.3-2.7 25.9-2.7 34.7 0 10.2 1.8 21.2 5.3 33.2 3.5 11.9 8.8 21.4 15.8 28.4 5.1 5 11.3 7.5 18.5 7.5 8.7 0 16.4-4.3 23.2-13 6.8-8.7 10.2-21.1 10.2-37.2 0-18.1-3.4-33.8-10.2-47.1S394.8 290 382.4 290c-3.8 0-7.8.8-12.2 2.5-4.3 1.6-10.7 5.2-19.1 10.9zM512 96H0v32h512V96z" />',
  viewBox: "0 0 512 512"
};
var listOrderedIcon = {
  name: "list-ordered",
  content: '<path d="M192 64h288v32H192V64zm0 160h288v32H192v-32zm0 160h288v32H192v-32zM96 32v128H64V64c-1.5 1.3-14.9 7.8-22.1 10V50.8c7.2-2.1 13.9-4.8 20.3-8 6.3-3.3 12.1-6.8 17.2-10.7L96 32zM66.7 297h61.1v23H32v-9.5c0-6.4 1.2-12.2 3.7-17.3 2.5-5.1 5.6-9.7 9.3-13.8 3.7-4.1 7.8-7.7 12.3-10.8 4.5-3.1 8.7-6 12.7-8.5 4.2-2.6 7.9-5.1 11.1-7.6 3.2-2.4 5.9-4.8 8-7.2 2.2-2.4 3.8-4.8 4.9-7.2s1.6-5 1.6-7.8c0-5.4-1.7-9.5-5.2-12.2-3.5-2.8-8.8-4.1-16-4.1-12.4 0-24.2 4.3-35.5 12.9v-24.4c12.5-7.1 26.6-10.6 42.4-10.6 7.3 0 13.8.8 19.6 2.5 5.8 1.7 10.7 4.1 14.7 7.2 4 3.1 7.1 6.9 9.2 11.3 2.1 4.4 3.2 9.3 3.2 14.8 0 5.8-1 10.9-3.1 15.5-2 4.5-4.8 8.6-8.1 12.3-3.4 3.7-7.3 7.1-11.7 10.1-4.4 3.1-9 6-13.8 8.9-3.2 2-6.3 4-9.3 5.9-3 2-5.6 3.9-7.9 5.8s-4.1 3.8-5.4 5.6c-1.3 1.8-2 3.6-2 5.2zM32 473.8V450c10.1 6 21.8 9.1 35.3 9.1 8.5 0 15.1-1.5 19.8-4.5 4.7-3 7.1-7.2 7.1-12.5 0-5.5-2.9-9.8-8.8-12.8-5.8-3-13.9-4.5-24.1-4.5h-14V404h12.9c19.6 0 29.4-5.4 29.4-16.1 0-10.1-7.5-15.1-22.6-15.1-10.1 0-19.9 2.7-29.4 8v-22.3c10.6-4.4 22.9-6.6 37-6.6 15.4 0 27.4 2.8 36 8.5s12.9 13.1 12.9 22.2c0 16.2-10 26.3-29.9 30.4v.4c10.6 1.1 19 4.3 25.2 9.5 6.2 5.3 9.2 11.7 9.2 19.4 0 11.6-5.1 20.7-15.4 27.4S88.1 480 69.9 480c-15.5 0-28.2-2.1-37.9-6.2z" />',
  viewBox: "0 0 512 512"
};
var listUnorderedIcon = {
  name: "list-unordered",
  content: '<path d="M192 64h288v32H192V64zm0 160h288v32H192v-32zm0 160h288v32H192v-32zM80 32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm0 160c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z" />',
  viewBox: "0 0 512 512"
};
var indentIcon = {
  name: "indent",
  content: '<path d="M480 64H32V32h448v32zm0 32H224v32h256V96zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H32v32h448v-32zM160 240 32 128v224l128-112z" />',
  viewBox: "0 0 512 512"
};
var outdentIcon = {
  name: "outdent",
  content: '<path d="M480 64H32V32h448v32zm0 32H224v32h256V96zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H224v32h256v-32zm0 64H32v32h448v-32zm-320-64V128L32 240l128 112z" />',
  viewBox: "0 0 512 512"
};
var insertTopIcon = {
  name: "insert-top",
  content: '<path d="M192 320h192v32H192v-32zm0-128h288v-32H192v32zm192 64H192v32h192v-32zM32 64v224l96-112L32 64z" />',
  viewBox: "0 0 512 512"
};
var insertMiddleIcon = {
  name: "insert-middle",
  content: '<path d="M192 128h192v32H192v-32zm0 128h288v-32H192v32zm192 64H192v32h192v-32zM32 128v224l96-112-96-112z" />',
  viewBox: "0 0 512 512"
};
var insertBottomIcon = {
  name: "insert-bottom",
  content: '<path d="M192 224h192v32H192v-32zm0 128h288v-32H192v32zm192-192H192v32h192v-32zM32 224v224l96-112-96-112z" />',
  viewBox: "0 0 512 512"
};
var alignTopIcon = {
  name: "align-top",
  content: '<path d="M480 64H32V32h448v32zm-64 32H96v32h320V96zm64 64H32v32h448v-32z" />',
  viewBox: "0 0 512 512"
};
var alignMiddleIcon = {
  name: "align-middle",
  content: '<path d="M480 192H32v-32h448v32zm-64 32H96v32h320v-32zm64 64H32v32h448v-32z" />',
  viewBox: "0 0 512 512"
};
var alignBottomIcon = {
  name: "align-bottom",
  content: '<path d="M480 352H32v-32h448v32zm-64 32H96v32h320v-32zm64 64H32v32h448v-32z" />',
  viewBox: "0 0 512 512"
};
var alignLeftIcon = {
  name: "align-left",
  content: '<path d="M448 96H64V64h384v32zm-96 32H64v32h288v-32zm96 64H64v32h384v-32zm-96 64H64v32h288v-32zm96 64H64v32h384v-32zm-96 64H64v32h288v-32z" />',
  viewBox: "0 0 512 512"
};
var alignCenterIcon = {
  name: "align-center",
  content: '<path d="M448 96H64V64h384v32zm-64 64H128v-32h256v32zm64 64H64v-32h384v32zm-64 64H128v-32h256v32zm64 64H64v-32h384v32zm-64 64H128v-32h256v32z" />',
  viewBox: "0 0 512 512"
};
var alignRightIcon = {
  name: "align-right",
  content: '<path d="M64 192h384v32H64v-32zm384-96V64H64v32h384zm-288 64h288v-32H160v32zM64 320v32h384v-32H64zm96-32h288v-32H160v32zm0 96v32h288v-32H160z" />',
  viewBox: "0 0 512 512"
};
var alignJustifyIcon = {
  name: "align-justify",
  content: '<path d="M448 160H64v-32h384v32zm0-96H64v32h384V64zM64 352h384v-32H64v32zm0-64h384v-32H64v32zm0-64h384v-32H64v32zm0 192h384v-32H64v32z" />',
  viewBox: "0 0 512 512"
};
var alignRemoveIcon = {
  name: "align-remove",
  content: '<path d="m78.9 192 32 32H64v-32h14.9zM64 288h110.9l-32-32H64v32zm0 64h174.9l-32-32H64v32zm0 32v32h238.9l-32-32H64zm393.4 96 22.6-22.6-41.4-41.4h9.4v-32h-41.4l-32-32H448v-32H342.6l-32-32H448v-32H278.6l-32-32H448v-32H214.6l-32-32H448v-32H150.6l-32-32H448V64H86.6l-32-32L32 54.6" />',
  viewBox: "0 0 512 512"
};
var textWrapIcon = {
  name: "text-wrap",
  content: '<path d="M480 96v32H96V96h384zM352 256v224H32V256h320zm-32 32H64v160h256V288zm-32 32H96v32h192v-32zm0 96v-32H96v32h192zM64 64h288V32H32v160h320v-32H64V64z" />',
  viewBox: "0 0 512 512"
};
var horizontalRuleIcon = {
  name: "horizontal-rule",
  content: '<path d="M320 96H32V64h288v32zm96 32H32v32h384v-32zm64 96H32v64h448v-64zM320 352H32v32h288v-32zm96 64H32v32h384v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignTopLeftIcon = {
  name: "table-align-top-left",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm32 64h192V64H96v32zm0 64h320v-32H96v32zm0 64h192v-32H96v32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignTopCenterIcon = {
  name: "table-align-top-center",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm288 32H160v32h192V64zm64 64H96v32h320v-32zm-64 64H160v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignTopRightIcon = {
  name: "table-align-top-right",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm352 32H224v32h192V64zm0 64H96v32h320v-32zm0 64H224v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignMiddleLeftIcon = {
  name: "table-align-middle-left",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm32 160h192v-32H96v32zm0 64h320v-32H96v32zm0 64h192v-32H96v32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignMiddleCenterIcon = {
  name: "table-align-middle-center",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm288 128H160v32h192v-32zm64 64H96v32h320v-32zm-64 64H160v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignMiddleRightIcon = {
  name: "table-align-middle-right",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm352 128H224v32h192v-32zm0 64H96v32h320v-32zm0 64H224v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignBottomLeftIcon = {
  name: "table-align-bottom-left",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm32 256h192v-32H96v32zm0 64h320v-32H96v32zm0 64h192v-32H96v32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignBottomCenterIcon = {
  name: "table-align-bottom-center",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm288 224H160v32h192v-32zm64 64H96v32h320v-32zm-64 64H160v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignBottomRightIcon = {
  name: "table-align-bottom-right",
  content: '<path d="M32 480V0h448v480H32zM64 32v416h384V32H64zm352 224H224v32h192v-32zm0 64H96v32h320v-32zm0 64H224v32h192v-32z" />',
  viewBox: "0 0 512 512"
};
var tableAlignRemoveIcon = {
  name: "table-align-remove",
  content: '<path d="M32 0v480h448V0H32zm416 448H64V32h384v416zM131.6 224l29.9 32H128v-32h3.6zm-3.6 64h63.4l29.9 32H128v-32zm123.1 64 29.9 32H128v-32h123.1zM96 92l22.6-22.6L143.5 96H384v32H173.4l29.9 32H384v32H233.1l29.9 32h121v32h-91.2l29.9 32H384v32h-31.4l63.4 68-22.6 22.6L96 92z" />',
  viewBox: "0 0 512 512"
};
var bordersAllIcon = {
  name: "borders-all",
  content: '<path d="M32 32v416h416V32H32zm32 32h160v160H64V64zm0 352V256h160v160H64zm352 0H256V256h160v160zm0-192H256V64h160v160z" />',
  viewBox: "0 0 512 512"
};
var bordersOutsideIcon = {
  name: "borders-outside",
  content: '<path d="M128 256H96v-32h32v32zm64-32h-32v32h32v-32zm64 0h-32v32h32v-32zm0-64h-32v32h32v-32zm0-64h-32v32h32V96zm0 256h-32v32h32v-32zm0-64h-32v32h32v-32zm64-64h-32v32h32v-32zm64 0h-32v32h32v-32zm64-192v416H32V32h416zm-32 32H64v352h352V64z" />',
  viewBox: "0 0 512 512"
};
var bordersInsideIcon = {
  name: "borders-inside",
  content: '<path d="M64 64H32V32h32v32zm0 32H32v32h32V96zm0 64H32v32h32v-32zm0 128H32v32h32v-32zm0 64H32v32h32v-32zM448 96h-32v32h32V96zm0 64h-32v32h32v-32zm0 128h-32v32h32v-32zm0 64h-32v32h32v-32zM128 32H96v32h32V32zm64 0h-32v32h32V32zM64 416H32v32h32v-32zm64 0H96v32h32v-32zm64 0h-32v32h32v-32zm128 0h-32v32h32v-32zm64 0h-32v32h32v-32zm64 0h-32v32h32v-32zM320 32h-32v32h32V32zm64 0h-32v32h32V32zm64 0h-32v32h32V32zm0 192H256V32h-32v192H32v32h192v192h32V256h192v-32z" />',
  viewBox: "0 0 512 512"
};
var bordersInsideHorizontalIcon = {
  name: "borders-inside-horizontal",
  content: '<path d="M448 224v32H32v-32h416zM64 32H32v32h32V32zm0 96H32V96h32v32zm0 64H32v-32h32v32zm0 128H32v-32h32v32zm0 64H32v-32h32v32zm384-256h-32V96h32v32zm0 64h-32v-32h32v32zm0 128h-32v-32h32v32zm0 64h-32v-32h32v32zM128 64H96V32h32v32zm64 0h-32V32h32v32zm64 0h-32V32h32v32zm0 64h-32V96h32v32zm0 64h-32v-32h32v32zm0 128h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zM64 416H32v32h32v-32zm64 32H96v-32h32v32zm64 0h-32v-32h32v32zm128-32h-32v32h32v-32zm64 32h-32v-32h32v32zm64 0h-32v-32h32v32zM320 32h-32v32h32V32zm64 32h-32V32h32v32zm64 0h-32V32h32v32z" />',
  viewBox: "0 0 512 512"
};
var bordersInsideVerticalIcon = {
  name: "borders-inside-vertical",
  content: '<path d="M256 448h-32V32h32v416zM448 64V32h-32v32h32zm-96 0V32h32v32h-32zm-64 0V32h32v32h-32zm-128 0V32h32v32h-32zm-64 0V32h32v32H96zm256 384v-32h32v32h-32zm-64 0v-32h32v32h-32zm-128 0v-32h32v32h-32zm-64 0v-32h32v32H96zm320-320V96h32v32h-32zm0 64v-32h32v32h-32zm0 64v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-128 0v-32h32v32h-32zm-64 0v-32h32v32H96zm-64 0v-32h32v32H32zM64 64V32H32v32h32zm-32 64V96h32v32H32zm0 64v-32h32v32H32zm32 128v-32H32v32h32zm-32 64v-32h32v32H32zm0 64v-32h32v32H32zm416-128v-32h-32v32h32zm-32 64v-32h32v32h-32zm0 64v-32h32v32h-32z" />',
  viewBox: "0 0 512 512"
};
var borderTopIcon = {
  name: "border-top",
  content: '<path d="M448 32v32H32V32h416zM64 96H32v32h32V96zm0 96H32v-32h32v32zm0 64H32v-32h32v32zm0 64H32v-32h32v32zm0 64H32v-32h32v32zm384-192h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zM128 256H96v-32h32v32zm64 0h-32v-32h32v32zm64-128h-32V96h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zm0 64h-32v-32h32v32zM64 416H32v32h32v-32zm64 32H96v-32h32v32zm64 0h-32v-32h32v32zm128-32h-32v32h32v-32zm64 32h-32v-32h32v32zm64 0h-32v-32h32v32zM320 224h-32v32h32v-32zm64 32h-32v-32h32v32zm64-128h-32V96h32v32z" />',
  viewBox: "0 0 512 512"
};
var borderBottomIcon = {
  name: "border-bottom",
  content: '<path d="M32 448v-32h416v32H32zm32-96H32v32h32v-32zm0-32H32v-32h32v32zm0-64H32v-32h32v32zm0-64H32v-32h32v32zm0-64H32V96h32v32zm384 192h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32V96h32v32zM128 256H96v-32h32v32zm64 0h-32v-32h32v32zm64 128h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32v-32h32v32zm0-64h-32V96h32v32zm0-64h-32V32h32v32zM64 32H32v32h32V32zm64 32H96V32h32v32zm64 0h-32V32h32v32zm128-32h-32v32h32V32zm64 32h-32V32h32v32zm64 0h-32V32h32v32zM320 224h-32v32h32v-32zm64 32h-32v-32h32v32zm64 128h-32v-32h32v32z" />',
  viewBox: "0 0 512 512"
};
var borderLeftIcon = {
  name: "border-left",
  content: '<path d="M32 32h32v416H32V32zm96 32V32H96v32h32zm32 0V32h32v32h-32zm64 0V32h32v32h-32zm64 0V32h32v32h-32zm64 0V32h32v32h-32zM160 448v-32h32v32h-32zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zM224 128V96h32v32h-32zm0 64v-32h32v32h-32zM96 256v-32h32v32H96zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zm64 0v-32h32v32h-32zm32-192V32h-32v32h32zm-32 64V96h32v32h-32zm0 64v-32h32v32h-32zm32 128v-32h-32v32h32zm-32 64v-32h32v32h-32zm0 64v-32h32v32h-32zM256 320v-32h-32v32h32zm-32 64v-32h32v32h-32zM96 448v-32h32v32H96z" />',
  viewBox: "0 0 512 512"
};
var borderRightIcon = {
  name: "border-right",
  content: '<path d="M448 448h-32V32h32v416zM384 64V32h-32v32h32zm-96 0V32h32v32h-32zm-64 0V32h32v32h-32zm-64 0V32h32v32h-32zm-64 0V32h32v32H96zm192 384v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32H96zm128-320V96h32v32h-32zm0 64v-32h32v32h-32zm128 64v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32H96zm-64 0v-32h32v32H32zM64 64V32H32v32h32zm-32 64V96h32v32H32zm0 64v-32h32v32H32zm32 128v-32H32v32h32zm-32 64v-32h32v32H32zm0 64v-32h32v32H32zm224-128v-32h-32v32h32zm-32 64v-32h32v32h-32zm128 64v-32h32v32h-32z" />',
  viewBox: "0 0 512 512"
};
var bordersNoneIcon = {
  name: "borders-none",
  content: '<path d="M384 64V32h-32v32h32zm-96 0V32h32v32h-32zm-64 0V32h32v32h-32zm-64 0V32h32v32h-32zm-64 0V32h32v32H96zm192 384v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32H96zm128-320V96h32v32h-32zm0 64v-32h32v32h-32zm128 64v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32h-32zm-64 0v-32h32v32H96zm-64 0v-32h32v32H32zM64 64V32H32v32h32zm-32 64V96h32v32H32zm0 64v-32h32v32H32zm32 128v-32H32v32h32zm-32 64v-32h32v32H32zm0 64v-32h32v32H32zm384-192v-32h32v32h-32zm32-192V32h-32v32h32zm-32 64V96h32v32h-32zm0 64v-32h32v32h-32zm32 128v-32h-32v32h32zm-32 64v-32h32v32h-32zm0 64v-32h32v32h-32zM256 320v-32h-32v32h32zm-32 64v-32h32v32h-32zm128 64v-32h32v32h-32z" />',
  viewBox: "0 0 512 512"
};
var bordersShowHideIcon = {
  name: "borders-show-hide",
  content: '<path d="M64 448h128v32H32V32h448v128h-32V64H64v384zm384 0h-64v32h96v-96h-32v64zM160 288v-64H96v64h64zm64 0h64v-64h-64v64zm160-32v-32h-32v32h32zM288 96h-64v64h64V96zm0 384L160 352l45-45 83 83 147-147 45 45-192 192z" />',
  viewBox: "0 0 512 512"
};
var formIcon = {
  name: "form",
  content: '<path d="M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32h-32zm0 384H64V64h352v352zm32 64v-32h32v32h-32zm32-448h-32V0h32v32zM0 448h32v32H0v-32zM32 0v32H0V0h32z" />',
  viewBox: "0 0 512 512"
};
var formElementIcon = {
  name: "form-element",
  content: '<path d="M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32h-32zm0 384H64V64h352v352zm32 64v-32h32v32h-32zm32-448h-32V0h32v32zM0 448h32v32H0v-32zM32 0v32H0V0h32zm160 128H96v32h96v-32zm192 0H224v32h160v-32zm0 64H224v32h160v-32zm0 64H224v32h160v-32zm0 64H224v32h160v-32zm-192 0H96v32h96v-32zm0-64H96v32h96v-32zm0-64H96v32h96v-32z" />',
  viewBox: "0 0 512 512"
};
var codeSnippetIcon = {
  name: "code-snippet",
  content: '<path d="M416 32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32h-32V0h-32v32H96V0H64v32H32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32H0v32h32v32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v32h32v-32h32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32v-32h32v-32h-32V96h32V64h-32V32h-32zm0 256v128H64V64h352v224zM32 0v32H0V0h32zM0 448h32v32H0v-32zm198.6-265.4L141.3 240l57.4 57.4L176 320l-80-80 80-80 22.6 22.6zM304 160l80 80-80 80-22.6-22.6 57.4-57.4-57.4-57.4L304 160zM480 32h-32V0h32v32zm-32 448v-32h32v32h-32z" />',
  viewBox: "0 0 512 512"
};
var selectAllIcon = {
  name: "select-all",
  content: '<path d="M448 448h32v32h-32v-32zm0-448h32v32h-32V0zM0 448h32v32H0v-32zM0 0h32v32H0V0zm448 384h32v32h-32v-32zm0-64h32v32h-32v-32zm0-64h32v32h-32v-32zm0-64h32v32h-32v-32zm0-64h32v32h-32v-32zm0-64h32v32h-32V64zM0 384h32v32H0v-32zm0-64h32v32H0v-32zm0-64h32v32H0v-32zm0-64h32v32H0v-32zm0-64h32v32H0v-32zm0-64h32v32H0V64zm128 384h32v32h-32v-32zm-64 0h32v32H64v-32zm128 0h32v32h-32v-32zm64 0h32v32h-32v-32zm64 0h32v32h-32v-32zm64 0h32v32h-32v-32zM64 0h32v32H64V0zm64 0h32v32h-32V0zm64 0h32v32h-32V0zm64 0h32v32h-32V0zm64 0h32v32h-32V0zm64 0h32v32h-32V0zm-96 64 53.4 53.4L240 218.9 138.6 117.4 192 64H64v128l53.5-53.5L218.9 240 117.5 341.5 64 288v128h128l-53.4-53.4L240 261.1l101.4 101.5L288 416h128V288l-53.5 53.5L261.1 240l101.4-101.5L416 192V64H288z" />',
  viewBox: "0 0 512 512"
};
var buttonIcon = {
  name: "button",
  content: '<path d="m130.1 130.1 36.1 93.9H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32v128c0 17.6-14.4 32-32 32h-73.8l-244.1-93.9zM480 299 185.8 185.8 299 480l22.6-113.1L434.7 480l45.3-45.3-113.1-113.1L480 299z" />',
  viewBox: "0 0 512 512"
};
var selectBoxIcon = {
  name: "select-box",
  content: '<path d="M384 352H128v-32h256v32zm0 32H128v32h256v-32zm0-128H128v32h256v-32zm96-192v128c0 17.6-14.4 32-32 32v224c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V224c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32zM352 96l32 64 32-64h-64zm64 128H96v224h320V224z" />',
  viewBox: "0 0 512 512"
};
var calendarDateIcon = {
  name: "calendar-date",
  content: '<path d="M448 32h-64V0h-64v32H192V0h-64v32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm0 416-383.9.1-.1-.1V192h384v256zm0-288H64V64.1l.1-.1H128v32h64V64h128v32h64V64h63.9l.1.1V160zM192 270.6S171.9 288 142 288v-32c29.9 0 58-32 58-32h24v192h-32V270.6zM384 416H256v-14.2c0-9.7 1.6-18.4 4.8-26 3.3-7.7 7.3-14.6 12.2-20.7 4.8-6.1 10.2-11.5 15.9-16.2 5.7-4.7 11.3-8.9 16.4-12.7 5.5-3.9 10.3-7.7 14.4-11.3 4.2-3.6 7.6-7.2 10.4-10.7 2.8-3.5 4.9-7.1 6.3-10.8 1.4-3.6 2.1-7.5 2.1-11.7 0-8.1-2.3-14.1-6.8-18.4-4.5-4.1-11.5-6.2-20.7-6.2-16 0-31.5 6.4-46.1 19.4v-37.1c16.5-10.6 35-16.1 55.5-16.1 9.6 0 18.2 1.3 25.7 3.8 7.6 2.5 14.1 6.1 19.3 10.7s9.3 10.3 12.1 17c2.7 6.6 4.1 14.1 4.1 22.3 0 8.7-1.4 16.6-4 23.3-2.7 6.8-6.3 12.9-10.6 18.5-4.5 5.6-9.5 10.6-15.3 15.2-5.8 4.6-11.8 9.1-18 13.4-4.2 3-8.3 5.9-12.2 8.9-3.9 2.9-7.4 5.8-10.4 8.7-3 2.9-5.3 5.7-7.1 8.4-1.9 2.7-2.7 7.8-2.7 10.3H384V416z" />',
  viewBox: "0 0 512 512"
};
var groupBoxIcon = {
  name: "group-box",
  content: '<path d="M144 81.6c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6.7 2.6 1.2 5.6 1.4 9.4.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H160v-97.8c0-22.1-5.4-36.7-16-44zm-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8-3.9 1.9-8 3.3-12.2 4.3-4.2 1-8.6 1.4-12.8 1.4-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18v32.5zM316 115.7c-2.7-9.3-6.6-17.2-11.8-23.8-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V32H192v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-30.9zm-32.6 73.6c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7zM450 110c1.8 3.2 2.7 6.9 3 11.2h27c-.9-7.3-3.1-13.8-6.4-19.6-3.3-5.8-7.6-10.5-12.7-14.2-5.2-3.9-11.2-6.8-18-8.8-6.9-2-14.2-3-22.2-3-10.3 0-19.5 1.6-28 4.9-8.5 3.3-15.7 8.1-21.8 14.4-6 6.3-10.7 14.1-14 23.3-3.3 9.2-4.9 19.7-4.9 31.5 0 11.9 1.6 22.5 4.9 31.7 3.1 9.2 7.8 17 13.9 23.2 6 6.3 13.3 11.1 21.8 14.4 8.3 3.3 17.9 5 28.2 5 8 0 15.3-1 22.2-3 6.8-2 12.8-4.9 18-8.8 5.1-3.9 9.4-8.8 12.7-14.4 3.3-5.6 5.5-12.1 6.4-19.6h-27c-.3 4.2-1.2 7.9-3 11.2-1.8 3.2-4.2 5.9-7 8.1-3 2.2-6.3 3.9-10.1 4.9-3.9 1.2-7.9 1.7-12.2 1.7-6.3 0-11.9-1.2-17-3.5-5.2-2.3-9.7-5.8-13.4-10.4-3.7-4.5-6.6-10.2-8.5-17-2.1-6.8-3.1-14.7-3.1-23.6 0-9.1 1-17.1 3.1-23.9 2.1-6.9 5.1-12.5 8.8-17.1 3.7-4.5 8-7.8 13.3-10.1 5.1-2.3 10.7-3.5 16.8-3.5 4.3 0 8.3.6 12.2 1.7 3.9 1.2 7.2 2.7 10.1 4.9 2.8 2.4 5.2 5.1 6.9 8.4zM128 256h256v32H128v-32zm0 64h256v32H128v-32zm0 64h256v32H128v-32zm256 32H128v-32h256v32zm0-128H128v-32h256v32zm0 64H128v-32h256v32zm32-96h32v192c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V256h32v192h320V256z" />',
  viewBox: "0 0 512 512"
};
var textareaIcon = {
  name: "textarea",
  content: '<path d="M448 448h-32V256h32v192zM194 334c1.8 3.2 2.7 6.9 3 11.2h27c-.9-7.3-3.1-13.8-6.4-19.6-3.3-5.8-7.6-10.5-12.7-14.2-5.2-3.9-11.2-6.8-18-8.8-6.9-2-14.2-3-22.2-3-10.3 0-19.5 1.6-28 4.9-8.5 3.3-15.7 8.1-21.8 14.4-6 6.3-10.7 14.1-14 23.3-3.3 9.2-4.9 19.7-4.9 31.5 0 11.9 1.6 22.5 4.9 31.7 3.1 9.2 7.8 17 13.9 23.2 6 6.3 13.3 11.1 21.8 14.4 8.3 3.3 17.9 5 28.2 5 8 0 15.3-1 22.2-3 6.8-2 12.8-4.9 18-8.8 5.1-3.9 9.4-8.8 12.7-14.4 3.3-5.6 5.5-12.1 6.4-19.6h-27c-.3 4.2-1.2 7.9-3 11.2-1.8 3.2-4.2 5.9-7 8.1-3 2.2-6.3 3.9-10.1 4.9-3.9 1.2-7.9 1.7-12.2 1.7-6.3 0-11.9-1.2-17-3.5-5.2-2.3-9.7-5.8-13.4-10.4-3.7-4.5-6.6-10.2-8.5-17-2.1-6.8-3.1-14.7-3.1-23.6 0-9.1 1-17.1 3.1-23.9 2.1-6.9 5.1-12.5 8.8-17.1 3.7-4.5 8-7.8 13.3-10.1 5.1-2.3 10.7-3.5 16.8-3.5 4.3 0 8.3.6 12.2 1.7 3.9 1.2 7.2 2.7 10.1 4.9 2.8 2.4 5.2 5.1 6.9 8.4zm14-252.4c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6.7 2.6 1.2 5.6 1.4 9.4.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H224v-97.8c0-22.1-5.4-36.7-16-44zm-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8-3.9 1.9-8 3.3-12.2 4.3-4.2 1-8.6 1.4-12.8 1.4-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18v32.5zM380 115.7c-2.7-9.3-6.6-17.2-11.8-23.8-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V32H256v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-30.9zm-32.6 73.6c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7zM256 370.6c0 11.8 1.6 22.5 4.6 32.1 3.2 9.5 7.5 17.6 13 24.4 5.6 6.6 12.1 11.8 19.7 15.5 7.5 3.6 15.7 5.4 24.5 5.4 15.7 0 29.1-5 40-14.8V448H384V256h-26.2v60.1c-11.5-13.6-25.3-20.5-41.7-20.5-9.5 0-18 1.7-25.5 5.2-7.3 3.6-13.7 8.6-18.7 15-5.2 6.6-9.1 14.5-11.8 23.8-2.8 9.2-4.1 19.5-4.1 31zm26.8 0c0-18.1 3.2-31.8 9.3-41 6.2-9.3 14.8-13.9 26.2-13.9 14.4 0 27.5 8.3 39.4 24.9v69.1c-11.1 11.9-23.9 17.8-38.4 17.8-11.2 0-20.2-4.7-26.8-14.2-6.4-9.4-9.7-23.8-9.7-42.7z" />',
  viewBox: "0 0 512 512"
};
var textboxIcon = {
  name: "textbox",
  content: '<path d="M208 209.6c-10.6-7.5-25.2-11.1-44.1-11.1-40.5 0-61.7 15-63.6 45.2h26.1c.7-16.8 12.8-25 36-25 11 0 19.2 1.6 24.4 4.8 2.6 1.6 4.6 3.3 6.2 5.1 1.5 1.9 2.5 4 3.2 6.6.7 2.6 1.2 5.6 1.4 9.4.1 3.6.1 8.2.1 13.6h-12.8c-59.4 0-89.1 17.2-89.1 51.4 0 6.4 1.3 12 3.8 17.2 2.5 5.3 6 9.7 10.4 13.4 4.4 3.8 9.7 6.6 16 8.7 6.1 2.2 12.8 3.2 20 3.2 20.9 0 38.2-6.2 51.7-18.6v17.9H224v-97.8c0-22.1-5.4-36.7-16-44zm-10.1 100.2c-2.3 3.3-5.1 6.2-8.4 9-3.2 2.6-6.8 4.9-10.7 6.8-3.9 1.9-8 3.3-12.2 4.3-4.2 1-8.6 1.4-12.8 1.4-9.6 0-17-2-22.5-5.9-5.5-4-8.3-9.8-8.3-17.2 0-20.7 18.9-30.9 56.9-30.9h18v32.5zm170.3-89.9c-5-6.4-11.4-11.5-18.7-15-7.5-3.4-16-5.2-25.5-5.2-16.4 0-30.2 6.9-41.7 20.5V160H256v192h26.2v-14.8c10.9 9.7 24.3 14.8 40 14.8 8.8 0 17-1.9 24.5-5.4 7.6-3.7 14.1-8.9 19.7-15.5 5.5-6.7 9.8-14.9 13-24.4 3-9.6 4.6-20.4 4.6-32.1 0-11.5-1.3-21.8-4-31-2.8-9.3-6.7-17.1-11.8-23.7zm-20.8 97.4c-6.6 9.5-15.6 14.2-26.8 14.2-14.5 0-27.4-5.9-38.4-17.8v-69.1c11.9-16.6 25-24.9 39.4-24.9 11.4 0 20 4.6 26.2 13.9 6.2 9.2 9.3 22.9 9.3 41 .1 18.9-3.2 33.3-9.7 42.7zM448 64v384h-32V64h32z" />',
  viewBox: "0 0 512 512"
};
var textboxHiddenIcon = {
  name: "textbox-hidden",
  content: '<path d="M0 160h32v64H0v-64zm0-32h32V64H0v64zm0 288h32v-64H0v64zm160 96h64v-32h-64v32zm-96 0h64v-32H64v32zM352 0h-64v32h64V0zm-96 0h-64v32h64V0zM0 512h32v-64H0v64zM448 0h-64v32h64V0zM160 0H96v32h64V0zM64 0H0v32h64V0zM0 320h32v-64H0v64zm480 128h32v-64h-32v64zm0-96h32v-64h-32v64zm0-96h32v-64h-32v64zm0-96h32V96h-32v64zm0-160v64h32V0h-32zm-32 512h64v-32h-64v32zm-192 0h64v-32h-64v32zm96 0h64v-32h-64v32zm-6-165.4c-7.4 3.6-15.6 5.4-24.3 5.4-15.6 0-28.9-5-39.7-14.8V352h-26V160h26v60.1c11.4-13.6 25.1-20.5 41.4-20.5 9.4 0 17.9 1.7 25.3 5.2 7.2 3.6 13.6 8.6 18.6 15 5.2 6.6 9 14.5 11.7 23.8 2.7 9.2 4 19.5 4 31 0 11.8-1.6 22.5-4.6 32.1-3.2 9.5-7.4 17.6-12.9 24.4-5.5 6.6-12 11.7-19.5 15.5zm10.9-72c0-18.1-3.2-31.8-9.3-41-6.2-9.3-14.8-13.9-26.2-13.9-14.4 0-27.5 8.3-39.4 24.9v69.1c11.1 11.9 23.9 17.8 38.4 17.8 11.2 0 20.2-4.7 26.8-14.2 6.4-9.4 9.7-23.8 9.7-42.7zM224 253.5V351h-26v-17.6S167.1 352 146.2 352c-7.3 0-13.9-1-20-3.2-6.2-2-11.6-4.9-16-8.7-4.5-3.8-8-8.1-10.4-13.4-2.5-5.2-3.8-10.8-3.8-17.2 0-34.2 29.8-51.4 89.1-51.5h12.8c0-5.2 0-9.9-.1-13.5-.3-3.8-.7-6.8-1.4-9.4-.7-2.6-1.7-4.8-3.2-6.6-1.6-1.7-3.6-3.5-6.2-5.1-5.2-3.2-13.4-4.8-24.4-4.8-23.2 0-35.3 8.2-36 24.4h-26.1c1.9-29.6 23.1-44.6 63.6-44.6 18.9 0 33.5 3.6 44.1 11.1 10.4 7.4 15.8 22 15.8 44zM198 277h-18c-38 0-56.9 10.3-56.9 30.9 0 7.4 2.8 13.1 8.3 17.2 5.5 3.9 12.9 5.9 22.5 5.9 4.2 0 8.6-.4 12.8-1.4s8.3-2.5 12.2-4.3c3.9-1.9 7.5-4.2 10.7-6.8 3.3-2.7 6.1-5.6 8.4-9V277zM448 64h-32v384h32V64z" />',
  viewBox: "0 0 512 512"
};
var passwordIcon = {
  name: "password",
  content: '<path d="M480 64v384h-32V64h32zM174.2 221.1l-11.3-11.3-34.9 34.9V192H96v52.7l-34.9-34.9-11.3 11.3L84.7 256H32v32h52.7l-34.9 34.9 11.3 11.3L96 299.3V352h32v-52.7l34.9 34.9 11.3-11.3-34.9-34.9H192v-32h-52.7l34.9-34.9zm224 0-11.3-11.3-34.9 34.9V192h-32v52.7l-34.9-34.9-11.3 11.3 34.9 34.9H256v32h52.7l-34.9 34.9 11.3 11.3 34.9-34.9V352h32v-52.7l34.9 34.9 11.3-11.3-34.9-34.9H416v-32h-52.7l34.9-34.9z" />',
  viewBox: "0 0 512 512"
};
var paragraphAddIcon = {
  name: "paragraph-add",
  content: '<path d="M320 96h-64v352h-32V96h-64v352h-32V256c-53 0-96-43-96-96s43-96 96-96h192v32zm96 256v-64h-32v64h-64v32h64v64h32v-64h64v-32h-64z" />',
  viewBox: "0 0 512 512"
};
var editToolsIcon = {
  name: "edit-tools",
  content: '<path d="m260.6 288 11.5 31.5 56.2-56.6L244.2 32H139.8L0 416h76.8l28-76.8 18.6-51.2h137.2zm-17.5-48H140.9L192 99.5 243.1 240zM224 413.3V480h66.7l169.7-168.5-67.9-67.9L224 413.3zm55.3 34-22.6-22.6 135.8-135.8 22.6 22.6-135.8 135.8zm223.4-178-22.6 22.6-67.9-67.9 22.5-22.7c12.5-12.4 32.9-12.4 45.3 0l22.7 22.7c12.4 12.4 12.4 32.8 0 45.3z" />',
  viewBox: "0 0 512 512"
};
var templateManagerIcon = {
  name: "template-manager",
  content: '<path d="M377.2 292.1c-5.5 5.3-7.2 6.4-7.4 6.6-.2.1-.4.2-.9.2-.1-.2-.3-.7-.5-1.7s-.5-4.2-.5-15.1v-31.7c0-9.9-.7-16.2-2.3-19.7-2.4-5.4-6.1-9.4-11.2-12-6.2-3.1-14-4.7-23.3-4.7-12.3 0-22.1 2.8-29 8.4-7.2 5.7-10.9 12.3-10.9 19.4 0 4.1 1.2 7.5 3.6 10 2.5 2.7 5.7 4 9.6 4 3.9 0 7.2-1.3 9.6-3.8 2.4-2.4 3.6-5.9 3.6-10.2l-.2-5.8c0-1.9.9-3.5 2.7-5.1 1.8-1.6 4.4-2.4 7.9-2.4 4.7 0 8.1 1.3 10.4 3.9 1.7 1.9 3.6 6.3 3.6 16.8v.9c-15.6 5.6-26.5 10.2-33.4 14.1-7.8 4.4-13.1 9.1-16.3 14.3-2.5 3.9-3.7 8.5-3.7 13.8 0 8.2 2.5 14.9 7.5 20 5 5.2 11.6 7.8 19.4 7.8 4.9 0 9.5-1 13.8-2.9 2.2-1 6.6-3.9 13.5-8.9.7 2.9 1.9 5.2 3.5 6.9 2.8 3.1 6.6 4.7 11.2 4.7 8.5 0 17.1-5.6 25.7-16.8l.8-1v-16.3l-6.8 6.3zm-35.2-.2c-8.9 6.7-14.1 8.1-16.9 8.1h-.1c-2.8 0-5.1-1.1-7.4-3.6-2.3-2.4-3.5-5.6-3.5-9.5 0-3 .9-5.8 2.8-8.4 2.1-2.8 5.7-5.6 10.6-8.2 2.4-1.3 7.2-3.4 14.4-6.2l.1 27.8zm-97.9 12.2c-1.3-1.4-4-5.6-7.9-17.9L195.6 160h-7.7l-41 124.9c-4.1 12.7-7 17.9-8.8 20.1-.3.4-1.8 1.8-7.4 3.1l-2.8.6V320h43v-11.7l-3.2-.3c-6.6-.6-8.3-2-8.6-2.3-.9-.9-1.3-1.9-1.3-3 0-1.6.5-4.8 2.6-11.5l5.3-16.2h42.1l4.6 14c2.6 8.1 3.1 12 3.1 13.8 0 1.3-.4 2.2-1.3 3.2-.3.4-1.9 1.6-7 1.9l-3.3.2V320h52v-11.8l-3.2-.3c-3.8-.3-6.6-1.5-8.6-3.8zM172.5 254l14.7-44.6 14.4 44.6h-29.1zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-224-32h-64v-64h64v64zm96 0h-64v-64h64v64zm96 0h-64v-64h64v64z" />',
  viewBox: "0 0 512 512"
};
var changeManuallyIcon = {
  name: "change-manually",
  content: '<path d="m416 353 32-32v159H32V32h416v64h-32V64H64v384h352v-95zm-192-3.7V416h66.7l169.7-168.5-67.9-67.9L224 349.3zm55.3 34-22.6-22.6 135.8-135.8 22.6 22.6-135.8 135.8zM502.7 160 480 137.3c-12.4-12.4-32.8-12.4-45.3 0L412.2 160l67.9 67.9 22.6-22.6c12.4-12.5 12.4-32.9 0-45.3zM191.9 416H167v-22h-.6c-7.9 14.6-19.4 22-34.6 22-11.2 0-20-3.3-26.3-9.8S96 391 96 380.3c0-23.1 12.4-36.5 37.2-40.4l33.9-5.1c0-17.4-7.7-26.1-23.2-26.1-13.6 0-25.8 5-36.8 15v-24.2c12-7.6 25.9-11.5 41.7-11.5 28.8 0 43.3 15.2 43.3 45.6V416h-.2zM167 353.1l-23.9 3.6c-7.4 1-13 3-16.8 5.8s-5.6 7.8-5.6 14.9c0 5.2 1.7 9.4 5.2 12.7 3.5 3.3 8.1 5 13.9 5 7.9 0 14.4-3 19.5-8.9 5.2-5.9 7.7-13.4 7.7-22.4v-10.7z" />',
  viewBox: "0 0 512 512"
};
var trackChangesIcon = {
  name: "track-changes",
  content: '<path d="m412.2 256 22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3L480 323.8 412.2 256zm-19.7 19.6L250.9 417.2 224 445.3V512h66.7l28.1-26.9 141.6-141.6-67.9-67.9zM279.3 479.3 268 468l-11.3-11.3 135.8-135.8 22.6 22.6-135.8 135.8zM288 160H160v32h128v-32zm64 64H160v32h192v-32zm-64 64H160v32h128v-32zm-64 64h-64v32h64v-32zm188.2-96 22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3L480 323.8 412.2 256zm-19.7 19.6L250.9 417.2 224 445.3V512h66.7l28.1-26.9 141.6-141.6-67.9-67.9zM279.3 479.3 268 468l-11.3-11.3 135.8-135.8 22.6 22.6-135.8 135.8zM96 416V64h224v96h96v32h32v-64l-96-96H96c-17.7 0-32 14.3-32 32v352c0 17.7 14.3 32 32 32h96v-32H96zM0 512h192v-32H0v32z" />',
  viewBox: "0 0 512 512"
};
var trackChangesEnableIcon = {
  name: "track-changes-enable",
  content: '<path d="M502.7 173.3 480 195.8 412.2 128l22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3zm-110.2-25.7 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1 141.6-141.6zm22.6 67.9-22.6-22.6-135.8 135.8L268 340l11.3 11.3 135.8-135.8zM160 320h32v-32h-32v32zm0-64h96v-32h-96v32zm128-96H160v32h128v-32zM160 384h32v-32h-32v32zm256 64H96V64h224v96l80.11-79.89L352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V273.155l-32 32V448z" />',
  viewBox: "0 0 512 512"
};
var trackChangesAcceptIcon = {
  name: "track-changes-accept",
  content: '<path d="M128 128H96V64c0-17.7 14.3-32 32-32h224l64 64h-96V64H128v64zm122.9 193.2L224 349.3V416h66.7l28.1-26.9 141.6-141.6-67.9-67.9-141.6 141.6zm28.4 62.1L268 372l-11.3-11.3 135.8-135.8 22.6 22.6-135.8 135.8zM416 337.155l32-32V448c0 17.7-14.3 32-32 32H128c-17.7 0-32-14.3-32-32v-96h32v96h288V337.155zM502.7 205.3 480 227.8 412.2 160l22.6-22.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6c12.4 12.4 12.4 32.8 0 45.3zM288 144 112 320 0 208l45-45 67 67L243 99l45 45zm-96 272h-32v-32h32v32z" />',
  viewBox: "0 0 512 512"
};
var trackChangesAcceptAllIcon = {
  name: "track-changes-accept-all",
  content: '<path d="M128 160H96V96c0-17.7 14.3-32 32-32h224l64 64h-96V96H128v64zm264.5 51.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1 141.6-141.6zm22.6 67.9-22.6-22.6-135.8 135.8L268 404l11.3 11.3 135.8-135.8zM416 480H128v-96H96v96c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V337.155l-32 32V480zm86.7-288-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 192l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3zM160 448h32v-32h-32v32zM64 32h256L288 0H64C46.3 0 32 14.3 32 32v128h32V32zm0 352H32v32c0 17.7 14.3 32 32 32v-64zm179-253L112 262l-67-67-45 45 112 112 176-176-45-45z" />',
  viewBox: "0 0 512 512"
};
var trackChangesRejectIcon = {
  name: "track-changes-reject",
  content: '<path d="M102.627 272 160 329.373 137.373 352 80 294.627 22.627 352 0 329.373 57.373 272 0 214.627 22.627 192 80 249.373 137.373 192 160 214.627 102.627 272zM192 384v-32h-32v32h32zm310.7-256-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 128l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3zM96 64h224v96l80.11-79.89L352 32H96c-17.7 0-32 14.3-32 32v96h32V64zm296.5 83.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1 141.6-141.6zm22.6 67.9-22.6-22.6-135.8 135.8L268 340l11.3 11.3 135.8-135.8zM416 448H96v-64H64v64c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V273.155l-32 32V448z" />',
  viewBox: "0 0 512 512"
};
var trackChangesRejectAllIcon = {
  name: "track-changes-reject-all",
  content: '<path d="M102.627 272 160 329.373 137.373 352 80 294.627 22.627 352 0 329.373 57.373 272 0 214.627 22.627 192 80 249.373 137.373 192 160 214.627 102.627 272zM128 96h192v32h96l-64-64H128c-17.7 0-32 14.3-32 32v64h32V96zm264.5 115.6 67.9 67.9-141.6 141.6-28.1 26.9H224v-66.7l26.9-28.1 141.6-141.6zm22.6 67.9-22.6-22.6-135.8 135.8L268 404l11.3 11.3 135.8-135.8zM416 480H128v-96H96v96c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V337.155l-32 32V480zm86.7-288-22.6-22.6c-12.5-12.4-32.9-12.4-45.3 0L412.2 192l67.8 67.8 22.7-22.5c12.4-12.5 12.4-32.9 0-45.3zM160 448h32v-32h-32v32zM64 32h256L288 0H64C46.3 0 32 14.3 32 32v128h32V32zm0 352H32v32c0 17.7 14.3 32 32 32v-64z" />',
  viewBox: "0 0 512 512"
};
var documentManagerIcon = {
  name: "document-manager",
  content: '<path d="M64 416h224v32H64v-32zm224-64H64v32h224v-32zM400 0C288 0 288 96 288 96v160s0 64 80 64 80-64 80-64V96s0-32-48-32-48 32-48 32v128h32V116c0-11 .6-20 16-20s16 9 16 20v140s0 32-48 32-48-32-48-32V96s0-64 80-64 80 64 80 64v128h32V96s0-96-112-96zM106.7 288 96 320H64l64-192h32l64 192h-32l-10.7-32h-74.6zm10.6-32h53.3L144 176l-26.7 80zM320 480H32V96h224V64H32C14.3 64 0 78.3 0 96v384c0 17.7 14.3 32 32 32h288c17.7 0 32-14.3 32-32V352h-32v128z" />',
  viewBox: "0 0 512 512"
};
var customIconIcon = {
  name: "custom-icon",
  content: '<path d="M352 249H196.6c.6 23.8 7.2 42.2 19.8 55.2s30 18.8 52 19.4c4.9.1-1.1 28.8-12.4 28.8-30.9 0-51.6-9.7-69.3-29.1-17.8-19.4-26.7-46.8-26.7-82 0-33.3 9.7-60.4 29.1-81.4s43.5-31.4 72.4-31.4c28.8 0 51.1 9.1 66.9 27.2S352 199 352 231.1V249zm-36-29.9c-.1-19.8-5.1-35.2-14.7-46.2-9.7-11-23.1-16.5-40.3-16.5-16.6 0-30.7 5.8-42.4 17.3-11.6 11.6-18.8 26.7-21.5 45.3l118.9.1zM448 384V64c0-17.7-14.3-32-32-32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h256l96-96zm-32-32h-96v96H96V64h320v288z" />',
  viewBox: "0 0 512 512"
};
var bookIcon = {
  name: "book",
  content: '<path d="M448 480V96h-32v352H128c-17.6 0-32-14.4-32-32s14.4-32 32-32h256V32H128c-35.2 0-64 28.8-64 64v320c0 23.6 12.9 44.2 32 55.3 9.4 5.5 20.4 8.7 32 8.7h320zM128 64h224v288H128V64zm192 64H160V96h160v32zm0 128H160v-32h160v32zm-32-64H160v-32h128v32z" />',
  viewBox: "0 0 512 512"
};
var imageAddIcon = {
  name: "image-add",
  content: '<path d="M272 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm80 112-16 16-64 64-128-128L32 336V96.1l.1-.1h383.8l.1.1-.1 191.9H448V96c0-17.6-14.4-32-32-32H32C14.4 64 0 78.4 0 96v320c0 17.6 14.4 32 32 32h256v-64h64V272zm128 144h-32v-64h-32v64h-64v32h64v64h32v-64h64v-32h-32z" />',
  viewBox: "0 0 512 512"
};
var imageEditIcon = {
  name: "image-edit",
  content: '<path d="M304 160c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm-32.6 159.4L176 224 64 336V96.1l.1-.1h383.8l.1.1V160h32V96c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h128v-47.5l79.4-81.1zm189-7.9L290.7 480H224v-66.7l168.5-169.7 67.9 67.9zm-45.3 0-22.6-22.6-135.8 135.8 22.6 22.6 135.8-135.8zm64.9 25.6zM447.9 448c17.7 0 32.1-14.4 32.1-32v-78.9L369.1 448h78.8zm54.8-224L480 201.3c-12.4-12.4-32.8-12.4-45.3 0L412.2 224l67.9 67.9 22.6-22.6c12.4-12.5 12.4-32.9 0-45.3z" />',
  viewBox: "0 0 512 512"
};
var imageMapEditorIcon = {
  name: "image-map-editor",
  content: '<path d="M448 64H64c-17.6 0-32 14.4-32 32v320c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32zM96 384H64v-32h32v32zm96 0h-64v-32h64v32zm96 0h-64v-32h64v32zm96 0h-64v-32h64v32zm64 0h-32v-32h32v32zm-.1-48-64-64-80 80L176 224 64 336V192h32v-32H64V96.1l.1-.1H128v32h32V96h287.9l.1.1-.1 239.9zM352 208c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm-224-48h32v32h-32v-32z" />',
  viewBox: "0 0 512 512"
};
var commentIcon = {
  name: "comment",
  content: '<path d="M448 32H64c-17.6 0-32 14.4-32 32v416l96-96h320c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm0 319.942a.53.53 0 0 1-.058.058H114.745L64 402.745V64.057a.511.511 0 0 1 .057-.057h383.885c.02.017.041.038.058.057v287.885z" />',
  viewBox: "0 0 512 512"
};
var commentRemoveIcon = {
  name: "comment-remove",
  content: '<path d="M114.745 352 64 402.745V64.057a.511.511 0 0 1 .057-.057h383.885c.02.017.041.038.058.057V256h32V64c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v416l96-96h128v-32H114.745zM480 342.627 457.373 320 400 377.373 342.627 320 320 342.627 377.373 400 320 457.373 342.627 480 400 422.627 457.373 480 480 457.373 422.627 400 480 342.627z" />',
  viewBox: "0 0 512 512"
};
var commentsRemoveIcon = {
  name: "comments-remove",
  content: '<path d="M480 64c0-17.6-14.4-32-32-32H160c-17.6 0-32 14.4-32 32v32h32V64.1l.1-.1H448l.1.1V256l-.1.1h32V64zM377.4 400l22.6 22.6-57.4 57.4-22.6-22.6 57.4-57.4zm0 0L320 342.6l22.6-22.6 57.4 57.4-22.6 22.6zm45.2 0 57.4 57.4-22.6 22.6-57.4-57.4-22.6-22.6 22.6-22.6 57.4-57.4 22.6 22.6-57.4 57.4zm-304.3-16L64 420.2V160.1l.1-.1H352l.1.1V256h32v-96c0-17.6-14.4-32-32-32H64c-17.6 0-32 14.4-32 32v320l96-64h128v-32H118.3z" />',
  viewBox: "0 0 512 512"
};
var silverlightIcon = {
  name: "silverlight",
  content: '<path d="M256 0 0 256l256 256 256-256L256 0zm-75.9 324c-21.6 0-40.5-6.3-52.1-13.7v-33.2c14.5 10.8 32.9 17.9 51.4 17.9 16.3 0 28.6-5 28.6-17.6 0-10.6-6.8-14.5-18.9-18.9l-23.6-7.9c-23.9-7.9-39.7-20.3-39.7-47 0-29.9 25.7-46.2 57.3-46.2 19.7 0 35.8 4.7 48.8 12.6v32.9c-13.9-10.2-29.1-16.8-47.8-16.8-14.5 0-25.5 4.9-25.5 16 0 9.9 6.5 13.9 17.9 17.6l25.2 8.6c27.1 9.2 39.4 23.9 39.4 47.8.2 31.9-26.8 47.9-61 47.9zm95.9-4V160h32v128h76v32H276z" />',
  viewBox: "0 0 512 512"
};
var mediaManagerIcon = {
  name: "media-manager",
  content: '<path d="M192 384V128l192 128-192 128zm32-319.3V0C108.2 14.4 14.4 108.2 0 224h64.7c13.5-80.3 79-145.8 159.3-159.3zm64 382.6V512c115.8-14.4 209.6-108.2 224-224h-64.7c-13.5 80.3-79 145.8-159.3 159.3zM64.7 288H0c14.4 115.8 108.2 209.6 224 224v-64.7c-80.3-13.5-145.8-79-159.3-159.3zm382.6-64H512C497.6 108.2 403.8 14.4 288 0v64.7c80.3 13.5 145.8 79 159.3 159.3z" />',
  viewBox: "0 0 512 512"
};
var videoExternalIcon = {
  name: "video-external",
  content: '<path d="M256 0C114.6 0 0 114.6 0 256s114.6 256 256 256 256-114.6 256-256S397.4 0 256 0zm-64 384V128l192 128-192 128z" />',
  viewBox: "0 0 512 512"
};
var flashManagerIcon = {
  name: "flash-manager",
  content: '<path d="M255.9 0C114.6 0 0 114.6 0 256.1 0 397.4 114.6 512 255.9 512 397.4 512 512 397.4 512 256.1 512 114.6 397.4 0 255.9 0zM384 160c-30.1.3-48.4-4.6-81.2 64H352v64h-64s-53.5 129.4-160 128c-.8-14.2 0-43.9 0-64 70.5-10.7 93.6-88.3 109.9-126.9C286.3 74.5 384 95.1 384 95.1V160z" />',
  viewBox: "0 0 512 512"
};
var binocularsIcon = {
  name: "binoculars",
  content: '<path d="M480 288v96c0 17.7-14.3 32-32 32h-96c-17.7 0-32-14.3-32-32v-64H192v64c0 17.7-14.3 32-32 32H64c-17.7 0-32-14.3-32-32v-96c0-17.7 14.3-32 32-32v-64c0-17.7 14.3-32 32-32v-32c0-17.7 14.3-32 32-32h64s32 0 32 32v128h64V128c0-32 32-32 32-32h64c17.7 0 32 14.3 32 32v32c17.7 0 32 14.3 32 32v64c17.7 0 32 14.3 32 32zM208 64h16V32h-96v32h80zm160 0h16V32h-96v32h80zM48 448H32v32h160v-32H48zm272 32h160v-32H320v32z" />',
  viewBox: "0 0 512 512"
};
var copyIcon = {
  name: "copy",
  content: '<path d="M384 96H192c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V192l-96-96zm64 352H192V128h160v96h96v224zM64 384h64v32H64c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h192l32 32H64v320z" />',
  viewBox: "0 0 512 512"
};
var cutIcon = {
  name: "cut",
  content: '<path d="M480 32h-45.3L256 210.7 210.7 256l-69.5 69.5c-9.1-3.6-18.9-5.5-29.2-5.5-44.2 0-80 35.8-80 80 0 10.3 2 20.2 5.5 29.2 8.1 20.7 24.6 37.1 45.3 45.3 9.1 3.6 18.9 5.5 29.2 5.5 44.2 0 80-35.8 80-80 0-10.3-2-20.2-5.5-29.2l69.5-69.5 69.5 69.5c-3.6 9.1-5.5 18.9-5.5 29.2 0 44.2 35.8 80 80 80 10.3 0 20.2-2 29.2-5.5 20.7-8.1 37.1-24.6 45.3-45.3 3.6-9.1 5.5-18.9 5.5-29.2 0-44.2-35.8-80-80-80-10.3 0-20.2 2-29.2 5.5L301.3 256 480 77.3V32zM160 400c0 26.5-21.5 48-48 48-.9 0-1.8 0-2.7-.1-24.4-1.3-43.9-20.9-45.3-45.3 0-.9-.1-1.8-.1-2.7 0-26.5 21.5-48 48-48 .9 0 1.8 0 2.7.1 24.4 1.3 43.9 20.9 45.3 45.3.1.9.1 1.8.1 2.7zm237.3-47.9c.9 0 1.8-.1 2.7-.1 26.5 0 48 21.5 48 48 0 .9 0 1.8-.1 2.7-1.3 24.4-20.9 43.9-45.3 45.3-.9 0-1.8.1-2.7.1-26.5 0-48-21.5-48-48 0-.9 0-1.8.1-2.7 1.4-24.5 20.9-44 45.3-45.3zM240 256c0-8.8 7.2-16 16-16s16 7.2 16 16-7.2 16-16 16-16-7.2-16-16zm-74.5-45.3L32 77.3V32h45.3l133.5 133.5-45.3 45.2z" />',
  viewBox: "0 0 512 512"
};
var clipboardIcon = {
  name: "clipboard",
  content: '<path d="M416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32zm160 416H96V64h64v64h192V64h64v384z" />',
  viewBox: "0 0 512 512"
};
var clipboardCodeIcon = {
  name: "clipboard-code",
  content: '<path d="M214.6 361.4 192 384l-80-80 80-80 22.6 22.6-57.3 57.4 57.3 57.4zM448 64v384c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h104.6C211.7 12.9 232.3 0 256 0s44.3 12.9 55.4 32H416c17.7 0 32 14.3 32 32zm-224 0h64c0-17.7-14.3-32-32-32s-32 14.3-32 32zm192 0h-64v64H160V64H96v384h320V64zM297.4 246.6l57.4 57.4-57.4 57.4L320 384l80-80-80-80-22.6 22.6z" />',
  viewBox: "0 0 512 512"
};
var clipboardWordIcon = {
  name: "clipboard-word",
  content: '<path d="m128 160 48.5 192h46.7L256 238.4 285.3 352h43.1L384 160h-73v35h19.3l-22.2 86-28.8-121h-45.4l-33.1 119.3-25-119.3H128zM416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32zm160 416H96V64h64v64h192V64h64v384zm-32-32H128v-32h256v32z" />',
  viewBox: "0 0 512 512"
};
var clipboardWordAltIcon = {
  name: "clipboard-word-alt",
  content: '<path d="m128 160 48.5 192h46.7L256 238.4 285.3 352h43.1L384 160h-73v35h19.3l-22.2 86-28.8-121h-45.4l-33.1 119.3-25-119.3H128zM416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32zm160 416H96V64h64v64h192V64h64v384z" />',
  viewBox: "0 0 512 512"
};
var clipboardHtmlIcon = {
  name: "clipboard-html",
  content: '<path d="M214.6 361.4 192 384l-80-80 80-80 22.6 22.6-57.3 57.4 57.3 57.4zM448 64v384c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h104.6C211.7 12.9 232.3 0 256 0s44.3 12.9 55.4 32H416c17.7 0 32 14.3 32 32zm-224 0h64c0-17.7-14.3-32-32-32s-32 14.3-32 32zm192 0h-64v64H160V64H96v384h320V64zM271.2 183.9 209.8 416l30.9 8.3L302.2 192l-31-8.1zm26.2 62.7 57.4 57.4-57.4 57.4L320 384l80-80-80-80-22.6 22.6z" />',
  viewBox: "0 0 512 512"
};
var clipboardMarkdownIcon = {
  name: "clipboard-markdown",
  content: '<path d="M226 224h30v128h-32v-72.8l-32.2 45.6L160 279v73h-32V224h32l31.8 46.2L226 224zm126 64h32l-48 64-48-64h32l.2-64H352v64zm64-256H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32zm160 416H96V64h64v64h192V64h64v384z" />',
  viewBox: "0 0 512 512"
};
var clipboardTextIcon = {
  name: "clipboard-text",
  content: '<path d="M416 32H311.4C300.3 12.9 279.7 0 256 0s-44.3 12.9-55.4 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-160 0c17.7 0 32 14.3 32 32h-64c0-17.7 14.3-32 32-32zm160 416H96V64h64v64h192V64h64v384zm-32-224H128v-32h256v32zm0 64H128v-32h256v32zm0 64H128v-32h256v32zm0 64H128v-32h256v32z" />',
  viewBox: "0 0 512 512"
};
var applyFormatIcon = {
  name: "apply-format",
  content: '<path d="M380.984 313.69c12.445 12.445 12.445 32.81 0 45.255L266.529 470.658c-12.445 12.445-32.787 12.467-45.255 0L0 248.898c18.584 18.584 40.255-4.835 40.255-4.835L154.71 132.671c12.445-12.445 32.81-12.445 45.255 0L380.984 313.69zm89.682-227.101-45.255-45.255c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882-22.627-22.627c-12.445-12.445-32.81-12.445-45.255 0l-22.627 22.627 181.019 181.019 22.627-22.627c12.445-12.445 12.445-32.81 0-45.255l-22.627-22.627 67.882-67.882c12.445-12.446 12.445-32.81 0-45.255z" />',
  viewBox: "0 0 512 512"
};
var clearCssIcon = {
  name: "clear-css",
  content: '<path d="M402.784 290.235 221.765 109.216l22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627 67.882-67.882c12.445-12.445 32.81-12.445 45.255 0l45.255 45.255c12.445 12.445 12.445 32.81 0 45.255l-67.882 67.882 22.627 22.627c12.445 12.445 12.445 32.81 0 45.255l-22.627 22.627zm-21.8 23.455-181.02-181.019c-12.346-12.346-32.483-12.437-44.953-.287L54.627 32 32 54.627l100.074 100.074-91.819 89.362S18.585 267.482 0 248.898l221.274 221.76c12.467 12.467 32.81 12.445 45.255 0l91.851-89.651L457.373 480 480 457.373l-98.73-98.73c12.151-12.47 12.06-32.607-.286-44.953z" />',
  viewBox: "0 0 512 512"
};
var copyFormatIcon = {
  name: "copy-format",
  content: '<path d="M96 480h160v32H64v-64H0V288h32v128h32v-64h32v128zm32-32h96v-32h-96v32zm0-96v32h32v-32h-32zm284.2-92.6L253.8 101c-12.4-12.4-32.9-12.4-45.3.1l-69.8 69.8-.2.2c-11.6 11.6-30 12.7-42.5 2.7l200.9 200.9c12.5 12.5 32.8 12.4 45.3 0l69.9-69.9c12.5-12.5 12.5-33 .1-45.4zM502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2z" />',
  viewBox: "0 0 512 512"
};
var stripAllFormattingIcon = {
  name: "strip-all-formatting",
  content: '<path d="M32 480h224v32H0v.1V256h32v224zm32-32h159v-32H64v32zm97-96H63v32h98v-32zm-65-64H64v32h32v-32zm316.2-28.6L253.8 101c-12.4-12.4-32.9-12.4-45.3.1l-69.8 69.8-.2.2c-11.6 11.6-30 12.7-42.5 2.7l200.9 200.9c12.5 12.5 32.8 12.4 45.3 0l69.9-69.9c12.5-12.5 12.5-33 .1-45.4zM502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2z" />',
  viewBox: "0 0 512 512"
};
var stripCssFormatIcon = {
  name: "strip-css-format",
  content: '<path d="M0 288v224h416V288H0zm145 65.9c-10-6.2-21-9.3-33.4-9.3-13.6 0-24.5 4.6-32.9 13.7-8.3 9.1-12.5 21.5-12.5 37.1 0 15 3.9 26.9 11.8 35.8s18.4 13.3 31.7 13.3c12.7 0 24.3-3.3 34.3-9.9v31.8c-9.9 5.5-23.7 8.2-40.7 8.2-22.2 0-39.6-7-52.3-20.9-12.7-14-19-32.5-19-55.8 0-24.7 7.1-44.8 21.4-60.2 14.3-15.4 32.8-23.1 55.6-23.1 14.1 0 26 1.9 36 5.7v33.6zM260.6 450c-3.1 5.9-7.2 10.6-12.4 14.2-5.2 3.6-11.3 6.2-18.2 7.8-7 1.6-14.3 2.4-21.9 2.4-7.9 0-15.4-.7-22.5-2.2-7.2-1.4-13.4-3.6-18.5-6.5v-34.4c5.8 5.3 12.2 9.2 18.9 11.8 6.9 2.6 13.8 3.9 20.7 3.9 4.1 0 7.7-.4 10.7-1.2 3.1-.8 5.6-1.9 7.7-3.3 2-1.4 3.6-3.1 4.6-5 1-1.9 1.5-4 1.5-6.2 0-3-.8-5.7-2.4-8.1-1.6-2.4-3.8-4.6-6.6-6.6s-6.1-4-9.9-5.8c-3.8-1.9-8-3.8-12.4-5.7-11.3-5-19.6-11.2-25.1-18.4-5.5-7.3-8.3-15.9-8.3-26.2 0-8.1 1.5-15 4.5-20.7s7.1-10.6 12.3-14.3c5.2-3.7 11.2-6.5 18-8.3 6.9-1.8 14.1-2.6 21.7-2.6 7.5 0 14.2.5 19.9 1.5 5.8 1 11.2 2.5 16 4.5v32.2c-2.4-1.8-5.1-3.4-7.9-4.7-2.9-1.4-5.8-2.5-8.8-3.4s-6-1.6-9-2c-3-.4-5.8-.6-8.5-.6-3.7 0-7.1.4-10.1 1.1-3 .8-5.6 1.8-7.7 3.2-2.1 1.4-3.7 3-4.8 4.9-1.1 1.9-1.7 4-1.7 6.4 0 2.6.6 4.9 1.9 7 1.3 2.1 3.1 4 5.4 5.8 2.3 1.8 5.2 3.6 8.6 5.4s7.2 3.6 11.4 5.5c5.8 2.6 11 5.3 15.5 8.3 4.6 2.9 8.6 6.2 11.8 9.9 3.3 3.7 5.8 7.9 7.6 12.6 1.7 4.7 2.6 10.2 2.6 16.3 0 8.5-1.6 15.7-4.6 21.5zm119 0c-3.1 5.9-7.2 10.6-12.4 14.2-5.2 3.6-11.3 6.2-18.2 7.8-7 1.6-14.3 2.4-21.9 2.4-7.9 0-15.4-.7-22.5-2.2-7.2-1.4-13.4-3.6-18.5-6.5v-34.4c5.8 5.3 12.2 9.2 18.9 11.8 6.9 2.6 13.8 3.9 20.7 3.9 4.1 0 7.7-.4 10.7-1.2 3.1-.8 5.6-1.9 7.7-3.3 2-1.4 3.6-3.1 4.6-5 1-1.9 1.5-4 1.5-6.2 0-3-.8-5.7-2.4-8.1-1.6-2.4-3.8-4.6-6.6-6.6s-6.1-4-9.9-5.8c-3.8-1.9-8-3.8-12.4-5.7-11.3-5-19.6-11.2-25.1-18.4-5.5-7.3-8.3-15.9-8.3-26.2 0-8.1 1.5-15 4.5-20.7 3-5.8 7.1-10.6 12.3-14.3 5.2-3.7 11.2-6.5 18-8.3 6.9-1.8 14.1-2.6 21.7-2.6 7.5 0 14.2.5 19.9 1.5 5.8 1 11.2 2.5 16 4.5v32.2c-2.4-1.8-5.1-3.4-7.9-4.7-2.9-1.4-5.8-2.5-8.8-3.4-3-.9-6-1.6-9-2-3-.4-5.8-.6-8.5-.6-3.7 0-7.1.4-10.1 1.1-3 .8-5.6 1.8-7.7 3.2-2.1 1.4-3.7 3-4.8 4.9-1.1 1.9-1.7 4-1.7 6.4 0 2.6.6 4.9 1.9 7 1.3 2.1 3.1 4 5.4 5.8 2.4 1.8 5.2 3.6 8.6 5.4 3.4 1.8 7.2 3.6 11.4 5.5 5.8 2.6 11 5.3 15.5 8.3 4.6 2.9 8.5 6.2 11.8 9.9 3.3 3.7 5.8 7.9 7.6 12.6 1.7 4.7 2.6 10.2 2.6 16.3 0 8.5-1.5 15.7-4.6 21.5zM502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2zm-246.9 69.9c-12.4-12.4-32.8-12.4-45.3 0l-79.7 79.7c-12.4 12.4-32.8 12.4-45.3 0L160 256h249.9L255.8 101.9z" />',
  viewBox: "0 0 512 512"
};
var stripFontElementsIcon = {
  name: "strip-font-elements",
  content: '<path d="M502.666 31.961 480.039 9.334c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882-22.627-22.627c-12.445-12.445-32.81-12.445-45.255 0l-22.627 22.627 158.392 158.392 22.627-22.627c12.445-12.445 12.445-32.81 0-45.255l-22.627-22.627 67.882-67.882c12.444-12.446 12.444-32.811-.001-45.256zm-246.848 69.936c-12.445-12.445-32.81-12.445-45.255 0l-79.706 79.706c-12.445 12.445-32.81 12.445-45.255 0L160 256h249.921L255.818 101.897zM176 348.121 200.706 416h-49.412L176 348.121zM0 288v224h352V288H0zm224 192-11.647-32h-72.706L128 480H96l58.235-160h43.53L256 480h-32z" />',
  viewBox: "0 0 512 512"
};
var stripSpanElementsIcon = {
  name: "strip-span-elements",
  content: '<path d="M96 288 0 400l96 112h256V288H96zm170.3 167.5c-3.9 5.9-9.3 10.6-16.1 14.2-6.8 3.6-14.6 6.2-23.6 7.8-9 1.6-18.4 2.4-28.4 2.4-10.2 0-20-.7-29.2-2.2-9.2-1.4-17.2-3.6-24-6.5v-34.5c7.5 5.2 15.7 9.2 24.6 11.8 8.8 2.6 17.8 3.9 26.8 3.9 5.3 0 9.9-.4 13.9-1.2 3.9-.8 7.2-1.9 9.9-3.3 2.6-1.4 4.6-3.1 5.9-5 1.3-1.9 2-4 2-6.2 0-3-1-5.7-3.1-8.1-2.1-2.4-4.9-4.6-8.5-6.6-3.6-2-7.9-4-12.8-5.8-4.9-1.9-10.3-3.8-16-5.7-14.6-5-25.4-11.2-32.6-18.4-7.2-7.3-10.7-16-10.7-26.3 0-8.1 2-15 5.9-20.8 3.9-5.8 9.2-10.5 15.9-14.3 6.7-3.7 14.5-6.5 23.3-8.3 8.8-1.8 18.2-2.6 28.1-2.6 9.7 0 18.3.5 25.8 1.5s14.4 2.5 20.7 4.5v32.3c-3.1-1.8-6.5-3.4-10.2-4.7-3.7-1.4-7.5-2.5-11.4-3.4-3.9-.9-7.8-1.6-11.6-2-3.9-.4-7.5-.6-11-.6-4.8 0-9.1.4-13 1.1-3.9.8-7.2 1.8-9.9 3.2-2.7 1.4-4.8 3-6.2 4.9-1.5 1.9-2.2 4-2.2 6.4 0 2.6.8 4.9 2.5 7 1.6 2.1 4 4 7 5.8 3 1.8 6.7 3.6 11.1 5.4 4.3 1.8 9.2 3.6 14.7 5.4 7.5 2.6 14.2 5.3 20.1 8.3 5.9 2.9 11 6.2 15.3 9.9 4.2 3.7 7.5 7.9 9.8 12.6 2.3 4.7 3.4 10.2 3.4 16.4-.3 8.6-2.3 15.9-6.2 21.7zM502.7 32 480 9.3c-12.4-12.4-32.8-12.4-45.3 0l-67.9 67.9-22.6-22.6c-12.4-12.4-32.8-12.4-45.3 0l-22.6 22.6 158.4 158.4 22.6-22.6c12.4-12.4 12.4-32.8 0-45.3l-22.6-22.6 67.9-67.9c12.5-12.4 12.5-32.8.1-45.2zm-246.9 69.9c-12.4-12.4-32.8-12.4-45.3 0l-79.7 79.7c-12.4 12.4-32.8 12.4-45.3 0L160 256h249.9L255.8 101.9z" />',
  viewBox: "0 0 512 512"
};
var stripWordFormattingIcon = {
  name: "strip-word-formatting",
  content: '<path d="M0 288v224h352V288H0zm239.3 192h-37.7L176 385.4 147.4 480h-40.9L64 320h40.6l21.9 100.4L155.8 320h40.4l25.2 100.4 19.4-71.4H224v-29h64l-48.7 160zM502.7 77.2l-67.9 67.9 22.6 22.6c12.4 12.4 12.4 32.8 0 45.3l-22.6 22.6L276.4 77.2 299 54.6c12.4-12.4 32.8-12.4 45.3 0l22.6 22.6 67.9-67.9c12.4-12.4 32.8-12.4 45.3 0L502.7 32c12.4 12.4 12.4 32.8 0 45.2zM409.9 256H160l-74.4-74.4c12.4 12.4 32.8 12.4 45.3 0l79.7-79.7c12.4-12.4 32.8-12.4 45.3 0l154 154.1z" />',
  viewBox: "0 0 512 512"
};
var formatCodeBlockIcon = {
  name: "format-code-block",
  content: '<path d="M224 352v160h288V352H224zm102.6 105.4L304 480l-48-48 22.6-22.6L304 384l22.6 22.6-25.3 25.4 25.3 25.4zM432 480l-22.6-22.6 25.4-25.4-25.4-25.4L432 384l25.4 25.4L480 432l-48 48zM192 160V32c0-17.6-14.4-32-32-32h-32c-17.6 0-32 14.4-32 32v128L0 256h288l-96-96zm96 128H0v192h64V320h32v160h32V320h32v160h32V320h96v-32z" />',
  viewBox: "0 0 512 512"
};
var buildingBlocksIcon = {
  name: "building-blocks",
  content: '<path d="M127.9 289V128H160V80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v48h64V80c0-8.8 7.2-16 16-16h32c8.8 0 16 7.2 16 16v48h32v160l-256.1 1zM96 320v-48c0-8.8-7.2-16-16-16H48c-8.8 0-16 7.2-16 16v48H0v128h224V320H96zm384 0v-48c0-8.8-7.2-16-16-16h-32c-8.8 0-16 7.2-16 16v48H288v128h224V320h-32z" />',
  viewBox: "0 0 512 512"
};
var puzzlePieceIcon = {
  name: "puzzle-piece",
  content: '<path d="M480 352c0 1 0 2-.1 2.9v.8c0 .8-.1 1.7-.2 2.5v.5c-.1 1-.2 1.9-.4 2.8-.1.4-.1.9-.2 1.3s-.1.8-.2 1.2c-.1.4-.2.7-.2 1.1l-.6 2.7c-.1.4-.2.7-.3 1.1 0 .2-.1.5-.2.7-.2.5-.4 1.1-.5 1.7-.3.9-.6 1.8-.9 2.6 0 .1-.1.2-.1.3-.3.8-.6 1.6-.9 2.3-.1.2-.2.5-.3.7-.3.8-.7 1.5-1 2.3 0 .1-.1.2-.1.2-.4.8-.8 1.6-1.3 2.4l-.6 1.2c-.2.4-.4.7-.6 1.1-.2.3-.3.6-.5.8-.5.8-1 1.5-1.5 2.3l-.6.9c-.2.4-.5.7-.7 1-.2.3-.5.6-.7.9-.5.7-1.1 1.4-1.7 2.1l-.3.3-1.5 1.8c-.2.2-.3.4-.5.5-.6.7-1.2 1.3-1.9 2-.6.6-1.3 1.3-2 1.9-.4.3-.7.7-1.1 1-.3.3-.7.6-1 .9-.2.1-.3.3-.5.4-.7.6-1.4 1.1-2.1 1.7-.3.3-.7.5-1 .8-.3.2-.6.5-1 .7l-.9.6c-.8.5-1.5 1-2.3 1.5-.2.1-.5.3-.7.4-.4.2-.7.4-1.1.6-.4.2-.8.5-1.3.7-.8.4-1.6.9-2.4 1.3-.1.1-.2.1-.3.2-.3.2-.7.4-1 .5-.6.2-1.2.5-1.9.8-.8.3-1.6.6-2.3.9-.1 0-.2.1-.3.1-.9.3-1.7.6-2.6.9-.6.2-1.2.3-1.7.6-.2.1-.5.1-.7.2-.4.1-.7.2-1.1.3l-2.7.6c-.3.1-.5.1-.8.2-.5.1-1.1.2-1.7.3-.4.1-.8.1-1.2.2-.9.1-1.9.3-2.8.4-.2 0-.5 0-.7.1-.4.1-.9.1-1.3.1-.6 0-1.1.1-1.7.1-1 0-2 .1-2.9.1-1.2 0-2.3 0-3.5-.1-.4 0-.7-.1-1.1-.1-.8-.1-1.6-.1-2.3-.2-.4 0-.9-.1-1.3-.2l-2.1-.3c-.4-.1-.9-.2-1.3-.2-.7-.1-1.4-.3-2-.4-.4-.1-.9-.2-1.3-.3-.7-.2-1.4-.3-2-.5l-1.2-.3c-.7-.2-1.4-.4-2.1-.7-.4-.1-.7-.2-1.1-.4-.8-.3-1.5-.6-2.3-.9-.3-.1-.5-.2-.8-.3-1-.4-1.9-.8-2.8-1.2-.1 0-.1-.1-.2-.1-3.1-1.5-6-3.2-8.8-5.1-.1 0-.1-.1-.2-.2-.8-.6-1.7-1.2-2.5-1.8-.1-.1-.2-.2-.3-.2-.8-.6-1.6-1.2-2.3-1.9-.3-.2-.6-.5-.8-.7-.5-.4-1-.8-1.4-1.3l-.5-.5c-.8-.8-1.6-1.5-2.3-2.3l-1.5-1.5c-.3-.3-.5-.6-.7-.9-.1-.2-.2-.3-.4-.5-4.9-5.7-12-8.9-19.5-8.9h-1.4c-14.3 0-25.9 11.6-25.9 25.9v70H217.9c-14.3 0-25.9-11.6-25.9-25.9v-1.4c0-7.5 3.3-14.6 8.9-19.5 15-12.5 24.2-31.6 23-52.9-1.8-32.5-28.3-58.7-60.9-60.2-36.7-1.7-67 27.6-67 63.9 0 19.6 8.8 37.1 22.6 48.8 5.9 5 9.4 12.2 9.4 19.9v1.4c0 14.3-11.6 25.9-25.9 25.9H32V192h70.1c14.3 0 25.9-11.6 25.9-25.9v-1.4c0-7.5-3.3-14.6-8.9-19.5l-.3-.3c-.7-.5-1.4-1.1-2-1.7l-.6-.6c-.8-.8-1.6-1.5-2.3-2.3l-.2-.2c-.7-.7-1.4-1.5-2.1-2.3-.1-.1-.2-.2-.2-.3-.7-.8-1.3-1.5-1.9-2.3-.1-.1-.2-.2-.2-.3-.6-.8-1.2-1.6-1.8-2.5l-.2-.2c-1.9-2.8-3.6-5.7-5.1-8.8 0-.1-.1-.1-.1-.2-.4-.9-.9-1.9-1.2-2.8-.1-.3-.2-.5-.3-.8-.3-.8-.6-1.5-.9-2.3-.1-.3-.2-.7-.4-1.1-.2-.7-.5-1.4-.7-2.1l-.3-1.2c-.2-.7-.4-1.4-.5-2-.1-.4-.2-.9-.3-1.3-.1-.7-.3-1.4-.4-2-.1-.4-.2-.9-.2-1.3l-.3-2.1c-.1-.4-.1-.9-.2-1.3-.1-.8-.1-1.6-.2-2.3 0-.4-.1-.7-.1-1.1-.1-1.2-.1-2.3-.1-3.5 0-1 0-2 .1-2.9 0-.4 0-.9.1-1.3 0-.7.1-1.4.2-2v-.4c.1-.9.2-1.9.4-2.8 0-.2.1-.4.1-.7.1-.8.3-1.6.4-2.4 0-.2.1-.4.1-.5l.6-2.7c0-.1.1-.3.1-.4.2-.7.4-1.4.6-2.2l.3-.9c.3-.9.6-1.8.9-2.6 0-.1.1-.2.1-.3.3-.8.6-1.6.9-2.3.1-.2.2-.5.3-.7.3-.8.7-1.5 1-2.3 0-.1.1-.2.1-.3.4-.8.8-1.6 1.3-2.4l.3-.6c.4-.7.7-1.3 1.1-1.9.1-.2.2-.3.3-.5.5-.8 1-1.5 1.5-2.3.1-.1.2-.3.3-.4.4-.6.9-1.2 1.3-1.8.1-.2.3-.4.4-.6.5-.7 1.1-1.4 1.7-2.1l.3-.3 1.5-1.8c.2-.2.3-.4.5-.5.6-.7 1.2-1.3 1.9-2 .6-.6 1.3-1.3 2-1.9.2-.2.4-.3.5-.5l1.8-1.5.3-.3c.7-.6 1.4-1.1 2.1-1.7.2-.1.3-.3.5-.4.6-.5 1.3-.9 1.9-1.3.2-.1.3-.2.5-.3.8-.5 1.5-1 2.3-1.5.1-.1.3-.2.4-.2.6-.4 1.3-.8 1.9-1.1.2-.1.5-.3.7-.4.8-.4 1.6-.9 2.4-1.3.1 0 .2-.1.2-.1.8-.4 1.5-.7 2.3-1 .2-.1.5-.2.7-.3.8-.3 1.5-.6 2.3-.9.1 0 .2-.1.3-.1.9-.3 1.7-.6 2.6-.9.3-.1.6-.2.8-.3.7-.2 1.4-.4 2.2-.6.2 0 .3-.1.5-.1l2.7-.6c.2 0 .4-.1.6-.1.8-.2 1.6-.3 2.3-.4.2 0 .5-.1.7-.1.9-.1 1.9-.3 2.8-.4.2 0 .4 0 .5-.1.8-.1 1.6-.1 2.5-.2h.7c1 0 1.9-.1 2.9-.1s2 0 3 .1h.7c.9.1 1.8.1 2.7.2h.2c30 3.1 53.9 26.9 57.1 57 0 .3.1.7.1 1 .1.7.1 1.4.2 2.1 0 .5 0 .9.1 1.4v5c0 .5-.1 1-.1 1.4 0 .6-.1 1.2-.1 1.7s-.1 1-.2 1.5c-.1.6-.1 1.1-.2 1.7-.1.5-.1 1-.2 1.5s-.2 1.1-.3 1.6l-.3 1.5c-.1.5-.2 1-.4 1.5-.1.5-.2 1-.4 1.5-.1.5-.3.9-.4 1.4-.2.5-.3 1-.5 1.5-.1.4-.3.9-.4 1.3-.2.5-.4 1.1-.6 1.6-.1.4-.3.8-.5 1.2-.2.6-.4 1.1-.7 1.7-.1.3-.3.7-.4 1-.3.6-.5 1.2-.8 1.8-.1.2-.2.5-.4.7-.3.7-.7 1.3-1 2 0 .1-.1.2-.1.2-3.8 6.7-8.7 12.7-14.5 17.7h-.1c-5.8 5-9.4 12.2-9.4 19.9v1.4c0 14.3 11.6 25.9 25.9 25.9H320v116.7c0 6.3 5.1 11.3 11.3 11.3H357c5.2 0 9.1-4.1 10-9.2 0-.1.1-.1.1-.2 5-5.8 10.9-10.8 17.7-14.5.1 0 .2-.1.2-.1.7-.4 1.3-.7 2-1 .2-.1.5-.2.7-.4.6-.3 1.2-.6 1.8-.8.3-.1.7-.3 1-.4.6-.2 1.1-.5 1.7-.7.4-.2.8-.3 1.2-.5.5-.2 1.1-.4 1.6-.6.4-.2.9-.3 1.3-.4.5-.2 1-.3 1.5-.5.5-.1.9-.3 1.4-.4.5-.1 1-.3 1.5-.4.5-.1 1-.2 1.5-.4l1.5-.3c.5-.1 1.1-.2 1.6-.3.5-.1 1-.2 1.5-.2.6-.1 1.1-.1 1.7-.2.5-.1 1-.1 1.5-.2.6-.1 1.1-.1 1.7-.1.5 0 1-.1 1.4-.1h5c.5 0 .9 0 1.4.1.7 0 1.4.1 2.1.2.3 0 .7.1 1 .1 30 3.1 53.9 27 57 57.1v.2c.1.9.2 1.8.2 2.7v.7c.2.4.2 1.4.2 2.4z" />',
  viewBox: "0 0 512 512"
};
var linkAddIcon = {
  name: "link-add",
  content: '<path d="M384 384zm64 32v-64h-32v64h-64v32h64v64h32v-64h64v-32h-64zM96 256c0-17.7 14.3-32 32-32h256c17.7 0 32 14.3 32 32s-14.3 32-32 32H128c-17.7 0-32-14.3-32-32zm-32 0c0 35.4 28.6 64 64 64h110.8c-22.1 38.2-63.5 64-110.8 64C57.3 384 0 326.7 0 256s57.3-128 128-128c47.4 0 88.7 25.8 110.8 64H128c-35.4 0-64 28.6-64 64zm416 84.7c19.9-22.6 32-52.2 32-84.7 0-70.7-57.3-128-128-128-47.3 0-88.7 25.8-110.8 64H384c35.3 0 64 28.6 64 64s-28.6 64-64 64h96v20.7zM384 320H273.2c22.1 38.2 63.4 64 110.8 64v-64z" />',
  viewBox: "0 0 512 512"
};
var globeLinkIcon = {
  name: "globe-link",
  content: '<path d="M161.7 412.6C69.1 391.2 0 308.1 0 209 0 93.6 93.6 0 209 0s209 93.6 209 209c0 58.2-23.8 110.8-62.2 148.7-20.5-23.1-50.4-37.7-83.8-37.7-3.9 0-7.8.2-11.6.6 12-15.9 26.4-28.8 41.3-33 22.6-18.6 21.6-35.2 18.6-50.2-7-12.6-38.7-23.6-68.8-49.7-18.1-4-40.2 7.5-48.7-3.5-8.5-11.1-48.7-27.1-31.1-44.7s44.2.5 54.8-35.7C236.9 67.6 259 82.6 270 82.6c11.1 0 13.1-26.1-7.5-35.7-20.6-9.5-49.7-19.6-100.5-14.6-50.7 5-86.4 27.6-75.4 47.7 11.1 20.1 44.2 83.9 81.4 94.5 37.2 10.6 35.7 20.2 41.7 27.1 6 7-11.3 22.2 5.1 50.8 8.9 12 17 5 21 25.1 1.9 9.4-2.7 30.3-6.4 50.8-34.9 14.4-61 46-67.7 84.3zM224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48zm208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80zm0 64H272c-8.8 0-16 7.2-16 16s7.2 16 16 16h160c8.8 0 16-7.2 16-16s-7.2-16-16-16z" />',
  viewBox: "0 0 512 512"
};
var globeUnlinkIcon = {
  name: "globe-unlink",
  content: '<path d="M161.7 412.6C69.1 391.2 0 308.1 0 209 0 93.6 93.6 0 209 0s209 93.6 209 209c0 58.2-23.8 110.8-62.2 148.7-20.5-23.1-50.4-37.7-83.8-37.7-3.9 0-7.8.2-11.6.6 12-15.9 26.4-28.8 41.3-33 22.6-18.6 21.6-35.2 18.6-50.2-7-12.6-38.7-23.6-68.8-49.7-18.1-4-40.2 7.5-48.7-3.5-8.5-11.1-48.7-27.1-31.1-44.7s44.2.5 54.8-35.7C236.9 67.6 259 82.6 270 82.6s13.1-26.1-7.5-35.7c-20.6-9.5-49.7-19.6-100.5-14.6-50.7 5-86.4 27.6-75.4 47.7 11.1 20.1 44.2 83.9 81.4 94.5 37.2 10.6 35.7 20.2 41.7 27.1 6 7-11.3 22.2 5.1 50.8 8.9 12 17 5 21 25.1 1.9 9.4-2.7 30.3-6.4 50.8-34.9 14.4-61 46-67.7 84.3M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48m208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80" />',
  viewBox: "0 0 512 512"
};
var envelopeLinkIcon = {
  name: "envelope-link",
  content: '<path d="M224 432c0-5.1.8-10.1 2.3-14.7C232.5 398 250.6 384 272 384h64c-1.5-1.9-3-3.8-4.6-5.6-14.6-16.2-35.8-26.4-59.4-26.4-12.2 0-23.8 2.7-34.1 7.6-4.4 2.1-8.6 4.6-12.5 7.4-16.4 11.8-28.2 29.7-32 50.4-.9 4.7-1.4 9.6-1.4 14.6 0 44.2 35.8 80 80 80 26.2 0 49.4-12.6 64-32h-64c-26.5 0-48-21.5-48-48zm208-80c-26.2 0-49.4 12.6-64 32h64c26.5 0 48 21.5 48 48s-21.5 48-48 48h-64c14.6 19.4 37.8 32 64 32 44.2 0 80-35.8 80-80s-35.8-80-80-80zm0 64H272c-8.8 0-16 7.2-16 16s7.2 16 16 16h160c8.8 0 16-7.2 16-16s-7.2-16-16-16zM32 0C14.3 0 0 14.3 0 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V32c0-17.7-14.3-32-32-32H32zm23.7 32L224 200.3 392.3 32c11 2.9 19.7 11.6 22.6 22.6L310.6 158.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L288 181.5l-64 64-64-64L55.7 285.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L33.1 54.6C36 43.6 44.7 34.9 55.7 32z" />',
  viewBox: "0 0 512 512"
};
var anchorIcon = {
  name: "anchor",
  content: '<path d="m352 288 44.5 44.5c-22.3 40.7-61.7 70.7-108.5 80.3V151.4c19.1-11.1 32-31.8 32-55.4 0-35.3-28.7-64-64-64s-64 28.7-64 64c0 23.6 12.9 44.3 32 55.4v261.4c-46.8-9.5-86.2-39.6-108.5-80.3L160 288H32v128l36.9-36.9C108.9 439.9 177.8 480 256 480s147.1-40.1 187.1-100.9L480 416V288H352zM256 64c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32z" />',
  viewBox: "0 0 512 512"
};
var tableAddIcon = {
  name: "table-add",
  content: '<path d="M448 320V32H32v416h288V320h128zm-288 96H64v-96h96v96zm0-128H64v-96h96v96zm0-128H64V64h96v96zm128 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96zm32-96h96v96h-96V64zm0 224v-96h96v96h-96zm192 128v32h-64v64h-32v-64h-64v-32h64v-64h32v64h64z" />',
  viewBox: "0 0 512 512"
};
var tableIcon = {
  name: "table",
  content: '<path d="M32 32v416h416V32H32zm256 32v96h-96V64h96zm0 128v96h-96v-96h96zM64 64h96v96H64V64zm0 128h96v96H64v-96zm0 224v-96h96v96H64zm128 0v-96h96v96h-96zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var tablePropertiesIcon = {
  name: "table-properties",
  content: '<path d="m502.666 77.216-22.627 22.627-67.882-67.882 22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627c12.445 12.445 12.445 32.81 0 45.255zM392.483 51.635l67.882 67.882L290.66 288H224v-66.66L392.483 51.635zm22.627 67.882L392.483 96.89 256.719 232.654l22.627 22.627L415.11 119.517zM384 256l32-32v288H0V96h288l-32 32h-96v224h224v-96zM128 384H32v96h96v-96zm0-128H32v96h96v-96zm0-128H32v96h96v-96zm128 256h-96v96h96v-96zm128 0h-96v96h96v-96z" />',
  viewBox: "0 0 512 512"
};
var tableCellIcon = {
  name: "table-cell",
  content: '<path d="M32 32v416h416V32H32zm128 384H64v-96h96v96zm0-128H64v-96h96v96zm0-128H64V64h96v96zm128 256h-96v-96h96v96zm0-256h-96V64h96v96zm128 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var tableCellPropertiesIcon = {
  name: "table-cell-properties",
  content: '<path d="m502.666 77.216-22.627 22.627-67.882-67.882 22.627-22.627c12.445-12.445 32.81-12.445 45.255 0l22.627 22.627c12.445 12.445 12.445 32.81 0 45.255zM384 256l32-32v288H0V96h288l-32 32h-96v96h32v96h96v32h96v-96zM128 384H32v96h96v-96zm0-128H32v96h96v-96zm0-128H32v96h96v-96zm128 256h-96v96h96v-96zm128 0h-96v96h96v-96zm8.483-332.365 67.882 67.882-141.588 141.588L290.66 288H224v-66.66l26.895-28.118L392.483 51.635zm22.627 67.882L392.483 96.89 256.719 232.654l11.314 11.314 11.314 11.314L415.11 119.517z" />',
  viewBox: "0 0 512 512"
};
var tableColumnInsertLeftIcon = {
  name: "table-column-insert-left",
  content: '<path d="M32 480V0h128v480H32zM480 32v416H192V32h288zM224 160h96V64h-96v96zm0 128h96v-96h-96v96zm0 128h96v-96h-96v96zm224-96h-96v96h96v-96zm0-32v-96h-96v96h96zm0-224h-96v96h96V64z" />',
  viewBox: "0 0 512 512"
};
var tableColumnInsertRightIcon = {
  name: "table-column-insert-right",
  content: '<path d="M352 480V0h128v480H352zM320 32v416H32V32h288zm-32 32h-96v96h96V64zm0 128h-96v96h96v-96zm0 128h-96v96h96v-96zM64 416h96v-96H64v96zm96-128v-96H64v96h96zM64 160h96V64H64v96z" />',
  viewBox: "0 0 512 512"
};
var tableRowInsertAboveIcon = {
  name: "table-row-insert-above",
  content: '<path d="M480 160H0V32h480v128zM32 192h416v288H32V192zm32 32v96h96v-96H64zm128 0v96h96v-96h-96zm128 0v96h96v-96h-96zm96 224v-96h-96v96h96zm-128-96h-96v96h96v-96zm-128 96v-96H64v96h96z" />',
  viewBox: "0 0 512 512"
};
var tableRowInsertBelowIcon = {
  name: "table-row-insert-below",
  content: '<path d="M480 480H0V352h480v128zM32 32h416v288H32V32zm128 256v-96H64v96h96zm128 0v-96h-96v96h96zm128 0v-96h-96v96h96zM320 64v96h96V64h-96zm-32 0h-96v96h96V64zM64 64v96h96V64H64z" />',
  viewBox: "0 0 512 512"
};
var tableColumnDeleteIcon = {
  name: "table-column-delete",
  content: '<path d="M192 288v224h128V288H192zm0-288v64h128V0H192zm160 32h128v416H352V32zm96 288h-64v96h64v-96zm0-128h-64v96h64v-96zm0-128h-64v96h64V64zM32 32h128v416H32V32zm96 288H64v96h64v-96zm0-128H64v96h64v-96zm0-128H64v96h64V64zm128 89.373L313.373 96 336 118.627 278.627 176 336 233.373 313.373 256 256 198.627 198.627 256 176 233.373 233.373 176 176 118.627 198.627 96 256 153.373z" />',
  viewBox: "0 0 512 512"
};
var tableRowDeleteIcon = {
  name: "table-row-delete",
  content: '<path d="M224 192H0v128h224V192zm288 0h-64v128h64V192zm-32 160v128H64V352h416zm-288 96v-64H96v64h96zm128 0v-64h-96v64h96zm128 0v-64h-96v64h96zm32-416v128H64V32h416zm-288 96V64H96v64h96zm128 0V64h-96v64h96zm128 0V64h-96v64h96zm-89.373 128L416 313.373 393.373 336 336 278.627 278.627 336 256 313.373 313.373 256 256 198.627 278.627 176 336 233.373 393.373 176 416 198.627 358.627 256z" />',
  viewBox: "0 0 512 512"
};
var tableCellDeleteIcon = {
  name: "table-cell-delete",
  content: '<path d="M96 192h160v128H96V192zM32 352h160v128H32V352zm32 32v64h96v-64H64zm128-224H32V32h160v128zm-32-96H64v64h96V64zm262.627 192L480 313.373 457.373 336 400 278.627 342.627 336 320 313.373 377.373 256 320 198.627 342.627 176 400 233.373 457.373 176 480 198.627 422.627 256z" />',
  viewBox: "0 0 512 512"
};
var tableDeleteIcon = {
  name: "table-delete",
  content: '<path d="M32 32v416h416V32H32zm384 128h-64v32h64v96h-64v32h64v96h-96v-64h-32v64h-96v-64h-32v64H64v-96h64v-32H64v-96h64v-32H64V64h96v64h32V64h96v64h32V64h96v96zm-153.4 80 57.4 57.4-22.6 22.6-57.4-57.4-57.4 57.4-22.6-22.6 57.4-57.4-57.4-57.4 22.6-22.6 57.4 57.4 57.4-57.4 22.6 22.6-57.4 57.4z" />',
  viewBox: "0 0 512 512"
};
var cellsMergeIcon = {
  name: "cells-merge",
  content: '<path d="M32 32v448h416V32H32zm160 32h96v64h-96V64zM64 64h96v64H64V64zm96 384H64v-64h96v64zm128 0h-96v-64h96v64zm128 0h-96v-64h96v64zm0-96H64V160h352v192zm0-224h-96V64h96v64z" />',
  viewBox: "0 0 512 512"
};
var cellsMergeHorizontallyIcon = {
  name: "cells-merge-horizontally",
  content: '<path d="M32 32v416h416V32H32zm160 32h96v96h-96V64zM64 64h96v96H64V64zm96 352H64v-96h96v96zm128 0h-96v-96h96v96zm128 0h-96v-96h96v96zm0-128H64v-96h352v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var cellsMergeVerticallyIcon = {
  name: "cells-merge-vertically",
  content: '<path d="M32 448h416V32H32v416zm32-160v-96h96v96H64zm0 128v-96h96v96H64zm352-96v96h-96v-96h96zm0-128v96h-96v-96h96zm0-128v96h-96V64h96zm-128 0v352h-96V64h96zm-128 0v96H64V64h96z" />',
  viewBox: "0 0 512 512"
};
var cellSplitHorizontallyIcon = {
  name: "cell-split-horizontally",
  content: '<path d="M32 32v416h416V32H32zm32 32h160v64H64V64zm160 160h-64v-64h64v64zM64 160h64v64H64v-64zm0 96h160v64H64v-64zm0 160v-64h160v64H64zm192-256h64v64h-64v-64zm160 256H256v-64h160v64zm0-96H256v-64h160v64zm0-96h-64v-64h64v64zm0-96H256V64h160v64z" />',
  viewBox: "0 0 512 512"
};
var cellSplitVerticallyIcon = {
  name: "cell-split-vertically",
  content: '<path d="M32 448h416V32H32v416zm32-32V256h64v160H64zm160-160v64h-64v-64h64zm-64 160v-64h64v64h-64zm96 0V256h64v160h-64zm160 0h-64V256h64v160zM160 224v-64h64v64h-64zM416 64v160h-64V64h64zm-96 0v160h-64V64h64zm-96 0v64h-64V64h64zm-96 0v160H64V64h64z" />',
  viewBox: "0 0 512 512"
};
var tableUnmergeIcon = {
  name: "table-unmerge",
  content: '<path d="M32 32v416h416V32H32zm160 32h96v96h-96V64zm96 128v96h-96v-96h96zM64 64h96v96H64V64zm0 128h96v96H64v-96zm96 224H64v-96h96v96zm128 0h-96v-96h96v96zm128 0h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var paneFreezeIcon = {
  name: "pane-freeze",
  content: '<path d="M32 32v416h416V32H32zm256 32 96 96h-64l-96-96h64zm-128 0 96 96h-64L96 64h64zM64 96l96 96v64l-96-96V96zm0 128 96 96v64l-96-96v-64zm0 192v-64l64 64H64zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96zm128 128h-96v-96h96v96zm0-128h-96v-96h96v96zM352 64h64v64l-64-64z" />',
  viewBox: "0 0 512 512"
};
var rowFreezeIcon = {
  name: "row-freeze",
  content: '<path d="M32 448h416V32H32v416zM64 96l64 64H64V96zm96-32 96 96h-64L96 64h64zm128 0 96 96h-64l-96-96h64zm128 64-64-64h64v64zm-96 160v-96h96v96h-96zm-128 0v-96h96v96h-96zm-32 0H64v-96h96v96zm160 128v-96h96v96h-96zm-128 0v-96h96v96h-96zm-128 0v-96h96v96H64z" />',
  viewBox: "0 0 512 512"
};
var columnFreezeIcon = {
  name: "column-freeze",
  content: '<path d="M32 32v416h416V32H32zm128 32v64L96 64h64zM64 96l96 96v64l-96-96V96zm0 128 96 96v64l-96-96v-64zm0 192v-64l64 64H64zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96zm-96-128V64h96v96h-96zm224 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var toolbarFloatIcon = {
  name: "toolbar-float",
  content: '<path d="M64 352h416v128H64V352zm96 32H96v64h96v-64h-32zm160 0h-96v64h96v-64zm32 0v64h96v-64h-96zM63.961 131.844l90.51 90.51 45.255-45.255-90.51-90.51-45.255 45.255zm0 0 90.51 90.51 45.255-45.255-90.51-90.51-45.255 45.255zm158.392 67.882 67.882-67.882-22.627-22.627-22.627 22.627-90.51-90.51c-12.445-12.445-32.81-12.445-45.255 0l-67.882 67.882c-12.445 12.445-12.445 32.81 0 45.255l90.51 90.51-22.627 22.627 22.627 22.627 67.882-67.882L297.373 320 320 297.373l-97.647-97.647zm-67.882 22.627-90.51-90.51 45.255-45.255 90.51 90.51-45.255 45.255zM480 256h-64v64h64v-64z" />',
  viewBox: "0 0 512 512"
};
var spellCheckerIcon = {
  name: "spell-checker",
  content: '<path d="M113.2 206.2c-7.4 6.2-15.6 10.7-24.6 13.5s-19.3 4.2-31 4.2c-8.4 0-16.1-1-23.1-2.9s-13.1-4.9-18.2-8.8c-5.1-3.9-9.1-8.8-12-14.6C1.4 192 0 185.2 0 177.5c0-18.9 8.1-32.9 24.4-41.9s40.9-13.5 74-13.5h13.7c0-2.6 0-5.3-.1-8.2-.1-2.9-.3-5.4-.7-7.6-.8-7.6-3.5-13.2-8-17-4.5-3.7-11.8-5.6-21.7-5.6-10.4 0-18.1 1.9-23.3 5.8s-7.8 9.5-7.8 16.8H7c2.4-32.7 27.8-49 76.3-49 6.6 0 12.6.2 17.9.6 5.3.4 10.2 1.1 14.6 2 4.4 1 8.6 2.2 12.5 3.7 3.9 1.5 7.6 3.4 11.4 5.7 3.5 2.2 6.4 4.7 9 7.4 2.5 2.8 4.6 6.1 6.4 9.9 1.7 3.9 3 8.3 3.8 13.3s1.2 10.8 1.2 17.4V224h-46.8l-.1-17.8zm-1-58H96.8c-16.2 0-28.4 2-36.5 5.9s-12.2 10.6-12.2 20.2c0 7.3 2.5 12.7 7.5 16.2s11.5 5.2 19.4 5.2c7.6 0 14.6-1.5 21.2-4.5s11.9-6.9 15.8-11.7v-31.3h.2zm125.2-61.6c5.5-7.2 12.3-12.8 20.2-16.7C265.5 66 274 64 283.1 64c10.2 0 19.2 1.9 26.8 5.7 7.7 3.8 14.1 9.2 19.3 16.3 5.2 7.1 9.1 15.7 11.7 25.9s4 21.6 4 34.3-1.2 19-4.3 29.4c-3 10.4-7.6 17.9-13.3 25.2-5.7 7.3-12.6 13-20.7 17.1s-17.3 6.1-27.5 6.1c-17.5 0-31.9-5.2-43.3-15.6V224H192V0h45.4v86.6zm0 91.7c4.4 4.1 9.1 7.2 14.1 9.4 5 2.1 10.5 3.2 16.5 3.2 9.8 0 17.4-4.3 22.7-12.8 5.3-8.6 7.9-14.7 7.9-31.8 0-32.7-9.6-49-28.7-49-6.2 0-12 1.9-17.4 5.6s-10.5 9-15.1 15.8v59.6zM442.2 224c-12.4 0-23.4-1.8-33.3-5.4-9.8-3.6-18.1-8.8-25-15.6-6.8-6.8-12-15.2-15.7-25.1-3.7-9.9-5.5-21.3-5.5-34s1.8-24 5.5-33.9 8.9-18.2 15.9-25.1c6.9-6.9 15.3-12.1 25.2-15.6 9.9-3.6 21.1-5.4 33.6-5.4 20 0 36 4.7 48 14.1s19 23 21 40.9h-41c-1-7-3.9-12.7-8.8-16.9-4.9-4.2-11.2-6.3-19.2-6.3-10.2 0-18.4 3.9-24.5 11.6s-9.2 19.9-9.2 36.6c0 16.5 3.1 28.7 9.2 36.5s14.3 11.7 24.5 11.7c7.9 0 14.4-2.1 19.3-6.3s7.8-9.8 8.7-16.9h41c-2.5 17.7-9.7 31.2-21.5 40.7-11.6 9.6-27.7 14.4-48.2 14.4zm69.8 0L224 512 64 352l64-64 96 96 288-160" />',
  viewBox: "0 0 512 512"
};
var validationXhtmlIcon = {
  name: "validation-xhtml",
  content: '<path d="M192 224h-54l-26.2-96L86 224H32L0 64h42l22 96 22-96h52l22 96 22-96h42l-32 160zm272.5-121.8c4.7 4.2 7.4 9.8 8.5 16.8h38.9c-2-17.9-8.6-31.3-19.9-40.8-11.5-9.3-26.5-14-45.6-14-11.9 0-22.5 1.7-32 5.3-9.4 3.6-17.4 8.9-23.9 15.7-6.7 6.9-11.6 15.2-15.1 25-3.5 10-5.3 21.2-5.3 33.8 0 12.8 1.8 24 5.3 33.8 3.5 10 8.3 18.4 14.8 25.1 6.5 6.7 14.5 11.8 23.8 15.4 9.4 3.6 20 5.4 31.6 5.4 19.4 0 34.7-4.8 45.9-14.3 11.2-9.5 18-23 20.4-40.5H473c-.9 7-3.7 12.6-8.3 16.8-4.7 4.3-10.7 6.3-18.3 6.3-9.8 0-17.5-3.9-23.5-11.7-5.8-7.8-8.6-19.9-8.6-36.3 0-16.7 2.8-28.7 8.6-36.5 5.9-7.8 13.6-11.5 23.5-11.5 7.5 0 13.6 2 18.1 6.2zM316.7 219.8c7.3-2.3 13.6-5.8 18.9-10.2l.1-.1c5.2-4.6 9.1-9.9 11.8-16.1 2.8-6 4.2-12.7 4.2-20.7 0-10-2.7-18.4-8-25.3-3.5-4.4-7.9-7.9-13.2-10.5.3-.3.7-.5 1-.8 3.1-2.4 5.5-5 7.6-8.1 2-3 3.5-6.2 4.5-9.4 1-3.5 1.5-6.9 1.5-10.4 0-6.6-1.3-12.6-3.9-18.1-2.6-5.4-6.4-10.3-11.4-14.2-4.8-4.2-10.5-7.2-17-9.1-6.3-1.8-13.7-2.8-22.1-2.8-7.4 0-14.3 1-20.8 3.1-6.3 2.1-11.7 5.2-16.9 9.3-5 4.1-9 9.2-11.9 15.1-3 5.9-4.9 12.7-5.6 20.3l-.5 5.1h38.2l.5-4.4c1.6-14.6 9.9-16.5 16.9-16.5 4.8 0 8.3 1.1 10.7 3.3l.1.1c2.7 2.5 3.3 7.1 3.3 10.4 0 5.6-1.2 9.4-3.8 11.4l-.1.1c-2.8 2.4-7.2 3.5-13.4 3.5H276v31h13.7c7.4 0 12.8 1.4 16.3 4 3.3 2.7 4.9 6.5 4.9 12.2 0 2.9-.5 5.6-1.4 8-.9 2.3-2.1 4.1-3.9 5.9-1.4 1.5-3.4 2.7-5.9 3.6-2.4.9-5.2 1.4-8.4 1.4-3.4 0-6.3-.4-9-1.3-2.2-.8-4.1-2-5.7-3.5-1.6-1.6-2.8-3.3-3.7-5.2-.8-1.9-1.2-4.1-1.5-6.7l-.4-4.2h-39.1l.3 5c.5 7.4 2.3 14.5 5.3 21 3.1 6.1 7.8 11.8 14.2 16.6 4.9 3.8 10.8 6.6 17.8 8.4h.4c6.4 1.5 13.8 2.3 22.1 2.3 9.5 0 17.5-1.2 24.7-3.5zM64 352l64-64 96 96 288-160-288 288L64 352z" />',
  viewBox: "0 0 512 512"
};
var validationDataIcon = {
  name: "validation-data",
  content: '<path d="m64 352 64-64 96 96 288-160-288 288L64 352zm48.6-193.6c0 13-2.5 24.4-7.6 34.4s-12.3 17.7-21.8 23.1c-9.4 5.4-20.3 8.1-32.7 8.1H0V96h49.5c42.1 0 63.1 20.8 63.1 62.4zm-38 .3c0-6.3-1.2-12-3.5-17-2.4-5-5.7-8.9-10.1-11.7-4.4-2.7-9.6-4.1-15.6-4.1H36v68h10.1c8.6 0 15.6-3.2 20.7-9.5 5.2-6.4 7.8-14.9 7.8-25.7zM216.2 224l-5.5-24h-37.2l-5.9 24H128l42.3-128h45.9L256 224h-39.8zm-23.6-100h-.9c-.1 1.4-.5 3.8-1.2 7.1s-4.1 17.2-10.4 41.9h23.4l-8.6-34.7c-1.1-5-1.9-9.8-2.3-14.3zm127.4 4v96h-32v-96h-32V96h98v32h-34zm120.2 96-5.5-24h-37.2l-5.9 24H352l42.3-128h45.9L480 224h-39.8zm-23.6-100h-.9c-.1 1.4-.5 3.8-1.2 7.1s-4.1 17.2-10.4 41.9h23.4l-8.6-34.7c-1.1-5-1.9-9.8-2.3-14.3z" />',
  viewBox: "0 0 512 512"
};
var toggleFullScreenModeIcon = {
  name: "toggle-full-screen-mode",
  content: '<path d="M448 32H64c-17.6 0-32 14.4-32 32v288c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm0 319.942a.53.53 0 0 1-.058.058H64.058a.454.454 0 0 1-.058-.058V64.057a.511.511 0 0 1 .057-.057h383.885c.02.017.041.038.058.057v287.885zM384 480H128c35.346 0 64-28.654 64-64h128c0 35.346 28.654 64 64 64zm32-160H96c58.263-113.973 183.21-192 320-192v192z" />',
  viewBox: "0 0 512 512"
};
var formulaFxIcon = {
  name: "formula-fx",
  content: '<path d="m214 183.4-24.7 110c-11.5 53.4-22.7 92.1-33.7 116.1-11 24-23.8 41.8-38.4 53.2-14.7 11.6-31.5 17.3-50.5 17.3-12 0-20.7-2.7-26.3-8-5.6-5.3-8.4-11.5-8.4-18.7 0-6.7 2.3-12.5 7-17.4 4.7-4.9 10.8-7.3 18.3-7.3 6.3 0 11.2 1.9 14.5 5.6 3.4 3.7 5.1 8.5 5.1 14.2 0 5.2-1 9.1-3.2 11.6-2.1 2.5-3.2 4.2-3.2 5l1 1.7c.8.8 1.8 1.2 3 1.2 4.2 0 7.8-1.5 10.8-4.7 7.4-7.7 13-17 16.6-27.9 2.5-7.5 7.4-27.4 14.5-59.5l43-192.6h-29.3l7-28.7c10.5.2 18.2-1.4 23-4.7 4.8-3.3 9.8-10.6 15.2-22 15.4-33.1 31.7-60.1 48.9-74.4S260.4 32 281.5 32c13.5 0 23.3 3 29.4 9.1 6.1 6.1 9.2 13.9 9.2 23.5 0 8.5-2 15.2-6.1 20.2-4.1 5.1-9.2 7.5-15.2 7.5-5.6 0-10.3-2-13.9-6.1-3.6-4.1-5.5-9-5.5-14.7 0-4.1 1.1-8.4 3.5-13 2.3-4.6 3.5-7.7 3.5-9.3 0-1.8-.5-3.3-1.6-4.4-1-1.1-2.4-1.7-4.1-1.7-8.3 0-16.8 5.9-25.5 17.9-14.3 19.1-25.9 52.5-34.5 93.8h30.5l-7.4 28.7-29.8-.1zm78.7 22.7 68.9-14.1c12.5 23.3 21.3 48.9 26.5 76.9 12.9-22.7 22.7-38.6 29.3-47.6 8.8-12.2 16.1-20.1 21.8-23.8 5.8-3.7 11.9-5.5 18.3-5.5 7.2 0 12.8 2.4 16.7 7 3.9 4.7 5.8 11 5.8 19 0 7.5-2 13.6-5.8 18.4-3.9 4.7-8.7 7.1-14.5 7.1-4.2 0-9-.9-14.5-2.7-5.4-1.8-9.3-2.7-11.3-2.7-5.6 0-10.8 2.4-15.8 7-6.8 6.4-15.2 20.1-25.3 41 11.2 46.9 20.1 75.5 26.9 85.8 3.9 6.1 7.9 9.2 12.1 9.2 3.4 0 6.4-1 8.9-3 3.8-3.3 9.7-11.5 17.6-24.6l7.1 4.9c-11.6 22.2-22.9 37.9-34 46.9-8.4 7-16.7 10.6-24.9 10.6-8.4 0-15.4-2.3-21-6.7-5.6-4.5-10.6-11.7-14.9-21.8-4.4-10-9.5-26.2-15.4-48.4-15.4 23.3-27.5 40.3-36.3 51-8.7 10.7-16 17.7-21.8 21-5.8 3.3-12 4.9-18.6 4.9-6.8 0-12.3-2.4-16.3-7-4-4.7-6-10.8-6-18.3 0-7.9 2.2-14.5 6.5-19.6 4.3-5.2 9.9-7.7 16.6-7.7 3.6 0 7.6 1.3 12.1 3.7 6.6 3.8 11.3 5.7 14.2 5.7 3.8 0 7.2-.9 10.3-2.8 3.9-2.4 9-7.4 15-15.3 3.7-4.8 10.5-15.1 20.4-31-12.6-55.8-22.5-89.1-29.6-100-4.5-7-10.2-10.6-17-10.6-3.6 0-7.9.6-13 1.9l1-8.8z" />',
  viewBox: "0 0 512 512"
};
var sumIcon = {
  name: "sum",
  content: '<path d="M416 64v128l-64-64H160l128 128-128 128h192l64-64v128H96v-64l128-128L96 128V64h320z" />',
  viewBox: "0 0 512 512"
};
var symbolIcon = {
  name: "symbol",
  content: '<path d="m448 416 32-32v96H320V375.8c11.4-5.1 22.2-11.5 32-19 38.9-29.7 64-76.9 64-130.1C416 136.8 344.4 64 256 64S96 136.8 96 226.7c0 53.2 25.1 100.5 64 130.1 9.8 7.5 20.6 13.9 32 19V480H32v-96l32 32h96v-18.5C84.3 366.7 32 300.6 32 224 32 118 132.3 32 256 32s224 86 224 192c0 76.6-52.3 142.7-128 173.5V416h96z" />',
  viewBox: "0 0 512 512"
};
var dollarIcon = {
  name: "dollar",
  content: '<path d="M326.6 273c-8.3-7.3-18.4-13.6-30.4-19.1-11.8-5.4-25.2-10.2-40.2-14.5V131.3c6.5.8 13 2.2 17.7 4.2 7.5 3.3 13.7 7.8 18.8 13.7 5.1 5.8 8.9 12.7 11.4 20.7 2.6 8 3.8 16.7 3.8 26.2H352c0-29.2-7.5-52-22.5-68.8s-36-26.8-62.9-30.1c0 0-5-.4-10.6-.8V32h-32v66.2c-11.9 1.5-22.6 4.3-32.2 8.4-10.6 4.5-19.6 10.3-27.1 17.5-7.5 7.2-13.2 15.6-17.2 25.4-4 9.7-6 20.5-6 32.2 0 12.7 2.2 23.8 6.7 33.4s11 18.2 19.5 25.6 18.8 13.8 30.9 19.3c7.8 3.5 16.3 6.8 25.4 9.7v110.7c-2.7-.4-5.4-.9-8.1-1.5-7.9-1.8-15.2-5.1-21.7-9.8-6.5-4.7-11.8-11-15.8-19s-6-18-6-30H128c0 16.2 2.6 30 7.9 41.6 5.3 11.6 12.4 21.2 21.3 28.6 8.9 7.5 19.1 13.3 30.6 17.3s23.4 6.5 35.7 7.5c0 0 .2 0 .5.1V480h32v-64.7c1.9-.2 3.1-.3 3.1-.3 14.1-1.3 26.9-4.1 38.4-8.3 11.5-4.3 21.3-10 29.4-17.1 8.1-7.1 14.3-15.6 18.6-25.4 4.3-9.8 6.5-20.9 6.5-33.2 0-12.5-2.2-23.5-6.5-33-4.3-9.4-10.6-17.8-18.9-25zm-104.7-46.2c-8.8-4.1-15.9-8.4-21.2-12.9s-9.1-9.6-11.3-15c-2.2-5.5-3.4-11.6-3.4-18.5 0-7.4 1.2-14.1 3.6-20.3 2.4-6.1 6-11.3 10.8-15.7 4.8-4.3 10.9-7.7 18.3-10.1 1.7-.6 3.5-1 5.3-1.5v94.9c-.6-.2-1.4-.5-2.1-.9zm81 125.2c-3 6.2-7.5 11.4-13.2 15.8-5.8 4.3-12.8 7.7-21.2 10-3.9 1.1-8.1 1.9-12.5 2.5V279.2c5.6 2 10.7 4.1 15.3 6.2 8.6 4 15.6 8.3 20.9 13 5.4 4.7 9.3 9.7 11.7 15.1 2.4 5.4 3.6 11.3 3.6 17.7 0 7.7-1.5 14.7-4.6 20.8z" />',
  viewBox: "0 0 512 512"
};
var percentIcon = {
  name: "percent",
  content: '<path d="M352 64h32L160 448h-32L352 64zm16 160c-44.2 0-80 50.1-80 112s35.8 112 80 112 80-50.1 80-112-35.8-112-80-112zm0 192c-22.7 0-48-32.9-48-80s25.3-80 48-80 48 32.9 48 80-25.3 80-48 80zM144 64c-44.2 0-80 50.1-80 112s35.8 112 80 112 80-50.1 80-112-35.8-112-80-112zm0 192c-22.7 0-48-32.9-48-80s25.3-80 48-80 48 32.9 48 80-25.3 80-48 80z" />',
  viewBox: "0 0 512 512"
};
var customFormatIcon = {
  name: "custom-format",
  content: '<path d="M128 128v224H80V182.4s-13.1 19.1-48 19.1v-40.6c34.9 0 61.7-32.9 61.7-32.9H128zm94.4 184H320v40H169v-16.6c.3-11.3 2.2-21.4 6-30.3 3.8-9 8.6-17 14.3-24.1s12-13.4 18.8-18.9 13.3-10.4 19.4-14.8c6.5-4.6 12.1-9 17-13.2s9-8.4 12.3-12.5 5.8-8.3 7.5-12.6c1.6-4.2 2.5-8.8 2.5-13.6 0-9.4-2.7-16.5-8-21.4-5.3-4.8-13.5-7.2-24.4-7.2-18.9 0-37.1 7.5-54.4 22.6v-42.7c19.2-12.4 40.8-18.6 64.8-18.6 11.2 0 21.2 1.5 30 4.4 8.9 2.9 16.4 7.1 22.5 12.5s10.8 12 14.1 19.7c3.2 7.7 4.8 16.4 4.8 25.9 0 10.1-1.6 19.2-4.7 27-3.1 7.9-7.3 15.1-12.4 21.5-5.2 6.5-11.1 12.4-17.9 17.7-6.8 5.4-13.8 10.6-21 15.6-4.9 3.5-9.7 6.9-14.2 10.4-4.6 3.4-8.6 6.8-12.1 10.1s-6.2 6.6-8.3 9.8c-2.2 3.1-3.2 9.3-3.2 9.3zM341 341.2v-41.7s32.1 15.8 51.5 15.8c12.2 0 21.8-2.6 28.6-7.9 6.8-5.3 10.2-12.5 10.2-21.9 0-9.7-4.2-17.1-12.7-22.3-8.4-5.3-20-7.9-34.8-7.2H364v-37h17.7c28.4 0 42.6-9.4 42.6-28.1 0-17.6-10.9-26.4-32.7-26.4-14.7 0-28.8 4.7-42.6 14v-38.9c15.4-7.7 33.1-11.5 53.6-11.5 22.3 0 39.6 5 52.1 14.9 12.4 10 18.7 22.9 18.7 38.8 0 28.3-14.5 46-43.4 53.2v.3c15.5 1.9 27.6 7.5 36.5 16.8 8.9 9.2 13.3 20.6 13.3 34 0 20.3-7.4 36.4-22.4 48.2-15 11.8-35.5 17.7-61.7 17.7-22.3.1-40.6-3.5-54.7-10.8z" />',
  viewBox: "0 0 512 512"
};
var decimalIncreaseIcon = {
  name: "decimal-increase",
  content: '<path d="M384 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64v-64c0-35.3-28.6-64-64-64zm32 118c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7v-42.7c0-23.5 14.4-42.6 32-42.6 17.7 0 32 19.1 32 42.6V374zM384 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.6-64-64-64zm32 118c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7v-42.7c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7V150zM224 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64s64-28.7 64-64v-64c0-35.3-28.6-64-64-64zm32 118c0 23.6-14.3 42.7-32 42.7s-32-19.1-32-42.7v-42.7c0-23.5 14.3-42.6 32-42.6s32 19.1 32 42.6V374zM96 416h32v32H96v-32zm160-224h32v32h-32v-32zM192 32v192L64 128l128-96z" />',
  viewBox: "0 0 512 512"
};
var decimalDecreaseIcon = {
  name: "decimal-decrease",
  content: '<path d="M384 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.6-64-64-64zm32 116.7c0 23.5-14.3 42.6-32 42.6-17.6 0-32-19.1-32-42.6V106c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7v42.7zM384 256c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64v-64c0-35.3-28.6-64-64-64zm32 116.7c0 23.6-14.3 42.7-32 42.7-17.6 0-32-19.1-32-42.7V330c0-23.6 14.4-42.7 32-42.7 17.7 0 32 19.1 32 42.7v42.7zM224 32c-35.3 0-64 28.7-64 64v64c0 35.3 28.7 64 64 64 35.4 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64zm32 116.7c0 23.5-14.3 42.6-32 42.6s-32-19.1-32-42.6V106c0-23.6 14.3-42.7 32-42.7s32 19.1 32 42.7v42.7zM128 224H96v-32h32v32zm128 192h32v32h-32v-32zM64 256l128 96-128 96V256z" />',
  viewBox: "0 0 512 512"
};
var fontSizeIcon = {
  name: "font-size",
  content: '<path d="M97 224 32 416h29l16.9-50H146l16.9 50h29l-65-192H97zm-8.9 112 23.9-70.6 23.9 70.6H88.1zM376 96h-48L224 416h48l26-80h108l26 80h48L376 96zm-62.4 192L352 169.8 390.4 288h-76.8z" />',
  viewBox: "0 0 512 512"
};
var imageAbsolutePositionIcon = {
  name: "image-absolute-position",
  content: '<path d="M416 240c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm96-80v320c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h320c17.7 0 32 14.3 32 32zm-32 26.7c0-14.7-11.9-26.7-26.7-26.7H186.7c-14.7 0-26.7 11.9-26.7 26.7V384l96-96 96 96 64-64 64 64V186.7zM32 0H0v512h32v-64h32v-32H32v-64h32v-32H32v-64h32v-32H32v-64h32v-32H32V32h96v32h32V32h64v32h32V32h64v32h32V32h64v32h32V32h64V0H32z" />',
  viewBox: "0 0 512 512"
};
var tableWizardIcon = {
  name: "table-wizard",
  content: '<path d="M160 384V160h224v96l32 32V0H0v416h288l-32-32h-96zM288 32h96v96h-96V32zm-128 0h96v96h-96V32zm-32 352H32v-96h96v96zm0-128H32v-96h96v96zm0-128H32V32h96v96zm376.6 362.1-15.5 15.5c-8.6 8.6-22.4 8.6-31 0l-124-124c-8.6-8.6-8.6-22.4 0-31l15.5-15.5c8.6-8.6 22.4-8.6 31 0l124 124c8.6 8.5 8.6 22.4 0 31zm-158.5-209-21-14.8c-3.2-2.3-5.1-6-5.1-10l.3-25.7c.1-6.6-5.2-12.1-11.8-12.2-2.6 0-5.2.8-7.3 2.4l-20.6 15.4c-3.2 2.4-7.3 3-11 1.8l-24.3-8.3c-6.8-2.3-14.3 1.9-15.7 9.3-.4 2.1-.1 4.2.5 6.2l8.2 24.1c1.3 3.7.6 7.8-1.8 11l-15.4 20.6c-4.3 5.8-2.6 14.2 4 17.8 1.9 1 4 1.4 6.1 1.4l25.4-.3c3.9-.1 7.7 1.8 10 5.1l14.8 21c4.2 5.9 12.7 6.9 18.1 1.7 1.5-1.5 2.6-3.3 3.2-5.3l7.5-24.3c1.2-3.8 4.1-6.7 7.9-7.9l24.5-7.6c6.3-2 9.8-8.7 7.9-15-.7-2.7-2.3-4.9-4.4-6.4z" />',
  viewBox: "0 0 512 512"
};
var crosstabIcon = {
  name: "crosstab",
  content: '<path d="M192.3 32H32v160h1v288h447V32H192.3zm-.3 416H96v-96h96v96zm0-128H96v-96h96v96zm0-128H96V96h96v96zm128 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V96h96v96zm128 256h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V96h96v96z" />',
  viewBox: "0 0 512 512"
};
var crosstabWizardIcon = {
  name: "crosstab-wizard",
  content: '<path d="M192 416V192h224v96l32 32V0H0v160h1v288h318.7l-31.9-32H192zM320 64h96v96h-96V64zm-128 0h96v96h-96V64zm-32 352H64v-96h96v96zm0-128H64v-96h96v96zm0-128H64V64h96v96zm344.6 330.1-15.5 15.5c-8.6 8.6-22.4 8.6-31 0l-124-124c-8.6-8.6-8.6-22.4 0-31l15.5-15.5c8.6-8.6 22.4-8.6 31 0l124 124c8.6 8.5 8.6 22.4 0 31zM221.2 300.8c-4.3 5.8-2.6 14.2 4 17.8 1.9 1 4 1.4 6.1 1.4l25.4-.3c3.9-.1 7.7 1.8 10 5.1l14.8 21c4.2 5.9 12.7 6.9 18.1 1.7 1.5-1.5 2.6-3.3 3.2-5.3l7.5-24.3c1.2-3.8 4.1-6.7 7.9-7.9l24.5-7.6c6.3-2 9.9-8.7 7.9-15-.8-2.5-2.4-4.7-4.5-6.2l-21-14.8c-3.2-2.3-5.1-6-5.1-10l.3-25.7c.1-6.6-5.2-12.1-11.8-12.2-2.6 0-5.2.8-7.3 2.4l-20.6 15.4c-3.2 2.4-7.3 3-11 1.8l-24.3-8.3c-6.8-2.3-14.3 1.9-15.7 9.3-.4 2.1-.1 4.2.5 6.2l8.2 24.1c1.3 3.7.6 7.8-1.8 11l-15.3 20.4z" />',
  viewBox: "0 0 512 512"
};
var tableBodyIcon = {
  name: "table-body",
  content: '<path d="M32 32v416h416V32H32zm256 32v96h-96V64h96zm128 256v64L224 192h64l128 128zM64 64h96v96H64V64zm0 128h96v96H64v-96zm0 224v-96h96v96H64zm128 0v-64l64 64h-64zm128 0L192 288v-64l192 192h-64zm96-160-64-64h64v64zm0-96h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var tableColumnGroupsIcon = {
  name: "table-column-groups",
  content: '<path d="M32 32v416h416V32H32zm256 32v64l-64-64h64zm0 320-96-96v-64l96 96v64zM192 96l96 96v64l-96-96V96zM64 64h96v96H64V64zm0 128h96v96H64v-96zm0 224v-96h96v96H64zm128 0v-64l64 64h-64zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var tableCornerIcon = {
  name: "table-corner",
  content: '<path d="M32 32v416h416V32H32zm256 32v96h-96V64h96zm0 128v96h-96v-96h96zM160 64v64L96 64h64zM64 96l64 64H64V96zm0 96h96v96H64v-96zm0 224v-96h96v96H64zm128 0v-96h96v96h-96zm224 0h-96v-96h96v96zm0-128h-96v-96h96v96zm0-128h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var tableRowGroupsIcon = {
  name: "table-row-groups",
  content: '<path d="M32 32v416h416V32H32zm256 32v96h-96V64h96zm-64 128h64l96 96h-64l-96-96zm32 96h-64l-96-96h64l96 96zM64 64h96v96H64V64zm0 160 64 64H64v-64zm0 192v-96h96v96H64zm128 0v-96h96v96h-96zm224 0h-96v-96h96v96zm0-160-64-64h64v64zm0-96h-96V64h96v96z" />',
  viewBox: "0 0 512 512"
};
var globeOutlineIcon = {
  name: "globe-outline",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zM64 256c0-57 24.8-108.2 64.3-143.3.3 1.8 1 3.6 1.9 5.4 11.9 22.1 47.7 92.5 87.8 104.1 40.1 11.6 38.6 22.2 45 29.9 6.5 7.7-12.2 24.4 5.6 55.9 9.6 13.2 18.3 5.5 22.6 27.6 4.1 21-20.6 95-7.8 110.4-9 1.3-18.1 2-27.4 2-106 0-192-86-192-192zm222.4 189.6c10.5-37 41.8-89.2 75.8-98.9 24.4-20.5 23.3-38.8 20.1-55.4-7.6-13.9-41.7-26-74.3-54.8-19.5-4.4-43.4 8.3-52.6-3.9-9.2-12.2-52.6-29.9-33.6-49.3s47.7.6 59.1-39.3 35.2-23.2 47.2-23.2S342.2 92 320 81.5c-16.7-7.9-38.6-16.1-71.7-17.4 2.6-.1 5.2-.2 7.8-.2 106 0 192 86 192 192C448 351.7 378 431 286.4 445.6z" />',
  viewBox: "0 0 512 512"
};
var globeIcon = {
  name: "globe",
  content: '<path d="M256 32C132.3 32 32 132.3 32 256s100.3 224 224 224 224-100.3 224-224S379.7 32 256 32zm106.2 314.7c-34.7 10-66.7 64.2-76.4 101.3-17.9-9.4 9.8-90.2 5.4-112.4-4.3-22.1-13-14.4-22.6-27.6-17.8-31.5.9-48.3-5.6-55.9-6.5-7.7-4.9-18.3-45-29.9-40.1-11.6-75.9-81.9-87.8-104.1-11.9-22.1 26.6-47 81.3-52.6 10.3-1 19.7-1.5 28.4-1.5 37.8.1 61.9 9 80 17.5 22.2 10.5 20.1 39.3 8.1 39.3s-35.8-16.6-47.2 23.2-40.1 19.9-59.1 39.3 24.4 37.1 33.6 49.3c9.2 12.2 33.1-.6 52.6 3.9 32.6 28.8 66.7 41 74.3 54.8 3.3 16.6 4.4 34.9-20 55.4z" />',
  viewBox: "0 0 512 512"
};
var mapMarkerIcon = {
  name: "map-marker",
  content: '<path d="M256 0C158.8 0 80 78.8 80 176s176 336 176 336 176-238.8 176-336S353.2 0 256 0zm0 288c-61.9 0-112-50.1-112-112S194.1 64 256 64s112 50.1 112 112-50.1 112-112 112z" />',
  viewBox: "0 0 512 512"
};
var mapMarkerTargetIcon = {
  name: "map-marker-target",
  content: '<path d="M256 0C158.8 0 80 78.8 80 176s176 336 176 336 176-238.8 176-336S353.2 0 256 0zm0 288c-61.9 0-112-50.1-112-112S194.1 64 256 64s112 50.1 112 112-50.1 112-112 112zm48-112c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48z" />',
  viewBox: "0 0 512 512"
};
var pinIcon = {
  name: "pin",
  content: '<path d="M320 256V96c0-17.6-14.4-32-32-32h-96c-17.6 0-32 14.4-32 32v160H96v32h128v160h32V288h128v-32h-64zm-128 0V96h64v160h-64z" />',
  viewBox: "0 0 512 512"
};
var unpinIcon = {
  name: "unpin",
  content: '<path d="M256 320h160c17.6 0 32-14.4 32-32v-96c0-17.6-14.4-32-32-32H256V96h-32v128H64v32h160v128h32v-64zm0-128h160v64H256v-64z" />',
  viewBox: "0 0 512 512"
};
var shareIcon = {
  name: "share",
  content: '<path d="M480 432c0 44.2-35.8 80-80 80s-80-35.8-80-80c0-10.6 2.1-20.7 5.8-30l-158.6-88.1C152.9 327.6 133.4 336 112 336c-44.2 0-80-35.8-80-80s35.8-80 80-80c21.4 0 40.9 8.4 55.2 22.1L325.8 110c-3.8-9.3-5.8-19.4-5.8-30 0-44.2 35.8-80 80-80s80 35.8 80 80-35.8 80-80 80c-22 0-41.9-8.9-56.4-23.3l-158 87.8c4.1 9.7 6.4 20.3 6.4 31.5s-2.3 21.8-6.4 31.5l158 87.8C358.1 360.9 378 352 400 352c44.2 0 80 35.8 80 80z" />',
  viewBox: "0 0 512 512"
};
var userIcon = {
  name: "user",
  content: '<path d="M352 128c0 53-43 96-96 96s-96-43-96-96 43-96 96-96 96 43 96 96zm-96 128c-106 0-192 86-192 192 0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32 0-106-86-192-192-192z" />',
  viewBox: "0 0 512 512"
};
var inboxIcon = {
  name: "inbox",
  content: '<path d="M384 32H128L32 288v160c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V288L384 32zM150.2 64h211.6l84 224H352l-32 64H192l-32-64H66.2l84-224z" />',
  viewBox: "0 0 512 512"
};
var bloggerIcon = {
  name: "blogger",
  content: '<path d="M188.9 64C119.9 64 64 119.5 64 188v136.1C64 392.5 119.9 448 188.9 448h134.4c69 0 124.7-55.5 124.7-123.9v-87.9c0-13.7-11-28.2-24.8-28.2h-21.5c-13.2 0-24.7-11.2-25.6-24 0-68.5-55.2-120-124.2-120h-63zm-4.9 96h72c13.2 0 24 10.8 24 24s-10.8 24-24 24h-72c-13.2 0-24-10.8-24-24s10.8-24 24-24zm0 144h144c13.2 0 24 10.8 24 24s-10.8 24-24 24H184c-13.2 0-24-10.8-24-24s10.8-24 24-24z" />',
  viewBox: "0 0 512 512"
};
var bloggerBoxIcon = {
  name: "blogger-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-31 280.7c0 57.1-46.6 103.3-104.2 103.3H200.4C142.7 416 96 369.8 96 312.7V199.3C96 142.2 142.7 96 200.4 96h52.1C310 96 356 138.9 356 196c.7 10.7 10.4 20 21.4 20h18c11.5 0 20.7 12.1 20.6 23.5l1 73.2zM196 216h60c11 0 20-9 20-20s-9-20-20-20h-60c-11 0-20 9-20 20s9 20 20 20zm120 80H196c-11 0-20 9-20 20s9 20 20 20h120c11 0 20-9 20-20s-9-20-20-20z" />',
  viewBox: "0 0 512 512"
};
var deliciousIcon = {
  name: "delicious",
  content: '<path d="M256 32h224v224H256V32zM32 256h224v224H32V256z" />',
  viewBox: "0 0 512 512"
};
var deliciousBoxIcon = {
  name: "delicious-box",
  content: '<path d="M480 448V64c0-17.7-14.3-32-32-32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32zm-224-32V256H96V96h160v160h160v160H256z" />',
  viewBox: "0 0 512 512"
};
var diggIcon = {
  name: "digg",
  content: '<path d="M96 96v64H32v160h96V96H96zm64 0v32h32V96h-32zm0 64v160h32V160h-32zm64 0v160h64v32h-64v32h96V160h-96zm128 0v160h64v32h-64v32h96V160h-96zM64 192h32v96H64v-96zm192 0h32v96h-32v-96zm128 0h32v96h-32v-96z" />',
  viewBox: "0 0 512 512"
};
var diggBoxIcon = {
  name: "digg-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM160 203.5V352H64V192h64v-64h32v75.5zM212 352h-32V192h32v160zm0-192h-32v-32h32v32zm119 153.7V416h-96v-32h64v-32h-64V192h96v121.7zm117 0V416h-96v-32h64v-32h-64V192h96v121.7zM96 224h32v96H96v-96zm171 0h32v96h-32v-96zm117 0h32v96h-32v-96z" />',
  viewBox: "0 0 512 512"
};
var envelopeIcon = {
  name: "envelope",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm23.7 32L256 296.3 424.3 128c11 2.9 19.7 11.6 22.6 22.6L342.6 254.9l104.3 104.3c-2.9 11-11.6 19.7-22.6 22.6L320 277.5l-64 64-64-64L87.7 381.8c-11-2.9-19.7-11.6-22.6-22.6l104.3-104.3L65.1 150.6c2.9-11 11.6-19.7 22.6-22.6z" />',
  viewBox: "0 0 512 512"
};
var envelopeBoxIcon = {
  name: "envelope-box",
  content: '<path d="m377 182.4-88.8 88.8-31.2 29-33.2-29-88.8-88.8c-7.7 2-13.8 8.1-15.8 15.8l73 73-73 73c2 7.7 8.1 13.8 15.8 15.8l73-73 49 44.8 47-44.8 73 73c7.7-2 13.8-8.1 15.8-15.8l-73-73 73-73c-2-7.7-8.1-13.8-15.8-15.8zM448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-32 329.6c0 12.4-10 22.4-22.4 22.4H118.4C106 384 96 374 96 361.6V182.4c0-12.4 10-22.4 22.4-22.4h275.2c12.4 0 22.4 10 22.4 22.4v179.2z" />',
  viewBox: "0 0 512 512"
};
var facebookIcon = {
  name: "facebook",
  content: '<path d="M290 32c-59.8 0-96 32-96 96v64h-66v96h66v192h96V288h80l14-96h-94v-32c0-32 32-32 32-32h62V34.9c-7.2-.9-65.4-2.9-94-2.9z" />',
  viewBox: "0 0 512 512"
};
var facebookBoxIcon = {
  name: "facebook-box",
  content: '<path d="M57.6 32C43.6 32 32 43.5 32 57.6v396.8c0 14 11.5 25.6 25.6 25.6h396.8c14 0 25.6-11.5 25.6-25.6V57.6c0-14-11.5-25.6-25.6-25.6H57.6zm315.8 65.5c24.1 0 42 2.3 42 2.3L414 155s-18.2-.2-38.1-.2c-21.5 0-24.9 9.9-24.9 26.1V224h64.1l-2.8 59H351v165h-63V283h-44v-59h44v-50.5c0-39.6 25.8-76 85.4-76z" />',
  viewBox: "0 0 512 512"
};
var googleIcon = {
  name: "google",
  content: '<path d="M268.3 33c-16.1-1-33.4 1-52 4.9s-36.4 12.8-53.2 26.5c-12.6 11-21.9 23.4-28.3 37.3-6.3 13.9-9.4 27.7-9.4 41.5 0 11.4 2.1 22.7 6.5 33.8 4.3 11.1 10.6 21.1 18.8 29.7 8.2 8.6 18.4 15.6 30.6 20.9 12.2 5.3 26.1 7.9 41.8 7.9 3.1 0 6.2-.1 9.4-.3s6.3-.5 9.4-.9c-1.6 3.5-2.9 7-4.1 10.3-1.2 3.3-1.8 7.6-1.8 12.6 0 9 1.9 16.5 5.6 22.6s7.7 11.9 12 17.4c-6.7.4-14.5 1-23.5 1.8s-18.6 2.1-28.8 4.1-20.5 4.6-30.9 7.9-20.1 7.7-29.1 13.2c-17.2 10.2-29.1 22-35.6 35.6-6.5 13.6-9.7 25.6-9.7 36.2 0 11 2.6 21.5 7.7 31.5s12.9 18.9 23.5 26.7c10.6 7.9 23.8 14.1 39.7 18.8 15.9 4.7 34.4 7 55.5 7 25.1 0 47.3-3.2 66.7-9.7s35.6-14.9 48.5-25.3 22.7-22.3 29.4-35.6c6.7-13.3 10-26.9 10-40.6 0-10.2-1.4-19.3-4.2-27.1-2.7-7.9-6.4-14.9-10.8-21.2-4.5-6.3-9.8-12.2-15.9-17.7s-12.3-11-18.5-16.5l-21.1-16.5c-3.2-2.8-6.5-6-10-9.7s-5.3-8.9-5.3-15.6c0-6.7 1.8-12.2 5.3-16.5s7.2-8.4 11.2-12.4c6.2-4.7 12.4-9.7 18.2-15 5.9-5.3 11.2-11.2 15.9-17.6 4.7-6.5 8.4-13.8 11.2-22.1 2.7-8.2 4.1-17.9 4.1-28.8s-1.5-20.8-4.7-29.5c-3.1-8.6-6.8-16.2-11.2-22.7-4.3-6.5-8.8-12-13.5-16.5S315.3 52 315.3 52H352l31.7-20-115.4 1zm-37.1 17.8c12.2 0 22.8 3.6 32 10.9s17 16.4 23.2 27.5c6.2 11 11 22.8 14.1 35.4s4.7 24.2 4.7 34.8c0 5.5-.8 12.4-2.3 20.7s-5.7 15.7-12.4 22.4c-4.7 4.7-10.7 8.7-18 11.8-7.3 3.2-14.6 4.7-22 4.7-12.5 0-23.4-3.6-32.6-10.9-9.2-7.3-16.9-16.3-22.9-26.8-6.1-10.6-10.6-22-13.5-34.2s-4.4-23.2-4.4-33.1c0-7.9.9-15.5 2.7-23S185 76.6 190 70.3c4.7-5.9 10.8-10.6 18.2-14.1 7.5-3.6 15.1-5.4 23-5.4zM260 314h7.3c1.8 0 3.8.2 6.2.6 11 7.8 20.6 14.9 28.8 21.2 8.2 6.2 14.9 12.4 20 18.2 5.1 5.9 8.9 11.8 11.5 18 2.5 6 3.8 12.8 3.8 20.3 0 18.4-7.3 33.6-22 45.6-14.7 11.9-36.2 17.9-64.4 17.9-31.8 0-57-6.7-75.6-20s-27.9-30.6-27.9-51.7c0-10.6 2.1-19.4 6.2-26.5 4.1-7 8.9-12.9 14.4-17.6s11.1-8.3 16.8-10.8c5.7-2.6 10.1-4.4 13.2-5.6 6.3-2 12.7-3.6 19.4-5s12.9-2.4 18.8-3c5.9-.6 11-1 15.3-1.2 4.2-.2 7-.3 8.2-.4z" />',
  viewBox: "0 0 512 512"
};
var googleBoxIcon = {
  name: "google-box",
  content: '<path d="M212.6 236.1c5.1-5.1 8.2-10.8 9.4-17.1s1.8-11.6 1.8-15.8c0-8.1-1.2-17-3.6-26.6s-6-18.6-10.8-27-10.7-15.4-17.7-21-15.2-8.4-24.4-8.4c-6 0-11.8 1.3-17.5 4.1s-10.3 6.3-13.9 10.8c-3.9 4.8-6.5 10-7.8 15.7s-2 11.6-2 17.6c0 7.5 1.1 15.9 3.4 25.2 2.3 9.3 5.7 18 10.3 26.1s10.5 14.9 17.5 20.5c7 5.5 15.3 8.3 24.9 8.3 5.7 0 11.3-1.2 16.8-3.6s10-5.2 13.6-8.8zM448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM270.9 394.1c-5.1 10.2-12.6 19.3-22.4 27.2s-22.2 14.4-37 19.4c-14.8 4.9-31.8 7.4-50.9 7.4-16.2 0-30.3-1.8-42.4-5.4s-22.2-8.4-30.3-14.4-14.1-12.8-18-20.4-5.9-15.6-5.9-24c0-8.1 2.5-17.2 7.4-27.6s14-19.4 27.2-27.2c6.8-4.2 14.3-7.6 22.2-10.1s15.8-4.6 23.6-6c7.8-1.5 15.1-2.5 22-3.1s12.9-1.1 18-1.3c-3.3-4.2-6.4-8.6-9.2-13.3s-4.3-10.4-4.3-17.3c0-3.9.4-7.1 1.3-9.7s1.9-5.2 3.1-7.9c-2.4.3-4.8.5-7.2.7s-4.8.2-7.2.2c-12 0-22.6-2-31.9-6-9.3-4-17.1-9.3-23.4-15.9-6.3-6.6-11.1-14.1-14.3-22.7s-4.9-17.2-4.9-25.8c0-10.5 2.4-21 7.2-31.6s12-20.1 21.6-28.5c12.8-10.5 26.4-17.2 40.6-20.2s27.5-4.5 39.7-4.6H288l-28.7 16h-27.8c2.7 1.9 5.8 4.7 9.4 8.1 3.6 3.5 7 7.6 10.3 12.6s6.1 10.7 8.5 17.3 3.6 14.1 3.6 22.5-1.1 15.7-3.1 22c-2.1 6.3-4.9 11.9-8.5 16.9s-7.6 9.4-12.1 13.5-9.2 7.9-13.9 11.5c-3 3-5.9 6.1-8.5 9.4s-4 7.5-4 12.6 1.3 9.1 4 11.9 5.2 5.3 7.6 7.4l16.2 12.6c4.8 4.2 9.5 8.4 14.1 12.6 4.6 4.2 8.7 8.7 12.1 13.5 3.5 4.8 6.2 10.1 8.3 16.2s3.2 12.9 3.2 20.7c-.1 10.2-2.6 20.5-7.8 30.8zm-34.1-42.6c-3.9-4.5-9-9.1-15.3-13.9s-13.6-10.2-22-16.2c-1.8-.3-3.4-.4-4.7-.4h-5.6c-.9 0-3 .1-6.3.2s-7.2.4-11.7.9-9.3 1.2-14.3 2.3-10 2.3-14.8 3.8c-2.4.9-5.8 2.3-10.1 4.3s-8.6 4.7-12.8 8.3-7.8 8.1-11 13.5c-3.1 5.4-4.7 12.1-4.7 20.2 0 16.2 7.1 29.3 21.3 39.5s33.4 15.3 57.7 15.3c21.5 0 37.9-4.5 49.2-13.7s16.8-20.7 16.8-34.8c0-5.7-1-10.8-2.9-15.5s-4.9-9.3-8.8-13.8z" />',
  viewBox: "0 0 512 512"
};
var googlePlusIcon = {
  name: "google-plus",
  content: '<path d="M204.3 33c-16.1-1-33.4 1-52 4.9s-36.4 12.8-53.2 26.5c-12.6 11-22 23.4-28.3 37.3s-9.4 27.7-9.4 41.5c0 11.4 2.1 22.7 6.5 33.8 4.3 11.1 10.6 21.1 18.8 29.7 8.2 8.6 18.4 15.6 30.6 20.9 12.2 5.3 26.1 7.9 41.8 7.9 3.1 0 6.2-.1 9.4-.3s6.3-.5 9.4-.9c-1.6 3.5-2.9 7-4.1 10.3-1.2 3.3-1.8 7.6-1.8 12.6 0 9 1.9 16.5 5.6 22.6s7.7 11.9 12 17.4c-6.7.4-14.5 1-23.5 1.8s-18.6 2.1-28.8 4.1-20.5 4.6-30.9 7.9-20.1 7.7-29.1 13.2c-17.2 10.2-29.1 22-35.6 35.6-6.5 13.6-9.7 25.6-9.7 36.2 0 11 2.6 21.5 7.7 31.5s12.9 18.9 23.5 26.7C73.8 462 87 468.3 102.9 473s34.4 7 55.6 7c25.1 0 47.3-3.2 66.7-9.7s35.6-14.9 48.5-25.3 22.7-22.3 29.4-35.6c6.7-13.3 10-26.9 10-40.6 0-10.2-1.4-19.3-4.2-27.1-2.7-7.9-6.4-14.9-10.8-21.2-4.5-6.3-9.8-12.2-15.9-17.7s-12.3-11-18.5-16.5l-21.2-16.5c-3.2-2.8-6.5-6-10-9.7s-5.3-8.9-5.3-15.6c0-6.7 1.8-12.2 5.3-16.5s7.2-8.4 11.2-12.4c6.2-4.7 12.4-9.7 18.2-15 5.9-5.3 11.2-11.2 15.9-17.6 4.7-6.5 8.4-13.8 11.2-22.1 2.7-8.2 4.1-17.9 4.1-28.8s-1.5-20.8-4.7-29.5c-3.1-8.6-6.8-16.2-11.2-22.7-4.3-6.5-8.8-12-13.5-16.5S251.3 52 251.3 52H288l31.7-20-115.4 1zm-37 17.8c12.2 0 22.8 3.6 32 10.9s17 16.4 23.2 27.5c6.2 11 11 22.8 14.1 35.4s4.7 24.2 4.7 34.8c0 5.5-.8 12.4-2.3 20.7-1.6 8.3-5.7 15.7-12.4 22.4-4.7 4.7-10.7 8.7-18 11.8-7.3 3.2-14.6 4.7-22 4.7-12.5 0-23.4-3.6-32.6-10.9-9.2-7.3-16.9-16.3-22.9-26.8-6.1-10.6-10.6-22-13.5-34.2s-4.4-23.2-4.4-33.1c0-7.9.9-15.5 2.7-23S121 76.6 126 70.3c4.7-5.9 10.8-10.6 18.2-14.1 7.5-3.6 15.2-5.4 23.1-5.4zM196.1 314h7.3c1.8 0 3.8.2 6.2.6 11 7.8 20.6 14.9 28.8 21.2 8.2 6.2 14.9 12.4 20 18.2 5.1 5.9 8.9 11.8 11.5 18 2.5 6 3.8 12.8 3.8 20.3 0 18.4-7.3 33.6-22 45.6-14.7 11.9-36.2 17.9-64.4 17.9-31.8 0-57-6.7-75.6-20s-27.9-30.6-27.9-51.7c0-10.6 2.1-19.4 6.2-26.5s8.9-12.9 14.4-17.6 11.1-8.3 16.8-10.8c5.7-2.6 10.1-4.4 13.2-5.6 6.3-2 12.7-3.6 19.4-5s12.9-2.4 18.8-3c5.9-.6 11-1 15.3-1.2 4.2-.2 6.9-.3 8.2-.4zM384 32v64h-64v32h64v64h32v-64h64V96h-64V32h-32z" />',
  viewBox: "0 0 512 512"
};
var googlePlusBoxIcon = {
  name: "google-plus-box",
  content: '<path d="M212.6 236.1c5.1-5.1 8.2-10.8 9.4-17.1s1.8-11.6 1.8-15.8c0-8.1-1.2-17-3.6-26.6s-6-18.6-10.8-27-10.7-15.4-17.7-21-15.2-8.4-24.4-8.4c-6 0-11.8 1.3-17.5 4.1s-10.3 6.3-13.9 10.8c-3.9 4.8-6.5 10-7.8 15.7s-2 11.6-2 17.6c0 7.5 1.1 15.9 3.4 25.2 2.3 9.3 5.7 18 10.3 26.1s10.5 14.9 17.5 20.5c7 5.5 15.3 8.3 24.9 8.3 5.7 0 11.3-1.2 16.8-3.6s10-5.2 13.6-8.8zM448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM270.9 394.1c-5.1 10.2-12.6 19.3-22.4 27.2s-22.2 14.4-37 19.4c-14.8 4.9-31.8 7.4-50.9 7.4-16.2 0-30.3-1.8-42.4-5.4s-22.2-8.4-30.3-14.4-14.1-12.8-18-20.4-5.9-15.6-5.9-24c0-8.1 2.5-17.2 7.4-27.6s14-19.4 27.2-27.2c6.8-4.2 14.3-7.6 22.2-10.1s15.8-4.6 23.6-6c7.8-1.5 15.1-2.5 22-3.1s12.9-1.1 18-1.3c-3.3-4.2-6.4-8.6-9.2-13.3s-4.3-10.4-4.3-17.3c0-3.9.4-7.1 1.3-9.7s1.9-5.2 3.1-7.9c-2.4.3-4.8.5-7.2.7s-4.8.2-7.2.2c-12 0-22.6-2-31.9-6-9.3-4-17.1-9.3-23.4-15.9-6.3-6.6-11.1-14.1-14.3-22.7s-4.9-17.2-4.9-25.8c0-10.5 2.4-21 7.2-31.6s12-20.1 21.6-28.5c12.8-10.5 26.4-17.2 40.6-20.2s27.5-4.5 39.7-4.6H288l-28.7 16h-27.8c2.7 1.9 5.8 4.7 9.4 8.1 3.6 3.5 7 7.6 10.3 12.6s6.1 10.7 8.5 17.3 3.6 14.1 3.6 22.5-1.1 15.7-3.1 22c-2.1 6.3-4.9 11.9-8.5 16.9s-7.6 9.4-12.1 13.5-9.2 7.9-13.9 11.5c-3 3-5.9 6.1-8.5 9.4s-4 7.5-4 12.6 1.3 9.1 4 11.9 5.2 5.3 7.6 7.4l16.2 12.6c4.8 4.2 9.5 8.4 14.1 12.6 4.6 4.2 8.7 8.7 12.1 13.5 3.5 4.8 6.2 10.1 8.3 16.2s3.2 12.9 3.2 20.7c-.1 10.2-2.6 20.5-7.8 30.8zM448 192h-64v64h-32v-64h-64v-32h64V96h32v64h64v32zM236.8 351.5c-3.9-4.5-9-9.1-15.3-13.9s-13.6-10.2-22-16.2c-1.8-.3-3.4-.4-4.7-.4h-5.6c-.9 0-3 .1-6.3.2s-7.2.4-11.7.9-9.3 1.2-14.3 2.3-10 2.3-14.8 3.8c-2.4.9-5.8 2.3-10.1 4.3s-8.6 4.7-12.8 8.3-7.8 8.1-11 13.5c-3.1 5.4-4.7 12.1-4.7 20.2 0 16.2 7.1 29.3 21.3 39.5s33.4 15.3 57.7 15.3c21.5 0 37.9-4.5 49.2-13.7s16.8-20.7 16.8-34.8c0-5.7-1-10.8-2.9-15.5s-4.9-9.3-8.8-13.8z" />',
  viewBox: "0 0 512 512"
};
var linkedinIcon = {
  name: "linkedin",
  content: '<path d="M112 32c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zM64 160v288h96V160H64zm128 0v288h96V288c0-32 32-32 32-32s32 0 32 32v160h96V290.9c0-66.5-13.6-130.9-96-130.9-36.2 0-62.9 32-64 44.9V160h-96z" />',
  viewBox: "0 0 512 512"
};
var linkedinBoxIcon = {
  name: "linkedin-box",
  content: '<path d="M448 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zM160 416H96V192h64v224zm-32-256c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm288 256h-64V288c0-17.7-14.3-32-32-32s-32 14.3-32 32v128h-64V192h64v39.7c13.2-18.1 33.4-39.7 56-39.7 39.8 0 72 35.8 72 80v144z" />',
  viewBox: "0 0 512 512"
};
var myspaceIcon = {
  name: "myspace",
  content: '<path d="M400 64c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zm-176 64c-35.4 0-64 28.6-64 64s28.6 64 64 64 64-28.6 64-64-28.6-64-64-64zM80 192c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm320 64c-44.2 0-80 36.1-80 80.5V448h160V336.5c0-44.5-35.8-80.5-80-80.5zm-176 32c-35.4 0-64 31.5-64 70.3V448h128v-89.7c0-38.8-28.6-70.3-64-70.3zM80 320c-26.5 0-48 21.8-48 48.7V448h96v-79.3c0-26.9-21.5-48.7-48-48.7z" />',
  viewBox: "0 0 512 512"
};
var myspaceBoxIcon = {
  name: "myspace-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM128 416H64v-63.5c0-17.9 14.3-32.5 32-32.5s32 14.5 32 32.5V416zM96 288c-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32-14.3 32-32 32zm160 128h-96v-75.3c0-29.1 21.5-52.7 48-52.7s48 23.6 48 52.7V416zm-48-160c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48zm208 160H288v-92.9c0-37.1 27.2-67.1 64-67.1s64 30 64 67.1V416zm-64-192c-35.4 0-64-28.6-64-64s28.6-64 64-64 64 28.6 64 64-28.6 64-64 64z" />',
  viewBox: "0 0 512 512"
};
var pinterestIcon = {
  name: "pinterest",
  content: '<path d="M250.7 32C126.6 32 64 119.7 64 192.7c0 44.3 17 83.6 53.5 98.3 6 2.4 11.4.1 13.1-6.4 1.2-4.5 4.1-15.9 5.3-20.7 1.8-6.5 1.1-8.7-3.7-14.3-10.5-12.2-17.2-28.1-17.2-50.5 0-65.1 49.4-123.3 128.6-123.3 70.2 0 108.7 42.2 108.7 98.6 0 74.2-33.3 136.8-82.8 136.8-27.3 0-47.8-22.2-41.2-49.6 7.9-32.6 23.1-67.8 23.1-91.3 0-21.1-11.5-38.7-35.2-38.7-27.9 0-50.4 28.5-50.4 66.6 0 24.3 8.3 40.7 8.3 40.7s-28.6 119.3-33.6 140.2c-10 41.6-1.5 92.7-.8 97.8.5 3 4.4 3.7 6.2 1.5 2.6-3.3 35.9-43.8 47.2-84.2 3.2-11.4 18.4-70.8 18.4-70.8 9.1 17.1 35.6 32.1 63.8 32.1 84 0 141-75.4 141-176.4C416 103 350.3 32 250.7 32z" />',
  viewBox: "0 0 512 512"
};
var pinterestBoxIcon = {
  name: "pinterest-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM276.6 327.3c-19.8 0-38.5-10.8-44.9-22.9 0 0-10.7 42.4-12.9 50.5-8 28.9-31.4 57.8-33.2 60.2-1.3 1.6-4.1 1.1-4.4-1.1-.5-3.7-6.5-40.1.5-69.9 3.5-14.9 23.6-100.2 23.6-100.2s-5.9-11.7-5.9-29.1c0-27.2 15.8-47.6 35.5-47.6 16.7 0 24.8 12.5 24.8 27.6 0 16.8-10.7 41.9-16.2 65.2-4.6 19.5 9.8 35.4 29 35.4 34.8 0 58.3-44.7 58.3-97.7 0-40.3-27.1-70.4-76.5-70.4-55.7 0-90.5 41.6-90.5 88 0 16 4.7 27.3 12.1 36.1 3.4 4 3.9 5.6 2.6 10.2-.9 3.4-2.9 11.5-3.7 14.8-1.2 4.6-5 6.3-9.2 4.6-25.6-10.4-37.6-38.5-37.6-70.2C128 158.6 172 96 259.4 96c70.2 0 116.4 50.8 116.4 105.3-.1 72.1-40.2 126-99.2 126z" />',
  viewBox: "0 0 512 512"
};
var redditIcon = {
  name: "reddit",
  content: '<path d="M420.3 33c-7 0-14.5 1-22.4 3h-1.7c-12.4 4.8-21.9 12.3-28.8 22.5-17-7-34-10.4-50.7-10.4-6.3 0-12.6.6-19.1 1.9H296c-8.8 2.1-16.5 5.8-23.3 11s-12.4 11.6-16.6 19.1c-5.3 8.7-8.9 31.3-10.5 41.1-1.7 9.8-2.6 25-2.6 34.7-20.9 1.5-41.8 4.5-62.8 9.1s-40.6 11.9-59 21.9c-1.3.4-2.5.9-3.5 1.3s-2 .9-2.9 1.3c-6.2-4.5-13-8-20.5-10.6-7.8-2.6-16.1-3.9-24.9-3.9h-5.8c-8.7 0-16.7 1.6-24.1 4.8s-14.1 7.7-20.3 13.4c-5.8 5.8-10.3 12.2-13.9 19.4-3.6 7.3-5.3 14.8-5.3 22.7.4 10.8 4.4 21.3 11.8 31.4 5.7 8.3 13.8 15.4 24.3 21.1-.5 2.1-.7 4.4-1 6.8-.2 2.5-.3 4.8-.3 6.9 0 10 1.5 20 4.5 30.1 3 10.1 7.4 19.4 13.1 28.1 10.9 16.6 24.5 30.5 40.9 41.6 16.4 11 33.8 20.2 52.1 27.2 17.5 6.6 35.5 11.6 54 14.8 18.6 3.3 37.4 5 56.6 5 12.5 0 25.1-.8 37.5-2.4 12.5-1.6 25-3.7 37.6-6.3 23.2-5.5 45.5-13.9 66.8-25.1s39.4-26 54.3-44.3c17.1-20.5 25.6-43.4 25.6-68.8 0-2.6-.1-5.1-.4-7.5-.3-2.4-.5-4.7-.9-6.8 10-4.9 18.3-11.9 24.9-21.1 7.1-9.6 10.6-20.3 10.6-32v-3c-1.2-13.4-6.8-25.1-16.3-34.9-9.8-10-21.2-16.7-34.2-20.1h-.6c-6-1.3-11.6-1.9-16.9-1.9-14.1-.2-26.6 3.2-37.4 10.2-2.3 1.1-5.2 2.8-8.6 5.4-.8-.9-1.8-1.3-2.6-1.3l-.7-.6c-18.2-9.6-37.5-16.9-57.7-21.8-20.1-4.9-40.6-8-61.6-9.3 0-7.7.7-34.2 1.8-41.9s3.7-14.8 7.5-21.4c4.9-9.6 13.4-15.1 25.6-16.4h5.8c7.4 0 14.7 1.1 21.7 3 7.1 2 14.1 4.3 21.2 6.9v1.9c0 7.5 1.5 14.2 4.5 20.3 2.9 6 6.9 11.6 11.8 16.5 10.3 10.4 22.8 16.3 37.7 17.5h7.3c14.9 0 28.1-4.8 39.8-14.4 5.3-4.4 9.7-9.6 13.1-15.5s5.5-12.5 6.4-20c.4-1.3.6-3.2.6-5.8.2-11-3.3-21.4-10.3-30.9-7.1-9.2-15.8-15.7-26.2-19.5h-.5c-6.5-2.7-14.1-4.1-22.9-4zm1.2 27.4c7.2.1 13.2 2.7 18.3 7.7C446 73 449 79.2 449 86.7V88c-.8 6.8-3.9 12.7-9.3 17.6-5.5 4.9-11.9 7.4-19.1 7.4h-1.9c-7.1 0-13.4-2.5-19.4-7.4-5.5-4.7-8.3-10.6-8.3-17.6v-1.3c0-6.6 2.1-12.1 6.5-16.6 3.8-4.7 8.9-7.7 15.1-8.9 2-.4 4.4-.6 7.5-.6.4-.2.9-.2 1.4-.2zm-165 125.7c10 0 20.3.5 30.8 1.6 10.6 1.1 20.9 2.7 30.8 4.8l9.9 2.6 10.2 2.6c17.5 4.9 34.1 11.9 49.9 21.1 15.8 9.2 29 20.8 40 34.9 5.1 7.3 9.2 14.9 12.3 23 3.1 8.1 4.6 16.5 4.6 25.3v7.6c0 2.3-.4 4.6-1.3 6.7-2.8 12.4-8.5 24-17.3 34.9-7.4 10-17 19.2-28.8 27.5-17.5 11.7-36.4 20.7-56.9 26.9-20.4 6.2-41.3 10.1-62.7 11.8-3.6.5-7.3.6-10.8.6h-10.8c-21.3 0-42.4-2.2-63.1-6.6-20.8-4.4-40.3-11.4-58.6-21l-4.5-2.6-4.8-2.2c-13-8.3-24.4-17.5-34.5-27.5-10.2-11.5-17.2-24-21.1-37.4-1.7-5.2-2.6-11.2-2.6-18.2 0-18.1 5.6-34.2 16.9-48.3 11-14.1 24.4-25.8 40.1-35.2s32.2-16.5 49.7-21.4c26.2-7.7 53.7-11.6 82.6-11.5zM65.7 204h3.2c3.2 0 6.1.4 8.8 1.3 2.6.9 5.4 1.7 8.4 2.6-8.7 7-16.5 14.6-23.5 22.7-6.9 8.1-12.8 17-17.7 26.6-2.8-2-5.2-4.8-7.4-8.6-3-3.5-4.5-7.8-4.5-13.1v-2.1c.7-7.7 4-14.4 10.3-20.2 7.1-5.3 14.6-8.3 22.4-9.2zm377.6-.4c6.4 0 12.7 1.5 18.9 4.4 6.1 3.5 10.8 7.8 13.7 13.2 2.1 4.5 3.2 8.6 3.2 12.5 0 5.3-1.2 10.1-3.8 14.4-2.4 3.6-5 6.7-8 9.2-4.7-10-10.6-19.1-17.6-27.2-7-8.1-14.9-15.6-23.6-22.7 5.3-2.6 11-3.8 17.2-3.8zm-107.6 43.2c-3.6 0-7.4.7-11.2 1.9-6.2 2.2-11.2 5.9-15 11.2-4 4.7-6.1 10.3-6.1 16.9 0 2.4.2 4.2.6 5.5v.6c1.3 7.5 5.1 13.1 11.2 17 6.2 4.7 13.2 7 21.1 7 2.5 0 5.5-.6 9-1.9h.9c5.6-1.1 11-4.5 16.3-10.2 3.8-5.3 5.8-11.4 5.8-18 0-3-.6-6.2-2-9.6-1.6-6.2-5.6-11.3-11.8-15.3-5.9-3.3-12.2-5.1-18.8-5.1zm-158.8-.1c-2.6 0-4.7.2-6.3.7-5.8.9-10.8 3.1-15.2 6.9-4.4 3.7-7.4 8.3-9.1 13.6-.9 1.2-1.3 2.7-1.3 4.1v4.2c0 7 1.9 13.2 5.8 18.6 4.2 5.1 9.6 8.5 16.3 10.2 3 1.2 6.3 1.9 9.9 1.9 8.3 0 15.8-2.8 22.4-8.3 7.1-5.7 10.6-12.8 10.6-21.1v-2c0-7.9-3.3-14.6-9.9-20.1-7.2-5.8-14.9-8.7-23.2-8.7zm-1.6 94c-1.2 0-3.2.5-5.7 1.3h-.8c-2.6.8-5 2.7-7.3 5.7-1.2 2.1-1.9 4.8-1.9 8 0 2.6.6 5.2 1.9 8 1.3 2.2 3.2 3.9 5.8 5.1 24.5 15.4 51.4 23.1 80.7 23.1h4.8c14.1 0 27.8-1.3 41-4s26.1-6.9 38.5-12.6c1.7-.9 3.5-1.7 5.4-2.6 1.9-.8 3.9-1.9 6-3.2 2.2-.9 4-2.1 5.5-3.8 2.1-2.1 3.3-4.4 3.8-6.8.4-.8.7-1.9.7-3.2 0-1.3-.4-3.2-1.3-5.8-1.3-3.2-3.5-5.4-6.4-6.7-3.3-1.7-6.2-2.6-8.6-2.6-2.5 0-5.3.6-8 2-23.2 13-48.6 19.6-76 19.8-20.4 0-39.5-3.9-57-11.8-2.5-.9-5.7-2.9-9.2-6.1-.9-.4-1.8-.8-2.8-1.3-1-.5-2.2-.9-3.3-1.3-2.7-.8-4.6-1.3-5.8-1.2z" />',
  viewBox: "0 0 512 512"
};
var redditBoxIcon = {
  name: "reddit-box",
  content: '<path d="M111.1 244.9c-5.2 6.1-9.6 12.7-13.2 19.9-2.1-1.5-3.9-3.6-5.5-6.5-2.3-2.6-3.4-5.9-3.4-9.8v-1.4c.5-5.8 3-10.8 7.7-15.1 5.3-4 10.9-6.3 16.8-7h2.4c2.4 0 4.6.3 6.6 1 2 .6 4.1 1.3 6.3 1.9a124.3 124.3 0 0 0-17.7 17zm252.1-94.3c4.4 3.7 9.1 5.4 14.4 5.4h1.4c5.3 0 10-1.8 14.2-5.4 4-3.7 6.3-8 6.9-13.1v-1c0-5.5-2.3-10.1-6.9-13.8-3.8-3.8-8.3-5.6-13.6-5.7h-1.1c-2.2 0-4.1.1-5.5.5-4.6.9-8.4 3.2-11.2 6.6-3.3 3.4-4.8 7.4-4.8 12.4v1c0 5.1 2 9.5 6.2 13.1zM394.5 279c2.3 6.1 3.5 12.4 3.5 19v5.7c0 1.8-.3 3.4-1 5-2.1 9.3-6.4 18-13 26.2-5.6 7.5-12.8 14.4-21.6 20.6-13.1 8.8-27.3 15.5-42.7 20.2-15.4 4.7-31 7.6-47 8.9-2.7.4-5.5.5-8.1.5h-8.1c-16 0-31.8-1.6-47.4-4.9s-30.2-8.5-44-15.7l-3.4-1.9-3.6-1.7c-9.8-6.2-18.3-13.1-25.8-20.6-7.7-8.6-12.9-18-15.8-28.1-1.3-3.9-1.9-8.4-1.9-13.7 0-13.6 4.2-25.7 12.7-36.3 8.3-10.6 18.3-19.3 30.1-26.4 11.8-7 24.2-12.4 37.3-16.1 19.6-5.7 40.2-8.7 61.8-8.7h.1c7.5 0 15.2.4 23.1 1.2s15.6 2 23.1 3.6l7.4 1.9 7.7 1.9c13.1 3.7 25.6 9 37.4 15.8 11.9 6.9 21.8 15.6 30 26.2 3.8 5.6 6.9 11.4 9.2 17.4zm-205.9 21.9c2.3.9 4.7 1.4 7.5 1.4 6.3 0 12-2.1 16.9-6.3 5.3-4.3 8-9.7 8-15.9v-1.5c0-5.9-2.5-11-7.5-15.2-5.3-4.3-11.2-6.6-17.4-6.6-1.9 0-3.5.1-4.7.5-4.3.6-8.2 2.3-11.5 5.2-3.3 2.8-5.5 6.3-6.9 10.3-.7.9-1 2-1 3.1v3.1c0 5.3 1.4 10 4.3 14 3.3 4 7.3 6.7 12.3 7.9zm139.5 38.2c0-1-.3-2.4-1-4.3-1-2.4-2.6-4.1-4.7-4.9-2.5-1.3-4.6-1.9-6.4-1.9-1.9 0-4 .5-5.9 1.5-17.2 9.6-36 14.5-56.2 14.7-15.1 0-29.3-3-42.2-8.8-1.9-.6-4.2-2.2-6.8-4.6-.6-.3-1.3-.6-2.1-1s-1.6-.6-2.4-1c-1.9-.6-3.4-1-4.3-1v.1c-.9 0-2.4.4-4.3 1h-.5c-1.9.6-3.7 2-5.4 4.3-.9 1.6-1.4 3.6-1.4 5.9 0 1.9.5 3.9 1.4 5.9 1 1.6 2.4 2.9 4.3 3.8 18.2 11.4 38.1 17.1 59.8 17.1h3.6c10.5 0 20.6-1 30.4-3 9.8-2 19.3-5.1 28.5-9.4 1.2-.6 2.6-1.3 4.1-1.9 1.4-.6 3-1.4 4.5-2.4 1.6-.7 3-1.6 4.1-2.9 1.6-1.6 2.5-3.3 2.9-5-.2-.4 0-1.2 0-2.2zm12.2-59.2c0-2.2-.5-4.6-1.5-7.2-1.2-4.6-4.2-8.4-8.8-11.5-4.5-2.6-9.2-3.9-14.1-3.9-2.7 0-5.5.5-8.4 1.4-4.6 1.6-8.4 4.4-11.3 8.4-3 3.5-4.6 7.8-4.6 12.7 0 1.8.2 3.1.4 4.1v.5c1 5.6 3.8 9.8 8.4 12.7 4.6 3.5 9.9 5.3 15.8 5.3 1.9 0 4.1-.5 6.7-1.4h.7c4.2-.8 8.2-3.4 12.2-7.7 3-3.9 4.5-8.4 4.5-13.4zM480 64v384c0 17.6-14.4 32-32 32H64c-17.6 0-32-14.4-32-32V64c0-17.6 14.4-32 32-32h384c17.6 0 32 14.4 32 32zm-32.3 181c-.9-10.3-5.2-19.1-12.4-26.6-7.4-7.6-16.2-12.7-26-15.4h-.1c-4.5-1-8.7-1.4-12.7-1.4-10.6-.2-19.8 2.4-28 7.7-1.7.8-3.9 2.1-6.5 4.1-.6-.6-1.3-1-1.9-1l-.5-.5c-13.7-7.2-28-12.7-43.1-16.3-15.1-3.7-30.4-6-46.1-7 0-5.8.5-25.5 1.4-31.3.9-5.8 2.8-11.1 5.6-16.1 3.6-7.2 10.1-11.3 19.1-12.3h4.3c5.6 0 11 .8 16.3 2.3s10.6 3.2 15.9 5.2v1.5c0 5.6 1.1 10.8 3.4 15.3 2.2 4.5 5.2 8.7 8.8 12.5 7.7 7.8 17.1 12.3 28.4 13.3h5.5c11.2 0 21.1-3.6 30.1-10.9 4-3.3 7.3-7.2 9.8-11.7 2.6-4.4 4.2-9.4 4.8-15.1.3-1 .5-2.4.5-4.3.2-8.3-2.4-16.2-7.7-23.4-5.3-6.9-11.9-11.9-19.7-14.7h-.5c-4.9-2.3-10.7-3.4-17.3-3.4-5.4 0-11.1.8-17.1 2.4h-.4c-9.7 3.8-17.1 9.7-22.5 17.6-13.3-5.4-26.5-8-39.5-8-4.9 0-9.9.5-14.9 1.4h.9c-6.6 1.6-12.4 4.4-17.5 8.3-5.1 3.9-9.3 8.7-12.5 14.3-4 6.5-6.6 23.5-7.9 30.9-1.3 7.3-1.9 18.7-1.9 26-15.7 1.1-31.3 3.4-47.2 6.8-15.7 3.5-30.4 8.9-44.2 16.4-1 .3-1.8.7-2.6 1s-1.5.6-2.2 1c-4.7-3.4-9.7-6-15.4-7.9-5.9-1.9-12.1-2.9-18.6-2.9h-4.3c-6.5 0-12.6 1.2-18.1 3.6s-10.6 5.8-15.2 10.1c-4.3 4.3-7.8 9.2-10.4 14.5-2.7 5.4-3.9 11-3.9 16.9.3 8.1 3.3 16 8.9 23.5 4.3 6.2 10.4 11.5 18.2 15.8-.4 1.6-.6 3.3-.7 5.1-.1 1.8-.2 3.6-.2 5.2 0 7.5 1.1 15 3.4 22.6 2.3 7.5 5.5 14.6 9.8 21.1 8.1 12.5 18.4 22.9 30.7 31.2s25.3 15.1 39.1 20.4c13.1 5 26.6 8.7 40.5 11.1 13.9 2.5 28.1 3.7 42.4 3.7 9.4 0 18.8-.6 28.1-1.8 9.4-1.2 18.8-2.8 28.2-4.7 17.4-4.1 34.1-10.4 50.2-18.8s29.5-19.5 40.8-33.2c12.8-15.4 19.2-32.6 19.2-51.7 0-1.9-.1-3.8-.3-5.6-.2-1.8-.4-3.6-.7-5.1 7.5-3.7 13.7-8.9 18.7-15.8 5.3-7.2 7.9-15.2 7.9-24V245h-.2zm-37.1-17c-4.7-2.2-9.4-3.3-14.1-3.3-4.6 0-8.9.9-12.9 2.9 6.5 5.3 12.5 10.9 17.7 17 5.3 6.1 9.7 12.9 13.2 20.4 2.2-1.9 4.2-4.2 6-6.9 1.9-3.2 2.9-6.8 2.9-10.8 0-2.9-.9-6-2.4-9.4-2.3-4-5.8-7.3-10.4-9.9z" />',
  viewBox: "0 0 512 512"
};
var stumbleUponIcon = {
  name: "stumble-upon",
  content: '<path d="m288.1 256 26.8 8.4L352 256v64c1.1 18.9 12.8 32 32 32s30.9-13.1 32-32v-64h64v64s0 96-96 96-96-96-96-96l.1-64zm26.8-23.2L288 224v-32s0-32-32-32-32 32-32 32v128s0 96-96 96-96-96-96-96v-64h64v64c1.1 18.9 12.8 32 32 32 19.1 0 30.9-13.2 32.1-32h-.1V192s0-96 96-96 96 96 96 96v32l-37.1 8.8z" />',
  viewBox: "0 0 512 512"
};
var stumbleUponBoxIcon = {
  name: "stumble-upon-box",
  content: '<path d="M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H64zm191.5 96.3c82.5 0 82.5 87.3 82.5 87.3v8.4l-31.9 8-23.1-8v-8.6s0-29.2-27.5-29.2-27.5 29.2-27.5 29.2v81.5s0 87-82 87-82-87-82-87V256h55v41h-.9c.9 17.2 11 29.1 27.5 29.1s26.6-12 27.6-29.1h-.2v-81.4s0-87.3 82.5-87.3zM283.1 256l23 7.6L338 256v40.7c.9 17.2 11 29.1 27.5 29.1s26.6-11.9 27.5-29.1V256h55v40.7s0 87.3-82.5 87.3-82.5-87.3-82.5-87.3l.1-40.7z" />',
  viewBox: "0 0 512 512"
};
var tellAFriendIcon = {
  name: "tell-a-friend",
  content: '<path d="M383.5 64c-31.7 0-57.5 24-57.5 53.5v2.1c0 14.9-12.2 30.3-28.5 33.3-5.5.5-9.9 4.8-9.9 10.1 0 2.6 1.1 5 2.9 6.8 13.3 10.5 28.3 22.2 92.5 22.2s80.1-11.7 93.3-22.2c1.8-1.8 2.9-4.1 2.9-6.8 0-5.3-4.3-9.6-9.9-10.1-16.3-3-28.5-18.4-28.5-33.3v-2.1c0-29-25-52.7-55.9-53.5h-.5.2-1.1c.2 0 0 0 0 0zm.6 0h.9-.9zM128 224c-64.9 0-96 70-96 128v96h192v-96c0-52.7-34-128-96-128zm256 0c-96 0-96 224-96 224h192s0-224-96-224zm-192-96c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64z" />',
  viewBox: "0 0 512 512"
};
var tellAFriendBoxIcon = {
  name: "tell-a-friend-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM144 96c26.5 0 48 21.5 48 48s-21.5 48-48 48-48-21.5-48-48 21.5-48 48-48zm80 320H64v-96c0-48.3 26-96 80.2-96 51.7 0 79.8 52.1 79.8 96v96zm223.6 0H288s0-192 80-192 79.6 192 79.6 192zm-2-240.7c-11.1 7.9-24.3 16.7-78 16.7s-66.3-8.8-77.3-16.7c-1.5-1.3-2.4-3.1-2.4-5.1 0-4 3.6-7.2 8.2-7.5 13.6-2.3 23.8-13.8 23.8-25v-1.6c0-22.1 21.4-40.1 48-40.1h.9c26.1.4 47.1 18.2 47.1 40.1v1.6c0 11.2 10.2 22.7 23.8 25 4.6.4 8.2 3.6 8.2 7.5.1 2-.8 3.8-2.3 5.1z" />',
  viewBox: "0 0 512 512"
};
var tumblrIcon = {
  name: "tumblr",
  content: '<path d="M192.6 32c-2.8 23.1-8.1 42.1-15.7 57.1s-17.7 27.8-30.3 38.5-33 18.9-50.6 24.6V224h61v148.7c0 20.5 2.1 36.1 6.4 46.9s12 21 23.1 30.6c11.1 9.5 25 16.9 40.7 22.1s27.8 7.7 48.3 7.7c18 0 34.8-1.8 50.4-5.4 15.5-3.6 39.1-10.9 58.2-19.9V384c-22.3 14.8-51 22.9-73.7 22.9-12.8 0-24-3-33.9-8.9-7.5-4.4-14.3-12-17-19.2-2.8-7.4-2.4-22.3-2.4-48.2V224h96v-96h-96V32h-64.5z" />',
  viewBox: "0 0 512 512"
};
var tumblrBoxIcon = {
  name: "tumblr-box",
  content: '<path d="M448 32H64c-17.6 0-32 14.4-32 32v384c0 17.6 14.4 32 32 32h384c17.6 0 32-14.4 32-32V64c0-17.6-14.4-32-32-32zm-96.1 366c-12.7 6.4-28.5 11.6-38.9 14.2-10.4 2.6-21.6 3.9-33.7 3.9-13.7 0-21.8-1.9-32.3-5.5-10.5-3.7-19.9-9-27.3-15.8-7.4-6.9-12.6-14.1-15.4-21.8-2.9-7.7-4.3-18.9-4.3-33.5V224h-40v-42.2c11.7-4.1 25.3-9.9 33.6-17.6 8.4-7.6 15.1-16.8 20.2-27.5s8.6-24.3 10.5-40.8H267v64h53v64h-53v85.2c0 18.6-.2 29.3 1.6 34.5 1.8 5.2 6.4 10.7 11.4 13.8 6.6 4.2 14.2 6.4 22.7 6.4 15.1 0 34.3-5.9 49.3-16.5V398h-.1z" />',
  viewBox: "0 0 512 512"
};
var twitterIcon = {
  name: "twitter",
  content: '<path d="M342 64c-50.8 0-91.9 41.2-91.9 91.9 0 7.2.8 14.2 2.4 21-76.4-3.8-144.1-40.4-189.4-96-7.9 13.6-12.4 29.3-12.4 46.2 0 31.9 16.2 60 40.9 76.5-15.1-.5-29.2-4.6-41.6-11.5v1.2c0 44.5 31.7 81.7 73.7 90.1-7.7 2.1-15.8 3.3-24.2 3.3-5.9 0-11.7-.6-17.3-1.6 11.7 36.5 45.6 63.1 85.9 63.8-31.7 24.5-71.3 39.2-114.3 39.2-7.4 0-14.8-.4-22-1.3 40.7 26 89 41.3 140.9 41.3 169.1 0 261.5-140.1 261.5-261.5 0-4-.1-8-.2-11.9 18-12.9 33.5-29.1 45.9-47.6-16.5 7.3-34.2 12.3-52.8 14.5 19-11.4 33.6-29.4 40.4-50.8-17.8 10.5-37.4 18.2-58.4 22.3C392.3 75.1 368.4 64 342 64z" />',
  viewBox: "0 0 512 512"
};
var twitterBoxIcon = {
  name: "twitter-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm-64.7 159.7c.1 2.8.2 5.6.2 8.4 0 85.4-66 183.9-186.8 183.9-37.1 0-71.6-10.7-100.6-29.1 5.1.6 10.4.9 15.7.9 30.8 0 59.1-10.4 81.5-27.7-28.7-.5-53-19.2-61.3-44.9 4 .7 8.1 1.2 12.4 1.2 6 0 11.8-.8 17.3-2.3-30-5.9-52.7-32-52.7-63.3v-.8c8.9 4.8 19 7.7 29.7 8.1-17.6-11.6-29.2-31.4-29.2-53.8 0-11.8 3.2-22.9 8.9-32.5 32.4 39.1 80.8 64.8 135.3 67.5-1.1-4.7-1.7-9.7-1.7-14.7 0-35.7 29.4-64.6 65.6-64.6 18.9 0 36 7.8 47.9 20.4 14.9-2.9 29-8.3 41.7-15.7-4.9 15.1-15.3 27.7-28.9 35.7 13.3-1.6 26-5.1 37.7-10.2-8.9 13.1-19.9 24.5-32.7 33.5z" />',
  viewBox: "0 0 512 512"
};
var yammerIcon = {
  name: "yammer",
  content: '<path d="M263.9 32.1c-10.1-.2-19.6 6.8-23.2 18-.1.4-.3 1-.5 1.9 0 .1-.1.3-.1.4-8 25.9-73.6 235.6-73.6 235.6h-1.2l-84-239.2C75.6 35.3 61.6 28.7 48.9 34c-13 5.5-19.7 21.5-15.4 36.2 10.1 29 105.8 290.4 105.8 290.4l-6.3 15.6c-10.6 32.1-31.6 53.8-63.2 53.8-3.1 0-13.7-.7-14.4-.8-10.2-.6-19.7 6.9-22.5 18.4-3.1 13.1 3.7 26.6 15.3 30.4 8.4 1.6 17 2.2 24.7 2.2 58.3 0 86.8-37.7 106-92.8 0 0 101-300.5 105.8-312.9.8-2 1.4-3.7 2-5.4l-.1-.1c.1-.4.3-.7.4-1.1 4.1-14.5-3-29.9-15.8-34.5-2.5-.8-4.9-1.3-7.3-1.3zM383.5 96c-6.3.1-13.3 2.5-20.4 9.6-21.5 21.6-43 86.4-43 86.4s64.6-21.6 86.4-43.5-.4-42.8-.4-42.8-9.7-9.8-22.6-9.7zm64.6 128c-32 0-96 32-96 32s64 32 96.4 32 31.5-32 31.5-32 .1-32-31.9-32zm-128 96s21.5 64.8 43 86.4 43-.1 43-.1 22.1-21 .4-42.8c-21.8-21.9-86.4-43.5-86.4-43.5z" />',
  viewBox: "0 0 512 512"
};
var yammerBoxIcon = {
  name: "yammer-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM332.5 148.6c15.4-15.4 30.7 0 30.7 0s15.8 15 .3 30.6-61.7 31.1-61.7 31.1 15.4-46.3 30.7-61.7zm-54.7-26.4c-.1.3-.2.5-.3.8h.1c-.4 1.2-.9 2.4-1.4 3.8-3.5 8.8-75.5 223.1-75.5 223.1-13.7 39.3-34 66.2-75.6 66.2-5.5 0-11.6-.4-17.6-1.6-8.3-2.7-13.2-12.3-10.9-21.7 2-8.2 8.8-13.6 16.1-13.2.5.1 8.1.6 10.3.6 22.6 0 37.5-15.5 45.1-38.3l4.5-11.1s-68.2-186.3-75.5-207c-3-10.5 1.7-22 11-25.9 9.1-3.8 19.1.9 23.2 10.6l.8 2.4L191.3 279h.9s46.7-149.5 52.5-168c0-.1 0-.2.1-.3.2-.6.3-1.1.4-1.3 3.2-9.8 12.7-15.1 21.6-11.9 8.9 3.4 14 14.4 11 24.7zm85.4 241.2s-15.3 15.5-30.7 0-30.8-61.7-30.8-61.7 46.1 15.4 61.7 31.1-.2 30.6-.2 30.6zm30.3-84.6c-23.2 0-68.9-22.8-68.9-22.8s45.7-22.8 68.6-22.8S416 256 416 256s.7 22.8-22.5 22.8z" />',
  viewBox: "0 0 512 512"
};
var behanceIcon = {
  name: "behance",
  content: '<path d="M448 128H304V96h144v32zM245.335 254.873c7.09 11.573 10.665 25.65 10.665 42.197 0 17.067-4.069 32.379-12.176 45.903-5.178 9.005-11.62 16.58-19.358 22.691-8.723 7.022-18.988 11.833-30.855 14.467C181.744 382.732 168.89 384 155.02 384H32V96h131.927c33.321.504 56.901 10.744 70.803 30.705 8.323 12.24 12.515 26.869 12.515 43.936 0 17.588-4.192 31.729-12.607 42.425-4.716 5.982-11.683 11.443-20.868 16.385 13.963 5.364 24.474 13.817 31.565 25.422zm-158.9-45.318H152.8c11.867 0 21.484-2.406 28.913-7.152 7.367-4.763 11.097-13.215 11.097-25.292 0-13.426-4.901-22.285-14.672-26.609-8.446-2.991-19.204-4.486-32.273-4.486h-59.43v63.539zm111.923 83.452c0-15.019-5.795-25.292-17.385-30.917-6.504-3.121-15.597-4.746-27.31-4.876H86.435v76.787h66.303c11.836 0 21.084-1.69 27.68-5.071 11.96-6.275 17.94-18.238 17.94-35.923zM479.932 288H330.824c.813 21.182 7.938 34.778 21.409 43.322 8.157 5.287 18.002 7.931 29.503 7.931 12.189 0 22.096-3.224 29.722-9.704 4.157-3.482 7.813-8.318 11.001-14.541h54.693c-1.438 12.541-8.095 25.276-19.846 38.204C438.959 373.748 413.269 384 380.266 384c-27.253 0-51.286-8.64-72.132-25.985-20.846-17.28-31.222-45.522-31.222-84.532 0-36.624 9.376-64.672 28.19-84.21C323.917 169.785 348.294 160 378.328 160c17.814 0 33.847 3.288 48.129 9.898 14.282 6.593 26.096 17.023 35.378 31.24 8.407 12.573 13.876 27.114 16.346 43.685 1.438 9.704 2.033 24.929 1.751 43.177zm-55.567-37.696c-.969-14.669-5.72-25.759-14.283-33.4-8.532-7.576-19.095-11.348-31.753-11.348-13.72 0-24.377 3.998-31.94 12.058-7.563 8.028-12.314 18.957-14.282 32.691h92.258z" />',
  viewBox: "0 0 512 512"
};
var behanceBoxIcon = {
  name: "behance-box",
  content: '<path d="M167.543 228.938h-56.884v-56.479h50.939c11.202 0 20.423 1.329 27.663 3.988 8.376 3.844 12.576 11.718 12.576 23.652 0 10.735-3.197 18.249-9.511 22.482-6.368 4.219-14.612 6.357-24.783 6.357zm220.527 11.836c-7.313-6.494-16.367-9.727-27.217-9.727-11.76 0-20.895 3.427-27.378 10.335-6.483 6.881-10.555 16.249-12.242 28.021h79.079c-.83-12.573-4.902-22.079-12.242-28.629zm-196.379 34.862c-5.575-2.774-13.369-4.219-23.409-4.335h-57.624v68.255h56.831c10.146 0 18.072-1.503 23.726-4.508 10.251-5.577 15.377-16.211 15.377-31.931 0-13.35-4.967-22.482-14.901-27.481zM480 64v384c0 17.664-14.336 32-32 32H64c-17.664 0-32-14.336-32-32V64c0-17.664 14.336-32 32-32h384c17.664 0 32 14.336 32 32zm-176 96h112v-32H304v32zm-48 146.729c0-14.709-3.065-27.221-9.142-37.509-6.078-10.316-15.087-17.829-27.056-22.597 7.873-4.392 13.845-9.247 17.887-14.564 7.213-9.507 10.806-22.077 10.806-37.711 0-15.171-3.593-28.175-10.727-39.055-11.916-17.743-32.128-26.846-60.689-27.293H64v256h105.445c11.889 0 22.907-1.127 33.079-3.439 10.172-2.341 18.97-6.618 26.447-12.859 6.632-5.433 12.154-12.166 16.592-20.17C252.512 335.51 256 321.899 256 306.729zm190.442-42.024c-2.117-14.204-6.804-26.667-14.01-37.444-7.956-12.187-18.082-21.126-30.324-26.777-12.242-5.665-25.985-8.484-41.254-8.484-25.744 0-46.638 8.387-62.765 25.091-16.127 16.746-24.163 40.788-24.163 72.18 0 33.437 8.894 57.644 26.762 72.456C318.555 376.594 339.155 384 362.514 384c28.288 0 50.308-8.788 66.033-26.391 10.072-11.081 15.778-26.86 17.011-37.609h-46.879c-1.178 6-2.512 10.667-9.429 17.327-6.536 5.555-15.028 8.318-25.476 8.318-9.858 0-18.297-2.266-25.288-6.798-11.546-7.323-17.654-18.977-18.35-37.133h127.807c.24-15.641-.269-28.691-1.501-37.009z" />',
  viewBox: "0 0 512 512"
};
var dribbbleIcon = {
  name: "dribbble",
  content: '<path d="M256 32C132.469 32 32 132.469 32 256c0 123.5 100.469 224 224 224 123.5 0 224-100.5 224-224 0-123.531-100.5-224-224-224zm148.094 103.281c26.625 32.562 42.781 74.031 43.188 119.188-6.312-1.312-69.562-14.156-133.219-6.156a850.738 850.738 0 0 0-4.125-9.875c-3.969-9.312-8.25-18.594-12.688-27.719 70.75-28.875 102.812-69.969 106.844-75.438zM256 64.969c48.594 0 93.031 18.219 126.812 48.188-3.438 4.906-32.25 43.625-100.281 69.125-31.344-57.594-66.094-104.938-71.375-112A190.999 190.999 0 0 1 256 64.969zm-81.344 18.156c5.031 6.938 39.219 54.312 70.938 110.656-89.5 23.781-168.344 23.438-176.906 23.312 12.406-59.374 52.437-108.718 105.968-133.968zm-110 173.156c0-1.969.031-3.906.094-5.844 8.375.156 101.094 1.375 196.657-27.219 5.469 10.719 10.688 21.594 15.5 32.469a192.95 192.95 0 0 0-7.531 2.281c-98.688 31.875-151.188 118.812-155.531 126.25-30.564-33.937-49.189-78.812-49.189-127.937zM256 447.594c-44.25 0-85-15.094-117.438-40.375 3.438-7.031 42.156-81.875 150.094-119.5.406-.125.812-.281 1.25-.406 26.875 69.812 37.969 128.312 40.812 145.094-22.968 9.781-48.218 15.187-74.718 15.187zm106.875-32.719c-1.938-11.625-12.125-67.625-37.156-136.406 59.969-9.594 112.625 6.125 119.188 8.188-8.532 53.218-39.095 99.218-82.032 128.218z" />',
  viewBox: "0 0 512 512"
};
var dribbbleBoxIcon = {
  name: "dribbble-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM256 448c-106 0-192-86-192-192S150 64 256 64s192 86 192 192-86 192-192 192zm28-164.8c-82.9 28.9-118.1 83.4-126.7 98.7 27.2 21.3 61.5 34.1 98.7 34.1 22.5 0 43.9-4.6 63.3-13-3.3-18.4-13.1-65.2-34.2-120.1-.4 0-.8.2-1.1.3zm-95.5-172.3c-44.9 20.9-78.5 62.1-89 111.8 17.1-.1 78.6-1.7 147.6-20-24.3-43.2-50.3-80.1-58.6-91.8zm79 146.8c2.1-.7 4.3-1.3 6.5-2-4.1-9.3-8.6-18.6-13.3-27.8-74.1 22.2-146.1 23.4-164.6 23.4 0 1.6-.1 3.1-.1 4.7 0 40.8 15.3 78 40.4 106.3 10.5-16.7 54.6-79.9 131.1-104.6zm94.9-121.1C334.2 111.3 296.9 96 256 96c-12.4 0-24.5 1.4-36 4.1 8.7 11.9 34.9 48.8 58.8 92.7 50.7-19 76-46.7 83.6-56.2zm-46.6 138.7C335 328 344 371.9 346.9 387.8c35.2-24.3 60.2-62.5 67.2-106.6-13.2-3.7-53.4-13.1-98.3-5.9zm-24.4-58.1c3.8 7.8 7.5 15.8 10.9 23.8 1.2 2.8 2.4 5.7 3.5 8.5 48-6 95.7 1.8 110.2 4.5-.5-37.2-13.7-71.4-35.4-98.3-8.4 10-36.1 39.8-89.2 61.5z" />',
  viewBox: "0 0 512 512"
};
var rssIcon = {
  name: "rss",
  content: '<path d="M151.4 420c0 32.9-26.7 59.5-59.7 59.5S32 452.9 32 420s26.7-59.5 59.7-59.5 59.7 26.7 59.7 59.5zM32 184.3v85.9c56 0 108.5 21.8 148.1 61.3 39.6 39.6 61.4 92.3 61.4 148.5h86.2C327.6 317 195 184.3 32 184.3zM32 32v85.9c199.4 0 361.6 162.5 361.6 362.1h86.2C479.8 233 278.9 32 32 32z" />',
  viewBox: "0 0 512 512"
};
var rssBoxIcon = {
  name: "rss-box",
  content: '<path d="M448 32H64c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM115.2 447.6c-28.3 0-51.2-22.8-51.2-51s22.9-51 51.2-51c28.3 0 51.2 22.8 51.2 51s-23 51-51.2 51zm128.8.4c0-48.1-18.7-93.3-52.8-127.3-34-33.9-79.2-52.6-127.2-52.6v-73.6c140.1 0 254.1 113.7 254.1 253.5H244zm129.9 0c0-171.2-139-310.4-309.9-310.4V64c211.6 0 383.8 172.3 383.8 384h-73.9z" />',
  viewBox: "0 0 512 512"
};
var vimeoIcon = {
  name: "vimeo",
  content: '<path d="M479.783 152.805c-2 43.26-32.469 102.444-91.344 177.477C327.532 408.792 275.969 448 233.782 448c-26.094 0-48.188-23.873-66.25-71.742-12.063-43.896-24.094-87.854-36.157-131.657-13.407-47.901-27.782-71.835-43.188-71.835-3.344 0-15.032 6.985-35.125 20.955L32 166.744c22.094-19.201 43.844-38.526 65.282-57.773 29.407-25.316 51.5-38.556 66.25-39.938 34.782-3.353 56.219 20.287 64.282 70.78 8.625 54.559 14.719 88.475 18.032 101.777 10.031 45.2 21.093 67.769 33.156 67.769 9.344 0 23.375-14.591 42.157-43.818 18.75-29.29 28.782-51.548 30.125-66.868 2.656-25.27-7.375-37.827-30.125-37.827-10.719 0-21.782 2.251-33.157 6.969C310.126 96.647 352.283 62.08 414.533 64.082c46.156 1.289 67.906 30.935 65.25 88.723z" />',
  viewBox: "0 0 512 512"
};
var vimeoBoxIcon = {
  name: "vimeo-box",
  content: '<path d="M448 32H64c-17.664 0-32 14.336-32 32v384c0 17.664 14.336 32 32 32h384c17.664 0 32-14.336 32-32V64c0-17.664-14.336-32-32-32zm-.186 140.119c-1.714 37.08-27.831 87.809-78.295 152.123-52.206 67.294-96.402 100.901-132.563 100.901-22.366 0-41.304-20.462-56.786-61.493-10.339-37.625-20.652-75.303-30.991-112.849-11.491-41.058-23.813-61.573-37.018-61.573-2.866 0-12.884 5.987-30.107 17.961L64 184.066c18.938-16.458 37.581-33.022 55.956-49.519 25.206-21.7 44.143-33.048 56.786-34.232 29.813-2.874 48.188 17.389 55.099 60.668 7.393 46.765 12.616 75.835 15.456 87.237 8.598 38.743 18.08 58.087 28.419 58.087 8.009 0 20.036-12.506 36.134-37.559 16.071-25.106 24.67-44.184 25.822-57.315 2.277-21.66-6.321-32.423-25.822-32.423-9.188 0-18.67 1.929-28.42 5.974 18.964-61.001 55.099-90.63 108.456-88.914 39.562 1.105 58.205 26.516 55.928 76.049z" />',
  viewBox: "0 0 512 512"
};
var youtubeIcon = {
  name: "youtube",
  content: '<path d="M475.5 165s-4.4-31.4-17.8-45.2c-17-18.1-36.1-18.2-44.9-19.3C350.1 96 256.1 96 256.1 96h-.2s-94 0-156.7 4.6c-8.8 1.1-27.8 1.2-44.9 19.3C40.9 133.7 36.5 165 36.5 165S32 201.9 32 238.7v34.5c0 36.8 4.5 73.6 4.5 73.6s4.4 31.4 17.8 45.2c17 18.1 39.4 17.5 49.4 19.4C139.5 414.9 256 416 256 416s94.1-.1 156.8-4.7c8.8-1.1 27.9-1.2 44.9-19.3 13.4-13.8 17.8-45.2 17.8-45.2s4.5-36.8 4.5-73.6v-34.5c0-36.8-4.5-73.7-4.5-73.7zM192 336V176l144 80-144 80z" />',
  viewBox: "0 0 512 512"
};
var youtubeBoxIcon = {
  name: "youtube-box",
  content: '<path d="M448 32H64c-17.664 0-32 14.336-32 32v384c0 17.664 14.336 32 32 32h384c17.664 0 32-14.336 32-32V64c0-17.664-14.336-32-32-32zm0 237.749c0 29.454-3.835 58.909-3.835 58.909s-3.752 25.082-15.265 36.128c-14.602 14.497-30.97 14.569-38.476 15.417C336.689 383.885 256 384 256 384s-99.838-.864-130.559-3.656c-8.546-1.519-27.734-1.061-42.341-15.558-11.513-11.045-15.26-36.128-15.26-36.128S64 299.203 64 269.749v-27.614c0-29.454 3.84-58.909 3.84-58.909s3.747-25.082 15.26-36.128c14.607-14.497 30.969-14.569 38.476-15.417C175.313 128 255.917 128 255.917 128h.167s80.606 0 134.341 3.682c7.506.849 23.873.92 38.476 15.417 11.513 11.045 15.265 36.128 15.265 36.128S448 212.681 448 242.136v27.613zM192 176l144 80-144 80V176z" />',
  viewBox: "0 0 512 512"
};
var folderIcon = {
  name: "folder",
  content: '<path d="m242.8 128-32-32H96v288h320V192H128v-32h288c17.7 0 32 14.3 32 32v192c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h128l64 64" />',
  viewBox: "0 0 512 512"
};
var folderOpenIcon = {
  name: "folder-open",
  content: '<path d="M425.6 160h-246c-17.6 0-37.2 14.4-43.6 32L64 384V96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h268.4c17.6 0 37.2-14.4 43.6-32l70-192c6.4-17.6-2.8-32-20.4-32zM346 373.1c-2 5.5-10.1 10.9-13.6 10.9H98.1L166 202.9c2-5.5 10.1-10.9 13.6-10.9h232.3L346 373.1z" />',
  viewBox: "0 0 512 512"
};
var folderAddIcon = {
  name: "folder-add",
  content: '<path d="M96 160h288c17.7 0 32 14.3 32 32v64h-32v-64H96v-32zm352 224h-32v-64h-32v64h-64v32h64v64h32v-64h64v-32h-32zM64 96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h192v-32H64V96z" />',
  viewBox: "0 0 512 512"
};
var folderUpIcon = {
  name: "folder-up",
  content: '<path d="M96 160h288c17.7 0 32 14.3 32 32v64l-32 32v-96H96v-32zM64 96h114.8l32 32H256l-64-64H64c-17.7 0-32 14.3-32 32v288c0 17.7 14.3 32 32 32h192l32-32H64V96zm336 240-80 80h64v64h32v-64h64l-80-80z" />',
  viewBox: "0 0 512 512"
};
var folderMoreIcon = {
  name: "folder-more",
  content: '<path d="M64 384h96v32H64c-17.7 0-32-14.3-32-32V96c0-17.7 14.3-32 32-32h128l64 64h-45.2l-32-32H64v288zm192-32c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm160-64v-96c0-17.7-14.3-32-32-32H96v32h288v96h32zm32 64c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32zm-96 0c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32z" />',
  viewBox: "0 0 512 512"
};
var aggregateFieldsIcon = {
  name: "aggregate-fields",
  content: '<path d="M128 128c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h256c32 0 32-32 32-32H128V128zm-64 64c-17.7 0-32 14.3-32 32v160c0 17.7 14.3 32 32 32h256c32 0 32-32 32-32H64V192zM448 64H192c-17.6 0-32 14.4-32 32v160c0 17.6 14.4 32 32 32h256c17.6 0 32-14.4 32-32V96c0-17.6-14.4-32-32-32zm1 192s0 .1 0 0l-256.9.1-.1-.1V96.1l.1-.1H448v160h1z" />',
  viewBox: "0 0 512 512"
};
var fileIcon = {
  name: "file",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileAddIcon = {
  name: "file-add",
  content: '<path d="M512 416h-64v64h-32v-64h-64v-32h64v-64h32v64h64v32zM96 448V64h224v96h96v96h32V128l-96-96H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h224v-32" />',
  viewBox: "0 0 512 512"
};
var fileTxtIcon = {
  name: "file-txt",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-32-96v32H128v-32h256zM256 160v32H128v-32m256 64v32H128v-32h256zm-256 96v-32h224v32H128z" />',
  viewBox: "0 0 512 512"
};
var fileCsvIcon = {
  name: "file-csv",
  content: '<path d="M178.6 224c-10 0-18.9 2.1-26.7 6.2-7.7 4.2-13.7 10.1-17.9 17.7-4.2 7.6-6.3 16.3-6.3 26.1 0 9.1 1.9 17.1 5.7 24.1s9.2 12.3 16.4 16.1c7.2 3.8 15.7 5.7 25.6 5.7 10 0 18.9-1.4 26.6-4.1v-24.9c-6.9 3.5-13.8 5.2-20.5 5.2-7.3 0-13.2-2.1-17.6-6.4-4.4-4.3-6.6-10.1-6.6-17.6s2.2-13.4 6.6-17.7 10.4-6.5 18-6.5c3.7 0 7.3.4 10.9 1.3s6.7 2.1 9.2 3.6V227c-7.6-2-15.3-2.9-23.4-3zm73.8.1c-11.5 0-20.6 2.7-27.5 8.1-6.8 5.4-10.2 12.5-10.2 21.5 0 12.8 7.5 22.1 22.4 27.8 4.6 1.7 7.8 3.1 9.5 4.1 1.7 1 3 2 3.8 3.2.8 1.2 1.2 2.5 1.2 4 0 2.1-.8 3.7-2.5 4.8-1.7 1.1-4.1 1.7-7.1 1.7-4.1 0-8.4-.9-13.2-2.6-4.7-1.8-9-4-12.9-6.9V315c8.1 3.3 17 4.9 26.7 4.9 8.4 0 15.5-1.1 21.5-3.4 6-2.2 10.6-5.7 13.9-10.2 3.3-4.6 5-9.9 5-16.1 0-6.3-2-11.8-6-16.4-4-4.6-10.8-8.9-20.4-12.8-4.9-2-8.1-3.7-9.6-5-1.5-1.3-2.3-2.9-2.3-4.8 0-2 1-3.6 2.8-4.8 1.9-1.2 4.4-1.8 7.5-1.8 7.6 0 15.2 2.1 23 6.4v-23.6c-4-1.1-7.1-1.8-9.3-2.2-2.2-.4-4.7-.7-7.4-1-2.7-.1-5.8-.1-8.9-.1zm39.8-.1 30 96h31.4l30.4-96h-29.1l-13.8 58.9c-1.1 4.4-1.8 8.1-2 11.1h-.6c-.1-2.4-.8-5.9-1.9-10.7L322.4 224h-30.2zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileExcelIcon = {
  name: "file-excel",
  content: '<path d="m288 304 64 112h-48l-48-84.5-31.5 52.5H256v32h-96l64-112-64-112h48l48 84 48-84h48l-64 112zm64-272H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileWordIcon = {
  name: "file-word",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-32.4-256-6.9 32-41.6 192h-46.7l-32.8-132.5L222.9 416h-46.7l-48.6-224h47.8l24.8 139.2L233.3 192h44.5l33.1 139.2L330.1 224H311v-32h72.6z" />',
  viewBox: "0 0 512 512"
};
var fileMdbIcon = {
  name: "file-mdb",
  content: '<path d="M231.1 192 144 416h80v-32h-25.5l14.8-38h85.6l27.2 70h42L281 192h-49.9zm-1.5 112 26.5-68 26.4 68h-52.9zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var filePptIcon = {
  name: "file-ppt",
  content: '<path d="m192 192-32 32h32v192h49v-80h25.6c16.4 0 29.1-1.5 38.2-4.4 14.4-4.5 25.9-12.9 34.4-25.4s12.8-26.6 12.8-42.6c0-15.8-4-29.5-12-41.1s-18.8-20.1-32.4-25.4c-10.3-3.7-24.4-5.5-42-5.5M241 225h20.1c11.2.3 20.2 2.1 26.9 5.6 12.1 6.4 23.3 17.6 23.3 33.5 0 17.3-11.9 29-25.2 35-6.7 2.9-15.1 4.4-25.2 3.9H241v-78zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var filePdfIcon = {
  name: "file-pdf",
  content: '<path d="M240.9 160c-7.6 0-13.8 4-15.4 9.9-4.9 18.6.2 46.3 9.4 82.3l-2.4 5.9c-6.6 16.4-14.8 33-22.1 47.6l-1 1.9c-7.7 15.3-14.6 28.4-21 39.4l-6.5 3.5c-.5.3-11.6 6.3-14.3 7.9-22.2 13.6-36.9 28.9-39.4 41.2-.8 3.9-.2 8.9 3.7 11.2l6.3 3.2c2.7 1.4 5.6 2.1 8.6 2.1 15.8 0 34.2-20.2 59.5-65.3 29.2-9.7 62.5-17.8 91.6-22.3 22.2 12.8 49.5 21.7 66.8 21.7 3.1 0 5.7-.3 7.8-.9 3.3-.9 6.1-2.8 7.8-5.4 3.4-5.2 4-12.2 3.1-19.5-.3-2.1-2-4.8-3.8-6.6-5.1-5.2-16.5-7.9-33.7-8.1-11.7-.1-25.8.9-40.6 3-6.6-3.9-13.5-8.2-18.8-13.3-14.4-13.8-26.5-32.9-34-53.9.5-2 .9-3.7 1.3-5.4 0 0 8.1-47.1 6-63.1-.3-2.2-.5-2.8-1.1-4.5l-.7-1.9c-2.2-5.2-6.5-10.7-13.3-10.4l-3.8-.2zm2.7 8.4c5.1 0 8 13.1 8.2 25.4.3 12.3-2.6 20.9-6 27.3-2.9-9.4-4.3-24.3-4.3-34-.1-.1-.3-18.7 2.1-18.7zm.4 104.1c8.6 16 19.3 29.5 31.9 40.4 1.6 1.3 3.2 2.7 5 4.1-25.6 5.2-47.7 11.5-67.1 19.1 3.6-6.5 7.2-13.3 11-20.6 9.1-17.7 14.9-31.6 19.2-43zm102.2 51.6c9.3 0 12 0 21.1 2.3 9.1 2.4 9.2 7.2 7.6 8.2-1.6 1-6 1.6-8.9 1.6-9.2 0-20.7-4.3-36.8-11.4 6.3-.4 11.9-.7 17-.7zm-165.4 35.8c-17.7 28.8-29.5 40.3-37.3 43.8 2.9-8.1 14.3-24 31.2-38.1 1.1-.9 3.7-3.4 6.1-5.7zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var filePsdIcon = {
  name: "file-psd",
  content: '<path d="M128 160v256h45v-91h21.4c24.2 0 43.5-7.8 57.9-23.4 14.4-15.6 21.6-36.1 21.6-61.3 0-53.4-25.2-80.2-75.5-80.2H128zm45 44h17.5c23.7 0 35.5 12.8 35.5 38.6 0 26.3-11.8 39.4-35.5 39.4H173v-78zm164.6 51.7c-8.1 0-15.9.9-23.4 2.8-7.5 1.9-14.2 4.7-20 8.6-5.8 3.9-10.4 9-14 15.2-3.5 6.2-5.2 13.6-5.2 22.1 0 6.2.8 11.7 2.3 16.3 1.5 4.5 3.7 8.6 6.7 12.1 2.9 3.5 6.5 6.5 10.8 9.2 4.3 2.7 9.3 5.1 15 7.4 3.5 1.5 7.2 2.8 11 4 3.8 1.2 7.3 2.5 10.5 4s5.8 3.2 7.8 5.2 3 4.5 3 7.5c0 4.7-2.2 8.2-6.7 10.4-4.5 2.3-10.6 3.4-18.5 3.4-6.4 0-13.3-1.2-20.5-3.4s-14.5-5.8-21.7-10.4v38.3c13.4 5.2 27.9 7.7 43.7 7.7 8.5 0 16.8-.9 24.7-2.8 7.9-1.8 15-4.8 21.1-8.8s10.9-9.2 14.7-15.7 5.5-14.2 5.5-23.3c0-6.5-.9-12-2.7-16.8-1.8-4.7-4.4-8.7-7.8-12.2-3.4-3.5-7.4-6.5-12.2-9.1-4.7-2.6-10-5-15.9-7.1-3.2-1.2-6.5-2.4-9.8-3.5s-6.3-2.4-9-3.9-4.9-3.1-6.5-5.2c-1.6-2.1-2.5-4.4-2.5-7.1 0-2.1.5-3.9 1.7-5.6 1.1-1.7 2.6-3 4.6-4 2-1 4.2-1.8 6.7-2.4s5.2-.8 8.1-.8c6.1 0 12.3.9 18.8 2.6 6.4 1.7 12.3 4.4 18 7.8v-36.4c-6.3-2-12.8-3.5-19.3-4.5s-13-1.6-19.3-1.6h.3zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileFlashIcon = {
  name: "file-flash",
  content: '<path d="M352 191.3V237c-21 .2-46.6-3.2-69.6 45H320v45h-47.9s-37.4 91.1-111.9 90.1c-.6-10 0-30.8 0-45 49.3-7.6 65.4-62.1 76.8-89.4 26.5-82.8 73.9-92 93.4-92.1 5.6 0 21.6.7 21.6.7zm96-63.3v320c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V64c0-17.7 14.3-32 32-32h256l96 96zm-32 32h-96V64H96v384h320V160z" />',
  viewBox: "0 0 512 512"
};
var fileConfigIcon = {
  name: "file-config",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-41.8-124.6-23.7-17.9c1-5.7 1.6-11.5 1.6-17.4 0-6-.5-11.8-1.6-17.4l23.7-17.9c3.7-2.8 4.7-7.9 2.4-11.9l-19.4-33.5c-2.3-4-7.2-5.6-11.5-3.9L318.4 215c-8.8-7.5-19-13.5-30.2-17.4l-3.7-29.5c-.6-4.6-4.5-8-9.1-8h-38.7c-4.6 0-8.5 3.4-9.1 8l-3.7 29.5c-11.1 4-21.3 9.9-30.2 17.4l-27.4-11.6c-4.2-1.8-9.2-.1-11.5 3.9l-19.4 33.5c-2.3 4-1.3 9.1 2.4 11.9l23.7 17.9c-1 5.7-1.6 11.5-1.6 17.4 0 6 .5 11.8 1.6 17.4l-23.7 17.9c-3.7 2.8-4.7 7.9-2.4 11.9l19.4 33.5c2.3 4 7.2 5.6 11.5 3.9l27.4-11.6c8.8 7.5 19 13.5 30.2 17.4l3.7 29.5c.6 4.6 4.5 8 9.1 8h38.7c4.6 0 8.5-3.4 9.1-8l3.7-29.5c11.1-4 21.3-9.9 30.2-17.4l27.4 11.6c4.2 1.8 9.2.1 11.5-3.9l19.4-33.5c2.2-4 1.2-9-2.5-11.8zM256 336c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z" />',
  viewBox: "0 0 512 512"
};
var fileAscxIcon = {
  name: "file-ascx",
  content: '<path d="M384 224h-96v-32h96v32zm0 160h-96v-32h96v32zM256 256H128v-96h128v96zm0 160H128v-96h128v96zm96-384H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileBacIcon = {
  name: "file-bac",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H289v-96h64l-96.5-96-95.5 96h64v96H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileZipIcon = {
  name: "file-zip",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h64v32h32v32h-32v32h32v32h-32v32h32v32h-32v32h32v34.7c-18.6 6.6-32 24.4-32 45.3 0 26.5 21.5 48 48 48s48-21.5 48-48c0-20.9-13.4-38.7-32-45.3V256h32v-32h-32v-32h32v-32h-32v-32h32V96h-32V64h96v96h96v288zm-192-80c0 8.8-7.2 16-16 16s-16-7.2-16-16 7.2-16 16-16 16 7.2 16 16z" />',
  viewBox: "0 0 512 512"
};
var filmIcon = {
  name: "film",
  content: '<path d="M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zM128 448H96v-32h32v32zm0-96H96v-64h32v64zm0-128H96v-64h32v64zm0-128H96V64h32v32zm224 352H160v-96h192v96zm0-128H160V192h192v128zm0-160H160V64h192v96zm64 288h-32v-32h32v32zm0-96h-32v-64h32v64zm0-128h-32v-64h32v64zm0-128h-32V64h32v32z" />',
  viewBox: "0 0 512 512"
};
var css3Icon = {
  name: "css3",
  content: '<path d="m64 32 30.2 384L256 480l161.8-64L448 32H64zm65.6 82h250.3l-4.9 48.9L255.4 214h115.9L358 366.1l-102.1 29.7-102.4-30.2-6.6-76.6h50.9l3.3 39.7 54.4 13.8.5-.1v-.1l56.3-15.8 3.9-64.4H143.7l-3.8-47.8 123-51.2H135.7l-6.1-49.1z" />',
  viewBox: "0 0 512 512"
};
var html5Icon = {
  name: "html5",
  content: '<path d="m64 32 30.4 384 161.3 64 161.7-64L448 32H64zm68 83h247.7l-1.2 13.2-2.2 24.8-1 11H186.1l4.5 51h180.1l-1.2 13.3-11.7 129.9-.7 8.4-101.3 37-101.2-37-6.9-77.6h49l3.5 39.7 55.5 24 55.6-24.1 5.8-64.6h-172L133 128.2l-1-13.2z" />',
  viewBox: "0 0 512 512"
};
var codeIcon = {
  name: "code",
  content: '<path d="M512 256 384 384l-22.6-22.6L466.7 256 361.4 150.6 384 128l128 128zM150.6 361.4 45.3 256l105.4-105.4L128 128 0 256l128 128 22.6-22.6zM321.1 72.3 290.2 64l-99.4 375.7 30.9 8.3 99.4-375.7z" />',
  viewBox: "0 0 512 512"
};
var cssIcon = {
  name: "css",
  content: '<path d="m192 96-32 .1S96 96 96 160v48c0 27.8-21.8 31.4-32 32H48c-2.2 0-4.3.4-6.2 1.2-.5.2-1 .4-1.4.7s-.9.5-1.3.8c-1.3.9-2.4 1.9-3.4 3.1-.2.2-.3.4-.5.6-.9 1.2-1.7 2.6-2.2 4.1-.2.5-.3 1-.5 1.5-.3 1-.4 2.1-.5 3.2v1.6c.1 1.1.2 2.1.5 3.2.1.5.3 1 .5 1.5.5 1.5 1.3 2.8 2.2 4.1.2.2.3.4.5.6 1 1.2 2.1 2.2 3.4 3.1.4.3.9.5 1.3.8s.9.5 1.4.7c1.9.8 4 1.2 6.2 1.2h16c10.2.6 32 4.2 32 32v48c0 64 64 63.9 64 63.9l32 .1v-32l-31.8-.1s-32.2.1-32.2-32v-48.5s0-29-19.6-47.9c19.6-18.8 19.6-47.9 19.6-47.9v-47.9c0-31.9 32.2-31.8 32.2-31.8l31.8-.1V96zm128-.1V128l31.7.1S384 128 384 160v48s0 29.1 19.5 48C384 274.9 384 304 384 304v48c0 32-32.1 31.9-32.1 31.9l-31.9.1v32l32.1-.1s63.9.1 63.9-63.7V304c0-27.8 21.8-31.4 32-32h16c2.2 0 4.3-.4 6.2-1.2.5-.2 1-.4 1.4-.7s.9-.5 1.3-.8c1.3-.9 2.4-1.9 3.4-3.1.2-.2.3-.4.5-.6.9-1.2 1.7-2.6 2.2-4.1.2-.5.3-1 .5-1.5.3-1 .4-2.1.5-3.2v-1.6c-.1-1.1-.2-2.1-.5-3.2-.1-.5-.3-1-.5-1.5-.5-1.5-1.3-2.8-2.2-4.1-.2-.2-.3-.4-.5-.6-1-1.2-2.1-2.2-3.4-3.1-.4-.3-.9-.5-1.3-.8s-.9-.5-1.4-.7c-1.9-.8-4-1.2-6.2-1.2h-16.1c-10.2-.6-31.9-4.2-31.9-32v-48c0-64-64.1-63.9-64.1-63.9l-31.9-.2z" />',
  viewBox: "0 0 512 512"
};
var jsIcon = {
  name: "js",
  content: '<path d="M478.4 96C471 59.5 438.7 32 400 32H208c-38.7 0-71 27.5-78.4 64-1.1 5.2-1.6 10.5-1.6 16v272H32v16c0 5.5.5 10.8 1.6 16 7.4 36.5 39.7 64 78.4 64h192c38.7 0 71-27.5 78.4-64 1.1-5.2 1.6-10.5 1.6-16V128h96v-16c0-5.5-.5-10.8-1.6-16zm-124.8 0c-1.1 5.2-1.6 10.5-1.6 16v288c0 5.6-1 11-2.8 16-6.6 18.6-24.4 32-45.2 32-20.9 0-38.7-13.4-45.2-32-1.8-5-2.8-10.4-2.8-16v-16h-96V112c0-5.6 1-11 2.8-16 6.6-18.6 24.4-32 45.2-32h160c-7 9.3-12 20.2-14.4 32zM320 192H192v-32h128v32zm0 64H192v-32h128v32zm0 64H192v-32h128v32z" />',
  viewBox: "0 0 512 512"
};
var exeIcon = {
  name: "exe",
  content: '<path d="M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H64zm160 32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM64 160h384v288H64V160z" />',
  viewBox: "0 0 512 512"
};
var csprojIcon = {
  name: "csproj",
  content: '<path d="M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H64zm157.9 32.1c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9zm96 0c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9zm96 0c19.3-1.2 35.2 14.7 34 34-1 15.9-13.9 28.8-29.9 29.9-19.3 1.2-35.2-14.7-34-34 1.1-16 14-28.9 29.9-29.9zM64 160h384v288H64V160zm119.7 64c-17.3 0-32.7 3.5-46 10.4s-23.6 16.8-30.9 29.5c-7.3 12.8-10.9 27.3-10.9 43.6 0 15.2 3.3 28.6 9.8 40.2s15.9 20.6 28.3 26.8c12.4 6.3 27 9.4 44.1 9.4 17.3 0 32.6-2.3 45.9-6.9v-41.5c-11.9 5.8-23.7 8.6-35.4 8.6-12.6 0-22.8-3.6-30.3-10.7s-11.4-16.9-11.4-29.2c0-12.4 3.8-22.3 11.3-29.6s17.9-10.9 31-10.9c6.3 0 12.6.7 18.8 2.1s11.5 3.5 16 6v-43c-13.1-3.2-26.4-4.8-40.3-4.8zm114.2 0-8.3 39h-17.4l-5.7 29H284l-6.1 26H262l-6.1 29h15.4l-7.7 37h30.9l7.9-37h26.8l-7.7 37h30.4l8.2-37h16.3l7.2-29h-17.2l6.1-26h15l6.3-29h-14.7l8.3-39H356l-8.3 39h-26.4l8.3-39h-31.7zm16.8 68h26.8l-6.3 27h-26.7l6.2-27z" />',
  viewBox: "0 0 512 512"
};
var vbprojIcon = {
  name: "vbproj",
  content: '<path d="M64 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H64zm160 32c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zm96 0c17.7 0 32 14.3 32 32s-14.3 32-32 32-32-14.3-32-32 14.3-32 32-32zM64 160h384v288H64V160zm32 64 51.6 160h54.1L254 224h-50.2L180 321.9c-1.9 7.4-3 13.5-3.5 18.5h-1.1c-.2-3.9-1.3-9.9-3.2-17.9L147.8 224H96zm183.3 0v160h73c20.4 0 36.2-4.3 47.2-12.8s16.5-20.6 16.5-36.3c0-5.8-1.6-11.4-4.9-16.8s-7.9-9.9-14-13.5-12.8-5.9-20.4-6.8v-.4c6.5-1.3 12.5-3.6 18-7.1s9.5-7.6 12.2-12.2c2.7-4.6 4-9.8 4-15.3 0-25.8-21.2-38.7-63.7-38.7h-67.9v-.1zm48.2 32.3h8.9c15.6 0 23.3 5 23.3 14.8 0 4.5-1.7 8.3-5.1 11.1s-7.8 4.3-13.2 4.3h-14l.1-30.2zm0 62.5h19c5.5 0 9.9 1.5 13.3 4.4s5 6.8 5 11.4c0 5.2-1.9 9.3-5.7 12.3s-9 4.5-15.5 4.5h-16.1v-32.6z" />',
  viewBox: "0 0 512 512"
};
var csIcon = {
  name: "cs",
  content: '<path d="M165.9 128c-26.4 0-49.8 5.6-70.1 16.7s-36 26.8-47.1 47.2S32 235.5 32 261.6c0 24.3 5 45.7 14.9 64.3s24.3 32.9 43.1 43 41.2 15.1 67.2 15.1c26.4 0 46.6-3.7 65.8-11v-66.5c-17.1 9.2-32 13.8-49.8 13.8-19.3 0-34.7-5.7-46.2-17.2s-17.3-27.1-17.3-46.9c0-19.9 5.8-35.7 17.3-47.3s27.3-17.4 47.2-17.4c9.6 0 16 1.2 25.4 3.5s17.5 5.5 24.4 9.7v-68.9c-19.7-5.2-37-7.8-58.1-7.8zm158.8 0-13.3 62h-29l-9.3 46h28.6l-10.3 43h-25.6l-9.8 46h25.2l-12.5 59h50l12.9-59h43.5l-12.5 59h49.2l13.3-59h26.8l11.5-46h-28.2l10.3-43h24.2l10.3-46h-23.7l13.5-63h-51.7l-13.5 63h-43.5l13.5-63h-50l.1 1zm26.9 108H395l-10.3 43h-43.3l10.2-43z" />',
  viewBox: "0 0 512 512"
};
var vbIcon = {
  name: "vb",
  content: '<path d="m32 160 73.2 224h76.7L256 160h-71.1l-33.7 137c-2.6 10.3-4.3 19-4.9 25.9h-1.6c-.3-5.5-1.8-13.9-4.6-25L105.5 160H32zm252 0v224h104.6c29.3 0 51.9-6 67.7-17.9 15.8-11.9 23.7-28.9 23.7-50.8 0-8.1-2.4-16-7-23.5-4.7-7.6-11.4-13.9-20-18.9-8.7-5-18.4-8.2-29.3-9.5v-.6c9.4-1.8 18-5.1 25.8-10 7.8-4.9 13.7-10.6 17.5-17.1 3.8-6.5 5.8-13.7 5.8-21.5 0-36.1-30.5-54.2-91.4-54.2H284zm69.1 45.2h12.8c22.3 0 33.4 6.9 33.4 20.8 0 6.4-2.5 11.5-7.4 15.5s-11.2 6-18.9 6h-20l.1-42.3zm0 87.6h27.2c7.9 0 14.3 2.1 19 6.2s7.2 9.5 7.2 15.9c0 7.3-2.7 13-8.1 17.2-5.4 4.2-12.9 6.3-22.2 6.3h-23v-45.6h-.1z" />',
  viewBox: "0 0 512 512"
};
var slnIcon = {
  name: "sln",
  content: '<path d="M352 32 172.5 211.5 64 128l-32 32v192l32 32 108.5-83.5L352 480l128-32V64L352 32zM64 320V192l64 64-64 64zm166.4-64L352 162.5v187.1L230.4 256z" />',
  viewBox: "0 0 512 512"
};
var cloudIcon = {
  name: "cloud",
  content: '<path d="M442.2 243.6c3.7-11.2 5.8-23.2 5.8-35.6 0-61.9-50.1-112-112-112-37.8 0-71.3 18.8-91.6 47.5-15-9.8-33-15.5-52.3-15.5-52.9 0-95.8 42.9-95.8 95.8 0 1.8.1 3.6.2 5.5C58.9 242.3 32 278 32 320c0 53 43 96 96 96h256c53 0 96-43 96-96 0-31.1-14.8-58.8-37.8-76.4z" />',
  viewBox: "0 0 512 512"
};
var fileHorizontalIcon = {
  name: "file-horizontal",
  content: '<path d="M384 64H64c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V160l-96-96zm64 352H64V96h288v96h96v224z" />',
  viewBox: "0 0 512 512"
};
var subreportIcon = {
  name: "subreport",
  content: '<path d="M448 480c0 17.7-14.3 32-32 32H128c-17.7 0-32-14.3-32-32v-96h32v96h288V96H128v64H96V96c0-17.7 14.3-32 32-32h288c17.7 0 32 14.3 32 32v384zM63.9 32l254.3-.2L286.4 0 63.8.2C46.2.2 32 14.4 32 32l.1 128H64l-.1-128zm.1 351H32v32c0 17.7 14.3 32 32 32v-64zm-32-62.9S64 288 95 288v32l65-48.1L96 224v32c-32.1 0-64 32.1-64 64.1zM352 384l-160 .1V416l160-.1V384zm-96-192c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64h-64v-64zm32-32v64h64c0-35.3-28.7-64-64-64z" />',
  viewBox: "0 0 512 512"
};
var dataIcon = {
  name: "data",
  content: '<path d="M448 125.6v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 159.8 64 125.9v-.3c0-34 86-61.6 192-61.6s192 27.6 192 61.6zm0 46.4v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 206.2 64 172.3v-.3l1 86.8v.5c.5 33.7 85.8 61 191 61s190.5-27.3 191-61v-.5l1-86.8zm0 128v.3c-.5 33.9-86.3 61.3-192 61.3S64.5 334.2 64 300.3v-.3l1 86.8v.5c.5 33.7 85.8 61 191 61s190.5-27.3 191-61v-.5l1-86.8z" />',
  viewBox: "0 0 512 512"
};
var fileHeaderIcon = {
  name: "file-header",
  content: '<path d="M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm0 416H96V64h320v384zm-32-64H128v-32h256v32zm0-96H128v32h256v-32zm0-160H128v96h256v-96z" />',
  viewBox: "0 0 512 512"
};
var fileFooterIcon = {
  name: "file-footer",
  content: '<path d="M416 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32zm0 416H96V64h320v384zm-32-224H128v-32h256v32zm0-96H128v32h256v-32zm0 160H128v96h256v-96z" />',
  viewBox: "0 0 512 512"
};
var groupHeaderSectionIcon = {
  name: "group-header-section",
  content: '<path d="m128 448 32 32H32V32h128l-32 32H64v384h64zm320-320H128v96h320v-96zm0 160H128v32h320v-32zm0 64H128v32h320v-32z" />',
  viewBox: "0 0 512 512"
};
var groupFooterSectionIcon = {
  name: "group-footer-section",
  content: '<path d="m128 448 32 32H32V32h128l-32 32H64v384h64zm320-160H128v96h320v-96zm0-160H128v32h320v-32zm0 64H128v32h320v-32z" />',
  viewBox: "0 0 512 512"
};
var pageHeaderSectionIcon = {
  name: "page-header-section",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-32-160H128v-96h256v96zm0 96H128v32h256v-32zm0-64H128v32h256v-32z" />',
  viewBox: "0 0 512 512"
};
var pageFooterSectionIcon = {
  name: "page-footer-section",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zm-31-32H129v-96h256v96zm0-160H129v32h256v-32zm0-64H129v32h256v-32z" />',
  viewBox: "0 0 512 512"
};
var detailSectionIcon = {
  name: "detail-section",
  content: '<path d="M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H96zm320 416H96V64h320v384zm-33-224h-63v-32h63v32zm-96-32h-63v32h63v-32zm-96 0h-63v32h63v-32zm192 96h-63v32h63v-32zm-96 0h-63v32h63v-32zm-96 0h-63v32h63v-32z" />',
  viewBox: "0 0 512 512"
};
var tocSectionIcon = {
  name: "toc-section",
  content: '<path d="M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H96zm320 416H96V64h320v384zm-32-288H224v-32h160v32zm-64 64h-96v-32h96v32zm0 64h-96v-32h96v32zm64 64H224v-32h160v32z" />',
  viewBox: "0 0 512 512"
};
var groupSectionIcon = {
  name: "group-section",
  content: '<path d="m128 416 32 32H32V32h128l-32 32H64v352h64zm320-288H128v32h320v-32zm0 192H128v32h320v-32zm0-96H128v32h320v-32z" />',
  viewBox: "0 0 512 512"
};
var parametersIcon = {
  name: "parameters",
  content: '<path d="M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H96zm320 416H96V64h320v384zM285.3 160c-8.9-25-36.3-38.1-61.4-29.2-13.7 4.8-24.4 15.6-29.2 29.2H128v32h66.7c8.9 25 36.3 38.1 61.4 29.2 13.7-4.8 24.4-15.6 29.2-29.2H384v-32h-98.7zM240 192c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm109.3 96c-8.9-25-36.3-38.1-61.4-29.2-13.7 4.8-24.4 15.6-29.2 29.2H128v32h130.7c8.9 25 36.3 38.1 61.4 29.2 13.7-4.8 24.4-15.6 29.2-29.2H384v-32h-34.7zM304 320c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z" />',
  viewBox: "0 0 512 512"
};
var dataCsvIcon = {
  name: "data-csv",
  content: '<path d="M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6zm0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.8zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7h89zM271 420.8c-7.7 4.5-16.4 6.8-25.4 6.7-9.7 0-17.4-3-23.1-9s-8.6-14.1-8.6-24.3c0-10.6 3-19 9.1-25.2 6.1-6.2 14-9.3 23.9-9.3 8.4-.1 16.7 2 24 6.3v-22.8c-7-2.6-15.7-3.9-25.9-3.9-16.6 0-30 5.2-40.4 15.7-10.4 10.5-15.6 24.1-15.6 40.9 0 15.8 4.6 28.4 13.8 37.9 9.2 9.5 21.9 14.2 38 14.2 12.3 0 22.3-1.9 30-5.6l.2-21.6zm36.6 25.7c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.6-2.6-5.5-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.5-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.2-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.3-.8 2.1 0 4.1.2 6.2.4 2.2.3 4.4.8 6.5 1.4 2.2.6 4.3 1.4 6.4 2.3 2 .9 3.9 2 5.8 3.2v-21.9c-3.8-1.4-7.7-2.4-11.7-3-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 2 12.8 6 17.9 4 4.9 10.1 9.1 18.3 12.5 3.2 1.3 6.2 2.6 9 3.9 2.5 1.1 4.9 2.5 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.2-.9-15.1-2.7-5.1-1.8-9.8-4.5-13.9-8V442c4.5 2.3 9 3.8 13.8 4.5zm147.7-105.4-21.8 72.8c-1.1 3.5-1.8 7.1-2.3 10.8h-.4c-.3-3.6-1.1-7.1-2.1-10.5l-21.9-73.1h-25.5l35.7 105h26.8l36.2-105h-24.7zm-295.3-15C85.7 317.7 32.4 295 32 268.3v-.3l.1 86.8v.3c.4 26.7 53.7 49.3 127.9 57.8v-86.8z" />',
  viewBox: "0 0 512 512"
};
var dataJsonIcon = {
  name: "data-json",
  content: '<path d="M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6zm0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.8zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7h89zm-251.3 21.1h-23.6v62.4c0 16-5.4 24-16.2 24-4.9.1-9.7-1.5-13.6-4.5v22.2c4.9 1.9 10.1 2.9 15.3 2.8 12.4 0 21.8-3.7 28.3-11.2s9.8-18.2 9.8-32.3v-63.4zm31.7 105.4c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.6-2.6-5.4-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.6-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.2-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.4-.7 2.1 0 4.1.1 6.2.4 2.2.3 4.4.8 6.6 1.4 2.2.6 4.3 1.4 6.4 2.3 2 .9 3.9 2 5.8 3.2v-21.9c-3.8-1.4-7.7-2.4-11.7-3-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 1.9 12.8 6 17.9 4 4.9 10.1 9.1 18.4 12.5 3.2 1.3 6.2 2.6 9 3.9 2.5 1.1 4.9 2.5 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.3-.9-15.1-2.7-5.1-1.8-9.7-4.5-13.8-8v23.4c4.1 2.2 8.7 3.7 13.4 4.4zm157.3-13.7c9.6-10.1 14.4-23.4 14.4-39.9 0-16.1-4.6-29-13.9-38.8-9.3-9.8-21.4-14.7-36.4-14.7-15.9 0-28.6 5.1-38.2 15.4-9.6 10.3-14.4 23.7-14.4 40.3 0 15.7 4.7 28.5 14.2 38.3s21.7 14.7 36.8 14.7c15.4-.1 27.9-5.2 37.5-15.3zm-17.5-64c4.6 6 6.9 14.5 7 25.4 0 10.4-2.4 18.6-7.2 24.5s-11.3 8.8-19.4 8.8c-7.5.2-14.6-3.2-19.2-9.1-4.9-6.1-7.3-14.3-7.3-24.7 0-10.2 2.4-18.5 7.3-24.7s11.5-9.3 19.8-9.3c8 0 14.4 3.1 19 9.1zM480 341.1h-22.3v58.1c-.1 4.8.1 9.6.6 14.4h-.3c-1.6-2.8-3.4-5.7-5.3-8.6L411 341.1h-25.5v105h22.3v-57.7c0-7.6-.2-13.3-.6-17h.3c1.6 3 3.4 5.9 5.3 8.7l43.3 66H480v-105zM96 313.9c-39-11.2-63.7-27.5-64-45.6v-.3l.1 86.8v.3c.3 18.1 24.9 34.3 63.9 45.6v-86.8z" />',
  viewBox: "0 0 512 512"
};
var dataSqlIcon = {
  name: "data-sql",
  content: '<path d="M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6zm0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.8zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7h89zM209.1 448.6c5.4 1 10.9 1.5 16.4 1.5 5.4 0 10.7-.5 16-1.6 4.7-.9 9.2-2.7 13.3-5.3 3.8-2.4 6.8-5.8 9-9.7 2.2-4 3.3-8.9 3.3-14.8.1-3.8-.6-7.6-1.9-11.2-1.3-3.2-3.1-6.1-5.5-8.5-2.5-2.6-5.4-4.9-8.6-6.7-3.6-2.1-7.4-4-11.3-5.6-3.1-1.3-5.8-2.5-8.3-3.7-2.2-1-4.3-2.3-6.2-3.7-1.6-1.1-2.9-2.4-4-4-.9-1.4-1.4-3-1.4-4.7 0-1.5.4-3.1 1.3-4.4.9-1.4 2.1-2.5 3.5-3.3 1.7-1 3.6-1.7 5.6-2.2 2.4-.5 4.9-.8 7.3-.8 2.1 0 4.1.2 6.2.4 2.2.3 4.4.8 6.6 1.4 2.2.6 4.3 1.4 6.4 2.3 2 .9 3.9 2 5.8 3.2v-21.9c-3.8-1.4-7.7-2.4-11.7-3-4.8-.7-9.7-1-14.5-1-5.3 0-10.6.6-15.8 1.8-4.7 1.1-9.1 3-13.1 5.6-3.7 2.5-6.8 5.8-9 9.7-2.3 4.3-3.4 9.2-3.3 14.1-.2 6.5 1.9 12.8 6 17.9 4 4.9 10.1 9.1 18.4 12.5 3.2 1.3 6.2 2.6 9 3.9 2.5 1.1 4.9 2.4 7.2 4 1.8 1.2 3.5 2.7 4.8 4.5 1.2 1.6 1.8 3.5 1.8 5.5 0 1.5-.4 2.9-1.1 4.2-.8 1.4-2 2.5-3.3 3.4-1.7 1-3.6 1.8-5.6 2.2-2.6.6-5.2.8-7.8.8-5.1 0-10.3-.9-15.1-2.7-5.1-1.8-9.7-4.5-13.8-8v23.4c4 2.3 8.6 3.8 13.4 4.5zm172.8-21.2c5.7-9 8.5-19.8 8.5-32.4 0-16.1-4.6-29-13.9-38.8s-21.3-14.7-36.2-14.8c-16 0-28.8 5.1-38.5 15.4s-14.4 23.7-14.4 40.3c-.1 7 1.1 13.9 3.4 20.4 2.1 6.1 5.4 11.7 9.6 16.6 4.2 4.7 9.3 8.6 15 11.2 6.1 2.8 12.8 4.4 19.5 4.5 3.8 4.2 7.4 8.1 10.9 11.8 3.3 3.5 6.9 6.7 10.8 9.6 3.6 2.6 7.4 4.8 11.6 6.4 4.2 1.6 8.7 2.4 13.2 2.3 3.4 0 6.7-.2 10.1-.7 2.2-.3 4.3-.8 6.5-1.3V458c-.8.3-1.6.6-2.4.8l-2.7.6c-.9.2-1.9.3-2.8.4s-1.8.1-2.6.1c-2.7 0-5.4-.2-8-.6-2.5-.4-4.9-1.1-7.1-2.1-2.5-1.1-4.8-2.5-6.9-4.2-2.6-2-5-4.3-7.3-6.7 9.9-3.4 18.2-10.1 23.7-18.9zm-23.3-56.3c4.6 6 6.9 14.5 6.9 25.3 0 10.4-2.4 18.6-7.2 24.5-4.8 6-11.3 8.9-19.4 8.8-7.5.2-14.7-3.2-19.3-9.1-4.8-6.1-7.3-14.3-7.3-24.7 0-10.4 2.4-18.6 7.3-24.7 4.9-6.2 11.5-9.4 19.8-9.4 8.3.1 14.6 3.1 19.2 9.3zm121.4 58h-38.9v-85.8h-23.7v105H480v-19.2zm-320-103C85.7 317.7 32.4 295 32 268.3v-.3l.1 86.8v.3c.4 26.7 53.7 49.3 127.9 57.8v-86.8z" />',
  viewBox: "0 0 512 512"
};
var dataWebIcon = {
  name: "data-web",
  content: '<path d="M415.9 93.6v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.6 127.8 32.1 93.9v-.3C32.1 59.6 118 32 224 32s191.9 27.6 191.9 61.6zm0 46.4v.3c-.5 33.9-86.3 61.3-191.9 61.3S32.5 174.2 32 140.3v-.3l.1 86.8v.3c.5 33.9 86.3 61.3 191.9 61.3s191.4-27.4 192-61.3v-.3l-.1-86.8zm.1 180-.1-52v.3c-.3 21.7-35.7 40.8-88.9 51.7h89zm-151.1 23-14.5 70.1c-.8 3.9-1.3 7.8-1.5 11.7h-.3c-.3-3.8-.9-7.6-1.7-11.3L229.6 343h-25.3l-19.1 69.6c-1.1 4-1.9 8.1-2.1 12.3h-.4c-.2-4-.6-8-1.4-12l-14.8-70h-25.8l27.6 105h27.3l17.9-67.4c1-3.9 1.6-7.8 1.9-11.8h.3c.1 4 .7 7.9 1.7 11.8l17.4 67.4H261l27.8-105h-23.9zm109.8 85.8h-39.3v-24h34.4v-19.2h-34.4v-23.4h36.9V343h-60.6v105h63v-19.2zm66.8 19.2c11.9 0 21.3-2.8 28.2-8.5 6.9-5.6 10.3-13.3 10.3-22.9.1-6.3-2.3-12.3-6.7-16.8-4.5-4.6-10.4-7.3-17.9-8.3v-.3c5.6-1.5 10.8-4.5 14.7-8.9 3.8-4 5.8-9.4 5.8-14.9 0-7.8-3.2-13.9-9.5-18.2-6.3-4.3-15.3-6.5-27-6.5h-38.3v105h40.4zm-7.9-87.6c11.5 0 17.3 3.9 17.3 11.6.2 3.7-1.4 7.3-4.2 9.8-2.8 2.4-6.6 3.6-11.5 3.5h-10.4v-24.9h8.8zm4.1 42.5c5.5 0 9.7 1.2 12.8 3.6 3 2.4 4.7 6 4.6 9.9.2 4-1.5 7.9-4.6 10.4-3.1 2.5-7.4 3.8-12.9 3.8h-12.8v-27.7h12.9zM96 313.9c-39-11.2-63.7-27.5-64-45.6v-.3l.1 86.8v.3c.3 18.1 24.9 34.3 63.9 45.6v-86.8z" />',
  viewBox: "0 0 512 512"
};
var groupCollectionIcon = {
  name: "group-collection",
  content: '<path d="M448 352H160v-32h288v32zm0 32H160v32h288v-32zm0-288H160v32h288V96zm0 64H160v32h288v-32zM64 192V96h64l32-32H32v160h128l-32-32H64zm0 224v-96h64l32-32H32v160h128l-32-32H64z" />',
  viewBox: "0 0 512 512"
};
var parameterBooleanIcon = {
  name: "parameter-boolean",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm384 288H64V128h384v256zM207 212h-39v114h-32V212H96v-26h111v26zm96.8-37-68.1 163h-27.5l67.9-163h27.7zM416 212h-49v34h45v26h-45v54h-32V186h81v26z" />',
  viewBox: "0 0 512 512"
};
var parameterDateTimeIcon = {
  name: "parameter-date-time",
  content: '<path d="M416 202.8V128c0-17.7-14.3-32-32-32H64c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h304c61.9 0 112-50.1 112.1-111.9 0-43.3-25-82.8-64.1-101.3zM64.1 384 64 192h304c-61.9 0-112 50.2-112 112 0 30.1 12.1 58.9 33.6 80H64.1zm303.9 0c-44.2 0-80-35.8-80-80s35.8-80 80-80 80 35.8 80 80-35.8 80-80 80zm48-96v32h-64v-64h32v32h32zm-224 32H96v-96h96v96z" />',
  viewBox: "0 0 512 512"
};
var parameterFloatIcon = {
  name: "parameter-float",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm384 288H64V128h384v256zm-276-55.6c-33.3 0-50-23.4-50-70.2 0-24.3 4.5-42.8 13.5-55.5s22.1-19.1 39.2-19.1c32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5-8.9 12.6-21.6 18.9-38.2 18.9zm1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.1-16.3 19.1-48.8s-6.2-48.9-18.7-48.9zm83.8 121.3c-4.7.1-9.2-1.5-12.7-4.7-3.3-2.9-5.2-7.1-5.1-11.5-.1-4.4 1.8-8.7 5.2-11.5 3.6-3 8.3-4.6 13-4.5 5.3 0 9.6 1.5 12.9 4.5 6.4 5.9 6.7 15.9.8 22.2l-.9.9c-3.3 3.1-7.8 4.6-13.2 4.6zM390 326h-88v-24h29v-87.2l-30 6.4v-25.5l60-12.1V302h29v24z" />',
  viewBox: "0 0 512 512"
};
var parameterIntegerIcon = {
  name: "parameter-integer",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm384 288H64V128h384v256zm-262.6-58H96.8v-24.4h29v-87.2L96 220.8v-25l60.6-12.2v118h28.8V326zm59.2-26.2v.6h56.8V326h-92.2v-24l40.1-38.4c8.1-7.7 13.7-14.2 17-19.5 3.2-4.9 4.9-10.7 4.9-16.6 0-12.9-6.9-19.3-20.8-19.3-12 0-23.6 4.8-34.6 14.4v-27.2c12.2-7.9 25.9-11.8 41.2-11.8 14.3 0 25.5 3.6 33.5 10.8 8 7.2 12.1 16.9 12.1 29.1 0 16.3-9.8 33.2-29.4 50.7l-28.6 25.6zm82.1 21.6v-26.9c9.4 6.8 20.3 10.3 32.8 10.3 7.9 0 14-1.7 18.4-5.1 4.4-3.4 6.6-8.1 6.6-14.2 0-6.2-2.7-11.1-8.1-14.5-5.4-3.4-12.9-5.1-22.4-5.1h-12.6v-23.6H353c18.2 0 27.4-6.1 27.4-18.2 0-11.4-7-17.1-21-17.1-9.4 0-18.5 3-27.3 9.1V191c9.8-4.9 21.3-7.4 34.4-7.4 14.3 0 25.5 3.2 33.5 9.7 7.8 6 12.2 15.3 12 25.1 0 18.3-9.3 29.8-27.8 34.4v.5c9.9 1.2 17.7 4.8 23.4 10.8 5.7 5.9 8.8 13.8 8.6 21.9 0 13.1-4.8 23.4-14.4 31.1s-22.8 11.4-39.6 11.4c-14.7-.1-26.4-2.4-35.5-7.1z" />',
  viewBox: "0 0 512 512"
};
var parameterStringIcon = {
  name: "parameter-string",
  content: '<path d="M127.3 328.9c13.2 0 23.1-5.6 29.8-16.8h.4v14.4h29.2v-59.8c0-28.5-14.3-42.7-42.8-42.7-6.9.1-13.7.9-20.4 2.5-7.4 1.7-13.3 3.6-17.6 5.9v23.2c10.8-7.1 22.1-10.6 34-10.6s17.8 5.5 17.8 16.4l-27.2 3.6c-23 3-34.5 14.2-34.5 33.6 0 9.2 2.8 16.5 8.3 22s13.2 8.3 23 8.3zm12.2-47.5 18.2-2.3v6.7c0 6.1-1.8 11.2-5.5 15.2-3.6 4-8.8 6.2-14.2 6-4.2 0-7.5-1.1-9.9-3.4-2.4-2.2-3.8-5.4-3.7-8.6 0-7.7 5-12.3 15.1-13.6zm209 33.5c-9.5-9.3-14.3-21.3-14.3-36 0-17 5.1-30.4 15.3-40.2 10.2-9.8 23.8-14.7 40.9-14.7 11.8 0 20.3 1.6 25.6 4.7v26.2c-6.2-4.7-13.8-7.3-21.6-7.2-8.9 0-15.9 2.6-21 7.8-5.2 5.2-7.8 12.3-7.8 21.4 0 8.9 2.5 15.8 7.4 20.9 4.9 5 11.8 7.6 20.4 7.6 7.7 0 15.2-2.4 22.6-7.3v24.8c-7 4-17 6-30.2 6-15.3 0-27.8-4.7-37.3-14zm-104 .5h.4c6.3 9.4 15.6 14.1 27.9 14.1 13.6 0 24.5-5 32.6-15.1 8.1-10.1 12.2-23.5 12.2-40.1 0-15.3-3.5-27.4-10.5-36.3s-16.9-13.3-29.8-13.3c-14.1 0-24.9 5.8-32.5 17.5h-.4V179h-30.9v148h30.9l.1-11.6zm-.5-42.2c0-7.4 2-13.4 6.1-18.1 3.8-4.5 9.5-7.1 15.4-6.9 6.6 0 11.6 2.3 15.2 7 3.5 4.7 5.3 11.1 5.3 19.4 0 10-1.9 17.7-5.8 23.1-3.9 5.4-9.3 8.2-16.4 8.2-5.5.1-10.7-2.2-14.3-6.4-3.7-4.2-5.6-9.6-5.6-16l.1-10.3zM448 96H64c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32zm0 288H64V128h384v256z" />',
  viewBox: "0 0 512 512"
};
var tocSectionLevelIcon = {
  name: "toc-section-level",
  content: '<path d="M96 32c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V64c0-17.7-14.3-32-32-32H96zm320 416H96V64h320v384zm-32-288H192v-32h192v32zm0 64h-96v-32h96v32zm0 64h-96v-32h96v32zm0 64h-96v-32h96v32zm-192-32v-96l64 48-64 48z" />',
  viewBox: "0 0 512 512"
};
var inheritedIcon = {
  name: "inherited",
  content: '<path d="M448 320v128H320V320h30.4L256 244.5 161.6 320H192v128H64V320h46.4l120-96H176V64h160v160h-54.4l120 96H448z" />',
  viewBox: "0 0 512 512"
};
var fileVideoIcon = {
  name: "file-video",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zM304 304.8v-.8c0-8.8-7.2-16-16-16h-10.1c24.2-3.1 42.8-24.3 41.8-49.6-1-24.8-21.2-45-46-46-27.4-1.1-49.9 20.8-49.9 48 0 24.4 18.2 44.6 41.8 47.6h-70.4c17.2-1.7 30.3-16.9 28.7-34.8-1.4-15.5-14.1-27.9-29.6-28.9-18.7-1.3-34.2 13.5-34.2 31.9 0 16.6 12.7 30.2 28.8 31.8H176c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16h111.7c8.4 0 15.6-6.3 16.3-14.6.2-3.1-.3-6.1-1.7-8.7l1.8 1.1 44.9 27.1c1.3.8 2.7 1.2 4.1 1.2 1.3 0 2.7-.3 3.9-1 2.5-1.4 4.1-4.1 4.1-7v-95.8c0-2.9-1.5-5.5-4-6.9s-5.5-1.5-8 0L304 304.8zM193.5 272c-.5.1-1 .1-1.5.1s-1 0-1.5-.1h-.2c-8.6-.8-15.1-8.5-14.3-17.2.6-7.9 7.2-14.2 15.1-14.6 9.2-.5 16.8 6.9 16.8 16 .1 8.1-6.1 15-14.4 15.8zm82.3-.3c-.3 0-.6.1-.9.1-1 .1-2.1.2-3.1.2s-2.1 0-3.1-.2c-.3 0-.6-.1-.9-.1-15.9-2-27.9-15.7-27.9-31.7 0-17.6 14.4-32 32-32s32 14.4 32 32c-.1 16.1-12.1 29.7-28.1 31.7z" />',
  viewBox: "0 0 512 512"
};
var fileAudioIcon = {
  name: "file-audio",
  content: '<path d="M218 353.8c-5.5-2.9-12.1-4.5-19-4.5-21 0-38 14.8-38 33.2s17 33.2 38 33.2 38-14.8 38-33.2V256.6l96-22.6v87.8c-5.5-2.9-12.1-4.5-19-4.5-21 0-38 14.8-38 33.2s17 33.2 38 33.2 38-14.8 38-33.2V192.2l-134 31.5v130.1zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileImageIcon = {
  name: "file-image",
  content: '<path d="M298.7 385.2S272.2 288 213.1 288s-85 128-85 128h256s-11.9-78.7-42.7-78.7-42.7 47.9-42.7 47.9zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zM288 256c0 17.7 14.3 32 32 32s32-14.3 32-32-14.3-32-32-32-32 14.3-32 32z" />',
  viewBox: "0 0 512 512"
};
var filePresentationIcon = {
  name: "file-presentation",
  content: '<path d="M127.5 214.4c0 9.9 6.1 18.2 14.5 21.2v113.1c0 12.4 9.6 22.4 21.3 22.4H246v11.8l-13.6 14.6c-1.9 2-3 4.8-3 8 0 6.3 4.7 11.3 10.5 11.3 2.8 0 5.5-1.3 7.4-3.3.1-.1.2-.3.4-.4l8.9-9.6 8.9 9.6c.1.1.2.3.4.4 1.9 2 4.5 3.3 7.4 3.3 5.8 0 10.5-5 10.5-11.3 0-3.1-1.2-6-3-8L267 382.8V371h78.8c11.1 0 20.1-9.3 20.9-21h1.3V235.9c9-2.6 15.7-11.3 15.7-21.6 0-12.4-9.5-22.4-21.3-22.4H148.8c-11.8.1-21.3 10.1-21.3 22.5zM299 237h43v89h-43v-89zm-64 26h43v63h-43v-63zm-64 18h43v45h-43v-45zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileDataIcon = {
  name: "file-data",
  content: '<path d="M352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288zM128 229.3v149.4c0 20.6 19.1 37.3 42.7 37.3h170.6c23.6 0 42.7-16.7 42.7-37.3V229.3c0-20.6-19.1-37.3-42.7-37.3H170.7c-23.6 0-42.7 16.7-42.7 37.3zM247 379h-76v-47h76v47zm18-112h76v47h-76v-47zm0 65h76v47h-76v-47zm-18-19h-76v-47h76v47z" />',
  viewBox: "0 0 512 512"
};
var fileDiscImageIcon = {
  name: "file-disc-image",
  content: '<path d="M256.1 322.7c3.7 0 7.2-1.1 10.1-3s5.2-4.5 6.7-7.6c1.2-2.5 1.9-5.2 1.9-8.1 0-10.3-8.4-18.7-18.7-18.7-2.8 0-5.4.6-7.7 1.7-3.4 1.6-6.3 4.1-8.3 7.3-1.7 2.8-2.7 6.1-2.7 9.7 0 10.4 8.3 18.7 18.7 18.7zm-52.5-117.8c-19.1 10.1-34.9 25.5-45.4 44.4-9 16.1-14.1 34.7-14.1 54.4 0 61.7 50 111.7 111.7 111.7 20 0 38.8-5.3 55.1-14.5 18.6-10.6 33.9-26.4 43.9-45.4 8.1-15.5 12.7-33.1 12.7-51.8 0-61.7-50-111.7-111.7-111.7-18.9 0-36.7 4.7-52.2 12.9zm89.8 99.2c0 6.1-1.4 11.8-4 16.9l48.7 25.8c-8.3 15.8-20.9 28.9-36.3 37.7l-26.6-48.3c-5.6 3.3-12.1 5.3-19.1 5.3-20.6 0-37.4-16.7-37.4-37.4 0-6.8 1.8-13.2 5-18.7l-49.2-27.1c8.8-15.7 22-28.6 38-37l26.8 49.3c5-2.5 10.7-3.9 16.7-3.9 20.7 0 37.4 16.7 37.4 37.4zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var fileProgrammingIcon = {
  name: "file-programming",
  content: '<path d="m236 256-52.6-.2-48.6 48.6.1.1c-4.1 3.9-6.7 9.4-6.7 15.5 0 5.8 2.3 11 6 14.8l49.1 49.1 46.8-.2-59.7-59.7c.2-.9.3-1.8.3-2.8L236 256zm105.2 65.5c.1.9.2 1.9.3 2.8L281.9 384l46.8.2 49.1-49.1c3.7-3.8 6-9.1 6-14.8 0-6.1-2.6-11.6-6.7-15.5l.1-.1-48.6-48.7-52.6.2 65.2 65.3zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var parametersByteArrayIcon = {
  name: "parameters-byte-array",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm384 288H64V128h384v256zm-306.2-55.6c-33.3 0-50-23.4-50-70.2 0-24.3 4.5-42.8 13.5-55.5s22.1-19.1 39.2-19.1c32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5-8.9 12.6-21.6 18.9-38.2 18.9zm1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.1-16.3 19.1-48.8s-6.2-48.9-18.7-48.9zm113.6 121.3c-33.3 0-50-23.4-50-70.2 0-24.3 4.5-42.8 13.5-55.5s22.1-19.1 39.2-19.1c32.6 0 48.8 23.8 48.8 71.4 0 23.7-4.4 41.9-13.3 54.5-8.8 12.6-21.6 18.9-38.2 18.9zm1.4-121.3c-13.3 0-20 16.8-20 50.3 0 31.6 6.5 47.4 19.6 47.4 12.8 0 19.2-16.3 19.2-48.8s-6.3-48.8-18.8-48.9zM420 326h-88v-24h29v-87.2l-30 6.4v-25.4l61-12.3V302h28v24z" />',
  viewBox: "0 0 512 512"
};
var parametersUnknownIcon = {
  name: "parameters-unknown",
  content: '<path d="M64 96c-17.7 0-32 14.3-32 32v256c0 17.7 14.3 32 32 32h384c17.7 0 32-14.3 32-32V128c0-17.7-14.3-32-32-32H64zm384 288H64V128h384v256zm-64-64h-64v-32h64v32zm-96 0h-64v-32h64v32zm-96 0h-64v-32h64v32z" />',
  viewBox: "0 0 512 512"
};
var fileErrorIcon = {
  name: "file-error",
  content: '<path d="M160 320h32V160h-32v160zm16 32c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zM352 32H96c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h320c17.7 0 32-14.3 32-32V128l-96-96zm64 416H96V64h224v96h96v288z" />',
  viewBox: "0 0 512 512"
};
var filesErrorIcon = {
  name: "files-error",
  content: '<path d="M64 64h224l-32-32H64c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h64v-32H64V64zm208 320c-8.8 0-16 7.2-16 16s7.2 16 16 16 16-7.2 16-16-7.2-16-16-16zM384 96H192c-17.7 0-32 14.3-32 32v320c0 17.7 14.3 32 32 32h256c17.7 0 32-14.3 32-32V192l-96-96zm64 352H192V128h160v96h96v224zm-192-96h32V192h-32v160z" />',
  viewBox: "0 0 512 512"
};
var dataRestIcon = {
  name: "data-rest",
  content: '<path d="M32 268v.33-.33zm0 .33.12 86.48v.32c.29 18.1 24.9 34.34 63.87 45.56l.01-86.77c-38.99-11.22-63.7-27.48-64-45.59zm192.01-113.1c105.67 0 191.4-27.41 191.93-61.29v-.33C415.94 59.59 330 32 224 32S32.06 59.59 32.07 93.61v.33c.53 33.88 86.27 61.29 191.94 61.29zM32 140.32s0 .01 0 0V140v.32zm384 86.81v-.32l-.12-86.81v.32c-.53 33.88-86.26 61.29-191.93 61.29-105.66 0-191.4-27.41-191.95-61.28l.12 86.48v.32c.53 33.88 86.26 61.29 191.93 61.29S415.46 261 416 227.13zM327 320h89l-.07-52v.32c-.34 21.73-35.73 40.8-88.93 51.68zm-130.74 96.93 19.85 31.05h-27.17l-16.33-27.03c-1.22-2.05-2.39-3.88-3.52-5.49-1.12-1.61-2.26-2.99-3.41-4.14-1.15-1.15-2.34-2.03-3.59-2.64-1.25-.61-2.6-.92-4.06-.92h-6.37v40.21H128V342.95h37.5c25.49 0 38.23 9.52 38.23 28.56 0 3.66-.56 7.04-1.68 10.14-1.12 3.1-2.71 5.9-4.76 8.39s-4.53 4.64-7.43 6.45c-2.91 1.81-6.14 3.22-9.7 4.25v.29c1.56.49 3.08 1.28 4.54 2.38 1.46 1.1 2.88 2.38 4.25 3.85 1.37 1.46 2.67 3.04 3.92 4.72 1.23 1.69 2.37 3.34 3.39 4.95zm-17.43-42.48c0-9.18-5.49-13.77-16.48-13.77h-10.69v29.22h10.25c5.08 0 9.16-1.46 12.23-4.39 3.13-2.98 4.69-6.67 4.69-11.06zm70.75 30.32h34.35v-19.19h-34.35v-23.36h36.91v-19.26h-60.57v105.03h62.99V428.8h-39.33v-24.03zm115.58-6.01c-2.39-2.49-5.26-4.72-8.61-6.7-3.34-1.98-7.12-3.85-11.32-5.6-3.08-1.27-5.84-2.5-8.28-3.7-2.44-1.2-4.52-2.42-6.23-3.66-1.71-1.24-3.03-2.56-3.96-3.96-.93-1.39-1.39-2.97-1.39-4.72 0-1.61.41-3.06 1.25-4.36.83-1.29 2-2.4 3.52-3.33 1.51-.93 3.37-1.65 5.57-2.16 2.2-.51 4.64-.77 7.32-.77 1.95 0 4.02.15 6.19.44s4.36.75 6.56 1.36 4.33 1.38 6.41 2.31c2.07.93 3.99 2 5.75 3.22v-21.9c-3.56-1.37-7.46-2.38-11.68-3.04-4.22-.66-9.07-.99-14.54-.99-5.57 0-10.84.6-15.82 1.79s-9.36 3.06-13.15 5.6c-3.78 2.54-6.77 5.77-8.97 9.7-2.2 3.93-3.3 8.63-3.3 14.1 0 6.98 2.01 12.94 6.04 17.87 4.03 4.93 10.14 9.11 18.35 12.52 3.22 1.32 6.23 2.61 9.01 3.88 2.78 1.27 5.19 2.59 7.21 3.96 2.03 1.37 3.63 2.86 4.8 4.47s1.76 3.44 1.76 5.49c0 1.51-.37 2.92-1.1 4.21-.73 1.29-1.84 2.42-3.33 3.37-1.49.95-3.34 1.7-5.57 2.23-2.22.54-4.82.81-7.8.81-5.08 0-10.11-.89-15.09-2.67s-9.59-4.46-13.84-8.02v23.44c3.81 1.95 8.31 3.42 13.51 4.39s10.68 1.46 16.44 1.46c5.61 0 10.95-.54 16-1.61 5.05-1.07 9.49-2.84 13.29-5.31s6.82-5.69 9.05-9.67c2.22-3.98 3.33-8.9 3.33-14.76 0-4.25-.63-7.97-1.9-11.17a26.091 26.091 0 0 0-5.48-8.52zm14.94-55.81v19.26h29.81v85.77h23.73v-85.77h29.96v-19.26h-83.5z" />',
  viewBox: "0 0 512 512"
};
var fileTypescriptIcon = {
  name: "file-typescript",
  content: '<path d="M64 128h192v48h-72v208h-48V176H64v-48zm316.6 107.6c-35-12.6-50.1-21.6-50.1-40.6 0-14.6 12.9-29.9 43.3-29.9 24.6 0 42.9 7.1 52.3 11.8l11.5-36.6c-13.6-6.5-34.4-12.3-62.8-12.3-56.8 0-92.7 30.6-92.7 71.3 0 35.6 27.6 57.6 70.9 72.1 33.1 11.4 46.4 22.4 46.4 41.2 0 20.3-17.1 33.9-47.6 33.9-24.4 0-47.9-7.4-63.3-15.8l-10.6 37.6c14.3 8.3 43.1 15.8 70.8 15.8 67.6 0 99.3-34.6 99.3-74.6 0-35.8-21.9-57.4-67.4-73.9z" />',
  viewBox: "0 0 512 512"
};
var tablePositionStartIcon = {
  name: "table-position-start",
  content: '<path d="M480 320v32H32v-32h448zM32 416h448v-32H32v32zm192-160H32V32h224v224h-32zm-64-128h64V64h-64v64zm-32 32H64v64h64v-64zm0-96H64v64h64V64zm32 160h64v-64h-64v64zM32 480h320v-32H32v32z" />',
  viewBox: "0 0 512 512"
};
var tablePositionCenterIcon = {
  name: "table-position-center",
  content: '<path d="M352 256V32H128v224h224zM256 64h64v64h-64V64zm-32 160h-64v-64h64v64zm0-96h-64V64h64v64zm32 32h64v64h-64v-64zM32 448h320v32H32v-32zm448-128v32H32v-32h448zM32 384h448v32H32v-32z" />',
  viewBox: "0 0 512 512"
};
var tablePositionEndIcon = {
  name: "table-position-end",
  content: '<path d="M32 384h448v32H32v-32zm0 96h320v-32H32v32zM480 32v224H256V32h224zM352 160h-64v64h64v-64zm0-96h-64v64h64V64zm96 96h-64v64h64v-64zm0-96h-64v64h64V64zM32 352h448v-32H32v32z" />',
  viewBox: "0 0 512 512"
};
var listRomanUpperIcon = {
  name: "list-roman-upper",
  content: '<path d="M32 32h32v128H32V32zm0 288h32V192H32v128zm64 0h32V192H96v128zM32 480h32V352H32v128zm64 0h32V352H96v128zm64 0h32V352h-32v128zM128 96h352v32H128V96zm64 160h288v32H192v-32zm64 160h224v32H256v-32zM96 152c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm64 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8z" />',
  viewBox: "0 0 512 512"
};
var listRomanLowerIcon = {
  name: "list-roman-lower",
  content: '<path d="M32 64h16v96H32V64zm0 256h16v-96H32v96zm32 0h16v-96H64v96zM32 480h16v-96H32v96zm32 0h16v-96H64v96zm32 0h16v-96H96v96zM48 40c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 160c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM48 200c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM48 360c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 0c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zm32 112c0 4.4-3.6 8-8 8s-8-3.6-8-8 3.6-8 8-8 8 3.6 8 8zM128 96h352v32H128V96zm32 160h320v32H160v-32zm32 160h288v32H192v-32z" />',
  viewBox: "0 0 512 512"
};
var importIcon = {
  name: "import",
  content: '<path d="M96 480c-17.7 0-32-14.3-32-31.9V192c0-17.7 14.3-32 32-32h96.3v30.9H96.4V448h319.1V190.9h-95.9V160H416c17.7 0 32 14.3 32 31.9V448c0 17.7-14.3 32-31.9 32H96zm159.5-162 96.5-94h-64.5V32h-64v192H159l96.5 94z" />',
  viewBox: "0 0 512 512"
};
var exportIcon = {
  name: "export",
  content: '<path d="M96 480c-4.3 0-8.5-.8-12.5-2.5-3.8-1.6-7.3-3.9-10.2-6.9-2.9-2.9-5.3-6.4-6.9-10.2-1.7-3.9-2.5-8.2-2.5-12.5V192c0-4.3.8-8.5 2.5-12.5 1.6-3.8 3.9-7.3 6.9-10.2 2.9-2.9 6.4-5.3 10.2-6.9 3.9-1.7 8.2-2.5 12.5-2.5h96.3v31.9H96.4v256.3h319.1V191.9h-95.9V160H416c17.7 0 32 14.3 32 31.9V448c0 17.7-14.3 32-31.9 32H96zm192-160V126h64.5L256 32l-96.5 94H224v194h64z" />',
  viewBox: "0 0 512 512"
};
var graphIcon = {
  name: "graph",
  content: '<path d="M64 448h416v32H32V32h32v416zm128-192-96 96v64h384V160L288 320l-96-64zM416 64l14.2 14.2L288 192l-96-64-96 96v64l96-96 96 64 174.5-145.4L480 128V64h-64z" />',
  viewBox: "0 0 512 512"
};
var chartColumnClusteredIcon = {
  name: "chart-column-clustered",
  content: '<path d="M320 96v352h-32V288H128v160H64V32H32v448h448V96H320zm-64 352h-96V320h96v128z" />',
  viewBox: "0 0 512 512"
};
var chartColumnStackedIcon = {
  name: "chart-column-stacked",
  content: '<path d="M320 192v256h-32V96H128v352H64V32H32v448h448V192H320zM160 448V256h96v192h-96zm192 0v-96h96v96h-96z" />',
  viewBox: "0 0 512 512"
};
var chartColumnStacked100Icon = {
  name: "chart-column-stacked100",
  content: '<path d="M320 32v416h-32V32H128v416H64V32H32v448h448V32H320zM160 448V192h96v256h-96zm192 0V288h96v160h-96z" />',
  viewBox: "0 0 512 512"
};
var chartColumnRangeIcon = {
  name: "chart-column-range",
  content: '<path d="M480 448v32H32V32h32v416h416zM256 128h-96v224h96V128m32-32v288H128V96h160zm192-64H320v224h160V32z" />',
  viewBox: "0 0 512 512"
};
var chartBarClusteredIcon = {
  name: "chart-bar-clustered",
  content: '<path d="M64 448v-64h160V224H64v-32h352V32H32v448h448v-32H64zm128-192v96H64v-96h128z" />',
  viewBox: "0 0 512 512"
};
var chartBarStackedIcon = {
  name: "chart-bar-stacked",
  content: '<path d="M64 448v-64h352V224H64v-32h256V32H32v448h448v-32H64zm0-384h96v96H64V64zm192 192v96H64v-96h192z" />',
  viewBox: "0 0 512 512"
};
var chartBarStacked100Icon = {
  name: "chart-bar-stacked100",
  content: '<path d="M480 192V32H32v448h448v-32H64v-64h416V224H64v-32h416zm-160 64v96H64v-96h256zM64 64h160v96H64V64z" />',
  viewBox: "0 0 512 512"
};
var chartBarRangeIcon = {
  name: "chart-bar-range",
  content: '<path d="M480 448v32H32V32h32v416h416zm-96-192H160v96h224v-96m32-32v160H128V224h288zm64-192H256v160h224V32z" />',
  viewBox: "0 0 512 512"
};
var chartAreaClusteredIcon = {
  name: "chart-area-clustered",
  content: '<path d="m405.5 200.3-88.2-88.2-91.2 114L192 192l-37.6 45.1L64 146.8V32H32v448h448V96l-74.5 104.3zM320 160l66.7 66.7L320 320l-71.1-71.1L320 160zM64 192l69.8 69.8L64 345.6V192z" />',
  viewBox: "0 0 512 512"
};
var chartAreaStackedIcon = {
  name: "chart-area-stacked",
  content: '<path d="m320 165.3-128-64-128 128V32H32v448h448V32L320 165.3zm128 7.5L320 352 192 224 64 377.6v-103l134.3-134.3 126.1 63 123.6-103v72.5z" />',
  viewBox: "0 0 512 512"
};
var chartAreaStacked100Icon = {
  name: "chart-area-stacked100",
  content: '<path d="M32 32v448h448V32H32zm416 108.8L320 320 192 192 64 345.6V64h384v76.8z" />',
  viewBox: "0 0 512 512"
};
var chartAreaRangeIcon = {
  name: "chart-area-range",
  content: '<path d="M64 416v32h416v32H32V32h32v224l128-128 128 64L480 32v192L320 384l-127-64-129 96z" />',
  viewBox: "0 0 512 512"
};
var chartLineIcon = {
  name: "chart-line",
  content: '<path d="M64 448h416v32H32V32h32v416zm152.4-190.4L96 416v-51.2l97.2-129.6 41.2-33-27.3-34.1L96 224v-38l119.9-58.1 43.5 54.3 109-87.2 55.9 85.7L480 114v47l-38 46.7 38 58.3.5 53.3-58.5-87-82.5 101.3-85.1-106.4-38 30.4zm63-50.4 60.1 75.2 64.3-77.1-42.7-63.5-81.7 65.4z" />',
  viewBox: "0 0 512 512"
};
var chartLineStackedIcon = {
  name: "chart-line-stacked",
  content: '<path d="M480 448v32H32V32h32v416h416zM224 292l128 64 128-96v-36l-128 96-128-64-128 96v36l128-96zm0-160 128 92 128-60v-36l-128 60-128-92-128 64v36l128-64z" />',
  viewBox: "0 0 512 512"
};
var chartLineStacked100Icon = {
  name: "chart-line-stacked100",
  content: '<path d="M480 448v32H32V32h32v416h416zM224 228l128 64 128-96v-36l-128 96-128-64-128 96v36l128-96zM480 32H96v32h384V32z" />',
  viewBox: "0 0 512 512"
};
var chartLineMarkersIcon = {
  name: "chart-line-markers",
  content: '<path d="M480 448v32H0V32h32v416h448zm0-96c.1 17.7-14.2 32-31.9 32.1-17.7.1-32-14.2-32.1-31.9 0-1.3.1-2.7.2-4l-83.7-62.8c-8 3.4-17.1 3.4-25.2 0l-83.7 62.8c2.1 17.5-10.4 33.5-27.9 35.6s-33.5-10.4-35.6-27.9c-.7-6.2.3-12.4 3.1-18l-49-73.6-22.7 39.6c8.9 15.3 3.7 34.9-11.5 43.8s-34.9 3.7-43.8-11.5-3.7-34.9 11.5-43.8c4.9-2.8 10.4-4.3 16-4.4l30.6-53.5-28.4-42.6c-.7 0-1.4.1-2.1.1-17.7 0-32-14.3-32-32s14.3-32 32-32 32 14.3 32 32c0 4.9-1.1 9.8-3.3 14.2l19.5 29.3 52.2-91.3c-8.9-15.3-3.8-34.9 11.5-43.8s34.9-3.8 43.8 11.5c2.5 4.4 4 9.2 4.3 14.3l78.4 39.2c14.7-9.7 34.6-5.7 44.3 9 .3.5.7 1.1 1 1.6h72.6c8.8-15.3 28.4-20.5 43.7-11.7 15.3 8.8 20.5 28.4 11.7 43.7s-28.4 20.5-43.7 11.7c-4.9-2.8-8.9-6.8-11.7-11.7h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-9.3-5.4-15.3-15.1-15.9-25.8l-78.4-39.2c-5.2 3.4-11.3 5.3-17.5 5.3l-60 105.2 57.9 86.9c.7 0 1.4-.1 2.1-.1 4.3 0 8.6.9 12.6 2.6l83.7-62.8c-2.2-17.5 10.3-33.5 27.8-35.7 17.5-2.2 33.5 10.3 35.7 27.8.3 2.6.3 5.2 0 7.8l83.7 62.8c16.2-7 35.1.6 42 16.8 1.6 4.1 2.5 8.4 2.5 12.7zm-48-192c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zm-128 0c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zM176 96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zm-96 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm0 160c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 32c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartLineStackedMarkersIcon = {
  name: "chart-line-stacked-markers",
  content: '<path d="M480 448v32H0V32h32v416h448zm0-320c0 17.7-14.3 32-32 32-6.9 0-13.7-2.2-19.2-6.4L352 192c0 17.7-14.3 32-32 32s-32-14.3-32-32c0-2.5.3-5 .9-7.4l-81.1-60.8c-11.1 6.3-24.8 5.4-35-2.2L96 160c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32c6.9 0 13.7 2.2 19.2 6.4L160 96c0-17.7 14.3-32 32-32s32 14.3 32 32c0 2.5-.3 5-.9 7.4l81.1 60.8c11.1-6.3 24.8-5.4 35 2.2L416 128c0-17.7 14.3-32 32-32s32 14.3 32 32zM80 160c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm16 128c0 17.7-14.3 32-32 32-5.5 0-11-1.4-15.8-4.2l-81.1 60.8c4.1 17.2-6.6 34.4-23.8 38.5-17.2 4.1-34.4-6.6-38.5-23.8-.6-2.4-.9-4.9-.9-7.4l-76.8-38.4c-10.2 7.6-23.9 8.5-35 2.2L95 376.5c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8 6.6-34.4 23.8-38.5c7.9-1.9 16.1-.7 23.1 3.3l81.1-60.8c-4.1-17.2 6.6-34.4 23.8-38.5 17.2-4.1 34.4 6.6 38.5 23.8.6 2.4.9 4.9.9 7.4l76.8 38.4c10.2-7.6 23.9-8.5 35-2.2l81.1-60.8c-4.1-17.2 6.5-34.5 23.7-38.6 17.2-4.1 34.5 6.5 38.6 23.7.6 2.5.9 5.1.9 7.6zM80 384c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartLineStacked100MarkersIcon = {
  name: "chart-line-stacked100-markers",
  content: '<path d="M480 448v32H0V32h32v416h448zm0-192c0 17.7-14.3 32-32 32-5.5 0-11-1.4-15.8-4.2l-81.1 60.8c4.1 17.2-6.6 34.4-23.8 38.5-17.2 4.1-34.4-6.6-38.5-23.8-.6-2.4-.9-4.9-.9-7.4l-76.8-38.4c-10.2 7.6-23.9 8.5-35 2.2L95 376.5c4.1 17.2-6.6 34.4-23.8 38.5s-34.4-6.6-38.5-23.8 6.6-34.4 23.8-38.5c7.9-1.9 16.1-.7 23.1 3.3l81.1-60.8c-4.1-17.2 6.6-34.4 23.8-38.5 17.2-4.1 34.4 6.6 38.5 23.8.6 2.4.9 4.9.9 7.4l76.8 38.4c10.2-7.6 23.9-8.5 35-2.2l81.1-60.8c-4.1-17.2 6.5-34.5 23.7-38.6 17.2-4.1 34.5 6.5 38.6 23.7.6 2.5.9 5.1.9 7.6zM80 384c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128-96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm16-192c0 17.7-14.3 32-32 32-11.4 0-22-6.1-27.7-16h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-4.9-2.8-8.9-6.8-11.7-11.7h-72.6c-8.8 15.3-28.4 20.5-43.7 11.7-4.9-2.8-8.9-6.8-11.7-11.7H91.7C82.9 95.3 63.3 100.5 48 91.7S27.4 63.3 36.3 48 64.7 27.5 80 36.3c4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 4.9 2.8 8.9 6.8 11.7 11.7h72.6c8.8-15.3 28.4-20.5 43.7-11.7 9.9 5.7 16 16.3 16 27.7zM80 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm128 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartPieIcon = {
  name: "chart-pie",
  content: '<path d="M473 310.3c.9-2.1 1.4-4.2 1.8-6.3l.1-.5c.5-2.1.9-4.1 1.3-6.2v-.2c.8-4.4 1.5-8.8 1.8-13.3v-.4c.5-2 .7-3.9.9-5.9l.1-1.7c.1-1.6.3-3.1.4-4.7 0-.7.1-1.4.1-2 .1-1.5.2-3.1.2-4.6 0-.6 0-1.3.1-1.9.1-2.2.1-4.3.1-6.5 0-31.8-6.7-63.2-19.8-92.2-1.5-3.3-3.1-6.6-4.7-9.8-4.1-8-8.7-15.8-13.8-23.3-5-7.4-10.5-14.6-16.4-21.3-1.2-1.3-2.4-2.7-3.6-4-2.4-2.7-4.9-5.3-7.4-7.8s-5.1-5-7.8-7.4c-2.7-2.4-5.4-4.7-8.1-7-4.1-3.4-8.4-6.7-12.8-9.8-20.7-14.8-43.8-25.9-68.3-32.9-5.3-1.5-10.7-2.8-16.2-4-3.6-.7-7.3-1.4-11-2s-7.4-1-11.2-1.3c-5.6-.6-11.3-.9-17.1-1.1-1.9 0-3.9-.1-5.8-.1C132.3 32 32 132.3 32 256s100.3 224 224 224c105 0 193.1-72.2 217-169.7zm-81.2 81.5c-74.4 75.6-195.9 76.6-271.5 2.2S43.7 198 118 122.5l2.2-2.2c36-36.2 84.9-56.4 135.8-56.3v192l186.3 46.6c-8.4 33.8-25.9 64.6-50.5 89.2z" />',
  viewBox: "0 0 512 512"
};
var chartDoughnutIcon = {
  name: "chart-doughnut",
  content: '<path d="M473 310.3c.9-2.1 1.4-4.2 1.8-6.3l.1-.5c.5-2.1.9-4.1 1.3-6.2v-.3c.8-4.4 1.5-8.8 1.8-13.3v-.4c.5-2 .7-3.9.9-5.9l.1-1.7c.1-1.6.3-3.1.4-4.7 0-.7.1-1.4.1-2 .1-1.5.2-3.1.2-4.6 0-.6 0-1.3.1-1.9.1-2.2.1-4.3.1-6.5 0-31.8-6.7-63.2-19.8-92.2-1.5-3.3-3.1-6.6-4.7-9.8-4.1-8-8.7-15.8-13.8-23.3-5-7.4-10.5-14.6-16.4-21.3-1.2-1.3-2.4-2.7-3.6-4-2.4-2.7-4.9-5.3-7.4-7.8s-5.1-5-7.8-7.4c-2.7-2.4-5.4-4.7-8.1-7-4.1-3.4-8.4-6.7-12.8-9.8-20.7-14.8-43.8-25.9-68.3-32.9-5.3-1.5-10.7-2.8-16.2-4-3.6-.7-7.3-1.4-11-2s-7.4-1-11.2-1.3c-5.6-.6-11.3-.9-17.1-1.1-1.9 0-3.9-.1-5.8-.1C132.3 32 32 132.3 32 256s100.3 224 224 224c105 0 193.1-72.2 217-169.7zM320 256c0 35.3-28.7 64-64 64s-64-28.7-64-64 28.7-64 64-64 64 28.7 64 64zm71.8 135.8c-74.4 75.6-195.9 76.6-271.5 2.2S43.7 198 118 122.4l2.2-2.2c36-36.1 84.9-56.3 135.8-56.2v96c-53 0-96 43-96 96s43 96 96 96c44 0 82.4-30 93.1-72.7l93.2 23.3c-8.4 33.8-25.9 64.6-50.5 89.2zm-39.8-133v.8-.8zm0 2.8v.9-.9zm-.4 2.9-.1.7.1-.7zm-.6 3.2v.2-.2zm-1 5.9v.1-.1zm0 2.8v.2-.2z" />',
  viewBox: "0 0 512 512"
};
var chartScatterIcon = {
  name: "chart-scatter",
  content: '<path d="M480 448v32H32V32h32v416h416zM160 96c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm112 192c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm112-128c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm112 192c0 17.7-14.3 32-32 32s-32-14.3-32-32 14.3-32 32-32 32 14.3 32 32zm-16 0c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartScatterSmoothLinesMarkersIcon = {
  name: "chart-scatter-smooth-lines-markers",
  content: '<path d="M480 448v32H32V32h32v416h416zm0-384c0 17.7-14.3 32-32 32-15.6 0-28.9-11.2-31.5-26.5-9.2-1.3-22-1.8-39-.8C342.5 71 305.1 79.4 275 92c-19.1 7.9-47.9 23-60.7 45.1 12.7 12.3 13 32.6.6 45.3l-1.1 1.1c9.1 13.1 28.9 18.6 61.1 25.1 21 4.2 42.8 8.5 60.2 18.9 12.7 7.6 21.7 17.8 27 30.3 16.8 5.6 25.8 23.7 20.2 40.5-3.2 9.5-10.6 17-20.1 20.2-11.2 29.5-39.2 54.6-81.6 72.2-29.7 12.1-61.2 19.2-93.2 21.1-4 .2-7.8.3-11.4.3-9.6.1-19.3-.7-28.8-2.5-14.1 10.6-34.2 7.7-44.8-6.4-10.6-14.1-7.7-34.2 6.4-44.8s34.2-7.7 44.8 6.4c3.2 4.2 5.2 9.1 6 14.3 8.7 1 17.5 1.2 26.2.7 28.3-1.6 56.2-7.9 82.5-18.6 19.7-8.2 49.8-24.3 62-49.6-13-12-13.8-32.2-1.8-45.2.4-.5.8-.9 1.3-1.3-9.1-13.2-28.8-18.7-61.1-25.2-21-4.2-42.8-8.5-60.2-18.9-12.8-7.7-21.9-18-27.2-30.7-16.7-5.9-25.4-24.2-19.5-40.9 3.3-9.4 10.9-16.7 20.4-19.8 5-11 12-21 20.6-29.5 14.6-14.5 34.7-27.2 59.8-37.6C296 48.6 337 39.2 375.4 36.8c22.9-1.5 40-.4 52.8 2.1 13.9-11 34-8.6 44.9 5.3 4.5 5.6 6.9 12.6 6.9 19.8zm-272 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm-64 224c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm192-96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zM464 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartScatterSmoothLinesIcon = {
  name: "chart-scatter-smooth-lines",
  content: '<path d="M480 448v32H32V32h32v416h416zm-144-87.8c21.1-19.9 31.8-44.5 31.8-73.1 0-27.3-11-47.6-32.6-60.6-17.3-10.3-38.8-14.5-59.6-18.6-46.2-9-66.5-16.3-66.8-47.9-.4-41.2 71.8-65.5 114.8-76.4C385.4 68.1 448.4 64 449 64l-2-32c-2.7.2-66.2 4.3-130.8 20.5-38.7 9.7-69.8 21.8-92.4 36-31.4 19.8-47.3 43.9-47 71.7.2 27.2 11.3 47.6 32.9 60.5 17.3 10.3 38.9 14.5 59.7 18.6 19 3.7 36.9 7.2 49.3 14.6 11.9 7.1 17 17.1 17 33.2 0 19.7-7.1 36-21.7 49.7-24.1 22.8-68.9 38.2-129.3 44.6-29.2 3-58.5 3.9-87.8 2.6l-2 32c1.7.1 12.1.7 28 .7 51.4 0 159.8-6.4 213.1-56.5z" />',
  viewBox: "0 0 512 512"
};
var chartScatterStraightLinesMarkersIcon = {
  name: "chart-scatter-straight-lines-markers",
  content: '<path d="M480 448v32H32V32h32v416h416zm0-384c0 17.7-14.3 32-32 32-7.4 0-14.6-2.6-20.3-7.3L224 165.1l116.4 93.1c16.5-6.4 35 1.7 41.4 18.2s-1.7 35-18.2 41.4c-10.3 4-22 2.4-30.8-4.2l-173.1 74.2c-2.1 17.5-18 30.1-35.6 28s-30.1-18-28-35.6c2.1-17.5 18-30.1 35.6-28 5.6.7 10.9 2.8 15.4 6.2l173.1-74.2c0-.4.1-.7.1-1l-116.7-93.4c-16.5 6.4-35-1.7-41.4-18.2s1.7-35 18.2-41.4c10.8-4.2 23-2.3 32 5.1l204.1-76.5c2.9-17.4 19.4-29.2 36.8-26.3C468.7 35.1 480 48.4 480 64zm-272 96c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm-64 224c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16zm192-96c0 8.8 7.2 16 16 16s16-7.2 16-16-7.2-16-16-16-16 7.2-16 16zM464 64c0-8.8-7.2-16-16-16s-16 7.2-16 16 7.2 16 16 16 16-7.2 16-16z" />',
  viewBox: "0 0 512 512"
};
var chartScatterStraightLinesIcon = {
  name: "chart-scatter-straight-lines",
  content: '<path d="M480 448v32H32V32h32v416h416zm-98.5-156.9-158.8-127L448 64V32L161.3 156l161.2 128.9L128 384v32l253.5-124.9z" />',
  viewBox: "0 0 512 512"
};
var chartBubbleIcon = {
  name: "chart-bubble",
  content: '<path d="M480 448v32H32V32h32v416h416zM192 256c-35.3 0-64 28.7-64 64s28.7 64 64 64 64-28.7 64-64-28.7-64-64-64m0-32c53 0 96 43 96 96s-43 96-96 96-96-43-96-96 43-96 96-96zm224 96c-17.7 0-32 14.3-32 32s14.3 32 32 32 32-14.3 32-32-14.3-32-32-32m0-32c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zM368 96c-44.2 0-80 35.8-80 80s35.8 80 80 80 80-35.8 80-80-35.8-80-80-80zM176 64c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z" />',
  viewBox: "0 0 512 512"
};
var chartCandlestickIcon = {
  name: "chart-candlestick",
  content: '<path d="M480 448v32H32V32h32v416h416zm-192-96h-64v64h-32v-64h-64V96h64V32h32v64h64v256zm-32-224h-96v192h96V128zm224 64h-64V64h-32v128h-64v128h64v64h32v-64h64V192z" />',
  viewBox: "0 0 512 512"
};
var chartOhlcIcon = {
  name: "chart-ohlc",
  content: '<path d="M480 448v32H32V32h32v416h416zM224 320V96h-32v32h-64v32h64v256h32v-64h64v-32h-64zM416 96V32h-32v160h-64v32h64v96h32V128h64V96h-64z" />',
  viewBox: "0 0 512 512"
};
var chartRadarIcon = {
  name: "chart-radar",
  content: '<path d="M272 32h-32v44L80.7 195.5l-41.1-10-7.6 31.1 42.3 10.3 81 148.5-62.7 86.3 25.9 18.8 67.2-92.5L344 412.3l49.5 68.2 25.9-18.8-46.8-64.4 40.8-163.1 65.8-15.3-7.3-31.2-74.9 17.4L272 80V32zm-32 202.2-119-28.9L240 116v118.2zm32 0v-109l88.4 88.4-88.4 20.6zm-95.9 112.5-59.8-109.6 118.5 28.8-58.7 80.8zm172 17.3-71-97.7 101.3-23.6L348.1 364zm-30.6 12-110.6-17 49.1-67.6 61.5 84.6z" />',
  viewBox: "0 0 512 512"
};
var chartRadarMarkersIcon = {
  name: "chart-radar-markers",
  content: '<path d="m472 187.7-51.2 11.9c-9.4-8-22.5-9.9-33.8-4.8L288.1 96c0-11.5-6.2-22.1-16.1-27.8V32h-32v36.4c-7.1 4.1-12.3 10.8-14.6 18.6L96.1 184c-8.6 0-16.7 3.4-22.8 9.5l-32.8-8-7.5 31.1 32.3 7.8c2.7 9.9 10 17.8 19.6 21.5l61 111.8c-3 8.9-2 18.7 2.9 26.7l-56.1 77.3 25.9 18.8L177 400c8.5-.2 16.5-3.8 22.3-10l122 18.8c3.9 13.8 16.5 23.2 30.8 23.2 1.9 0 3.9-.2 5.8-.5l35.6 49 25.9-18.8-37.1-51.1c3.7-10.4 1.7-22-5.2-30.6l31.4-125.2c11.8-3.2 20.8-12.9 23.1-24.9l47.7-11.1-7.3-31.1zm-111.4 25.9L272 234.2V125.1l88.6 88.5zM256 80c8.8 0 16 7.2 16 16s-7.2 16-16 16-16-7.2-16-16 7.2-16 16-16zm-21.1 39.9c1.6 1.4 3.3 2.6 5.1 3.7V234l-113.3-27.6c-.4-1.4-1-2.8-1.6-4.1l109.8-82.4zM96 232c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm80 152c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm7.2-47.2c-2.4-.5-4.8-.8-7.2-.8-1.8 0-3.7.2-5.5.5l-52.9-96.9c.7-.6 1.3-1.2 1.9-1.9l115.3 28-51.6 71.1zm23.6 22 49.1-67.6 61.5 84.6-110.6-17zM352 416c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16zm-3.9-52.3L277 265.9l97.4-22.6c.9 1.2 1.9 2.4 3 3.5l-29.3 116.9zM400 240c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16-7.2 16-16 16z" />',
  viewBox: "0 0 512 512"
};
var chartRadarFilledIcon = {
  name: "chart-radar-filled",
  content: '<path d="m354.4 372.1 65.1 89.6-25.9 18.8-75-103.2-109.2-21.8-90.8 125-25.9-18.8 90-123.8-67.3-101L32 216.6l7.5-31.1 65.8 16L240 107.2V32h32v80l99.2 99.2L472 187.7l7.3 31.2-98.8 23-26.1 130.2z" />',
  viewBox: "0 0 512 512"
};
var chartRoseIcon = {
  name: "chart-rose",
  content: '<path d="M226 251.4 44.3 329.3c-23.8-68.9-12.6-145.1 30-204.3L226 251.4zm-82.1-109.5L240 222V96.8c-36.2 3.6-70.1 19.6-96.1 45.1zm231.5 160.2L279 278l27.3 95.7c31.8-13.6 56.7-39.4 69.1-71.6zM96 353.4c37.3 69.1 115 106.1 192.2 91.4L244 290 96 353.4zM272 32v211.4l204.6 51.1c2.3-12.9 3.4-26 3.4-39.1C480 137.1 388.2 40.2 272 32z" />',
  viewBox: "0 0 512 512"
};
var chartChoroplethIcon = {
  name: "chart-choropleth",
  content: '<path d="M448 64v384H64V64h384m32-32H32v448h448V32zm-96 256v13.3l-64 64v37.5l13.3 13.3H416V264.6L384 288zm-50.7-160 64 64-32 32 18.8 23.4 32-21.3V96H288v18.8l13.3 13.3h32zM224 192l32 32-23.7 23.7L352 276v-20l-32-32 32-32-32-32h-32l-32-32V96h-32l-64 64 32 32h32zm0 86-32 10-32 32 32 32v32l-32 32h128v-64l50.4-50.4L224 278zm-29.4-37.8 16.2-16.2h-32l-64-64 64-64H96v167.5l98.6-23.3zM114.8 320l37.6-37.6L96 296.5V416h32v-13.3l32-32v-5.5L114.8 320z" />',
  viewBox: "0 0 512 512"
};

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/SplitButton.js
var React33 = __toESM(require_react());
var PropTypes8 = __toESM(require_prop_types());
var __extends6 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitButton = (
  /** @class */
  function(_super) {
    __extends6(SplitButton2, _super);
    function SplitButton2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {
        focused: false,
        focusedIndex: -1,
        opened: false
      };
      _this3.wrapper = null;
      _this3.mainButton = null;
      _this3.list = null;
      _this3.guid = guid();
      _this3.skipFocus = false;
      _this3.buttonsData = [];
      _this3.onKeyDown = function(event2) {
        var focusedIndex = _this3.state.focusedIndex;
        if (event2.altKey) {
          if (!_this3.opened && event2.keyCode === Keys.down) {
            _this3.dispatchPopupEvent(event2, true);
            _this3.setState({ focusedIndex: 0, opened: true });
          } else if (_this3.opened && event2.keyCode === Keys.up) {
            _this3.setState({ focusedIndex: -1, opened: false });
          }
          return;
        }
        var newState = void 0;
        if (event2.keyCode === Keys.enter || event2.keyCode === Keys.space) {
          event2.preventDefault();
          _this3.dispatchClickEvent(event2, focusedIndex);
          if (focusedIndex >= 0) {
            newState = {
              focusedIndex: _this3.opened ? -1 : 0,
              opened: !_this3.opened
            };
            if (newState.opened) {
              _this3.dispatchPopupEvent(event2, newState.opened);
            }
          }
        } else if (_this3.opened && event2.keyCode === Keys.esc) {
          newState = {
            focusedIndex: -1,
            opened: false
          };
        }
        if (_this3.opened) {
          var newFocused = navigate(focusedIndex, event2.keyCode, event2.altKey, _this3.buttonsData.length);
          if (newFocused !== focusedIndex) {
            newState = newState || {};
            newState.focusedIndex = newFocused;
          }
          var arrowKey = event2.keyCode === Keys.up || event2.keyCode === Keys.down || event2.keyCode === Keys.left || event2.keyCode === Keys.right;
          if (!event2.altKey && (arrowKey || event2.keyCode === Keys.home || event2.keyCode === Keys.end)) {
            event2.preventDefault();
          }
        }
        if (newState) {
          _this3.setState(newState);
        }
      };
      _this3.switchFocus = function(focusFn) {
        _this3.skipFocus = true;
        focusFn();
        window.setTimeout(function() {
          return _this3.skipFocus = false;
        }, 0);
      };
      _this3.onFocus = function(event2) {
        if (_this3.skipFocus) {
          return;
        }
        dispatchEvent(_this3.props.onFocus, event2, _this3, void 0);
        _this3.setState({ focused: true });
      };
      _this3.onItemClick = function(event2, clickedItemIndex) {
        var opened = _this3.opened;
        if (opened) {
          _this3.setState({ focusedIndex: 0, opened: false });
        }
        _this3.dispatchClickEvent(event2, clickedItemIndex);
      };
      _this3.onBlur = function(event2) {
        if (_this3.skipFocus) {
          return;
        }
        _this3.setState({
          focused: false,
          focusedIndex: -1,
          opened: false
        });
        dispatchEvent(_this3.props.onBlur, event2, _this3, void 0);
      };
      _this3.onPopupClose = function() {
        if (_this3.state.focused) {
          _this3.switchFocus(function() {
            if (_this3.element) {
              _this3.element.removeAttribute("tabindex");
              _this3.element.focus({ preventScroll: true });
            }
          });
        }
        _this3.dispatchPopupEvent({}, false);
      };
      _this3.listRef = function(list) {
        _this3.list = list;
        if (list && _this3.state.focused) {
          _this3.switchFocus(function() {
            list.focus({ preventScroll: true });
            if (_this3.element) {
              _this3.element.tabIndex = -1;
            }
          });
        }
      };
      _this3.onSplitPartClick = function(event2) {
        if (_this3.buttonsData.length) {
          var toOpen = !_this3.opened;
          if (toOpen) {
            _this3.dispatchPopupEvent(event2, toOpen);
          }
          _this3.setState({
            focusedIndex: toOpen ? 0 : -1,
            opened: toOpen,
            focused: true
          });
        }
      };
      _this3.onDownSplitPart = function(event2) {
        event2.preventDefault();
        var activeElement = getActiveElement(document);
        if (_this3.element && activeElement !== _this3.element && activeElement !== _this3.list) {
          _this3.element.focus();
        }
      };
      _this3.onItemDown = function(event2) {
        var activeElement = getActiveElement(document);
        if (activeElement === _this3.list) {
          event2.preventDefault();
        }
      };
      _this3.dispatchPopupEvent = function(dispatchedEvent, open) {
        dispatchEvent(open ? _this3.props.onOpen : _this3.props.onClose, dispatchedEvent, _this3, void 0);
      };
      validatePackage2(packageMetadata2);
      return _this3;
    }
    Object.defineProperty(SplitButton2.prototype, "opened", {
      get: function() {
        return this.props.opened === void 0 ? this.state.opened : this.props.opened;
      },
      enumerable: false,
      configurable: true
    });
    SplitButton2.prototype.render = function() {
      var _this3 = this;
      this.buttonsData = this.props.items || React33.Children.toArray(this.props.children).filter(function(child) {
        return child && child.type === SplitButtonItem;
      }).map(function(child) {
        return child.props;
      });
      var rtl = this.isRtl();
      var dir = rtl ? "rtl" : void 0;
      var _a14 = this.props, id = _a14.id, style = _a14.style, tabIndex = _a14.tabIndex, disabled = _a14.disabled;
      return React33.createElement(
        "div",
        { id, style, className: classNames("k-split-button", "k-button-group", {
          "k-focus": this.state.focused
        }, "k-rounded-".concat(kendoThemeMaps.roundedMap[this.props.rounded || "medium"]), this.props.className), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, dir, ref: function(el) {
          return _this3.wrapper = el;
        } },
        React33.createElement(Button, { ref: function(el) {
          return _this3.mainButton = el && el.element;
        }, type: "button", size: this.props.size, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, onClick: function(event2) {
          return _this3.onItemClick(event2, -1);
        }, disabled: disabled || void 0, tabIndex, accessKey: this.props.accessKey, className: this.props.buttonClass, icon: this.props.icon, svgIcon: this.props.svgIcon, iconClass: this.props.iconClass, imageUrl: this.props.imageUrl, dir, "aria-disabled": disabled, "aria-haspopup": true, "aria-expanded": this.opened || void 0, "aria-label": this.props.ariaLabel, "aria-controls": this.opened ? this.guid : void 0, id: "button-" + this.guid, title: this.props.title }, this.props.text),
        React33.createElement(Button, { type: "button", size: this.props.size, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, icon: "caret-alt-down", svgIcon: caretAltDownIcon, className: "k-split-button-arrow", disabled: disabled || void 0, tabIndex: -1, onClick: this.onSplitPartClick, onMouseDown: this.onDownSplitPart, onPointerDown: this.onDownSplitPart, dir, "aria-label": "menu toggling button" }),
        this.renderPopup(rtl)
      );
    };
    SplitButton2.prototype.componentDidMount = function() {
      if (this.props.dir === void 0 && this.isRtl() || this.opened) {
        this.forceUpdate();
      }
    };
    Object.defineProperty(SplitButton2.prototype, "element", {
      /**
       * The DOM element of main button.
       */
      get: function() {
        return this.mainButton;
      },
      enumerable: false,
      configurable: true
    });
    SplitButton2.prototype.dispatchClickEvent = function(dispatchedEvent, clickedItemIndex) {
      if (!this.isItemDisabled(clickedItemIndex)) {
        if (clickedItemIndex === -1) {
          dispatchEvent(this.props.onButtonClick, dispatchedEvent, this, void 0);
        } else {
          dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {
            item: this.buttonsData[clickedItemIndex],
            itemIndex: clickedItemIndex
          });
        }
      }
    };
    SplitButton2.prototype.renderPopup = function(rtl) {
      var _a14;
      var _b3 = this.props.popupSettings, popupSettings = _b3 === void 0 ? {} : _b3;
      var focusedIndex = this.state.focusedIndex;
      return React33.createElement(
        Popup,
        { anchor: this.wrapper, show: this.opened, animate: popupSettings.animate, popupClass: classNames("k-menu-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign(rtl), popupAlign: popupSettings.popupAlign || getPopupAlign(rtl), style: rtl ? { direction: "rtl" } : void 0, onClose: this.onPopupClose },
        React33.createElement("ul", { role: "menu", id: this.guid, "aria-labelledby": "button-" + this.guid, tabIndex: -1, ref: this.listRef, "aria-activedescendant": focusedIndex >= 0 ? "".concat(this.guid, "-").concat(focusedIndex) : void 0, className: classNames("k-group k-menu-group k-reset", (_a14 = {}, _a14["k-menu-group-".concat(kendoThemeMaps.sizeMap[this.props.size] || this.props.size)] = this.props.size, _a14)) }, this.renderChildItems())
      );
    };
    SplitButton2.prototype.renderChildItems = function() {
      var _this3 = this;
      var _a14 = this.props, item = _a14.item, itemRender = _a14.itemRender, textField = _a14.textField;
      return this.buttonsData.length > 0 ? this.buttonsData.map(function(dataItem, index) {
        return React33.createElement(ButtonItem, { className: "k-menu-item", dataItem, textField, focused: _this3.state.focusedIndex === index, onClick: _this3.onItemClick, onDown: _this3.onItemDown, render: itemRender, item, key: index, index, id: "".concat(_this3.guid, "-").concat(index) });
      }) : null;
    };
    SplitButton2.prototype.isItemDisabled = function(index) {
      return this.buttonsData[index] ? this.buttonsData[index].disabled : this.props.disabled;
    };
    SplitButton2.prototype.isRtl = function() {
      return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
    };
    SplitButton2.propTypes = {
      accessKey: PropTypes8.string,
      ariaLabel: PropTypes8.string,
      title: PropTypes8.string,
      onButtonClick: PropTypes8.func,
      onFocus: PropTypes8.func,
      onBlur: PropTypes8.func,
      onItemClick: PropTypes8.func,
      onOpen: PropTypes8.func,
      onClose: PropTypes8.func,
      text: PropTypes8.string,
      items: PropTypes8.arrayOf(PropTypes8.any),
      textField: PropTypes8.string,
      tabIndex: PropTypes8.number,
      disabled: PropTypes8.bool,
      icon: PropTypes8.string,
      svgIcon: svgIconPropType,
      iconClass: PropTypes8.string,
      imageUrl: PropTypes8.string,
      popupSettings: PropTypes8.object,
      itemRender: PropTypes8.any,
      item: PropTypes8.func,
      className: PropTypes8.string,
      buttonClass: PropTypes8.string,
      dir: PropTypes8.string
    };
    SplitButton2.defaultProps = {
      size: "medium",
      rounded: "medium",
      fillMode: "solid",
      themeColor: "base"
    };
    return SplitButton2;
  }(React33.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/DropDownButtonItem.js
var React34 = __toESM(require_react());
var PropTypes9 = __toESM(require_prop_types());
var __extends7 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DropDownButtonItem = (
  /** @class */
  function(_super) {
    __extends7(DropDownButtonItem2, _super);
    function DropDownButtonItem2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DropDownButtonItem2.prototype.render = function() {
      return null;
    };
    DropDownButtonItem2.propTypes = {
      text: PropTypes9.string,
      icon: PropTypes9.string,
      iconClass: PropTypes9.string,
      imageUrl: PropTypes9.string,
      selected: PropTypes9.bool,
      disabled: PropTypes9.bool,
      render: PropTypes9.any
    };
    return DropDownButtonItem2;
  }(React34.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/ListButton/DropDownButton.js
var React35 = __toESM(require_react());
var PropTypes10 = __toESM(require_prop_types());
var __extends8 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var DropDownButton = (
  /** @class */
  function(_super) {
    __extends8(DropDownButton2, _super);
    function DropDownButton2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {
        opened: false,
        focused: false,
        focusedIndex: -1
      };
      _this3.wrapper = null;
      _this3.mainButton = null;
      _this3.list = null;
      _this3.skipFocus = false;
      _this3.guid = guid();
      _this3.buttonsData = [];
      _this3.onKeyDown = function(event2) {
        var focusedIndex = _this3.state.focusedIndex;
        if (event2.altKey) {
          if (!_this3.opened && event2.keyCode === Keys.down) {
            _this3.dispatchPopupEvent(event2, true);
            _this3.setState({ focusedIndex: 0, opened: true });
          } else if (_this3.opened && event2.keyCode === Keys.up) {
            _this3.setState({ focusedIndex: -1, opened: false });
          }
          return;
        }
        var newState = __assign15({}, _this3.state);
        if (event2.keyCode === Keys.enter || event2.keyCode === Keys.space) {
          if (focusedIndex >= 0) {
            _this3.dispatchClickEvent(event2, focusedIndex);
          }
          event2.preventDefault();
          newState.focusedIndex = _this3.opened ? -1 : 0, newState.opened = !_this3.opened;
          if (newState.opened) {
            _this3.dispatchPopupEvent(event2, newState.opened);
          }
        } else if (_this3.opened && event2.keyCode === Keys.esc) {
          newState.focusedIndex = -1;
          newState.opened = false;
        }
        if (_this3.opened) {
          var newFocused = navigate(focusedIndex, event2.keyCode, event2.altKey, _this3.buttonsData.length);
          newState.focusedIndex = newFocused;
          var arrowKey = event2.keyCode === Keys.up || event2.keyCode === Keys.down || event2.keyCode === Keys.left || event2.keyCode === Keys.right;
          if (!event2.altKey && (arrowKey || event2.keyCode === Keys.home || event2.keyCode === Keys.end)) {
            event2.preventDefault();
          }
        }
        _this3.setState(newState);
      };
      _this3.switchFocus = function(focusFn) {
        _this3.skipFocus = true;
        focusFn();
        window.setTimeout(function() {
          return _this3.skipFocus = false;
        }, 0);
      };
      _this3.handleFocus = function(event2) {
        if (_this3.skipFocus) {
          return;
        }
        _this3.setState({ focused: true, focusedIndex: _this3.opened ? 0 : -1 });
        dispatchEvent(_this3.props.onFocus, event2, _this3, void 0);
      };
      _this3.handleBlur = function(event2) {
        if (_this3.skipFocus) {
          return;
        }
        _this3.setState({ focused: false, opened: false, focusedIndex: -1 });
        dispatchEvent(_this3.props.onBlur, event2, _this3, void 0);
      };
      _this3.onItemClick = function(event2, clickedItemIndex) {
        _this3.setState({ focusedIndex: -1, opened: false });
        _this3.dispatchClickEvent(event2, clickedItemIndex);
      };
      _this3.onItemDown = function(event2) {
        var activeElement = getActiveElement(document);
        if (activeElement === _this3.list) {
          event2.preventDefault();
        }
      };
      _this3.mouseDown = function(event2) {
        event2.preventDefault();
        var activeElement = getActiveElement(document);
        if (_this3.element && activeElement !== _this3.element && activeElement !== _this3.list) {
          _this3.element.focus();
        }
      };
      _this3.onPopupClose = function() {
        if (_this3.state.focused) {
          _this3.switchFocus(function() {
            if (_this3.element) {
              _this3.element.removeAttribute("tabindex");
              _this3.element.focus({ preventScroll: true });
            }
          });
        }
        _this3.dispatchPopupEvent({}, false);
      };
      _this3.listRef = function(list) {
        _this3.list = list;
        if (list && _this3.state.focused) {
          _this3.switchFocus(function() {
            list.focus({ preventScroll: true });
            if (_this3.element) {
              _this3.element.tabIndex = -1;
            }
          });
        }
      };
      _this3.onClickMainButton = function(event2) {
        if (!_this3.buttonsData.length) {
          return;
        }
        var toOpen = !_this3.opened;
        _this3.setState({
          opened: toOpen,
          focused: true,
          focusedIndex: toOpen ? 0 : -1
        });
        if (toOpen) {
          _this3.dispatchPopupEvent(event2, toOpen);
        }
      };
      _this3.dispatchPopupEvent = function(dispatchedEvent, open) {
        dispatchEvent(open ? _this3.props.onOpen : _this3.props.onClose, dispatchedEvent, _this3, void 0);
      };
      validatePackage2(packageMetadata2);
      return _this3;
    }
    Object.defineProperty(DropDownButton2.prototype, "opened", {
      get: function() {
        return this.props.opened === void 0 ? this.state.opened : this.props.opened;
      },
      enumerable: false,
      configurable: true
    });
    DropDownButton2.prototype.render = function() {
      var _this3 = this;
      var rtl = this.isRtl();
      var dir = rtl ? "rtl" : void 0;
      var _a14 = this.props, id = _a14.id, style = _a14.style, tabIndex = _a14.tabIndex, disabled = _a14.disabled;
      this.buttonsData = this.props.items || React35.Children.toArray(this.props.children).filter(function(child) {
        return child && child.type === DropDownButtonItem;
      }).map(function(child) {
        return child.props;
      });
      return React35.createElement(
        "div",
        { id, style, className: classNames("k-dropdown-button", {
          "k-focus": this.state.focused
        }, this.props.className), onKeyDown: this.onKeyDown, onFocus: this.handleFocus, onBlur: this.handleBlur, dir, ref: function(el) {
          return _this3.wrapper = el;
        } },
        React35.createElement(Button, { size: this.props.size, rounded: this.props.rounded, fillMode: this.props.fillMode, themeColor: this.props.themeColor, onClick: this.onClickMainButton, onMouseDown: this.mouseDown, disabled: disabled || void 0, tabIndex, accessKey: this.props.accessKey, icon: this.props.icon, svgIcon: this.props.svgIcon, iconClass: this.props.iconClass, className: this.props.buttonClass, imageUrl: this.props.imageUrl, dir, ref: function(btn) {
          return _this3.mainButton = btn && btn.element;
        }, type: "button", "aria-haspopup": true, "aria-expanded": this.opened || void 0, "aria-label": this.props.ariaLabel, "aria-controls": this.opened ? this.guid : void 0, id: "button-" + this.guid, title: this.props.title }, this.props.text),
        this.renderPopup(rtl)
      );
    };
    DropDownButton2.prototype.componentDidMount = function() {
      if (this.props.dir === void 0 && this.isRtl() || this.opened) {
        this.forceUpdate();
      }
    };
    Object.defineProperty(DropDownButton2.prototype, "element", {
      /**
       * The DOM element of main button.
       */
      get: function() {
        return this.mainButton;
      },
      enumerable: false,
      configurable: true
    });
    DropDownButton2.prototype.dispatchClickEvent = function(dispatchedEvent, index) {
      if (!this.isItemDisabled(index)) {
        dispatchEvent(this.props.onItemClick, dispatchedEvent, this, {
          item: this.buttonsData[index],
          itemIndex: index
        });
      }
    };
    DropDownButton2.prototype.renderPopup = function(rtl) {
      var _a14;
      var _b3 = this.props.popupSettings, popupSettings = _b3 === void 0 ? {} : _b3;
      var focusedIndex = this.state.focusedIndex;
      return React35.createElement(
        Popup,
        { anchor: this.wrapper, show: this.opened, animate: popupSettings.animate, popupClass: classNames("k-menu-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign(rtl), popupAlign: popupSettings.popupAlign || getPopupAlign(rtl), style: rtl ? { direction: "rtl" } : void 0, onClose: this.onPopupClose },
        React35.createElement("ul", { role: "menu", id: this.guid, "aria-labelledby": "button-" + this.guid, tabIndex: -1, "aria-activedescendant": focusedIndex >= 0 ? "".concat(this.guid, "-").concat(focusedIndex) : void 0, ref: this.listRef, className: classNames("k-group k-menu-group k-reset", (_a14 = {}, _a14["k-menu-group-".concat(kendoThemeMaps.sizeMap[this.props.size] || this.props.size)] = this.props.size, _a14)) }, this.renderChildItems())
      );
    };
    DropDownButton2.prototype.renderChildItems = function() {
      var _this3 = this;
      var _a14 = this.props, item = _a14.item, itemRender = _a14.itemRender, textField = _a14.textField;
      return this.buttonsData.length > 0 ? this.buttonsData.map(function(dataItem, index) {
        return React35.createElement(ButtonItem, { className: "k-menu-item", dataItem, textField, focused: _this3.state.focusedIndex === index, onClick: _this3.onItemClick, onDown: _this3.onItemDown, render: itemRender, item, index, key: index, id: "".concat(_this3.guid, "-").concat(index) });
      }) : null;
    };
    DropDownButton2.prototype.isItemDisabled = function(index) {
      return this.buttonsData[index] ? this.buttonsData[index].disabled : this.props.disabled;
    };
    DropDownButton2.prototype.isRtl = function() {
      return this.props.dir !== void 0 ? this.props.dir === "rtl" : !!this.wrapper && getComputedStyle(this.wrapper).direction === "rtl";
    };
    DropDownButton2.propTypes = {
      accessKey: PropTypes10.string,
      ariaLabel: PropTypes10.string,
      title: PropTypes10.string,
      onFocus: PropTypes10.func,
      onBlur: PropTypes10.func,
      onItemClick: PropTypes10.func,
      onOpen: PropTypes10.func,
      onClose: PropTypes10.func,
      items: PropTypes10.arrayOf(PropTypes10.any),
      textField: PropTypes10.string,
      tabIndex: PropTypes10.number,
      disabled: PropTypes10.bool,
      icon: PropTypes10.string,
      svgIcon: svgIconPropType,
      iconClass: PropTypes10.string,
      imageUrl: PropTypes10.string,
      popupSettings: PropTypes10.object,
      itemRender: PropTypes10.func,
      item: PropTypes10.func,
      className: PropTypes10.string,
      buttonClass: PropTypes10.string,
      dir: PropTypes10.string
    };
    DropDownButton2.defaultProps = {
      size: "medium",
      rounded: "medium",
      fillMode: "solid",
      themeColor: "base"
    };
    return DropDownButton2;
  }(React35.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/Toolbar.js
var React36 = __toESM(require_react());
var PropTypes11 = __toESM(require_prop_types());
var __extends9 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
var Toolbar = (
  /** @class */
  function(_super) {
    __extends9(Toolbar2, _super);
    function Toolbar2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.offsetHeight = 0;
      _this3.offsetWidth = 0;
      _this3.buttons = [];
      _this3.focusedSelector = _this3.selectors.map(function(s) {
        return s + ":focus";
      }).join(",");
      _this3.setTabIndex = function(focusedIndex) {
        var _a14 = _this3.props.tabIndex, tabIndex = _a14 === void 0 ? Toolbar2.defaultProps.tabIndex : _a14;
        _this3.buttons.forEach(function(button, index) {
          button.tabIndex = index === focusedIndex ? tabIndex : -1;
        });
      };
      _this3.onKeyDown = function(event2) {
        var target = event2.target;
        var arrowKey = event2.keyCode === Keys.left || event2.keyCode === Keys.right;
        if (!arrowKey || event2.defaultPrevented || _this3.buttons.findIndex(function(b) {
          return b === target;
        }) === -1) {
          return;
        }
        var focusedIndex = _this3.focusedIndex;
        if (event2.keyCode === Keys.left) {
          _this3.focusButton(focusedIndex, focusedIndex - 1);
        } else {
          _this3.focusButton(focusedIndex, focusedIndex + 1);
        }
      };
      _this3.onWindowResize = function(event2) {
        var element6 = _this3.element;
        if (!element6) {
          return;
        }
        var offsetWidth = element6.offsetWidth;
        var offsetHeight = element6.offsetHeight;
        if (_this3.offsetWidth !== offsetWidth || _this3.offsetHeight !== offsetHeight) {
          _this3.offsetWidth = offsetWidth;
          _this3.offsetHeight = offsetHeight;
          var newSizes = { offsetWidth: _this3.offsetWidth, offsetHeight: _this3.offsetHeight };
          if (_this3.props.onResize) {
            _this3.props.onResize.call(void 0, __assign16(__assign16({ target: _this3 }, newSizes), { nativeEvent: event2 }));
          }
        }
      };
      validatePackage2(packageMetadata2);
      return _this3;
    }
    Object.defineProperty(Toolbar2.prototype, "selectors", {
      get: function() {
        return this.props.buttons || toolbarButtons;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Toolbar2.prototype, "focusedIndex", {
      get: function() {
        var focused = this.element && this.element.querySelector(this.focusedSelector);
        return Math.max(0, this.buttons.findIndex(function(e) {
          return e === focused;
        }));
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Toolbar2.prototype, "element", {
      /**
       * Returns the HTML element of the Toolbar component.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Toolbar2.prototype.componentDidMount = function() {
      window.addEventListener("resize", this.onWindowResize);
      var element6 = this.element;
      if (element6) {
        this.offsetWidth = element6.offsetWidth;
        this.offsetHeight = element6.offsetHeight;
        if (this.props.keyboardNavigation !== false) {
          this.buttons = Array.from(element6.querySelectorAll(this.selectors.join(",")));
          this.setTabIndex(0);
        }
      }
    };
    Toolbar2.prototype.componentDidUpdate = function() {
      var element6 = this.element;
      if (!element6 || this.props.keyboardNavigation === false) {
        return;
      }
      this.buttons = Array.from(element6.querySelectorAll(this.selectors.join(",")));
      this.setTabIndex(this.focusedIndex);
    };
    Toolbar2.prototype.componentWillUnmount = function() {
      window.removeEventListener("resize", this.onWindowResize);
      this.buttons.length = 0;
    };
    Toolbar2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      return React36.createElement("div", { id: this.props.id, "aria-label": this.props.ariaLabel, className: classNames("k-toolbar", (_a14 = {}, _a14["k-toolbar-".concat(kendoThemeMaps.sizeMap[this.props.size] || this.props.size)] = this.props.size, _a14), this.props.className), style: this.props.style, role: this.props.role !== void 0 ? this.props.role || void 0 : "toolbar", dir: this.props.dir, ref: function(element6) {
        return _this3.i = element6;
      }, onKeyDown: this.props.keyboardNavigation !== false ? this.onKeyDown : void 0 }, this.props.children);
    };
    Toolbar2.prototype.focusButton = function(prevIndex, index) {
      var _a14 = this.props.tabIndex, tabIndex = _a14 === void 0 ? Toolbar2.defaultProps.tabIndex : _a14;
      var button = this.buttons[index];
      if (button) {
        button.tabIndex = tabIndex;
        button.focus();
        var prevButton = this.buttons[prevIndex];
        if (prevButton) {
          prevButton.tabIndex = -1;
        }
      }
    };
    Toolbar2.propTypes = {
      tabIndex: PropTypes11.number,
      dir: PropTypes11.string,
      keyboardNavigation: PropTypes11.bool,
      style: PropTypes11.object,
      className: PropTypes11.string,
      role: PropTypes11.string,
      onResize: PropTypes11.func,
      buttons: PropTypes11.arrayOf(PropTypes11.string),
      size: PropTypes11.oneOf([null, "small", "medium", "large"])
    };
    Toolbar2.defaultProps = {
      tabIndex: 0,
      size: "medium"
    };
    return Toolbar2;
  }(React36.Component)
);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarItem.js
var React37 = __toESM(require_react());
var PropTypes12 = __toESM(require_prop_types());
var __extends10 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ToolbarItem = (
  /** @class */
  function(_super) {
    __extends10(ToolbarItem2, _super);
    function ToolbarItem2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.i = null;
      return _this3;
    }
    Object.defineProperty(ToolbarItem2.prototype, "element", {
      /**
       * Returns the HTML element of the ToolbarItem component.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    ToolbarItem2.prototype.render = function() {
      var _this3 = this;
      return React37.createElement("div", { id: this.props.id, className: classNames("k-toolbar-item", this.props.className), style: this.props.style, ref: function(e) {
        return _this3.i = e;
      } }, this.props.children);
    };
    ToolbarItem2.propTypes = {
      className: PropTypes12.string
    };
    return ToolbarItem2;
  }(React37.PureComponent)
);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarSeparator.js
var React38 = __toESM(require_react());
var __extends11 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ToolbarSeparator = (
  /** @class */
  function(_super) {
    __extends11(ToolbarSeparator2, _super);
    function ToolbarSeparator2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ToolbarSeparator2.prototype.render = function() {
      return React38.createElement("div", { className: classNames("k-separator", this.props.className) });
    };
    return ToolbarSeparator2;
  }(React38.PureComponent)
);

// node_modules/@progress/kendo-react-buttons/dist/es/toolbar/tools/ToolbarSpacer.js
var React39 = __toESM(require_react());
var PropTypes13 = __toESM(require_prop_types());
var ToolbarSpacer = React39.forwardRef(function(props, ref) {
  var element6 = React39.useRef(null);
  var spacer = React39.useRef(null);
  React39.useImperativeHandle(spacer, function() {
    return { element: element6.current };
  });
  React39.useImperativeHandle(ref, function() {
    return { element: element6.current };
  });
  var className = React39.useMemo(function() {
    return classNames("k-spacer", props.className);
  }, [props.className]);
  return React39.createElement("span", { ref: element6, className });
});
ToolbarSpacer.displayName = "KendoReactToolbarSpacer";
ToolbarSpacer.propTypes = {
  className: PropTypes13.string
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/selection-reducer.js
var __spreadArray5 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var SELECTION_TYPE;
(function(SELECTION_TYPE2) {
  SELECTION_TYPE2["single"] = "single";
  SELECTION_TYPE2["multiple"] = "multiple";
  SELECTION_TYPE2["none"] = "none";
})(SELECTION_TYPE || (SELECTION_TYPE = {}));
var SELECTION_ACTION;
(function(SELECTION_ACTION2) {
  SELECTION_ACTION2["toggle"] = "toggle";
  SELECTION_ACTION2["remove"] = "remove";
})(SELECTION_ACTION || (SELECTION_ACTION = {}));
var selectionReducer = function(state, action) {
  switch (action.selection) {
    case SELECTION_TYPE.single:
      switch (action.type) {
        case SELECTION_ACTION.toggle: {
          if (!Array.isArray(state) || state === null) {
            return action.payload === state ? null : action.payload;
          }
          throw new Error("State cannot be an array in single selection");
        }
        case SELECTION_ACTION.remove: {
          return action.payload === state ? null : state;
        }
        default:
          return state;
      }
    case SELECTION_TYPE.multiple:
      switch (action.type) {
        case SELECTION_ACTION.toggle: {
          if (Array.isArray(state)) {
            return state.some(function(i) {
              return i === action.payload;
            }) ? state.filter(function(i) {
              return i !== action.payload;
            }) : __spreadArray5(__spreadArray5([], state, true), [action.payload], false);
          }
          if (state === null) {
            return [action.payload];
          }
          throw new Error("State cannot be non-array in multiple selection");
        }
        case SELECTION_ACTION.remove: {
          if (Array.isArray(state)) {
            return state.some(function(i) {
              return i === action.payload;
            }) ? state.filter(function(i) {
              return i !== action.payload;
            }) : __spreadArray5(__spreadArray5([], state, true), [action.payload], false);
          }
          return state;
        }
        default:
          return state;
      }
    case SELECTION_TYPE.none:
      return null;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/focus-reducer.js
var FOCUS_ACTION;
(function(FOCUS_ACTION2) {
  FOCUS_ACTION2["next"] = "next";
  FOCUS_ACTION2["prev"] = "prev";
  FOCUS_ACTION2["current"] = "current";
  FOCUS_ACTION2["reset"] = "reset";
})(FOCUS_ACTION || (FOCUS_ACTION = {}));
var focusReducer = function(state, action) {
  var currentIndex = action.items.findIndex(function(i) {
    return i === state;
  });
  switch (action.type) {
    case FOCUS_ACTION.next:
      return currentIndex === action.items.length - 1 ? state : action.items[currentIndex + 1];
    case FOCUS_ACTION.prev:
      return currentIndex === 0 ? state : action.items[currentIndex - 1];
    case FOCUS_ACTION.current:
      return action.payload;
    case FOCUS_ACTION.reset:
      return null;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/data-reducer.js
var CHIP_DATA_ACTION;
(function(CHIP_DATA_ACTION2) {
  CHIP_DATA_ACTION2["remove"] = "remove";
  CHIP_DATA_ACTION2["add"] = "add";
  CHIP_DATA_ACTION2["reorder"] = "reorder";
})(CHIP_DATA_ACTION || (CHIP_DATA_ACTION = {}));
var dataReducer = function(state, action) {
  switch (action.type) {
    case CHIP_DATA_ACTION.add:
      break;
    case CHIP_DATA_ACTION.remove:
      return state.filter(function(i) {
        return i[action.valueField] !== action.payload;
      });
    case CHIP_DATA_ACTION.reorder:
      break;
    default:
      return state;
  }
};

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/ChipList.js
var React40 = __toESM(require_react());
var PropTypes14 = __toESM(require_prop_types());
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
var ChipListSelectionContext = React40.createContext([null, function(_args) {
}]);
var ChipListFocusContext = React40.createContext([null, function(_args) {
}]);
var ChipListDataContext = React40.createContext([null, function(_args) {
}]);
var useSelection = function(defaultValue2, args, callback) {
  var _a14 = React40.useState(defaultValue2), state = _a14[0], setState = _a14[1];
  var handleDispatchSelection = function(action) {
    var newState = selectionReducer(args.state || state, __assign17(__assign17({}, action), args));
    if (callback) {
      callback(newState, action.event);
    }
    setState(newState);
  };
  return [state, handleDispatchSelection];
};
var useFocus = function(args) {
  var _a14 = React40.useState(null), state = _a14[0], setState = _a14[1];
  var handleDispatchFocus = function(action) {
    var newState = focusReducer(action.payload, __assign17(__assign17({}, action), args));
    setState(newState);
  };
  return [state, handleDispatchFocus];
};
var useData = function(defaultData3, args, callback) {
  var _a14 = React40.useState(defaultData3), state = _a14[0], setState = _a14[1];
  var handleDispatchData = function(action) {
    var newState = dataReducer(args.state || state, __assign17(__assign17({}, action), args));
    if (callback) {
      callback(newState, action.event);
    }
    setState(newState);
  };
  return [state, handleDispatchData];
};
var ChipList = React40.forwardRef(function(props, ref) {
  var _a14;
  validatePackage2(packageMetadata2);
  var target = React40.useRef(null);
  var chipListRef = React40.useRef(null);
  var dir = useDir(chipListRef, props.dir);
  var chip = props.chip, id = props.id, style = props.style, tabIndex = props.tabIndex, disabled = props.disabled, size = props.size, className = props.className, ariaDescribedBy = props.ariaDescribedBy, ariaLabelledBy = props.ariaLabelledBy, _b3 = props.selection, selection = _b3 === void 0 ? defaultProps3.selection : _b3, _c2 = props.value, value2 = _c2 === void 0 ? defaultProps3.defaultValue : _c2, _d = props.defaultData, defaultData3 = _d === void 0 ? defaultProps3.defaultData : _d, _e = props.valueField, valueField = _e === void 0 ? defaultProps3.valueField : _e, _f = props.textField, textField = _f === void 0 ? defaultProps3.textField : _f, onChange = props.onChange, onDataChange = props.onDataChange;
  var ChipComponent = React40.useMemo(function() {
    return chip || Chip;
  }, [chip, Chip]);
  React40.useImperativeHandle(target, function() {
    return {
      element: chipListRef.current,
      props
    };
  });
  React40.useImperativeHandle(ref, function() {
    return target.current;
  });
  var handleChange = React40.useCallback(function(newValue, event2) {
    if (onChange && target.current) {
      onChange.call(void 0, {
        value: newValue,
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [onChange]);
  var _g = useSelection(value2, {
    selection,
    state: value2
  }, handleChange), stateValue = _g[0], dispatchStateValue = _g[1];
  var handleDataChange = React40.useCallback(function(newData, event2) {
    if (onDataChange && target.current) {
      onDataChange.call(void 0, {
        value: newData,
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [onDataChange]);
  var _h = useData(props.data || defaultData3, {
    state: props.data,
    valueField
  }, handleDataChange), stateData = _h[0], dispatchData = _h[1];
  var itemsReducer = React40.useCallback(function(acc, current) {
    acc.push(current[valueField]);
    return acc;
  }, [valueField]);
  var data2 = React40.useMemo(function() {
    return props.data || stateData;
  }, [props.data, stateData]);
  var chipValue = React40.useMemo(function() {
    return value2 || stateValue;
  }, [value2, stateValue]);
  var items = React40.useMemo(function() {
    return data2.reduce(itemsReducer, []);
  }, [data2, itemsReducer]);
  var valueGetter = React40.useCallback(function(item) {
    return getter(valueField)(item);
  }, [valueField]);
  var textGetter = React40.useCallback(function(item) {
    return getter(textField)(item);
  }, [textField]);
  var _j = useFocus({ items }), focus = _j[0], dispatchFocus = _j[1];
  var mouseProps = useMouse(props, target);
  return React40.createElement(
    ChipListSelectionContext.Provider,
    { value: [chipValue, dispatchStateValue] },
    React40.createElement(
      ChipListFocusContext.Provider,
      { value: [focus, dispatchFocus] },
      React40.createElement(
        ChipListDataContext.Provider,
        { value: [data2, dispatchData] },
        React40.createElement("div", __assign17({ ref: chipListRef }, mouseProps, { role: "listbox", id, dir, style, tabIndex: getTabIndex(tabIndex, disabled, void 0), className: classNames("k-chip-list", (_a14 = {
          "k-rtl": dir === "rtl",
          "k-disabled": disabled
        }, _a14["k-chip-list-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14), className), "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy }), data2.map(function(item, index) {
          return React40.createElement(ChipComponent, { role: "option", dataItem: item, size, key: [valueGetter(item), index].join("-"), text: textGetter(item), value: valueGetter(item) });
        }))
      )
    )
  );
});
var propTypes = {
  id: PropTypes14.string,
  className: PropTypes14.string,
  tabIndex: PropTypes14.number,
  data: PropTypes14.any,
  defaultData: PropTypes14.arrayOf(PropTypes14.any),
  onDataChange: PropTypes14.func,
  value: PropTypes14.oneOfType([PropTypes14.any, PropTypes14.arrayOf(PropTypes14.any)]),
  defaultValue: PropTypes14.oneOfType([PropTypes14.any, PropTypes14.arrayOf(PropTypes14.any)]),
  onChange: PropTypes14.func,
  selection: PropTypes14.oneOf(["single", "none", "multiple"]),
  textField: PropTypes14.string,
  valueField: PropTypes14.string,
  disabled: PropTypes14.bool,
  dir: PropTypes14.oneOf(["ltr", "rtl"]),
  ariaLabelledBy: PropTypes14.string,
  ariaDescribedBy: PropTypes14.string,
  size: PropTypes14.oneOf([null, "small", "medium", "large"])
};
var defaultProps3 = {
  chip: Chip,
  size: "medium",
  disabled: false,
  defaultValue: null,
  defaultData: [],
  dir: "ltr",
  selection: "none",
  textField: "text",
  valueField: "value",
  removable: "removable"
};
ChipList.displayName = "KendoReactChipList";
ChipList.propTypes = propTypes;
ChipList.defaultProps = defaultProps3;

// node_modules/@progress/kendo-react-buttons/dist/es/Chip/Chip.js
var React41 = __toESM(require_react());
var PropTypes15 = __toESM(require_prop_types());
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
var Chip = React41.forwardRef(function(props, ref) {
  var _a14;
  validatePackage2(packageMetadata2);
  var target = React41.useRef(null);
  var chipRef = React41.useRef(null);
  var dir = useDir(chipRef, props.dir);
  React41.useImperativeHandle(target, function() {
    return {
      element: chipRef.current,
      props
    };
  });
  React41.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _b3 = React41.useContext(ChipListSelectionContext), selection = _b3[0], dispatchSelection = _b3[1];
  var _c2 = React41.useContext(ChipListFocusContext), focus = _c2[0], dispatchFocus = _c2[1];
  var _d = React41.useContext(ChipListDataContext), dispatchData = _d[1];
  var selected = React41.useMemo(function() {
    return props.selected || (Array.isArray(selection) ? selection.some(function(i) {
      return i === props.value;
    }) : selection === props.value);
  }, [props.selected, props.value, selection]);
  var focused = React41.useMemo(function() {
    return focus === props.value;
  }, [props.value, focus]);
  React41.useEffect(function() {
    if (focused && chipRef.current) {
      chipRef.current.focus();
    }
  }, [focused]);
  var handleClick = React41.useCallback(function(event2) {
    dispatchSelection({ type: SELECTION_ACTION.toggle, payload: props.value, event: event2 });
  }, [dispatchSelection, props.value]);
  var handleRemove = React41.useCallback(function(event2) {
    if (!props.removable) {
      return;
    }
    dispatchData({ type: CHIP_DATA_ACTION.remove, payload: props.value, event: event2 });
    dispatchFocus({ type: FOCUS_ACTION.reset, payload: props.value, event: event2 });
    dispatchSelection({ type: SELECTION_ACTION.remove, payload: props.value, event: event2 });
    if (props.onRemove) {
      props.onRemove.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [props.onRemove, props.value, props.removable, dispatchData, dispatchFocus, dispatchSelection]);
  var handleKeyDown = React41.useCallback(function(event2) {
    switch (event2.keyCode) {
      case Keys.left:
        dispatchFocus({ type: FOCUS_ACTION.prev, payload: props.value, event: event2 });
        break;
      case Keys.right:
        dispatchFocus({ type: FOCUS_ACTION.next, payload: props.value, event: event2 });
        break;
      case Keys.enter:
        dispatchSelection({ type: SELECTION_ACTION.toggle, payload: props.value, event: event2 });
        break;
      case Keys.delete:
        handleRemove(event2);
        break;
      default:
        break;
    }
    if (props.onKeyDown) {
      props.onKeyDown.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [props.onKeyDown, props.value, dispatchFocus, dispatchSelection, handleRemove]);
  var handleFocus = React41.useCallback(function(event2) {
    dispatchFocus({ payload: props.value, type: FOCUS_ACTION.current, event: event2 });
    if (props.onFocus) {
      props.onFocus.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [props.onFocus, props.value, dispatchFocus]);
  var handleBlur = React41.useCallback(function(event2) {
    if (props.onBlur) {
      props.onBlur.call(void 0, {
        target: target.current,
        syntheticEvent: event2
      });
    }
  }, [props.onBlur]);
  var mouseProps = useMouse(props, target, { onClick: handleClick });
  return React41.createElement(
    "div",
    __assign18({}, mouseProps, { role: props.role, id: props.value, style: props.style, ref: chipRef, dir, tabIndex: getTabIndex(props.tabIndex, props.disabled, void 0), className: classNames("k-chip", (_a14 = {
      "k-rtl": dir === "rtl",
      "k-disabled": props.disabled,
      "k-selected": selected,
      "k-focus": focused
    }, _a14["k-chip-".concat(kendoThemeMaps.sizeMap[props.size] || props.size)] = props.size, _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[props.rounded] || props.rounded)] = props.rounded, _a14["k-chip-".concat(props.fillMode)] = props.fillMode, _a14["k-chip-".concat(props.fillMode, "-").concat(props.themeColor)] = Boolean(props.fillMode && props.themeColor), _a14), props.className), "aria-checked": selected, "aria-disabled": props.disabled, "aria-describedby": props.ariaDescribedBy, onFocus: handleFocus, onBlur: handleBlur, onKeyDown: handleKeyDown }),
    selected && (props.selectedIcon || props.selectedSvgIcon) && React41.createElement(IconWrap, { className: "k-chip-icon", name: props.selectedIcon ? toIconName(props.selectedIcon) : void 0, icon: props.selectedSvgIcon, size: "small" }),
    (props.icon || props.svgIcon) && React41.createElement(IconWrap, { className: "k-chip-icon", name: props.icon ? toIconName(props.icon) : void 0, icon: props.svgIcon, size: "small" }),
    React41.createElement("span", { className: "k-chip-content" }, props.children !== void 0 ? props.children : props.text && React41.createElement("span", { "aria-label": props.text, className: "k-chip-label" }, props.text)),
    props.removable && React41.createElement(
      "span",
      { className: "k-chip-actions" },
      React41.createElement(
        "span",
        { className: classNames("k-chip-action", "k-chip-remove-action"), onClick: handleRemove },
        React41.createElement(IconWrap, { name: props.removeIcon ? toIconName(props.removeIcon) : void 0, icon: props.removeSvgIcon, size: "small" })
      )
    )
  );
});
var propTypes2 = {
  id: PropTypes15.string,
  text: PropTypes15.string,
  value: PropTypes15.any,
  dir: PropTypes15.oneOf(["ltr", "rtl"]),
  removable: PropTypes15.bool,
  removeIcon: PropTypes15.string,
  removeIconSvg: svgIconPropType,
  disabled: PropTypes15.bool,
  icon: PropTypes15.string,
  svgIcon: svgIconPropType,
  selectedIcon: PropTypes15.string,
  selectedIconSvg: svgIconPropType,
  onRemove: PropTypes15.func,
  dataItem: PropTypes15.any,
  selected: PropTypes15.bool,
  ariaDescribedBy: PropTypes15.string,
  size: PropTypes15.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes15.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes15.oneOf([null, "outline", "solid"]),
  // eslint-disable-next-line max-len
  themeColor: PropTypes15.oneOf([null, "base", "info", "success", "warning", "error"])
};
var defaultProps4 = {
  disabled: false,
  removable: false,
  removeIcon: "k-i-x-circle",
  dir: "ltr",
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  themeColor: "base"
};
Chip.displayName = "KendoReactChip";
Chip.propTypes = propTypes2;
Chip.defaultProps = defaultProps4;

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/FloatingActionButtonItem.js
var React42 = __toESM(require_react());
var PropTypes16 = __toESM(require_prop_types());
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
var __rest6 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FloatingActionButtonItem = React42.forwardRef(function(props, ref) {
  var className = props.className, disabled = props.disabled, text = props.text, icon = props.icon, style = props.style, id = props.id, focused = props.focused, tabIndex = props.tabIndex, index = props.index, dataItem = props.dataItem, item = props.item, onDown = props.onDown, onClick = props.onClick, others = __rest6(props, ["className", "disabled", "text", "icon", "style", "id", "focused", "tabIndex", "index", "dataItem", "item", "onDown", "onClick"]);
  var elementRef = React42.useRef(null);
  var focusElement = React42.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React42.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React42.useImperativeHandle(ref, getImperativeHandle);
  var handleClick = React42.useCallback(function(event2) {
    if (onClick && index !== void 0 && !disabled) {
      onClick(event2, index);
    }
  }, [onClick, index]);
  var itemClassNames = React42.useMemo(function() {
    return classNames("k-fab-item", {
      "k-focus": focused,
      "k-disabled": disabled
    }, className);
  }, [className, disabled, focused]);
  var ItemComp = item;
  return React42.createElement("li", __assign19({ ref: elementRef, id, className: itemClassNames, style, role: "menuitem", tabIndex: getTabIndex(tabIndex, disabled), "aria-disabled": disabled, "aria-label": "".concat(text || "", " floatingactionbutton item"), onClick: handleClick, onMouseDown: onDown, onPointerDown: onDown }, others), ItemComp ? React42.createElement(ItemComp, { itemIndex: index, item: dataItem }) : React42.createElement(
    React42.Fragment,
    null,
    text && React42.createElement("span", { className: "k-fab-item-text" }, text),
    icon && React42.createElement("span", { className: classNames("k-fab-item-icon k-icon k-i-".concat(icon)) })
  ));
});
FloatingActionButtonItem.propTypes = {
  className: PropTypes16.string,
  style: PropTypes16.object,
  children: PropTypes16.any,
  disabled: PropTypes16.bool,
  focused: PropTypes16.bool,
  index: PropTypes16.number,
  icon: PropTypes16.string,
  text: PropTypes16.string,
  tabIndex: PropTypes16.number,
  customProp: PropTypes16.any
};
FloatingActionButtonItem.displayName = "KendoFloatingActionButtonItem";

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/utils.js
var DEFAULT_OFFSET2 = "16px";
var toStringValues = function(val) {
  if (typeof val === "number") {
    return val + "px";
  }
  return val;
};
var getAnchorAlign2 = function(fabAlign, rtl) {
  var align3 = { horizontal: rtl ? "right" : "left", vertical: "bottom" };
  if (fabAlign.horizontal === "end") {
    align3.horizontal = rtl ? "left" : "right";
  }
  return align3;
};
var getPopupAlign2 = function(fabAlign, rtl) {
  var align3 = { horizontal: rtl ? "right" : "left", vertical: "top" };
  if (fabAlign.horizontal === "end") {
    align3.horizontal = rtl ? "left" : "right";
  }
  return align3;
};
var getTextDirectionClass = function(rtl, hAlign) {
  var al = hAlign === "end" ? "end" : "start";
  var directions = {
    rtl: { end: "k-text-left", start: "k-text-right" },
    ltr: { start: "k-text-left", end: "k-text-right" }
  };
  return directions[rtl][al];
};
var position3 = function(ref, align3, alignOffset, isRtl) {
  var horizontal = align3.horizontal;
  var vertical = align3.vertical;
  if (ref.current) {
    var xFab = alignOffset && alignOffset.x !== void 0 ? toStringValues(alignOffset.x) : DEFAULT_OFFSET2;
    var xCenterFab = alignOffset && alignOffset.x !== void 0 ? "calc(50% + ".concat(toStringValues(alignOffset.x), ")") : "50%";
    var yFab = alignOffset && alignOffset.y !== void 0 ? toStringValues(alignOffset.y) : DEFAULT_OFFSET2;
    var yCenterFab = alignOffset && alignOffset.y !== void 0 ? "calc(50% + ".concat(toStringValues(alignOffset.y), ")") : "50%";
    ref.current.style.setProperty(horizontalPosition(align3, isRtl), horizontal === "center" ? xCenterFab : xFab);
    ref.current.style.setProperty(verticalPosition(align3), vertical === "middle" ? yCenterFab : yFab);
    if (isRtl) {
      if ((vertical === "top" || vertical === "bottom") && horizontal === "start") {
        ref.current.style.setProperty("left", "unset");
      }
      if (vertical === "middle" && horizontal === "end") {
        ref.current.style.setProperty("right", "unset");
      }
      if (vertical === "middle" && horizontal === "start") {
        ref.current.style.setProperty("left", "unset");
      }
    }
  }
};
var horizontalPosition = function(align3, isRtl) {
  var horizontal = align3.horizontal;
  return {
    end: isRtl ? "left" : "right",
    center: "left",
    start: isRtl ? "right" : "left"
  }[horizontal || "end"];
};
var verticalPosition = function(align3) {
  return {
    top: "top",
    middle: "top",
    bottom: "bottom"
  }[align3.vertical || "bottom"];
};

// node_modules/@progress/kendo-react-buttons/dist/es/FloatingActionButton/FloatingActionButton.js
var React43 = __toESM(require_react());
var PropTypes17 = __toESM(require_prop_types());
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
var __rest7 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ZINDEX_FAB_STEP = 2;
var DEFAULT_FAB_ZINDEX = 100;
var FloatingActionButton = React43.forwardRef(function(props, ref) {
  validatePackage2(packageMetadata2);
  var _a14 = props.align, align3 = _a14 === void 0 ? defaultProps5.align : _a14, alignOffset = props.alignOffset, className = props.className, disabled = props.disabled, icon = props.icon, svgIcon = props.svgIcon, iconClass = props.iconClass, id = props.id, items = props.items, item = props.item, text = props.text, _b3 = props.positionMode, positionMode = _b3 === void 0 ? defaultProps5.positionMode : _b3, _c2 = props.size, size = _c2 === void 0 ? defaultProps5.size : _c2, style = props.style, _d = props.rounded, rounded = _d === void 0 ? defaultProps5.rounded : _d, _e = props.themeColor, themeColor = _e === void 0 ? defaultProps5.themeColor : _e, overlayStyle = props.overlayStyle, tabIndex = props.tabIndex, accessKey = props.accessKey, _f = props.popupSettings, popupSettings = _f === void 0 ? {} : _f, modal = props.modal, onClick = props.onClick, onItemClick = props.onItemClick, onFocus = props.onFocus, onBlur = props.onBlur, onKeyDown = props.onKeyDown, onOpen = props.onOpen, onClose = props.onClose, others = __rest7(props, ["align", "alignOffset", "className", "disabled", "icon", "svgIcon", "iconClass", "id", "items", "item", "text", "positionMode", "size", "style", "rounded", "themeColor", "overlayStyle", "tabIndex", "accessKey", "popupSettings", "modal", "onClick", "onItemClick", "onFocus", "onBlur", "onKeyDown", "onOpen", "onClose"]);
  var zIndexContext = useZIndexContext();
  var currentZIndex = zIndexContext ? zIndexContext + ZINDEX_FAB_STEP : DEFAULT_FAB_ZINDEX;
  var target = React43.useRef(null);
  var elementRef = React43.useRef(null);
  var listRef = React43.useRef(null);
  var popupRef = React43.useRef(null);
  var focusElement = React43.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React43.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React43.useImperativeHandle(target, getImperativeHandle);
  React43.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _g = React43.useState(false), open = _g[0], setOpen = _g[1];
  var _h = React43.useState(false), focused = _h[0], setFocused = _h[1];
  var _j = React43.useState(-1), focusedIndex = _j[0], setFocusedIndex = _j[1];
  var buttonId = React43.useMemo(function() {
    return guid();
  }, []);
  var dir = useDir(elementRef, props.dir);
  var isRtl = dir === "rtl";
  var listId = React43.useMemo(function() {
    return guid();
  }, []);
  React43.useEffect(function() {
    position3(elementRef, align3, alignOffset, isRtl);
  }, [elementRef, align3, alignOffset, isRtl]);
  React43.useEffect(function() {
    if (focused && elementRef && elementRef.current) {
      elementRef.current.focus();
    }
  }, [focused, elementRef]);
  var dispatchPopupEvent = React43.useCallback(function(dispatchedEvent, isOpen) {
    if (!items) {
      return;
    }
    dispatchEvent(isOpen ? onOpen : onClose, dispatchedEvent, getImperativeHandle(), void 0);
  }, [onOpen, onClose, items]);
  var handleClick = React43.useCallback(function(event2) {
    if (!event2.target || disabled) {
      return;
    }
    if (!items && onClick) {
      dispatchEvent(onClick, event2, getImperativeHandle(), void 0);
    } else {
      setOpen(!open);
      setFocused(true);
      setFocusedIndex(!open ? 0 : -1);
      dispatchPopupEvent(event2, !open);
    }
  }, [
    setOpen,
    setFocused,
    setFocusedIndex,
    onClick,
    dispatchPopupEvent,
    open,
    items,
    disabled
  ]);
  var handleFocus = React43.useCallback(function(event2) {
    setFocused(true);
    setFocusedIndex(open ? 0 : -1);
    if (onFocus) {
      dispatchEvent(onFocus, event2, getImperativeHandle(), void 0);
    }
  }, [onFocus, setFocused, setFocusedIndex]);
  var handleBlur = React43.useCallback(function(event2) {
    setFocused(false);
    setOpen(false);
    setFocusedIndex(-1);
    dispatchEvent(onBlur, event2, getImperativeHandle(), void 0);
    var fireCloseEvent = open;
    if (fireCloseEvent) {
      dispatchPopupEvent(event2, false);
    }
  }, [onBlur, setFocused, setOpen, setFocusedIndex, dispatchPopupEvent]);
  var handleMouseDown = React43.useCallback(function(event2) {
    event2.preventDefault();
  }, []);
  var dispatchItemClickEvent = React43.useCallback(function(dispatchedEvent, index) {
    if (!items) {
      return;
    }
    if (!items[index].disabled) {
      dispatchEvent(onItemClick, dispatchedEvent, getImperativeHandle(), {
        itemProps: items[index],
        itemIndex: index
      });
    }
  }, [onItemClick]);
  var handleItemClick = React43.useCallback(function(event2, clickedItemIndex) {
    if (!event2.target || !items) {
      return;
    }
    setFocusedIndex(clickedItemIndex);
    setOpen(false);
    dispatchItemClickEvent(event2, clickedItemIndex);
    dispatchPopupEvent(event2, false);
  }, [setFocusedIndex, setOpen, dispatchItemClickEvent, dispatchPopupEvent]);
  var handleItemDown = React43.useCallback(function(event2) {
    var activeElement = getActiveElement(document);
    if (activeElement === elementRef.current) {
      event2.preventDefault();
    }
  }, [elementRef]);
  var handleKeyDown = React43.useCallback(function(event2) {
    var currIndex = focusedIndex;
    var maxNavIndex = items ? items.length - 1 : -1;
    var isAtBottom = align3.vertical === "bottom";
    switch (event2.keyCode) {
      case Keys.enter:
      case Keys.space:
        if (currIndex >= 0) {
          dispatchItemClickEvent(event2, currIndex);
        }
        event2.preventDefault();
        setOpen(!open);
        setFocusedIndex(!open ? 0 : -1);
        break;
      case Keys.esc:
        event2.preventDefault();
        setOpen(false);
        setFocusedIndex(-1);
        break;
      case Keys.home:
        event2.preventDefault();
        setFocusedIndex(0);
        break;
      case Keys.end:
        event2.preventDefault();
        setFocusedIndex(maxNavIndex);
        break;
      case Keys.down:
      case Keys.right:
        event2.preventDefault();
        if (currIndex < maxNavIndex && !isAtBottom) {
          setFocusedIndex(currIndex + 1);
        }
        if (currIndex > 0 && isAtBottom) {
          setFocusedIndex(currIndex - 1);
        }
        break;
      case Keys.up:
      case Keys.left:
        event2.preventDefault();
        if (currIndex > 0 && !isAtBottom) {
          setFocusedIndex(currIndex - 1);
        }
        if (currIndex < maxNavIndex && isAtBottom) {
          setFocusedIndex(currIndex + 1);
        }
        break;
      default:
        break;
    }
    dispatchEvent(onKeyDown, event2, getImperativeHandle(), void 0);
  }, [onKeyDown, focusedIndex, setFocusedIndex, isRtl, setOpen]);
  var buttonClassNames = React43.useMemo(function() {
    var _a15;
    return classNames("k-fab k-fab-solid", (_a15 = {
      "k-fab-sm": size === "small",
      "k-fab-md": size === "medium",
      "k-fab-lg": size === "large",
      "k-disabled": disabled,
      "k-pos-absolute": positionMode === "absolute",
      "k-pos-fixed": positionMode === "fixed",
      "k-focus": focused
    }, _a15["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a15["k-fab-solid-".concat(themeColor)] = themeColor, _a15), "k-".concat(align3.vertical, "-").concat(align3.horizontal), className);
  }, [themeColor, size, rounded, disabled, positionMode, align3, focused, className]);
  var fabItems = items && items.map(function(element6, index) {
    return React43.createElement(FloatingActionButtonItem, __assign20({}, element6, { key: index, index, id: "".concat(listId, "-").concat(index), disabled: disabled || element6.disabled, focused: focusedIndex === index, dataItem: element6, item, className: classNames(element6.className, getTextDirectionClass(dir || "ltr", align3.horizontal)), onClick: handleItemClick, onDown: handleItemDown }));
  });
  var isIconFab = Boolean((icon || svgIcon) && !text);
  var fabWidth = elementRef.current ? elementRef.current.offsetWidth : 0;
  var iconWidth = 32;
  var spacing = fabWidth / 2 - iconWidth / 2;
  return React43.createElement(
    ZIndexContext.Provider,
    { value: currentZIndex },
    React43.createElement(
      React43.Fragment,
      null,
      React43.createElement(
        "button",
        __assign20({ ref: elementRef, id: id || buttonId, role: items ? "menubutton" : "button", type: "button", "aria-disabled": disabled, "aria-expanded": items ? open : void 0, "aria-haspopup": items ? true : false, "aria-label": "".concat(text || "", " floatingactionbutton"), "aria-owns": items ? listId : void 0, "aria-activedescendant": focusedIndex >= 0 && items ? "".concat(listId, "-").concat(focusedIndex) : void 0, tabIndex: getTabIndex(tabIndex, disabled), accessKey, dir, disabled, className: buttonClassNames, style, onClick: handleClick, onMouseDown: handleMouseDown, onFocus: handleFocus, onBlur: handleBlur, onKeyDown: handleKeyDown }, others),
        icon || svgIcon ? React43.createElement(IconWrap, { className: "k-fab-icon", name: icon, icon: svgIcon }) : iconClass ? React43.createElement("span", { role: "presentation", className: iconClass }) : null,
        text && React43.createElement("span", { className: "k-fab-text" }, text)
      ),
      modal && open && React43.createElement("div", { className: "k-overlay", style: __assign20({ zIndex: currentZIndex }, overlayStyle) }),
      React43.createElement(
        Popup,
        { ref: popupRef, anchor: elementRef.current, show: open, animate: popupSettings.animate, popupClass: classNames("k-popup-transparent k-fab-popup", popupSettings.popupClass), anchorAlign: popupSettings.anchorAlign || getAnchorAlign2(align3, isRtl), popupAlign: popupSettings.popupAlign || getPopupAlign2(align3, isRtl), style: { boxShadow: "none" } },
        React43.createElement("ul", { ref: listRef, role: "menu", "aria-labelledby": id, id: listId, className: classNames("k-fab-items", {
          "k-fab-items-bottom": align3.vertical !== "bottom",
          "k-fab-items-top": align3.vertical === "bottom"
        }), style: {
          paddingLeft: isIconFab ? spacing : void 0,
          paddingRight: isIconFab ? spacing : void 0
        } }, fabItems)
      )
    )
  );
});
FloatingActionButton.propTypes = {
  className: PropTypes17.string,
  style: PropTypes17.object,
  id: PropTypes17.string,
  dir: PropTypes17.string,
  tabIndex: PropTypes17.number,
  accessKey: PropTypes17.string,
  disabled: PropTypes17.bool,
  icon: PropTypes17.string,
  svgIcon: svgIconPropType,
  iconClass: PropTypes17.string,
  text: PropTypes17.string,
  alignOffset: PropTypes17.shape({
    x: PropTypes17.oneOfType([PropTypes17.number, PropTypes17.string]),
    y: PropTypes17.oneOfType([PropTypes17.number, PropTypes17.string])
  }),
  align: PropTypes17.shape({
    vertical: PropTypes17.oneOf(["top", "middle", "bottom"]),
    horizontal: PropTypes17.oneOf(["start", "center", "end"])
  }),
  positionMode: PropTypes17.oneOf(["absolute", "fixed"]),
  size: PropTypes17.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes17.oneOf([null, "small", "medium", "large", "full"]),
  themeColor: PropTypes17.oneOf([
    null,
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  modal: PropTypes17.bool,
  overlayStyle: PropTypes17.object
};
var defaultProps5 = {
  align: { vertical: "bottom", horizontal: "end" },
  size: "medium",
  rounded: "full",
  themeColor: "primary",
  positionMode: "fixed"
};
FloatingActionButton.displayName = "KendoFloatingActionButton";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/SchedulerHeader.js
var React44 = __toESM(require_react());
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
var __rest8 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerHeader = React44.forwardRef(function(props, ref) {
  var className = props.className, other = __rest8(props, ["className"]);
  var element6 = React44.useRef(null);
  var header = React44.useRef(null);
  React44.useImperativeHandle(header, function() {
    return { element: element6.current, props };
  });
  React44.useImperativeHandle(ref, function() {
    return header.current;
  });
  var rootClassName = React44.useMemo(function() {
    return classNames("k-scheduler-toolbar", className);
  }, [className]);
  return React44.createElement(Toolbar, __assign21({ id: props.id, ref: function(toolbar) {
    if (toolbar) {
      element6.current = toolbar.element;
    }
  }, className: rootClassName }, other), props.children);
});
SchedulerHeader.displayName = "KendoReactSchedulerHeader";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/navigation/SchedulerNavigation.js
var React45 = __toESM(require_react());
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
var __rest9 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerNavigation = React45.forwardRef(function(props, ref) {
  var className = props.className, other = __rest9(props, ["className"]);
  var element6 = React45.useRef(null);
  React45.useImperativeHandle(ref, function() {
    return { element: element6.current, props };
  });
  return React45.createElement(ToolbarItem, __assign22({ ref: function(item) {
    if (item) {
      element6.current = item.element;
    }
  }, className: classNames(className) }, other), props.children);
});
SchedulerNavigation.displayName = "KendoReactSchedulerSchedulerNavigation";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/view-selector/SchedulerViewSelector.js
var React46 = __toESM(require_react());
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
var __rest10 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerViewSelector = React46.forwardRef(function(props, ref) {
  var className = props.className, other = __rest10(props, ["className"]);
  var element6 = React46.useRef(null);
  React46.useImperativeHandle(ref, function() {
    return { element: element6.current, props };
  });
  return React46.createElement(ToolbarItem, __assign23({ ref: function(item) {
    if (item) {
      element6.current = item.element;
    }
  }, className: classNames("k-scheduler-views", className) }, other), props.children);
});
SchedulerViewSelector.displayName = "KendoReactSchedulerViewSelector";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/footer/SchedulerFooter.js
var React47 = __toESM(require_react());
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
var __rest11 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerFooter = React47.forwardRef(function(props, ref) {
  var className = props.className, style = props.style, other = __rest11(props, ["className", "style"]);
  var footer = React47.useRef(null);
  var element6 = React47.useRef(null);
  React47.useImperativeHandle(footer, function() {
    return { element: element6.current, props };
  });
  React47.useImperativeHandle(ref, function() {
    return footer.current;
  });
  var rootClassName = React47.useMemo(function() {
    return classNames("k-scheduler-footer", props.className);
  }, [props.className]);
  return React47.createElement(Toolbar, __assign24({ ref: function(toolbar) {
    if (toolbar) {
      element6.current = toolbar.element;
    }
  }, className: rootClassName, style: __assign24({ boxShadow: "none" }, style) }, other), props.children);
});

// node_modules/@progress/kendo-react-scheduler/dist/es/messages/index.js
var _a;
var allEvents = "scheduler.allEvents";
var allDay = "scheduler.allDay";
var today = "scheduler.today";
var timelineViewTitle = "scheduler.timelineViewTitle";
var weekViewTitle = "scheduler.weekViewTitle";
var workWeekViewTitle = "scheduler.workWeekViewTitle";
var agendaViewTitle = "scheduler.agendaViewTitle";
var dayViewTitle = "scheduler.dayViewTitle";
var monthViewTitle = "scheduler.monthViewTitle";
var deleteTitle = "scheduler.deleteTitle";
var previousTitle = "scheduler.previousTitle";
var nextTitle = "scheduler.nextTitle";
var showFullDay = "scheduler.showFullDay";
var showWorkDay = "scheduler.showWorkDay";
var editorOccurrence = "scheduler.editOccurrence";
var editorSeries = "scheduler.editSeries";
var editorRecurringConfirmation = "scheduler.editRecurringConfirmation";
var editorRecurringDialogTitle = "scheduler.editRecurringDialogTitle";
var editorSave = "scheduler.editSave";
var editorCancel = "scheduler.editCancel";
var editorTitle = "scheduler.editorTitle";
var editorEventTitle = "scheduler.editorEventTitle";
var editorEventStart = "scheduler.editorEventStart";
var editorEventStartTimeZone = "scheduler.editorEventStartTimeZone";
var editorEventEnd = "scheduler.editorEventEnd";
var editorEventEndTimeZone = "scheduler.editorEventEndTimeZone";
var editorEventAllDay = "scheduler.editorEventAllDay";
var editorEventDescription = "scheduler.editorEventDescription";
var editorEventSeparateTimeZones = "scheduler.editorEventSeparateTimeZones";
var editorEventTimeZone = "scheduler.editorEventTimeZone";
var recurrenceEditorRepeat = "scheduler.recurrenceEditorRepeat";
var recurrenceEditorDailyInterval = "scheduler.recurrenceEditorDailyInterval";
var recurrenceEditorDailyRepeatEvery = "scheduler.recurrenceEditorDailyRepeatEvery";
var recurrenceEditorWeeklyInterval = "scheduler.recurrenceEditorWeeklyInterval";
var recurrenceEditorWeeklyRepeatEvery = "scheduler.recurrenceEditorWeeklyRepeatEvery";
var recurrenceEditorWeeklyRepeatOn = "scheduler.recurrenceEditorWeeklyRepeatOn";
var recurrenceEditorMonthlyDay = "scheduler.recurrenceEditorMonthlyDay";
var recurrenceEditorMonthlyInterval = "scheduler.recurrenceEditorMonthlyInterval";
var recurrenceEditorMonthlyRepeatEvery = "scheduler.recurrenceEditorMonthlyRepeatEvery";
var recurrenceEditorMonthlyRepeatOn = "scheduler.recurrenceEditorMonthlyRepeatOn";
var recurrenceEditorYearlyOf = "scheduler.recurrenceEditorYearlyOf";
var recurrenceEditorYearlyRepeatEvery = "scheduler.recurrenceEditorYearlyRepeatEvery";
var recurrenceEditorYearlyRepeatOn = "scheduler.recurrenceEditorYearlyRepeatOn";
var recurrenceEditorYearlyInterval = "scheduler.recurrenceEditorYearlyInterval";
var recurrenceEditorFrequenciesDaily = "scheduler.recurrenceEditorFrequenciesDaily";
var recurrenceEditorFrequenciesMonthly = "scheduler.recurrenceEditorFrequenciesMonthly";
var recurrenceEditorFrequenciesNever = "scheduler.recurrenceEditorFrequenciesNever";
var recurrenceEditorFrequenciesWeekly = "scheduler.recurrenceEditorFrequenciesWeekly";
var recurrenceEditorFrequenciesYearly = "scheduler.recurrenceEditorFrequenciesYearly";
var recurrenceEditorOffsetPositionsFirst = "scheduler.recurrenceEditorOffsetPositionsFirst";
var recurrenceEditorOffsetPositionsSecond = "scheduler.recurrenceEditorOffsetPositionsSecond";
var recurrenceEditorOffsetPositionsThird = "scheduler.recurrenceEditorOffsetPositionsThird";
var recurrenceEditorOffsetPositionsFourth = "scheduler.recurrenceEditorOffsetPositionsFourth";
var recurrenceEditorOffsetPositionsLast = "scheduler.recurrenceEditorOffsetPositionsLast";
var recurrenceEditorWeekdaysDay = "scheduler.recurrenceEditorWeekdaysDay";
var recurrenceEditorWeekdaysWeekday = "scheduler.recurrenceEditorWeekdaysWeekday";
var recurrenceEditorWeekdaysWeekendday = "scheduler.recurrenceEditorWeekdaysWeekendday";
var recurrenceEditorEndAfter = "scheduler.recurrenceEditorEndAfter";
var recurrenceEditorEndOccurrence = "scheduler.recurrenceEditorEndOccurrence";
var recurrenceEditorEndLabel = "scheduler.recurrenceEditorEndLabel";
var recurrenceEditorEndNever = "scheduler.recurrenceEditorEndNever";
var recurrenceEditorEndOn = "scheduler.recurrenceEditorEndOn";
var editorDelete = "scheduler.editorDelete";
var deleteConfirmation = "scheduler.deleteConfirmation";
var deleteRecurringConfirmation = "scheduler.deleteRecurringConfirmation";
var deleteOccurrence = "scheduler.deleteOccurrence";
var deleteSeries = "scheduler.deleteSeries";
var deleteDialogTitle = "scheduler.deleteDialogTitle";
var deleteRecurringDialogTitle = "scheduler.deleteRecurringDialogTitle";
var dateTitle = "scheduler.dateTitle";
var timeTitle = "scheduler.timeTitle";
var eventTitle = "scheduler.eventTitle";
var editorValidationRequired = "scheduler.editorValidationRequired";
var editorValidationStart = "scheduler.editorValidationStart";
var editorValidationEnd = "scheduler.editorValidationEnd";
var noEvents = "scheduler.noEvents";
var moreEvents = "scheduler.moreEvents";
var messages2 = (_a = {}, _a[editorValidationRequired] = "Field is required.", _a[editorValidationStart] = "Start time must be before End time.", _a[editorValidationEnd] = "End time must be after Start time.", _a[allEvents] = "All events", _a[allDay] = "all day", _a[today] = "Today", _a[dayViewTitle] = "Day", _a[monthViewTitle] = "Month", _a[weekViewTitle] = "Week", _a[workWeekViewTitle] = "Work Week", _a[timelineViewTitle] = "Timeline", _a[agendaViewTitle] = "Agenda", _a[deleteTitle] = "Delete", _a[previousTitle] = "Previous", _a[nextTitle] = "Next", _a[showFullDay] = "Show full day", _a[showWorkDay] = "Show business hours", _a[editorOccurrence] = "Edit current occurrence", _a[editorSeries] = "Edit the series", _a[editorRecurringConfirmation] = "Do you want to edit only this event occurrence or the whole series?", _a[editorRecurringDialogTitle] = "Edit Recurring Item", _a[editorSave] = "Save", _a[editorCancel] = "Cancel", _a[editorDelete] = "Delete", _a[editorTitle] = "Event", _a[editorEventTitle] = "Title", _a[editorEventStart] = "Start", _a[editorEventStartTimeZone] = "Start Time Zone", _a[editorEventEnd] = "End", _a[editorEventEndTimeZone] = "End Time Zone", _a[editorEventAllDay] = "All Day Event", _a[editorEventDescription] = "Description", _a[editorEventSeparateTimeZones] = "End in different Time Zone", _a[editorEventTimeZone] = "Specify Time Zone", _a[recurrenceEditorRepeat] = "Repeat", _a[recurrenceEditorDailyInterval] = "day(s)", _a[recurrenceEditorDailyRepeatEvery] = "Repeat every", _a[recurrenceEditorWeeklyInterval] = "week(s)", _a[recurrenceEditorWeeklyRepeatEvery] = "Repeat every", _a[recurrenceEditorWeeklyRepeatOn] = "Repeat on", _a[recurrenceEditorMonthlyDay] = "Day", _a[recurrenceEditorMonthlyInterval] = "month(s)", _a[recurrenceEditorMonthlyRepeatEvery] = "Repeat every", _a[recurrenceEditorMonthlyRepeatOn] = "Repeat on", _a[recurrenceEditorYearlyOf] = "of", _a[recurrenceEditorYearlyRepeatEvery] = "Repeat every", _a[recurrenceEditorYearlyRepeatOn] = "Repeat on", _a[recurrenceEditorYearlyInterval] = "year(s)", _a[recurrenceEditorFrequenciesDaily] = "Daily", _a[recurrenceEditorFrequenciesMonthly] = "Monthly", _a[recurrenceEditorFrequenciesNever] = "Never", _a[recurrenceEditorFrequenciesWeekly] = "Weekly", _a[recurrenceEditorFrequenciesYearly] = "Yearly", _a[recurrenceEditorOffsetPositionsFirst] = "First", _a[recurrenceEditorOffsetPositionsSecond] = "Second", _a[recurrenceEditorOffsetPositionsThird] = "Third", _a[recurrenceEditorOffsetPositionsFourth] = "Fourth", _a[recurrenceEditorOffsetPositionsLast] = "Last", _a[recurrenceEditorWeekdaysDay] = "Day", _a[recurrenceEditorWeekdaysWeekday] = "Weekday", _a[recurrenceEditorWeekdaysWeekendday] = "Weekend Day", _a[recurrenceEditorEndAfter] = "After", _a[recurrenceEditorEndOccurrence] = "occurrence(s)", _a[recurrenceEditorEndLabel] = "End", _a[recurrenceEditorEndNever] = "Never", _a[recurrenceEditorEndOn] = "On", _a[deleteConfirmation] = "Are you sure you want to delete this event?", _a[deleteRecurringConfirmation] = "Do you want to delete only this event occurrence or the whole series?", _a[deleteOccurrence] = "Delete current occurrence", _a[deleteSeries] = "Delete the series", _a[deleteDialogTitle] = "Delete Event", _a[deleteRecurringDialogTitle] = "Delete Recurring Item", _a[dateTitle] = "Date", _a[timeTitle] = "Time", _a[eventTitle] = "Event", _a[noEvents] = "no events", _a[moreEvents] = "More events", _a);

// node_modules/@progress/kendo-react-dateinputs/dist/es/package-metadata.js
var packageMetadata4 = {
  name: "@progress/kendo-react-dateinputs",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225503,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-dateinputs/dist/es/virtualization/services/RowHeightService.js
var __spreadArray6 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var update = function(arr, idx, value2) {
  return __spreadArray6(__spreadArray6([], arr.slice(0, idx + 1), true), arr.slice(idx + 1).map(function(x) {
    return x + value2;
  }), true);
};
var RowHeightService = (
  /** @class */
  function() {
    function RowHeightService2(total, rowHeight, detailRowHeight) {
      if (total === void 0) {
        total = 0;
      }
      this.total = total;
      this.rowHeight = rowHeight;
      this.detailRowHeight = detailRowHeight;
      this.offsets = [];
      this.heights = [];
      var agg = 0;
      for (var idx = 0; idx < total; idx++) {
        this.offsets.push(agg);
        agg += rowHeight;
        this.heights.push(rowHeight);
      }
    }
    RowHeightService2.prototype.height = function(rowIndex) {
      return this.heights[rowIndex];
    };
    RowHeightService2.prototype.expandDetail = function(rowIndex) {
      if (this.height(rowIndex) === this.rowHeight) {
        this.updateRowHeight(rowIndex, this.detailRowHeight);
      }
    };
    RowHeightService2.prototype.collapseDetail = function(rowIndex) {
      if (this.height(rowIndex) > this.rowHeight) {
        this.updateRowHeight(rowIndex, this.detailRowHeight * -1);
      }
    };
    RowHeightService2.prototype.index = function(position4) {
      for (var i = 0; i < this.offsets.length; i++) {
        if (position4 === this.offsets[i]) {
          return i;
        }
        if (position4 < this.offsets[i]) {
          return i - 1;
        }
      }
      return this.total - 1;
    };
    RowHeightService2.prototype.offset = function(rowIndex) {
      return this.offsets[rowIndex];
    };
    RowHeightService2.prototype.totalHeight = function() {
      return this.heights.reduce(function(prev, curr) {
        return prev + curr;
      }, 0);
    };
    RowHeightService2.prototype.updateRowHeight = function(rowIndex, value2) {
      this.heights[rowIndex] += value2;
      this.offsets = update(this.offsets, rowIndex, value2);
    };
    return RowHeightService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/virtualization/services/ScrollerService.js
var normalize2 = function(x) {
  return Math.max(x, 0);
};
var ScrollAction = (
  /** @class */
  function() {
    function ScrollAction2(offset4) {
      this.offset = offset4;
    }
    return ScrollAction2;
  }()
);
var PageAction = (
  /** @class */
  function() {
    function PageAction2(skip3) {
      this.skip = skip3;
    }
    return PageAction2;
  }()
);
var ScrollerService = (
  /** @class */
  function() {
    function ScrollerService2(onScrollAction, onPageAction) {
      this.onScrollAction = onScrollAction;
      this.onPageAction = onPageAction;
      this.direction = "vertical";
      this.firstLoaded = 0;
      this.lastLoaded = 0;
      this.lastScrollTop = 0;
      this.take = 0;
      this.total = 0;
      this.rowHeightService = null;
      this.bottomOffset = 0;
      this.topOffset = 0;
    }
    ScrollerService2.prototype.create = function(rowHeightService, skip3, take3, total, topOffset, bottomOffset, direction) {
      if (topOffset === void 0) {
        topOffset = 0;
      }
      if (bottomOffset === void 0) {
        bottomOffset = 0;
      }
      if (direction === void 0) {
        direction = "vertical";
      }
      this.rowHeightService = rowHeightService;
      this.firstLoaded = skip3;
      this.lastLoaded = skip3 + take3;
      this.take = take3;
      this.total = total;
      this.lastScrollTop = 0;
      this.topOffset = topOffset;
      this.bottomOffset = bottomOffset;
      this.direction = direction;
      var offsetBufferRows = this.rowsForHeight(topOffset);
      var skipWithOffset = normalize2(skip3 - offsetBufferRows);
      this.onScrollAction(new ScrollAction(this.rowOffset(skipWithOffset)));
      this.onPageAction(new PageAction(skipWithOffset));
    };
    ScrollerService2.prototype.onScroll = function(_a14) {
      var scrollLeft = _a14.scrollLeft, scrollTop = _a14.scrollTop, offsetHeight = _a14.offsetHeight, offsetWidth = _a14.offsetWidth;
      var scrollPosition2 = this.direction === "vertical" ? scrollTop : scrollLeft;
      var offsetSize = this.direction === "vertical" ? offsetHeight : offsetWidth;
      if (this.lastScrollTop === scrollPosition2 || !this.rowHeightService) {
        return;
      }
      var up = this.lastScrollTop >= scrollPosition2;
      this.lastScrollTop = scrollPosition2;
      var firstItemIndex = this.rowHeightService.index(normalize2(scrollPosition2 - this.topOffset));
      var lastItemIndex = this.rowHeightService.index(normalize2(scrollPosition2 + offsetSize - this.bottomOffset));
      if (!up && lastItemIndex >= this.lastLoaded && this.lastLoaded < this.total) {
        this.firstLoaded = firstItemIndex;
        this.onScrollAction(new ScrollAction(this.rowOffset(firstItemIndex)));
        this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);
        this.onPageAction(new PageAction(this.firstLoaded));
      }
      if (up && firstItemIndex <= this.firstLoaded) {
        var nonVisibleBuffer = Math.floor(this.take * 0.3);
        this.firstLoaded = normalize2(firstItemIndex - nonVisibleBuffer);
        this.onScrollAction(new ScrollAction(this.rowOffset(this.firstLoaded)));
        this.lastLoaded = Math.min(this.firstLoaded + this.take, this.total);
        this.onPageAction(new PageAction(this.firstLoaded));
      }
    };
    ScrollerService2.prototype.rowOffset = function(index) {
      return this.rowHeightService ? this.rowHeightService.offset(index) + this.topOffset : 0;
    };
    ScrollerService2.prototype.rowsForHeight = function(height) {
      return this.rowHeightService ? Math.ceil(height / this.rowHeightService.height(0)) : 0;
    };
    return ScrollerService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/virtualization/Virtualization.js
var React48 = __toESM(require_react());
var PropTypes18 = __toESM(require_prop_types());
var __extends12 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var _a2, _b, _c;
var ScrollDirection;
(function(ScrollDirection2) {
  ScrollDirection2[ScrollDirection2["Backward"] = 0] = "Backward";
  ScrollDirection2[ScrollDirection2["Forward"] = 1] = "Forward";
})(ScrollDirection || (ScrollDirection = {}));
var differenceToScroll = function(scrollTop, staticOffset, maxScrollDifference) {
  return Math.min(Math.abs(staticOffset - scrollTop), maxScrollDifference);
};
var FRAME_DURATION2 = 17;
var scrollModifiers = (_a2 = {}, _a2[ScrollDirection.Forward] = function(step) {
  return function(value2) {
    return value2 + step;
  };
}, _a2[ScrollDirection.Backward] = function(step) {
  return function(value2) {
    return value2 - step;
  };
}, _a2);
var scrollNormalizers = (_b = {}, _b[ScrollDirection.Forward] = function(end2) {
  return function(value2) {
    return Math.min(value2, end2);
  };
}, _b[ScrollDirection.Backward] = function(end2) {
  return function(value2) {
    return Math.max(value2, end2);
  };
}, _b);
var scrollValidators = (_c = {}, _c[ScrollDirection.Forward] = function(end2) {
  return function(start2) {
    return start2 < end2;
  };
}, _c[ScrollDirection.Backward] = function(end2) {
  return function(start2) {
    return start2 > end2;
  };
}, _c);
var Virtualization = (
  /** @class */
  function(_super) {
    __extends12(Virtualization2, _super);
    function Virtualization2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.rowHeightService = null;
      _this3.scrollContainer = null;
      _this3.lastDirection = null;
      _this3.lastTotal = 0;
      _this3.lastTake = 0;
      _this3.animationInProgress = false;
      _this3.scrollTo = function(value2) {
        var scrollProperty = _this3.direction === "vertical" ? "scrollTop" : "scrollLeft";
        if (!_this3.scrollContainer) {
          return;
        }
        _this3.scrollContainer[scrollProperty] = value2;
      };
      _this3.scrollToIndex = function(index) {
        _this3.animationInProgress = false;
        if (_this3.rowHeightService) {
          _this3.scrollTo(_this3.rowHeightService.offset(index));
        }
      };
      _this3.animateToIndex = function(index) {
        if (!_this3.rowHeightService || !window) {
          return;
        }
        window.cancelAnimationFrame(_this3.cancelAnimation);
        var indexOffset = _this3.rowHeightService.offset(index);
        var direction = _this3.getContainerScrollDirection(indexOffset);
        var _a14 = _this3.scrollRange(indexOffset, direction), start2 = _a14.start, end2 = _a14.end;
        if (start2 === end2) {
          return;
        }
        var step = _this3.scrollStep(start2, end2);
        var modifyScroll = scrollModifiers[direction](step);
        var normalizeScroll = scrollNormalizers[direction](end2);
        var isScrollValid = scrollValidators[direction](modifyScroll(end2));
        var animate = function(progress) {
          _this3.animationInProgress = true;
          var next = modifyScroll(progress);
          _this3.scrollTo(normalizeScroll(next));
          isScrollValid(next) ? _this3.cancelAnimation = window.requestAnimationFrame(function() {
            animate(next);
          }) : _this3.animationInProgress = false;
        };
        _this3.cancelAnimation = window.requestAnimationFrame(function() {
          animate(start2);
        });
      };
      _this3.scrollToBottom = function() {
        if (!_this3.rowHeightService) {
          return;
        }
        _this3.scrollTo(_this3.rowHeightService.totalHeight() + _this3.props.bottomOffset);
      };
      _this3.scrollStep = function(start2, end2) {
        var duration2 = _this3.props.scrollDuration || Virtualization2.defaultProps.scrollDuration;
        return Math.abs(end2 - start2) / (duration2 / FRAME_DURATION2);
      };
      _this3.scrollRange = function(indexOffset, direction) {
        var containerScroll = _this3.containerScrollPosition;
        if (parseInt("".concat(indexOffset), 10) === parseInt("".concat(containerScroll), 10)) {
          return { start: indexOffset, end: indexOffset };
        }
        var maxScroll = _this3.containerMaxScroll();
        var sign = direction === ScrollDirection.Backward ? 1 : -1;
        var difference = differenceToScroll(containerScroll, indexOffset, _this3.props.maxScrollDifference || 0);
        var end2 = Math.min(indexOffset, maxScroll);
        var start2 = Math.min(Math.max(end2 + sign * difference, 0), maxScroll);
        return { start: start2, end: end2 };
      };
      _this3.containerMaxScroll = function() {
        return _this3.containerScrollSize - _this3.containerOffsetSize;
      };
      _this3.getContainerScrollDirection = function(indexOffset) {
        return indexOffset < _this3.containerScrollPosition ? ScrollDirection.Backward : ScrollDirection.Forward;
      };
      _this3.initServices = function(props2) {
        if (props2 === void 0) {
          props2 = _this3.props;
        }
        var dimension = _this3.direction === "vertical" ? props2.itemHeight : props2.itemWidth;
        if (dimension === void 0) {
          return;
        }
        _this3.rowHeightService = new RowHeightService(props2.total, dimension, 0);
        _this3.scrollerService.create(_this3.rowHeightService, props2.skip, props2.take, props2.total, props2.topOffset, _this3.scrollOffsetSize, _this3.direction);
      };
      _this3.getContainerProperty = function(propertyName) {
        if (!_this3.scrollContainer) {
          return 0;
        }
        return _this3.scrollContainer[propertyName];
      };
      _this3.handleScroll = function(event2) {
        if (!_this3.scrollContainer || !_this3.rowHeightService) {
          return;
        }
        var target = event2.target;
        _this3.scrollerService.onScroll({
          scrollLeft: target.scrollLeft,
          scrollTop: target.scrollTop,
          offsetHeight: target.offsetHeight,
          offsetWidth: target.offsetWidth
        });
        var index = _this3.rowHeightService.index(_this3.containerScrollPosition - _this3.props.topOffset);
        var onScrollAction = _this3.props.onScrollAction;
        var args = {
          index,
          target,
          scrollAction: _this3.scrollAction,
          pageAction: _this3.pageAction,
          animationInProgress: _this3.animationInProgress
        };
        if (_this3.props.onScroll) {
          _this3.props.onScroll.call(void 0, event2);
        }
        if (onScrollAction) {
          onScrollAction.call(void 0, args);
        }
        _this3.scrollAction = void 0;
        _this3.pageAction = void 0;
      };
      _this3.handleScrollAction = function(action) {
        _this3.scrollAction = action;
      };
      _this3.handlePageAction = function(action) {
        _this3.pageAction = action;
      };
      _this3.scrollerService = new ScrollerService(_this3.handleScrollAction, _this3.handlePageAction);
      return _this3;
    }
    Object.defineProperty(Virtualization2.prototype, "element", {
      get: function() {
        return this.scrollContainer;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Virtualization2.prototype, "containerOffsetSize", {
      get: function() {
        return this.getContainerProperty(this.direction === "vertical" ? "offsetHeight" : "offsetWidth");
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Virtualization2.prototype, "containerScrollSize", {
      get: function() {
        return this.getContainerProperty(this.direction === "vertical" ? "scrollHeight" : "scrollWidth");
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Virtualization2.prototype, "containerScrollPosition", {
      get: function() {
        return this.getContainerProperty(this.direction === "vertical" ? "scrollTop" : "scrollLeft");
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Virtualization2.prototype, "direction", {
      get: function() {
        return this.props.direction !== void 0 ? this.props.direction : Virtualization2.defaultProps.direction;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Virtualization2.prototype, "scrollOffsetSize", {
      get: function() {
        return this.props.scrollOffsetSize !== void 0 ? this.props.scrollOffsetSize : Virtualization2.defaultProps.scrollOffsetSize;
      },
      enumerable: false,
      configurable: true
    });
    Virtualization2.prototype.activeIndex = function() {
      return this.itemIndex(Math.ceil(this.containerScrollPosition));
    };
    Virtualization2.prototype.itemIndex = function(offset4) {
      if (!this.rowHeightService) {
        return 0;
      }
      return this.rowHeightService.index(offset4);
    };
    Virtualization2.prototype.itemOffset = function(index) {
      if (!this.rowHeightService) {
        return 0;
      }
      return this.rowHeightService.offset(index);
    };
    Virtualization2.prototype.isIndexVisible = function(index) {
      if (!this.rowHeightService) {
        return false;
      }
      var containerTop = this.containerScrollPosition;
      var containerBottom = containerTop + this.containerOffsetSize;
      var top = this.rowHeightService.offset(index);
      var bottom = top + this.rowHeightService.height(index);
      return top >= containerTop && bottom <= containerBottom;
    };
    Virtualization2.prototype.isListScrolled = function(index) {
      if (!this.rowHeightService) {
        return false;
      }
      return this.containerScrollPosition !== this.rowHeightService.offset(index);
    };
    Virtualization2.prototype.componentDidMount = function() {
      var onMount = this.props.onMount;
      if (onMount) {
        onMount.call(void 0, this);
      }
    };
    Virtualization2.prototype.render = function() {
      var _this3 = this;
      if (this.lastTotal !== this.props.total || this.lastDirection !== this.direction || this.lastTake !== this.props.take) {
        this.initServices();
        this.lastTotal = this.props.total;
        this.lastDirection = this.direction;
        this.lastTake = this.props.take;
      }
      var vertexLength = "".concat((this.rowHeightService ? this.rowHeightService.totalHeight() : 0) + this.props.bottomOffset);
      var placeholderStyle = this.direction === "vertical" ? { height: "".concat(vertexLength, "px") } : { width: "".concat(vertexLength, "px") };
      var rootClassNames = classNames("k-content k-calendar-content k-scrollable", {
        "k-scrollable-horizontal": this.direction === "horizontal"
      }, this.props.className);
      var scrollableClassNames = classNames("k-scrollable-placeholder", {
        "k-scrollable-horizontal-placeholder": this.direction === "horizontal"
      });
      return React48.createElement(
        "div",
        { ref: function(el) {
          _this3.scrollContainer = el;
        }, onScroll: this.handleScroll, className: rootClassNames, tabIndex: this.props.tabIndex, role: this.props.role },
        this.props.children,
        React48.createElement("div", { style: placeholderStyle, className: scrollableClassNames })
      );
    };
    Virtualization2.propTypes = {
      bottomOffset: PropTypes18.number.isRequired,
      className: PropTypes18.string,
      direction: PropTypes18.oneOf(["horizontal", "vertical"]),
      forceScroll: PropTypes18.bool,
      itemHeight: PropTypes18.number,
      itemWidth: PropTypes18.number,
      maxScrollDifference: PropTypes18.number,
      onScroll: PropTypes18.func,
      onScrollAction: PropTypes18.func,
      scrollDuration: PropTypes18.number,
      scrollOffsetSize: PropTypes18.number,
      skip: PropTypes18.number.isRequired,
      tabIndex: PropTypes18.number,
      take: PropTypes18.number.isRequired,
      topOffset: PropTypes18.number.isRequired,
      total: PropTypes18.number.isRequired,
      role: PropTypes18.string
    };
    Virtualization2.defaultProps = {
      direction: "vertical",
      forceScroll: false,
      scrollOffsetSize: 0,
      maxScrollDifference: 100,
      scrollDuration: 100
    };
    return Virtualization2;
  }(React48.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/CalendarCell.js
var React49 = __toESM(require_react());
var __extends13 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
var __rest12 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var compareProps = function(x, y) {
  var xProps = Object.getOwnPropertyNames(x);
  var yProps = Object.getOwnPropertyNames(y);
  if (xProps.length !== yProps.length) {
    return false;
  }
  for (var i = 0; i < xProps.length; i++) {
    var propName = xProps[i];
    if (x[propName] !== y[propName]) {
      return false;
    }
  }
  return true;
};
var CalendarCell = (
  /** @class */
  function(_super) {
    __extends13(CalendarCell2, _super);
    function CalendarCell2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.handleClick = function(event2) {
        var _a14 = _this3.props, onClick = _a14.onClick, value2 = _a14.value;
        if (onClick) {
          onClick.call(void 0, value2, event2);
        }
      };
      _this3.handleMouseEnter = function() {
        var _a14 = _this3.props, onMouseEnter = _a14.onMouseEnter, value2 = _a14.value;
        if (onMouseEnter) {
          onMouseEnter.call(void 0, value2);
        }
      };
      _this3.handleMouseLeave = function() {
        var _a14 = _this3.props, onMouseLeave = _a14.onMouseLeave, value2 = _a14.value;
        if (onMouseLeave) {
          onMouseLeave.call(void 0, value2);
        }
      };
      return _this3;
    }
    CalendarCell2.prototype.shouldComponentUpdate = function(nextProps) {
      var _a14 = this.props, value2 = _a14.value, props = __rest12(_a14, ["value"]);
      var newValue = nextProps.value, newProps = __rest12(nextProps, ["value"]);
      var valueEqual = !(value2 && newValue) || value2.getTime() === newValue.getTime();
      return !(valueEqual && compareProps(props, newProps));
    };
    CalendarCell2.prototype.render = function() {
      var _a14 = this.props, className = _a14.className, formattedValue = _a14.formattedValue, isWeekend = _a14.isWeekend, isFocused = _a14.isFocused, isInRange4 = _a14.isInRange, isSelected2 = _a14.isSelected, isRangeStart = _a14.isRangeStart, isRangeMid = _a14.isRangeMid, isRangeEnd = _a14.isRangeEnd, isRangeSplitStart = _a14.isRangeSplitStart, isRangeSplitEnd = _a14.isRangeSplitEnd, isToday = _a14.isToday, isDisabled = _a14.isDisabled, view = _a14.view, value2 = _a14.value, other = __rest12(_a14, ["className", "formattedValue", "isWeekend", "isFocused", "isInRange", "isSelected", "isRangeStart", "isRangeMid", "isRangeEnd", "isRangeSplitStart", "isRangeSplitEnd", "isToday", "isDisabled", "view", "value"]);
      var isEndActive = this.props.activeRangeEnd === "end" && isRangeEnd;
      var isStartActive = this.props.activeRangeEnd === "start" && isRangeStart;
      var rootClassName = classNames("k-calendar-td", {
        "k-range-end": isRangeEnd,
        "k-range-mid": isRangeMid,
        "k-range-split-end": isRangeSplitEnd,
        "k-range-split-start": isRangeSplitStart,
        "k-range-start": isRangeStart,
        "k-active": isStartActive || isEndActive,
        "k-state-pending-focus": isFocused,
        "k-selected": isSelected2 || isRangeStart || isRangeEnd,
        "k-today": isToday,
        "k-weekend": isWeekend,
        "k-disabled": isDisabled
      }, className);
      return React49.createElement(
        "td",
        __assign25({}, other, { className: rootClassName, onClick: this.handleClick, onMouseEnter: this.handleMouseEnter, onMouseLeave: this.handleMouseLeave }),
        React49.createElement("span", { className: "k-link" }, this.props.children)
      );
    };
    return CalendarCell2;
  }(React49.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/CalendarWeekCell.js
var React50 = __toESM(require_react());
var __extends14 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
var __rest13 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CalendarWeekCell = (
  /** @class */
  function(_super) {
    __extends14(CalendarWeekCell2, _super);
    function CalendarWeekCell2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    CalendarWeekCell2.prototype.render = function() {
      var _a14 = this.props, className = _a14.className, firstDate = _a14.firstDate, other = __rest13(_a14, ["className", "firstDate"]);
      return React50.createElement("td", __assign26({ className: classNames("k-calendar-td", className) }, other), this.props.children);
    };
    return CalendarWeekCell2;
  }(React50.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/models/NavigationAction.js
var Action;
(function(Action2) {
  Action2[Action2["Left"] = 0] = "Left";
  Action2[Action2["Right"] = 1] = "Right";
  Action2[Action2["Up"] = 2] = "Up";
  Action2[Action2["Down"] = 3] = "Down";
  Action2[Action2["PrevView"] = 4] = "PrevView";
  Action2[Action2["NextView"] = 5] = "NextView";
  Action2[Action2["FirstInView"] = 6] = "FirstInView";
  Action2[Action2["LastInView"] = 7] = "LastInView";
  Action2[Action2["LowerView"] = 8] = "LowerView";
  Action2[Action2["UpperView"] = 9] = "UpperView";
})(Action || (Action = {}));

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/models/CalendarViewEnum.js
var CalendarViewEnum;
(function(CalendarViewEnum2) {
  CalendarViewEnum2[CalendarViewEnum2["month"] = 0] = "month";
  CalendarViewEnum2[CalendarViewEnum2["year"] = 1] = "year";
  CalendarViewEnum2[CalendarViewEnum2["decade"] = 2] = "decade";
  CalendarViewEnum2[CalendarViewEnum2["century"] = 3] = "century";
})(CalendarViewEnum || (CalendarViewEnum = {}));

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/models/SelectionRange.js
var EMPTY_SELECTIONRANGE = { start: null, end: null };

// node_modules/@progress/kendo-react-dateinputs/dist/es/utils.js
var __spreadArray7 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var isEqualRange = function(initial2, updated) {
  var _a14 = initial2 || EMPTY_SELECTIONRANGE, initialStart = _a14.start, initialEnd = _a14.end;
  var _b3 = updated || EMPTY_SELECTIONRANGE, updatedStart = _b3.start, updatedEnd = _b3.end;
  if (initialStart === null || initialEnd === null || updatedStart === null || updatedEnd === null) {
    return false;
  }
  return isEqual(initialStart, updatedStart) && isEqual(initialEnd, updatedEnd);
};
function nullable(subRequirement) {
  var check = function(required, props, key) {
    var rest = [];
    for (var _i = 3; _i < arguments.length; _i++) {
      rest[_i - 3] = arguments[_i];
    }
    if (props[key] === null) {
      return null;
    }
    var sub = required ? subRequirement.isRequired : subRequirement;
    return sub.apply(void 0, __spreadArray7([props, key], rest, false));
  };
  var fn = check.bind(null, false);
  fn.isRequired = check.bind(null, true);
  return fn;
}
var viewInRange = function(candidate, min, max) {
  if (min === void 0 || max === void 0) {
    return candidate;
  }
  return min <= candidate && candidate <= max ? candidate : candidate < min ? min : max;
};
var MIDNIGHT_DATE = new Date(1980, 0, 1);
var MIN_DATE2 = new Date(1900, 0, 1);
var MAX_DATE2 = new Date(2099, 11, 31);
var MIN_TIME = new Date(1980, 0, 1);
var MAX_TIME = new Date(1980, 0, 1, 23, 59, 59);
var isSet = function(value2) {
  return value2 !== null && value2 !== void 0;
};
var isValidRange = function(min, max) {
  return !isSet(min) || !isSet(max) || min <= max;
};
var setTime2 = function(origin, candidate) {
  var date2 = cloneDate(origin);
  date2.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());
  return date2;
};
var getToday2 = function() {
  return getDate(/* @__PURE__ */ new Date());
};
var isInRange = function(candidate, min, max) {
  return !candidate || !(min && min > candidate || max && max < candidate);
};
var isInDateRange = function(candidate, min, max) {
  return candidate === null || !(min && getDate(min) > getDate(candidate) || max && getDate(max) < getDate(candidate));
};
var isInSelectionRange = function(value2, selectionRange) {
  var _a14 = selectionRange || EMPTY_SELECTIONRANGE, start2 = _a14.start, end2 = _a14.end;
  if (!start2 || !end2) {
    return false;
  }
  return start2 < value2 && value2 < end2;
};
var range = function(start2, end2, step) {
  if (step === void 0) {
    step = 1;
  }
  var result = [];
  for (var i = start2; i < end2; i = i + step) {
    result.push(i);
  }
  return result;
};
var intersects2 = function(date2, min, max) {
  return min.getTime() <= date2.getTime() && date2.getTime() <= max.getTime();
};
var shiftWeekNames = function(names, offset4) {
  return names.slice(offset4).concat(names.slice(0, offset4));
};
var dateInRange = function(candidate, min, max) {
  if (!candidate) {
    return candidate;
  }
  if (min && candidate < min) {
    return cloneDate(min);
  }
  if (max && candidate > max) {
    return cloneDate(max);
  }
  return candidate;
};
var domContainerFactory = function(type) {
  return function(children2, classes, styles6) {
    if (classes === void 0) {
      classes = "";
    }
    if (styles6 === void 0) {
      styles6 = {};
    }
    var container = document.createElement(type);
    container.className = classes;
    Object.keys(styles6).map(function(key) {
      return container.style[key] = styles6[key];
    });
    if (typeof children2 === "string") {
      container.innerHTML = children2 || "";
    } else {
      (children2 || []).forEach(function(child) {
        return child && container.appendChild(child);
      });
    }
    return container;
  };
};
function debounce(func32, wait, options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var lastArgs;
  var lastThis;
  var maxWait = options2.maxWait;
  var result;
  var timerId;
  var lastCallTime;
  var root = window;
  var lastInvokeTime = 0;
  var leading = false;
  var maxing = false;
  var trailing = true;
  var useRAF = !wait && wait !== 0 && typeof root.requestAnimationFrame === "function";
  if (typeof func32 !== "function") {
    throw new TypeError("Expected a function");
  }
  wait = +wait || 0;
  function invokeFunc(time2) {
    var args = lastArgs;
    var thisArg = lastThis;
    lastArgs = lastThis = void 0;
    lastInvokeTime = time2;
    result = func32.apply(thisArg, args);
    return result;
  }
  function startTimer(pendingFunc, tmr) {
    if (useRAF) {
      root.cancelAnimationFrame(timerId);
      return root.requestAnimationFrame(pendingFunc);
    }
    return setTimeout(pendingFunc, tmr);
  }
  function cancelTimer(id) {
    if (useRAF) {
      return root.cancelAnimationFrame(id);
    }
    clearTimeout(id);
  }
  function leadingEdge(time2) {
    lastInvokeTime = time2;
    timerId = startTimer(timerExpired, wait);
    return leading ? invokeFunc(time2) : result;
  }
  function remainingWait(time2) {
    var timeSinceLastCall = time2 - lastCallTime;
    var timeSinceLastInvoke = time2 - lastInvokeTime;
    var timeWaiting = wait - timeSinceLastCall;
    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
  }
  function shouldInvoke(time2) {
    var timeSinceLastCall = time2 - lastCallTime;
    var timeSinceLastInvoke = time2 - lastInvokeTime;
    return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
  }
  function timerExpired() {
    var time2 = Date.now();
    if (shouldInvoke(time2)) {
      return trailingEdge(time2);
    }
    timerId = startTimer(timerExpired, remainingWait(time2));
  }
  function trailingEdge(time2) {
    timerId = void 0;
    if (trailing && lastArgs) {
      return invokeFunc(time2);
    }
    lastArgs = lastThis = void 0;
    return result;
  }
  function cancel() {
    if (timerId !== void 0) {
      cancelTimer(timerId);
    }
    lastInvokeTime = 0;
    lastArgs = lastCallTime = lastThis = timerId = void 0;
  }
  function flush() {
    return timerId === void 0 ? result : trailingEdge(Date.now());
  }
  function pending() {
    return timerId !== void 0;
  }
  function debounced() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var time2 = Date.now();
    var isInvoking = shouldInvoke(time2);
    lastArgs = args;
    lastThis = this;
    lastCallTime = time2;
    if (isInvoking) {
      if (timerId === void 0) {
        return leadingEdge(lastCallTime);
      }
      if (maxing) {
        timerId = startTimer(timerExpired, wait);
        return invokeFunc(lastCallTime);
      }
    }
    if (timerId === void 0) {
      timerId = startTimer(timerExpired, wait);
    }
    return result;
  }
  debounced.cancel = cancel;
  debounced.flush = flush;
  debounced.pending = pending;
  return debounced;
}
function throttle2(func32, wait) {
  return debounce(func32, wait, {
    leading: true,
    trailing: true,
    "maxWait": wait
  });
}

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/CenturyViewService.js
var _a3;
var EMPTY_DATA = [[]];
var CELLS_LENGTH = 4;
var ROWS_LENGTH = 3;
var ACTIONS = (_a3 = {}, _a3[Action.Left] = function(date2) {
  return addDecades(date2, -1);
}, _a3[Action.Up] = function(date2) {
  return addDecades(date2, -5);
}, _a3[Action.Right] = function(date2) {
  return addDecades(date2, 1);
}, _a3[Action.Down] = function(date2) {
  return addDecades(date2, 5);
}, _a3[Action.PrevView] = function(date2) {
  return addCenturies(date2, -1);
}, _a3[Action.NextView] = function(date2) {
  return addCenturies(date2, 1);
}, _a3[Action.FirstInView] = function(date2) {
  return firstDecadeOfCentury(date2);
}, _a3[Action.LastInView] = function(date2) {
  return lastDecadeOfCentury(date2);
}, _a3);
var CenturyViewService = (
  /** @class */
  function() {
    function CenturyViewService2() {
    }
    CenturyViewService2.prototype.addToDate = function(min, skip3) {
      return addCenturies(min, skip3);
    };
    CenturyViewService2.prototype.datesList = function(start2, count2) {
      return range(0, count2).map(function(i) {
        return addCenturies(start2, i);
      });
    };
    CenturyViewService2.prototype.data = function(options2) {
      var _this3 = this;
      var cellUID = options2.cellUID, focusedDate = options2.focusedDate, isActiveView = options2.isActiveView, max = options2.max, min = options2.min, selectedDate = options2.selectedDate, _a14 = options2.selectionRange, selectionRange = _a14 === void 0 ? EMPTY_SELECTIONRANGE : _a14, viewDate = options2.viewDate;
      if (!viewDate) {
        return EMPTY_DATA;
      }
      var cells = range(0, CELLS_LENGTH);
      var firstDate = firstDecadeOfCentury(viewDate);
      var lastDate = lastDecadeOfCentury(viewDate);
      var today3 = getToday2();
      return range(0, ROWS_LENGTH).map(function(rowOffset) {
        var baseDate = addDecades(firstDate, rowOffset * CELLS_LENGTH);
        return cells.map(function(cellOffset) {
          var cellDate = _this3.normalize(addDecades(baseDate, cellOffset), min, max);
          var isRangeStart = _this3.isEqual(cellDate, selectionRange.start);
          var isRangeEnd = _this3.isEqual(cellDate, selectionRange.end);
          var isInMiddle = !isRangeStart && !isRangeEnd;
          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);
          var isSelected2 = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this3.isEqual(cellDate, selectedDate) : _this3.isSelectedFromArray(cellDate, selectedDate, min, max));
          return intersects2(cellDate, firstDate, lastDate) ? {
            formattedValue: _this3.value(cellDate),
            id: "".concat(cellUID).concat(cellDate.getTime()),
            isFocused: _this3.isEqual(cellDate, focusedDate),
            isSelected: isSelected2,
            isWeekend: false,
            isInRange: isInRange(cellDate, min, max),
            isRangeStart,
            isRangeMid,
            isRangeEnd,
            isRangeSplitEnd: isRangeMid && _this3.isEqual(cellDate, lastDate),
            isRangeSplitStart: isRangeMid && _this3.isEqual(cellDate, firstDate),
            isToday: _this3.isEqual(cellDate, today3),
            title: _this3.cellTitle(cellDate),
            value: cellDate
          } : null;
        });
      });
    };
    CenturyViewService2.prototype.isSelectedFromArray = function(candidate, dates, min, max) {
      var _this3 = this;
      var result = false;
      dates.forEach(function(date2) {
        if (isInRange(candidate, min, max) && _this3.isEqual(candidate, date2)) {
          result = true;
        }
      });
      return result;
    };
    CenturyViewService2.prototype.isEqual = function(candidate, expected) {
      if (!candidate || !expected) {
        return false;
      }
      return firstYearOfDecade(candidate).getFullYear() === firstYearOfDecade(expected).getFullYear();
    };
    CenturyViewService2.prototype.isInArray = function(date2, dates) {
      if (!dates.length) {
        return false;
      }
      var year = date2.getFullYear();
      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 99;
    };
    CenturyViewService2.prototype.isInRange = function(candidate, min, max) {
      var year = firstYearOfDecade(candidate).getFullYear();
      var aboveMin = !min || firstYearOfDecade(min).getFullYear() <= year;
      var belowMax = !max || year <= firstYearOfDecade(max).getFullYear();
      return aboveMin && belowMax;
    };
    CenturyViewService2.prototype.isInSameView = function(candidate, value2) {
      return durationInCenturies(candidate, value2) === 0;
    };
    CenturyViewService2.prototype.isRangeStart = function(value2) {
      return value2.getFullYear() % 1e3 === 0;
    };
    CenturyViewService2.prototype.move = function(value2, action) {
      var modifier = ACTIONS[action];
      if (!modifier) {
        return value2;
      }
      return modifier(value2);
    };
    CenturyViewService2.prototype.cellTitle = function(value2) {
      return firstYearOfDecade(value2).getFullYear().toString();
    };
    CenturyViewService2.prototype.navigationTitle = function(value2) {
      return value2 ? firstDecadeOfCentury(value2).getFullYear().toString() : "";
    };
    CenturyViewService2.prototype.title = function(value2) {
      if (!value2) {
        return "";
      }
      return "".concat(firstDecadeOfCentury(value2).getFullYear(), " - ").concat(lastDecadeOfCentury(value2).getFullYear());
    };
    CenturyViewService2.prototype.rowLength = function(_2) {
      return CELLS_LENGTH;
    };
    CenturyViewService2.prototype.skip = function(value2, min) {
      return durationInCenturies(min, value2);
    };
    CenturyViewService2.prototype.total = function(min, max) {
      return durationInCenturies(min, max) + 1;
    };
    CenturyViewService2.prototype.value = function(current) {
      return current ? firstYearOfDecade(current).getFullYear().toString() : "";
    };
    CenturyViewService2.prototype.viewDate = function(date2, max, border) {
      if (border === void 0) {
        border = 1;
      }
      var renderTwoViews = durationInCenturies(date2, max) < border;
      return renderTwoViews ? addCenturies(date2, -1) : date2;
    };
    CenturyViewService2.prototype.normalize = function(cellDate, min, max) {
      if (cellDate < min && this.isEqual(cellDate, min)) {
        return cloneDate(min);
      }
      if (cellDate > max && this.isEqual(cellDate, max)) {
        return cloneDate(max);
      }
      return cellDate;
    };
    return CenturyViewService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/DecadeViewService.js
var _a4;
var EMPTY_DATA2 = [[]];
var CELLS_LENGTH2 = 4;
var ROWS_LENGTH2 = 3;
var ACTIONS2 = (_a4 = {}, _a4[Action.Left] = function(date2) {
  return addYears(date2, -1);
}, _a4[Action.Up] = function(date2) {
  return addYears(date2, -5);
}, _a4[Action.Right] = function(date2) {
  return addYears(date2, 1);
}, _a4[Action.Down] = function(date2) {
  return addYears(date2, 5);
}, _a4[Action.PrevView] = function(date2) {
  return addDecades(date2, -1);
}, _a4[Action.NextView] = function(date2) {
  return addDecades(date2, 1);
}, _a4[Action.FirstInView] = function(date2) {
  return firstYearOfDecade(date2);
}, _a4[Action.LastInView] = function(date2) {
  return lastYearOfDecade(date2);
}, _a4);
var DecadeViewService = (
  /** @class */
  function() {
    function DecadeViewService2() {
    }
    DecadeViewService2.prototype.addToDate = function(min, skip3) {
      return addDecades(min, skip3);
    };
    DecadeViewService2.prototype.datesList = function(start2, count2) {
      return range(0, count2).map(function(i) {
        return addDecades(start2, i);
      });
    };
    DecadeViewService2.prototype.data = function(options2) {
      var _this3 = this;
      var cellUID = options2.cellUID, focusedDate = options2.focusedDate, isActiveView = options2.isActiveView, max = options2.max, min = options2.min, selectedDate = options2.selectedDate, _a14 = options2.selectionRange, selectionRange = _a14 === void 0 ? EMPTY_SELECTIONRANGE : _a14, viewDate = options2.viewDate;
      if (!viewDate) {
        return EMPTY_DATA2;
      }
      var cells = range(0, CELLS_LENGTH2);
      var firstDate = firstYearOfDecade(viewDate);
      var lastDate = lastYearOfDecade(viewDate);
      var today3 = getToday2();
      return range(0, ROWS_LENGTH2).map(function(rowOffset) {
        var baseDate = addYears(firstDate, rowOffset * CELLS_LENGTH2);
        return cells.map(function(cellOffset) {
          var cellDate = _this3.normalize(addYears(baseDate, cellOffset), min, max);
          var isRangeStart = _this3.isEqual(cellDate, selectionRange.start);
          var isRangeEnd = _this3.isEqual(cellDate, selectionRange.end);
          var isInMiddle = !isRangeStart && !isRangeEnd;
          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);
          var isSelected2 = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this3.isEqual(cellDate, selectedDate) : _this3.isSelectedFromArray(cellDate, selectedDate, min, max));
          return intersects2(cellDate, firstDate, lastDate) ? {
            formattedValue: _this3.value(cellDate),
            id: "".concat(cellUID).concat(cellDate.getTime()),
            isFocused: _this3.isEqual(cellDate, focusedDate),
            isSelected: isSelected2,
            isWeekend: false,
            isInRange: isInRange(cellDate, min, max),
            isRangeStart,
            isRangeMid,
            isRangeEnd,
            isRangeSplitEnd: isRangeMid && _this3.isEqual(cellDate, lastDate),
            isRangeSplitStart: isRangeMid && _this3.isEqual(cellDate, firstDate),
            isToday: _this3.isEqual(cellDate, today3),
            title: _this3.cellTitle(cellDate),
            value: cellDate
          } : null;
        });
      });
    };
    DecadeViewService2.prototype.isSelectedFromArray = function(candidate, dates, min, max) {
      var _this3 = this;
      var result = false;
      dates.forEach(function(date2) {
        if (isInRange(candidate, min, max) && _this3.isEqual(candidate, date2)) {
          result = true;
        }
      });
      return result;
    };
    DecadeViewService2.prototype.isEqual = function(candidate, expected) {
      if (!candidate || !expected) {
        return false;
      }
      return candidate.getFullYear() === expected.getFullYear();
    };
    DecadeViewService2.prototype.isInArray = function(date2, dates) {
      if (!dates.length) {
        return false;
      }
      var year = date2.getFullYear();
      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear() + 9;
    };
    DecadeViewService2.prototype.isInRange = function(candidate, min, max) {
      var year = candidate.getFullYear();
      var aboveMin = !min || min.getFullYear() <= year;
      var belowMax = !max || year <= max.getFullYear();
      return aboveMin && belowMax;
    };
    DecadeViewService2.prototype.isRangeStart = function(value2) {
      return value2.getFullYear() % 100 === 0;
    };
    DecadeViewService2.prototype.isInSameView = function(candidate, value2) {
      return durationInDecades(candidate, value2) === 0;
    };
    DecadeViewService2.prototype.move = function(value2, action) {
      var modifier = ACTIONS2[action];
      if (!modifier) {
        return value2;
      }
      return modifier(value2);
    };
    DecadeViewService2.prototype.cellTitle = function(value2) {
      return value2.getFullYear().toString();
    };
    DecadeViewService2.prototype.navigationTitle = function(value2) {
      return value2 ? firstYearOfDecade(value2).getFullYear().toString() : "";
    };
    DecadeViewService2.prototype.title = function(value2) {
      if (!value2) {
        return "";
      }
      return "".concat(firstYearOfDecade(value2).getFullYear(), " - ").concat(lastYearOfDecade(value2).getFullYear());
    };
    DecadeViewService2.prototype.rowLength = function(_2) {
      return CELLS_LENGTH2;
    };
    DecadeViewService2.prototype.skip = function(value2, min) {
      return durationInDecades(min, value2);
    };
    DecadeViewService2.prototype.total = function(min, max) {
      return durationInDecades(min, max) + 1;
    };
    DecadeViewService2.prototype.value = function(current) {
      return current ? current.getFullYear().toString() : "";
    };
    DecadeViewService2.prototype.viewDate = function(date2, max, border) {
      if (border === void 0) {
        border = 1;
      }
      var renderTwoViews = durationInDecades(date2, max) < border;
      return renderTwoViews ? addDecades(date2, -1) : date2;
    };
    DecadeViewService2.prototype.normalize = function(cellDate, min, max) {
      if (cellDate < min && this.isEqual(cellDate, min)) {
        return cloneDate(min);
      }
      if (cellDate > max && this.isEqual(cellDate, max)) {
        return cloneDate(max);
      }
      return cellDate;
    };
    return DecadeViewService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/MonthViewService.js
var _a5;
var EMPTY_DATA3 = [[]];
var CELLS_LENGTH3 = 7;
var ROWS_LENGTH3 = 6;
var SATURDAY = 6;
var SUNDAY = 0;
var ACTIONS3 = (_a5 = {}, _a5[Action.Left] = function(date2) {
  return addDays(date2, -1);
}, _a5[Action.Up] = function(date2) {
  return addWeeks(date2, -1);
}, _a5[Action.Right] = function(date2) {
  return addDays(date2, 1);
}, _a5[Action.Down] = function(date2) {
  return addWeeks(date2, 1);
}, _a5[Action.PrevView] = function(date2) {
  return addMonths(date2, -1);
}, _a5[Action.NextView] = function(date2) {
  return addMonths(date2, 1);
}, _a5[Action.FirstInView] = function(date2) {
  return firstDayOfMonth(date2);
}, _a5[Action.LastInView] = function(date2) {
  return lastDayOfMonth(date2);
}, _a5);
var MonthViewService = (
  /** @class */
  function() {
    function MonthViewService2(intl) {
      this.intl = intl;
    }
    MonthViewService2.prototype.addToDate = function(min, skip3) {
      return addMonths(min, skip3);
    };
    MonthViewService2.prototype.datesList = function(start2, count2) {
      return range(0, count2).map(function(i) {
        return addMonths(start2, i);
      });
    };
    MonthViewService2.prototype.data = function(options2) {
      var _this3 = this;
      var cellUID = options2.cellUID, focusedDate = options2.focusedDate, isActiveView = options2.isActiveView, max = options2.max, min = options2.min, selectedDate = options2.selectedDate, _a14 = options2.selectionRange, selectionRange = _a14 === void 0 ? EMPTY_SELECTIONRANGE : _a14, viewDate = options2.viewDate;
      if (!viewDate) {
        return EMPTY_DATA3;
      }
      var firstMonthDate = firstDayOfMonth(viewDate);
      var lastMonthDate = lastDayOfMonth(viewDate);
      var backward = -1;
      var date2 = dayOfWeek(firstMonthDate, this.intl.firstDay(), backward);
      var cells = range(0, CELLS_LENGTH3);
      var today3 = getToday2();
      return range(0, ROWS_LENGTH3).map(function(rowOffset) {
        var baseDate = addDays(date2, rowOffset * CELLS_LENGTH3);
        return cells.map(function(cellOffset) {
          var cellDate = _this3.normalize(addDays(baseDate, cellOffset), min, max);
          var otherMonth = cellDate < firstMonthDate || cellDate > lastMonthDate;
          if (otherMonth) {
            return null;
          }
          var isRangeStart = _this3.isEqual(cellDate, selectionRange.start);
          var isRangeEnd = _this3.isEqual(cellDate, selectionRange.end);
          var isInMiddle = !isRangeStart && !isRangeEnd;
          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);
          var isSelected2 = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this3.isEqual(cellDate, selectedDate) : _this3.isSelectedFromArray(cellDate, selectedDate, min, max));
          var cell = {
            formattedValue: _this3.value(cellDate),
            id: "".concat(cellUID).concat(cellDate.getTime()),
            isFocused: _this3.isEqual(cellDate, focusedDate),
            isSelected: isSelected2,
            isInRange: isInRange(cellDate, min, max),
            isWeekend: _this3.isWeekend(cellDate),
            isRangeStart,
            isRangeMid,
            isRangeEnd,
            isRangeSplitStart: isRangeMid && _this3.isEqual(cellDate, firstMonthDate),
            isRangeSplitEnd: isRangeMid && _this3.isEqual(cellDate, lastMonthDate),
            isToday: _this3.isEqual(cellDate, today3),
            title: _this3.cellTitle(cellDate),
            value: cellDate
          };
          return cell;
        });
      });
    };
    MonthViewService2.prototype.isEqual = function(candidate, expected) {
      if (!candidate || !expected) {
        return false;
      }
      return getDate(candidate).getTime() === getDate(expected).getTime();
    };
    MonthViewService2.prototype.isSelectedFromArray = function(candidate, dates, min, max) {
      var _this3 = this;
      var result = false;
      dates.forEach(function(date2) {
        if (isInRange(candidate, min, max) && _this3.isEqual(candidate, date2)) {
          result = true;
        }
      });
      return result;
    };
    MonthViewService2.prototype.isInArray = function(date2, dates) {
      return !!dates.length && firstDayOfMonth(dates[0]) <= date2 && date2 <= lastDayOfMonth(dates[dates.length - 1]);
    };
    MonthViewService2.prototype.isInRange = function(candidate, min, max) {
      var value2 = getDate(candidate);
      var aboveMin = !min || getDate(min) <= value2;
      var belowMax = !max || value2 <= getDate(max);
      return aboveMin && belowMax;
    };
    MonthViewService2.prototype.isInSameView = function(candidate, value2) {
      return durationInMonths(candidate, value2) === 0;
    };
    MonthViewService2.prototype.isRangeStart = function(value2) {
      return !value2.getMonth();
    };
    MonthViewService2.prototype.move = function(value2, action) {
      var modifier = ACTIONS3[action];
      if (!modifier) {
        return value2;
      }
      return modifier(value2);
    };
    MonthViewService2.prototype.cellTitle = function(value2) {
      return this.intl.formatDate(value2, "D");
    };
    MonthViewService2.prototype.navigationTitle = function(value2) {
      if (!value2) {
        return "";
      }
      return this.isRangeStart(value2) ? value2.getFullYear().toString() : this.abbrMonthNames()[value2.getMonth()];
    };
    MonthViewService2.prototype.title = function(current) {
      return "".concat(this.wideMonthNames()[current.getMonth()], " ").concat(current.getFullYear());
    };
    MonthViewService2.prototype.rowLength = function(prependCell) {
      return CELLS_LENGTH3 + (prependCell ? 1 : 0);
    };
    MonthViewService2.prototype.skip = function(value2, min) {
      return durationInMonths(min, value2);
    };
    MonthViewService2.prototype.total = function(min, max) {
      return durationInMonths(min, max) + 1;
    };
    MonthViewService2.prototype.value = function(current) {
      return current ? current.getDate().toString() : "";
    };
    MonthViewService2.prototype.viewDate = function(date2, max, border) {
      if (border === void 0) {
        border = 1;
      }
      var renderTwoViews = durationInMonths(date2, max) < border;
      return renderTwoViews ? addMonths(date2, -1) : date2;
    };
    MonthViewService2.prototype.isWeekend = function(date2) {
      var day = date2.getDay();
      return day === SATURDAY || day === SUNDAY;
    };
    MonthViewService2.prototype.abbrMonthNames = function() {
      return this.intl.dateFormatNames({ nameType: "abbreviated", type: "months" });
    };
    MonthViewService2.prototype.normalize = function(cellDate, min, max) {
      if (cellDate < min && this.isEqual(cellDate, min)) {
        return getDate(min);
      }
      if (cellDate > max && this.isEqual(cellDate, max)) {
        return getDate(max);
      }
      return cellDate;
    };
    MonthViewService2.prototype.wideMonthNames = function() {
      return this.intl.dateFormatNames({ nameType: "wide", type: "months", standAlone: true });
    };
    return MonthViewService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/YearViewService.js
var _a6;
var EMPTY_DATA4 = [[]];
var CELLS_LENGTH4 = 4;
var ROWS_LENGTH4 = 3;
var upStep = function(month) {
  if (month > 4) {
    return -5;
  }
  if (month < 2) {
    return -2;
  }
  return -7;
};
var downStep = function(month) {
  if (month < 7) {
    return 5;
  }
  if (month < 10) {
    return 7;
  }
  return 2;
};
var ACTIONS4 = (_a6 = {}, _a6[Action.Left] = function(date2) {
  return addMonths(date2, -1);
}, _a6[Action.Up] = function(date2) {
  return addMonths(date2, upStep(date2.getMonth()));
}, _a6[Action.Right] = function(date2) {
  return addMonths(date2, 1);
}, _a6[Action.Down] = function(date2) {
  return addMonths(date2, downStep(date2.getMonth()));
}, _a6[Action.PrevView] = function(date2) {
  return addYears(date2, -1);
}, _a6[Action.NextView] = function(date2) {
  return addYears(date2, 1);
}, _a6[Action.FirstInView] = function(date2) {
  return firstMonthOfYear(date2);
}, _a6[Action.LastInView] = function(date2) {
  return lastMonthOfYear(date2);
}, _a6);
var YearViewService = (
  /** @class */
  function() {
    function YearViewService2(intl) {
      this.Dd = intl;
    }
    YearViewService2.prototype.addToDate = function(min, skip3) {
      return addYears(min, skip3);
    };
    YearViewService2.prototype.datesList = function(start2, count2) {
      return range(0, count2).map(function(i) {
        return addYears(start2, i);
      });
    };
    YearViewService2.prototype.data = function(options2) {
      var _this3 = this;
      var cellUID = options2.cellUID, focusedDate = options2.focusedDate, isActiveView = options2.isActiveView, max = options2.max, min = options2.min, selectedDate = options2.selectedDate, _a14 = options2.selectionRange, selectionRange = _a14 === void 0 ? EMPTY_SELECTIONRANGE : _a14, viewDate = options2.viewDate;
      if (!viewDate) {
        return EMPTY_DATA4;
      }
      var months = this.abbrMonthNames();
      var firstDate = firstMonthOfYear(viewDate);
      var lastDate = lastMonthOfYear(viewDate);
      var currentYear = firstDate.getFullYear();
      var cells = range(0, CELLS_LENGTH4);
      var today3 = getToday2();
      return range(0, ROWS_LENGTH4).map(function(rowOffset) {
        var baseDate = addMonths(firstDate, rowOffset * CELLS_LENGTH4);
        return cells.map(function(cellOffset) {
          var cellDate = _this3.normalize(addMonths(baseDate, cellOffset), min, max);
          var changedYear = currentYear < cellDate.getFullYear();
          if (changedYear) {
            return null;
          }
          var isRangeStart = _this3.isEqual(cellDate, selectionRange.start);
          var isRangeEnd = _this3.isEqual(cellDate, selectionRange.end);
          var isInMiddle = !isRangeStart && !isRangeEnd;
          var isRangeMid = isInMiddle && isInSelectionRange(cellDate, selectionRange);
          var isSelected2 = isActiveView && (!Array.isArray(selectedDate) ? isInRange(selectedDate, min, max) && _this3.isEqual(cellDate, selectedDate) : _this3.isSelectedFromArray(cellDate, selectedDate, min, max));
          return {
            formattedValue: months[cellDate.getMonth()],
            id: "".concat(cellUID).concat(cellDate.getTime()),
            isFocused: _this3.isEqual(cellDate, focusedDate),
            isSelected: isSelected2,
            isInRange: isInRange(cellDate, min, max),
            isWeekend: false,
            isRangeStart,
            isRangeMid,
            isRangeEnd,
            isRangeSplitEnd: isRangeMid && _this3.isEqual(cellDate, lastDate),
            isRangeSplitStart: isRangeMid && _this3.isEqual(cellDate, firstDate),
            isToday: _this3.isEqual(cellDate, today3),
            title: _this3.cellTitle(cellDate),
            value: cellDate
          };
        });
      });
    };
    YearViewService2.prototype.isSelectedFromArray = function(candidate, dates, min, max) {
      var _this3 = this;
      var result = false;
      dates.forEach(function(date2) {
        if (isInRange(candidate, min, max) && _this3.isEqual(candidate, date2)) {
          result = true;
        }
      });
      return result;
    };
    YearViewService2.prototype.isEqual = function(candidate, expected) {
      if (!candidate || !expected) {
        return false;
      }
      return candidate.getFullYear() === expected.getFullYear() && candidate.getMonth() === expected.getMonth();
    };
    YearViewService2.prototype.isInArray = function(date2, dates) {
      if (!dates.length) {
        return false;
      }
      var year = date2.getFullYear();
      return dates[0].getFullYear() <= year && year <= dates[dates.length - 1].getFullYear();
    };
    YearViewService2.prototype.isInRange = function(candidate, min, max) {
      var candidateValue = createDate(candidate.getFullYear(), candidate.getMonth(), 1);
      var aboveMin = !min || createDate(min.getFullYear(), min.getMonth(), 1) <= candidateValue;
      var belowMax = !max || candidateValue <= createDate(max.getFullYear(), max.getMonth(), 1);
      return aboveMin && belowMax;
    };
    YearViewService2.prototype.isInSameView = function(candidate, value2) {
      return durationInYears(candidate, value2) === 0;
    };
    YearViewService2.prototype.isRangeStart = function(value2) {
      return value2.getFullYear() % 10 === 0;
    };
    YearViewService2.prototype.move = function(value2, action) {
      var modifier = ACTIONS4[action];
      if (!modifier) {
        return value2;
      }
      return modifier(value2);
    };
    YearViewService2.prototype.cellTitle = function(value2) {
      return "".concat(value2.getFullYear(), " ").concat(this.value(value2));
    };
    YearViewService2.prototype.navigationTitle = function(value2) {
      return this.title(value2);
    };
    YearViewService2.prototype.title = function(current) {
      return current ? current.getFullYear().toString() : "";
    };
    YearViewService2.prototype.rowLength = function(_2) {
      return CELLS_LENGTH4;
    };
    YearViewService2.prototype.skip = function(value2, min) {
      return durationInYears(min, value2);
    };
    YearViewService2.prototype.total = function(min, max) {
      return durationInYears(min, max) + 1;
    };
    YearViewService2.prototype.value = function(current) {
      return current ? this.abbrMonthNames()[current.getMonth()] : "";
    };
    YearViewService2.prototype.viewDate = function(date2, max, border) {
      if (border === void 0) {
        border = 1;
      }
      var renderTwoViews = durationInYears(date2, max) < border;
      return renderTwoViews ? addYears(date2, -1) : date2;
    };
    YearViewService2.prototype.abbrMonthNames = function() {
      return this.Dd.dateFormatNames({ nameType: "abbreviated", type: "months" });
    };
    YearViewService2.prototype.normalize = function(cellDate, min, max) {
      if (cellDate < min && this.isEqual(cellDate, min)) {
        return cloneDate(min);
      }
      if (cellDate > max && this.isEqual(cellDate, max)) {
        return cloneDate(max);
      }
      return cellDate;
    };
    return YearViewService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/BusViewService.js
var _a7;
var services = (_a7 = {}, _a7[CalendarViewEnum.month] = MonthViewService, _a7[CalendarViewEnum.year] = YearViewService, _a7[CalendarViewEnum.decade] = DecadeViewService, _a7[CalendarViewEnum.century] = CenturyViewService, _a7);
var viewOffset = function(view, offset4) {
  var candidate = CalendarViewEnum[CalendarViewEnum[view + offset4]];
  return candidate !== void 0 ? candidate : view;
};
var BusViewService = (
  /** @class */
  function() {
    function BusViewService2(onViewChanged) {
      this.bottom = CalendarViewEnum.month;
      this.top = CalendarViewEnum.century;
      this.onViewChanged = onViewChanged;
    }
    BusViewService2.prototype.configure = function(bottom, top) {
      this.bottom = bottom;
      this.top = top;
    };
    BusViewService2.prototype.service = function(view, intl) {
      return new services["".concat(view)](intl);
    };
    BusViewService2.prototype.moveDown = function(view, event2) {
      this.move(view, -1, event2);
    };
    BusViewService2.prototype.moveUp = function(view, event2) {
      this.move(view, 1, event2);
    };
    BusViewService2.prototype.moveToBottom = function(activeView) {
      if (activeView === this.bottom) {
        return;
      }
      this.onViewChanged({ view: this.bottom });
    };
    BusViewService2.prototype.canMoveDown = function(view) {
      return this.bottom < view;
    };
    BusViewService2.prototype.canMoveUp = function(view) {
      return view < this.top;
    };
    BusViewService2.prototype.clamp = function(view) {
      if (view < this.bottom) {
        return this.bottom;
      }
      if (view > this.top) {
        return this.top;
      }
      return view;
    };
    BusViewService2.prototype.move = function(view, offset4, event2) {
      var candidate = this.clamp(viewOffset(view, offset4));
      if (candidate === view) {
        return;
      }
      this.onViewChanged({ view: candidate }, event2);
    };
    return BusViewService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/DOMService.js
var DOMService = (
  /** @class */
  function() {
    function DOMService3() {
      this.calendarHeight = 0;
      this.headerHeight = 0;
      this.monthViewHeight = 0;
      this.yearViewHeight = 0;
      this.decadeViewHeight = 0;
      this.centuryViewHeight = 0;
      this.navigationItemHeight = 0;
      this.scrollableContentHeight = 0;
      this.scrollableYearContentHeight = 0;
      this.calendarWidth = 0;
      this.monthViewWidth = 0;
      this.yearViewWidth = 0;
      this.decadeViewWidth = 0;
      this.centuryViewWidth = 0;
      this.scrollableContentWidth = 0;
      this.didCalculate = false;
      this.hostContainer = null;
    }
    DOMService3.prototype.ensureHeights = function() {
      if (this.calendarHeight !== void 0) {
        return;
      }
      this.calculateHeights();
    };
    DOMService3.prototype.calculateHeights = function(container) {
      var _this3 = this;
      if (!canUseDOM) {
        return;
      }
      var div = domContainerFactory("div");
      var ul = domContainerFactory("ul");
      var li = domContainerFactory("li");
      var td = domContainerFactory("td");
      var th = domContainerFactory("th");
      var tr = domContainerFactory("tr");
      var tbody = domContainerFactory("tbody");
      var thead = domContainerFactory("thead");
      var table = domContainerFactory("table");
      var monthHeader = function() {
        return div('\n            <span class="k-button k-button-md k-button-rectangle k-button-solid k-button-solid-base k-button-flat k-calendar-title">\n                <span className="k-button-text">March 2017</span>\n            </span>\n            <span class="k-spacer"></span>\n            <span class="k-calendar-nav k-hstack"><button class="k-calendar-nav-today">TODAY</button></span>\n        ', "k-calendar-header k-hstack");
      };
      var monthWeekHeader = function() {
        return table([
          thead([
            tr([th("MO", "k-calendar-th")], "k-calendar-tr")
          ], "k-calendar-thead")
        ], "k-calendar-table k-calendar-weekdays");
      };
      var repeat = function(count2, mapper) {
        return new Array(count2).fill("1").map(mapper);
      };
      var content = function(rows, cells) {
        if (cells === void 0) {
          cells = 1;
        }
        return table([
          tbody([tr([td("1", "k-calendar-td k-alt")])].concat(repeat(rows, function() {
            return tr(repeat(cells, function(c) {
              return td('<span class="k-link">'.concat(c, "</span>"), "k-calendar-td");
            }), "k-calendar-tr");
          })), "k-calendar-tbody")
        ], "k-calendar-table");
      };
      var scrollable = function(children2) {
        return div(children2, "k-content k-calendar-content k-scrollable");
      };
      var view = function(contentElement, className, renderWeekHeader) {
        return div(renderWeekHeader ? [
          monthHeader(),
          monthWeekHeader(),
          scrollable([contentElement, contentElement])
        ] : [
          monthHeader(),
          scrollable([contentElement, contentElement])
        ], className, { left: "-10000px", position: "absolute" });
      };
      var navigationList = function() {
        var navElement;
        return function() {
          if (!canUseDOM) {
            return null;
          }
          if (!navElement) {
            navElement = div([scrollable([ul([li("<span>FEB</span>")])])], "k-calendar-navigation", { left: "0px", position: "absolute" });
          }
          return navElement;
        };
      }();
      var viewFactory = function(_a14, className, renderWeekHeader) {
        var cells = _a14.cells, rows = _a14.rows;
        var viewElement;
        return function() {
          if (!canUseDOM) {
            return null;
          }
          if (!viewElement) {
            viewElement = view(content(rows, cells), className, renderWeekHeader);
          }
          return viewElement;
        };
      };
      var getScrollable = function(element6) {
        return element6.querySelector(".k-scrollable");
      };
      var horizontal = function(element6) {
        var scrollableElement = getScrollable(element6);
        scrollableElement.className = "".concat(scrollableElement.className, " k-scrollable-horizontal");
        return element6;
      };
      var monthView = viewFactory({ cells: 7, rows: 6 }, "k-calendar-view k-calendar-monthview k-vstack", true);
      var yearView = viewFactory({ cells: 5, rows: 3 }, "k-calendar-view k-calendar-yearview", false);
      var decadeView = viewFactory({ cells: 5, rows: 2 }, "k-calendar-view k-calendar-decadeview", false);
      var horzMonthView = function() {
        return horizontal(monthView());
      };
      var horzYearView = function() {
        return horizontal(yearView());
      };
      var horzDecadeView = function() {
        return horizontal(decadeView());
      };
      var height = function(element6) {
        return parseFloat(window.getComputedStyle(element6).height) || element6.offsetHeight;
      };
      var width = function(element6) {
        var styles6 = window.getComputedStyle(element6);
        var computed = parseFloat(styles6.width) + parseFloat(styles6.paddingLeft) + parseFloat(styles6.paddingRight);
        return computed || element6.offsetWidth;
      };
      var getBody = function(element6) {
        return element6.querySelector("tbody");
      };
      this.didCalculate = true;
      if (container) {
        this.hostContainer = container;
      }
      this.batch(monthView(), function(contentElement) {
        var viewElement = getBody(contentElement);
        _this3.calendarHeight = height(contentElement);
        _this3.monthViewHeight = height(viewElement);
        _this3.headerHeight = height(viewElement.children[0]);
        _this3.scrollableContentHeight = height(getScrollable(contentElement));
      });
      this.batch(horzMonthView(), function(contentElement) {
        var viewElement = getBody(contentElement);
        _this3.calendarWidth = width(contentElement);
        _this3.monthViewWidth = width(viewElement);
        _this3.scrollableContentWidth = width(getScrollable(contentElement));
      });
      this.batch(yearView(), function(contentElement) {
        _this3.yearViewHeight = height(getBody(contentElement));
        _this3.scrollableYearContentHeight = height(getScrollable(contentElement));
      });
      this.batch(horzYearView(), function(contentElement) {
        _this3.yearViewWidth = width(getBody(contentElement));
      });
      this.batch(decadeView(), function(contentElement) {
        _this3.decadeViewHeight = height(getBody(contentElement));
        _this3.centuryViewHeight = _this3.decadeViewHeight;
      });
      this.batch(horzDecadeView(), function(contentElement) {
        _this3.decadeViewWidth = width(getBody(contentElement));
        _this3.centuryViewWidth = _this3.decadeViewWidth;
      });
      this.batch(navigationList(), function(contentElement) {
        _this3.navigationItemHeight = height(contentElement.querySelector("li"));
      });
    };
    DOMService3.prototype.viewHeight = function(viewType) {
      return this.viewDimension(viewType, "height");
    };
    DOMService3.prototype.viewWidth = function(viewType) {
      return this.viewDimension(viewType, "width");
    };
    DOMService3.prototype.viewDimension = function(viewType, dimension) {
      var viewProp = dimension === "height" ? "ViewHeight" : "ViewWidth";
      switch (viewType) {
        case CalendarViewEnum.month:
          return this["month".concat(viewProp)];
        case CalendarViewEnum.year:
          return this["year".concat(viewProp)];
        case CalendarViewEnum.decade:
          return this["decade".concat(viewProp)];
        case CalendarViewEnum.century:
          return this["century".concat(viewProp)];
        default:
          return 1;
      }
    };
    DOMService3.prototype.batch = function(contentElement, action) {
      var hostContainer = this.hostContainer || document.body;
      var appendedContent = hostContainer.appendChild(contentElement);
      action(appendedContent);
      hostContainer.removeChild(appendedContent);
    };
    return DOMService3;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/NavigationService.js
var KEY_TO_ACTION = {
  "33": Action.PrevView,
  "34": Action.NextView,
  "35": Action.LastInView,
  "36": Action.FirstInView,
  "37": Action.Left,
  "38": Action.Up,
  "39": Action.Right,
  "40": Action.Down,
  "meta+38": Action.UpperView,
  "meta+40": Action.LowerView
};
var NavigationService = (
  /** @class */
  function() {
    function NavigationService2(bus) {
      this.bus = bus;
    }
    NavigationService2.prototype.action = function(event2) {
      var action = "".concat(event2.ctrlKey || event2.metaKey ? "meta+" : "").concat(event2.keyCode);
      return KEY_TO_ACTION[action];
    };
    NavigationService2.prototype.move = function(value2, action, activeView, service, event2) {
      if (!service) {
        return value2;
      }
      if (action === Action.UpperView && this.bus.canMoveUp(activeView)) {
        this.bus.moveUp(activeView, event2);
        return value2;
      }
      if (action === Action.LowerView && this.bus.canMoveDown(activeView)) {
        this.bus.moveDown(activeView, event2);
        return value2;
      }
      return service.move(value2, action);
    };
    return NavigationService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/ScrollSyncService.js
var divideByMagnitude = function(magnitude) {
  return function(x) {
    return Math.floor(x / magnitude);
  };
};
var powerByMagnitude = function(magnitude) {
  return function(x) {
    return x * magnitude;
  };
};
var ScrollSyncService = (
  /** @class */
  function() {
    function ScrollSyncService2(dom) {
      this.dom = dom;
      this.divideByMagnitude = null;
      this.powerByMagnitude = null;
      this.navigator = null;
      this.view = null;
      this.monthScrolled = false;
      this.navScrolled = false;
    }
    ScrollSyncService2.prototype.configure = function(activeView) {
      var magnitude = Math.max(this.dom.viewHeight(activeView) / this.dom.navigationItemHeight, 1);
      this.divideByMagnitude = divideByMagnitude(magnitude);
      this.powerByMagnitude = powerByMagnitude(magnitude);
    };
    ScrollSyncService2.prototype.sync = function(navigator2, view, e) {
      if (!navigator2 || !view) {
        return;
      }
      this.navigator = navigator2;
      this.view = view;
      if (e.target === this.navigator.element) {
        if (this.monthScrolled) {
          this.monthScrolled = false;
          return;
        }
        this.navScrolled = true;
        this.scrollSiblingOf(this.navigator.element);
      }
      if (e.target === this.view.element) {
        if (this.navScrolled) {
          this.navScrolled = false;
          return;
        }
        this.monthScrolled = true;
        this.scrollSiblingOf(this.view.element);
      }
    };
    ScrollSyncService2.prototype.scrollSiblingOf = function(scrolledElement) {
      var component = this.siblingComponent(scrolledElement);
      var scrollTop = this.calculateScroll(component, scrolledElement.scrollTop);
      component.scrollTo(scrollTop);
    };
    ScrollSyncService2.prototype.siblingComponent = function(scrollableElement) {
      return this.navigator.element === scrollableElement ? this.view : this.navigator;
    };
    ScrollSyncService2.prototype.calculateScroll = function(component, scrollTop) {
      var modifier = component === this.navigator ? this.divideByMagnitude : this.powerByMagnitude;
      return modifier ? modifier(scrollTop) : 0;
    };
    return ScrollSyncService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/services/WeekNamesService.js
var WeekNamesService = (
  /** @class */
  function() {
    function WeekNamesService2(intl) {
      this.intl = intl;
    }
    WeekNamesService2.prototype.getWeekNames = function(includeWeekNumber) {
      if (includeWeekNumber === void 0) {
        includeWeekNumber = false;
      }
      var weekNames = shiftWeekNames(this.intl.dateFormatNames({ nameType: "short", type: "days" }), this.intl.firstDay());
      return includeWeekNumber ? [""].concat(weekNames) : weekNames;
    };
    return WeekNamesService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/View.js
var React51 = __toESM(require_react());
var PropTypes19 = __toESM(require_prop_types());
var __extends15 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign27 = function() {
  __assign27 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign27.apply(this, arguments);
};
var emptyCell = function(idx) {
  return React51.createElement("td", { key: idx, className: "k-calendar-td" }, "\xA0");
};
var View = (
  /** @class */
  function(_super) {
    __extends15(View2, _super);
    function View2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.intl = null;
      _this3.weekService = null;
      _this3.buildWeekNumber = function(row, idx) {
        var firstDayOfWeek = _this3.firstDate(row);
        if (!firstDayOfWeek) {
          return emptyCell("week-cell-".concat(idx));
        }
        var firstDate = _this3.firstDate(row);
        var weekCellValue = _this3.getWeekNumber(firstDate);
        var uniqueID = "kendo-react-calendar-week-cell-".concat(weekCellValue);
        var cellProps = {
          className: "k-alt",
          value: weekCellValue,
          firstDate
        };
        return _this3.props.weekCell ? React51.createElement(_this3.props.weekCell, __assign27({}, cellProps, { key: uniqueID }), weekCellValue) : React51.createElement(CalendarWeekCell, __assign27({}, cellProps, { key: uniqueID }), weekCellValue);
      };
      _this3.buildRow = function(row) {
        return row.map(function(cell, idx) {
          if (!cell) {
            return emptyCell(idx);
          }
          var aria = { "aria-selected": cell.isSelected };
          var uniqueID = "kendo-react-calendar-cell-".concat(cell.value.getTime());
          var cellProps = __assign27(__assign27(__assign27({}, aria), cell), { isDisabled: !cell.isInRange, view: _this3.props.activeView, onClick: _this3.handleClick, onMouseEnter: _this3.handleMouseEnter, onMouseLeave: _this3.handleMouseLeave });
          return _this3.props.cell ? React51.createElement(_this3.props.cell, __assign27({}, cellProps, { key: uniqueID }), cell.formattedValue) : React51.createElement(CalendarCell, __assign27({}, cellProps, { key: uniqueID }), cell.formattedValue);
        });
      };
      _this3.firstDate = function(row) {
        var cell = _this3.firstWeekDateContext(row);
        return cell ? cell.value : null;
      };
      _this3.firstWeekDateContext = function(rowCtx) {
        if (!_this3.weekNumber) {
          return null;
        }
        var idx = 0;
        var ctx = rowCtx[idx];
        while (!ctx && idx < rowCtx.length) {
          ctx = rowCtx[++idx];
        }
        return ctx;
      };
      _this3.handleClick = function(value2, event2) {
        var onChange = _this3.props.onChange;
        if (onChange && event2) {
          var args = {
            value: cloneDate(value2),
            target: _this3,
            nativeEvent: event2 && event2.nativeEvent,
            syntheticEvent: event2
          };
          onChange.call(void 0, args);
        }
      };
      _this3.handleMouseEnter = function(value2) {
        var onCellEnter = _this3.props.onCellEnter;
        if (onCellEnter) {
          onCellEnter.call(void 0, cloneDate(value2));
        }
      };
      _this3.handleMouseLeave = function(value2) {
        var onCellLeave = _this3.props.onCellLeave;
        if (onCellLeave) {
          onCellLeave.call(void 0, cloneDate(value2));
        }
      };
      return _this3;
    }
    Object.defineProperty(View2.prototype, "min", {
      get: function() {
        return this.props.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(View2.prototype, "max", {
      get: function() {
        return this.props.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(View2.prototype, "isHorizontal", {
      get: function() {
        return this.props.direction === "horizontal";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(View2.prototype, "isMonthView", {
      get: function() {
        return this.props.activeView === CalendarViewEnum.month;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(View2.prototype, "weekNumber", {
      get: function() {
        return Boolean(this.props.showWeekNumbers && this.props.activeView === CalendarViewEnum.month);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(View2.prototype, "selectedDate", {
      get: function() {
        return this.props.selectedDate !== void 0 ? this.props.selectedDate : View2.defaultProps.selectedDate;
      },
      enumerable: false,
      configurable: true
    });
    View2.prototype.render = function() {
      var _this3 = this;
      this.intl = provideIntlService(this);
      this.weekService = new WeekNamesService(this.intl);
      var weekNames = this.weekService.getWeekNames(this.weekNumber);
      var colSpan = this.props.service.rowLength(this.weekNumber);
      var title = this.props.service.title(this.props.viewDate);
      var time2 = getToday2();
      var viewDate = setTime2(this.props.viewDate, time2);
      var data2 = this.props.service.data({
        cellUID: this.props.cellUID,
        min: this.min,
        max: this.max,
        focusedDate: this.props.focusedDate,
        isActiveView: !this.props.bus.canMoveDown(this.props.activeView),
        selectedDate: this.selectedDate,
        selectionRange: this.props.selectionRange,
        viewDate
      });
      return React51.createElement(
        React51.Fragment,
        null,
        this.isMonthView && this.isHorizontal && React51.createElement(
          "thead",
          { role: "rowgroup", className: "k-calendar-thead" },
          React51.createElement("tr", { role: "row", className: "k-calendar-tr" }, weekNames.map(function(name2, idx) {
            return React51.createElement("th", { key: idx, className: "k-calendar-th" }, name2);
          }))
        ),
        React51.createElement(
          "tbody",
          { role: "rowgroup", className: "k-calendar-tbody" },
          !this.isHorizontal && React51.createElement(
            "tr",
            { role: "presentation", className: "k-calendar-tr" },
            React51.createElement("th", { scope: "col", colSpan, className: "k-calendar-caption" }, title)
          ),
          data2.map(function(row, idx) {
            return React51.createElement(
              "tr",
              { role: "row", className: "k-calendar-tr", key: idx },
              _this3.weekNumber && _this3.buildWeekNumber(row, idx),
              _this3.buildRow(row)
            );
          })
        )
      );
    };
    View2.prototype.getWeekNumber = function(date2) {
      if (!this.weekNumber || !this.intl) {
        return null;
      }
      return weekInYear(date2, this.intl.firstDay());
    };
    View2.propTypes = {
      activeRangeEnd: PropTypes19.oneOf(["start", "end", null]),
      activeView: PropTypes19.number.isRequired,
      cellUID: PropTypes19.string.isRequired,
      direction: PropTypes19.oneOf(["horizontal", "vertical"]),
      focusedDate: PropTypes19.instanceOf(Date).isRequired,
      max: PropTypes19.instanceOf(Date).isRequired,
      min: PropTypes19.instanceOf(Date).isRequired,
      onChange: PropTypes19.func,
      selectedDate: PropTypes19.oneOfType([PropTypes19.instanceOf(Date), PropTypes19.arrayOf(PropTypes19.instanceOf(Date))]),
      showWeekNumbers: PropTypes19.bool,
      viewDate: PropTypes19.instanceOf(Date).isRequired
    };
    View2.defaultProps = {
      direction: "vertical",
      selectedDate: getToday2(),
      showWeekNumbers: false
    };
    return View2;
  }(React51.Component)
);
registerForIntl(View);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/CalendarHeaderTitle.js
var React52 = __toESM(require_react());
var __extends16 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign28 = function() {
  __assign28 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign28.apply(this, arguments);
};
var __rest14 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CalendarHeaderTitle = (
  /** @class */
  function(_super) {
    __extends16(CalendarHeaderTitle2, _super);
    function CalendarHeaderTitle2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    CalendarHeaderTitle2.prototype.render = function() {
      var _a14 = this.props, view = _a14.view, props = __rest14(_a14, ["view"]);
      return React52.createElement(Button, __assign28({ type: "button", fillMode: "flat" }, props), this.props.children);
    };
    return CalendarHeaderTitle2;
  }(React52.PureComponent)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/Header.js
var React53 = __toESM(require_react());
var PropTypes20 = __toESM(require_prop_types());
var __extends17 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign29 = function() {
  __assign29 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign29.apply(this, arguments);
};
var Header = (
  /** @class */
  function(_super) {
    __extends17(Header2, _super);
    function Header2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.getTitle = function() {
        if (!_this3.props.currentDate) {
          return "";
        }
        var take3 = _this3.rangeLength - 1;
        var title = _this3.props.service.title(_this3.props.currentDate);
        var nextDate = _this3.props.service.addToDate(_this3.props.currentDate, take3);
        if (take3 < 1 || !_this3.props.service.isInRange(nextDate, _this3.min, _this3.max)) {
          return title;
        }
        return "".concat(title, " - ").concat(_this3.props.service.title(nextDate));
      };
      _this3.handleTitleClick = function(event2) {
        if (!_this3.canMoveUp) {
          return;
        }
        _this3.props.bus.moveUp(_this3.props.activeView, event2);
      };
      return _this3;
    }
    Object.defineProperty(Header2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : Header2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Header2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : Header2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Header2.prototype, "rangeLength", {
      get: function() {
        return this.props.rangeLength !== void 0 ? this.props.rangeLength : Header2.defaultProps.rangeLength;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Header2.prototype, "canMoveUp", {
      get: function() {
        return this.props.bus.canMoveUp(this.props.activeView);
      },
      enumerable: false,
      configurable: true
    });
    Header2.prototype.render = function() {
      var title = this.getTitle();
      var titleClassNames = classNames("k-calendar-title");
      var headerTitleProps = {
        children: title,
        value: title,
        view: this.props.activeView,
        className: titleClassNames,
        onClick: this.handleTitleClick,
        disabled: !this.canMoveUp
      };
      var headerTitle = this.props.headerTitle ? React53.createElement(this.props.headerTitle, __assign29({}, headerTitleProps), title) : React53.createElement(CalendarHeaderTitle, __assign29({}, headerTitleProps), title);
      return React53.createElement(
        "div",
        { className: classNames("k-calendar-header", {
          "k-vstack": this.props.verticalView,
          "k-hstack": !this.props.verticalView
        }) },
        headerTitle,
        React53.createElement("span", { className: "k-spacer" }),
        React53.createElement("span", { className: "k-calendar-nav k-hstack" }, this.props.commands)
      );
    };
    Header2.propTypes = {
      activeView: PropTypes20.number.isRequired,
      currentDate: PropTypes20.instanceOf(Date).isRequired,
      max: PropTypes20.instanceOf(Date).isRequired,
      min: PropTypes20.instanceOf(Date).isRequired,
      rangeLength: PropTypes20.number
    };
    Header2.defaultProps = {
      rangeLength: 1,
      min: MIN_DATE2,
      max: MAX_DATE2
    };
    return Header2;
  }(React53.Component)
);
registerForLocalization(Header);

// node_modules/@progress/kendo-react-dateinputs/dist/es/messages/index.js
var _a8;
var prevView = "multiviewcalendar.prevView";
var nextView = "multiviewcalendar.nextView";
var increaseValue = "dateinput.increment";
var decreaseValue = "dateinput.decrement";
var today2 = "calendar.today";
var toggleCalendar = "datepicker.toggleCalendar";
var swapStartEnd = "daterangepicker.swapStartEnd";
var start = "daterangepicker.start";
var end = "daterangepicker.end";
var separator = "daterangepicker.separator";
var toggleDateTimeSelector = "datetimepicker.toggleDateTimeSelector";
var now = "timepicker.now";
var selectNow = "timepicker.selectNow";
var timePickerCancel = "timepicker.cancel";
var timePickerSet = "timepicker.set";
var toggleTimeSelector = "timepicker.toggleTimeSelector";
var toggleClock = "timepicker.toggleClock";
var date = "datetimepicker.date";
var time = "datetimepicker.time";
var dateTimePickerCancel = "datetimepicker.cancel";
var dateTimePickerSet = "datetimepicker.set";
var dateRangePickerCancel = "daterangepicker.cancel";
var dateRangePickerSet = "daterangepicker.set";
var messages3 = (_a8 = {}, _a8[today2] = "TODAY", _a8[now] = "NOW", _a8[timePickerSet] = "Set", _a8[timePickerCancel] = "Cancel", _a8[date] = "Date", _a8[time] = "Time", _a8[dateTimePickerCancel] = "Cancel", _a8[dateTimePickerSet] = "Set", _a8[dateRangePickerCancel] = "Cancel", _a8[dateRangePickerSet] = "Set", _a8[start] = "Start", _a8[end] = "End", _a8[separator] = " ", _a8[selectNow] = "Select Now", _a8[toggleTimeSelector] = "Toggle TimeSelector", _a8[toggleClock] = "Toggle Clock", _a8[increaseValue] = "Increase value", _a8[decreaseValue] = "Decrease value", _a8[toggleCalendar] = "Toggle calendar", _a8[prevView] = "Navigate to previous view", _a8[nextView] = "Navigate to next view", _a8[swapStartEnd] = "Swap start and end values", _a8[toggleDateTimeSelector] = "Toggle date-time selector", _a8);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/TodayCommand.js
var React54 = __toESM(require_react());
var PropTypes21 = __toESM(require_prop_types());
var __extends18 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TodayCommand = (
  /** @class */
  function(_super) {
    __extends18(TodayCommand2, _super);
    function TodayCommand2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.localization = null;
      _this3.handleClick = function(syntheticEvent) {
        if (!_this3.todayIsInRange) {
          return;
        }
        if (_this3.props.onClick) {
          var event_1 = {
            syntheticEvent,
            nativeEvent: syntheticEvent.nativeEvent,
            value: dateInRange(getToday2(), _this3.min, _this3.max),
            target: _this3,
            isTodayClick: true
          };
          _this3.props.onClick.call(void 0, event_1);
        }
      };
      return _this3;
    }
    Object.defineProperty(TodayCommand2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : TodayCommand2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TodayCommand2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : TodayCommand2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TodayCommand2.prototype, "todayIsInRange", {
      get: function() {
        return isInRange(getToday2(), getDate(this.min), getDate(this.max));
      },
      enumerable: false,
      configurable: true
    });
    TodayCommand2.prototype.render = function() {
      this.localization = provideLocalizationService(this);
      var todayMessage = this.localization.toLanguageString(today2, messages3[today2]);
      var todayClassNames = classNames("k-calendar-nav-today", {
        "k-disabled": this.props.disabled
      });
      return React54.createElement(Button, { className: todayClassNames, onClick: this.handleClick, tabIndex: this.props.tabIndex, fillMode: "flat" }, todayMessage);
    };
    TodayCommand2.propTypes = {
      max: PropTypes21.instanceOf(Date).isRequired,
      min: PropTypes21.instanceOf(Date).isRequired,
      onClick: PropTypes21.func,
      disabled: PropTypes21.bool
    };
    TodayCommand2.defaultProps = {
      min: MIN_DATE2,
      max: MAX_DATE2
    };
    return TodayCommand2;
  }(React54.Component)
);
registerForLocalization(TodayCommand);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/ViewList.js
var React55 = __toESM(require_react());
var PropTypes22 = __toESM(require_prop_types());
var __extends19 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var VIEWS_COUNT = 5;
var ViewList = (
  /** @class */
  function(_super) {
    __extends19(ViewList2, _super);
    function ViewList2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.virtualization = null;
      _this3.calendarView = null;
      _this3.table = null;
      _this3.intl = null;
      _this3.bottomOffset = 0;
      _this3.viewOffset = 0;
      _this3.viewHeight = 0;
      _this3.i = null;
      _this3.isActive = false;
      _this3.animateToIndex = true;
      _this3.shouldScroll = false;
      _this3.focusActiveDate = function() {
        if (!_this3.i) {
          return;
        }
        var focusedCell = _this3.i.querySelector("td.k-focus");
        var nextActiveCell = _this3.i.querySelector(".k-state-pending-focus");
        if (focusedCell && focusedCell[0]) {
          focusedCell[0].classList.remove("k-focus");
        }
        if (nextActiveCell) {
          nextActiveCell.classList.add("k-focus");
        }
        _this3.isActive = true;
      };
      _this3.blurActiveDate = function() {
        if (!_this3.i) {
          return;
        }
        var focusedCell = _this3.i.querySelector("td.k-focus");
        if (focusedCell) {
          focusedCell.classList.remove("k-focus");
        }
        _this3.isActive = false;
      };
      _this3.handleVirtualizationMount = function(virtualization) {
        _this3.virtualization = virtualization;
        if (_this3.virtualization && _this3.table) {
          _this3.table.style.transform = "translateY(".concat(_this3.viewOffset, "px)");
          var viewDate = dateInRange(_this3.props.focusedDate, _this3.props.min, _this3.props.max);
          var indexToScroll = _this3.props.service.skip(viewDate, _this3.props.min);
          _this3.virtualization.scrollToIndex(indexToScroll);
        }
      };
      _this3.buildMonthView = function(cols, weekNames) {
        return React55.createElement(
          "table",
          { key: "calendar-view-list-weekdays", className: "k-calendar-table k-calendar-weekdays", role: "grid", tabIndex: _this3.props.tabIndex },
          React55.createElement("colgroup", null, cols.map(function(_2, idx) {
            return React55.createElement("col", { key: idx });
          })),
          React55.createElement(
            "thead",
            { className: "k-calendar-thead" },
            React55.createElement("tr", { className: "k-calendar-tr" }, weekNames.map(function(name2, idx) {
              return React55.createElement("th", { key: idx, className: "k-calendar-th" }, name2);
            }))
          )
        );
      };
      _this3.buildDates = function(cols, dates) {
        var cellUID = _this3.props.cellUID;
        return React55.createElement(
          "table",
          { className: "k-calendar-table", ref: function(table) {
            return _this3.table = table;
          }, role: "grid", tabIndex: _this3.props.tabIndex, "aria-activedescendant": cellUID + _this3.props.focusedDate.getTime() },
          React55.createElement("colgroup", null, cols.map(function(_2, idx) {
            return React55.createElement("col", { key: idx });
          })),
          dates.map(function(date2) {
            return React55.createElement(View, { ref: function(el) {
              if (!_this3.calendarView) {
                _this3.calendarView = el;
              }
            }, key: date2.getTime(), activeView: _this3.props.activeView, viewDate: date2, min: _this3.props.min, max: _this3.props.max, cellUID, focusedDate: _this3.props.focusedDate, cell: _this3.props.cell, selectedDate: _this3.props.value, showWeekNumbers: _this3.weekNumber, onChange: _this3.handleDateChange, bus: _this3.props.bus, service: _this3.props.service, weekCell: _this3.props.weekCell });
          })
        );
      };
      _this3.calculateHeights = function() {
        if (!_this3.props.dom) {
          return;
        }
        var scrollableHeight = _this3.props.activeView === CalendarViewEnum.month ? _this3.props.dom.scrollableContentHeight : _this3.props.dom.scrollableYearContentHeight;
        _this3.bottomOffset = scrollableHeight - _this3.props.dom.viewHeight(_this3.props.activeView);
        _this3.viewOffset = -1 * _this3.props.dom.headerHeight;
        _this3.viewHeight = _this3.props.dom.viewHeight(_this3.props.activeView) || 1;
      };
      _this3.getTake = function(skip3, total) {
        return Math.min(total - skip3, _this3.take);
      };
      _this3.handleScrollAction = function(_a14) {
        var index = _a14.index, scrollAction = _a14.scrollAction, pageAction = _a14.pageAction;
        var skip3 = pageAction ? pageAction.skip : _this3.state.skip;
        if (_this3.state.index !== index || _this3.state.skip !== skip3) {
          _this3.setState({ index, skip: skip3 });
        }
        if (_this3.table && scrollAction) {
          var translate = "translateY(".concat(scrollAction.offset, "px)");
          _this3.table.style.transform = translate;
        }
      };
      _this3.handleTodayClick = function(event2) {
        _this3.shouldScroll = true;
        _this3.handleDateChange.call(void 0, event2, true);
      };
      _this3.handleDateChange = function(event2, isTodayClick) {
        if (isTodayClick === void 0) {
          isTodayClick = false;
        }
        var onChange = _this3.props.onChange;
        if (onChange) {
          var args = {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: cloneDate(event2.value),
            target: _this3,
            isTodayClick
          };
          onChange.call(void 0, args);
        }
      };
      _this3.lastView = _this3.props.activeView;
      _this3.lastFocus = _this3.props.focusedDate;
      _this3.state = {
        skip: _this3.props.service.skip(_this3.props.focusedDate, _this3.props.min),
        index: _this3.props.service.skip(_this3.props.focusedDate, _this3.props.min)
      };
      return _this3;
    }
    Object.defineProperty(ViewList2.prototype, "element", {
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ViewList2.prototype, "weekNames", {
      get: function() {
        this.intl = provideIntlService(this);
        var weekNames = shiftWeekNames(this.intl.dateFormatNames({ nameType: "short", type: "days" }), this.intl.firstDay());
        return this.weekNumber ? [""].concat(weekNames) : weekNames;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ViewList2.prototype, "weekNumber", {
      get: function() {
        return Boolean(this.props.showWeekNumbers && this.props.activeView === CalendarViewEnum.month);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ViewList2.prototype, "take", {
      get: function() {
        return this.props.take !== void 0 ? this.props.take : ViewList2.defaultProps.take;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ViewList2.prototype, "animate", {
      get: function() {
        return Boolean(this.props.smoothScroll && this.animateToIndex);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ViewList2.prototype, "todayIsInRange", {
      get: function() {
        return isInRange(getToday2(), getDate(this.props.min), getDate(this.props.max));
      },
      enumerable: false,
      configurable: true
    });
    ViewList2.prototype.componentDidUpdate = function(_prevProps, _prevState) {
      this.shouldScroll = false;
      if (this.indexToScroll !== void 0 && this.virtualization) {
        this.virtualization[this.animate ? "animateToIndex" : "scrollToIndex"](this.indexToScroll);
      }
      if (this.isActive) {
        this.focusActiveDate();
      }
      this.lastView = this.props.activeView;
      this.indexToScroll = void 0;
    };
    ViewList2.prototype.render = function() {
      var _this3 = this;
      this.calculateHeights();
      var didViewChange = this.lastView !== this.props.activeView;
      var focusedDate = dateInRange(this.props.focusedDate, this.props.min, this.props.max);
      var skip3 = !didViewChange ? this.state.skip : this.props.service.skip(focusedDate, this.props.min);
      var total = this.props.service.total(this.props.min, this.props.max);
      var take3 = this.getTake(skip3, total);
      var viewDate = this.props.service.addToDate(this.props.min, skip3);
      var activeDate = this.props.service.addToDate(this.props.min, this.state.index);
      var cols = new Array(this.props.service.rowLength(this.weekNumber)).fill("");
      var didViewChanged = this.props.activeView !== this.lastView;
      this.animateToIndex = !didViewChanged;
      if (didViewChanged || !isEqualDate(this.lastFocus, focusedDate) || this.shouldScroll || (!this.props.shouldScroll || this.props.shouldScroll())) {
        this.indexToScroll = this.props.service.skip(focusedDate, this.props.min);
      }
      this.lastFocus = focusedDate;
      var rootClassNames = classNames("k-calendar-view k-vstack", {
        "k-calendar-monthview": this.props.activeView === CalendarViewEnum.month,
        "k-calendar-yearview": this.props.activeView === CalendarViewEnum.year,
        "k-calendar-decadeview": this.props.activeView === CalendarViewEnum.decade,
        "k-calendar-centuryview": this.props.activeView === CalendarViewEnum.century
      });
      var dates = this.buildDates(cols, this.props.service.datesList(viewDate, take3));
      var viewListBody = React55.createElement(
        React55.Fragment,
        null,
        React55.createElement(Header, { key: "calendar-view-list-header", currentDate: activeDate, min: this.props.min, max: this.props.max, activeView: this.props.activeView, bus: this.props.bus, service: this.props.service, headerTitle: this.props.headerTitle, commands: React55.createElement(
          React55.Fragment,
          null,
          React55.createElement(TodayCommand, { min: this.props.min, max: this.props.max, onClick: this.handleTodayClick, disabled: !this.todayIsInRange, tabIndex: this.props.tabIndex })
        ) }),
        this.props.activeView === CalendarViewEnum.month && this.buildMonthView(cols, this.weekNames),
        React55.createElement(Virtualization, { key: "calendar-view-list-content", skip: skip3, take: this.take, total, itemHeight: this.viewHeight, topOffset: this.viewOffset, bottomOffset: this.bottomOffset, scrollOffsetSize: this.viewOffset, maxScrollDifference: this.viewHeight, onScroll: this.props.onScroll, onScrollAction: this.handleScrollAction, onMount: this.handleVirtualizationMount, children: dates, tabIndex: this.props.tabIndex })
      );
      return React55.createElement("div", { ref: function(el) {
        _this3.i = el;
      }, className: rootClassNames }, this.props.dom.didCalculate ? viewListBody : null);
    };
    ViewList2.propTypes = {
      activeView: PropTypes22.number.isRequired,
      bottomOffset: PropTypes22.number,
      cellUID: PropTypes22.string.isRequired,
      focusedDate: PropTypes22.instanceOf(Date).isRequired,
      max: PropTypes22.instanceOf(Date).isRequired,
      min: PropTypes22.instanceOf(Date).isRequired,
      onChange: PropTypes22.func,
      showWeekNumbers: PropTypes22.bool,
      smoothScroll: PropTypes22.bool,
      take: PropTypes22.number,
      value: PropTypes22.instanceOf(Date),
      viewHeight: PropTypes22.number,
      viewOffset: PropTypes22.number,
      tabIndex: PropTypes22.number
    };
    ViewList2.defaultProps = {
      take: VIEWS_COUNT,
      showWeekNumbers: false,
      smoothScroll: true
    };
    return ViewList2;
  }(React55.Component)
);
registerForIntl(ViewList);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/CalendarNavigationItem.js
var React56 = __toESM(require_react());
var __extends20 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign30 = function() {
  __assign30 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign30.apply(this, arguments);
};
var __rest15 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CalendarNavigationItem = (
  /** @class */
  function(_super) {
    __extends20(CalendarNavigationItem2, _super);
    function CalendarNavigationItem2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.handleClick = function(event2) {
        var _a14 = _this3.props, onClick = _a14.onClick, value2 = _a14.value;
        if (onClick) {
          onClick.call(void 0, value2, event2);
        }
      };
      return _this3;
    }
    CalendarNavigationItem2.prototype.render = function() {
      var _a14 = this.props, isRangeStart = _a14.isRangeStart, value2 = _a14.value, text = _a14.text, other = __rest15(_a14, ["isRangeStart", "value", "text"]);
      return React56.createElement(
        "li",
        __assign30({}, other, { onClick: this.handleClick }),
        React56.createElement("span", { className: classNames({ "k-calendar-navigation-marker": isRangeStart }) }, this.props.children)
      );
    };
    return CalendarNavigationItem2;
  }(React56.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/Navigation.js
var React57 = __toESM(require_react());
var PropTypes23 = __toESM(require_prop_types());
var __extends21 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign31 = function() {
  __assign31 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign31.apply(this, arguments);
};
var ITEMS_COUNT = 30;
var Navigation2 = (
  /** @class */
  function(_super) {
    __extends21(Navigation4, _super);
    function Navigation4(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.virtualization = null;
      _this3.list = null;
      _this3.itemHeight = 0;
      _this3.topOffset = 0;
      _this3.maxViewHeight = 0;
      _this3.bottomOffset = 0;
      _this3.handleVirtualizationMount = function(virtualization) {
        _this3.virtualization = virtualization;
        if (_this3.virtualization && _this3.list) {
          _this3.list.style.transform = "translateY(".concat(_this3.topOffset, "px)");
          var viewDate = dateInRange(_this3.props.focusedDate, _this3.props.min, _this3.props.max);
          var indexToScroll = _this3.props.service.skip(viewDate, _this3.props.min);
          _this3.virtualization.scrollToIndex(indexToScroll);
        }
      };
      _this3.buildNavigationItem = function(date2) {
        var text = _this3.props.service.navigationTitle(date2);
        var isRangeStart = _this3.props.service.isRangeStart(date2);
        var uniqueID = "kendo-react-calendar-nav-item-".concat(date2.getTime());
        var navigationItemProps = {
          text,
          value: date2,
          isRangeStart,
          view: _this3.props.activeView,
          onClick: _this3.handleDateChange
        };
        return _this3.props.navigationItem ? React57.createElement(_this3.props.navigationItem, __assign31({}, navigationItemProps, { key: uniqueID }), text) : React57.createElement(CalendarNavigationItem, __assign31({}, navigationItemProps, { key: uniqueID }), text);
      };
      _this3.calculateHeights = function() {
        var calendarHeight = _this3.props.dom.calendarHeight;
        _this3.itemHeight = _this3.props.dom.navigationItemHeight || 1;
        _this3.maxViewHeight = _this3.props.dom.monthViewHeight;
        _this3.topOffset = (calendarHeight - _this3.itemHeight) / 2;
        _this3.bottomOffset = calendarHeight - _this3.itemHeight;
      };
      _this3.handleDateChange = function(value2, event2) {
        var onChange = _this3.props.onChange;
        if (onChange && event2) {
          var args = {
            value: cloneDate(value2),
            target: _this3,
            nativeEvent: event2 && event2.nativeEvent,
            syntheticEvent: event2
          };
          onChange.call(void 0, args);
        }
      };
      _this3.handleScrollAction = function(_a14) {
        var scrollAction = _a14.scrollAction, pageAction = _a14.pageAction;
        var skip4 = pageAction ? pageAction.skip : _this3.state.skip;
        if (_this3.state.skip !== skip4) {
          _this3.setState({ skip: skip4 });
        }
        if (_this3.list && scrollAction) {
          var translate = "translateY(".concat(scrollAction.offset, "px)");
          _this3.list.style.transform = translate;
        }
      };
      _this3.lastView = _this3.props.activeView;
      _this3.lastFocus = _this3.props.focusedDate;
      var skip3 = _this3.props.service.skip(_this3.props.focusedDate, _this3.props.min);
      var total = _this3.props.service.total(_this3.props.min, _this3.props.max);
      _this3.state = {
        skip: skip3 - _this3.getTake(skip3, total) > 0 ? skip3 : 0
      };
      return _this3;
    }
    Object.defineProperty(Navigation4.prototype, "take", {
      get: function() {
        return this.props.take !== void 0 ? this.props.take : Navigation4.defaultProps.take;
      },
      enumerable: false,
      configurable: true
    });
    Navigation4.prototype.componentDidUpdate = function(_prevProps, _prevState) {
      if (this.indexToScroll !== void 0 && this.virtualization) {
        this.virtualization.scrollToIndex(this.indexToScroll);
      }
      this.lastView = this.props.activeView;
      this.lastFocus = this.props.focusedDate;
      this.indexToScroll = void 0;
    };
    Navigation4.prototype.render = function() {
      var _this3 = this;
      this.calculateHeights();
      var didViewChange = this.lastView !== this.props.activeView;
      var focusedDate = dateInRange(this.props.focusedDate, this.props.min, this.props.max);
      var skip3 = !didViewChange ? this.state.skip : this.props.service.skip(focusedDate, this.props.min);
      var total = this.props.service.total(this.props.min, this.props.max);
      var take3 = this.getTake(skip3, total);
      var viewDate = this.props.service.addToDate(this.props.min, skip3);
      var dates = this.props.service.datesList(viewDate, take3);
      if (this.props.activeView !== this.lastView || !isEqual(focusedDate, this.lastFocus)) {
        this.indexToScroll = this.props.service.skip(focusedDate, this.props.min);
      }
      var navigationBody = React57.createElement(
        Virtualization,
        { skip: skip3, take: this.take, total, itemHeight: this.itemHeight, topOffset: this.topOffset, bottomOffset: this.bottomOffset, onScroll: this.props.onScroll, maxScrollDifference: this.maxViewHeight, onScrollAction: this.handleScrollAction, onMount: this.handleVirtualizationMount, tabIndex: this.props.tabIndex },
        React57.createElement("ul", { ref: function(el) {
          _this3.list = el;
        }, className: "k-reset" }, dates.map(function(date2) {
          return _this3.buildNavigationItem(date2);
        }))
      );
      return React57.createElement(
        "div",
        { className: "k-calendar-navigation" },
        React57.createElement("span", { className: "k-calendar-navigation-highlight" }),
        this.props.dom.didCalculate ? navigationBody : null
      );
    };
    Navigation4.prototype.getTake = function(skip3, total) {
      return Math.min(total - skip3, this.take);
    };
    Navigation4.propTypes = {
      activeView: PropTypes23.number.isRequired,
      focusedDate: PropTypes23.instanceOf(Date).isRequired,
      max: PropTypes23.instanceOf(Date).isRequired,
      min: PropTypes23.instanceOf(Date).isRequired,
      onChange: PropTypes23.func,
      take: PropTypes23.number,
      tabIndex: PropTypes23.number
    };
    Navigation4.defaultProps = {
      take: ITEMS_COUNT
    };
    return Navigation4;
  }(React57.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/Calendar.js
var React58 = __toESM(require_react());
var PropTypes24 = __toESM(require_prop_types());
var __extends22 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var virtualizationProp = function(x) {
  return x ? x.virtualization : null;
};
var calculateValue = function(min, max, stateValue, propValue) {
  if (min === void 0) {
    min = CalendarWithoutContext.defaultProps.min;
  }
  if (max === void 0) {
    max = CalendarWithoutContext.defaultProps.max;
  }
  return propValue !== void 0 ? propValue !== null && isInRange(getDate(propValue), min, max) ? propValue : null : stateValue !== null && isInRange(getDate(stateValue), min, max) ? stateValue : null;
};
var CalendarWithoutContext = (
  /** @class */
  function(_super) {
    __extends22(CalendarWithoutContext2, _super);
    function CalendarWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.scrollSyncService = null;
      _this3.focusedDate = null;
      _this3.cellUID = guid();
      _this3.id = guid();
      _this3.Navigation = null;
      _this3.calendarViewList = null;
      _this3.i = null;
      _this3.intl = null;
      _this3.service = null;
      _this3.isActive = false;
      _this3.didNavigationChange = false;
      _this3.focus = function() {
        if (_this3.i) {
          _this3.i.focus();
        }
      };
      _this3.shouldScroll = function() {
        return _this3.didNavigationChange;
      };
      _this3.handleScroll = function(event2) {
        if (!_this3.scrollSyncService) {
          return;
        }
        _this3.scrollSyncService.sync(virtualizationProp(_this3.Navigation), virtualizationProp(_this3.calendarViewList), event2);
      };
      _this3.handleNavigationChange = function(event2) {
        if (_this3.props.disabled) {
          return;
        }
        _this3.didNavigationChange = true;
        var focusedDate = cloneDate(event2.value);
        _this3.setState({ focusedDate });
      };
      _this3.handleViewChange = function(_a14) {
        var view = _a14.view;
        if (_this3.scrollSyncService) {
          _this3.scrollSyncService.configure(view);
        }
        _this3.setState({ activeView: view });
      };
      _this3.handleDateChange = function(event2) {
        var value3 = cloneDate(event2.value);
        var focusedDate = cloneDate(event2.value);
        var canNavigateDown = _this3.bus.canMoveDown(_this3.state.activeView);
        if (_this3.props.disabled) {
          return;
        }
        if (canNavigateDown) {
          if (event2.isTodayClick) {
            _this3.bus.moveToBottom(_this3.state.activeView);
          } else {
            _this3.bus.moveDown(_this3.state.activeView, event2.syntheticEvent);
            _this3.setState({ focusedDate });
            return;
          }
        }
        _this3.setState({ value: value3, focusedDate });
        _this3.valueDuringOnChange = value3;
        var onChange = _this3.props.onChange;
        if (onChange) {
          var args = {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: value3,
            target: _this3
          };
          onChange.call(void 0, args);
        }
        _this3.valueDuringOnChange = void 0;
      };
      _this3.handleFocus = function(event2) {
        _this3.isActive = true;
        if (!_this3.calendarViewList) {
          return;
        }
        _this3.calendarViewList.focusActiveDate();
        var onFocus = _this3.props.onFocus;
        if (onFocus) {
          onFocus.call(void 0, event2);
        }
      };
      _this3.handleBlur = function(event2) {
        _this3.isActive = false;
        if (!_this3.calendarViewList) {
          return;
        }
        _this3.calendarViewList.blurActiveDate();
        var onBlur = _this3.props.onBlur;
        if (onBlur) {
          onBlur.call(void 0, event2);
        }
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        if (!_this3.focusedDate || !_this3.service) {
          return;
        }
        if (keyCode === Keys.enter) {
          if (_this3.value !== null && isEqualDate(_this3.focusedDate, _this3.value)) {
            var viewDate = dateInRange(_this3.focusedDate, _this3.min, _this3.max);
            virtualizationProp(_this3.calendarViewList).scrollToIndex(_this3.service.skip(viewDate, _this3.min));
          }
          var args = {
            syntheticEvent: event2,
            nativeEvent: event2.nativeEvent,
            value: _this3.focusedDate,
            target: _this3
          };
          _this3.handleDateChange(args);
        } else {
          var candidate = dateInRange(_this3.navigation.move(_this3.focusedDate, _this3.navigation.action(event2), _this3.state.activeView, _this3.service, event2), _this3.min, _this3.max);
          if (isEqualDate(_this3.focusedDate, candidate)) {
            return;
          }
          _this3.setState({ focusedDate: candidate });
        }
        event2.preventDefault();
      };
      _this3.handleMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleClick = function(_2) {
        if (_this3.i) {
          _this3.i.focus({ preventScroll: true });
        }
      };
      validatePackage2(packageMetadata4);
      var value2 = calculateValue(_this3.min, _this3.max, _this3.props.defaultValue || CalendarWithoutContext2.defaultProps.defaultValue, _this3.props.value);
      _this3.state = {
        value: value2,
        activeView: viewInRange(CalendarViewEnum[props.defaultActiveView], _this3.bottomView, _this3.topView),
        focusedDate: dateInRange(props.focusedDate || value2 || getToday2(), _this3.min, _this3.max)
      };
      _this3.dom = new DOMService();
      _this3.bus = new BusViewService(_this3.handleViewChange);
      _this3.navigation = new NavigationService(_this3.bus);
      _this3.oldValue = value2;
      return _this3;
    }
    Object.defineProperty(CalendarWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the Calendar.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(CalendarWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the Calendar.
       */
      get: function() {
        return this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(CalendarWithoutContext2.prototype, "min", {
      get: function() {
        return getDate(this.props.min !== void 0 ? this.props.min : CalendarWithoutContext2.defaultProps.min);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(CalendarWithoutContext2.prototype, "max", {
      get: function() {
        return getDate(this.props.max !== void 0 ? this.props.max : CalendarWithoutContext2.defaultProps.max);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(CalendarWithoutContext2.prototype, "bottomView", {
      get: function() {
        return CalendarViewEnum[this.props.bottomView !== void 0 ? this.props.bottomView : CalendarWithoutContext2.defaultProps.bottomView];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(CalendarWithoutContext2.prototype, "topView", {
      get: function() {
        return CalendarViewEnum[this.props.topView !== void 0 ? this.props.topView : CalendarWithoutContext2.defaultProps.topView];
      },
      enumerable: false,
      configurable: true
    });
    CalendarWithoutContext2.prototype.componentDidMount = function() {
      var _this3 = this;
      Promise.resolve().then(function() {
        setScrollbarWidth();
        if (!_this3.i) {
          return;
        }
        _this3.dom.calculateHeights(_this3.i);
        _this3.scrollSyncService = new ScrollSyncService(_this3.dom);
        _this3.scrollSyncService.configure(_this3.state.activeView);
        _this3.forceUpdate();
      });
    };
    CalendarWithoutContext2.prototype.componentDidUpdate = function(_2, prevState) {
      setScrollbarWidth();
      if (prevState.activeView !== this.state.activeView && this.scrollSyncService) {
        this.scrollSyncService.configure(this.state.activeView);
      }
      if (this.calendarViewList) {
        (this.isActive ? this.calendarViewList.focusActiveDate : this.calendarViewList.blurActiveDate)();
      }
      this.didNavigationChange = false;
      this.oldValue = this.value;
    };
    CalendarWithoutContext2.prototype.render = function() {
      var _this3 = this;
      if (this.props.n) {
        this.props.n(this);
      }
      var didValueChange = this.value !== null && this.oldValue !== null ? !isEqualDate(this.value, this.oldValue) : this.value !== this.oldValue;
      var activeView = viewInRange(this.state.activeView, CalendarViewEnum[this.props.bottomView !== void 0 ? this.props.bottomView : CalendarWithoutContext2.defaultProps.bottomView], CalendarViewEnum[this.props.topView !== void 0 ? this.props.topView : CalendarWithoutContext2.defaultProps.topView]);
      var value2 = calculateValue(this.min, this.max, this.value, this.value);
      var sanitizedValue = value2 ? getDate(value2) : null;
      this.focusedDate = getDate(dateInRange(didValueChange && value2 !== null ? value2 : this.state.focusedDate, this.min, this.max));
      this.intl = provideIntlService(this);
      this.bus.configure(this.bottomView, this.topView);
      this.service = this.bus.service(activeView, this.intl);
      var rootClassNames = classNames("k-widget k-calendar k-calendar-infinite", {
        "k-disabled": this.props.disabled,
        "k-week-number": this.props.weekNumber,
        "k-calendar-lg": this.props.mobileMode
      }, this.props.className);
      var calendarBody = [this.props.navigation && React58.createElement(Navigation2, { key: 0, ref: function(el) {
        _this3.Navigation = el;
      }, activeView: this.state.activeView, focusedDate: this.focusedDate, min: this.min, max: this.max, onScroll: this.handleScroll, onChange: this.handleNavigationChange, service: this.service, dom: this.dom, navigationItem: this.props.navigationItem, tabIndex: this.props.tabIndex }), React58.createElement(ViewList, { key: 1, ref: function(el) {
        _this3.calendarViewList = el;
      }, activeView: this.state.activeView, focusedDate: this.focusedDate, min: this.min, max: this.max, bus: this.bus, shouldScroll: this.shouldScroll, onScroll: this.handleScroll, service: this.service, cell: this.props.cell, weekCell: this.props.weekCell, dom: this.dom, smoothScroll: this.props.smoothScroll, showWeekNumbers: this.props.weekNumber, onChange: this.handleDateChange, value: sanitizedValue, cellUID: this.cellUID, headerTitle: this.props.headerTitle, tabIndex: this.props.tabIndex })];
      return React58.createElement("div", { ref: function(el) {
        _this3.i = el;
      }, className: rootClassNames, id: this.props.id || this.id, "aria-labelledby": this.props.ariaLabelledBy, "aria-describedby": this.props.ariaDescribedBy, "aria-disabled": this.props.disabled, tabIndex: !this.props.disabled ? this.props.tabIndex || 0 : void 0, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeyDown: this.handleKeyDown, onMouseDown: this.handleMouseDown, onClick: this.handleClick }, calendarBody);
    };
    CalendarWithoutContext2.displayName = "Calendar";
    CalendarWithoutContext2.propTypes = {
      className: PropTypes24.string,
      defaultActiveView: PropTypes24.oneOf(["month", "year", "decade", "century"]),
      defaultValue: PropTypes24.instanceOf(Date),
      disabled: PropTypes24.bool,
      focusedDate: PropTypes24.instanceOf(Date),
      id: PropTypes24.string,
      ariaLabelledBy: PropTypes24.string,
      ariaDescribedBy: PropTypes24.string,
      max: PropTypes24.instanceOf(Date),
      min: PropTypes24.instanceOf(Date),
      navigation: PropTypes24.bool,
      smoothScroll: PropTypes24.bool,
      onBlur: PropTypes24.func,
      onChange: PropTypes24.func,
      onFocus: PropTypes24.func,
      tabIndex: PropTypes24.number,
      value: PropTypes24.instanceOf(Date),
      weekNumber: PropTypes24.bool,
      topView: function(props, propName, componentName) {
        var prop2 = props[propName];
        var bottomView = props.bottomView;
        if (prop2 && bottomView && CalendarViewEnum[prop2] < CalendarViewEnum[bottomView]) {
          return new Error("Invalid prop + ".concat(propName, " suplied to ").concat(componentName, ".\n                    ").concat(propName, " can not be smaller than bottomView.\n                    "));
        }
        return null;
      },
      bottomView: function(props, propName, componentName) {
        var prop2 = props[propName];
        var topView = props.topView;
        if (prop2 && topView && CalendarViewEnum[prop2] > CalendarViewEnum[topView]) {
          return new Error("Invalid prop + ".concat(propName, " suplied to ").concat(componentName, ".\n                    ").concat(propName, " can not be bigger than topView.\n                    "));
        }
        return null;
      }
    };
    CalendarWithoutContext2.defaultProps = {
      disabled: false,
      min: MIN_DATE2,
      max: MAX_DATE2,
      navigation: true,
      defaultActiveView: "month",
      defaultValue: null,
      smoothScroll: true,
      topView: "century",
      bottomView: "month"
    };
    return CalendarWithoutContext2;
  }(React58.Component)
);
var CalendarPropsContext = createPropsContext();
var Calendar = withPropsContext(CalendarPropsContext, CalendarWithoutContext);
Calendar.displayName = "KendoReactCalendar";
registerForIntl(CalendarWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/models/mask.js
var Mask = (
  /** @class */
  function() {
    function Mask2() {
      this.symbols = "";
      this.partMap = [];
    }
    return Mask2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/utils.js
var defaultFormat = "d";
var defaultFormatPlaceholder = "wide";
var padZero = function(length) {
  return new Array(Math.max(length, 0)).fill("0").join("");
};
var approximateStringMatching = function(oldTextOrigin, oldFormat, newTextOrigin, selectionStart) {
  var oldTextSeparator = oldTextOrigin[selectionStart + oldTextOrigin.length - newTextOrigin.length];
  var oldText = oldTextOrigin.substring(0, selectionStart + oldTextOrigin.length - newTextOrigin.length);
  var newText = newTextOrigin.substring(0, selectionStart);
  var diff = [];
  if (oldText === newText && selectionStart > 0) {
    diff.push([oldFormat[selectionStart - 1], newText[selectionStart - 1]]);
    return diff;
  }
  if (oldText.indexOf(newText) === 0 && (newText.length === 0 || oldFormat[newText.length - 1] !== oldFormat[newText.length])) {
    var deletedSymbol = "";
    if (newText.length === 1) {
      diff.push([oldFormat[0], newText[0]]);
    }
    for (var i = newText.length; i < oldText.length; i++) {
      if (oldFormat[i] !== deletedSymbol && oldFormat[i] !== "_") {
        deletedSymbol = oldFormat[i];
        diff.push([deletedSymbol, ""]);
      }
    }
    return diff;
  }
  if (newText.indexOf(oldText) === 0 || oldFormat[selectionStart - 1] === "_") {
    var symbol = oldFormat[0];
    for (var i = Math.max(0, oldText.length - 1); i < oldFormat.length; i++) {
      if (oldFormat[i] !== "_") {
        symbol = oldFormat[i];
        break;
      }
    }
    return [[symbol, newText[selectionStart - 1]]];
  }
  if (newText[newText.length - 1] === " " || newText[newText.length - 1] === oldTextSeparator) {
    return [[oldFormat[selectionStart - 1], "_"]];
  }
  return [[oldFormat[selectionStart - 1], newText[selectionStart - 1]]];
};
var dateSymbolMap = function(map2, part) {
  map2[part.pattern[0]] = part.type;
  return map2;
};
var isInRange2 = function(candidate, min, max) {
  return candidate === null || !(min && min > candidate || max && max < candidate);
};
var invalidClasses = ["k-invalid"];
var wrapperClasses = ["k-widget", "k-dateinput"];

// node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/models/kendo-date.js
var KendoDate = (
  /** @class */
  function() {
    function KendoDate2(intlProvider, formatPlaceholder, format3) {
      this.year = true;
      this.month = true;
      this.date = true;
      this.hours = true;
      this.minutes = true;
      this.seconds = true;
      this.milliseconds = true;
      this.leadingZero = null;
      this.typedMonthPart = "";
      this.knownParts = "adHhmMsEy";
      this.symbols = {
        "E": "E",
        "H": "H",
        "M": "M",
        "a": "a",
        "d": "d",
        "h": "h",
        "m": "m",
        "s": "s",
        "y": "y"
      };
      this.ya = getDate(/* @__PURE__ */ new Date());
      this.intlProvider = intlProvider;
      this.formatPlaceholder = formatPlaceholder;
      this.format = format3;
      this.monthNames = this.allFormatedMonths();
    }
    Object.defineProperty(KendoDate2.prototype, "intl", {
      get: function() {
        return this.intlProvider();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(KendoDate2.prototype, "value", {
      get: function() {
        return this.ya;
      },
      enumerable: false,
      configurable: true
    });
    KendoDate2.prototype.setValue = function(value2) {
      if (!value2) {
        this.ya = getDate(/* @__PURE__ */ new Date());
        this.modifyExisting(false);
      } else if (!isEqual(value2, this.ya)) {
        this.ya = cloneDate(value2);
        this.modifyExisting(true);
      }
    };
    KendoDate2.prototype.hasValue = function() {
      var _this3 = this;
      var pred = function(a, p) {
        return a || p.type !== "literal" && p.type !== "dayperiod" && _this3.getExisting(p.pattern[0]);
      };
      return this.intl.splitDateFormat(this.format).reduce(pred, false);
    };
    KendoDate2.prototype.getDateObject = function() {
      for (var i = 0; i < this.knownParts.length; i++) {
        if (!this.getExisting(this.knownParts[i])) {
          return null;
        }
      }
      return cloneDate(this.value);
    };
    KendoDate2.prototype.getTextAndFormat = function() {
      return this.merge(this.intl.formatDate(this.value, this.format), this.dateFormatString(this.value, this.format));
    };
    KendoDate2.prototype.modifyExisting = function(value2) {
      var sampleFormat = this.dateFormatString(this.value, this.format).symbols;
      for (var i = 0; i < sampleFormat.length; i++) {
        this.setExisting(sampleFormat[i], value2);
      }
    };
    KendoDate2.prototype.getExisting = function(symbol) {
      switch (symbol) {
        case "y":
          return this.year;
        case "M":
        case "L":
          return this.month;
        case "d":
          return this.date;
        case "E":
          return this.date && this.month && this.year;
        case "h":
        case "H":
          return this.hours;
        case "m":
          return this.minutes;
        case "s":
          return this.seconds;
        default:
          return true;
      }
    };
    KendoDate2.prototype.setExisting = function(symbol, value2) {
      switch (symbol) {
        case "y":
          this.year = value2;
          if (value2 === false) {
            this.ya.setFullYear(2e3);
          }
          break;
        case "M":
          this.month = value2;
          if (value2 === false) {
            this.ya.setMonth(0);
          }
          break;
        case "d":
          this.date = value2;
          break;
        case "h":
        case "H":
          this.hours = value2;
          break;
        case "m":
          this.minutes = value2;
          break;
        case "s":
          this.seconds = value2;
          break;
        default:
          return;
      }
    };
    KendoDate2.prototype.modifyPart = function(symbol, offset4) {
      var newValue = cloneDate(this.value);
      switch (symbol) {
        case "y":
          newValue.setFullYear(newValue.getFullYear() + offset4);
          break;
        case "M":
          newValue = addMonths(this.value, offset4);
          break;
        case "d":
        case "E":
          newValue.setDate(newValue.getDate() + offset4);
          break;
        case "h":
        case "H":
          newValue.setHours(newValue.getHours() + offset4);
          break;
        case "m":
          newValue.setMinutes(newValue.getMinutes() + offset4);
          break;
        case "s":
          newValue.setSeconds(newValue.getSeconds() + offset4);
          break;
        case "a":
          newValue.setHours(newValue.getHours() + 12 * offset4);
          break;
        default:
          break;
      }
      this.setExisting(symbol, true);
      this.ya = newValue;
    };
    KendoDate2.prototype.parsePart = function(symbol, currentChar) {
      var _a14;
      this.resetLeadingZero();
      if (!currentChar) {
        this.setExisting(symbol, false);
        return { value: null };
      }
      var baseDate = this.intl.formatDate(this.value, this.format);
      var dateParts = this.dateFormatString(this.value, this.format);
      var baseFormat = dateParts.symbols;
      var replaced = false;
      var prefix = "";
      var current = "";
      var suffix = "";
      for (var i = 0; i < baseDate.length; i++) {
        if (baseFormat[i] === symbol) {
          current += this.getExisting(symbol) ? baseDate[i] : "0";
          replaced = true;
        } else if (!replaced) {
          prefix += baseDate[i];
        } else {
          suffix += baseDate[i];
        }
      }
      var parsedDate = null;
      var month = this.matchMonth(currentChar);
      while (current.length > 0 && current.charAt(0) === "0") {
        current = current.slice(1);
      }
      if (current.length >= 4) {
        current = "";
      }
      for (var i = 0; i < 2; i++) {
        var middle = current + currentChar;
        var middleNumber = parseInt(middle, 10);
        parsedDate = this.intl.parseDate(prefix + middle + suffix, this.format);
        if (!parsedDate && !isNaN(middleNumber) && !isNaN(parseInt(currentChar, 10))) {
          if (symbol === "M" && !month) {
            var monthNumber = middleNumber - 1;
            if (monthNumber > -1 && monthNumber < 12) {
              parsedDate = cloneDate(this.value);
              parsedDate.setMonth(monthNumber);
              if (parsedDate.getMonth() !== monthNumber) {
                parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));
              }
            }
          }
          if (symbol === "y") {
            parsedDate = createDate(parseInt(middle, 10), this.month ? this.value.getMonth() : 0, this.date ? this.value.getDate() : 1, this.hours ? this.value.getHours() : 0, this.minutes ? this.value.getMinutes() : 0, this.seconds ? this.value.getSeconds() : 0, this.milliseconds ? this.value.getMilliseconds() : 0);
            if (this.date && parsedDate.getDate() !== this.value.getDate()) {
              parsedDate = lastDayOfMonth(addMonths(parsedDate, -1));
            }
          }
        }
        if (parsedDate) {
          this.ya = parsedDate;
          this.setExisting(symbol, true);
          return { value: this.value };
        }
        current = "";
      }
      if (month) {
        parsedDate = this.intl.parseDate(prefix + month + suffix, this.format);
        if (parsedDate) {
          this.ya = parsedDate;
          this.setExisting(symbol, true);
          return { value: this.value };
        }
      }
      if (currentChar === "0") {
        this.leadingZero = !this.isAbbrMonth(dateParts.partMap, symbol) ? (_a14 = {}, _a14[symbol] = true, _a14) : null;
        this.setExisting(symbol, false);
      }
      return { value: null };
    };
    KendoDate2.prototype.symbolMap = function(symbol) {
      return this.intl.splitDateFormat(this.format).reduce(dateSymbolMap, {})[symbol];
    };
    KendoDate2.prototype.resetLeadingZero = function() {
      var hasLeadingZero = this.leadingZero !== null;
      this.leadingZero = null;
      return hasLeadingZero;
    };
    KendoDate2.prototype.isAbbrMonth = function(parts, symbol) {
      var pattern = this.partPattern(parts, symbol);
      return pattern.type === "month" && pattern.names;
    };
    KendoDate2.prototype.partPattern = function(parts, symbol) {
      return parts.filter(function(part) {
        return part.pattern.indexOf(symbol) !== -1;
      })[0];
    };
    KendoDate2.prototype.matchMonth = function(typedChar) {
      this.typedMonthPart += typedChar.toLowerCase();
      if (this.monthNames.length === 0) {
        return "";
      }
      while (this.typedMonthPart.length > 0) {
        for (var i = 0; i < this.monthNames.length; i++) {
          if (this.monthNames[i].toLowerCase().indexOf(this.typedMonthPart) === 0) {
            return this.monthNames[i];
          }
        }
        var monthAsNum = parseInt(this.typedMonthPart, 10);
        if (monthAsNum >= 1 && monthAsNum <= 12 && monthAsNum.toString() === this.typedMonthPart) {
          return this.monthNames[monthAsNum - 1];
        }
        this.typedMonthPart = this.typedMonthPart.substring(1, this.typedMonthPart.length);
      }
      return "";
    };
    KendoDate2.prototype.allFormatedMonths = function() {
      var dateFormatParts = this.intl.splitDateFormat(this.format);
      for (var i = 0; i < dateFormatParts.length; i++) {
        if (dateFormatParts[i].type === "month" && dateFormatParts[i].names) {
          return this.intl.dateFormatNames(dateFormatParts[i].names);
        }
      }
      return [];
    };
    KendoDate2.prototype.dateFormatString = function(date2, format3) {
      var dateFormatParts = this.intl.splitDateFormat(format3);
      var parts = [];
      var partMap = [];
      for (var i = 0; i < dateFormatParts.length; i++) {
        var partLength = this.intl.formatDate(date2, { pattern: dateFormatParts[i].pattern }).length;
        while (partLength > 0) {
          parts.push(this.symbols[dateFormatParts[i].pattern[0]] || "_");
          partMap.push(dateFormatParts[i]);
          partLength--;
        }
      }
      var returnValue = new Mask();
      returnValue.symbols = parts.join("");
      returnValue.partMap = partMap;
      return returnValue;
    };
    KendoDate2.prototype.merge = function(text, mask) {
      var resultText = "";
      var resultFormat = "";
      var format3 = mask.symbols;
      for (var r = format3.length - 1; r >= 0; r--) {
        if (this.knownParts.indexOf(format3[r]) === -1 || this.getExisting(format3[r])) {
          resultText = text[r] + resultText;
          resultFormat = format3[r] + resultFormat;
        } else {
          var currentSymbol = format3[r];
          while (r >= 0 && currentSymbol === format3[r]) {
            r--;
          }
          r++;
          if (this.leadingZero && this.leadingZero[currentSymbol]) {
            resultText = "0" + resultText;
          } else {
            resultText = this.dateFieldName(mask.partMap[r]) + resultText;
          }
          while (resultFormat.length < resultText.length) {
            resultFormat = format3[r] + resultFormat;
          }
        }
      }
      return { text: resultText, format: resultFormat };
    };
    KendoDate2.prototype.dateFieldName = function(part) {
      var formatPlaceholder = this.formatPlaceholder || "wide";
      if (formatPlaceholder[part.type]) {
        return formatPlaceholder[part.type];
      }
      if (formatPlaceholder === "formatPattern") {
        return part.pattern;
      }
      return this.intl.dateFieldName(Object.assign(part, { nameType: formatPlaceholder }));
    };
    return KendoDate2;
  }()
);

// node_modules/@progress/kendo-react-labels/dist/es/messages/index.js
var _a9;
var labelsOptional = "labels.optional";
var messages4 = (_a9 = {}, _a9[labelsOptional] = "(Optional)", _a9);

// node_modules/@progress/kendo-react-labels/dist/es/package-metadata.js
var packageMetadata5 = {
  name: "@progress/kendo-react-labels",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225355,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-labels/dist/es/Label.js
var React59 = __toESM(require_react());
var PropTypes25 = __toESM(require_prop_types());
var Label = function(props) {
  validatePackage2(packageMetadata5);
  var id = props.id, editorId = props.editorId, editorRef = props.editorRef, editorDisabled = props.editorDisabled, children2 = props.children, editorValid = props.editorValid, style = props.style, className = props.className, optional = props.optional;
  var localizationService = useLocalization();
  var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages4[labelsOptional]) : "";
  var optionalElement = localizedOptional && React59.createElement("span", { className: "k-label-optional" }, localizedOptional);
  var onLabelClick = React59.useCallback(function(e) {
    if (editorRef && editorRef.current && !editorDisabled) {
      if (editorRef.current.focus) {
        e.preventDefault();
        editorRef.current.focus();
      }
      var editorActionElement = editorRef.current.actionElement;
      if (editorActionElement) {
        e.preventDefault();
        editorActionElement.click();
      }
    }
  }, [editorRef]);
  var labelClassName = classNames({
    "k-label": true,
    "k-label-empty": !children2,
    "k-text-error": editorValid === false,
    "k-text-disabled": editorDisabled === true
  }, className);
  return React59.createElement(
    "label",
    { id, htmlFor: editorId, onClick: onLabelClick, style, className: labelClassName },
    children2,
    optionalElement
  );
};
Label.propTypes = {
  id: PropTypes25.string,
  editorId: PropTypes25.string,
  editorRef: PropTypes25.oneOfType([
    PropTypes25.func,
    PropTypes25.shape({ current: PropTypes25.any })
  ]),
  editorValid: PropTypes25.bool,
  editorDisabled: PropTypes25.bool,
  style: PropTypes25.object,
  className: PropTypes25.string,
  optional: PropTypes25.bool
};
Label.displayName = "KendoReactLabel";

// node_modules/@progress/kendo-react-labels/dist/es/Error.js
var React60 = __toESM(require_react());
var PropTypes26 = __toESM(require_prop_types());
var Error2 = function(props) {
  validatePackage2(packageMetadata5);
  var errorClassName = classNames({
    "k-form-error": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end"
  }, props.className);
  return React60.createElement("div", { id: props.id, role: "alert", style: props.style, className: errorClassName }, props.children);
};
Error2.propTypes = {
  id: PropTypes26.string,
  direction: PropTypes26.oneOf(["start", "end"]),
  children: PropTypes26.oneOfType([
    PropTypes26.element,
    PropTypes26.node
  ]),
  style: PropTypes26.object,
  className: PropTypes26.string
};
Error2.defaultProps = {
  direction: "start"
};
Error2.displayName = "KendoReactError";

// node_modules/@progress/kendo-react-labels/dist/es/Hint.js
var React61 = __toESM(require_react());
var PropTypes27 = __toESM(require_prop_types());
var Hint = function(props) {
  validatePackage2(packageMetadata5);
  var hintClassName = classNames({
    "k-form-hint": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end",
    "k-text-disabled": props.editorDisabled === true
  }, props.className);
  return React61.createElement("div", { id: props.id, style: props.style, className: hintClassName }, props.children);
};
Hint.propTypes = {
  id: PropTypes27.string,
  direction: PropTypes27.oneOf(["start", "end"]),
  children: PropTypes27.oneOfType([
    PropTypes27.element,
    PropTypes27.node
  ]),
  style: PropTypes27.object,
  className: PropTypes27.string,
  editorDisabled: PropTypes27.bool
};
Hint.defaultProps = {
  direction: "start"
};
Hint.displayName = "KendoReactHint";

// node_modules/@progress/kendo-react-labels/dist/es/FloatingLabel.js
var React62 = __toESM(require_react());
var PropTypes28 = __toESM(require_prop_types());
var __extends23 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var FloatingLabel = (
  /** @class */
  function(_super) {
    __extends23(FloatingLabel2, _super);
    function FloatingLabel2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {
        focused: false
      };
      _this3.handleFocus = function(_2) {
        _this3.setState({ focused: true });
      };
      _this3.handleBlur = function(_2) {
        _this3.setState({ focused: false });
      };
      validatePackage2(packageMetadata5);
      return _this3;
    }
    FloatingLabel2.prototype.render = function() {
      var _a14 = this.props, label = _a14.label, editorId = _a14.editorId, className = _a14.className, editorValue = _a14.editorValue, editorPlaceholder = _a14.editorPlaceholder, editorValid = _a14.editorValid, editorDisabled = _a14.editorDisabled, style = _a14.style, id = _a14.id, optional = _a14.optional;
      var localizationService = provideLocalizationService(this);
      var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages4[labelsOptional]) : "";
      var optionalElement = localizedOptional && React62.createElement("span", { className: "k-label-optional" }, localizedOptional);
      var spanClassNames = classNames({
        "k-floating-label-container": true,
        "k-focus": this.state.focused,
        "k-empty": !editorPlaceholder && !editorValue && editorValue !== 0,
        "k-text-disabled": editorDisabled,
        "k-rtl": this.props.dir === "rtl"
      }, className);
      var labelClassNames = classNames({
        "k-label": true,
        "k-text-error": editorValid === false,
        "k-text-disabled": editorDisabled
      });
      return React62.createElement(
        "span",
        { id: this.props.id, className: spanClassNames, onFocus: this.handleFocus, onBlur: this.handleBlur, style, dir: this.props.dir },
        this.props.children,
        label ? editorId ? React62.createElement(
          "label",
          { id, htmlFor: editorId, className: labelClassNames },
          label,
          optionalElement
        ) : React62.createElement(
          "span",
          { id, className: labelClassNames },
          label,
          optionalElement
        ) : null
      );
    };
    FloatingLabel2.propTypes = {
      label: PropTypes28.string,
      editorId: PropTypes28.string,
      editorValue: PropTypes28.oneOfType([PropTypes28.string, PropTypes28.bool, PropTypes28.number]),
      editorPlaceholder: PropTypes28.string,
      editorValid: PropTypes28.bool,
      editorDisabled: PropTypes28.bool,
      id: PropTypes28.string,
      style: PropTypes28.object,
      className: PropTypes28.string,
      optional: PropTypes28.bool
    };
    return FloatingLabel2;
  }(React62.Component)
);
registerForLocalization(FloatingLabel);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/models/TimePart.js
var TIME_PART = {
  dayperiod: "dayperiod",
  hour: "hour",
  millisecond: "millisecond",
  minute: "minute",
  second: "second"
};

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/utils.js
var setter2 = function(method) {
  return function(date2, value2) {
    var clone2 = cloneDate(date2);
    clone2[method](value2);
    return clone2;
  };
};
var defaultGetters = [
  { type: TIME_PART.hour, getter: function(value2) {
    return value2.getHours();
  } },
  { type: TIME_PART.minute, getter: function(value2) {
    return value2.getMinutes();
  } },
  { type: TIME_PART.second, getter: function(value2) {
    return value2.getSeconds();
  } },
  { type: TIME_PART.millisecond, getter: function(value2) {
    return value2.getMilliseconds();
  } }
];
var left = function(getter3) {
  return function(origin, _2) {
    return getter3(origin);
  };
};
var right = function(getter3) {
  return function(_2, candidate) {
    return getter3(candidate);
  };
};
var convertToObject = function(parts) {
  return parts.reduce(function(obj, p) {
    obj[p.type] = p.type;
    return obj;
  }, {});
};
var getterByPart = function(parts) {
  return function(g) {
    return parts[g.type] ? right(g.getter) : left(g.getter);
  };
};
var gettersFactory = function(getters2) {
  return function(parts) {
    return getters2.map(getterByPart(convertToObject(parts)));
  };
};
var snapValue = function(getter3, step, min, type) {
  return function(date2) {
    var value2 = getter3(date2);
    var minValue = getter3(min);
    if (type === "hour") {
      return value2 - (value2 - minValue) % step;
    }
    if (date2.getTime() <= min.getTime() && value2 !== 0 && value2 <= minValue) {
      return Math.ceil(value2 / step) * step;
    }
    return value2 - value2 % step;
  };
};
var snappersFactory = function(getters2) {
  return function(steps, min) {
    return getters2.map(function(g) {
      var step = Math.floor(steps[g.type]);
      return step ? snapValue(g.getter, step, min, g.type) : g.getter;
    });
  };
};
var generateGetters = gettersFactory(defaultGetters);
var generateSnappers = snappersFactory(defaultGetters);
var valueMerger = function(getters2) {
  return function(origin, candidate) {
    origin.setHours.apply(origin, getters2.map(function(g) {
      return g(origin, candidate);
    }));
    return origin;
  };
};
var snapTime = function(snappers) {
  return function(candidate) {
    var date2 = cloneDate(candidate);
    date2.setHours.apply(date2, snappers.map(function(s) {
      return s(date2);
    }));
    return date2;
  };
};
var setHours = setter2("setHours");
var setMinutes = setter2("setMinutes");
var setSeconds = setter2("setSeconds");
var getNow = function() {
  return /* @__PURE__ */ new Date();
};
var range2 = function(start2, end2, step) {
  if (step === void 0) {
    step = 1;
  }
  var result = [];
  for (var i = start2; i < end2; i = i + step) {
    result.push(i);
  }
  return result;
};
var normalizeTimes = function(candidate, min, max) {
  return {
    candidateValue: setTime2(MIDNIGHT_DATE, candidate),
    maxValue: addDays(setTime2(MIDNIGHT_DATE, max), min.getHours() < max.getHours() ? 0 : 1),
    minValue: setTime2(MIDNIGHT_DATE, min)
  };
};
var timeInRange = function(candidate, min, max) {
  if (!candidate || !min || !max) {
    return candidate;
  }
  var _a14 = normalizeTimes(candidate, min, max), candidateValue = _a14.candidateValue, minValue = _a14.minValue, maxValue = _a14.maxValue;
  if (candidateValue < minValue) {
    return setTime2(candidate, min);
  }
  if (candidateValue > maxValue) {
    return setTime2(candidate, max);
  }
  return candidate;
};
var isInTimeRange2 = function(candidate, min, max) {
  if (!candidate || !min || !max) {
    return true;
  }
  var _a14 = normalizeTimes(candidate, min, max), candidateValue = _a14.candidateValue, minValue = _a14.minValue, maxValue = _a14.maxValue;
  return minValue <= candidateValue && candidateValue <= maxValue;
};
var isInRange3 = function(candidate, min, max) {
  if (candidate === null) {
    return true;
  }
  var _a14 = normalizeTimes(candidate, min, max), candidateValue = _a14.candidateValue, minValue = _a14.minValue, maxValue = _a14.maxValue;
  return minValue <= candidateValue && candidateValue <= maxValue;
};
var isSmallerThanMin = function(val, min) {
  if (val === null || min === null) {
    return false;
  }
  var normalizedValue = setTime2(MIDNIGHT_DATE, val);
  var normalizedMin = setTime2(MIDNIGHT_DATE, min);
  return normalizedValue.getTime() < normalizedMin.getHours();
};
var isBiggerThanMax = function(val, max) {
  if (val === null || max === null) {
    return false;
  }
  var normalizedValue = setTime2(MIDNIGHT_DATE, val);
  var normalizedMax = setTime2(MIDNIGHT_DATE, max);
  return normalizedMax.getTime() < normalizedValue.getHours();
};

// node_modules/@progress/kendo-react-dateinputs/dist/es/dateinput/DateInput.js
var React63 = __toESM(require_react());
var PropTypes29 = __toESM(require_prop_types());
var __extends24 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign32 = function() {
  __assign32 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign32.apply(this, arguments);
};
var __spreadArray8 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var VALIDATION_MESSAGE = "Please enter a valid value!";
var DateInputWithoutContext = (
  /** @class */
  function(_super) {
    __extends24(DateInputWithoutContext2, _super);
    function DateInputWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.kendoDate = null;
      _this3.currentFormat = "";
      _this3.paste = false;
      _this3.i = null;
      _this3.Ka = null;
      _this3.ea = guid();
      _this3.Wb = "";
      _this3.focus = function() {
        if (_this3.i) {
          _this3.i.focus();
        }
      };
      _this3.setValidity = function() {
        if (_this3.element && _this3.element.setCustomValidity) {
          _this3.element.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || DateInputWithoutContext2.defaultProps.validationMessage);
        }
      };
      _this3.updateOnPaste = function(event2) {
        if (!_this3.element || !_this3.kendoDate) {
          return;
        }
        var value2 = provideIntlService(_this3).parseDate(_this3.element.value, _this3.props.format) || _this3.value;
        var oldValue = _this3.value;
        _this3.kendoDate.setValue(value2);
        _this3.triggerChange(event2, oldValue);
      };
      _this3.spinnersMouseDown = function(event2) {
        event2.preventDefault();
        var activeElement = getActiveElement(document);
        if (_this3.element && activeElement !== _this3.element) {
          _this3.element.focus({ preventScroll: true });
        }
      };
      _this3.handlePaste = function() {
        _this3.paste = true;
      };
      _this3.elementChange = function(event2) {
        if (!_this3.element || !_this3.kendoDate) {
          return;
        }
        if (_this3.paste) {
          _this3.updateOnPaste(event2);
          _this3.paste = false;
          return;
        }
        var _a14 = _this3.kendoDate.getTextAndFormat(), text = _a14.text, currentFormat = _a14.format;
        _this3.currentFormat = currentFormat;
        var dateBeforeChange = _this3.value;
        var diff = approximateStringMatching(text, _this3.currentFormat, _this3.element.value, _this3.selection.start);
        var navigationOnly = diff.length === 1 && diff[0][1] === "_";
        if (!navigationOnly) {
          for (var i = 0; i < diff.length; i++) {
            _this3.kendoDate.parsePart(diff[i][0], diff[i][1]);
          }
        }
        if (diff.length && diff[0][0] !== "_") {
          _this3.setSelection(_this3.selectionBySymbol(diff[0][0]));
        }
        if (navigationOnly) {
          _this3.switchDateSegment(1);
        }
        _this3.triggerChange(event2, dateBeforeChange);
      };
      _this3.elementClick = function(_2) {
        _this3.setSelection(_this3.selectionByIndex(_this3.selection.start));
      };
      _this3.nativeWheel = function(event2) {
        var activeElement = getActiveElement(document);
        if (activeElement === _this3.element) {
          event2.preventDefault();
        }
      };
      _this3.wheel = function(event2) {
        var activeElement = getActiveElement(document);
        if (activeElement !== _this3.element) {
          return;
        }
        if (event2.nativeEvent.deltaY < 0) {
          _this3.increasePart(event2);
        }
        if (event2.nativeEvent.deltaY > 0) {
          _this3.decreasePart(event2);
        }
      };
      _this3.increasePart = function(event2) {
        _this3.modifyDateSegmentValue(1, event2);
      };
      _this3.decreasePart = function(event2) {
        _this3.modifyDateSegmentValue(-1, event2);
      };
      _this3.elementKeyDown = function(event2) {
        if (event2.altKey) {
          return;
        }
        switch (event2.keyCode) {
          case 37:
            _this3.switchDateSegment(-1);
            break;
          case 38:
            _this3.modifyDateSegmentValue(1, event2);
            break;
          case 39:
            _this3.switchDateSegment(1);
            break;
          case 40:
            _this3.modifyDateSegmentValue(-1, event2);
            break;
          default:
            return;
        }
        event2.preventDefault();
      };
      _this3.elementOnFocus = function(_2) {
        if (_this3.wrapper) {
          _this3.wrapper.classList.add("k-focus");
        }
        _this3.setState({ focused: true });
      };
      _this3.elementOnBlur = function(_2) {
        if (_this3.wrapper) {
          _this3.wrapper.classList.remove("k-focus");
        }
        _this3.setState({ focused: false });
      };
      validatePackage2(packageMetadata4);
      _this3.state = {
        focused: false
      };
      return _this3;
    }
    DateInputWithoutContext2.prototype.componentDidMount = function() {
      this.setValidity();
      if (this.wrapper) {
        this.wrapper.addEventListener("wheel", this.nativeWheel, { passive: false });
      }
    };
    DateInputWithoutContext2.prototype.componentDidUpdate = function(_2, prevState) {
      if (this.Wb && prevState.focused === this.state.focused) {
        this.setSelection(this.selectionBySymbol(this.Wb));
      } else if (this.props.placeholder !== void 0 && this.selection.start === this.selection.end) {
        this.setSelection({ start: 0, end: this.currentFormat.length });
      }
      this.setValidity();
    };
    DateInputWithoutContext2.prototype.componentWillUnmount = function() {
      if (this.wrapper) {
        this.wrapper.removeEventListener("wheel", this.nativeWheel);
      }
    };
    DateInputWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.size, size = _b3 === void 0 ? DateInputWithoutContext2.defaultProps.size : _b3, _c2 = _a14.fillMode, fillMode = _c2 === void 0 ? DateInputWithoutContext2.defaultProps.fillMode : _c2, _d = _a14.rounded, rounded = _d === void 0 ? DateInputWithoutContext2.defaultProps.rounded : _d;
      if (this.props.n) {
        this.props.n.current = this;
      }
      var localizationService = provideLocalizationService(this);
      var props = __assign32(__assign32({}, DateInputWithoutContext2.defaultProps), this.props);
      var name2 = props.name, label = props.label, id = props.id;
      var currentText = this.text;
      var text = currentText === this.props.placeholder ? "" : currentText;
      var placeholder = currentText === this.props.placeholder ? currentText : void 0;
      var inputId = id || this.ea;
      var isValid = !this.validityStyles || this.validity.valid;
      var wrapperClassesInstance = __spreadArray8([], wrapperClasses, true);
      if (this.props.className) {
        wrapperClassesInstance.push(this.props.className);
      }
      var dateinput = React63.createElement(AsyncFocusBlur, { onFocus: this.elementOnFocus, onBlur: this.elementOnBlur }, function(_a15) {
        var _b4;
        var onFocus = _a15.onFocus, onBlur = _a15.onBlur;
        return React63.createElement(
          "span",
          { ref: function(span) {
            _this3.Ka = span;
          }, style: !label ? { width: _this3.props.width } : void 0, dir: _this3.props.dir, className: classNames("k-dateinput", "k-input", (_b4 = {}, _b4["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _b4["k-input-".concat(fillMode)] = fillMode, _b4["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _b4["k-invalid"] = !isValid, _b4["k-required"] = _this3.required, _b4["k-disabled"] = _this3.props.disabled, _b4), _this3.props.className), onFocus, onBlur },
          React63.createElement("input", { role: _this3.props.ariaRole || "textbox", readOnly: _this3.props.readonly, tabIndex: _this3.props.tabIndex, disabled: _this3.props.disabled, title: _this3.props.title !== void 0 ? _this3.props.title : currentText, type: "text", spellCheck: false, autoComplete: "off", autoCorrect: "off", className: "k-input-inner", id: inputId, "aria-label": _this3.props.ariaLabel, "aria-labelledby": _this3.props.ariaLabelledBy, "aria-describedby": _this3.props.ariaDescribedBy, "aria-haspopup": _this3.props.ariaHasPopup, "aria-disabled": _this3.props.disabled, "aria-expanded": _this3.props.ariaExpanded, "aria-controls": _this3.props.ariaControls, onWheel: _this3.wheel, onClick: _this3.elementClick, onInput: _this3.elementChange, onPaste: _this3.handlePaste, onKeyDown: _this3.elementKeyDown, onChange: noop, value: text, placeholder, name: name2, ref: function(input) {
            return _this3.i = input;
          } }),
          _this3.props.children,
          _this3.props.spinners && React63.createElement(
            "span",
            { className: "k-input-spinner k-spin-button", onMouseDown: _this3.spinnersMouseDown },
            React63.createElement(Button, { tabIndex: -1, type: "button", rounded: null, className: "k-spinner-increase", icon: "caret-alt-up", svgIcon: caretAltUpIcon, "aria-label": localizationService.toLanguageString(increaseValue, messages3[increaseValue]), title: localizationService.toLanguageString(increaseValue, messages3[increaseValue]), onClick: _this3.increasePart }),
            React63.createElement(Button, { tabIndex: -1, type: "button", rounded: null, className: "k-spinner-decrease", icon: "caret-alt-down", svgIcon: caretAltDownIcon, "aria-label": localizationService.toLanguageString(decreaseValue, messages3[decreaseValue]), title: localizationService.toLanguageString(decreaseValue, messages3[decreaseValue]), onClick: _this3.decreasePart })
          )
        );
      });
      return label ? React63.createElement(FloatingLabel, { label, editorId: inputId, editorValue: currentText, editorValid: isValid, editorDisabled: this.props.disabled, children: dateinput, style: { width: this.props.width } }) : dateinput;
    };
    Object.defineProperty(DateInputWithoutContext2.prototype, "value", {
      /* Public Getters */
      /**
       * Gets the value of the DateInput.
       */
      get: function() {
        if (this.valueDuringOnChange !== void 0) {
          return this.valueDuringOnChange;
        }
        return this.kendoDate && this.kendoDate.getDateObject();
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the DateInput.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : DateInputWithoutContext2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : DateInputWithoutContext2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "text", {
      /**
       * @hidden
       */
      get: function() {
        var props = __assign32(__assign32({}, DateInput.defaultProps), this.props);
        var _a14 = props.formatPlaceholder, formatPlaceholder = _a14 === void 0 ? DateInputWithoutContext2.defaultProps.formatPlaceholder : _a14, _b3 = props.format, format3 = _b3 === void 0 ? DateInputWithoutContext2.defaultProps.format : _b3, value2 = props.value, defaultValue2 = props.defaultValue;
        if (this.kendoDate === null) {
          this.kendoDate = new KendoDate(this.intl.bind(this), formatPlaceholder, format3);
          this.kendoDate.setValue(value2 || defaultValue2 || null);
        } else {
          this.kendoDate.format = format3;
          this.kendoDate.formatPlaceholder = formatPlaceholder;
        }
        if (value2 !== void 0 && this.value !== value2) {
          this.kendoDate.setValue(value2);
        }
        var _c2 = this.kendoDate.getTextAndFormat(), currentText = _c2.text, currentFormat = _c2.format;
        this.currentFormat = currentFormat;
        return props.placeholder !== null && props.placeholder !== void 0 && !this.state.focused && !this.kendoDate.hasValue() ? props.placeholder : currentText;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the DateInput is set.
       */
      get: function() {
        var inRange3 = isInRange2(this.value, this.min, this.max) && isInTimeRange2(this.value, this.props.minTime, this.props.maxTime);
        var customError = this.props.validationMessage !== void 0;
        var isValid = (!this.required || this.value !== null) && inRange3;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          rangeOverflow: this.value && this.max.getTime() < this.value.getTime() || false,
          rangeUnderflow: this.value && this.value.getTime() < this.min.getTime() || false,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "element", {
      /**
       * Gets the element of the DateInput.
       *
       * @return - An `HTMLInputElement`.
       *
       * @example
       * ```jsx
       * class App extends React.Component {
       *     constructor(props) {
       *         super(props);
       *     }
       *     element = null;
       *     render() {
       *         return (
       *             <div>
       *                 <DateInput
       *                     ref={(dateInput) =>
       *                         this.element = dateInput ? dateInput.element : null}
       *                 />
       *                 <button onClick={() => console.log(this.element)}>console.log the element</button>
       *             </div>
       *         );
       *     }
       * }
       *
       * ReactDOM.render(
       *     <App />,
       *     document.getElementsByTagName('my-app')[0]
       * );
       * ```
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : DateInputWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : DateInputWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateInputWithoutContext2.prototype, "wrapper", {
      /**
       * @hidden
       */
      get: function() {
        return this.Ka;
      },
      enumerable: false,
      configurable: true
    });
    DateInputWithoutContext2.prototype.intl = function() {
      return provideIntlService(this);
    };
    Object.defineProperty(DateInputWithoutContext2.prototype, "selection", {
      /*  end handlers */
      get: function() {
        var returnValue = { start: 0, end: 0 };
        if (this.element !== null && this.element.selectionStart !== void 0) {
          returnValue = { start: this.element.selectionStart, end: this.element.selectionEnd };
        }
        return returnValue;
      },
      enumerable: false,
      configurable: true
    });
    DateInputWithoutContext2.prototype.setSelection = function(selection) {
      var _this3 = this;
      this.Wb = this.currentFormat[selection.start];
      window.requestAnimationFrame(function() {
        var activeElement = getActiveElement(document);
        if (_this3.element && activeElement === _this3.element && !_this3.props.disableSelection) {
          _this3.element.setSelectionRange(selection.start, selection.end);
        }
      });
    };
    DateInputWithoutContext2.prototype.triggerChange = function(event2, oldValue) {
      this.valueDuringOnChange = this.value;
      this.forceUpdate();
      if (this.props.onChange && !isEqual(oldValue, this.value)) {
        this.props.onChange.call(void 0, {
          syntheticEvent: event2,
          nativeEvent: event2.nativeEvent,
          value: this.value,
          target: this
          // inRange: this.props.min && this.props.max ? isInRange(value, this.props.min, this.props.max) : true
        });
      }
      this.valueDuringOnChange = void 0;
    };
    DateInputWithoutContext2.prototype.selectionBySymbol = function(symbol) {
      var start2 = -1;
      var end2 = 0;
      for (var i = 0; i < this.currentFormat.length; i++) {
        if (this.currentFormat[i] === symbol) {
          end2 = i + 1;
          if (start2 === -1) {
            start2 = i;
          }
        }
      }
      if (start2 < 0) {
        start2 = 0;
      }
      return { start: start2, end: end2 };
    };
    DateInputWithoutContext2.prototype.selectionByIndex = function(index) {
      var selection = { start: index, end: index };
      for (var i = index, j = index - 1; i < this.currentFormat.length || j >= 0; i++, j--) {
        if (i < this.currentFormat.length && this.currentFormat[i] !== "_") {
          selection = this.selectionBySymbol(this.currentFormat[i]);
          break;
        }
        if (j >= 0 && this.currentFormat[j] !== "_") {
          selection = this.selectionBySymbol(this.currentFormat[j]);
          break;
        }
      }
      return selection;
    };
    DateInputWithoutContext2.prototype.switchDateSegment = function(offset4) {
      var _a14 = this.selection, selectionStart = _a14.start, selectionEnd = _a14.end;
      if (selectionStart < selectionEnd && this.currentFormat[selectionStart] !== this.currentFormat[selectionEnd - 1]) {
        this.setSelection(this.selectionByIndex(offset4 > 0 ? selectionStart : selectionEnd - 1));
        return;
      }
      var previousFormatSymbol = this.currentFormat[selectionStart];
      var a = selectionStart + offset4;
      while (a > 0 && a < this.currentFormat.length) {
        if (this.currentFormat[a] !== previousFormatSymbol && this.currentFormat[a] !== "_") {
          break;
        }
        a += offset4;
      }
      if (this.currentFormat[a] === "_") {
        return;
      }
      var b = a;
      while (b >= 0 && b < this.currentFormat.length) {
        if (this.currentFormat[b] !== this.currentFormat[a]) {
          break;
        }
        b += offset4;
      }
      if (a > b && (b + 1 !== selectionStart || a + 1 !== selectionEnd)) {
        this.setSelection({ start: b + 1, end: a + 1 });
      } else if (a < b && (a !== selectionStart || b !== selectionEnd)) {
        this.setSelection({ start: a, end: b });
      }
    };
    DateInputWithoutContext2.prototype.modifyDateSegmentValue = function(offset4, event2) {
      if (!this.kendoDate) {
        return;
      }
      var oldValue = this.value;
      var symbol = this.currentFormat[this.selection.start];
      var currentStepSymbol = this.kendoDate.symbolMap(symbol);
      var step = ((this.props.steps || {})[currentStepSymbol] || 1) * offset4;
      this.kendoDate.modifyPart(symbol, step);
      this.triggerChange(event2, oldValue);
    };
    DateInputWithoutContext2.displayName = "DateInput";
    DateInputWithoutContext2.propTypes = {
      value: PropTypes29.instanceOf(Date),
      format: PropTypes29.oneOfType([
        PropTypes29.string,
        PropTypes29.shape({
          skeleton: PropTypes29.string,
          pattern: PropTypes29.string,
          date: PropTypes29.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes29.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes29.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes29.oneOf(["narrow", "short", "long"]),
          year: PropTypes29.oneOf(["numeric", "2-digit"]),
          month: PropTypes29.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes29.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes29.oneOf(["narrow", "short", "long"]),
          hour: PropTypes29.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes29.bool,
          minute: PropTypes29.oneOf(["numeric", "2-digit"]),
          second: PropTypes29.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes29.oneOf(["short", "long"])
        })
      ]),
      formatPlaceholder: PropTypes29.oneOfType([
        PropTypes29.oneOf(["wide", "narrow", "short", "formatPattern"]),
        PropTypes29.shape({
          year: PropTypes29.string,
          month: PropTypes29.string,
          day: PropTypes29.string,
          hour: PropTypes29.string,
          minute: PropTypes29.string,
          second: PropTypes29.string
        })
      ]),
      width: PropTypes29.oneOfType([
        PropTypes29.string,
        PropTypes29.number
      ]),
      tabIndex: PropTypes29.number,
      title: PropTypes29.string,
      steps: PropTypes29.shape({
        year: PropTypes29.number,
        month: PropTypes29.number,
        day: PropTypes29.number,
        hour: PropTypes29.number,
        minute: PropTypes29.number,
        second: PropTypes29.number
      }),
      min: PropTypes29.instanceOf(Date),
      max: PropTypes29.instanceOf(Date),
      disabled: PropTypes29.bool,
      spinners: PropTypes29.bool,
      name: PropTypes29.string,
      dir: PropTypes29.string,
      label: PropTypes29.string,
      id: PropTypes29.string,
      ariaLabelledBy: PropTypes29.string,
      ariaDescribedBy: PropTypes29.string,
      ariaLabel: PropTypes29.string,
      ariaRole: PropTypes29.string,
      ariaHasPopup: PropTypes29.oneOfType([
        PropTypes29.bool,
        PropTypes29.string
      ]),
      ariaExpanded: PropTypes29.oneOfType([
        PropTypes29.bool
      ]),
      onChange: PropTypes29.func,
      validationMessage: PropTypes29.string,
      required: PropTypes29.bool,
      validate: PropTypes29.bool,
      valid: PropTypes29.bool,
      size: PropTypes29.oneOf([null, "small", "medium", "large"]),
      rounded: PropTypes29.oneOf([null, "small", "medium", "large", "full"]),
      fillMode: PropTypes29.oneOf([null, "solid", "flat", "outline"])
    };
    DateInputWithoutContext2.defaultProps = {
      format: defaultFormat,
      size: "medium",
      rounded: "medium",
      fillMode: "solid",
      formatPlaceholder: defaultFormatPlaceholder,
      // defaultValue: null as Date | null,
      spinners: false,
      disabled: false,
      max: cloneDate(MAX_DATE2),
      min: cloneDate(MIN_DATE2),
      minTime: cloneDate(MIN_TIME),
      maxTime: cloneDate(MAX_TIME),
      required: false,
      validityStyles: true,
      validationMessage: VALIDATION_MESSAGE,
      placeholder: null,
      // the rest of the properties are undefined by default
      ariaHasPopup: "grid"
    };
    return DateInputWithoutContext2;
  }(React63.Component)
);
var DateInputPropsContext = createPropsContext();
;
var DateInput = withPropsContext(DateInputPropsContext, DateInputWithoutContext);
DateInput.displayName = "KendoReactDateInput";
registerForIntl(DateInputWithoutContext);
registerForLocalization(DateInputWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/datepicker/ToggleButton.js
var ToggleButton = Button;

// node_modules/@progress/kendo-react-dateinputs/dist/es/common/PickerWrap.js
var React64 = __toESM(require_react());
var PickerWrap = React64.forwardRef(function(props, ref) {
  var _ref = props.n;
  var element6 = React64.useRef(null);
  React64.useImperativeHandle(ref, function() {
    return element6.current;
  });
  React64.useImperativeHandle(_ref, function() {
    return element6.current;
  });
  var className = React64.useMemo(function() {
    return classNames(props.className, "k-picker-wrap");
  }, [props.className]);
  return React64.createElement("span", { ref: element6, id: props.id, style: props.style, className, tabIndex: props.tabIndex }, props.children);
});

// node_modules/@progress/kendo-react-dateinputs/dist/es/hooks/usePickerFloatingLabel.js
var React65 = __toESM(require_react());
var __assign33 = function() {
  __assign33 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign33.apply(this, arguments);
};
var usePickerFloatingLabel = function(dateInput) {
  var _a14 = React65.useState(false), show = _a14[0], setShow = _a14[1];
  var syncText = function() {
    if (dateInput.current) {
      setShow(Boolean(dateInput.current.text));
    }
  };
  React65.useEffect(syncText);
  return {
    editorValue: show
  };
};
var PickerFloatingLabel = function(props) {
  var floatingLabelProps = usePickerFloatingLabel(props.dateInput);
  return React65.createElement(FloatingLabel, __assign33({}, props, floatingLabelProps));
};

// node_modules/@babel/runtime/helpers/esm/extends.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js
function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
    o2.__proto__ = p2;
    return o2;
  };
  return _setPrototypeOf(o, p);
}

// node_modules/@babel/runtime/helpers/esm/inheritsLoose.js
function _inheritsLoose(subClass, superClass) {
  subClass.prototype = Object.create(superClass.prototype);
  subClass.prototype.constructor = subClass;
  _setPrototypeOf(subClass, superClass);
}

// node_modules/dom-helpers/esm/hasClass.js
function hasClass(element6, className) {
  if (element6.classList)
    return !!className && element6.classList.contains(className);
  return (" " + (element6.className.baseVal || element6.className) + " ").indexOf(" " + className + " ") !== -1;
}

// node_modules/dom-helpers/esm/addClass.js
function addClass(element6, className) {
  if (element6.classList)
    element6.classList.add(className);
  else if (!hasClass(element6, className))
    if (typeof element6.className === "string")
      element6.className = element6.className + " " + className;
    else
      element6.setAttribute("class", (element6.className && element6.className.baseVal || "") + " " + className);
}

// node_modules/dom-helpers/esm/removeClass.js
function replaceClassName(origClass, classToRemove) {
  return origClass.replace(new RegExp("(^|\\s)" + classToRemove + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, "");
}
function removeClass(element6, className) {
  if (element6.classList) {
    element6.classList.remove(className);
  } else if (typeof element6.className === "string") {
    element6.className = replaceClassName(element6.className, className);
  } else {
    element6.setAttribute("class", replaceClassName(element6.className && element6.className.baseVal || "", className));
  }
}

// node_modules/react-transition-group/esm/config.js
var config_default = {
  disabled: false
};

// node_modules/react-transition-group/esm/utils/PropTypes.js
var import_prop_types = __toESM(require_prop_types());
var timeoutsShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({
  enter: import_prop_types.default.number,
  exit: import_prop_types.default.number,
  appear: import_prop_types.default.number
}).isRequired]) : null;
var classNamesShape = true ? import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  active: import_prop_types.default.string
}), import_prop_types.default.shape({
  enter: import_prop_types.default.string,
  enterDone: import_prop_types.default.string,
  enterActive: import_prop_types.default.string,
  exit: import_prop_types.default.string,
  exitDone: import_prop_types.default.string,
  exitActive: import_prop_types.default.string
})]) : null;

// node_modules/react-transition-group/esm/TransitionGroupContext.js
var import_react = __toESM(require_react());
var TransitionGroupContext_default = import_react.default.createContext(null);

// node_modules/react-transition-group/esm/Transition.js
var import_prop_types2 = __toESM(require_prop_types());
var import_react2 = __toESM(require_react());
var import_react_dom = __toESM(require_react_dom());
var UNMOUNTED = "unmounted";
var EXITED = "exited";
var ENTERING = "entering";
var ENTERED = "entered";
var EXITING = "exiting";
var Transition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(Transition2, _React$Component);
  function Transition2(props, context2) {
    var _this3;
    _this3 = _React$Component.call(this, props, context2) || this;
    var parentGroup = context2;
    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;
    var initialStatus;
    _this3.appearStatus = null;
    if (props.in) {
      if (appear) {
        initialStatus = EXITED;
        _this3.appearStatus = ENTERING;
      } else {
        initialStatus = ENTERED;
      }
    } else {
      if (props.unmountOnExit || props.mountOnEnter) {
        initialStatus = UNMOUNTED;
      } else {
        initialStatus = EXITED;
      }
    }
    _this3.state = {
      status: initialStatus
    };
    _this3.nextCallback = null;
    return _this3;
  }
  Transition2.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
    var nextIn = _ref.in;
    if (nextIn && prevState.status === UNMOUNTED) {
      return {
        status: EXITED
      };
    }
    return null;
  };
  var _proto = Transition2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.updateStatus(true, this.appearStatus);
  };
  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
    var nextStatus = null;
    if (prevProps !== this.props) {
      var status = this.state.status;
      if (this.props.in) {
        if (status !== ENTERING && status !== ENTERED) {
          nextStatus = ENTERING;
        }
      } else {
        if (status === ENTERING || status === ENTERED) {
          nextStatus = EXITING;
        }
      }
    }
    this.updateStatus(false, nextStatus);
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.cancelNextCallback();
  };
  _proto.getTimeouts = function getTimeouts() {
    var timeout2 = this.props.timeout;
    var exit, enter, appear;
    exit = enter = appear = timeout2;
    if (timeout2 != null && typeof timeout2 !== "number") {
      exit = timeout2.exit;
      enter = timeout2.enter;
      appear = timeout2.appear !== void 0 ? timeout2.appear : enter;
    }
    return {
      exit,
      enter,
      appear
    };
  };
  _proto.updateStatus = function updateStatus(mounting, nextStatus) {
    if (mounting === void 0) {
      mounting = false;
    }
    if (nextStatus !== null) {
      this.cancelNextCallback();
      if (nextStatus === ENTERING) {
        this.performEnter(mounting);
      } else {
        this.performExit();
      }
    } else if (this.props.unmountOnExit && this.state.status === EXITED) {
      this.setState({
        status: UNMOUNTED
      });
    }
  };
  _proto.performEnter = function performEnter(mounting) {
    var _this22 = this;
    var enter = this.props.enter;
    var appearing = this.context ? this.context.isMounting : mounting;
    var _ref2 = this.props.nodeRef ? [appearing] : [import_react_dom.default.findDOMNode(this), appearing], maybeNode = _ref2[0], maybeAppearing = _ref2[1];
    var timeouts = this.getTimeouts();
    var enterTimeout = appearing ? timeouts.appear : timeouts.enter;
    if (!mounting && !enter || config_default.disabled) {
      this.safeSetState({
        status: ENTERED
      }, function() {
        _this22.props.onEntered(maybeNode);
      });
      return;
    }
    this.props.onEnter(maybeNode, maybeAppearing);
    this.safeSetState({
      status: ENTERING
    }, function() {
      _this22.props.onEntering(maybeNode, maybeAppearing);
      _this22.onTransitionEnd(enterTimeout, function() {
        _this22.safeSetState({
          status: ENTERED
        }, function() {
          _this22.props.onEntered(maybeNode, maybeAppearing);
        });
      });
    });
  };
  _proto.performExit = function performExit() {
    var _this3 = this;
    var exit = this.props.exit;
    var timeouts = this.getTimeouts();
    var maybeNode = this.props.nodeRef ? void 0 : import_react_dom.default.findDOMNode(this);
    if (!exit || config_default.disabled) {
      this.safeSetState({
        status: EXITED
      }, function() {
        _this3.props.onExited(maybeNode);
      });
      return;
    }
    this.props.onExit(maybeNode);
    this.safeSetState({
      status: EXITING
    }, function() {
      _this3.props.onExiting(maybeNode);
      _this3.onTransitionEnd(timeouts.exit, function() {
        _this3.safeSetState({
          status: EXITED
        }, function() {
          _this3.props.onExited(maybeNode);
        });
      });
    });
  };
  _proto.cancelNextCallback = function cancelNextCallback() {
    if (this.nextCallback !== null) {
      this.nextCallback.cancel();
      this.nextCallback = null;
    }
  };
  _proto.safeSetState = function safeSetState(nextState, callback) {
    callback = this.setNextCallback(callback);
    this.setState(nextState, callback);
  };
  _proto.setNextCallback = function setNextCallback(callback) {
    var _this4 = this;
    var active = true;
    this.nextCallback = function(event2) {
      if (active) {
        active = false;
        _this4.nextCallback = null;
        callback(event2);
      }
    };
    this.nextCallback.cancel = function() {
      active = false;
    };
    return this.nextCallback;
  };
  _proto.onTransitionEnd = function onTransitionEnd(timeout2, handler) {
    this.setNextCallback(handler);
    var node14 = this.props.nodeRef ? this.props.nodeRef.current : import_react_dom.default.findDOMNode(this);
    var doesNotHaveTimeoutOrListener = timeout2 == null && !this.props.addEndListener;
    if (!node14 || doesNotHaveTimeoutOrListener) {
      setTimeout(this.nextCallback, 0);
      return;
    }
    if (this.props.addEndListener) {
      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node14, this.nextCallback], maybeNode = _ref3[0], maybeNextCallback = _ref3[1];
      this.props.addEndListener(maybeNode, maybeNextCallback);
    }
    if (timeout2 != null) {
      setTimeout(this.nextCallback, timeout2);
    }
  };
  _proto.render = function render5() {
    var status = this.state.status;
    if (status === UNMOUNTED) {
      return null;
    }
    var _this$props = this.props, children2 = _this$props.children, _in = _this$props.in, _mountOnEnter = _this$props.mountOnEnter, _unmountOnExit = _this$props.unmountOnExit, _appear = _this$props.appear, _enter = _this$props.enter, _exit = _this$props.exit, _timeout = _this$props.timeout, _addEndListener = _this$props.addEndListener, _onEnter = _this$props.onEnter, _onEntering = _this$props.onEntering, _onEntered = _this$props.onEntered, _onExit = _this$props.onExit, _onExiting = _this$props.onExiting, _onExited = _this$props.onExited, _nodeRef = _this$props.nodeRef, childProps = _objectWithoutPropertiesLoose(_this$props, ["children", "in", "mountOnEnter", "unmountOnExit", "appear", "enter", "exit", "timeout", "addEndListener", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "nodeRef"]);
    return (
      // allows for nested Transitions
      /* @__PURE__ */ import_react2.default.createElement(TransitionGroupContext_default.Provider, {
        value: null
      }, typeof children2 === "function" ? children2(status, childProps) : import_react2.default.cloneElement(import_react2.default.Children.only(children2), childProps))
    );
  };
  return Transition2;
}(import_react2.default.Component);
Transition.contextType = TransitionGroupContext_default;
Transition.propTypes = true ? {
  /**
   * A React reference to DOM element that need to transition:
   * https://stackoverflow.com/a/51127130/4671932
   *
   *   - When `nodeRef` prop is used, `node` is not passed to callback functions
   *      (e.g. `onEnter`) because user already has direct access to the node.
   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new
   *     `nodeRef` need to be provided to `Transition` with changed `key` prop
   *     (see
   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).
   */
  nodeRef: import_prop_types2.default.shape({
    current: typeof Element === "undefined" ? import_prop_types2.default.any : function(propValue, key, componentName, location, propFullName, secret) {
      var value2 = propValue[key];
      return import_prop_types2.default.instanceOf(value2 && "ownerDocument" in value2 ? value2.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);
    }
  }),
  /**
   * A `function` child can be used instead of a React element. This function is
   * called with the current transition status (`'entering'`, `'entered'`,
   * `'exiting'`, `'exited'`), which can be used to apply context
   * specific props to a component.
   *
   * ```jsx
   * <Transition in={this.state.in} timeout={150}>
   *   {state => (
   *     <MyComponent className={`fade fade-${state}`} />
   *   )}
   * </Transition>
   * ```
   */
  children: import_prop_types2.default.oneOfType([import_prop_types2.default.func.isRequired, import_prop_types2.default.element.isRequired]).isRequired,
  /**
   * Show the component; triggers the enter or exit states
   */
  in: import_prop_types2.default.bool,
  /**
   * By default the child component is mounted immediately along with
   * the parent `Transition` component. If you want to "lazy mount" the component on the
   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay
   * mounted, even on "exited", unless you also specify `unmountOnExit`.
   */
  mountOnEnter: import_prop_types2.default.bool,
  /**
   * By default the child component stays mounted after it reaches the `'exited'` state.
   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.
   */
  unmountOnExit: import_prop_types2.default.bool,
  /**
   * By default the child component does not perform the enter transition when
   * it first mounts, regardless of the value of `in`. If you want this
   * behavior, set both `appear` and `in` to `true`.
   *
   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop
   * > only adds an additional enter transition. However, in the
   * > `<CSSTransition>` component that first enter transition does result in
   * > additional `.appear-*` classes, that way you can choose to style it
   * > differently.
   */
  appear: import_prop_types2.default.bool,
  /**
   * Enable or disable enter transitions.
   */
  enter: import_prop_types2.default.bool,
  /**
   * Enable or disable exit transitions.
   */
  exit: import_prop_types2.default.bool,
  /**
   * The duration of the transition, in milliseconds.
   * Required unless `addEndListener` is provided.
   *
   * You may specify a single timeout for all transitions:
   *
   * ```jsx
   * timeout={500}
   * ```
   *
   * or individually:
   *
   * ```jsx
   * timeout={{
   *  appear: 500,
   *  enter: 300,
   *  exit: 500,
   * }}
   * ```
   *
   * - `appear` defaults to the value of `enter`
   * - `enter` defaults to `0`
   * - `exit` defaults to `0`
   *
   * @type {number | { enter?: number, exit?: number, appear?: number }}
   */
  timeout: function timeout(props) {
    var pt = timeoutsShape;
    if (!props.addEndListener)
      pt = pt.isRequired;
    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }
    return pt.apply(void 0, [props].concat(args));
  },
  /**
   * Add a custom transition end trigger. Called with the transitioning
   * DOM node and a `done` callback. Allows for more fine grained transition end
   * logic. Timeouts are still used as a fallback if provided.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * ```jsx
   * addEndListener={(node, done) => {
   *   // use the css transitionend event to mark the finish of a transition
   *   node.addEventListener('transitionend', done, false);
   * }}
   * ```
   */
  addEndListener: import_prop_types2.default.func,
  /**
   * Callback fired before the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEnter: import_prop_types2.default.func,
  /**
   * Callback fired after the "entering" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types2.default.func,
  /**
   * Callback fired after the "entered" status is applied. An extra parameter
   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool) -> void
   */
  onEntered: import_prop_types2.default.func,
  /**
   * Callback fired before the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExit: import_prop_types2.default.func,
  /**
   * Callback fired after the "exiting" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExiting: import_prop_types2.default.func,
  /**
   * Callback fired after the "exited" status is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement) -> void
   */
  onExited: import_prop_types2.default.func
} : {};
function noop4() {
}
Transition.defaultProps = {
  in: false,
  mountOnEnter: false,
  unmountOnExit: false,
  appear: false,
  enter: true,
  exit: true,
  onEnter: noop4,
  onEntering: noop4,
  onEntered: noop4,
  onExit: noop4,
  onExiting: noop4,
  onExited: noop4
};
Transition.UNMOUNTED = UNMOUNTED;
Transition.EXITED = EXITED;
Transition.ENTERING = ENTERING;
Transition.ENTERED = ENTERED;
Transition.EXITING = EXITING;
var Transition_default = Transition;

// node_modules/react-transition-group/esm/CSSTransition.js
var import_prop_types3 = __toESM(require_prop_types());
var import_react3 = __toESM(require_react());
var _addClass = function addClass2(node14, classes) {
  return node14 && classes && classes.split(" ").forEach(function(c) {
    return addClass(node14, c);
  });
};
var removeClass2 = function removeClass3(node14, classes) {
  return node14 && classes && classes.split(" ").forEach(function(c) {
    return removeClass(node14, c);
  });
};
var CSSTransition = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(CSSTransition2, _React$Component);
  function CSSTransition2() {
    var _this3;
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this3 = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;
    _this3.appliedClasses = {
      appear: {},
      enter: {},
      exit: {}
    };
    _this3.onEnter = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument = _this3.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument[0], appearing = _this$resolveArgument[1];
      _this3.removeClasses(node14, "exit");
      _this3.addClass(node14, appearing ? "appear" : "enter", "base");
      if (_this3.props.onEnter) {
        _this3.props.onEnter(maybeNode, maybeAppearing);
      }
    };
    _this3.onEntering = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument2 = _this3.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument2[0], appearing = _this$resolveArgument2[1];
      var type = appearing ? "appear" : "enter";
      _this3.addClass(node14, type, "active");
      if (_this3.props.onEntering) {
        _this3.props.onEntering(maybeNode, maybeAppearing);
      }
    };
    _this3.onEntered = function(maybeNode, maybeAppearing) {
      var _this$resolveArgument3 = _this3.resolveArguments(maybeNode, maybeAppearing), node14 = _this$resolveArgument3[0], appearing = _this$resolveArgument3[1];
      var type = appearing ? "appear" : "enter";
      _this3.removeClasses(node14, type);
      _this3.addClass(node14, type, "done");
      if (_this3.props.onEntered) {
        _this3.props.onEntered(maybeNode, maybeAppearing);
      }
    };
    _this3.onExit = function(maybeNode) {
      var _this$resolveArgument4 = _this3.resolveArguments(maybeNode), node14 = _this$resolveArgument4[0];
      _this3.removeClasses(node14, "appear");
      _this3.removeClasses(node14, "enter");
      _this3.addClass(node14, "exit", "base");
      if (_this3.props.onExit) {
        _this3.props.onExit(maybeNode);
      }
    };
    _this3.onExiting = function(maybeNode) {
      var _this$resolveArgument5 = _this3.resolveArguments(maybeNode), node14 = _this$resolveArgument5[0];
      _this3.addClass(node14, "exit", "active");
      if (_this3.props.onExiting) {
        _this3.props.onExiting(maybeNode);
      }
    };
    _this3.onExited = function(maybeNode) {
      var _this$resolveArgument6 = _this3.resolveArguments(maybeNode), node14 = _this$resolveArgument6[0];
      _this3.removeClasses(node14, "exit");
      _this3.addClass(node14, "exit", "done");
      if (_this3.props.onExited) {
        _this3.props.onExited(maybeNode);
      }
    };
    _this3.resolveArguments = function(maybeNode, maybeAppearing) {
      return _this3.props.nodeRef ? [_this3.props.nodeRef.current, maybeNode] : [maybeNode, maybeAppearing];
    };
    _this3.getClassNames = function(type) {
      var classNames2 = _this3.props.classNames;
      var isStringClassNames = typeof classNames2 === "string";
      var prefix = isStringClassNames && classNames2 ? classNames2 + "-" : "";
      var baseClassName = isStringClassNames ? "" + prefix + type : classNames2[type];
      var activeClassName = isStringClassNames ? baseClassName + "-active" : classNames2[type + "Active"];
      var doneClassName = isStringClassNames ? baseClassName + "-done" : classNames2[type + "Done"];
      return {
        baseClassName,
        activeClassName,
        doneClassName
      };
    };
    return _this3;
  }
  var _proto = CSSTransition2.prototype;
  _proto.addClass = function addClass3(node14, type, phase) {
    var className = this.getClassNames(type)[phase + "ClassName"];
    var _this$getClassNames = this.getClassNames("enter"), doneClassName = _this$getClassNames.doneClassName;
    if (type === "appear" && phase === "done" && doneClassName) {
      className += " " + doneClassName;
    }
    if (phase === "active") {
      node14 && node14.scrollTop;
    }
    if (className) {
      this.appliedClasses[type][phase] = className;
      _addClass(node14, className);
    }
  };
  _proto.removeClasses = function removeClasses(node14, type) {
    var _this$appliedClasses$ = this.appliedClasses[type], baseClassName = _this$appliedClasses$.base, activeClassName = _this$appliedClasses$.active, doneClassName = _this$appliedClasses$.done;
    this.appliedClasses[type] = {};
    if (baseClassName) {
      removeClass2(node14, baseClassName);
    }
    if (activeClassName) {
      removeClass2(node14, activeClassName);
    }
    if (doneClassName) {
      removeClass2(node14, doneClassName);
    }
  };
  _proto.render = function render5() {
    var _this$props = this.props, _2 = _this$props.classNames, props = _objectWithoutPropertiesLoose(_this$props, ["classNames"]);
    return /* @__PURE__ */ import_react3.default.createElement(Transition_default, _extends({}, props, {
      onEnter: this.onEnter,
      onEntered: this.onEntered,
      onEntering: this.onEntering,
      onExit: this.onExit,
      onExiting: this.onExiting,
      onExited: this.onExited
    }));
  };
  return CSSTransition2;
}(import_react3.default.Component);
CSSTransition.defaultProps = {
  classNames: ""
};
CSSTransition.propTypes = true ? _extends({}, Transition_default.propTypes, {
  /**
   * The animation classNames applied to the component as it appears, enters,
   * exits or has finished the transition. A single name can be provided, which
   * will be suffixed for each stage, e.g. `classNames="fade"` applies:
   *
   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`
   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`
   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`
   *
   * A few details to note about how these classes are applied:
   *
   * 1. They are _joined_ with the ones that are already defined on the child
   *    component, so if you want to add some base styles, you can use
   *    `className` without worrying that it will be overridden.
   *
   * 2. If the transition component mounts with `in={false}`, no classes are
   *    applied yet. You might be expecting `*-exit-done`, but if you think
   *    about it, a component cannot finish exiting if it hasn't entered yet.
   *
   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This
   *    allows you to define different behavior for when appearing is done and
   *    when regular entering is done, using selectors like
   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply
   *    an epic entrance animation when element first appears in the DOM using
   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can
   *    simply use `fade-enter-done` for defining both cases.
   *
   * Each individual classNames can also be specified independently like:
   *
   * ```js
   * classNames={{
   *  appear: 'my-appear',
   *  appearActive: 'my-active-appear',
   *  appearDone: 'my-done-appear',
   *  enter: 'my-enter',
   *  enterActive: 'my-active-enter',
   *  enterDone: 'my-done-enter',
   *  exit: 'my-exit',
   *  exitActive: 'my-active-exit',
   *  exitDone: 'my-done-exit',
   * }}
   * ```
   *
   * If you want to set these classes using CSS Modules:
   *
   * ```js
   * import styles from './styles.css';
   * ```
   *
   * you might want to use camelCase in your CSS file, that way could simply
   * spread them instead of listing them one by one:
   *
   * ```js
   * classNames={{ ...styles }}
   * ```
   *
   * @type {string | {
   *  appear?: string,
   *  appearActive?: string,
   *  appearDone?: string,
   *  enter?: string,
   *  enterActive?: string,
   *  enterDone?: string,
   *  exit?: string,
   *  exitActive?: string,
   *  exitDone?: string,
   * }}
   */
  classNames: classNamesShape,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEnter: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter-active' or
   * 'appear-active' class is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntering: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'enter' or
   * 'appear' classes are **removed** and the `done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed.
   *
   * @type Function(node: HtmlElement, isAppearing: bool)
   */
  onEntered: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' class is
   * applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExit: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExiting: import_prop_types3.default.func,
  /**
   * A `<Transition>` callback fired immediately after the 'exit' classes
   * are **removed** and the `exit-done` class is added to the DOM node.
   *
   * **Note**: when `nodeRef` prop is passed, `node` is not passed
   *
   * @type Function(node: HtmlElement)
   */
  onExited: import_prop_types3.default.func
}) : {};
var CSSTransition_default = CSSTransition;

// node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return self;
}

// node_modules/react-transition-group/esm/utils/ChildMapping.js
var import_react4 = __toESM(require_react());
function getChildMapping(children2, mapFn) {
  var mapper = function mapper2(child) {
    return mapFn && (0, import_react4.isValidElement)(child) ? mapFn(child) : child;
  };
  var result = /* @__PURE__ */ Object.create(null);
  if (children2)
    import_react4.Children.map(children2, function(c) {
      return c;
    }).forEach(function(child) {
      result[child.key] = mapper(child);
    });
  return result;
}
function mergeChildMappings(prev, next) {
  prev = prev || {};
  next = next || {};
  function getValueForKey(key) {
    return key in next ? next[key] : prev[key];
  }
  var nextKeysPending = /* @__PURE__ */ Object.create(null);
  var pendingKeys = [];
  for (var prevKey in prev) {
    if (prevKey in next) {
      if (pendingKeys.length) {
        nextKeysPending[prevKey] = pendingKeys;
        pendingKeys = [];
      }
    } else {
      pendingKeys.push(prevKey);
    }
  }
  var i;
  var childMapping = {};
  for (var nextKey in next) {
    if (nextKeysPending[nextKey]) {
      for (i = 0; i < nextKeysPending[nextKey].length; i++) {
        var pendingNextKey = nextKeysPending[nextKey][i];
        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);
      }
    }
    childMapping[nextKey] = getValueForKey(nextKey);
  }
  for (i = 0; i < pendingKeys.length; i++) {
    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);
  }
  return childMapping;
}
function getProp(child, prop2, props) {
  return props[prop2] != null ? props[prop2] : child.props[prop2];
}
function getInitialChildMapping(props, onExited) {
  return getChildMapping(props.children, function(child) {
    return (0, import_react4.cloneElement)(child, {
      onExited: onExited.bind(null, child),
      in: true,
      appear: getProp(child, "appear", props),
      enter: getProp(child, "enter", props),
      exit: getProp(child, "exit", props)
    });
  });
}
function getNextChildMapping(nextProps, prevChildMapping, onExited) {
  var nextChildMapping = getChildMapping(nextProps.children);
  var children2 = mergeChildMappings(prevChildMapping, nextChildMapping);
  Object.keys(children2).forEach(function(key) {
    var child = children2[key];
    if (!(0, import_react4.isValidElement)(child))
      return;
    var hasPrev = key in prevChildMapping;
    var hasNext = key in nextChildMapping;
    var prevChild = prevChildMapping[key];
    var isLeaving = (0, import_react4.isValidElement)(prevChild) && !prevChild.props.in;
    if (hasNext && (!hasPrev || isLeaving)) {
      children2[key] = (0, import_react4.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: true,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    } else if (!hasNext && hasPrev && !isLeaving) {
      children2[key] = (0, import_react4.cloneElement)(child, {
        in: false
      });
    } else if (hasNext && hasPrev && (0, import_react4.isValidElement)(prevChild)) {
      children2[key] = (0, import_react4.cloneElement)(child, {
        onExited: onExited.bind(null, child),
        in: prevChild.props.in,
        exit: getProp(child, "exit", nextProps),
        enter: getProp(child, "enter", nextProps)
      });
    }
  });
  return children2;
}

// node_modules/react-transition-group/esm/TransitionGroup.js
var import_prop_types4 = __toESM(require_prop_types());
var import_react5 = __toESM(require_react());
var values = Object.values || function(obj) {
  return Object.keys(obj).map(function(k) {
    return obj[k];
  });
};
var defaultProps6 = {
  component: "div",
  childFactory: function childFactory(child) {
    return child;
  }
};
var TransitionGroup = /* @__PURE__ */ function(_React$Component) {
  _inheritsLoose(TransitionGroup2, _React$Component);
  function TransitionGroup2(props, context2) {
    var _this3;
    _this3 = _React$Component.call(this, props, context2) || this;
    var handleExited = _this3.handleExited.bind(_assertThisInitialized(_this3));
    _this3.state = {
      contextValue: {
        isMounting: true
      },
      handleExited,
      firstRender: true
    };
    return _this3;
  }
  var _proto = TransitionGroup2.prototype;
  _proto.componentDidMount = function componentDidMount() {
    this.mounted = true;
    this.setState({
      contextValue: {
        isMounting: false
      }
    });
  };
  _proto.componentWillUnmount = function componentWillUnmount() {
    this.mounted = false;
  };
  TransitionGroup2.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
    var prevChildMapping = _ref.children, handleExited = _ref.handleExited, firstRender = _ref.firstRender;
    return {
      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
      firstRender: false
    };
  };
  _proto.handleExited = function handleExited(child, node14) {
    var currentChildMapping = getChildMapping(this.props.children);
    if (child.key in currentChildMapping)
      return;
    if (child.props.onExited) {
      child.props.onExited(node14);
    }
    if (this.mounted) {
      this.setState(function(state) {
        var children2 = _extends({}, state.children);
        delete children2[child.key];
        return {
          children: children2
        };
      });
    }
  };
  _proto.render = function render5() {
    var _this$props = this.props, Component64 = _this$props.component, childFactory2 = _this$props.childFactory, props = _objectWithoutPropertiesLoose(_this$props, ["component", "childFactory"]);
    var contextValue = this.state.contextValue;
    var children2 = values(this.state.children).map(childFactory2);
    delete props.appear;
    delete props.enter;
    delete props.exit;
    if (Component64 === null) {
      return /* @__PURE__ */ import_react5.default.createElement(TransitionGroupContext_default.Provider, {
        value: contextValue
      }, children2);
    }
    return /* @__PURE__ */ import_react5.default.createElement(TransitionGroupContext_default.Provider, {
      value: contextValue
    }, /* @__PURE__ */ import_react5.default.createElement(Component64, props, children2));
  };
  return TransitionGroup2;
}(import_react5.default.Component);
TransitionGroup.propTypes = true ? {
  /**
   * `<TransitionGroup>` renders a `<div>` by default. You can change this
   * behavior by providing a `component` prop.
   * If you use React v16+ and would like to avoid a wrapping `<div>` element
   * you can pass in `component={null}`. This is useful if the wrapping div
   * borks your css styles.
   */
  component: import_prop_types4.default.any,
  /**
   * A set of `<Transition>` components, that are toggled `in` and out as they
   * leave. the `<TransitionGroup>` will inject specific transition props, so
   * remember to spread them through if you are wrapping the `<Transition>` as
   * with our `<Fade>` example.
   *
   * While this component is meant for multiple `Transition` or `CSSTransition`
   * children, sometimes you may want to have a single transition child with
   * content that you want to be transitioned out and in when you change it
   * (e.g. routes, images etc.) In that case you can change the `key` prop of
   * the transition child as you change its content, this will cause
   * `TransitionGroup` to transition the child out and back in.
   */
  children: import_prop_types4.default.node,
  /**
   * A convenience prop that enables or disables appear animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  appear: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables enter animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  enter: import_prop_types4.default.bool,
  /**
   * A convenience prop that enables or disables exit animations
   * for all children. Note that specifying this will override any defaults set
   * on individual children Transitions.
   */
  exit: import_prop_types4.default.bool,
  /**
   * You may need to apply reactive updates to a child as it is exiting.
   * This is generally done by using `cloneElement` however in the case of an exiting
   * child the element has already been removed and not accessible to the consumer.
   *
   * If you do need to update a child as it leaves you can provide a `childFactory`
   * to wrap every child, even the ones that are leaving.
   *
   * @type Function(child: ReactElement) -> ReactElement
   */
  childFactory: import_prop_types4.default.func
} : {};
TransitionGroup.defaultProps = defaultProps6;
var TransitionGroup_default = TransitionGroup;

// node_modules/@progress/kendo-react-animation/dist/es/util.js
var outerHeight = function(element6) {
  if (!element6 || !element6.ownerDocument.defaultView) {
    return 0;
  }
  var wnd = element6.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element6);
  var marginTop = parseFloat(computedStyles.marginTop);
  var marginBottom = parseFloat(computedStyles.marginBottom);
  return element6.offsetHeight + marginTop + marginBottom;
};
var outerWidth = function(element6) {
  if (!element6 || !element6.ownerDocument.defaultView) {
    return 0;
  }
  var wnd = element6.ownerDocument.defaultView;
  var computedStyles = wnd.getComputedStyle(element6);
  var marginLeft = parseFloat(computedStyles.marginLeft);
  var marginRight = parseFloat(computedStyles.marginRight);
  return element6.offsetWidth + marginLeft + marginRight;
};
var styles3 = {
  "animation-container": "k-animation-container",
  "animation-container-relative": "k-animation-container-relative",
  "animation-container-fixed": "k-animation-container-fixed",
  "push-right-enter": "k-push-right-enter",
  "push-right-appear": "k-push-right-appear",
  "push-right-enter-active": "k-push-right-enter-active",
  "push-right-appear-active": "k-push-right-appear-active",
  "push-right-exit": "k-push-right-exit",
  "push-right-exit-active": "k-push-right-exit-active",
  "push-left-enter": "k-push-left-enter",
  "push-left-appear": "k-push-left-appear",
  "push-left-enter-active": "k-push-left-enter-active",
  "push-left-appear-active": "k-push-left-appear-active",
  "push-left-exit": "k-push-left-exit",
  "push-left-exit-active": "k-push-left-exit-active",
  "push-down-enter": "k-push-down-enter",
  "push-down-appear": "k-push-down-appear",
  "push-down-enter-active": "k-push-down-enter-active",
  "push-down-appear-active": "k-push-down-appear-active",
  "push-down-exit": "k-push-down-exit",
  "push-down-exit-active": "k-push-down-exit-active",
  "push-up-enter": "k-push-up-enter",
  "push-up-appear": "k-push-up-appear",
  "push-up-enter-active": "k-push-up-enter-active",
  "push-up-appear-active": "k-push-up-appear-active",
  "push-up-exit": "k-push-up-exit",
  "push-up-exit-active": "k-push-up-exit-active",
  "expand": "k-expand",
  "expand-vertical-enter": "k-expand-vertical-enter",
  "expand-vertical-appear": "k-expand-vertical-appear",
  "expand-vertical-enter-active": "k-expand-vertical-enter-active",
  "expand-vertical-appear-active": "k-expand-vertical-appear-active",
  "expand-vertical-exit": "k-expand-vertical-exit",
  "expand-vertical-exit-active": "k-expand-vertical-exit-active",
  "expand-horizontal-enter": "k-expand-horizontal-enter",
  "expand-horizontal-appear": "k-expand-horizontal-appear",
  "expand-horizontal-enter-active": "k-expand-horizontal-enter-active",
  "expand-horizontal-appear-active": "k-expand-horizontal-appear-active",
  "expand-horizontal-exit": "k-expand-horizontal-exit",
  "expand-horizontal-exit-active": "k-expand-horizontal-exit-active",
  "child-animation-container": "k-child-animation-container",
  "fade-enter": "k-fade-enter",
  "fade-appear": "k-fade-appear",
  "fade-enter-active": "k-fade-enter-active",
  "fade-appear-active": "k-fade-appear-active",
  "fade-exit": "k-fade-exit",
  "fade-exit-active": "k-fade-exit-active",
  "zoom-in-enter": "k-zoom-in-enter",
  "zoom-in-appear": "k-zoom-in-appear",
  "zoom-in-enter-active": "k-zoom-in-enter-active",
  "zoom-in-appear-active": "k-zoom-in-appear-active",
  "zoom-in-exit": "k-zoom-in-exit",
  "zoom-in-exit-active": "k-zoom-in-exit-active",
  "zoom-out-enter": "k-zoom-out-enter",
  "zoom-out-appear": "k-zoom-out-appear",
  "zoom-out-enter-active": "k-zoom-out-enter-active",
  "zoom-out-appear-active": "k-zoom-out-appear-active",
  "zoom-out-exit": "k-zoom-out-exit",
  "zoom-out-exit-active": "k-zoom-out-exit-active",
  "slide-in-appear": "k-slide-in-appear",
  "centered": "k-centered",
  "slide-in-appear-active": "k-slide-in-appear-active",
  "slide-down-enter": "k-slide-down-enter",
  "slide-down-appear": "k-slide-down-appear",
  "slide-down-enter-active": "k-slide-down-enter-active",
  "slide-down-appear-active": "k-slide-down-appear-active",
  "slide-down-exit": "k-slide-down-exit",
  "slide-down-exit-active": "k-slide-down-exit-active",
  "slide-up-enter": "k-slide-up-enter",
  "slide-up-appear": "k-slide-up-appear",
  "slide-up-enter-active": "k-slide-up-enter-active",
  "slide-up-appear-active": "k-slide-up-appear-active",
  "slide-up-exit": "k-slide-up-exit",
  "slide-up-exit-active": "k-slide-up-exit-active",
  "slide-right-enter": "k-slide-right-enter",
  "slide-right-appear": "k-slide-right-appear",
  "slide-right-enter-active": "k-slide-right-enter-active",
  "slide-right-appear-active": "k-slide-right-appear-active",
  "slide-right-exit": "k-slide-right-exit",
  "slide-right-exit-active": "k-slide-right-exit-active",
  "slide-left-enter": "k-slide-left-enter",
  "slide-left-appear": "k-slide-left-appear",
  "slide-left-enter-active": "k-slide-left-enter-active",
  "slide-left-appear-active": "k-slide-left-appear-active",
  "slide-left-exit": "k-slide-left-exit",
  "slide-left-exit-active": "k-slide-left-exit-active",
  "reveal-vertical-enter": "k-reveal-vertical-enter",
  "reveal-vertical-appear": "k-reveal-vertical-appear",
  "reveal-vertical-enter-active": "k-reveal-vertical-enter-active",
  "reveal-vertical-appear-active": "k-reveal-vertical-appear-active",
  "reveal-vertical-exit": "k-reveal-vertical-exit",
  "reveal-vertical-exit-active": "k-reveal-vertical-exit-active",
  "reveal-horizontal-enter": "k-reveal-horizontal-enter",
  "reveal-horizontal-appear": "k-reveal-horizontal-appear",
  "reveal-horizontal-enter-active": "k-reveal-horizontal-enter-active",
  "reveal-horizontal-appear-active": "k-reveal-horizontal-appear-active",
  "reveal-horizontal-exit": "k-reveal-horizontal-exit",
  "reveal-horizontal-exit-active": "k-reveal-horizontal-exit-active"
};
var stylesMap = {
  outerHeight,
  outerWidth,
  styles: styles3
};
var util_default2 = stylesMap;

// node_modules/@progress/kendo-react-animation/dist/es/AnimationChild.js
var React70 = __toESM(require_react());
var PropTypes34 = __toESM(require_prop_types());
var __extends25 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign34 = function() {
  __assign34 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign34.apply(this, arguments);
};
var __rest16 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var styles4 = util_default2.styles;
var AnimationChild = (
  /** @class */
  function(_super) {
    __extends25(AnimationChild2, _super);
    function AnimationChild2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.elementRef = React70.createRef();
      return _this3;
    }
    Object.defineProperty(AnimationChild2.prototype, "element", {
      /**
       * The element that is being animated.
       */
      get: function() {
        return this.elementRef.current;
      },
      enumerable: false,
      configurable: true
    });
    AnimationChild2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, children2 = _a14.children, style = _a14.style, appear = _a14.appear, enter = _a14.enter, exit = _a14.exit, transitionName = _a14.transitionName, transitionEnterDuration = _a14.transitionEnterDuration, transitionExitDuration = _a14.transitionExitDuration, className = _a14.className, onEnter = _a14.onEnter, onEntering = _a14.onEntering, onEntered = _a14.onEntered, onExit = _a14.onExit, onExiting = _a14.onExiting, onExited = _a14.onExited, onAfterExited = _a14.onAfterExited, mountOnEnter = _a14.mountOnEnter, unmountOnExit = _a14.unmountOnExit, animationEnteringStyle = _a14.animationEnteringStyle, animationEnteredStyle = _a14.animationEnteredStyle, animationExitingStyle = _a14.animationExitingStyle, animationExitedStyle = _a14.animationExitedStyle, other = __rest16(_a14, ["children", "style", "appear", "enter", "exit", "transitionName", "transitionEnterDuration", "transitionExitDuration", "className", "onEnter", "onEntering", "onEntered", "onExit", "onExiting", "onExited", "onAfterExited", "mountOnEnter", "unmountOnExit", "animationEnteringStyle", "animationEnteredStyle", "animationExitingStyle", "animationExitedStyle"]);
      var childAnimationContainerClassNames = classNames(className, styles4["child-animation-container"]);
      var defaultStyle = __assign34({ transitionDelay: "0ms" }, style);
      var animationStyle = {
        entering: __assign34({ transitionDuration: "".concat(transitionEnterDuration, "ms") }, animationEnteringStyle),
        entered: __assign34({}, animationEnteredStyle),
        exiting: __assign34({ transitionDuration: "".concat(transitionExitDuration, "ms") }, animationExitingStyle),
        exited: __assign34({}, animationExitedStyle)
      };
      var transitionProps = {
        in: this.props.in,
        appear,
        enter,
        exit,
        mountOnEnter,
        unmountOnExit,
        timeout: {
          enter: transitionEnterDuration,
          exit: transitionExitDuration
        },
        onEnter: function() {
          if (onEnter) {
            onEnter.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        onEntering: function() {
          if (onEntering) {
            onEntering.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        onEntered: function() {
          if (onEntered) {
            onEntered.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        onExit: function() {
          if (onExit) {
            onExit.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        onExiting: function() {
          if (onExiting) {
            onExiting.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        onExited: function() {
          if (onAfterExited) {
            onAfterExited.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
          if (onExited) {
            onExited.call(void 0, { animatedElement: _this3.element, target: _this3 });
          }
        },
        classNames: {
          appear: styles4["".concat(transitionName, "-appear")] || "".concat(transitionName, "-appear"),
          appearActive: styles4["".concat(transitionName, "-appear-active")] || "".concat(transitionName, "-appear-active"),
          enter: styles4["".concat(transitionName, "-enter")] || "".concat(transitionName, "-enter"),
          enterActive: styles4["".concat(transitionName, "-enter-active")] || "".concat(transitionName, "-enter-active"),
          exit: styles4["".concat(transitionName, "-exit")] || "".concat(transitionName, "-exit"),
          exitActive: styles4["".concat(transitionName, "-exit-active")] || "".concat(transitionName, "-exit-active")
        }
      };
      return React70.createElement(CSSTransition_default, __assign34({}, transitionProps, other, { nodeRef: this.elementRef }), function(status) {
        return React70.createElement("div", { style: __assign34(__assign34({}, defaultStyle), animationStyle[status]), className: childAnimationContainerClassNames, ref: _this3.elementRef }, children2);
      });
    };
    AnimationChild2.propTypes = {
      in: PropTypes34.bool,
      children: PropTypes34.oneOfType([
        PropTypes34.arrayOf(PropTypes34.node),
        PropTypes34.node
      ]),
      transitionName: PropTypes34.string.isRequired,
      className: PropTypes34.string,
      appear: PropTypes34.bool,
      enter: PropTypes34.bool,
      exit: PropTypes34.bool,
      transitionEnterDuration: PropTypes34.number.isRequired,
      transitionExitDuration: PropTypes34.number.isRequired,
      mountOnEnter: PropTypes34.bool,
      unmountOnExit: PropTypes34.bool,
      animationEnteringStyle: PropTypes34.object,
      animationEnteredStyle: PropTypes34.object,
      animationExitingStyle: PropTypes34.object,
      animationExitedStyle: PropTypes34.object
    };
    AnimationChild2.defaultProps = {
      mountOnEnter: true,
      unmountOnExit: false,
      onEnter: noop,
      onEntering: noop,
      onEntered: noop,
      onExit: noop,
      onExiting: noop,
      onExited: noop,
      onAfterExited: noop,
      animationEnteringStyle: {},
      animationEnteredStyle: {},
      animationExitingStyle: {},
      animationExitedStyle: {}
    };
    return AnimationChild2;
  }(React70.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/package-metadata.js
var packageMetadata6 = {
  name: "@progress/kendo-react-animation",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225019,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-animation/dist/es/Animation.js
var React71 = __toESM(require_react());
var PropTypes35 = __toESM(require_prop_types());
var __extends26 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign35 = function() {
  __assign35 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign35.apply(this, arguments);
};
var __rest17 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var styles5 = util_default2.styles;
var Animation = (
  /** @class */
  function(_super) {
    __extends26(Animation3, _super);
    function Animation3(props) {
      var _this3 = _super.call(this, props) || this;
      validatePackage2(packageMetadata6);
      return _this3;
    }
    Animation3.prototype.render = function() {
      var _a14 = this.props, id = _a14.id, style = _a14.style, children2 = _a14.children, component = _a14.component, className = _a14.className, childFactory2 = _a14.childFactory, stackChildren = _a14.stackChildren, componentChildStyle = _a14.componentChildStyle, componentChildClassName = _a14.componentChildClassName, other = __rest17(_a14, ["id", "style", "children", "component", "className", "childFactory", "stackChildren", "componentChildStyle", "componentChildClassName"]);
      var transitionProps = {
        id,
        style,
        component,
        childFactory: childFactory2,
        className: classNames(styles5["animation-container"], styles5["animation-container-relative"], className)
      };
      var content = React71.Children.map(children2 || null, function(child) {
        return React71.createElement(AnimationChild, __assign35({}, other, { style: componentChildStyle, className: componentChildClassName }), child);
      });
      return React71.createElement(TransitionGroup_default, __assign35({}, transitionProps), content);
    };
    Animation3.propTypes = {
      children: PropTypes35.oneOfType([
        PropTypes35.arrayOf(PropTypes35.node),
        PropTypes35.node
      ]),
      childFactory: PropTypes35.any,
      className: PropTypes35.string,
      component: PropTypes35.string,
      id: PropTypes35.string,
      style: PropTypes35.any,
      transitionName: PropTypes35.string.isRequired,
      appear: PropTypes35.bool.isRequired,
      enter: PropTypes35.bool.isRequired,
      exit: PropTypes35.bool.isRequired,
      transitionEnterDuration: PropTypes35.number.isRequired,
      transitionExitDuration: PropTypes35.number.isRequired
    };
    Animation3.defaultProps = {
      component: "div"
    };
    return Animation3;
  }(React71.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Fade.js
var React72 = __toESM(require_react());
var PropTypes36 = __toESM(require_prop_types());
var __extends27 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign36 = function() {
  __assign36 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign36.apply(this, arguments);
};
var __rest18 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Fade = (
  /** @class */
  function(_super) {
    __extends27(Fade2, _super);
    function Fade2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Fade2.prototype.render = function() {
      var _a14 = this.props, children2 = _a14.children, other = __rest18(_a14, ["children"]);
      var animationProps = {
        transitionName: "fade"
      };
      return React72.createElement(Animation, __assign36({}, animationProps, other), children2);
    };
    Fade2.propTypes = {
      children: PropTypes36.oneOfType([
        PropTypes36.arrayOf(PropTypes36.node),
        PropTypes36.node
      ]),
      childFactory: PropTypes36.any,
      className: PropTypes36.string,
      component: PropTypes36.string,
      id: PropTypes36.string,
      style: PropTypes36.any
    };
    Fade2.defaultProps = {
      appear: false,
      enter: true,
      exit: false,
      transitionEnterDuration: 500,
      transitionExitDuration: 500
    };
    return Fade2;
  }(React72.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Expand.js
var React73 = __toESM(require_react());
var PropTypes37 = __toESM(require_prop_types());
var __extends28 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign37 = function() {
  __assign37 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign37.apply(this, arguments);
};
var __rest19 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Expand = (
  /** @class */
  function(_super) {
    __extends28(Expand2, _super);
    function Expand2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Expand2.prototype.render = function() {
      var _a14 = this.props, direction = _a14.direction, children2 = _a14.children, other = __rest19(_a14, ["direction", "children"]);
      var animationProps = {
        transitionName: "expand-".concat(direction)
      };
      return React73.createElement(Animation, __assign37({}, animationProps, other), children2);
    };
    Expand2.propTypes = {
      children: PropTypes37.oneOfType([
        PropTypes37.arrayOf(PropTypes37.node),
        PropTypes37.node
      ]),
      childFactory: PropTypes37.any,
      className: PropTypes37.string,
      direction: PropTypes37.oneOf([
        "horizontal",
        "vertical"
      ]),
      component: PropTypes37.string,
      id: PropTypes37.string,
      style: PropTypes37.any
    };
    Expand2.defaultProps = {
      appear: false,
      enter: true,
      exit: true,
      transitionEnterDuration: 300,
      transitionExitDuration: 300,
      direction: "vertical"
    };
    return Expand2;
  }(React73.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Push.js
var React74 = __toESM(require_react());
var PropTypes38 = __toESM(require_prop_types());
var __extends29 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign38 = function() {
  __assign38 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign38.apply(this, arguments);
};
var __rest20 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EXITING_ANIMATION_STYLE = { position: "absolute", top: "0", left: "0" };
var Push = (
  /** @class */
  function(_super) {
    __extends29(Push2, _super);
    function Push2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Push2.prototype.render = function() {
      var _a14 = this.props, children2 = _a14.children, direction = _a14.direction, other = __rest20(_a14, ["children", "direction"]);
      return React74.createElement(Animation, __assign38({}, other, { transitionName: "push-".concat(direction), animationExitingStyle: this.props.stackChildren ? EXITING_ANIMATION_STYLE : void 0 }), children2);
    };
    Push2.propTypes = {
      children: PropTypes38.oneOfType([
        PropTypes38.arrayOf(PropTypes38.node),
        PropTypes38.node
      ]),
      childFactory: PropTypes38.any,
      className: PropTypes38.string,
      direction: PropTypes38.oneOf([
        "up",
        "down",
        "left",
        "right"
      ]),
      component: PropTypes38.string,
      id: PropTypes38.string,
      style: PropTypes38.any,
      stackChildren: PropTypes38.bool
    };
    Push2.defaultProps = {
      appear: false,
      enter: true,
      exit: true,
      transitionEnterDuration: 300,
      transitionExitDuration: 300,
      direction: "right",
      stackChildren: false
    };
    return Push2;
  }(React74.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Slide.js
var React75 = __toESM(require_react());
var PropTypes39 = __toESM(require_prop_types());
var __extends30 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign39 = function() {
  __assign39 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign39.apply(this, arguments);
};
var __rest21 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Slide = (
  /** @class */
  function(_super) {
    __extends30(Slide2, _super);
    function Slide2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Slide2.prototype.render = function() {
      var _a14 = this.props, direction = _a14.direction, children2 = _a14.children, other = __rest21(_a14, ["direction", "children"]);
      var animationProps = {
        transitionName: "slide-".concat(direction)
      };
      return React75.createElement(Animation, __assign39({}, animationProps, other), children2);
    };
    Slide2.propTypes = {
      children: PropTypes39.oneOfType([
        PropTypes39.arrayOf(PropTypes39.node),
        PropTypes39.node
      ]),
      childFactory: PropTypes39.any,
      className: PropTypes39.string,
      direction: PropTypes39.oneOf([
        "up",
        "down",
        "left",
        "right"
      ]),
      component: PropTypes39.string,
      id: PropTypes39.string,
      style: PropTypes39.any
    };
    Slide2.defaultProps = {
      appear: false,
      enter: true,
      exit: true,
      transitionEnterDuration: 300,
      transitionExitDuration: 300,
      direction: "down"
    };
    return Slide2;
  }(React75.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Zoom.js
var React76 = __toESM(require_react());
var PropTypes40 = __toESM(require_prop_types());
var __extends31 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign40 = function() {
  __assign40 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign40.apply(this, arguments);
};
var __rest22 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var EXITING_ANIMATION_STYLE2 = { position: "absolute", top: "0", left: "0" };
var Zoom = (
  /** @class */
  function(_super) {
    __extends31(Zoom2, _super);
    function Zoom2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    Zoom2.prototype.render = function() {
      var _a14 = this.props, children2 = _a14.children, direction = _a14.direction, other = __rest22(_a14, ["children", "direction"]);
      return React76.createElement(Animation, __assign40({}, other, { transitionName: "zoom-".concat(direction), animationExitingStyle: this.props.stackChildren ? EXITING_ANIMATION_STYLE2 : void 0 }), children2);
    };
    Zoom2.propTypes = {
      children: PropTypes40.oneOfType([
        PropTypes40.arrayOf(PropTypes40.node),
        PropTypes40.node
      ]),
      childFactory: PropTypes40.any,
      className: PropTypes40.string,
      direction: PropTypes40.oneOf([
        "in",
        "out"
      ]),
      component: PropTypes40.string,
      id: PropTypes40.string,
      style: PropTypes40.any,
      stackChildren: PropTypes40.bool
    };
    Zoom2.defaultProps = {
      appear: false,
      enter: true,
      exit: true,
      transitionEnterDuration: 300,
      transitionExitDuration: 300,
      direction: "out",
      stackChildren: false
    };
    return Zoom2;
  }(React76.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/Reveal.js
var React77 = __toESM(require_react());
var PropTypes41 = __toESM(require_prop_types());
var __extends32 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign41 = function() {
  __assign41 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign41.apply(this, arguments);
};
var __rest23 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Reveal = (
  /** @class */
  function(_super) {
    __extends32(Reveal2, _super);
    function Reveal2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.state = {
        maxHeight: void 0,
        maxWidth: void 0
      };
      _this3.componentWillEnter = function(event2) {
        var _a14 = _this3.props, onEnter = _a14.onEnter, onBeforeEnter = _a14.onBeforeEnter;
        if (onBeforeEnter) {
          onBeforeEnter.call(void 0, event2);
        }
        _this3.updateContainerDimensions(event2.animatedElement, function() {
          if (onEnter) {
            onEnter.call(void 0, event2);
          }
        });
      };
      _this3.componentIsEntering = function(event2) {
        var onEntering = _this3.props.onEntering;
        _this3.updateContainerDimensions(event2.animatedElement, function() {
          if (onEntering) {
            onEntering.call(void 0, event2);
          }
        });
      };
      _this3.componentWillExit = function(event2) {
        var onExit = _this3.props.onExit;
        _this3.updateContainerDimensions(event2.animatedElement, function() {
          if (onExit) {
            onExit.call(void 0, event2);
          }
        });
      };
      _this3.updateContainerDimensions = function(node14, done) {
        if (done === void 0) {
          done = noop;
        }
        var content = node14.firstChild;
        if (content) {
          var newHeight = util_default2.outerHeight(content);
          var newWidth = util_default2.outerWidth(content);
          _this3.setState({
            maxHeight: newHeight,
            maxWidth: newWidth
          }, done);
        }
      };
      return _this3;
    }
    Reveal2.prototype.render = function() {
      var _a14 = this.props, direction = _a14.direction, children2 = _a14.children, childFactory2 = _a14.childFactory, other = __rest23(_a14, ["direction", "children", "childFactory"]);
      var _b3 = this.state, maxHeight = _b3.maxHeight, maxWidth = _b3.maxWidth;
      var maxOffset;
      if (direction === "vertical") {
        maxOffset = { maxHeight: maxHeight ? "".concat(maxHeight, "px") : "" };
      } else {
        maxOffset = { maxWidth: maxWidth ? "".concat(maxWidth, "px") : "" };
      }
      var animationEnteringStyle = {
        maxHeight: maxOffset.maxHeight,
        maxWidth: maxOffset.maxWidth
      };
      var factory = function(child) {
        var result = childFactory2 ? childFactory2(child) : child;
        if (!result.props.in) {
          return React77.cloneElement(result, __assign41(__assign41({}, result.props), { style: __assign41(__assign41({}, result.props.style), { maxHeight: maxOffset.maxHeight, maxWidth: maxOffset.maxWidth }) }));
        }
        return result;
      };
      return React77.createElement(Animation, __assign41({}, other, { childFactory: factory, onEnter: this.componentWillEnter, onEntering: this.componentIsEntering, onExit: this.componentWillExit, animationEnteringStyle, transitionName: "reveal-".concat(direction) }), children2);
    };
    Reveal2.propTypes = {
      children: PropTypes41.oneOfType([
        PropTypes41.arrayOf(PropTypes41.node),
        PropTypes41.node
      ]),
      childFactory: PropTypes41.any,
      className: PropTypes41.string,
      direction: PropTypes41.oneOf([
        "horizontal",
        "vertical"
      ]),
      component: PropTypes41.string,
      id: PropTypes41.string,
      style: PropTypes41.any
    };
    Reveal2.defaultProps = {
      appear: false,
      enter: true,
      exit: true,
      transitionEnterDuration: 300,
      transitionExitDuration: 300,
      direction: "vertical"
    };
    return Reveal2;
  }(React77.Component)
);

// node_modules/@progress/kendo-react-animation/dist/es/hooks/useAnimation.js
var React78 = __toESM(require_react());
var useAnimation = function(config, deps) {
  var offset4 = React78.useRef(0);
  var mount = React78.useRef(false);
  var animationFrame = React78.useRef();
  var animate = function(transition) {
    var duration2 = transition.duration;
    var start2;
    var progress;
    var skip3 = offset4.current && 1 - offset4.current;
    if (transition.onStart) {
      transition.onStart();
    }
    var frame = function(timestamp) {
      if (!start2) {
        start2 = timestamp;
      }
      progress = timestamp - start2 + 1;
      var rate = progress / duration2 + skip3;
      if (rate <= 1) {
        if (transition.onUpdate) {
          transition.onUpdate(rate);
        }
        animationFrame.current = window.requestAnimationFrame(frame);
        offset4.current = rate;
      } else {
        if (transition.onEnd) {
          transition.onEnd(1);
        }
        offset4.current = 0;
      }
    };
    animationFrame.current = window.requestAnimationFrame(frame);
  };
  React78.useEffect(function() {
    animate(config);
    return function() {
      if (animationFrame.current) {
        window.cancelAnimationFrame(animationFrame.current);
      }
    };
  }, deps);
  React78.useEffect(function() {
    mount.current = true;
  }, []);
};

// node_modules/@progress/kendo-react-layout/dist/es/package-metadata.js
var packageMetadata7 = {
  name: "@progress/kendo-react-layout",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225429,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetItem.js
var React79 = __toESM(require_react());
var PropTypes42 = __toESM(require_prop_types());
var ActionSheetItem = function(props) {
  var itemRef = React79.useRef(null);
  var onClick = React79.useCallback(function(event2) {
    if (props.onClick) {
      props.onClick.call(void 0, {
        syntheticEvent: event2,
        item: props.item,
        title: props.title
      });
    }
  }, [props.item, props.title, props.onClick]);
  React79.useEffect(function() {
    if (itemRef.current && props.focused) {
      itemRef.current.focus();
    }
  }, [props.focused]);
  return React79.createElement(
    "span",
    { style: props.style, tabIndex: props.tabIndex, className: classNames("k-actionsheet-item", "k-cursor-pointer", props.disabled && "k-disabled", props.className), ref: itemRef, role: "button", "aria-disabled": props.disabled, onClick },
    React79.createElement(
      "span",
      { className: "k-actionsheet-action" },
      props.icon && React79.createElement("span", { className: "k-icon-wrap" }, props.icon),
      (props.title || props.description) && React79.createElement(
        "span",
        { className: "k-actionsheet-item-text" },
        props.title && React79.createElement("span", { className: "k-actionsheet-item-title" }, props.title),
        props.description && React79.createElement("span", { className: "k-actionsheet-item-description" }, props.description)
      )
    )
  );
};
ActionSheetItem.propTypes = {
  className: PropTypes42.string,
  style: PropTypes42.object,
  description: PropTypes42.string,
  disabled: PropTypes42.bool,
  group: PropTypes42.oneOf(["top", "bottom"]),
  icon: PropTypes42.element,
  title: PropTypes42.string
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetHeader.js
var React80 = __toESM(require_react());
var PropTypes43 = __toESM(require_prop_types());
var headerDisplayName = "ActionSheetHeader";
var ActionSheetHeader = function(props) {
  return React80.createElement("div", { className: classNames("k-actionsheet-titlebar", props.className) }, props.children);
};
ActionSheetHeader.propTypes = {
  className: PropTypes43.string
};
ActionSheetHeader.displayName = headerDisplayName;
ActionSheetHeader.propTypes = {
  children: PropTypes43.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetFooter.js
var React81 = __toESM(require_react());
var PropTypes44 = __toESM(require_prop_types());
var footerDisplayName = "ActionSheetFooter";
var ActionSheetFooter = function(props) {
  return React81.createElement("div", { className: classNames("k-actionsheet-footer", props.className) }, props.children);
};
ActionSheetFooter.propTypes = {
  className: PropTypes44.string
};
ActionSheetFooter.displayName = footerDisplayName;
ActionSheetFooter.propTypes = {
  children: PropTypes44.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetContent.js
var React82 = __toESM(require_react());
var PropTypes45 = __toESM(require_prop_types());
var contentDisplayName = "ActionSheetContent";
var ActionSheetContent = function(props) {
  return React82.createElement("div", { className: classNames("k-actionsheet-content", props.className) }, props.children);
};
ActionSheetContent.propTypes = {
  className: PropTypes45.string
};
ActionSheetContent.displayName = contentDisplayName;
ActionSheetContent.propTypes = {
  children: PropTypes45.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheet.js
var React83 = __toESM(require_react());
var PropTypes46 = __toESM(require_prop_types());
var __extends33 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign42 = function() {
  __assign42 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign42.apply(this, arguments);
};
var __spreadArray9 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var ActionSheet = (
  /** @class */
  function(_super) {
    __extends33(ActionSheet2, _super);
    function ActionSheet2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.actionSheetRef = React83.createRef();
      _this3.actionSheetTitleClass = "k-actionsheet-title";
      _this3.ariaLabeledBy = _this3.actionSheetTitleClass + 1;
      _this3.animationDuration = 300;
      _this3.bottomPosition = { bottom: "0", width: "100%" };
      _this3.handleKeyDown = function(e) {
        if (_this3.props.navigatable) {
          _this3.navigation.triggerKeyboardEvent(e);
        }
      };
      _this3.onTab = function(target, nav, ev) {
        ev.preventDefault();
        if (ev.shiftKey) {
          nav.focusPrevious(target);
        } else {
          nav.focusNext(target);
        }
      };
      _this3.handleOverlayClick = function(ev) {
        if (_this3.props.onOverlayClick) {
          _this3.props.onOverlayClick.call(void 0, ev);
        }
        if (_this3.props.onClose) {
          _this3.props.onClose.call(void 0, ev);
        }
        if (!_this3.props.animation) {
          _this3.hideActionSheet();
        }
      };
      _this3.handleItemClick = function(ev) {
        if (_this3.props.onItemClick) {
          _this3.props.onItemClick.call(void 0, ev);
        }
        if (_this3.props.onItemSelect) {
          _this3.props.onItemSelect.call(void 0, ev);
        }
        if (!_this3.props.animation) {
          _this3.hideActionSheet();
        }
      };
      _this3.onEnter = function(target, nav, ev) {
        if (target.ariaDisabled) {
          return;
        }
        var isItem = target.className && target.className.indexOf("k-actionsheet-item") !== -1;
        var allItems = nav.elements.filter(function(e) {
          return e.className.indexOf("k-actionsheet-item") !== -1;
        });
        if (isItem && _this3.props.onItemClick) {
          ev.preventDefault();
          var item = _this3.props.items[allItems.indexOf(target)];
          _this3.props.onItemClick.call(void 0, {
            syntheticEvent: ev,
            item,
            title: item && item.title
          });
        }
        if (isItem && _this3.props.onItemSelect) {
          ev.preventDefault();
          var item = _this3.props.items[allItems.indexOf(target)];
          _this3.props.onItemSelect.call(void 0, {
            syntheticEvent: ev,
            item,
            title: item && item.title
          });
        }
        if (!_this3.props.animation) {
          _this3.hideActionSheet();
        }
      };
      _this3.onEscape = function(_target, _nav, ev) {
        if (_this3.props.onOverlayClick) {
          ev.preventDefault();
          _this3.props.onOverlayClick.call(void 0, ev);
        }
        if (_this3.props.onClose) {
          ev.preventDefault();
          _this3.props.onClose.call(void 0, ev);
        }
        if (!_this3.props.animation) {
          _this3.hideActionSheet();
        }
      };
      _this3.hideActionSheet = function() {
        _this3.setState({ show: false });
      };
      _this3.children = function(children2) {
        var components = {};
        React83.Children.forEach(children2, function(child) {
          if (child) {
            components[child.type.displayName] = child;
          }
          ;
        });
        return components;
      };
      _this3.state = {
        show: false,
        slide: false
      };
      validatePackage2(packageMetadata7);
      return _this3;
    }
    ActionSheet2.prototype.componentDidMount = function() {
      if (this.props.expand && !this.state.show) {
        this.setState({ show: true });
      }
    };
    ActionSheet2.prototype.componentDidUpdate = function(_prevProps, prevState) {
      var _this3 = this;
      var currentRef = this.actionSheetRef.current;
      if (this.props.expand && !this.state.show) {
        this.setState({ show: true });
      }
      if (this.props.expand && this.state.show && !this.state.slide) {
        this.setState({ slide: true });
      }
      if (!this.props.expand && this.state.show && this.state.slide) {
        this.setState({ slide: false });
      }
      if (prevState !== this.state && this.state.slide && currentRef && !this.props.className) {
        currentRef.style.setProperty("--kendo-actionsheet-height", "auto");
        currentRef.style.setProperty("--kendo-actionsheet-max-height", "none");
      }
      if (currentRef) {
        if (this.props.navigatable) {
          var innerElements = [
            ".k-actionsheet-footer",
            ".k-actionsheet-content",
            ".k-actionsheet-titlebar"
          ].map(function(selector) {
            return FOCUSABLE_ELEMENTS.concat(_this3.props.navigatableElements).map(function(focusableSelector) {
              return "".concat(selector, " ").concat(focusableSelector);
            });
          });
          var selectors = __spreadArray9([
            ".k-actionsheet-item"
          ], innerElements.flat(), true);
          this.navigation = new Navigation({
            tabIndex: this.props.tabIndex || 0,
            root: this.actionSheetRef,
            rovingTabIndex: false,
            selectors,
            keyboardEvents: {
              keydown: {
                "Tab": this.onTab,
                "Enter": this.onEnter,
                "Escape": this.onEscape
              }
            }
          });
          this.navigation.focusElement(this.navigation.first, null);
        }
      }
    };
    ;
    ActionSheet2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, title = _a14.title, subTitle = _a14.subTitle, animationStyles = _a14.animationStyles, animation = _a14.animation, expand2 = _a14.expand, tabIndex = _a14.tabIndex, items = _a14.items;
      var topGroupItems = items === null || items === void 0 ? void 0 : items.filter(function(item) {
        return !item.group || item.group === "top";
      });
      var bottomGroupItems = items === null || items === void 0 ? void 0 : items.filter(function(item) {
        return item.group === "bottom";
      });
      var shouldRenderSeparator = topGroupItems && topGroupItems.length > 0 && (bottomGroupItems && bottomGroupItems.length > 0);
      var children2 = this.children(this.props.children);
      var animationDuration = this.props.animationDuration || this.animationDuration;
      var actionSheetPanel = this.state.slide && React83.createElement(
        "div",
        { className: classNames("k-actionsheet", this.props.className, {
          "k-actionsheet-bottom": !this.props.className
        }), role: "dialog", "aria-modal": "true", "aria-hidden": false, "aria-labelledby": this.ariaLabeledBy, ref: this.actionSheetRef, onKeyDown: this.handleKeyDown },
        children2[headerDisplayName] && !title && !subTitle && children2[headerDisplayName],
        (title || subTitle) && React83.createElement(
          "div",
          { className: "k-actionsheet-titlebar k-text-center" },
          React83.createElement(
            "div",
            { className: "k-actionsheet-titlebar-group k-hbox" },
            React83.createElement(
              "div",
              { className: this.actionSheetTitleClass, id: this.ariaLabeledBy },
              title && React83.createElement("div", null, title),
              subTitle && React83.createElement("div", { className: "k-actionsheet-subtitle" }, subTitle)
            )
          )
        ),
        children2[contentDisplayName] || React83.createElement(
          "div",
          { className: "k-actionsheet-content" },
          React83.createElement("div", { className: "k-list-ul", role: "group" }, topGroupItems && topGroupItems.map(function(item, idx) {
            return React83.createElement(ActionSheetItem, __assign42({}, item, { id: idx, key: idx, item, tabIndex: tabIndex || 0, onClick: _this3.handleItemClick }));
          })),
          shouldRenderSeparator && React83.createElement("hr", { className: "k-hr" }),
          React83.createElement("div", { className: "k-list-ul", role: "group" }, bottomGroupItems && bottomGroupItems.map(function(item, idx) {
            return React83.createElement(ActionSheetItem, __assign42({}, item, { id: idx + ((topGroupItems === null || topGroupItems === void 0 ? void 0 : topGroupItems.length) || 0), key: idx, item, tabIndex: tabIndex || 0, onClick: _this3.handleItemClick }));
          }))
        ),
        children2[footerDisplayName]
      );
      return React83.createElement(React83.Fragment, null, expand2 || this.state.show ? React83.createElement(
        React83.Fragment,
        null,
        React83.createElement(
          "div",
          { className: "k-actionsheet-container" },
          React83.createElement("div", { className: "k-overlay", onClick: this.handleOverlayClick }),
          animation ? React83.createElement(Animation, { transitionName: this.state.slide ? "slide-up" : "slide-down", onExited: this.hideActionSheet, transitionEnterDuration: animationDuration, transitionExitDuration: animationDuration, animationEnteringStyle: animationStyles || this.bottomPosition, animationEnteredStyle: animationStyles || this.bottomPosition, animationExitingStyle: animationStyles || this.bottomPosition, exit: true, enter: true, appear: false }, actionSheetPanel) : actionSheetPanel
        )
      ) : null);
    };
    ;
    ActionSheet2.displayName = "KendoReactActionSheet";
    ActionSheet2.propTypes = {
      items: PropTypes46.array,
      subTitle: PropTypes46.string,
      title: PropTypes46.string,
      navigatable: PropTypes46.bool,
      navigatableElements: PropTypes46.array
    };
    ActionSheet2.defaultProps = {
      navigatable: true,
      navigatableElements: []
    };
    return ActionSheet2;
  }(React83.Component)
);
;

// node_modules/@progress/kendo-react-dateinputs/dist/es/common/AdaptiveMode.js
var React84 = __toESM(require_react());
var __assign43 = function() {
  __assign43 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign43.apply(this, arguments);
};
var MOBILE_SMALL_DEVISE = 500;
var AdaptiveMode = function(props) {
  var footer = props.footer, children2 = props.children, _a14 = props.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14, navigatable = props.navigatable, navigatableElements = props.navigatableElements, expand2 = props.expand, animation = props.animation, onClose = props.onClose, adaptiveTitle = props.adaptiveTitle, mobileFilter = props.mobileFilter;
  var defaultProps44 = {
    navigatable: navigatable || false,
    navigatableElements: navigatableElements || [],
    expand: expand2,
    animation: animation === false ? false : true,
    onClose,
    animationStyles: windowWidth <= MOBILE_SMALL_DEVISE ? { top: 0, width: "100%", height: "100%" } : void 0,
    className: windowWidth <= MOBILE_SMALL_DEVISE ? "k-adaptive-actionsheet k-actionsheet-fullscreen" : "k-adaptive-actionsheet k-actionsheet-bottom"
  };
  return React84.createElement(
    ActionSheet,
    __assign43({}, defaultProps44),
    React84.createElement(
      ActionSheetHeader,
      { className: "k-text-center" },
      React84.createElement(
        "div",
        { className: "k-actionsheet-titlebar-group k-hbox" },
        React84.createElement(
          "div",
          { className: "k-actionsheet-title" },
          React84.createElement("div", null, adaptiveTitle)
        ),
        React84.createElement(
          "div",
          { className: "k-actionsheet-actions" },
          React84.createElement(Button, { tabIndex: 0, "aria-label": "Cancel", "aria-disabled": "false", type: "button", fillMode: "flat", icon: "x", svgIcon: xIcon, onClick: onClose })
        )
      ),
      mobileFilter && React84.createElement("div", { className: "k-actionsheet-titlebar-group k-actionsheet-filter" }, mobileFilter)
    ),
    children2,
    footer && React84.createElement(
      ActionSheetFooter,
      { className: "k-actions k-actions-stretched" },
      React84.createElement(Button, { size: "large", tabIndex: 0, "aria-label": footer.cancelText, "aria-disabled": "false", type: "button", onClick: footer.onCancel }, footer.cancelText),
      React84.createElement(Button, { tabIndex: 0, themeColor: "primary", size: "large", "aria-label": footer.applyText, "aria-disabled": "false", type: "button", onClick: footer.onApply }, footer.applyText)
    )
  );
};

// node_modules/@progress/kendo-react-dateinputs/dist/es/common/constants.js
var MOBILE_SMALL_DEVISE2 = 500;
var MOBILE_MEDIUM_DEVISE = 768;

// node_modules/@progress/kendo-react-dateinputs/dist/es/datepicker/DatePicker.js
var React85 = __toESM(require_react());
var PropTypes47 = __toESM(require_prop_types());
var __extends34 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign44 = function() {
  __assign44 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign44.apply(this, arguments);
};
var __rest24 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DatePickerWithoutContext = (
  /** @class */
  function(_super) {
    __extends34(DatePickerWithoutContext2, _super);
    function DatePickerWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.ka = guid();
      _this3.i = null;
      _this3.ma = React85.createRef();
      _this3.U = null;
      _this3.shouldFocusDateInput = false;
      _this3.prevShow = false;
      _this3.focus = function() {
        if (_this3.dateInput) {
          _this3.dateInput.focus();
        }
      };
      _this3.setCalendarRef = function(calendar) {
        _this3.U = calendar;
      };
      _this3.nextValue = function(nextProps, nextState) {
        return nextProps.value !== void 0 ? nextProps.value : nextState.value;
      };
      _this3.nextShow = function(nextProps, nextState) {
        return nextProps.show !== void 0 ? nextProps.show : nextState.show;
      };
      _this3.renderPopup = function() {
        var _a14 = _this3.props, disabled = _a14.disabled, min = _a14.min, max = _a14.max, weekNumber = _a14.weekNumber, focusedDate = _a14.focusedDate;
        var _b3 = _this3.props.popupSettings, popupClass = _b3.popupClass, otherPopupSettings = __rest24(_b3, ["popupClass"]);
        var show = _this3.show;
        var value2 = _this3.value;
        var sanitizedValue = value2 && getDate(value2);
        var popupClassNames = classNames("k-calendar-container k-group k-reset", popupClass);
        var popupProps = __assign44({ popupClass: "k-datepicker-popup", show, anchor: _this3.i, className: popupClassNames, id: _this3.ka, anchorAlign: {
          horizontal: "left",
          vertical: "bottom"
        }, popupAlign: {
          horizontal: "left",
          vertical: "top"
        } }, otherPopupSettings);
        var calendarProps = {
          disabled,
          value: sanitizedValue,
          min,
          max,
          weekNumber,
          focusedDate,
          className: _this3.mobileMode ? "k-calendar-lg" : "",
          navigation: _this3.mobileMode ? false : true,
          onChange: _this3.handleCalendarValueChange
        };
        if (_this3.mobileMode) {
          return React85.createElement(_this3.calendarComp, __assign44({ n: _this3.setCalendarRef }, calendarProps));
        }
        return React85.createElement(
          _this3.popupComp,
          __assign44({}, popupProps),
          React85.createElement(_this3.calendarComp, __assign44({ n: _this3.setCalendarRef }, calendarProps))
        );
      };
      _this3.renderAdaptivePopup = function() {
        var _a14 = _this3.state.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14;
        var actionSheetProps = {
          expand: _this3.show,
          onClose: _this3.handleBlur,
          adaptiveTitle: _this3.props.adaptiveTitle,
          windowWidth
        };
        return React85.createElement(
          AdaptiveMode,
          __assign44({}, actionSheetProps),
          React85.createElement(ActionSheetContent, { className: "!k-overflow-hidden" }, _this3.renderPopup())
        );
      };
      _this3.handleInputValueChange = function(event2) {
        _this3.handleValueChange(event2.value, event2);
      };
      _this3.handleCalendarValueChange = function(event2) {
        var value2 = _this3.mergeTime(event2.value);
        _this3.handleValueChange(value2, event2);
      };
      _this3.handleValueChange = function(value2, event2) {
        _this3.setState({
          value: cloneDate(value2 || void 0),
          show: false
        });
        _this3.valueDuringOnChange = value2;
        _this3.showDuringOnChange = false;
        if (!_this3.mobileMode) {
          _this3.shouldFocusDateInput = true;
        }
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: _this3.value,
            show: _this3.show,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
        _this3.showDuringOnChange = void 0;
      };
      _this3.handleFocus = function() {
        _this3.setState({ focused: true });
      };
      _this3.handleBlur = function() {
        _this3.setState({ focused: false });
        _this3.setShow(false);
      };
      _this3.handleIconClick = function() {
        if (_this3.props.disabled) {
          return;
        }
        _this3.shouldFocusDateInput = true;
        _this3.setShow(!_this3.show);
      };
      _this3.handleIconMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleKeyDown = function(event2) {
        var altKey = event2.altKey, keyCode = event2.keyCode;
        if (keyCode === Keys.esc) {
          _this3.shouldFocusDateInput = true;
          _this3.setShow(false);
          return;
        }
        if (altKey && (keyCode === Keys.up || keyCode === Keys.down)) {
          event2.preventDefault();
          event2.stopPropagation();
          _this3.shouldFocusDateInput = keyCode === Keys.up;
          _this3.setShow(keyCode === Keys.down);
        }
      };
      validatePackage2(packageMetadata4);
      _this3.state = {
        value: _this3.props.defaultValue || DatePickerWithoutContext2.defaultProps.defaultValue,
        show: _this3.props.defaultShow || DatePickerWithoutContext2.defaultProps.defaultShow,
        focused: false
      };
      return _this3;
    }
    Object.defineProperty(DatePickerWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the DatePickerWithoutContext.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the DatePicker.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "dateInput", {
      /**
       * Gets the DateInput component inside the DatePicker component.
       */
      get: function() {
        return this.ma.current;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "calendar", {
      /**
       * Gets the Calendar component inside the DatePicker component.
       */
      get: function() {
        return this.U;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the DatePickerWithoutContext.
       */
      get: function() {
        var value2 = this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
        return value2 !== null ? cloneDate(value2) : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "show", {
      /**
       * Gets the popup state of the DatePickerWithoutContext.
       */
      get: function() {
        return this.showDuringOnChange !== void 0 ? this.showDuringOnChange : this.props.show !== void 0 ? this.props.show : this.state.show;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the DatePickerWithoutContext.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : DatePickerWithoutContext2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : DatePickerWithoutContext2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "dateInputComp", {
      get: function() {
        return this.props.dateInput || DatePickerWithoutContext2.defaultProps.dateInput;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "toggleButtonComp", {
      get: function() {
        return this.props.toggleButton || DatePickerWithoutContext2.defaultProps.toggleButton;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "calendarComp", {
      get: function() {
        return this.props.calendar || DatePickerWithoutContext2.defaultProps.calendar;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "popupComp", {
      get: function() {
        return this.props.popup || DatePickerWithoutContext2.defaultProps.popup;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "pickerWrapComp", {
      get: function() {
        return this.props.pickerWrap || DatePickerWithoutContext2.defaultProps.pickerWrap;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the DatePicker is set.
       */
      get: function() {
        var inRange3 = isInDateRange(this.value, this.min, this.max);
        var customError = this.props.validationMessage !== void 0;
        var isValid = (!this.required || this.value !== null) && inRange3;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          rangeOverflow: this.value && this.max.getTime() < this.value.getTime() || false,
          rangeUnderflow: this.value && this.value.getTime() < this.min.getTime() || false,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : DatePickerWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DatePickerWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : DatePickerWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    DatePickerWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      if (this.show) {
        this.forceUpdate();
      }
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    DatePickerWithoutContext2.prototype.componentDidUpdate = function() {
      if (this.U && this.U.element && this.show && !this.prevShow) {
        this.U.element.focus({ preventScroll: true });
      }
      if (this.dateInput && this.dateInput.element && !this.show && this.shouldFocusDateInput) {
        this.dateInput.element.focus({ preventScroll: true });
      }
      this.prevShow = this.show;
      this.shouldFocusDateInput = false;
    };
    DatePickerWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      clearTimeout(this.nextTickId);
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    DatePickerWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.size, size = _b3 === void 0 ? DatePickerWithoutContext2.defaultProps.size : _b3, _c2 = _a14.rounded, rounded = _c2 === void 0 ? DatePickerWithoutContext2.defaultProps.rounded : _c2, _d = _a14.fillMode, fillMode = _d === void 0 ? DatePickerWithoutContext2.defaultProps.fillMode : _d, disabled = _a14.disabled, tabIndex = _a14.tabIndex, title = _a14.title, id = _a14.id, format3 = _a14.format, formatPlaceholder = _a14.formatPlaceholder, min = _a14.min, max = _a14.max, className = _a14.className, width = _a14.width, name2 = _a14.name, validationMessage = _a14.validationMessage, required = _a14.required, validityStyles = _a14.validityStyles, ariaLabelledBy = _a14.ariaLabelledBy, ariaDescribedBy = _a14.ariaDescribedBy, ariaLabel = _a14.ariaLabel;
      var show = this.show;
      var value2 = this.value;
      var isValid = !this.validityStyles || this.validity.valid;
      var dateInputProps = {
        disabled,
        format: format3,
        formatPlaceholder,
        id,
        ariaLabelledBy,
        ariaDescribedBy,
        ariaLabel,
        max,
        min,
        name: name2,
        onChange: this.handleInputValueChange,
        required,
        tabIndex: !show ? tabIndex : -1,
        title,
        valid: this.validity.valid,
        validationMessage,
        validityStyles,
        value: value2,
        label: void 0,
        placeholder: !this.state.focused ? this.props.placeholder : null,
        ariaExpanded: this.show,
        size: null,
        fillMode: null,
        rounded: null
      };
      var toggleButtonTitle = provideLocalizationService(this).toLanguageString(toggleCalendar, messages3[toggleCalendar]);
      var datepicker = React85.createElement(AsyncFocusBlur, { onFocus: this.handleFocus, onBlur: this.mobileMode ? void 0 : this.handleBlur, onSyncBlur: this.props.onBlur, onSyncFocus: this.props.onFocus }, function(_a15) {
        var _b4;
        var onFocus = _a15.onFocus, onBlur = _a15.onBlur;
        return React85.createElement(
          React85.Fragment,
          null,
          React85.createElement(
            "span",
            { ref: function(span) {
              _this3.i = span;
            }, className: classNames("k-input", "k-datepicker", (_b4 = {}, _b4["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _b4["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _b4["k-input-".concat(fillMode)] = fillMode, _b4["k-invalid"] = !isValid, _b4["k-required"] = _this3.required, _b4["k-disabled"] = _this3.props.disabled, _b4), className), onKeyDown: _this3.handleKeyDown, style: { width }, onFocus, onBlur, onClick: _this3.mobileMode ? _this3.handleIconClick : void 0 },
            React85.createElement(_this3.dateInputComp, __assign44({ n: _this3.ma, ariaRole: "combobox", readonly: _this3.mobileMode, ariaExpanded: _this3.show, ariaControls: _this3.ka }, dateInputProps)),
            React85.createElement(_this3.toggleButtonComp, { type: "button", icon: "calendar", svgIcon: calendarIcon, title: toggleButtonTitle, className: "k-input-button", rounded: null, onClick: _this3.handleIconClick, "aria-label": toggleButtonTitle, onMouseDown: _this3.handleIconMouseDown }),
            !_this3.mobileMode && _this3.renderPopup()
          ),
          _this3.mobileMode && _this3.renderAdaptivePopup()
        );
      });
      return this.props.label ? React85.createElement(PickerFloatingLabel, { dateInput: this.ma, label: this.props.label, editorId: id, editorValid: isValid, editorDisabled: this.props.disabled, children: datepicker, style: { width: this.props.width } }) : datepicker;
    };
    DatePickerWithoutContext2.prototype.setShow = function(show) {
      if (this.show === show) {
        return;
      }
      this.setState({ show });
    };
    DatePickerWithoutContext2.prototype.mergeTime = function(value2) {
      return this.value && value2 ? setTime2(value2, this.value) : value2;
    };
    DatePickerWithoutContext2.prototype.nextTick = function(f) {
      clearTimeout(this.nextTickId);
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    DatePickerWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    DatePickerWithoutContext2.displayName = "DatePicker";
    DatePickerWithoutContext2.propTypes = {
      className: PropTypes47.string,
      defaultShow: PropTypes47.bool,
      defaultValue: PropTypes47.instanceOf(Date),
      disabled: PropTypes47.bool,
      focusedDate: PropTypes47.instanceOf(Date),
      format: PropTypes47.oneOfType([
        PropTypes47.string,
        PropTypes47.shape({
          skeleton: PropTypes47.string,
          pattern: PropTypes47.string,
          date: PropTypes47.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes47.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes47.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes47.oneOf(["narrow", "short", "long"]),
          year: PropTypes47.oneOf(["numeric", "2-digit"]),
          month: PropTypes47.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes47.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes47.oneOf(["narrow", "short", "long"]),
          hour: PropTypes47.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes47.bool,
          minute: PropTypes47.oneOf(["numeric", "2-digit"]),
          second: PropTypes47.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes47.oneOf(["short", "long"])
        })
      ]),
      formatPlaceholder: PropTypes47.oneOfType([
        PropTypes47.oneOf(["wide", "narrow", "short", "formatPattern"]),
        PropTypes47.shape({
          year: PropTypes47.string,
          month: PropTypes47.string,
          day: PropTypes47.string,
          hour: PropTypes47.string,
          minute: PropTypes47.string,
          second: PropTypes47.string
        })
      ]),
      id: PropTypes47.string,
      ariaLabelledBy: PropTypes47.string,
      ariaDescribedBy: PropTypes47.string,
      ariaLabel: PropTypes47.string,
      min: PropTypes47.instanceOf(Date),
      max: PropTypes47.instanceOf(Date),
      name: PropTypes47.string,
      popupSettings: PropTypes47.shape({
        animate: PropTypes47.bool,
        appendTo: PropTypes47.any,
        popupClass: PropTypes47.string
      }),
      show: PropTypes47.bool,
      tabIndex: PropTypes47.number,
      title: PropTypes47.string,
      value: PropTypes47.instanceOf(Date),
      weekNumber: PropTypes47.bool,
      width: PropTypes47.oneOfType([PropTypes47.number, PropTypes47.string]),
      validationMessage: PropTypes47.string,
      required: PropTypes47.bool,
      validate: PropTypes47.bool,
      valid: PropTypes47.bool,
      size: PropTypes47.oneOf([null, "small", "medium", "large"]),
      rounded: PropTypes47.oneOf([null, "small", "medium", "large", "full"]),
      fillMode: PropTypes47.oneOf([null, "solid", "flat", "outline"]),
      adaptive: PropTypes47.bool,
      adaptiveTitle: PropTypes47.string
    };
    DatePickerWithoutContext2.defaultProps = {
      defaultShow: false,
      defaultValue: null,
      dateInput: DateInput,
      calendar: Calendar,
      toggleButton: ToggleButton,
      popup: Popup,
      pickerWrap: PickerWrap,
      disabled: false,
      format: "d",
      max: MAX_DATE2,
      min: MIN_DATE2,
      popupSettings: {},
      tabIndex: 0,
      weekNumber: false,
      required: false,
      validityStyles: true,
      size: "medium",
      rounded: "medium",
      fillMode: "solid"
    };
    return DatePickerWithoutContext2;
  }(React85.Component)
);
var DatePickerPropsContext = createPropsContext();
var DatePicker = withPropsContext(DatePickerPropsContext, DatePickerWithoutContext);
DatePicker.displayName = "KendoReactDatePicker";
registerForLocalization(DatePickerWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/services/DayPeriodService.js
var setHours2 = function(date2, hours) {
  var clone2 = cloneDate(date2);
  clone2.setHours(hours);
  return clone2;
};
var isAM = function(value2) {
  return value2 !== null && value2 < 12;
};
var isPM = function(value2) {
  return value2 !== null && (!value2 || value2 > 11);
};
var inRange = function(value2, min, max) {
  return !min && !max || value2 >= min && value2 <= max;
};
var inReverseRange = function(value2, min, max) {
  return !min && !max || value2 >= min || value2 <= max;
};
var DayPeriodService = (
  /** @class */
  function() {
    function DayPeriodService2(intl) {
      this.intl = intl;
      this.min = null;
      this.max = null;
      this.part = null;
    }
    DayPeriodService2.prototype.apply = function(value2, candidate) {
      var hour = value2.getHours();
      var hourAM = isAM(hour);
      var candidateAM = isAM(candidate.getHours());
      if (hourAM && candidateAM || !hourAM && !candidateAM) {
        return value2;
      }
      var _a14 = this.normalizedRange(), min = _a14[0], _b3 = _a14[1], max = _b3 === void 0 ? 24 : _b3;
      var result = hour + (candidateAM ? -12 : 12);
      return setHours2(value2, Math.min(Math.max(min, result), max || 24));
    };
    DayPeriodService2.prototype.configure = function(settings) {
      var _a14 = settings.min, min = _a14 === void 0 ? this.min : _a14, _b3 = settings.max, max = _b3 === void 0 ? this.max : _b3, _c2 = settings.part, part = _c2 === void 0 ? this.part : _c2;
      this.min = min;
      this.max = max;
      this.part = part;
    };
    DayPeriodService2.prototype.data = function(_2) {
      var names = this.part && this.part.names;
      if (!names || !this.min) {
        return [];
      }
      var data2 = [];
      var _a14 = this.normalizedRange(), min = _a14[0], max = _a14[1];
      var dayPeriod = this.intl.dateFormatNames(names);
      if (isAM(min)) {
        data2.push({ text: dayPeriod.am, value: setHours2(this.min, min) });
      }
      if (isPM(max)) {
        data2.push({ text: dayPeriod.pm, value: setHours2(this.min, Math.max(12, max)) });
      }
      return this.min.getHours() !== min ? data2.reverse() : data2;
    };
    DayPeriodService2.prototype.isRangeChanged = function(_2, __) {
      return false;
    };
    DayPeriodService2.prototype.limitRange = function(min, max, _2) {
      return [min, max];
    };
    DayPeriodService2.prototype.total = function() {
      var _a14 = this.normalizedRange(), min = _a14[0], max = _a14[1];
      if (!min && !max) {
        return 2;
      }
      if (min > 11 || max < 12) {
        return 1;
      }
      return 2;
    };
    DayPeriodService2.prototype.selectedIndex = function(value2) {
      if (!this.valueInList(value2) || !this.min) {
        return -1;
      }
      var index = Math.floor(value2.getHours() / 12);
      return this.min.getHours() === this.normalizedRange()[0] ? index : index === 0 ? 1 : 0;
    };
    DayPeriodService2.prototype.valueInList = function(value2) {
      if (!this.min || !this.max) {
        return false;
      }
      var reverse = this.min.getHours() !== this.normalizedRange()[0];
      var isInRange4 = reverse ? inReverseRange : inRange;
      return isInRange4(value2.getHours(), this.min.getHours(), this.max.getHours());
    };
    DayPeriodService2.prototype.normalizedRange = function() {
      var minHour = this.min.getHours();
      var maxHour = this.max.getHours();
      return [
        Math.min(minHour, maxHour),
        Math.max(minHour, maxHour)
      ];
    };
    return DayPeriodService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/services/DOMService.js
var DOMService2 = (
  /** @class */
  function() {
    function DOMService3() {
      this.itemHeight = 0;
      this.timeListHeight = 0;
      this.didCalculate = false;
    }
    DOMService3.prototype.ensureHeights = function() {
      if (this.timeListHeight !== void 0) {
        return;
      }
      this.calculateHeights();
    };
    DOMService3.prototype.calculateHeights = function(container) {
      if (!canUseDOM) {
        return;
      }
      var div = domContainerFactory("div");
      var span = domContainerFactory("span");
      var ul = domContainerFactory("ul");
      var li = domContainerFactory("li");
      var listItem = function() {
        return li("<span>02</span>", "k-item");
      };
      var list = function() {
        return ul([listItem()], "k-reset");
      };
      var scrollable = function() {
        return div([list()], "k-content k-calendar-content k-scrollable k-time-container");
      };
      var timeListWrapper = function() {
        return div([
          span("minute", "k-title"),
          div([scrollable()], "k-time-list")
        ], "k-time-list-wrapper", { left: "-10000px", position: "absolute" });
      };
      var timeWrapper = timeListWrapper();
      var listContainer = container && container.querySelector(".k-time-container");
      var hostContainer = listContainer || document.body;
      var wrapper = hostContainer.appendChild(timeWrapper);
      this.timeListHeight = wrapper.querySelector(".k-scrollable").offsetHeight;
      this.itemHeight = wrapper.querySelector("li").offsetHeight;
      hostContainer.removeChild(wrapper);
      this.didCalculate = true;
    };
    return DOMService3;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/services/HoursService.js
var HOURS_IN_DAY = 24;
var clampToRange = function(rangeValue2) {
  return function(value2) {
    return value2 % rangeValue2;
  };
};
var clamp = clampToRange(HOURS_IN_DAY);
var stepper = function(start2, step) {
  return function(idx) {
    return clamp(start2 + idx * step);
  };
};
var distanceFromMin = function(value2, min) {
  return clamp(HOURS_IN_DAY + value2 - min);
};
var limit2 = function(borderValue) {
  return function(barrier, value2) {
    var useBarrier = !value2 || getDate(barrier).getTime() === getDate(value2).getTime();
    return useBarrier ? barrier : setHours(barrier, borderValue);
  };
};
var limitDown = limit2(0);
var limitUp = limit2(HOURS_IN_DAY - 1);
var HoursService = (
  /** @class */
  function() {
    function HoursService2(intl) {
      this.intl = intl;
      this.boundRange = false;
      this.insertUndividedMax = false;
      this.min = null;
      this.max = null;
      this.step = 0;
      this.toListItem = null;
    }
    HoursService2.prototype.apply = function(value2, candidate) {
      return setHours(value2, candidate.getHours());
    };
    HoursService2.prototype.configure = function(settings) {
      var _this3 = this;
      var _a14 = settings.boundRange, boundRange = _a14 === void 0 ? this.boundRange : _a14, _b3 = settings.insertUndividedMax, insertUndividedMax = _b3 === void 0 ? this.insertUndividedMax : _b3, _c2 = settings.min, min = _c2 === void 0 ? this.min : _c2, _d = settings.max, max = _d === void 0 ? this.max : _d, part = settings.part, _e = settings.step, step = _e === void 0 ? this.step : _e;
      this.boundRange = boundRange;
      this.insertUndividedMax = insertUndividedMax;
      this.toListItem = function(hour) {
        var date2 = setHours(MIDNIGHT_DATE, hour);
        return {
          text: _this3.intl.formatDate(date2, part.pattern),
          value: date2
        };
      };
      this.min = min;
      this.max = max;
      this.step = step;
    };
    HoursService2.prototype.data = function(selectedValue) {
      var _this3 = this;
      var min = this.range(selectedValue)[0];
      var getHour = stepper(min, this.step);
      var convertToItem = function(idx) {
        return _this3.toListItem && _this3.toListItem(getHour(idx));
      };
      var data2 = range2(0, this.countFromMin(selectedValue)).map(convertToItem);
      this.addLast(data2);
      if (selectedValue) {
        this.addMissing(data2, selectedValue);
      }
      return data2;
    };
    HoursService2.prototype.isRangeChanged = function(min, max) {
      if (!this.min || !this.max) {
        return false;
      }
      return !isEqual(this.min, min) || !isEqual(this.max, max);
    };
    HoursService2.prototype.limitRange = function(min, max, value2) {
      return this.boundRange ? [limitDown(min, value2), limitUp(max, value2)] : [min, max];
    };
    HoursService2.prototype.total = function(value2) {
      var last4 = this.insertUndividedMax && this.isLastMissing(value2) ? 1 : 0;
      var missing = this.isMissing(value2) ? 1 : 0;
      return this.countFromMin(value2) + missing + last4;
    };
    HoursService2.prototype.selectedIndex = function(value2) {
      return Math.ceil(this.divideByStep(value2));
    };
    HoursService2.prototype.valueInList = function(value2) {
      if (!value2) {
        return true;
      }
      var matchMax = this.insertUndividedMax && this.lastHour(value2) === value2.getHours();
      return matchMax || !this.isMissing(value2);
    };
    HoursService2.prototype.addLast = function(data2, value2) {
      if (this.insertUndividedMax && this.isLastMissing(value2) && this.toListItem) {
        data2.push(this.toListItem(this.lastHour(value2)));
      }
      return data2;
    };
    HoursService2.prototype.addMissing = function(data2, value2) {
      if (this.valueInList(value2)) {
        return data2;
      }
      if (this.toListItem) {
        var missingItem = this.toListItem(value2.getHours());
        data2.splice(this.selectedIndex(value2), 0, missingItem);
      }
      return data2;
    };
    HoursService2.prototype.countFromMin = function(value2) {
      var _a14 = this.range(value2), min = _a14[0], max = _a14[1];
      return Math.floor(distanceFromMin(max, min) / this.step) + 1;
    };
    HoursService2.prototype.isMissing = function(value2) {
      if (!value2) {
        return false;
      }
      return this.selectedIndex(value2) !== this.divideByStep(value2);
    };
    HoursService2.prototype.isLastMissing = function(value2) {
      return this.max !== null && this.isMissing(setHours(this.max, this.lastHour(value2)));
    };
    HoursService2.prototype.divideByStep = function(value2) {
      return distanceFromMin(value2.getHours(), this.min.getHours()) / this.step;
    };
    HoursService2.prototype.lastHour = function(value2) {
      return this.range(value2)[1];
    };
    HoursService2.prototype.range = function(value2) {
      var _a14 = this.limitRange(this.min, this.max, value2), min = _a14[0], max = _a14[1];
      return [min.getHours(), max.getHours()];
    };
    return HoursService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/services/MinutesService.js
var MINUTES_IN_HOUR = 60;
var clampToRange2 = function(rangeValue2) {
  return function(value2) {
    return value2 % rangeValue2;
  };
};
var clamp2 = clampToRange2(MINUTES_IN_HOUR);
var stepper2 = function(start2, step) {
  return function(idx) {
    return clamp2(start2 + idx * step);
  };
};
var distanceFromMin2 = function(value2, min) {
  return clamp2(MINUTES_IN_HOUR + value2 - min);
};
var limit3 = function(borderValue) {
  return function(barrier, value2) {
    var useBarrier = !value2 || barrier.getHours() === value2.getHours();
    return useBarrier ? barrier : setMinutes(barrier, borderValue);
  };
};
var limitDown2 = limit3(0);
var limitUp2 = limit3(MINUTES_IN_HOUR - 1);
var MinutesService = (
  /** @class */
  function() {
    function MinutesService2(intl) {
      this.intl = intl;
      this.toListItem = null;
      this.min = null;
      this.max = null;
      this.step = 0;
      this.insertUndividedMax = false;
    }
    MinutesService2.prototype.apply = function(value2, candidate) {
      return setMinutes(value2, candidate.getMinutes());
    };
    MinutesService2.prototype.configure = function(settings) {
      var _this3 = this;
      var _a14 = settings.insertUndividedMax, insertUndividedMax = _a14 === void 0 ? this.insertUndividedMax : _a14, _b3 = settings.min, min = _b3 === void 0 ? this.min : _b3, _c2 = settings.max, max = _c2 === void 0 ? this.max : _c2, part = settings.part, _d = settings.step, step = _d === void 0 ? this.step : _d;
      this.insertUndividedMax = insertUndividedMax;
      this.toListItem = function(minute) {
        var date2 = setMinutes(MIDNIGHT_DATE, minute);
        return {
          text: _this3.intl.formatDate(date2, part.pattern),
          value: date2
        };
      };
      this.min = min;
      this.max = max;
      this.step = step;
    };
    MinutesService2.prototype.data = function(selectedValue) {
      var _this3 = this;
      var min = this.range(selectedValue)[0];
      var getMinute = stepper2(min, this.step);
      var convertToItem = function(idx) {
        return _this3.toListItem && _this3.toListItem(getMinute(idx));
      };
      var data2 = range2(0, this.countFromMin(selectedValue)).map(convertToItem);
      this.addLast(data2);
      if (selectedValue) {
        this.addMissing(data2, selectedValue);
      }
      return data2;
    };
    MinutesService2.prototype.isRangeChanged = function(min, max) {
      return this.min !== null && this.max !== null && (!isEqual(this.min, min) || !isEqual(this.max, max));
    };
    MinutesService2.prototype.limitRange = function(min, max, value2) {
      return [limitDown2(min, value2), limitUp2(max, value2)];
    };
    MinutesService2.prototype.total = function(value2) {
      var last4 = this.insertUndividedMax && this.isLastMissing(value2) ? 1 : 0;
      var missing = this.isMissing(value2) ? 1 : 0;
      return this.countFromMin(value2) + missing + last4;
    };
    MinutesService2.prototype.selectedIndex = function(value2) {
      return Math.ceil(this.divideByStep(value2));
    };
    MinutesService2.prototype.valueInList = function(value2) {
      if (!value2) {
        return true;
      }
      var matchMax = this.insertUndividedMax && this.lastMinute(value2) === value2.getMinutes();
      return matchMax || !this.isMissing(value2);
    };
    MinutesService2.prototype.addLast = function(data2, value2) {
      if (this.insertUndividedMax && this.isLastMissing(value2) && this.toListItem) {
        data2.push(this.toListItem(this.lastMinute(value2)));
      }
      return data2;
    };
    MinutesService2.prototype.addMissing = function(data2, value2) {
      if (this.valueInList(value2)) {
        return data2;
      }
      if (this.toListItem) {
        var missingItem = this.toListItem(value2.getMinutes());
        data2.splice(this.selectedIndex(value2), 0, missingItem);
      }
      return data2;
    };
    MinutesService2.prototype.countFromMin = function(value2) {
      var _a14 = this.range(value2), min = _a14[0], max = _a14[1];
      return Math.floor(distanceFromMin2(max, min) / this.step) + 1;
    };
    MinutesService2.prototype.isMissing = function(value2) {
      if (!value2) {
        return false;
      }
      return this.selectedIndex(value2) !== this.divideByStep(value2);
    };
    MinutesService2.prototype.isLastMissing = function(value2) {
      return this.max !== null && this.isMissing(setMinutes(this.max, this.lastMinute(value2)));
    };
    MinutesService2.prototype.divideByStep = function(value2) {
      return distanceFromMin2(value2.getMinutes(), this.min.getMinutes()) / this.step;
    };
    MinutesService2.prototype.lastMinute = function(value2) {
      return this.range(value2)[1];
    };
    MinutesService2.prototype.range = function(value2) {
      var _a14 = this.limitRange(this.min, this.max, value2), min = _a14[0], max = _a14[1];
      return [min.getMinutes(), max.getMinutes()];
    };
    return MinutesService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/services/SecondsService.js
var SECONDS_IN_HOUR = 60;
var clampToRange3 = function(rangeValue2) {
  return function(value2) {
    return value2 % rangeValue2;
  };
};
var clamp3 = clampToRange3(SECONDS_IN_HOUR);
var stepper3 = function(start2, step) {
  return function(idx) {
    return clamp3(start2 + idx * step);
  };
};
var distanceFromMin3 = function(value2, min) {
  return clamp3(SECONDS_IN_HOUR + value2 - min);
};
var limit4 = function(borderValue) {
  return function(barrier, value2) {
    var useBarrier = !value2 || barrier.getMinutes() === value2.getMinutes() && barrier.getHours() === value2.getHours();
    return useBarrier ? barrier : setSeconds(barrier, borderValue);
  };
};
var limitDown3 = limit4(0);
var limitUp3 = limit4(SECONDS_IN_HOUR - 1);
var SecondsService = (
  /** @class */
  function() {
    function SecondsService2(intl) {
      this.intl = intl;
      this.toListItem = null;
      this.min = null;
      this.max = null;
      this.step = 0;
      this.insertUndividedMax = false;
    }
    SecondsService2.prototype.apply = function(value2, candidate) {
      return setSeconds(value2, candidate.getSeconds());
    };
    SecondsService2.prototype.configure = function(settings) {
      var _this3 = this;
      var _a14 = settings.insertUndividedMax, insertUndividedMax = _a14 === void 0 ? this.insertUndividedMax : _a14, _b3 = settings.min, min = _b3 === void 0 ? this.min : _b3, _c2 = settings.max, max = _c2 === void 0 ? this.max : _c2, part = settings.part, _d = settings.step, step = _d === void 0 ? this.step : _d;
      this.insertUndividedMax = insertUndividedMax;
      this.toListItem = function(minute) {
        var date2 = setSeconds(MIDNIGHT_DATE, minute);
        return {
          text: _this3.intl.formatDate(date2, part.pattern),
          value: date2
        };
      };
      this.min = min;
      this.max = max;
      this.step = step;
    };
    SecondsService2.prototype.data = function(selectedValue) {
      var _this3 = this;
      var min = this.range(selectedValue)[0];
      var getSecond = stepper3(min, this.step);
      var convertToItem = function(idx) {
        return _this3.toListItem && _this3.toListItem(getSecond(idx));
      };
      var data2 = range2(0, this.countFromMin(selectedValue)).map(convertToItem);
      this.addLast(data2);
      if (selectedValue) {
        this.addMissing(data2, selectedValue);
      }
      return data2;
    };
    SecondsService2.prototype.isRangeChanged = function(min, max) {
      return this.min !== null && this.max !== null && (!isEqual(this.min, min) || !isEqual(this.max, max));
    };
    SecondsService2.prototype.limitRange = function(min, max, value2) {
      return [limitDown3(min, value2), limitUp3(max, value2)];
    };
    SecondsService2.prototype.total = function(value2) {
      var last4 = this.insertUndividedMax && this.isLastMissing(value2) ? 1 : 0;
      var missing = this.isMissing(value2) ? 1 : 0;
      return this.countFromMin(value2) + missing + last4;
    };
    SecondsService2.prototype.selectedIndex = function(value2) {
      return Math.ceil(this.divideByStep(value2));
    };
    SecondsService2.prototype.valueInList = function(value2) {
      if (!value2) {
        return true;
      }
      var matchMax = this.insertUndividedMax && this.lastSecond(value2) === value2.getSeconds();
      return matchMax || !this.isMissing(value2);
    };
    SecondsService2.prototype.divideByStep = function(value2) {
      return distanceFromMin3(value2.getSeconds(), this.min.getSeconds()) / this.step;
    };
    SecondsService2.prototype.addLast = function(data2, value2) {
      if (this.insertUndividedMax && this.isLastMissing(value2) && this.toListItem) {
        data2.push(this.toListItem(this.lastSecond(value2)));
      }
      return data2;
    };
    SecondsService2.prototype.addMissing = function(data2, value2) {
      if (this.valueInList(value2)) {
        return data2;
      }
      if (this.toListItem) {
        var missingItem = this.toListItem(value2.getSeconds());
        data2.splice(this.selectedIndex(value2), 0, missingItem);
      }
      return data2;
    };
    SecondsService2.prototype.countFromMin = function(value2) {
      var _a14 = this.range(value2), min = _a14[0], max = _a14[1];
      return Math.floor(distanceFromMin3(max, min) / this.step) + 1;
    };
    SecondsService2.prototype.isMissing = function(value2) {
      if (!value2) {
        return false;
      }
      return this.selectedIndex(value2) !== this.divideByStep(value2);
    };
    SecondsService2.prototype.isLastMissing = function(value2) {
      return this.max !== null && this.isMissing(setSeconds(this.max, this.lastSecond(value2)));
    };
    SecondsService2.prototype.lastSecond = function(value2) {
      return this.range(value2)[1];
    };
    SecondsService2.prototype.range = function(value2) {
      var _a14 = this.limitRange(this.min, this.max, value2), min = _a14[0], max = _a14[1];
      return [min.getSeconds(), max.getSeconds()];
    };
    return SecondsService2;
  }()
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/TimeList.js
var React86 = __toESM(require_react());
var PropTypes48 = __toESM(require_prop_types());
var __extends35 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var _a10, _b2;
var SCROLL_THRESHOLD = 2;
var SNAP_THRESHOLD = 0.05;
var SCROLL_THROTTLE = 100;
var SKIP = 0;
var MOBILE_MODE_OFFSET = 9;
var getters = (_a10 = {}, _a10[Keys.end] = function(data2, _2) {
  return data2[data2.length - 1];
}, _a10[Keys.home] = function(data2, _2) {
  return data2[0];
}, _a10[Keys.up] = function(data2, index) {
  return data2[index - 1];
}, _a10[Keys.down] = function(data2, index) {
  return data2[index + 1];
}, _a10);
var services2 = (_b2 = {}, _b2[TIME_PART.dayperiod] = DayPeriodService, _b2[TIME_PART.hour] = HoursService, _b2[TIME_PART.minute] = MinutesService, _b2[TIME_PART.second] = SecondsService, _b2);
var TimeList = (
  /** @class */
  function(_super) {
    __extends35(TimeList2, _super);
    function TimeList2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.intl = null;
      _this3.i = null;
      _this3.service = null;
      _this3.virtualization = null;
      _this3.topOffset = 0;
      _this3.bottomOffset = 0;
      _this3.itemHeight = 0;
      _this3.listHeight = 0;
      _this3.topThreshold = 0;
      _this3.bottomThreshold = 0;
      _this3.animateToIndex = false;
      _this3.focus = function(args) {
        Promise.resolve().then(function() {
          if (!_this3.element) {
            return;
          }
          _this3.element.focus(args);
        });
      };
      _this3.itemOffset = function(scrollTop) {
        if (!_this3.virtualization || !_this3.service) {
          return -1;
        }
        var valueIndex = _this3.service.selectedIndex(_this3.props.value);
        var activeIndex = _this3.virtualization.activeIndex();
        var offset4 = _this3.virtualization.itemOffset(activeIndex);
        var distance = Math.abs(Math.ceil(scrollTop) - offset4);
        if (valueIndex === activeIndex && distance < SCROLL_THRESHOLD) {
          return offset4;
        }
        var scrollUp = valueIndex > activeIndex;
        var moveToNext = scrollUp && distance >= _this3.bottomThreshold || !scrollUp && distance > _this3.topThreshold;
        return moveToNext ? _this3.virtualization.itemOffset(activeIndex + 1) : offset4;
      };
      _this3.calculateHeights = function() {
        if (!_this3.dom.didCalculate) {
          return;
        }
        _this3.itemHeight = _this3.dom.itemHeight;
        _this3.listHeight = _this3.dom.timeListHeight;
        _this3.topOffset = (_this3.listHeight - _this3.itemHeight) / 2;
        _this3.bottomOffset = _this3.listHeight - _this3.itemHeight;
        if (_this3.props.mobileMode) {
          _this3.topOffset += MOBILE_MODE_OFFSET;
          _this3.bottomOffset += MOBILE_MODE_OFFSET * 2;
        }
        _this3.topThreshold = _this3.itemHeight * SNAP_THRESHOLD;
        _this3.bottomThreshold = _this3.itemHeight * (1 - SNAP_THRESHOLD);
      };
      _this3.configureServices = function(_a14) {
        var _b3 = _a14 === void 0 ? _this3.props : _a14, min = _b3.min, max = _b3.max, value2 = _b3.value;
        if (_this3.service) {
          var _c2 = _this3.service.limitRange(min || _this3.min, max || _this3.max, value2 || _this3.props.value), newMin = _c2[0], newMax = _c2[1];
          _this3.service.configure(_this3.serviceSettings({ min: newMin, max: newMax }));
        }
      };
      _this3.serviceSettings = function(settings) {
        var defaults = {
          boundRange: _this3.props.boundRange || TimeList2.defaultProps.boundRange,
          insertUndividedMax: false,
          min: cloneDate(_this3.min),
          max: cloneDate(_this3.max),
          part: _this3.props.part,
          step: _this3.step
        };
        var result = Object.assign({}, defaults, settings);
        result.boundRange = result.part.type !== "hour" || _this3.props.boundRange || TimeList2.defaultProps.boundRange;
        return result;
      };
      _this3.handleScrollAction = function(_a14) {
        var target = _a14.target, animationInProgress = _a14.animationInProgress;
        if (!_this3.virtualization || !_this3.service) {
          return;
        }
        if (target && !animationInProgress) {
          _this3.animateToIndex = false;
          var index = _this3.virtualization.itemIndex(_this3.itemOffset(target.scrollTop));
          var dataItem = _this3.service.data(_this3.props.value)[index];
          _this3.handleChange(dataItem);
        }
      };
      _this3.handleFocus = function(event2) {
        var onFocus = _this3.props.onFocus;
        if (onFocus) {
          onFocus.call(void 0, event2);
        }
      };
      _this3.handleBlur = function(event2) {
        var onBlur = _this3.props.onBlur;
        if (onBlur) {
          onBlur.call(void 0, event2);
        }
      };
      _this3.handleMouseOver = function() {
        if (!_this3.i) {
          return;
        }
        var activeElement = getActiveElement(document);
        if (document && activeElement !== _this3.i && _this3.props.show) {
          _this3.i.focus({ preventScroll: true });
        }
      };
      _this3.handleKeyDown = function(event2) {
        if (!_this3.service) {
          return;
        }
        var keyCode = event2.keyCode;
        if (keyCode === Keys.down || keyCode === Keys.up || keyCode === Keys.end || keyCode === Keys.home) {
          event2.preventDefault();
        }
        var getter3 = getters[event2.keyCode] || noop;
        var dataItem = getter3(_this3.service.data(_this3.props.value), _this3.service.selectedIndex(_this3.props.value));
        if (dataItem) {
          _this3.handleChange(dataItem);
        }
      };
      _this3.handleChange = debounce(function(dataItem) {
        if (!_this3.service) {
          return;
        }
        var candidate = _this3.service.apply(_this3.props.value, dataItem.value);
        if (_this3.props.value.getTime() === candidate.getTime()) {
          return;
        }
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, candidate);
        }
      }, SCROLL_THROTTLE);
      _this3.dom = new DOMService2();
      return _this3;
    }
    Object.defineProperty(TimeList2.prototype, "element", {
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeList2.prototype, "animate", {
      get: function() {
        return Boolean(this.props.smoothScroll && this.animateToIndex);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeList2.prototype, "min", {
      get: function() {
        return this.props.min || TimeList2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeList2.prototype, "max", {
      get: function() {
        return this.props.max || TimeList2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeList2.prototype, "step", {
      get: function() {
        return this.props.step !== void 0 && this.props.step !== 0 ? Math.floor(this.props.step) : TimeList2.defaultProps.step;
      },
      enumerable: false,
      configurable: true
    });
    TimeList2.prototype.componentDidMount = function() {
      var _this3 = this;
      Promise.resolve().then(function() {
        if (!_this3.i) {
          return;
        }
        _this3.dom.calculateHeights(_this3.i);
        _this3.forceUpdate();
      });
    };
    TimeList2.prototype.componentDidUpdate = function() {
      if (!this.virtualization || !this.service) {
        return;
      }
      var index = this.service.selectedIndex(this.props.value);
      this.virtualization[this.animate ? "animateToIndex" : "scrollToIndex"](index);
      this.animateToIndex = true;
    };
    TimeList2.prototype.render = function() {
      var _this3 = this;
      if (!this.props.part.type || !services2[this.props.part.type]) {
        return;
      }
      this.calculateHeights();
      this.intl = provideIntlService(this);
      this.service = new services2[this.props.part.type](this.intl);
      this.configureServices();
      var data2 = this.service.data(this.props.value);
      var transform2 = "translateY(" + this.topOffset + "px)";
      var total = this.service.total(this.props.value);
      var list = React86.createElement("ul", { style: { transform: transform2, msTransform: transform2 }, className: "k-reset" }, data2.map(function(item, idx) {
        return React86.createElement(
          "li",
          { key: idx, className: "k-item", onClick: function() {
            _this3.handleChange(item);
          } },
          React86.createElement("span", null, item.text)
        );
      }));
      return React86.createElement("div", { className: "k-time-list", id: String(this.props.id || ""), tabIndex: this.props.disabled ? -1 : 0, ref: function(el) {
        _this3.i = el;
      }, onKeyDown: this.handleKeyDown, onFocus: this.handleFocus, onBlur: this.handleBlur, onMouseOver: this.handleMouseOver }, this.dom.didCalculate ? React86.createElement(Virtualization, { bottomOffset: this.bottomOffset, children: list, className: "k-time-container", itemHeight: this.itemHeight, maxScrollDifference: this.listHeight, onScrollAction: this.handleScrollAction, ref: function(el) {
        _this3.virtualization = el;
      }, role: "presentation", skip: SKIP, tabIndex: -1, take: total, topOffset: this.topOffset, total }) : React86.createElement("div", { className: "k-time-container" }, list));
    };
    TimeList2.propTypes = {
      id: PropTypes48.number,
      max: PropTypes48.instanceOf(Date),
      min: PropTypes48.instanceOf(Date),
      part: function(props, propName, componentName) {
        var prop2 = props[propName];
        if (!prop2 || !services2[prop2.type]) {
          throw new Error("\n                    Invalid prop '".concat(propName, "' supplied to ").concat(componentName, ".\n                    Supported part types are hour|minute|second|dayperiod.\n                "));
        }
        return null;
      },
      step: function(props, propName, componentName) {
        var prop2 = props[propName];
        if (prop2 !== void 0 && prop2 <= 0) {
          throw new Error("\n                    Invalid prop '".concat(propName, "' supplied to ").concat(componentName, ".\n                    ").concat(propName, " cannot be less than 1.\n                "));
        }
        return null;
      },
      value: PropTypes48.instanceOf(Date),
      smoothScroll: PropTypes48.bool,
      show: PropTypes48.bool
    };
    TimeList2.defaultProps = {
      boundRange: false,
      max: MAX_TIME,
      min: MIDNIGHT_DATE,
      step: 1,
      smoothScroll: true
    };
    return TimeList2;
  }(React86.Component)
);
registerForIntl(TimeList);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/TimePart.js
var React87 = __toESM(require_react());
var PropTypes49 = __toESM(require_prop_types());
var __extends36 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign45 = function() {
  __assign45 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign45.apply(this, arguments);
};
var formatRegExp5 = new RegExp("".concat(TIME_PART.hour, "|").concat(TIME_PART.minute, "|").concat(TIME_PART.second, "|").concat(TIME_PART.dayperiod, "|literal"));
var Direction2;
(function(Direction4) {
  Direction4[Direction4["Left"] = 0] = "Left";
  Direction4[Direction4["Right"] = 1] = "Right";
})(Direction2 || (Direction2 = {}));
var TimePart = (
  /** @class */
  function(_super) {
    __extends36(TimePart2, _super);
    function TimePart2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.Xb = null;
      _this3.dateFormatParts = [];
      _this3.timeLists = [];
      _this3.focus = function(args) {
        Promise.resolve().then(function() {
          var timeList = _this3.timeLists[0];
          if (_this3.state.activeListIndex === -1 && !_this3.hasActiveButton() && timeList && timeList.element) {
            timeList.focus(args);
          }
        });
      };
      _this3.timeFormatReducer = function(acc, current) {
        return acc + current.pattern;
      };
      _this3.timeFormatFilter = function(part, index, all) {
        var prevItem = index >= 1 && all[index - 1];
        if (!prevItem) {
          return formatRegExp5.test(part.type || "");
        }
        if (prevItem && part.type === "literal") {
          return formatRegExp5.test(prevItem.type || "");
        }
        return formatRegExp5.test(part.type || "");
      };
      _this3.focusList = function(dir) {
        if (!_this3.timeLists.length) {
          return;
        }
        _this3.timeLists.reduce(_this3.listReducer, []).map(function(state) {
          return dir === Direction2.Right ? state.next : state.prev;
        }).map(function(list) {
          return list && list.element && list.element.focus({ preventScroll: true });
        });
      };
      _this3.listReducer = function(state, list, idx, all) {
        if (state.length || list.props.id !== _this3.state.activeListIndex) {
          return state;
        }
        return [{
          next: all[idx + 1] || list,
          prev: all[idx - 1] || list
        }];
      };
      _this3.showNowButton = function() {
        return !_this3.hasSteps() && _this3.props.nowButton && isInTimeRange2(getNow(), _this3.min, _this3.max);
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        switch (keyCode) {
          case Keys.left:
            event2.preventDefault();
            _this3.focusList(Direction2.Left);
            return;
          case Keys.right:
            event2.preventDefault();
            _this3.focusList(Direction2.Right);
            return;
          default:
            return;
        }
      };
      _this3.handleListBlur = function() {
        _this3.nextTick(function() {
          _this3.setState({ activeListIndex: -1 });
        });
      };
      _this3.handleListFocus = function(idx) {
        clearTimeout(_this3.nextTickId);
        _this3.setState({
          activeListIndex: idx
        });
      };
      _this3.handleChange = function(candidate) {
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, candidate);
        }
      };
      _this3.snapTime = snapTime(generateSnappers(_this3.props.steps, _this3.props.min || TimePart2.defaultProps.min));
      _this3.state = {
        activeListIndex: -1
      };
      _this3.hasActiveButton = _this3.hasActiveButton.bind(_this3);
      return _this3;
    }
    Object.defineProperty(TimePart2.prototype, "element", {
      /**
       * @hidden
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "value", {
      get: function() {
        return timeInRange(this.snapTime(cloneDate(this.props.value || MIDNIGHT_DATE)), this.min, this.max);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "intl", {
      get: function() {
        return provideIntlService(this);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "min", {
      get: function() {
        return this.snapTime(this.props.min || TimePart2.defaultProps.min);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "max", {
      get: function() {
        return this.snapTime(this.props.max || TimePart2.defaultProps.max);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "steps", {
      get: function() {
        return this.props.steps || TimePart2.defaultProps.steps;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePart2.prototype, "boundRange", {
      get: function() {
        return this.props.boundRange !== void 0 ? this.props.boundRange : TimePart2.defaultProps.boundRange;
      },
      enumerable: false,
      configurable: true
    });
    TimePart2.prototype.componentWillUnmount = function() {
      clearTimeout(this.nextTickId);
    };
    TimePart2.prototype.componentDidMount = function() {
      var onMount = this.props.onMount;
      if (onMount) {
        onMount.call(void 0, this.value);
      }
    };
    TimePart2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, format3 = _a14.format, smoothScroll = _a14.smoothScroll, onNowClick = _a14.onNowClick, className = _a14.className, disabled = _a14.disabled, mobileMode = _a14.mobileMode, show = _a14.show;
      this.snapTime = snapTime(generateSnappers(this.steps, this.min));
      this.dateFormatParts = this.intl.splitDateFormat(format3 || TimePart2.defaultProps.format).filter(this.timeFormatFilter);
      var rootClassName = classNames({
        "k-disabled": disabled
      }, className, "k-time-part");
      this.timeLists = [];
      var localizationService = provideLocalizationService(this);
      var selectNowMessage = localizationService.toLanguageString(selectNow, messages3[selectNow]);
      return React87.createElement(
        "div",
        { className: rootClassName },
        React87.createElement(
          "div",
          { className: "k-time-header" },
          React87.createElement("span", { className: "k-title" }, this.intl.formatDate(this.value, this.dateFormatParts.reduce(this.timeFormatReducer, ""))),
          this.showNowButton() && React87.createElement(Button, __assign45({ type: "button", ref: function(btn) {
            _this3.Xb = btn;
          }, className: "k-time-now", fillMode: "flat", themeColor: "primary", title: selectNowMessage }, { "aria-label": selectNowMessage }, { onClick: onNowClick, tabIndex: disabled ? -1 : 0 }), localizationService.toLanguageString(now, messages3[now]))
        ),
        React87.createElement(
          "div",
          { className: "k-time-list-container", onKeyDown: this.handleKeyDown },
          React87.createElement("span", { className: "k-time-highlight" }),
          this.dateFormatParts.map(function(part, idx) {
            return part.type !== "literal" ? React87.createElement(
              "div",
              { key: idx, className: classNames("k-time-list-wrapper", {
                "k-focus": idx === _this3.state.activeListIndex
              }), role: "presentation", tabIndex: -1 },
              React87.createElement("span", { className: "k-title", onMouseDown: function(e) {
                e.preventDefault();
              } }, _this3.intl.dateFieldName(part)),
              React87.createElement(TimeList, { min: _this3.min, max: _this3.max, boundRange: _this3.boundRange, part, step: part.type ? _this3.steps[part.type] : 1, smoothScroll, ref: function(el) {
                if (!el) {
                  return;
                }
                _this3.timeLists.push(el);
              }, id: idx, onFocus: function() {
                _this3.handleListFocus(idx);
              }, onBlur: _this3.handleListBlur, onChange: _this3.handleChange, value: _this3.value, disabled, show, mobileMode })
            ) : React87.createElement("div", { key: idx, className: "k-time-separator" }, part.pattern);
          })
        )
      );
    };
    TimePart2.prototype.nextTick = function(f) {
      clearTimeout(this.nextTickId);
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    TimePart2.prototype.hasActiveButton = function() {
      var activeElement = getActiveElement(document);
      return this.Xb && activeElement === this.Xb.element;
    };
    TimePart2.prototype.hasSteps = function() {
      var _this3 = this;
      var keys2 = Object.keys(this.steps);
      return keys2.length !== keys2.reduce(function(acc, k) {
        return acc + _this3.steps[k];
      }, 0);
    };
    TimePart2.propTypes = {
      cancelButton: PropTypes49.bool,
      disabled: PropTypes49.bool,
      format: PropTypes49.oneOfType([
        PropTypes49.string,
        PropTypes49.shape({
          skeleton: PropTypes49.string,
          pattern: PropTypes49.string,
          date: PropTypes49.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes49.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes49.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes49.oneOf(["narrow", "short", "long"]),
          year: PropTypes49.oneOf(["numeric", "2-digit"]),
          month: PropTypes49.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes49.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes49.oneOf(["narrow", "short", "long"]),
          hour: PropTypes49.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes49.bool,
          minute: PropTypes49.oneOf(["numeric", "2-digit"]),
          second: PropTypes49.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes49.oneOf(["short", "long"])
        })
      ]),
      max: PropTypes49.instanceOf(Date),
      min: PropTypes49.instanceOf(Date),
      nowButton: PropTypes49.bool,
      steps: PropTypes49.shape({
        hour: PropTypes49.number,
        minute: PropTypes49.number,
        second: PropTypes49.number
      }),
      smoothScroll: PropTypes49.bool,
      tabIndex: PropTypes49.number,
      value: PropTypes49.instanceOf(Date),
      show: PropTypes49.bool
    };
    TimePart2.defaultProps = {
      value: null,
      disabled: false,
      nowButton: true,
      cancelButton: true,
      format: "hh:mm a",
      min: MIN_TIME,
      max: MAX_TIME,
      steps: {},
      boundRange: false
    };
    return TimePart2;
  }(React87.Component)
);
registerForIntl(TimePart);
registerForLocalization(TimePart);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/TimeSelector.js
var React88 = __toESM(require_react());
var PropTypes50 = __toESM(require_prop_types());
var __extends37 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign46 = function() {
  __assign46 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign46.apply(this, arguments);
};
var Direction3;
(function(Direction4) {
  Direction4[Direction4["Left"] = 0] = "Left";
  Direction4[Direction4["Right"] = 1] = "Right";
})(Direction3 || (Direction3 = {}));
var TimeSelector = (
  /** @class */
  function(_super) {
    __extends37(TimeSelector2, _super);
    function TimeSelector2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.La = null;
      _this3.va = null;
      _this3.timePart = null;
      _this3.focusActiveList = function() {
        if (!_this3.timePart) {
          return;
        }
        _this3.timePart.focus({ preventScroll: true });
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        switch (keyCode) {
          case Keys.enter:
            if (!_this3.hasActiveButton()) {
              _this3.handleAccept(event2);
            }
            return;
          default:
            return;
        }
      };
      _this3.handleAccept = function(event2) {
        var value2 = _this3.mergeValue(cloneDate(_this3.value || getNow()), _this3.timePart ? _this3.timePart.value : _this3.current);
        _this3.setState({ value: value2 });
        _this3.valueDuringOnChange = value2;
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, {
            syntheticEvent: event2,
            nativeEvent: event2.nativeEvent,
            value: _this3.value,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
      };
      _this3.handleReject = function(event2) {
        _this3.setState({ current: _this3.value });
        var onReject = _this3.props.onReject;
        if (onReject) {
          onReject.call(void 0, event2);
        }
      };
      _this3.handleNowClick = function(event2) {
        var now3 = _this3.mergeValue(cloneDate(_this3.value || getNow()), getNow());
        _this3.setState({
          current: now3,
          value: now3
        });
        _this3.valueDuringOnChange = now3;
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, {
            syntheticEvent: event2,
            nativeEvent: event2.nativeEvent,
            value: _this3.value,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
      };
      _this3.handleChange = function(candidate) {
        _this3.setState({ current: candidate });
        var handleTimeChange = _this3.props.handleTimeChange;
        if (handleTimeChange) {
          handleTimeChange.call(void 0, {
            time: candidate
          });
        }
      };
      _this3.dateFormatParts = _this3.intl.splitDateFormat(_this3.props.format || TimeSelector2.defaultProps.format);
      _this3.mergeValue = valueMerger(generateGetters(_this3.dateFormatParts));
      _this3.hasActiveButton = _this3.hasActiveButton.bind(_this3);
      _this3.state = {
        current: _this3.props.value || MIDNIGHT_DATE,
        value: _this3.props.value || TimeSelector2.defaultProps.value
      };
      return _this3;
    }
    Object.defineProperty(TimeSelector2.prototype, "element", {
      /**
       * @hidden
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeSelector2.prototype, "value", {
      get: function() {
        var value2 = this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
        return value2 !== null ? cloneDate(value2) : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeSelector2.prototype, "intl", {
      get: function() {
        return provideIntlService(this);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimeSelector2.prototype, "current", {
      get: function() {
        return this.state.current !== null ? cloneDate(this.state.current) : null;
      },
      enumerable: false,
      configurable: true
    });
    TimeSelector2.prototype.componentWillUnmount = function() {
      clearTimeout(this.nextTickId);
    };
    TimeSelector2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, format3 = _a14.format, cancelButton = _a14.cancelButton, disabled = _a14.disabled, tabIndex = _a14.tabIndex, className = _a14.className, smoothScroll = _a14.smoothScroll, min = _a14.min, max = _a14.max, boundRange = _a14.boundRange, nowButton = _a14.nowButton, steps = _a14.steps, show = _a14.show, mobileMode = _a14.mobileMode;
      var localizationService = provideLocalizationService(this);
      var cancelMessage = localizationService.toLanguageString(timePickerCancel, messages3[timePickerCancel]);
      var setMessage = localizationService.toLanguageString(timePickerSet, messages3[timePickerSet]);
      return React88.createElement(
        "div",
        { ref: function(el) {
          _this3.i = el;
        }, tabIndex: !disabled ? tabIndex || 0 : void 0, className: classNames("k-timeselector", className, {
          "k-disabled": disabled
        }), onKeyDown: this.handleKeyDown },
        React88.createElement(TimePart, { ref: function(el) {
          _this3.timePart = el;
        }, value: this.current, onChange: this.handleChange, onNowClick: this.handleNowClick, format: format3, smoothScroll, min, max, boundRange, disabled, nowButton, steps, show, mobileMode }),
        this.props.footer && React88.createElement(
          "div",
          { className: "k-time-footer k-actions k-actions-stretched" },
          cancelButton && React88.createElement(Button, __assign46({ type: "button", ref: function(btn) {
            _this3.La = btn;
          }, className: "k-time-cancel", onClick: this.handleReject, title: cancelMessage }, { "aria-label": cancelMessage }), cancelMessage),
          React88.createElement(Button, __assign46({ type: "button", ref: function(btn) {
            _this3.va = btn;
          }, className: "k-time-accept", themeColor: "primary", onClick: this.handleAccept, title: setMessage }, { "aria-label": setMessage }), setMessage)
        )
      );
    };
    TimeSelector2.prototype.nextTick = function(f) {
      clearTimeout(this.nextTickId);
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    TimeSelector2.prototype.hasActiveButton = function() {
      if (!this.va || !this.va.element) {
        return false;
      }
      var activeElement = getActiveElement(document);
      return this.va && activeElement === this.va.element || this.La && activeElement === this.La.element;
    };
    TimeSelector2.propTypes = {
      cancelButton: PropTypes50.bool,
      className: PropTypes50.string,
      disabled: PropTypes50.bool,
      format: PropTypes50.oneOfType([
        PropTypes50.string,
        PropTypes50.shape({
          skeleton: PropTypes50.string,
          pattern: PropTypes50.string,
          date: PropTypes50.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes50.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes50.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes50.oneOf(["narrow", "short", "long"]),
          year: PropTypes50.oneOf(["numeric", "2-digit"]),
          month: PropTypes50.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes50.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes50.oneOf(["narrow", "short", "long"]),
          hour: PropTypes50.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes50.bool,
          minute: PropTypes50.oneOf(["numeric", "2-digit"]),
          second: PropTypes50.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes50.oneOf(["short", "long"])
        })
      ]),
      max: PropTypes50.instanceOf(Date),
      min: PropTypes50.instanceOf(Date),
      nowButton: PropTypes50.bool,
      steps: PropTypes50.shape({
        hour: PropTypes50.number,
        minute: PropTypes50.number,
        second: PropTypes50.number
      }),
      smoothScroll: PropTypes50.bool,
      tabIndex: PropTypes50.number,
      value: PropTypes50.instanceOf(Date),
      show: PropTypes50.bool
    };
    TimeSelector2.defaultProps = {
      value: null,
      disabled: false,
      cancelButton: true,
      format: "t",
      min: MIN_TIME,
      max: MAX_TIME,
      boundRange: false,
      footer: true
    };
    return TimeSelector2;
  }(React88.Component)
);
registerForIntl(TimeSelector);
registerForLocalization(TimeSelector);

// node_modules/@progress/kendo-react-dateinputs/dist/es/timepicker/TimePicker.js
var React89 = __toESM(require_react());
var PropTypes51 = __toESM(require_prop_types());
var __extends38 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign47 = function() {
  __assign47 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign47.apply(this, arguments);
};
var __rest25 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TimePickerWithoutContext = (
  /** @class */
  function(_super) {
    __extends38(TimePickerWithoutContext2, _super);
    function TimePickerWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.ka = guid();
      _this3.i = null;
      _this3.ma = React89.createRef();
      _this3.vb = null;
      _this3.shouldFocusDateInput = false;
      _this3.prevShow = false;
      _this3.focus = function() {
        if (_this3.dateInput) {
          _this3.dateInput.focus();
        }
      };
      _this3.renderTimeSelector = function() {
        var _a14 = _this3.props, smoothScroll = _a14.smoothScroll, cancelButton = _a14.cancelButton, nowButton = _a14.nowButton, disabled = _a14.disabled, format3 = _a14.format, steps = _a14.steps;
        return React89.createElement(TimeSelector, { ref: _this3.setTimeSelectorRef, className: _this3.mobileMode ? "k-reset k-timeselector-lg" : "", mobileMode: _this3.mobileMode, show: _this3.show, cancelButton, disabled, nowButton, format: format3, min: _this3.min, max: _this3.max, steps, smoothScroll, value: _this3.value, footer: _this3.mobileMode ? false : true, handleTimeChange: _this3.mobileMode && _this3.handleTimeChange, onChange: _this3.handleValueChange, onReject: _this3.handleValueReject });
      };
      _this3.renderPopup = function() {
        var _a14 = _this3.popupSettings, popupClass = _a14.popupClass, otherPopupSettings = __rest25(_a14, ["popupClass"]);
        var popupClassNames = classNames("k-group k-reset", popupClass);
        var popupProps = __assign47({ popupClass: "k-timepicker-popup", show: _this3.show, animate: _this3.element !== null, anchor: _this3.element, className: popupClassNames, id: _this3.ka, anchorAlign: {
          horizontal: "left",
          vertical: "bottom"
        }, popupAlign: {
          horizontal: "left",
          vertical: "top"
        } }, otherPopupSettings);
        return _this3.props.popup ? React89.createElement(_this3.props.popup, __assign47({}, popupProps), _this3.renderTimeSelector()) : React89.createElement(Popup, __assign47({}, popupProps), _this3.renderTimeSelector());
      };
      _this3.renderAdaptivePopup = function() {
        var _a14 = _this3.state.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14;
        var actionSheetProps = {
          expand: _this3.show,
          onClose: _this3.handleBlur,
          adaptiveTitle: _this3.props.adaptiveTitle,
          windowWidth,
          footer: {
            cancelText: _this3.localizationService.toLanguageString(toggleClock, messages3[timePickerCancel]),
            onCancel: _this3.handleValueReject,
            applyText: _this3.localizationService.toLanguageString(timePickerSet, messages3[timePickerSet]),
            onApply: function(event2) {
              return _this3.handleValueChange(event2);
            }
          }
        };
        return React89.createElement(
          AdaptiveMode,
          __assign47({}, actionSheetProps),
          React89.createElement(ActionSheetContent, { className: "!k-overflow-hidden" }, _this3.renderTimeSelector())
        );
      };
      _this3.setTimeSelectorRef = function(timeSelector) {
        _this3.vb = timeSelector;
      };
      _this3.nextValue = function(nextProps, nextState) {
        return nextProps.value !== void 0 ? nextProps.value : nextState.value;
      };
      _this3.nextShow = function(nextProps, nextState) {
        return nextProps.show !== void 0 ? nextProps.show : nextState.show;
      };
      _this3.handleInputValueChange = function(event2) {
        var value2 = _this3.mergeTime(event2.value);
        _this3.handleValueChange(__assign47(__assign47({}, event2), { value: value2 }));
      };
      _this3.handleTimeChange = function(date2) {
        _this3.setState({ candidate: date2.time });
      };
      _this3.handleValueChange = function(event2) {
        _this3.setState({
          value: cloneDate(event2.value || _this3.state.candidate),
          show: false
        });
        _this3.valueDuringOnChange = event2.value;
        _this3.showDuringOnChange = false;
        _this3.shouldFocusDateInput = true;
        var onChange = _this3.props.onChange;
        var value2 = _this3.value || _this3.state.candidate;
        if (onChange) {
          onChange.call(void 0, {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: value2,
            show: _this3.show,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
        _this3.showDuringOnChange = void 0;
      };
      _this3.handleFocus = function() {
        _this3.setState({ focused: true });
      };
      _this3.handleBlur = function() {
        _this3.setState({ focused: false });
        _this3.setShow(false);
      };
      _this3.handleValueReject = function(_2) {
        _this3.setShow(false);
      };
      _this3.handleIconClick = function(_2) {
        if (_this3.props.disabled) {
          return;
        }
        _this3.shouldFocusDateInput = true;
        _this3.setShow(!_this3.show);
      };
      _this3.handleIconMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleKeyDown = function(event2) {
        var altKey = event2.altKey, keyCode = event2.keyCode;
        if (keyCode === Keys.esc) {
          _this3.shouldFocusDateInput = true;
          _this3.setShow(false);
          return;
        }
        if (altKey && (keyCode === Keys.up || keyCode === Keys.down)) {
          event2.preventDefault();
          event2.stopPropagation();
          _this3.shouldFocusDateInput = keyCode === Keys.up;
          _this3.setShow(keyCode === Keys.down);
        }
      };
      validatePackage2(packageMetadata4);
      _this3.state = {
        value: _this3.props.defaultValue || TimePickerWithoutContext2.defaultProps.defaultValue,
        show: _this3.props.defaultShow || TimePickerWithoutContext2.defaultProps.defaultShow,
        focused: false,
        candidate: null
      };
      _this3.normalizeTime = _this3.normalizeTime.bind(_this3);
      _this3.setShow = _this3.setShow.bind(_this3);
      _this3.mergeTime = _this3.mergeTime.bind(_this3);
      return _this3;
    }
    Object.defineProperty(TimePickerWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the TimePicker.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "dateInput", {
      /**
       * Gets the DateInput component inside the TimePicker component.
       */
      get: function() {
        return this.ma.current;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "timeSelector", {
      /**
       * Gets the TimeSelector component inside the TimePicker component.
       */
      get: function() {
        return this.vb;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the TimePicker.
       */
      get: function() {
        var value2 = this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
        return value2 !== null ? cloneDate(value2) : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "show", {
      /**
       * Gets the popup state of the TimeSelector.
       */
      get: function() {
        return this.showDuringOnChange !== void 0 ? this.showDuringOnChange : this.props.show !== void 0 ? this.props.show : this.state.show;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the TimePicker.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the TimePicker is set.
       */
      get: function() {
        var value2 = this.value && this.normalizeTime(this.value);
        var min = this.normalizeTime(this.min);
        var max = this.normalizeTime(this.max);
        var inRange3 = isInRange3(value2, min, max);
        var customError = this.props.validationMessage !== void 0;
        var isValid = (!this.required || this.value !== null) && inRange3;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          rangeOverflow: isBiggerThanMax(value2, max),
          rangeUnderflow: isSmallerThanMin(value2, min),
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the ComboBox.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : TimePickerWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : TimePickerWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "popupSettings", {
      get: function() {
        return this.props.popupSettings || TimePickerWithoutContext2.defaultProps.popupSettings;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : TimePickerWithoutContext2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : TimePickerWithoutContext2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "dateInputComp", {
      get: function() {
        return this.props.dateInput || TimePickerWithoutContext2.defaultProps.dateInput;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TimePickerWithoutContext2.prototype, "localizationService", {
      get: function() {
        return provideLocalizationService(this);
      },
      enumerable: false,
      configurable: true
    });
    TimePickerWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      if (this.show) {
        this.forceUpdate();
      }
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    TimePickerWithoutContext2.prototype.componentDidUpdate = function() {
      if (this.vb && this.show && !this.prevShow) {
        this.vb.focusActiveList();
      } else if (this.dateInput && this.dateInput.element && !this.show && this.shouldFocusDateInput) {
        this.dateInput.element.focus({ preventScroll: true });
      }
      this.prevShow = this.show;
      this.shouldFocusDateInput = false;
    };
    TimePickerWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    ;
    TimePickerWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.size, size = _b3 === void 0 ? TimePickerWithoutContext2.defaultProps.size : _b3, _c2 = _a14.rounded, rounded = _c2 === void 0 ? TimePickerWithoutContext2.defaultProps.rounded : _c2, _d = _a14.fillMode, fillMode = _d === void 0 ? TimePickerWithoutContext2.defaultProps.fillMode : _d, disabled = _a14.disabled, tabIndex = _a14.tabIndex, title = _a14.title, id = _a14.id, className = _a14.className, format3 = _a14.format, formatPlaceholder = _a14.formatPlaceholder, width = _a14.width, name2 = _a14.name, steps = _a14.steps, validationMessage = _a14.validationMessage, required = _a14.required, validityStyles = _a14.validityStyles, ariaLabelledBy = _a14.ariaLabelledBy, ariaDescribedBy = _a14.ariaDescribedBy;
      var isValid = !this.validityStyles || this.validity.valid;
      var dateInputProps = {
        disabled,
        format: format3,
        formatPlaceholder,
        id,
        ariaLabelledBy,
        ariaDescribedBy,
        max: this.normalizeTime(this.max),
        min: this.normalizeTime(this.min),
        name: name2,
        onChange: this.handleInputValueChange,
        required,
        steps,
        tabIndex: !this.show ? tabIndex : -1,
        title,
        valid: this.validity.valid,
        validationMessage,
        validityStyles,
        value: this.value && this.normalizeTime(this.value),
        label: void 0,
        placeholder: !this.state.focused ? this.props.placeholder : null,
        ariaHasPopup: "dialog",
        ariaExpanded: this.show,
        size: null,
        fillMode: null,
        rounded: null,
        readonly: this.mobileMode
      };
      var toggleClockMessage = this.localizationService.toLanguageString(toggleClock, messages3[toggleClock]);
      var toggleTimeMessage = this.localizationService.toLanguageString(toggleTimeSelector, messages3[toggleTimeSelector]);
      var timepicker = React89.createElement(AsyncFocusBlur, { onFocus: this.handleFocus, onBlur: !this.mobileMode ? this.handleBlur : void 0, onSyncBlur: this.props.onBlur, onSyncFocus: this.props.onFocus }, function(_a15) {
        var _b4;
        var onFocus = _a15.onFocus, onBlur = _a15.onBlur;
        return React89.createElement(
          React89.Fragment,
          null,
          React89.createElement(
            "div",
            { ref: function(span) {
              _this3.i = span;
            }, className: classNames("k-input", "k-timepicker", (_b4 = {}, _b4["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _b4["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _b4["k-input-".concat(fillMode)] = fillMode, _b4["k-invalid"] = !isValid, _b4["k-required"] = _this3.required, _b4["k-disabled"] = _this3.props.disabled, _b4), className), onKeyDown: _this3.handleKeyDown, style: { width }, onFocus, onBlur, onClick: _this3.mobileMode ? _this3.handleIconClick : void 0 },
            React89.createElement(_this3.dateInputComp, __assign47({ n: _this3.ma, ariaRole: "combobox", ariaControls: _this3.ka }, dateInputProps)),
            React89.createElement(Button, __assign47({ tabIndex: -1, type: "button", icon: "clock", svgIcon: clockIcon, onMouseDown: _this3.handleIconMouseDown, onClick: _this3.handleIconClick, title: toggleTimeMessage, className: "k-input-button", rounded: null }, {
              "aria-label": toggleClockMessage
            })),
            !_this3.mobileMode && _this3.renderPopup()
          ),
          _this3.mobileMode && _this3.renderAdaptivePopup()
        );
      });
      return this.props.label ? React89.createElement(PickerFloatingLabel, { dateInput: this.ma, label: this.props.label, editorId: id, editorValid: isValid, editorDisabled: this.props.disabled, children: timepicker, style: { width: this.props.width } }) : timepicker;
    };
    TimePickerWithoutContext2.prototype.normalizeTime = function(date2) {
      return setTime2(MIDNIGHT_DATE, date2);
    };
    TimePickerWithoutContext2.prototype.setShow = function(show) {
      if (this.show === show) {
        return;
      }
      this.setState({ show });
    };
    TimePickerWithoutContext2.prototype.mergeTime = function(value2) {
      return this.value && value2 ? setTime2(this.value, value2) : value2;
    };
    TimePickerWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    TimePickerWithoutContext2.displayName = "TimePicker";
    TimePickerWithoutContext2.propTypes = {
      className: PropTypes51.string,
      cancelButton: PropTypes51.bool,
      nowButton: PropTypes51.bool,
      defaultShow: PropTypes51.bool,
      defaultValue: PropTypes51.instanceOf(Date),
      disabled: PropTypes51.bool,
      format: PropTypes51.oneOfType([
        PropTypes51.string,
        PropTypes51.shape({
          skeleton: PropTypes51.string,
          pattern: PropTypes51.string,
          date: PropTypes51.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes51.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes51.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes51.oneOf(["narrow", "short", "long"]),
          year: PropTypes51.oneOf(["numeric", "2-digit"]),
          month: PropTypes51.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes51.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes51.oneOf(["narrow", "short", "long"]),
          hour: PropTypes51.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes51.bool,
          minute: PropTypes51.oneOf(["numeric", "2-digit"]),
          second: PropTypes51.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes51.oneOf(["short", "long"])
        })
      ]),
      formatPlaceholder: PropTypes51.oneOfType([
        PropTypes51.oneOf(["wide", "narrow", "short", "formatPattern"]),
        PropTypes51.shape({
          year: PropTypes51.string,
          month: PropTypes51.string,
          day: PropTypes51.string,
          hour: PropTypes51.string,
          minute: PropTypes51.string,
          second: PropTypes51.string
        })
      ]),
      id: PropTypes51.string,
      ariaLabelledBy: PropTypes51.string,
      ariaDescribedBy: PropTypes51.string,
      min: PropTypes51.instanceOf(Date),
      max: PropTypes51.instanceOf(Date),
      name: PropTypes51.string,
      popupSettings: PropTypes51.shape({
        animate: PropTypes51.bool,
        appendTo: PropTypes51.any,
        popupClass: PropTypes51.string
      }),
      show: PropTypes51.bool,
      steps: PropTypes51.shape({
        hour: PropTypes51.number,
        minute: PropTypes51.number,
        second: PropTypes51.number
      }),
      smoothScroll: PropTypes51.bool,
      tabIndex: PropTypes51.number,
      title: PropTypes51.string,
      value: PropTypes51.instanceOf(Date),
      width: PropTypes51.oneOfType([PropTypes51.number, PropTypes51.string]),
      validationMessage: PropTypes51.string,
      required: PropTypes51.bool,
      validate: PropTypes51.bool,
      valid: PropTypes51.bool,
      size: PropTypes51.oneOf([null, "small", "medium", "large"]),
      rounded: PropTypes51.oneOf([null, "small", "medium", "large", "full"]),
      fillMode: PropTypes51.oneOf([null, "solid", "flat", "outline"])
    };
    TimePickerWithoutContext2.defaultProps = {
      defaultShow: false,
      defaultValue: null,
      disabled: false,
      format: "t",
      max: MAX_TIME,
      min: MIN_TIME,
      popupSettings: {},
      tabIndex: 0,
      steps: {},
      required: false,
      validityStyles: true,
      dateInput: DateInput,
      size: "medium",
      rounded: "medium",
      fillMode: "solid"
    };
    return TimePickerWithoutContext2;
  }(React89.Component)
);
var TimePickerPropsContext = createPropsContext();
var TimePicker = withPropsContext(TimePickerPropsContext, TimePickerWithoutContext);
TimePicker.displayName = "KendoReactTimePicker";
registerForLocalization(TimePickerWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/HorizontalViewList.js
var React90 = __toESM(require_react());
var __extends39 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var DEFAULT_FETCH_MONTHS_COUNT = 2;
var HorizontalViewList = (
  /** @class */
  function(_super) {
    __extends39(HorizontalViewList2, _super);
    function HorizontalViewList2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.isActive = false;
      _this3.focusActiveDate = function() {
        if (!_this3.i) {
          return;
        }
        var focusedCell = _this3.i.querySelector("td.k-focus");
        var nextActiveCell = _this3.i.querySelector(".k-state-pending-focus");
        if (focusedCell && focusedCell[0]) {
          focusedCell[0].classList.remove("k-focus");
        }
        if (nextActiveCell) {
          nextActiveCell.classList.add("k-focus");
        }
        _this3.isActive = true;
      };
      _this3.blurActiveDate = function() {
        if (!_this3.i) {
          return;
        }
        var focusedCell = _this3.i.querySelector("td.k-focus");
        if (focusedCell) {
          focusedCell.classList.remove("k-focus");
        }
        _this3.isActive = false;
      };
      _this3.rotateSelectionRange = function(selectionRange) {
        if (selectionRange.start === null || selectionRange.end === null) {
          return selectionRange;
        }
        var needRotate = selectionRange.end < selectionRange.start;
        return {
          start: needRotate ? selectionRange.end : selectionRange.start,
          end: needRotate ? selectionRange.start : selectionRange.end
        };
      };
      _this3.handleDateChange = function(event2, isTodayClick) {
        if (isTodayClick === void 0) {
          isTodayClick = false;
        }
        var onChange = _this3.props.onChange;
        if (onChange) {
          var args = {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: cloneDate(event2.value),
            target: _this3,
            isTodayClick
          };
          onChange.call(void 0, args);
        }
      };
      return _this3;
    }
    Object.defineProperty(HorizontalViewList2.prototype, "element", {
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(HorizontalViewList2.prototype, "weekNumber", {
      get: function() {
        return Boolean(this.props.showWeekNumbers && this.props.activeView === CalendarViewEnum.month);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(HorizontalViewList2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : HorizontalViewList2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(HorizontalViewList2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : HorizontalViewList2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    HorizontalViewList2.prototype.componentDidUpdate = function() {
      if (this.isActive) {
        this.focusActiveDate();
      }
    };
    HorizontalViewList2.prototype.render = function() {
      var _this3 = this;
      var selectionRange = this.props.allowReverse ? this.rotateSelectionRange(this.props.selectionRange) : this.props.selectionRange;
      var rootClassNames = classNames("k-calendar-view k-align-items-start k-justify-content-center", {
        "k-vstack": this.props.verticalView,
        "k-hstack": !this.props.verticalView,
        "k-calendar-monthview": this.props.activeView === CalendarViewEnum.month,
        "k-calendar-yearview": this.props.activeView === CalendarViewEnum.year,
        "k-calendar-decadeview": this.props.activeView === CalendarViewEnum.decade,
        "k-calendar-centuryview": this.props.activeView === CalendarViewEnum.century
      });
      return React90.createElement("div", { ref: function(el) {
        _this3.i = el;
      }, className: rootClassNames }, this.props.dates.map(function(date2) {
        return React90.createElement(
          "table",
          { className: "k-calendar-table k-content", key: date2.getTime(), role: "grid" },
          React90.createElement(View, { bus: _this3.props.bus, service: _this3.props.service, key: date2.getTime(), direction: "horizontal", activeView: _this3.props.activeView, cellUID: _this3.props.cellUID, viewDate: date2, min: _this3.min, max: _this3.max, focusedDate: _this3.props.focusedDate, selectionRange, selectedDate: _this3.props.value, showWeekNumbers: _this3.weekNumber, onChange: _this3.handleDateChange, onCellEnter: _this3.props.onCellEnter, cell: _this3.props.cell, weekCell: _this3.props.weekCell })
        );
      }));
    };
    HorizontalViewList2.defaultProps = {
      showWeekNumbers: false,
      views: DEFAULT_FETCH_MONTHS_COUNT,
      take: DEFAULT_FETCH_MONTHS_COUNT,
      allowReverse: true,
      min: MIN_DATE2,
      max: MAX_DATE2
    };
    return HorizontalViewList2;
  }(React90.Component)
);

// node_modules/@progress/kendo-react-dateinputs/dist/es/calendar/components/MultiViewCalendar.js
var React91 = __toESM(require_react());
var PropTypes52 = __toESM(require_prop_types());
var __extends40 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign48 = function() {
  __assign48 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign48.apply(this, arguments);
};
var extractDateFromValue = function(min, max, value2) {
  if (min === void 0) {
    min = MultiViewCalendarWithoutContext.defaultProps.min;
  }
  if (max === void 0) {
    max = MultiViewCalendarWithoutContext.defaultProps.max;
  }
  return value2 instanceof Date && !Array.isArray(value2) && isInRange(getDate(value2), min, max) ? getDate(value2) : null;
};
var extractMultipleFromValue = function(min, max, value2) {
  if (min === void 0) {
    min = MultiViewCalendarWithoutContext.defaultProps.min;
  }
  if (max === void 0) {
    max = MultiViewCalendarWithoutContext.defaultProps.max;
  }
  return Array.isArray(value2) ? value2.filter(function(date2) {
    return isInRange(date2, min, max);
  }).map(function(date2) {
    return getDate(date2);
  }) : null;
};
var extractRangeFromValue = function(value2) {
  return typeof value2 === "object" && !(value2 instanceof Date) && value2 !== null && !Array.isArray(value2) ? value2 : EMPTY_SELECTIONRANGE;
};
var extractFocusedDate = function(single, multiple, range3) {
  return single || multiple && multiple[0] || range3 && range3.start;
};
var extractActiveRange = function(range3, single) {
  return range3.start === null && single === null ? "start" : range3.end === null ? "end" : "start";
};
var MultiViewCalendarWithoutContext = (
  /** @class */
  function(_super) {
    __extends40(MultiViewCalendarWithoutContext2, _super);
    function MultiViewCalendarWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.dates = [];
      _this3.selectedDate = null;
      _this3.selectedMultiple = null;
      _this3.selectedRange = EMPTY_SELECTIONRANGE;
      _this3.Hc = /* @__PURE__ */ new Date();
      _this3.cellUID = guid();
      _this3.activeRangeEnd = "start";
      _this3.i = null;
      _this3.intl = null;
      _this3.localization = null;
      _this3.service = null;
      _this3.wrapperID = guid();
      _this3.calendarViewList = null;
      _this3.isActive = false;
      _this3.calculateFocusFromValue = true;
      _this3.focus = function() {
        if (_this3.i) {
          _this3.i.focus();
        }
      };
      _this3.clampRange = function(value3) {
        return { start: value3, end: null };
      };
      _this3.rangeWithFocused = function(range3, focusedDate2) {
        return {
          start: range3.start,
          end: range3.end === null && range3.start !== null && _this3.isActive ? focusedDate2 : range3.end
        };
      };
      _this3.generateRange = function(candidate, value3) {
        var end2 = value3.end, start2 = value3.start;
        var shouldSwap = value3.start !== null && candidate.getTime() <= value3.start.getTime();
        if (!_this3.props.allowReverse && shouldSwap) {
          return { start: candidate, end: _this3.selectedRange.start };
        }
        return _this3.activeRange !== "end" ? { start: candidate, end: end2 } : { start: start2 || _this3.selectedDate, end: candidate };
      };
      _this3.canNavigate = function(action) {
        if (!_this3.service) {
          return false;
        }
        var candidate = _this3.service.move(_this3.focusedDate, action);
        return _this3.min <= candidate && candidate <= _this3.max || _this3.service.isInSameView(candidate, _this3.min) || _this3.service.isInSameView(candidate, _this3.max);
      };
      _this3.isListInRange = function(list) {
        return _this3.min < list[0] && _this3.max > list[Math.max(0, (_this3.props.views || MultiViewCalendarWithoutContext2.defaultProps.views) - 1)];
      };
      _this3.navigate = function(action) {
        _this3.calculateFocusFromValue = false;
        var candidate = _this3.move(action);
        _this3.setState({ focusedDate: candidate });
      };
      _this3.move = function(action) {
        return _this3.clampDate(_this3.service.move(_this3.focusedDate, action));
      };
      _this3.clampDate = function(value3) {
        return dateInRange(value3, _this3.min, _this3.max);
      };
      _this3.shouldAutoCorrect = function(candidate, value3) {
        var end2 = value3.end, start2 = value3.start;
        if (_this3.activeRange !== "end") {
          return end2 !== null && candidate > end2;
        } else {
          return start2 !== null && candidate < start2;
        }
      };
      _this3.handleCellEnter = function(value3) {
        if (_this3.props.mode === "range") {
          _this3.calculateFocusFromValue = false;
          _this3.setState({
            focusedDate: value3
          });
        }
      };
      _this3.handleMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleClick = function(_2) {
        if (!_this3.i) {
          return;
        }
        _this3.i.focus({ preventScroll: true });
      };
      _this3.handleFocus = function(event2) {
        _this3.isActive = true;
        if (!_this3.calendarViewList) {
          return;
        }
        _this3.calendarViewList.focusActiveDate();
        var onFocus = _this3.props.onFocus;
        if (onFocus) {
          onFocus.call(void 0, event2);
        }
      };
      _this3.handleBlur = function(event2) {
        _this3.isActive = false;
        if (!_this3.calendarViewList) {
          return;
        }
        _this3.calendarViewList.blurActiveDate();
        var onBlur = _this3.props.onBlur;
        if (onBlur) {
          onBlur.call(void 0, event2);
        }
      };
      _this3.handleTodayClick = function(event2) {
        if (!_this3.todayIsInRange) {
          return;
        }
        _this3.handleDateChange(event2);
      };
      _this3.handlePrevButtonClick = function() {
        _this3.navigate(Action.PrevView);
      };
      _this3.handleNextButtonClick = function() {
        _this3.navigate(Action.NextView);
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        if (keyCode === Keys.enter) {
          var args = {
            syntheticEvent: event2,
            nativeEvent: event2.nativeEvent,
            value: _this3.focusedDate,
            target: _this3
          };
          _this3.handleDateChange(args);
        } else {
          var candidate = dateInRange(_this3.navigation.move(_this3.focusedDate, _this3.navigation.action(event2), _this3.state.activeView, _this3.service, event2), _this3.min, _this3.max);
          if (isEqualDate(_this3.focusedDate, candidate)) {
            return;
          }
          _this3.calculateFocusFromValue = false;
          _this3.setState({ focusedDate: candidate });
        }
        event2.preventDefault();
      };
      _this3.handleViewChange = function(_a14) {
        var view = _a14.view;
        _this3.calculateFocusFromValue = false;
        _this3.setState({ activeView: view });
      };
      _this3.handleDateChange = function(event2) {
        var focusedDate2 = cloneDate(event2.value);
        var canNavigateDown = _this3.bus.canMoveDown(_this3.state.activeView);
        if (_this3.props.disabled) {
          return;
        }
        if (canNavigateDown) {
          if (event2.isTodayClick) {
            _this3.bus.moveToBottom(_this3.state.activeView);
          } else {
            _this3.bus.moveDown(_this3.state.activeView, event2.syntheticEvent);
            _this3.setState({ focusedDate: focusedDate2 });
            return;
          }
        }
        _this3.calculateFocusFromValue = true;
        var value3;
        switch (_this3.props.mode) {
          case "single":
            value3 = cloneDate(event2.value);
            break;
          case "multiple":
            if (Array.isArray(_this3.selectedMultiple)) {
              var result = _this3.selectedMultiple.slice();
              var index_1 = -1;
              result.forEach(function(date2, idx) {
                if (isEqualDate(date2, event2.value)) {
                  index_1 = idx;
                }
              });
              index_1 !== -1 ? result.splice(index_1, 1) : result.push(cloneDate(event2.value));
              value3 = result.slice();
            } else {
              if (_this3.selectedDate) {
                value3 = [cloneDate(_this3.selectedDate), cloneDate(event2.value)];
              } else {
                value3 = [cloneDate(event2.value)];
              }
            }
            break;
          case "range":
            var hasSelection = _this3.selectedRange.start !== null && _this3.selectedRange.end !== null && _this3.activeRange === "start";
            value3 = hasSelection ? _this3.clampRange(event2.value) : _this3.generateRange(event2.value, _this3.selectedRange);
            _this3.activeRangeEnd = _this3.activeRange !== "end" ? "end" : "start";
            break;
          default:
            value3 = cloneDate(event2.value);
            break;
        }
        _this3.valueDuringOnChange = value3;
        _this3.setState({ value: value3, focusedDate: focusedDate2 });
        _this3.valueDuringOnChange = value3;
        var onChange = _this3.props.onChange;
        if (onChange) {
          var args = {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: value3,
            target: _this3
          };
          onChange.call(void 0, args);
        }
        _this3.valueDuringOnChange = void 0;
      };
      var value2 = props.value !== void 0 ? props.value : props.defaultValue || MultiViewCalendarWithoutContext2.defaultProps.defaultValue;
      var selectedDate = extractDateFromValue(_this3.min, _this3.max, value2);
      var selectedMultiple = extractMultipleFromValue(_this3.min, _this3.max, value2);
      var selectedRange = extractRangeFromValue(value2);
      var calculatedFocus = extractFocusedDate(selectedDate, selectedMultiple, selectedRange);
      var activeView = viewInRange(CalendarViewEnum[props.defaultActiveView], _this3.bottomView, _this3.topView);
      var focusedDate = dateInRange(props.focusedDate || calculatedFocus || getToday2(), _this3.min, _this3.max);
      _this3.state = {
        value: value2,
        activeView,
        focusedDate
      };
      _this3.activeRangeEnd = extractActiveRange(selectedRange, selectedDate);
      _this3.bus = new BusViewService(_this3.handleViewChange);
      _this3.navigation = new NavigationService(_this3.bus);
      _this3.calculateFocusFromValue = false;
      _this3.lastView = activeView;
      _this3.lastViewsCount = _this3.props.views || HorizontalViewList.defaultProps.views;
      return _this3;
    }
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "isRtl", {
      get: function() {
        return this.props.dir === "rtl";
      },
      enumerable: false,
      configurable: true
    });
    ;
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the MultiViewCalendar component.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the MultiViewCalendar.
       */
      get: function() {
        return this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "focusedDate", {
      /**
       * Gets the current focused date of the MultiViewCalendar.
       */
      get: function() {
        return cloneDate(this.Hc);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "min", {
      get: function() {
        return getDate(this.props.min !== void 0 ? this.props.min : MultiViewCalendarWithoutContext2.defaultProps.min);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "max", {
      get: function() {
        return getDate(this.props.max !== void 0 ? this.props.max : MultiViewCalendarWithoutContext2.defaultProps.max);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "bottomView", {
      get: function() {
        return CalendarViewEnum[this.props.bottomView !== void 0 ? this.props.bottomView : MultiViewCalendarWithoutContext2.defaultProps.bottomView];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "topView", {
      get: function() {
        return CalendarViewEnum[this.props.topView !== void 0 ? this.props.topView : MultiViewCalendarWithoutContext2.defaultProps.topView];
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "activeRange", {
      get: function() {
        return this.props.activeRangeEnd !== void 0 ? this.props.activeRangeEnd : this.activeRangeEnd;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiViewCalendarWithoutContext2.prototype, "todayIsInRange", {
      get: function() {
        return isInRange(getToday2(), getDate(this.min), getDate(this.max));
      },
      enumerable: false,
      configurable: true
    });
    MultiViewCalendarWithoutContext2.prototype.componentDidMount = function() {
      this.calculateFocusFromValue = true;
    };
    MultiViewCalendarWithoutContext2.prototype.componentDidUpdate = function() {
      if (this.calendarViewList) {
        (this.isActive ? this.calendarViewList.focusActiveDate : this.calendarViewList.blurActiveDate)();
      }
      var stateValue = extractDateFromValue(this.min, this.max, this.value);
      this.calculateFocusFromValue = Boolean(this.selectedDate && stateValue && (this.selectedDate.getTime() && stateValue.getTime()));
      this.lastView = this.state.activeView;
      this.lastViewsCount = this.props.views || HorizontalViewList.defaultProps.views;
    };
    MultiViewCalendarWithoutContext2.prototype.render = function() {
      var _this3 = this;
      if (this.props.n) {
        this.props.n(this);
      }
      this.intl = provideIntlService(this);
      this.localization = provideLocalizationService(this);
      this.bus.configure(this.bottomView, this.topView);
      var activeView = viewInRange(this.state.activeView, this.bottomView, this.topView);
      this.service = this.bus.service(activeView, this.intl);
      this.selectedDate = extractDateFromValue(this.min, this.max, this.value);
      this.selectedMultiple = extractMultipleFromValue(this.min, this.max, this.value);
      this.selectedRange = extractRangeFromValue(this.value);
      var calculatedFocus = extractFocusedDate(this.selectedDate, this.selectedMultiple, this.selectedRange);
      this.Hc = dateInRange(this.calculateFocusFromValue && calculatedFocus !== null ? calculatedFocus : this.state.focusedDate, this.min, this.max);
      var wrapperClassName = classNames("k-widget k-calendar k-calendar-range", {
        "k-disabled": this.props.disabled
      }, this.props.className);
      var visualizedRange = this.rangeWithFocused(this.selectedRange, this.focusedDate);
      var prevViewTitle = this.localization.toLanguageString(prevView, messages3[prevView]);
      var nextViewTittle = this.localization.toLanguageString(nextView, messages3[nextView]);
      var isPrevDisabled = !this.canNavigate(Action.PrevView);
      var isNextDisabled = !this.canNavigate(Action.NextView);
      var prevBtnAria = { "aria-disabled": isPrevDisabled };
      var nextBtnAria = { "aria-disabled": isNextDisabled };
      var didViewChange = this.lastView !== activeView;
      var isDateInList = this.dates && this.service.isInArray(this.focusedDate, this.dates);
      var didViewsCountChange = this.lastViewsCount !== this.props.views;
      if (!isDateInList || didViewChange || didViewsCountChange) {
        this.dates = this.service.datesList(this.focusedDate, this.props.views || HorizontalViewList.defaultProps.views);
      }
      var activeDate = cloneDate(this.dates && this.dates[0] ? this.dates[0] : getToday2());
      return React91.createElement(
        "div",
        { ref: function(el) {
          _this3.i = el;
        }, className: wrapperClassName, id: this.props.id || this.wrapperID, "aria-labelledby": this.props.ariaLabelledBy, "aria-describedby": this.props.ariaDescribedBy, tabIndex: !this.props.disabled ? this.props.tabIndex : void 0, onFocus: this.handleFocus, onBlur: this.handleBlur, onMouseDown: this.handleMouseDown, onClick: this.handleClick, onKeyDown: this.handleKeyDown, "aria-disabled": this.props.disabled, dir: this.props.dir },
        React91.createElement(Header, { key: ".kendo.calendar.header.".concat(activeDate.getTime()), activeView, currentDate: activeDate, min: this.min, max: this.max, rangeLength: this.props.views, bus: this.bus, service: this.service, headerTitle: this.props.headerTitle, verticalView: this.props.mobileMode, commands: React91.createElement(
          React91.Fragment,
          null,
          React91.createElement(Button, __assign48({ type: "button", className: "k-calendar-nav-prev", icon: this.isRtl ? "chevron-right" : "chevron-left", svgIcon: this.isRtl ? chevronRightIcon : chevronLeftIcon, fillMode: "flat", title: prevViewTitle, disabled: isPrevDisabled, onClick: this.handlePrevButtonClick }, prevBtnAria)),
          React91.createElement(TodayCommand, { min: this.min, max: this.max, onClick: this.handleTodayClick, disabled: !this.todayIsInRange }),
          React91.createElement(Button, __assign48({ type: "button", className: "k-calendar-nav-next", icon: this.isRtl ? "chevron-left" : "chevron-right", svgIcon: this.isRtl ? chevronLeftIcon : chevronRightIcon, fillMode: "flat", title: nextViewTittle, disabled: isNextDisabled, onClick: this.handleNextButtonClick }, nextBtnAria))
        ) }),
        React91.createElement(HorizontalViewList, { ref: function(el) {
          _this3.calendarViewList = el;
        }, dates: this.dates, activeView, focusedDate: this.focusedDate, min: this.min, max: this.max, bus: this.bus, service: this.service, selectionRange: visualizedRange, value: this.selectedMultiple || this.selectedDate, cellUID: this.cellUID, views: this.props.views, onChange: this.handleDateChange, showWeekNumbers: this.props.weekNumber, onCellEnter: this.handleCellEnter, cell: this.props.cell, weekCell: this.props.weekCell, headerTitle: this.props.headerTitle, verticalView: this.props.mobileMode })
      );
    };
    MultiViewCalendarWithoutContext2.displayName = "MultiViewCalendar";
    MultiViewCalendarWithoutContext2.propTypes = {
      activeRangeEnd: PropTypes52.oneOf(["start", "end"]),
      allowReverse: PropTypes52.bool,
      bottomView: PropTypes52.oneOf(["month", "year", "decade", "century"]),
      className: PropTypes52.string,
      defaultActiveView: PropTypes52.oneOf(["month", "year", "decade", "century"]),
      defaultValue: PropTypes52.oneOfType([
        nullable(PropTypes52.instanceOf(Date)),
        PropTypes52.arrayOf(PropTypes52.instanceOf(Date)),
        PropTypes52.shape({
          start: nullable(PropTypes52.instanceOf(Date)),
          end: nullable(PropTypes52.instanceOf(Date))
        })
      ]),
      disabled: PropTypes52.bool,
      focusedDate: PropTypes52.instanceOf(Date),
      id: PropTypes52.string,
      ariaLabelledBy: PropTypes52.string,
      ariaDescribedBy: PropTypes52.string,
      max: PropTypes52.instanceOf(Date),
      min: PropTypes52.instanceOf(Date),
      mode: PropTypes52.oneOf(["single", "multiple", "range"]),
      onBlur: PropTypes52.func,
      onChange: PropTypes52.func,
      onFocus: PropTypes52.func,
      tabIndex: PropTypes52.number,
      topView: PropTypes52.oneOf(["month", "year", "decade", "century"]),
      value: PropTypes52.oneOfType([
        nullable(PropTypes52.instanceOf(Date)),
        PropTypes52.arrayOf(PropTypes52.instanceOf(Date)),
        PropTypes52.shape({
          start: nullable(PropTypes52.instanceOf(Date).isRequired),
          end: nullable(PropTypes52.instanceOf(Date).isRequired)
        })
      ]),
      views: function(props, propName, componentName) {
        var views = props[propName];
        if (views !== void 0 && views < 1) {
          return new Error("Invalid prop '".concat(propName, "' supplied to") + "'".concat(componentName, "'. The '").concat(propName, "' property cannot be less than 1'"));
        }
        return null;
      },
      weekNumber: PropTypes52.bool,
      dir: PropTypes52.string
    };
    MultiViewCalendarWithoutContext2.defaultProps = {
      disabled: false,
      min: MIN_DATE2,
      max: MAX_DATE2,
      navigation: true,
      defaultActiveView: "month",
      defaultValue: null,
      topView: "century",
      tabIndex: 0,
      bottomView: "month",
      views: 2,
      allowReverse: false
    };
    return MultiViewCalendarWithoutContext2;
  }(React91.Component)
);
var MultiViewCalendarPropsContext = createPropsContext();
var MultiViewCalendar = withPropsContext(MultiViewCalendarPropsContext, MultiViewCalendarWithoutContext);
MultiViewCalendar.displayName = "KendoReactMultiViewCalendar";
registerForIntl(MultiViewCalendarWithoutContext);
registerForLocalization(MultiViewCalendarWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/daterangepicker/DateRangePicker.js
var React92 = __toESM(require_react());
var PropTypes53 = __toESM(require_prop_types());
var __extends41 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign49 = function() {
  __assign49 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign49.apply(this, arguments);
};
var DateRangePickerWithoutContext = (
  /** @class */
  function(_super) {
    __extends41(DateRangePickerWithoutContext2, _super);
    function DateRangePickerWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.i = null;
      _this3.U = null;
      _this3.Ic = React92.createRef();
      _this3.Jc = React92.createRef();
      _this3.ka = guid();
      _this3.Kc = guid();
      _this3.Lc = guid();
      _this3.shouldFocusDateInput = false;
      _this3.shouldFocusCalendar = false;
      _this3.focus = function() {
        if (_this3.startDateInput) {
          _this3.startDateInput.focus();
        }
      };
      _this3.setCalendarRef = function(calendar) {
        _this3.U = calendar;
      };
      _this3.focusCalendarElement = function() {
        if (_this3.U && _this3.U.element) {
          _this3.U.element.focus({ preventScroll: true });
        }
      };
      _this3.calculateValue = function(props2, state) {
        var value2 = props2.value !== void 0 ? props2.value : state.value;
        return value2 || EMPTY_SELECTIONRANGE;
      };
      _this3.calculateShow = function(nextProps, nextState) {
        return nextProps.show !== void 0 ? nextProps.show : nextState.show;
      };
      _this3.renderCalendar = function() {
        var value2 = _this3.value || EMPTY_SELECTIONRANGE;
        var calendarProps = __assign49(__assign49({ min: _this3.min, max: _this3.max, allowReverse: _this3.props.allowReverse, mode: "range", focusedDate: _this3.props.focusedDate, disabled: _this3.props.disabled, className: _this3.mobileMode ? "k-calendar-lg" : "", mobileMode: _this3.mobileMode }, _this3.props.calendarSettings), { value: value2, dir: _this3.props.dir, onChange: _this3.handleCalendarChange });
        return _this3.props.calendar ? React92.createElement(_this3.props.calendar, __assign49({}, calendarProps)) : React92.createElement(MultiViewCalendar, __assign49({}, calendarProps, { ref: _this3.setCalendarRef }));
      };
      _this3.renderPopup = function() {
        var popupProps = __assign49(__assign49({ popupClass: "k-daterangepicker-popup", animate: _this3.i !== null, anchor: _this3.i, id: _this3.ka, anchorAlign: {
          horizontal: "left",
          vertical: "bottom"
        }, popupAlign: {
          horizontal: "left",
          vertical: "top"
        } }, _this3.props.popupSettings), { show: _this3.show });
        return _this3.props.popup ? React92.createElement(_this3.props.popup, __assign49({}, popupProps), _this3.renderCalendar()) : React92.createElement(Popup, __assign49({}, popupProps), _this3.renderCalendar());
      };
      _this3.renderAdaptivePopup = function() {
        var _a14 = _this3.state.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14;
        var actionSheetProps = {
          expand: _this3.show,
          onClose: function(event2) {
            return _this3.handleCancel(event2);
          },
          adaptiveTitle: _this3.props.adaptiveTitle,
          windowWidth,
          footer: {
            cancelText: _this3.localizationService.toLanguageString(dateRangePickerCancel, messages3[dateRangePickerCancel]),
            onCancel: _this3.handleCancel,
            applyText: _this3.localizationService.toLanguageString(dateRangePickerSet, messages3[dateRangePickerSet]),
            onApply: _this3.handleBlur
          }
        };
        return React92.createElement(
          AdaptiveMode,
          __assign49({}, actionSheetProps),
          React92.createElement(
            ActionSheetContent,
            { className: "!k-overflow-hidden" },
            React92.createElement("div", { className: "k-scrollable-wrap" }, _this3.renderCalendar())
          )
        );
      };
      _this3.handleReverseClick = function(event2) {
        var value2 = {
          start: _this3.value.end,
          end: _this3.value.start
        };
        var args = {
          syntheticEvent: event2,
          nativeEvent: event2.nativeEvent
        };
        _this3.handleChange(value2, args);
      };
      _this3.handleReverseMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleFocus = function(event2) {
        clearTimeout(_this3.nextTickId);
        if (!_this3.shouldFocusDateInput) {
          _this3.setShow(true);
          if (_this3.mobileMode) {
            _this3.setState({ currentValue: _this3.value });
          }
        }
        var onFocus = _this3.props.onFocus;
        if (onFocus) {
          onFocus.call(void 0, event2);
        }
      };
      _this3.handleBlur = function(event2) {
        _this3.nextTick(function() {
          _this3.setShow(false);
        });
        var onBlur = _this3.props.onBlur;
        if (onBlur) {
          onBlur.call(void 0, event2);
        }
      };
      _this3.handleCancel = function(event2) {
        _this3.nextTick(function() {
          _this3.setShow(false);
          _this3.setState({ currentValue: EMPTY_SELECTIONRANGE });
        });
        var onCancel = _this3.props.onCancel;
        if (onCancel) {
          onCancel.call(void 0, event2);
        }
      };
      _this3.handleEndChange = function(event2) {
        var value2 = {
          start: _this3.value.start,
          end: cloneDate(event2.value || void 0)
        };
        _this3.handleChange(value2, event2);
      };
      _this3.handleStartChange = function(event2) {
        var value2 = {
          start: cloneDate(event2.value || void 0),
          end: _this3.value.end
        };
        _this3.handleChange(value2, event2);
      };
      _this3.extractRangeFromValue = function(event2) {
        if (!Array.isArray(event2.value) && !(event2.value instanceof Date)) {
          return event2.value || EMPTY_SELECTIONRANGE;
        }
        var candidate = Array.isArray(event2.value) ? event2.value[0] : event2.value;
        return {
          start: _this3.value.end !== null ? candidate : _this3.value.start,
          end: _this3.value.start !== null ? candidate : _this3.value.end
        };
      };
      _this3.handleCalendarChange = function(event2) {
        var value2 = _this3.extractRangeFromValue(event2);
        _this3.handleChange(value2, event2);
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode, altKey = event2.altKey;
        var activeElement = getActiveElement(document);
        if (keyCode === Keys.esc) {
          event2.preventDefault();
          _this3.shouldFocusDateInput = true;
          _this3.setShow(false);
        } else if (altKey && keyCode === Keys.down) {
          event2.preventDefault();
          _this3.shouldFocusCalendar = true;
          _this3.setShow(true);
        } else if (keyCode === Keys.tab && _this3.show && _this3.U && _this3.U.element && _this3.endDateInput && _this3.endDateInput.element && document && activeElement === _this3.endDateInput.element) {
          event2.preventDefault();
          _this3.focusCalendarElement();
        }
      };
      _this3.handleChange = function(value2, event2) {
        _this3.setState({ value: value2 });
        _this3.valueDuringOnChange = value2;
        var onChange = _this3.props.onChange;
        if (onChange) {
          var args = {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: _this3.value,
            show: _this3.show,
            target: _this3
          };
          onChange.call(void 0, args);
        }
        _this3.valueDuringOnChange = void 0;
      };
      validatePackage2(packageMetadata4);
      _this3.state = {
        show: _this3.props.show || _this3.props.defaultShow || DateRangePickerWithoutContext2.defaultProps.defaultShow,
        value: _this3.props.value || _this3.props.defaultValue || DateRangePickerWithoutContext2.defaultProps.defaultValue,
        currentValue: EMPTY_SELECTIONRANGE
      };
      _this3.nextTick = _this3.nextTick.bind(_this3);
      _this3.setShow = _this3.setShow.bind(_this3);
      _this3.focusCalendarElement = _this3.focusCalendarElement.bind(_this3);
      _this3.focusDateInputElement = _this3.focusDateInputElement.bind(_this3);
      return _this3;
    }
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the DateRangePicker.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "startDateInput", {
      /**
       * Gets the start DateInput component inside the DatePicker component.
       */
      get: function() {
        return this.Ic.current;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "endDateInput", {
      /**
       * Gets the end DateInput component inside the DatePicker component.
       */
      get: function() {
        return this.Jc.current;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "calendar", {
      /**
       * Gets the MultiVieCalendar inside the DateRangePicker.
       */
      get: function() {
        return this.U;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the DateRangePicker.
       */
      get: function() {
        var value2 = this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
        return value2 || EMPTY_SELECTIONRANGE;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "show", {
      /**
       * Gets the popup state of the DateRangePicker.
       */
      get: function() {
        return this.showDuringOnChange !== void 0 ? this.showDuringOnChange : this.props.show !== void 0 ? this.props.show : this.state.show;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : DateRangePickerWithoutContext2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : DateRangePickerWithoutContext2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "localizationService", {
      get: function() {
        var localization = provideLocalizationService(this);
        return localization;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateRangePickerWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the DateRangePicker.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    DateRangePickerWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      if (this.show) {
        this.forceUpdate();
      }
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    DateRangePickerWithoutContext2.prototype.componentDidUpdate = function() {
      if (this.shouldFocusCalendar) {
        this.focusCalendarElement();
      }
      if (this.shouldFocusDateInput) {
        this.focusDateInputElement();
      }
      this.shouldFocusCalendar = false;
      this.shouldFocusDateInput = false;
    };
    DateRangePickerWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      clearTimeout(this.nextTickId);
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    DateRangePickerWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var value2 = this.value || EMPTY_SELECTIONRANGE;
      var valueToShow = this.mobileMode && this.show ? this.state.currentValue : value2;
      var startDateInputId = (this.props.startDateInputSettings || {}).id || this.Kc;
      var endDateInputId = (this.props.endDateInputSettings || {}).id || this.Lc;
      var rootClassName = classNames("k-daterangepicker", {
        "k-disabled": this.props.disabled
      }, this.props.className);
      var startMessage = this.localizationService.toLanguageString(start, messages3[start]);
      var endMessage = this.localizationService.toLanguageString(end, messages3[end]);
      var separatorMessage = this.localizationService.toLanguageString(separator, messages3[separator]);
      var startDateInputProps = __assign49(__assign49({ disableSelection: this.mobileMode && true, label: startMessage, format: this.props.format, min: this.min, max: this.max, id: this.Kc, disabled: this.props.disabled, valid: this.props.valid, tabIndex: this.props.tabIndex, ariaExpanded: this.show }, this.props.startDateInputSettings), { value: valueToShow.start, onChange: this.handleStartChange });
      var endDateInputProps = __assign49(__assign49({ disableSelection: this.mobileMode && true, label: endMessage, format: this.props.format, min: this.min, max: this.max, id: this.Lc, disabled: this.props.disabled, valid: this.props.valid, tabIndex: this.props.tabIndex, ariaExpanded: this.show }, this.props.endDateInputSettings), { value: valueToShow.end, onChange: this.handleEndChange });
      var reverseButton = React92.createElement(
        Button,
        __assign49({ className: "k-select", fillMode: "flat", title: provideLocalizationService(this).toLanguageString(swapStartEnd, messages3[swapStartEnd]), onMouseDown: this.handleReverseMouseDown, onClick: this.handleReverseClick }, {
          "aria-controls": startDateInputId + " " + endDateInputId,
          "aria-label": provideLocalizationService(this).toLanguageString(swapStartEnd, messages3[swapStartEnd])
        }),
        React92.createElement(IconWrap, { style: { transform: "rotate(90deg)" }, name: "arrows-swap", icon: arrowsSwapIcon })
      );
      return React92.createElement(
        React92.Fragment,
        null,
        React92.createElement(
          "span",
          { ref: function(span) {
            _this3.i = span;
          }, className: rootClassName, style: this.props.style, id: this.props.id, "aria-labelledby": this.props.ariaLabelledBy, "aria-describedby": this.props.ariaDescribedBy, tabIndex: this.props.tabIndex, onFocus: this.handleFocus, onBlur: !this.mobileMode ? this.handleBlur : void 0, onKeyDown: this.handleKeyDown, dir: this.props.dir },
          this.props.startDateInput ? React92.createElement(this.props.startDateInput, __assign49({}, startDateInputProps)) : React92.createElement(DateInput, __assign49({}, startDateInputProps, { ref: this.Ic, ariaRole: "combobox", ariaControls: this.ka, readonly: this.mobileMode })),
          (this.props.allowReverse || this.props.calendarSettings && this.props.calendarSettings.allowReverse) && this.props.swapButton ? reverseButton : separatorMessage,
          this.props.endDateInput ? React92.createElement(this.props.endDateInput, __assign49({}, endDateInputProps)) : React92.createElement(DateInput, __assign49({}, endDateInputProps, { ref: this.Jc, ariaRole: "combobox", ariaControls: this.ka, readonly: this.mobileMode })),
          !this.mobileMode && this.renderPopup()
        ),
        this.mobileMode && this.renderAdaptivePopup()
      );
    };
    DateRangePickerWithoutContext2.prototype.focusDateInputElement = function() {
      if (!document || !this.startDateInput || !this.startDateInput.element || !this.endDateInput || !this.endDateInput.element) {
        return;
      }
      var activeElement = getActiveElement(document);
      if ((this.value.start === null || this.value.end !== null) && activeElement !== this.endDateInput.element) {
        this.startDateInput.element.focus({ preventScroll: true });
      } else if (activeElement !== this.startDateInput.element) {
        this.endDateInput.element.focus({ preventScroll: true });
      }
    };
    DateRangePickerWithoutContext2.prototype.nextTick = function(f) {
      clearTimeout(this.nextTickId);
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    DateRangePickerWithoutContext2.prototype.setShow = function(show) {
      if (this.show === show) {
        return;
      }
      this.setState({ show });
    };
    DateRangePickerWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    DateRangePickerWithoutContext2.displayName = "DateRangePicker";
    DateRangePickerWithoutContext2.propTypes = {
      allowReverse: PropTypes53.bool,
      calendarSettings: PropTypes53.any,
      className: PropTypes53.string,
      defaultShow: PropTypes53.bool,
      defaultValue: PropTypes53.shape({
        start: nullable(PropTypes53.instanceOf(Date).isRequired),
        end: nullable(PropTypes53.instanceOf(Date).isRequired)
      }),
      disabled: PropTypes53.bool,
      endDateInputSettings: PropTypes53.shape(DateInputWithoutContext.propTypes),
      focusedDate: PropTypes53.instanceOf(Date),
      format: PropTypes53.oneOfType([
        PropTypes53.string,
        PropTypes53.shape({
          skeleton: PropTypes53.string,
          pattern: PropTypes53.string,
          date: PropTypes53.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes53.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes53.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes53.oneOf(["narrow", "short", "long"]),
          year: PropTypes53.oneOf(["numeric", "2-digit"]),
          month: PropTypes53.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes53.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes53.oneOf(["narrow", "short", "long"]),
          hour: PropTypes53.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes53.bool,
          minute: PropTypes53.oneOf(["numeric", "2-digit"]),
          second: PropTypes53.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes53.oneOf(["short", "long"])
        })
      ]),
      id: PropTypes53.string,
      ariaLabelledBy: PropTypes53.string,
      ariaDescribedBy: PropTypes53.string,
      max: PropTypes53.instanceOf(Date),
      min: PropTypes53.instanceOf(Date),
      onBlur: PropTypes53.func,
      onChange: PropTypes53.func,
      onFocus: PropTypes53.func,
      popupSettings: PropTypes53.any,
      show: PropTypes53.bool,
      startDateInputSettings: PropTypes53.any,
      style: PropTypes53.any,
      swapButton: PropTypes53.any,
      tabIndex: PropTypes53.number,
      dir: PropTypes53.string,
      value: PropTypes53.shape({
        start: nullable(PropTypes53.instanceOf(Date).isRequired),
        end: nullable(PropTypes53.instanceOf(Date).isRequired)
      })
    };
    DateRangePickerWithoutContext2.defaultProps = {
      allowReverse: false,
      defaultShow: false,
      defaultValue: EMPTY_SELECTIONRANGE,
      disabled: false,
      format: "d",
      max: MAX_DATE2,
      min: MIN_DATE2,
      swapButton: false
    };
    return DateRangePickerWithoutContext2;
  }(React92.Component)
);
var DateRangePickerPropsContext = createPropsContext();
var DateRangePicker = withPropsContext(DateRangePickerPropsContext, DateRangePickerWithoutContext);
DateRangePicker.displayName = "KendoReactDateRangePicker";
registerForLocalization(DateRangePickerWithoutContext);

// node_modules/@progress/kendo-react-dateinputs/dist/es/datetimepicker/DateTimeSelector.js
var React93 = __toESM(require_react());
var __extends42 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign50 = function() {
  __assign50 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign50.apply(this, arguments);
};
var DateTimeSelector = (
  /** @class */
  function(_super) {
    __extends42(DateTimeSelector2, _super);
    function DateTimeSelector2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.U = null;
      _this3.wb = null;
      _this3.La = null;
      _this3.va = null;
      _this3.Yb = null;
      _this3.shouldFocusPart = false;
      _this3.focus = function(args) {
        Promise.resolve().then(function() {
          if (_this3.state.tab === "time" && _this3.wb) {
            _this3.wb.focus(args);
          }
          var calendarElement = _this3.calendarElement();
          if (_this3.state.tab === "date" && calendarElement) {
            calendarElement.focus(args);
          }
        });
      };
      _this3.calendarElement = function() {
        return _this3.U && _this3.U.element || _this3.Yb && _this3.Yb.querySelector(".k-widget.k-calendar");
      };
      _this3.move = function(direction) {
        if (direction === "right" && _this3.state.tab === "time") {
          return;
        }
        if (direction === "left" && _this3.state.tab === "date") {
          return;
        }
        var nextPart = direction === "left" ? "date" : "time";
        _this3.shouldFocusPart = true;
        _this3.setState({ tab: nextPart });
      };
      _this3.dateTimeFooter = function() {
        var cancelButton = _this3.props.cancelButton;
        var cancelMessage = _this3.localizationService.toLanguageString(dateTimePickerCancel, messages3[dateTimePickerCancel]);
        var setMessage = _this3.localizationService.toLanguageString(dateTimePickerSet, messages3[dateTimePickerSet]);
        return React93.createElement(
          "div",
          { className: "k-datetime-footer k-actions k-actions-stretched " },
          cancelButton && React93.createElement(Button, __assign50({ type: "button", ref: function(btn) {
            _this3.La = btn;
          }, className: "k-time-cancel", onClick: _this3.handleReject, title: cancelMessage }, { "aria-label": cancelMessage }), cancelMessage),
          React93.createElement(Button, __assign50({ type: "button", themeColor: "primary", ref: function(btn) {
            _this3.va = btn;
          }, className: "k-time-accept", disabled: !_this3.hasDateValue, onClick: _this3.handleAccept, title: setMessage }, { "aria-label": setMessage }), setMessage)
        );
      };
      _this3.handleReject = function(event2) {
        _this3.setState({ dateValue: _this3.props.value, timeValue: _this3.props.value || MIDNIGHT_DATE });
        var value2 = _this3.mergeDate(_this3.props.value, _this3.props.value || MIDNIGHT_DATE);
        if (_this3.props.onReject) {
          var args = {
            nativeEvent: event2.nativeEvent,
            syntheticEvent: event2,
            target: _this3,
            value: value2
          };
          _this3.props.onReject.call(void 0, args);
        }
      };
      _this3.handleAccept = function(event2, timeOverride) {
        if (!_this3.state.dateValue || !_this3.state.timeValue || !_this3.hasDateValue) {
          return;
        }
        var value2 = _this3.mergeDate(_this3.state.dateValue, timeOverride || _this3.state.timeValue);
        _this3.props.onChange.call(void 0, {
          syntheticEvent: event2,
          nativeEvent: event2.nativeEvent,
          value: value2,
          target: _this3
        });
      };
      _this3.handleNowClick = function(event2) {
        _this3.setState({ timeValue: getNow() });
        _this3.handleAccept(event2, getNow());
      };
      _this3.handleCalendarValueChange = function(event2) {
        event2.syntheticEvent.stopPropagation();
        _this3.setState({ dateValue: event2.value, tab: "time" });
        _this3.shouldFocusPart = true;
      };
      _this3.handleTimeListContainerChange = function(candidate) {
        _this3.setState({ timeValue: candidate });
      };
      _this3.handleDateClick = function(event2) {
        event2.stopPropagation();
        _this3.move("left");
      };
      _this3.handleTimeClick = function(event2) {
        event2.stopPropagation();
        _this3.move("right");
      };
      _this3.handleKeyDown = function(event2) {
        var keyCode = event2.keyCode, altKey = event2.altKey;
        switch (keyCode) {
          case Keys.enter:
            if (!_this3.hasActiveButton() && _this3.hasDateValue) {
              _this3.handleAccept(event2);
            }
            return;
          case Keys.left:
            if (!altKey) {
              return;
            }
            _this3.move("left");
            return;
          case Keys.right:
            if (!altKey) {
              return;
            }
            _this3.move("right");
            return;
          default:
            return;
        }
      };
      _this3.handleTimePartMount = function(value2) {
        _this3.setState({ timeValue: value2 });
      };
      _this3.state = {
        tab: "date",
        dateValue: _this3.props.value,
        timeValue: _this3.props.value || MIDNIGHT_DATE
      };
      return _this3;
    }
    Object.defineProperty(DateTimeSelector2.prototype, "calendar", {
      get: function() {
        return this.U;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimeSelector2.prototype, "timePart", {
      get: function() {
        return this.wb;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimeSelector2.prototype, "hasDateValue", {
      get: function() {
        return this.state.dateValue !== null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimeSelector2.prototype, "localizationService", {
      get: function() {
        return provideLocalizationService(this);
      },
      enumerable: false,
      configurable: true
    });
    DateTimeSelector2.prototype.componentDidUpdate = function() {
      if (this.shouldFocusPart) {
        this.focus({ preventScroll: true });
      }
      this.shouldFocusPart = false;
    };
    DateTimeSelector2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, disabled = _a14.disabled, min = _a14.min, max = _a14.max, weekNumber = _a14.weekNumber, focusedDate = _a14.focusedDate, format3 = _a14.format, mobileMode = _a14.mobileMode, footerActions = _a14.footerActions;
      var rootClassName = classNames({
        "k-date-tab": this.state.tab === "date",
        "k-time-tab": this.state.tab === "time",
        "k-disabled": disabled
      }, "k-datetime-wrap");
      var dateMessage = this.localizationService.toLanguageString(date, messages3[date]);
      var timeMessage = this.localizationService.toLanguageString(time, messages3[time]);
      var calendarProps = {
        min,
        max,
        weekNumber,
        focusedDate,
        disabled: disabled || this.state.tab !== "date",
        value: this.state.dateValue,
        onChange: this.handleCalendarValueChange,
        navigation: false,
        mobileMode
      };
      return React93.createElement(
        "div",
        { onKeyDown: this.handleKeyDown, className: rootClassName, tabIndex: -1 },
        React93.createElement(
          "div",
          { className: "k-datetime-buttongroup" },
          React93.createElement(
            ButtonGroup,
            { width: "100%" },
            React93.createElement(Button, { type: "button", selected: this.state.tab === "date", togglable: true, onClick: this.handleDateClick }, dateMessage),
            React93.createElement(Button, { type: "button", selected: this.state.tab === "time", togglable: true, onClick: this.handleTimeClick }, timeMessage)
          )
        ),
        React93.createElement(
          "div",
          { className: "k-datetime-selector" },
          React93.createElement("div", { className: "k-datetime-calendar-wrap", ref: function(e) {
            return _this3.Yb = e;
          } }, this.props.calendar ? React93.createElement(this.props.calendar, __assign50({}, calendarProps)) : React93.createElement(Calendar, __assign50({ ref: function(calendar) {
            _this3.U = calendar;
          } }, calendarProps))),
          React93.createElement(
            "div",
            { className: "k-datetime-time-wrap" },
            React93.createElement("div", { className: mobileMode ? "k-reset k-timeselector-lg k-timeselector" : "" }, React93.createElement(TimePart, { key: 1, onNowClick: this.handleNowClick, disabled: disabled || this.state.tab !== "time", ref: function(timePart) {
              _this3.wb = timePart;
            }, min: this.minTime || MIN_TIME, max: this.maxTime || MAX_TIME, steps: this.props.steps, value: this.state.timeValue, format: format3, onChange: this.handleTimeListContainerChange, onMount: this.handleTimePartMount, mobileMode }))
          )
        ),
        footerActions && this.dateTimeFooter()
      );
    };
    Object.defineProperty(DateTimeSelector2.prototype, "minTime", {
      get: function() {
        return this.props.minTime !== void 0 ? this.props.minTime : this.normalizeRange(this.props.min, this.state.dateValue);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimeSelector2.prototype, "maxTime", {
      get: function() {
        return this.props.maxTime !== void 0 ? this.props.maxTime : this.normalizeRange(this.props.max, this.state.dateValue);
      },
      enumerable: false,
      configurable: true
    });
    DateTimeSelector2.prototype.normalizeRange = function(candidate, value2) {
      return isEqualDate(candidate, value2 || getToday2()) ? candidate : null;
    };
    DateTimeSelector2.prototype.hasActiveButton = function() {
      if (!this.va) {
        return false;
      }
      var activeElement = getActiveElement(document);
      return this.va && activeElement === this.va.element || this.La && activeElement === this.La.element;
    };
    DateTimeSelector2.prototype.mergeTime = function(current, candidate) {
      return current && candidate ? setTime2(candidate, current) : candidate;
    };
    DateTimeSelector2.prototype.mergeDate = function(candidate, value2) {
      return candidate ? setTime2(candidate || getToday2(), value2) : value2;
    };
    DateTimeSelector2.defaultProps = {
      footerActions: true
    };
    return DateTimeSelector2;
  }(React93.Component)
);
registerForLocalization(DateTimeSelector);

// node_modules/@progress/kendo-react-dateinputs/dist/es/datetimepicker/DateTimePicker.js
var React94 = __toESM(require_react());
var PropTypes54 = __toESM(require_prop_types());
var __extends43 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign51 = function() {
  __assign51 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign51.apply(this, arguments);
};
var DateTimePickerWithoutContext = (
  /** @class */
  function(_super) {
    __extends43(DateTimePickerWithoutContext2, _super);
    function DateTimePickerWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.ka = guid();
      _this3.i = null;
      _this3.ma = React94.createRef();
      _this3.ab = null;
      _this3.shouldFocusDateInput = false;
      _this3.prevShow = false;
      _this3.focus = function() {
        var dateInputElement = _this3.dateInputElement();
        if (dateInputElement) {
          dateInputElement.focus();
        }
      };
      _this3.renderPicker = function() {
        var _a14 = _this3.props, disabled = _a14.disabled, minTime = _a14.minTime, maxTime = _a14.maxTime, format3 = _a14.format, calendar = _a14.calendar, cancelButton = _a14.cancelButton, weekNumber = _a14.weekNumber, focusedDate = _a14.focusedDate;
        return React94.createElement(DateTimeSelector, { ref: function(dateTimeSelector) {
          _this3.ab = dateTimeSelector;
        }, cancelButton, steps: _this3.props.steps, value: _this3.value, onChange: _this3.handleValueChange, onReject: _this3.handleReject, disabled, weekNumber, min: _this3.min, max: _this3.max, minTime, maxTime, focusedDate, format: format3, calendar, mobileMode: _this3.mobileMode, footerActions: !_this3.mobileMode });
      };
      _this3.renderAdaptivePopup = function() {
        var _a14 = _this3.state.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14;
        var cancelText = provideLocalizationService(_this3).toLanguageString(dateTimePickerCancel, messages3[dateTimePickerCancel]);
        var applyText = provideLocalizationService(_this3).toLanguageString(dateTimePickerSet, messages3[dateTimePickerSet]);
        var actionSheetProps = {
          expand: _this3.show,
          onClose: _this3.handleBlur,
          adaptiveTitle: _this3.props.adaptiveTitle,
          windowWidth,
          footer: {
            cancelText,
            onCancel: function(event2) {
              var _a15;
              return (_a15 = _this3.ab) === null || _a15 === void 0 ? void 0 : _a15.handleReject(event2);
            },
            applyText,
            onApply: function(event2) {
              var _a15;
              return (_a15 = _this3.ab) === null || _a15 === void 0 ? void 0 : _a15.handleAccept(event2);
            }
          }
        };
        return React94.createElement(
          AdaptiveMode,
          __assign51({}, actionSheetProps),
          React94.createElement(ActionSheetContent, { className: "!k-overflow-hidden" }, _this3.renderPicker())
        );
      };
      _this3.handleReject = function() {
        _this3.shouldFocusDateInput = true;
        _this3.setShow(false);
      };
      _this3.handleValueChange = function(event2) {
        _this3.setState({
          value: cloneDate(event2.value || void 0),
          show: false
        });
        _this3.valueDuringOnChange = event2.value;
        _this3.showDuringOnChange = false;
        if (!_this3.mobileMode) {
          _this3.shouldFocusDateInput = true;
        }
        var onChange = _this3.props.onChange;
        if (onChange) {
          onChange.call(void 0, {
            syntheticEvent: event2.syntheticEvent,
            nativeEvent: event2.nativeEvent,
            value: _this3.value,
            show: _this3.show,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
        _this3.showDuringOnChange = void 0;
      };
      _this3.handleFocus = function() {
        _this3.setState({ focused: true });
      };
      _this3.handleBlur = function() {
        _this3.setState({ focused: false });
        _this3.setShow(false);
      };
      _this3.handleDateIconClick = function() {
        if (_this3.props.disabled) {
          return;
        }
        _this3.shouldFocusDateInput = true;
        _this3.setShow(!_this3.show);
      };
      _this3.handleIconMouseDown = function(event2) {
        event2.preventDefault();
      };
      _this3.handleKeyDown = function(event2) {
        var altKey = event2.altKey, keyCode = event2.keyCode;
        if (keyCode === Keys.esc) {
          _this3.shouldFocusDateInput = true;
          _this3.setShow(false);
          return;
        }
        if (altKey && (keyCode === Keys.up || keyCode === Keys.down)) {
          event2.preventDefault();
          event2.stopPropagation();
          _this3.shouldFocusDateInput = keyCode === Keys.up;
          _this3.setShow(keyCode === Keys.down);
        }
      };
      _this3.dateInputElement = function() {
        return _this3.dateInput && _this3.dateInput.element || _this3.element && _this3.element.querySelector(".k-dateinput > input.k-input-inner");
      };
      validatePackage2(packageMetadata4);
      _this3.state = {
        value: _this3.props.defaultValue || DateTimePickerWithoutContext2.defaultProps.defaultValue,
        show: _this3.props.defaultShow || DateTimePickerWithoutContext2.defaultProps.defaultShow,
        focused: false
      };
      return _this3;
    }
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "element", {
      /**
       * Gets the wrapping element of the DateTimePicker.
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "dateInput", {
      /**
       * Gets the DateInput component inside the DateTimePicker component.
       */
      get: function() {
        return this.ma.current;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the DateTimePicker.
       */
      get: function() {
        var value2 = this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
        return value2 !== null ? cloneDate(value2) : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "show", {
      /**
       * Gets the popup state of the DateTimePicker.
       */
      get: function() {
        return this.showDuringOnChange !== void 0 ? this.showDuringOnChange : this.props.show !== void 0 ? this.props.show : this.state.show;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the DateTimePicker.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the ComboBox.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "min", {
      get: function() {
        return this.props.min !== void 0 ? this.props.min : DateTimePickerWithoutContext2.defaultProps.min;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "max", {
      get: function() {
        return this.props.max !== void 0 ? this.props.max : DateTimePickerWithoutContext2.defaultProps.max;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the DateTimePicker is set.
       */
      get: function() {
        var inRange3 = isInDateRange(this.value, this.min, this.max) && isInTimeRange2(this.value, this.props.minTime || MIN_TIME, this.props.maxTime || MAX_TIME);
        var customError = this.props.validationMessage !== void 0;
        var isValid = (!this.required || this.value !== null) && inRange3;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          rangeOverflow: this.value && this.max.getTime() < this.value.getTime() || false,
          rangeUnderflow: this.value && this.value.getTime() < this.min.getTime() || false,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : DateTimePickerWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : DateTimePickerWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DateTimePickerWithoutContext2.prototype, "dateInputComp", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.dateInput || DateTimePickerWithoutContext2.defaultProps.dateInput;
      },
      enumerable: false,
      configurable: true
    });
    DateTimePickerWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      if (this.show) {
        this.forceUpdate();
      }
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    DateTimePickerWithoutContext2.prototype.componentDidUpdate = function() {
      var dateInputElement = this.dateInputElement();
      if (this.ab && this.show && !this.prevShow) {
        this.ab.focus({ preventScroll: true });
      }
      if (dateInputElement && !this.show && this.shouldFocusDateInput) {
        dateInputElement.focus({ preventScroll: true });
      }
      this.prevShow = this.show;
      this.shouldFocusDateInput = false;
    };
    DateTimePickerWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      clearTimeout(this.nextTickId);
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    DateTimePickerWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.size, size = _b3 === void 0 ? DateTimePickerWithoutContext2.defaultProps.size : _b3, _c2 = _a14.rounded, rounded = _c2 === void 0 ? DateTimePickerWithoutContext2.defaultProps.rounded : _c2, _d = _a14.fillMode, fillMode = _d === void 0 ? DateTimePickerWithoutContext2.defaultProps.fillMode : _d, disabled = _a14.disabled, tabIndex = _a14.tabIndex, title = _a14.title, id = _a14.id, format3 = _a14.format, formatPlaceholder = _a14.formatPlaceholder, min = _a14.min, max = _a14.max, className = _a14.className, width = _a14.width, name2 = _a14.name, validationMessage = _a14.validationMessage, required = _a14.required, validityStyles = _a14.validityStyles, minTime = _a14.minTime, maxTime = _a14.maxTime, ariaLabelledBy = _a14.ariaLabelledBy, ariaDescribedBy = _a14.ariaDescribedBy, _e = _a14.popup, PopupComponent = _e === void 0 ? Popup : _e;
      var isValid = !this.validityStyles || this.validity.valid;
      var dataInputProps = {
        id,
        ariaLabelledBy,
        ariaDescribedBy,
        format: format3,
        formatPlaceholder,
        disabled,
        title,
        validityStyles,
        validationMessage,
        required,
        min,
        max,
        minTime,
        maxTime,
        name: name2,
        tabIndex: !this.show ? tabIndex : -1,
        valid: this.validity.valid,
        value: this.value,
        onChange: this.handleValueChange,
        steps: this.props.steps,
        label: void 0,
        placeholder: !this.state.focused ? this.props.placeholder : null,
        ariaExpanded: this.show,
        size: null,
        fillMode: null,
        rounded: null
      };
      var dateTimePicker = React94.createElement(AsyncFocusBlur, { onFocus: this.handleFocus, onBlur: this.handleBlur, onSyncFocus: this.props.onFocus, onSyncBlur: this.props.onBlur }, function(_a15) {
        var _b4;
        var onFocus = _a15.onFocus, onBlur = _a15.onBlur;
        return React94.createElement(
          React94.Fragment,
          null,
          React94.createElement(
            "div",
            { ref: function(div) {
              _this3.i = div;
            }, className: classNames("k-input", "k-datetimepicker", (_b4 = {}, _b4["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _b4["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _b4["k-input-".concat(fillMode)] = fillMode, _b4["k-invalid"] = !isValid, _b4["k-required"] = _this3.required, _b4["k-disabled"] = _this3.props.disabled, _b4), className), onKeyDown: _this3.handleKeyDown, style: { width }, onFocus: !_this3.mobileMode ? onFocus : void 0, onBlur, onClick: _this3.mobileMode ? _this3.handleDateIconClick : void 0 },
            React94.createElement(_this3.dateInputComp, __assign51({ n: _this3.ma, ariaRole: "combobox", ariaControls: _this3.ka, readonly: _this3.mobileMode }, dataInputProps)),
            React94.createElement(Button, __assign51({ tabIndex: -1, type: "button", icon: "calendar", svgIcon: calendarIcon, onMouseDown: _this3.handleIconMouseDown, onClick: _this3.handleDateIconClick, title: provideLocalizationService(_this3).toLanguageString(toggleDateTimeSelector, messages3[toggleDateTimeSelector]), className: "k-input-button", rounded: null }, {
              "aria-label": provideLocalizationService(_this3).toLanguageString(toggleDateTimeSelector, messages3[toggleDateTimeSelector])
            })),
            React94.createElement(PopupComponent, { show: _this3.show, animate: _this3.element !== null, anchor: _this3.element, popupClass: "k-datetime-container k-reset", id: _this3.ka, anchorAlign: {
              horizontal: "left",
              vertical: "bottom"
            }, popupAlign: {
              horizontal: "left",
              vertical: "top"
            } }, !_this3.mobileMode && _this3.renderPicker())
          ),
          _this3.mobileMode && _this3.renderAdaptivePopup()
        );
      });
      return this.props.label ? React94.createElement(PickerFloatingLabel, { dateInput: this.ma, label: this.props.label, editorId: id, editorValid: isValid, editorDisabled: this.props.disabled, children: dateTimePicker, style: { width: this.props.width } }) : dateTimePicker;
    };
    DateTimePickerWithoutContext2.prototype.setShow = function(show) {
      if (this.show === show) {
        return;
      }
      this.setState({ show });
    };
    DateTimePickerWithoutContext2.prototype.nextTick = function(f) {
      clearTimeout(this.nextTickId);
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    DateTimePickerWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    DateTimePickerWithoutContext2.displayName = "DateTimePicker";
    DateTimePickerWithoutContext2.propTypes = {
      className: PropTypes54.string,
      defaultShow: PropTypes54.bool,
      defaultValue: PropTypes54.instanceOf(Date),
      disabled: PropTypes54.bool,
      focusedDate: PropTypes54.instanceOf(Date),
      format: PropTypes54.oneOfType([
        PropTypes54.string,
        PropTypes54.shape({
          skeleton: PropTypes54.string,
          pattern: PropTypes54.string,
          date: PropTypes54.oneOf(["short", "medium", "long", "full"]),
          time: PropTypes54.oneOf(["short", "medium", "long", "full"]),
          datetime: PropTypes54.oneOf(["short", "medium", "long", "full"]),
          era: PropTypes54.oneOf(["narrow", "short", "long"]),
          year: PropTypes54.oneOf(["numeric", "2-digit"]),
          month: PropTypes54.oneOf(["numeric", "2-digit", "narrow", "short", "long"]),
          day: PropTypes54.oneOf(["numeric", "2-digit"]),
          weekday: PropTypes54.oneOf(["narrow", "short", "long"]),
          hour: PropTypes54.oneOf(["numeric", "2-digit"]),
          hour12: PropTypes54.bool,
          minute: PropTypes54.oneOf(["numeric", "2-digit"]),
          second: PropTypes54.oneOf(["numeric", "2-digit"]),
          timeZoneName: PropTypes54.oneOf(["short", "long"])
        })
      ]),
      formatPlaceholder: PropTypes54.oneOfType([
        PropTypes54.oneOf(["wide", "narrow", "short", "formatPattern"]),
        PropTypes54.shape({
          year: PropTypes54.string,
          month: PropTypes54.string,
          day: PropTypes54.string,
          hour: PropTypes54.string,
          minute: PropTypes54.string,
          second: PropTypes54.string
        })
      ]),
      id: PropTypes54.string,
      ariaLabelledBy: PropTypes54.string,
      ariaDescribedBy: PropTypes54.string,
      min: PropTypes54.instanceOf(Date),
      max: PropTypes54.instanceOf(Date),
      name: PropTypes54.string,
      popupSettings: PropTypes54.shape({
        animate: PropTypes54.bool,
        appendTo: PropTypes54.any,
        popupClass: PropTypes54.string
      }),
      show: PropTypes54.bool,
      tabIndex: PropTypes54.number,
      title: PropTypes54.string,
      value: PropTypes54.instanceOf(Date),
      weekNumber: PropTypes54.bool,
      width: PropTypes54.oneOfType([PropTypes54.number, PropTypes54.string]),
      validationMessage: PropTypes54.string,
      required: PropTypes54.bool,
      validate: PropTypes54.bool,
      valid: PropTypes54.bool,
      cancelButton: PropTypes54.bool,
      size: PropTypes54.oneOf([null, "small", "medium", "large"]),
      rounded: PropTypes54.oneOf([null, "small", "medium", "large", "full"]),
      fillMode: PropTypes54.oneOf([null, "solid", "flat", "outline"])
    };
    DateTimePickerWithoutContext2.defaultProps = {
      defaultShow: false,
      defaultValue: null,
      disabled: false,
      format: "g",
      max: MAX_DATE2,
      min: MIN_DATE2,
      popupSettings: {},
      tabIndex: 0,
      weekNumber: false,
      required: false,
      validityStyles: true,
      cancelButton: true,
      dateInput: DateInput,
      size: "medium",
      rounded: "medium",
      fillMode: "solid"
    };
    return DateTimePickerWithoutContext2;
  }(React94.Component)
);
var DateTimePickerPropsContext = createPropsContext();
var DateTimePicker = withPropsContext(DateTimePickerPropsContext, DateTimePickerWithoutContext);
DateTimePicker.displayName = "KendoReactDateTimePicker";
registerForLocalization(DateTimePickerWithoutContext);

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/navigation/NavigationDatePicker.js
var React95 = __toESM(require_react());
var __assign52 = function() {
  __assign52 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign52.apply(this, arguments);
};
var NavigationDatePicker = React95.forwardRef(function(props, ref) {
  var _a14;
  var button = React95.useRef(null);
  var calendar = React95.useRef(null);
  React95.useImperativeHandle(ref, function() {
    return button.current;
  });
  var timezone = useSchedulerPropsContext().timezone;
  var normalized = ZonedDate.fromLocalDate(props.value, timezone);
  var value2 = getDate(normalized);
  var element6 = useSchedulerElementContext();
  var getWindow4 = useWindow(element6);
  var _b3 = React95.useState("desktop"), media = _b3[0], setMedia = _b3[1];
  var _c2 = React95.useState(false), show = _c2[0], setShow = _c2[1];
  var _d = React95.useState(false), focused = _d[0], setFocused = _d[1];
  var intl = useInternationalization();
  var _e = useSchedulerDateFormatContext(), dateFormat = _e.dateFormat, shortDateFormat = _e.shortDateFormat;
  var dateRange = useSchedulerDateRangeContext();
  var date2 = useSchedulerDateContext()[0];
  var isMonthView = dateRange.end.getTime() - dateRange.start.getTime() > MS_PER_DAY * 27;
  var text = intl.format(dateFormat, isMonthView ? date2 : dateRange.zonedStart, isMonthView ? date2 : dateRange.zonedEnd.addDays(-1));
  var shortText = intl.format(shortDateFormat, isMonthView ? date2 : dateRange.zonedStart, isMonthView ? date2 : dateRange.zonedEnd.addDays(-1));
  var handleClick = React95.useCallback(function() {
    setShow(!show);
  }, [show]);
  var handleFocus = React95.useCallback(function() {
    setFocused(true);
  }, []);
  var handleBlur = React95.useCallback(function() {
    setShow(false);
    setFocused(false);
  }, []);
  var handleChange = React95.useCallback(function(event2) {
    if (props.onChange) {
      var normalizedValue = ZonedDate.fromUTCDate(toUTCDateTime(event2.value), timezone);
      props.onChange.call(void 0, __assign52(__assign52({}, event2), { value: normalizedValue }));
    }
    setShow(false);
  }, [props.onChange, timezone]);
  var calculateMedia = React95.useCallback(function() {
    if (getWindow4().matchMedia) {
      setMedia(getWindow4().matchMedia("(min-width: 1024px)").matches ? "desktop" : "mobile");
    }
  }, [getWindow4]);
  React95.useEffect(function() {
    calculateMedia();
    var resizeObserver = getWindow4().ResizeObserver;
    var observer = resizeObserver && new resizeObserver(calculateMedia);
    if (observer) {
      observer.observe(element6.current);
    }
    return function() {
      if (resizeObserver) {
        observer.disconnect();
      }
    };
  }, [calculateMedia, element6, getWindow4]);
  React95.useEffect(function() {
    if (show && focused) {
      if (calendar.current) {
        calendar.current.focus();
      }
    }
  }, [focused, show]);
  var _f = useAsyncFocusBlur({ onFocus: handleFocus, onBlur: handleBlur }), onFocus = _f.onFocus, onBlur = _f.onBlur;
  return React95.createElement(
    React95.Fragment,
    null,
    React95.createElement(Button, { ref: button, onFocus, onBlur, fillMode: "flat", className: "k-nav-current", icon: "calendar", svgIcon: calendarIcon, "aria-live": "polite", tabIndex: -1, onClick: handleClick }, media === "desktop" ? text : shortText),
    React95.createElement(
      Popup,
      { anchor: (_a14 = button.current) === null || _a14 === void 0 ? void 0 : _a14.element, show },
      React95.createElement(Calendar, { ref: calendar, onFocus, onBlur, onChange: handleChange, value: value2 })
    )
  );
});
NavigationDatePicker.displayName = "KendoReactSchedulerNavigationDatePicker";

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerEditItemContext.js
var React96 = __toESM(require_react());
var SchedulerEditItemPropsContext = React96.createContext([null]);
var useSchedulerEditItemPropsContext = function() {
  return React96.useContext(SchedulerEditItemPropsContext);
};
SchedulerEditItemPropsContext.displayName = "SchedulerEditItemPropsContext";
var SchedulerEditItemFormItemContext = React96.createContext([null, noop, noop]);
var useSchedulerEditItemFormItemContext = function() {
  return React96.useContext(SchedulerEditItemFormItemContext);
};
SchedulerEditItemFormItemContext.displayName = "SchedulerEditItemFormItemContext";
var SchedulerEditItemDragItemContext = React96.createContext([null, noop, noop]);
var useSchedulerEditItemDragItemContext = function() {
  return React96.useContext(SchedulerEditItemDragItemContext);
};
SchedulerEditItemDragItemContext.displayName = "SchedulerEditItemDragItemContext";
var SchedulerEditItemResizeItemContext = React96.createContext([null, noop, noop]);
var useSchedulerEditItemResizeItemContext = function() {
  return React96.useContext(SchedulerEditItemResizeItemContext);
};
SchedulerEditItemResizeItemContext.displayName = "SchedulerEditItemResizeItemContext";
var SchedulerEditItemRemoveItemContext = React96.createContext([null, noop, noop]);
var useSchedulerEditItemRemoveItemContext = function() {
  return React96.useContext(SchedulerEditItemRemoveItemContext);
};
SchedulerEditItemRemoveItemContext.displayName = "SchedulerEditItemRemoveItemContext";
var SchedulerEditItemShowRemoveDialogContext = React96.createContext([false, noop, noop]);
var useSchedulerEditItemShowRemoveDialogContext = function() {
  return React96.useContext(SchedulerEditItemShowRemoveDialogContext);
};
SchedulerEditItemShowRemoveDialogContext.displayName = "SchedulerEditItemShowRemoveDialogContext";
var SchedulerEditItemShowOccurrenceDialogContext = React96.createContext([false, noop, noop]);
var useSchedulerEditItemShowOccurrenceDialogContext = function() {
  return React96.useContext(SchedulerEditItemShowOccurrenceDialogContext);
};
SchedulerEditItemShowOccurrenceDialogContext.displayName = "SchedulerEditItemShowOccurrenceDialogContext";
var SchedulerEditItemContext = function(_a14) {
  var props = _a14.props, form = _a14.form, drag = _a14.drag, resize = _a14.resize, remove = _a14.remove, showRemoveDialog = _a14.showRemoveDialog, showOccurrenceDialog = _a14.showOccurrenceDialog, children2 = _a14.children;
  return React96.createElement(
    SchedulerEditItemPropsContext.Provider,
    { value: props },
    React96.createElement(
      SchedulerEditItemFormItemContext.Provider,
      { value: form },
      React96.createElement(
        SchedulerEditItemDragItemContext.Provider,
        { value: drag },
        React96.createElement(
          SchedulerEditItemResizeItemContext.Provider,
          { value: resize },
          React96.createElement(
            SchedulerEditItemRemoveItemContext.Provider,
            { value: remove },
            React96.createElement(
              SchedulerEditItemShowRemoveDialogContext.Provider,
              { value: showRemoveDialog },
              React96.createElement(SchedulerEditItemShowOccurrenceDialogContext.Provider, { value: showOccurrenceDialog }, children2)
            )
          )
        )
      )
    )
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerEditSlotContext.js
var React97 = __toESM(require_react());
var SchedulerEditSlotPropsContext = React97.createContext([null]);
var useSchedulerEditSlotPropsContext = function() {
  return React97.useContext(SchedulerEditSlotPropsContext);
};
SchedulerEditSlotPropsContext.displayName = "SchedulerEditSlotPropsContext";
var SchedulerEditSlotFormItemContext = React97.createContext([null]);
var useSchedulerEditSlotFormItemContext = function() {
  return React97.useContext(SchedulerEditSlotFormItemContext);
};
SchedulerEditSlotFormItemContext.displayName = "SchedulerEditSlotFormItemContext";
var SchedulerEditSlotContext = function(_a14) {
  var props = _a14.props, form = _a14.form, children2 = _a14.children;
  return React97.createElement(
    SchedulerEditSlotPropsContext.Provider,
    { value: props },
    React97.createElement(SchedulerEditSlotFormItemContext.Provider, { value: form }, children2)
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerEditTaskContext.js
var React98 = __toESM(require_react());
var SchedulerEditTaskRemoveItemContext = React98.createContext([null]);
var useSchedulerEditTaskRemoveItemContext = function() {
  return React98.useContext(SchedulerEditTaskRemoveItemContext);
};
var SchedulerEditTaskShowRemoveDialogContext = React98.createContext([false]);
var useSchedulerEditTaskShowRemoveDialogContext = function() {
  return React98.useContext(SchedulerEditTaskShowRemoveDialogContext);
};
var SchedulerEditTaskShowOccurrenceDialogContext = React98.createContext([false]);
var useSchedulerEditTaskShowOccurrenceDialogContext = function() {
  return React98.useContext(SchedulerEditTaskShowOccurrenceDialogContext);
};
var SchedulerEditTaskContext = function(props) {
  return React98.createElement(
    SchedulerEditTaskRemoveItemContext.Provider,
    { value: props.remove },
    React98.createElement(
      SchedulerEditTaskShowRemoveDialogContext.Provider,
      { value: props.showRemoveDialog },
      React98.createElement(SchedulerEditTaskShowOccurrenceDialogContext.Provider, { value: props.showOccurrenceDialog }, props.children)
    )
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerViewContext.js
var React99 = __toESM(require_react());
var SchedulerViewPropsContext = React99.createContext({});
var useSchedulerViewPropsContext = function() {
  return React99.useContext(SchedulerViewPropsContext);
};
SchedulerViewPropsContext.displayName = "SchedulerViewPropsContext";
var SchedulerViewRangesContext = React99.createContext([]);
var useSchedulerViewRangesContext = function() {
  return React99.useContext(SchedulerViewRangesContext);
};
SchedulerViewRangesContext.displayName = "SchedulerViewRangesContext";
var SchedulerViewSlotsContext = React99.createContext([[], noop3]);
var useSchedulerViewSlotsContext = function() {
  return React99.useContext(SchedulerViewSlotsContext);
};
SchedulerViewSlotsContext.displayName = "SchedulerViewSlotsContext";
var SchedulerViewItemsContext = React99.createContext([[], noop3]);
var useSchedulerViewItemsContext = function() {
  return React99.useContext(SchedulerViewItemsContext);
};
SchedulerViewItemsContext.displayName = "SchedulerViewItemsContext";
var SchedulerViewSelectedSlotsContext = React99.createContext([[], noop3]);
var useSchedulerViewSelectedSlotsContext = function() {
  return React99.useContext(SchedulerViewSelectedSlotsContext);
};
SchedulerViewSelectedSlotsContext.displayName = "SchedulerViewSelectedSlotsContext";
var SchedulerViewSelectedItemsContext = React99.createContext([[], noop3]);
var useSchedulerViewSelectedItemsContext = function() {
  return React99.useContext(SchedulerViewSelectedItemsContext);
};
SchedulerViewSelectedItemsContext.displayName = "SchedulerViewSelectedItemsContext";
var SchedulerViewFocusedItemsContext = React99.createContext([[], noop3]);
var useSchedulerViewFocusedItemsContext = function() {
  return React99.useContext(SchedulerViewFocusedItemsContext);
};
SchedulerViewFocusedItemsContext.displayName = "SchedulerViewFocusedItemsContext";
var SchedulerViewFocusedSlotsContext = React99.createContext([[], noop3]);
var useSchedulerViewFocusedSlotsContext = function() {
  return React99.useContext(SchedulerViewFocusedSlotsContext);
};
SchedulerViewFocusedSlotsContext.displayName = "SchedulerViewFocusedSlotsContext";
var SchedulerViewContext = function(_a14) {
  var children2 = _a14.children, props = _a14.props, ranges = _a14.ranges, slots = _a14.slots, items = _a14.items, selectedSlots = _a14.selectedSlots, selectedItems = _a14.selectedItems, focusedItems = _a14.focusedItems, focusedSlots = _a14.focusedSlots;
  return React99.createElement(
    SchedulerViewPropsContext.Provider,
    { value: props },
    React99.createElement(
      SchedulerViewRangesContext.Provider,
      { value: ranges },
      React99.createElement(
        SchedulerViewSlotsContext.Provider,
        { value: slots },
        React99.createElement(
          SchedulerViewItemsContext.Provider,
          { value: items },
          React99.createElement(
            SchedulerViewSelectedSlotsContext.Provider,
            { value: selectedSlots },
            React99.createElement(
              SchedulerViewSelectedItemsContext.Provider,
              { value: selectedItems },
              React99.createElement(
                SchedulerViewFocusedItemsContext.Provider,
                { value: focusedItems },
                React99.createElement(SchedulerViewFocusedSlotsContext.Provider, { value: focusedSlots }, children2)
              )
            )
          )
        )
      )
    )
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/view-selector/ViewSelectorItem.js
var React100 = __toESM(require_react());
var ViewSelectorItem = function(props) {
  var _a14 = useSchedulerActiveViewContext(), activeViewName = _a14[0], setActiveViewName = _a14[1];
  var localization = useLocalization();
  var title = React100.useMemo(function() {
    return typeof props.view.title === "function" ? props.view.title.call(void 0, localization) : props.view.title;
  }, [props.view.title, localization]);
  var handleClick = React100.useCallback(function() {
    if (props.view.name) {
      setActiveViewName(props.view.name);
    }
  }, [setActiveViewName, props.view.name]);
  return React100.createElement(Button, { className: "k-toolbar-button", role: "button", type: "button", tabIndex: -1, togglable: true, selected: props.view.name === activeViewName, onClick: handleClick }, title);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/components/header/view-selector/ViewSelectorList.js
var React101 = __toESM(require_react());
var __assign53 = function() {
  __assign53 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign53.apply(this, arguments);
};
var ViewSelectorList = React101.forwardRef(function() {
  var element6 = React101.useRef(null);
  var _a14 = React101.useState("desktop"), media = _a14[0], setMedia = _a14[1];
  var views = useSchedulerViewsContext();
  var getWindow4 = useWindow(element6);
  var _b3 = useSchedulerActiveViewContext(), activeViewName = _b3[0], setActiveViewName = _b3[1];
  var activeView = views.find(function(v) {
    return v.props.name === activeViewName;
  });
  var localization = useLocalization();
  var handleItemClick = React101.useCallback(function(event2) {
    if (!setActiveViewName) {
      return;
    }
    event2.syntheticEvent.preventDefault();
    setActiveViewName(event2.item.name);
  }, [setActiveViewName]);
  var calculateMedia = function() {
    if (getWindow4().matchMedia) {
      setMedia(getWindow4().matchMedia("(min-width: 1024px)").matches ? "desktop" : "mobile");
    }
  };
  React101.useEffect(function() {
    calculateMedia();
    var resizeObserver = getWindow4().ResizeObserver;
    var observer = resizeObserver && new resizeObserver(calculateMedia);
    if (observer) {
      observer.observe(element6.current);
    }
    return function() {
      if (observer) {
        observer.disconnect();
      }
    };
  }, []);
  return React101.createElement(
    "div",
    { className: classNames("k-toolbar-button-group k-button-group k-button-group-solid", {
      "k-scheduler-views": media === "desktop",
      "k-scheduler-tools": media === "mobile"
    }), role: "group", ref: element6 },
    activeView && media === "mobile" && React101.createElement(DropDownButton, { className: "k-views-dropdown", onItemClick: handleItemClick, popupSettings: { popupClass: "k-scheduler-toolbar" }, textField: "title", items: views.map(function(v) {
      return __assign53(__assign53({}, v.props), { selected: v.props.name === activeViewName, title: typeof v.props.title === "function" ? v.props.title.call(void 0, localization) : v.props.title });
    }), text: React101.createElement(
      React101.Fragment,
      null,
      typeof activeView.props.title === "function" ? activeView.props.title.call(void 0, localization) : activeView.props.title,
      React101.createElement(IconWrap, { name: "caret-alt-down", icon: caretAltDownIcon })
    ) }),
    media === "desktop" && React101.createElement(React101.Fragment, null, views.map(function(view) {
      return React101.createElement(ViewSelectorItem, { key: view.props.name, view: view.props });
    }))
  );
});
ViewSelectorList.displayName = "KendoReactSchedulerViewSelectorList";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/footer/bussiness-hours/BussinessHours.js
var React102 = __toESM(require_react());
var __assign54 = function() {
  __assign54 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign54.apply(this, arguments);
};
var __rest26 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var BusinessHours = React102.forwardRef(function(props, ref) {
  var className = props.className, other = __rest26(props, ["className"]);
  var element6 = React102.useRef(null);
  React102.useImperativeHandle(ref, function() {
    return { element: element6.current, props };
  });
  return React102.createElement(ToolbarItem, __assign54({ ref: function(item) {
    if (item) {
      element6.current = item.element;
    }
  }, className: classNames("k-scheduler-navigation", className) }, other), props.children);
});

// node_modules/@progress/kendo-react-scheduler/dist/es/package-metadata.js
var packageMetadata8 = {
  name: "@progress/kendo-react-scheduler",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686226699,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-scheduler/dist/es/Scheduler.js
var React103 = __toESM(require_react());
var PropTypes55 = __toESM(require_prop_types());
var __assign55 = function() {
  __assign55 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign55.apply(this, arguments);
};
var __spreadArray10 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var DEFAULT_DATE_FORMAT = "{0:D}";
var DEFAULT_SHORT_DATE_FORMAT = "{0:d}";
var DATA_ACTION;
(function(DATA_ACTION2) {
  DATA_ACTION2[DATA_ACTION2["create"] = 0] = "create";
  DATA_ACTION2[DATA_ACTION2["update"] = 1] = "update";
  DATA_ACTION2[DATA_ACTION2["remove"] = 2] = "remove";
})(DATA_ACTION || (DATA_ACTION = {}));
var Scheduler = React103.forwardRef(function(props, ref) {
  validatePackage2(packageMetadata8);
  var timezone = props.timezone, onDataChange = props.onDataChange;
  var element6 = React103.useRef(null);
  var scheduler2 = React103.useRef(null);
  React103.useImperativeHandle(scheduler2, function() {
    return { props, element: element6.current };
  });
  React103.useImperativeHandle(ref, function() {
    return scheduler2.current;
  });
  var dir = useRtl(element6);
  var intl = useInternationalization();
  var localization = useLocalization();
  var fields = React103.useMemo(function() {
    return getModelFields(props.modelFields);
  }, [props.modelFields]).fields;
  var _a14 = useControlledState(props.defaultDate || defaultProps7.defaultDate, props.date, props.onDateChange), date2 = _a14[0], setDate = _a14[1];
  var views = React103.Children.toArray(props.children || []);
  var _b3 = useControlledState(props.defaultView || views[0] && views[0].props.name || "day", props.view, props.onViewChange), activeViewName = _b3[0], setActiveViewName = _b3[1];
  var _c2 = useControlledState(true), showWorkHours = _c2[0], setShowWorkHours = _c2[1];
  var view = views.find(function(currentView) {
    return currentView.props.name === activeViewName;
  }) || views[0] || React103.createElement(DayView, null);
  var data2 = props.data || defaultProps7.data;
  var groups = toSchedulerGroups(props.group, props.resources);
  var orientation = props.group && props.group.orientation ? props.group.orientation : "horizontal";
  var dateFormat = view.props.selectedDateFormat || DEFAULT_DATE_FORMAT;
  var shortDateFormat = view.props.selectedShortDateFormat || DEFAULT_SHORT_DATE_FORMAT;
  var slotDuration = view.props.slotDuration;
  var dateRange = view.props.dateRange !== void 0 ? typeof view.props.dateRange === "function" ? view.props.dateRange.call(void 0, {
    intl,
    date: date2,
    timezone,
    numberOfDays: view.props.numberOfDays,
    workWeekStart: view.props.workWeekStart || intl.firstDay(),
    workWeekEnd: view.props.workWeekEnd || (intl.firstDay() + view.props.numberOfDays) % 6
  }) : view.props.dateRange : { start: defaultProps7.defaultDate, end: defaultProps7.defaultDate };
  var handleDataChange = React103.useCallback(function(_a15) {
    var _b4 = _a15.created, created = _b4 === void 0 ? [] : _b4, _c3 = _a15.updated, updated = _c3 === void 0 ? [] : _c3, _d2 = _a15.deleted, deleted = _d2 === void 0 ? [] : _d2;
    if (onDataChange) {
      var args = {
        created,
        updated,
        deleted
      };
      onDataChange.call(void 0, args);
    }
  }, [onDataChange]);
  var handleCreate = React103.useCallback(function(action) {
    var created = [action.dataItem];
    handleDataChange({ created });
  }, [handleDataChange]);
  var handleUpdate = React103.useCallback(function(action) {
    var created = [];
    var updated = [];
    if (action.series) {
      if (Array.isArray(action.dataItem)) {
        action.dataItem.map(function(dataItem) {
          var masterClone2 = clone(findMaster(action.dataItem, fields, data2));
          var newDataItem2 = clone(dataItem);
          setField(newDataItem2, fields.originalStart, getField(masterClone2, fields.originalStart));
          setField(newDataItem2, fields.recurrenceId, getField(masterClone2, fields.recurrenceId));
          setField(newDataItem2, fields.recurrenceExceptions, getField(masterClone2, fields.recurrenceExceptions));
          updated.push(newDataItem2);
        });
      } else {
        var masterClone = clone(findMaster(action.dataItem, fields, data2));
        var newDataItem = clone(action.dataItem);
        setField(newDataItem, fields.originalStart, getField(masterClone, fields.originalStart));
        setField(newDataItem, fields.recurrenceId, getField(masterClone, fields.recurrenceId));
        setField(newDataItem, fields.recurrenceExceptions, getField(masterClone, fields.recurrenceExceptions));
        updated.push(newDataItem);
      }
    } else {
      if (Array.isArray(action.dataItem)) {
        action.dataItem.map(function(dataItem) {
          var isException4 = getField(dataItem, fields.recurrenceRule) !== null && getField(dataItem, fields.recurrenceRule) !== void 0;
          var isRecurring3 = getField(dataItem, fields.recurrenceId) !== null && getField(dataItem, fields.recurrenceId) !== void 0;
          if (isRecurring3 && isException4) {
            var masterClone2 = clone(findMaster(dataItem, fields, data2));
            var exceptionDate2 = getField(dataItem, fields.originalStart);
            var currentExceptions2 = getField(masterClone2, fields.recurrenceExceptions) || [];
            setField(masterClone2, fields.recurrenceExceptions, __spreadArray10(__spreadArray10([], currentExceptions2, true), [exceptionDate2], false));
            setField(dataItem, fields.recurrenceRule, null);
            updated.push(masterClone2);
            created.push(dataItem);
          } else {
            updated.push(dataItem);
          }
        });
      } else {
        var isException3 = getField(action.dataItem, fields.recurrenceRule) !== null && getField(action.dataItem, fields.recurrenceRule) !== void 0;
        var isRecurring2 = getField(action.dataItem, fields.recurrenceId) !== null && getField(action.dataItem, fields.recurrenceId) !== void 0;
        if (isRecurring2 && isException3) {
          var masterClone = clone(findMaster(action.dataItem, fields, data2));
          var exceptionDate = getField(action.dataItem, fields.originalStart);
          var currentExceptions = getField(masterClone, fields.recurrenceExceptions) || [];
          setField(masterClone, fields.recurrenceExceptions, __spreadArray10(__spreadArray10([], currentExceptions, true), [exceptionDate], false));
          setField(action.dataItem, fields.recurrenceRule, null);
          updated.push(masterClone);
          created.push(action.dataItem);
        } else {
          updated.push(action.dataItem);
        }
      }
    }
    handleDataChange({ updated, created });
  }, [handleDataChange, fields, data2]);
  var handleRemove = React103.useCallback(function(action) {
    var updated = [];
    var deleted = [];
    if (action.series) {
      var masterClone = clone(findMaster(action.dataItem, fields, data2));
      var dataItem = clone(action.dataItem);
      setField(dataItem, fields.originalStart, getField(masterClone, fields.originalStart));
      setField(dataItem, fields.recurrenceId, getField(masterClone, fields.recurrenceId));
      setField(dataItem, fields.recurrenceRule, getField(masterClone, fields.recurrenceRule));
      setField(dataItem, fields.recurrenceExceptions, getField(masterClone, fields.recurrenceExceptions));
      deleted.push(dataItem);
    } else {
      var isException3 = getField(action.dataItem, fields.recurrenceRule) !== null && getField(action.dataItem, fields.recurrenceRule) !== void 0;
      if (!isException3) {
        deleted.push(action.dataItem);
      } else {
        var masterClone = clone(findMaster(action.dataItem, fields, data2));
        var exceptionDate = getField(action.dataItem, fields.originalStart);
        var currentExceptions = getField(masterClone, fields.recurrenceExceptions) || [];
        setField(masterClone, fields.recurrenceExceptions, __spreadArray10(__spreadArray10([], currentExceptions, true), [exceptionDate], false));
        setField(action.dataItem, fields.recurrenceRule, null);
        updated.push(masterClone);
      }
    }
    handleDataChange({ updated, deleted });
  }, [handleDataChange, fields, data2]);
  var handleDataAction = React103.useCallback(function(action) {
    switch (action.type) {
      case DATA_ACTION.create:
        handleCreate(action);
        break;
      case DATA_ACTION.update:
        handleUpdate(action);
        break;
      case DATA_ACTION.remove:
        handleRemove(action);
        break;
      default:
        break;
    }
  }, [handleCreate, handleRemove, handleUpdate]);
  var handleActiveViewNameChange = React103.useCallback(function(newView, event2) {
    setActiveViewName(newView, __assign55(__assign55({}, event2), { target: scheduler2.current }));
  }, [
    setActiveViewName,
    scheduler2
  ]);
  var handleDateChange = React103.useCallback(function(newDate, event2) {
    setDate(newDate, __assign55(__assign55({}, event2), { target: scheduler2.current }));
  }, [
    setDate,
    scheduler2
  ]);
  var handleDatePickerChange = React103.useCallback(function(event2) {
    if (!event2.value) {
      return;
    }
    setDate(event2.value, __assign55(__assign55({}, event2), { target: scheduler2.current, nativeEvent: event2.nativeEvent }));
  }, [
    setDate,
    scheduler2
  ]);
  var handleNextClick = React103.useCallback(function(syntheticEvent) {
    syntheticEvent.preventDefault();
    var offset4 = view.props.numberOfDays || 1;
    var isMonthView = offset4 > 27;
    var newDate = isMonthView ? addMonths(date2, Math.round(offset4 / 27)) : addDays(date2, offset4);
    setDate(newDate, event);
  }, [date2, setDate, view.props.numberOfDays]);
  var handlePrevClick = React103.useCallback(function(syntheticEvent) {
    syntheticEvent.preventDefault();
    var offset4 = view.props.numberOfDays || 1;
    var isMonthView = offset4 > 27;
    var newDate = isMonthView ? addMonths(date2, -Math.round(offset4 / 27)) : addDays(date2, -offset4);
    setDate(newDate, event);
  }, [date2, setDate, view.props.numberOfDays]);
  var handleTodayClick = React103.useCallback(function(syntheticEvent) {
    syntheticEvent.preventDefault();
    var newDate = getToday();
    setDate(newDate, event);
  }, [setDate]);
  var handleShowWorkHoursClick = React103.useCallback(function() {
    setShowWorkHours(!showWorkHours);
  }, [setShowWorkHours, showWorkHours]);
  var handleFocus = React103.useCallback(function() {
    if (element6.current) {
      element6.current.style.boxShadow = "0 0.5px 0.5px 0.5px rgba(0, 0, 0, .12)";
    }
  }, [element6]);
  var handleBlur = React103.useCallback(function() {
    if (element6.current) {
      element6.current.style.boxShadow = "";
    }
  }, [element6]);
  var style = React103.useMemo(function() {
    return __assign55(__assign55({}, props.style), { height: props.height });
  }, [props.height, props.style]);
  var className = React103.useMemo(function() {
    return classNames({ "k-rtl": props.rtl !== void 0 ? props.rtl : dir === "rtl" }, "k-widget k-scheduler k-floatwrap", props.className);
  }, [props.className, props.rtl, dir]);
  var todayText = localization.toLanguageString(today, messages2[today]);
  var previousText = localization.toLanguageString(previousTitle, messages2[previousTitle]);
  var nextText = localization.toLanguageString(nextTitle, messages2[nextTitle]);
  var Header2 = view.props.header || props.header || defaultProps7.header;
  var Footer = view.props.footer || props.footer || defaultProps7.footer;
  var Navigation4 = SchedulerNavigation;
  var _d = React103.useState(null), eventSelection = _d[0], setEventSelection = _d[1];
  return React103.createElement(
    SchedulerContext,
    {
      // Static
      element: element6,
      props,
      views,
      fields,
      groups,
      dateRange,
      orientation,
      dateFormat: { dateFormat, shortDateFormat },
      // State
      date: [date2, handleDateChange],
      activeView: [activeViewName, handleActiveViewNameChange],
      selection: [eventSelection, setEventSelection],
      // Reducers
      data: [data2, handleDataAction]
    },
    React103.createElement(
      "div",
      {
        ref: element6,
        id: props.id,
        style,
        className,
        tabIndex: props.tabIndex,
        // Aria
        dir,
        role: props.role,
        "aria-label": props.ariaLabel,
        "aria-labelledby": props.ariaLabelledby,
        "aria-activedescendant": eventSelection && eventSelection.props.id || void 0,
        // Handlers
        onFocus: handleFocus,
        onBlur: handleBlur
      },
      React103.createElement(
        Header2,
        null,
        React103.createElement(
          Navigation4,
          null,
          React103.createElement(
            ButtonGroup,
            { className: "k-scheduler-navigation" },
            React103.createElement(Button, { role: "button", tabIndex: -1, title: todayText, "aria-label": todayText, onClick: handleTodayClick }, todayText),
            React103.createElement(Button, { role: "button", tabIndex: -1, icon: dir === "rtl" ? "caret-alt-right" : "caret-alt-left", svgIcon: dir === "rtl" ? caretAltRightIcon : caretAltLeftIcon, title: previousText, "aria-label": previousText, onClick: handlePrevClick }),
            React103.createElement(Button, { role: "button", tabIndex: -1, icon: dir === "rtl" ? "caret-alt-left" : "caret-alt-right", svgIcon: dir === "rtl" ? caretAltLeftIcon : caretAltRightIcon, title: nextText, "aria-label": nextText, onClick: handleNextClick })
          )
        ),
        React103.createElement(NavigationDatePicker, { value: date2, onChange: handleDatePickerChange }),
        React103.createElement(ToolbarSpacer, null),
        React103.createElement(ViewSelectorList, null)
      ),
      view && React103.createElement(view.type, __assign55({ editable: props.editable, key: view.props.name, item: props.item, viewItem: props.viewItem, editItem: props.editItem, task: props.task, viewTask: props.viewTask, editTask: props.viewTask, slot: props.slot, viewSlot: props.viewSlot, editSlot: props.editSlot, form: props.form, onDataAction: handleDataAction, showWorkHours }, view.props)),
      React103.createElement(Footer, null, slotDuration && slotDuration < 24 * 60 && React103.createElement(
        BusinessHours,
        null,
        React103.createElement(Button, { tabIndex: -1, onClick: handleShowWorkHoursClick, icon: "clock", svgIcon: clockIcon }, localization.toLanguageString(showWorkHours ? showFullDay : showWorkDay, messages2[showWorkHours ? showFullDay : showWorkDay]))
      ))
    )
  );
});
var defaultProps7 = {
  data: [],
  height: 600,
  tabIndex: -1,
  editable: false,
  defaultDate: /* @__PURE__ */ new Date(),
  header: SchedulerHeader,
  footer: SchedulerFooter,
  navigation: SchedulerNavigation,
  viewSelector: SchedulerViewSelector
};
Scheduler.propTypes = {
  data: PropTypes55.array,
  editable: PropTypes55.oneOfType([
    PropTypes55.bool,
    PropTypes55.shape({
      add: PropTypes55.bool,
      drag: PropTypes55.bool,
      edit: PropTypes55.bool,
      remove: PropTypes55.bool,
      resize: PropTypes55.bool
    })
  ]),
  view: PropTypes55.string,
  defaultView: PropTypes55.string,
  date: PropTypes55.any,
  defaultDate: PropTypes55.any,
  rtl: PropTypes55.bool,
  height: PropTypes55.oneOfType([PropTypes55.number, PropTypes55.string]),
  children: PropTypes55.any,
  timezone: PropTypes55.string,
  group: PropTypes55.any,
  resources: PropTypes55.any,
  modelFields: PropTypes55.shape({
    id: PropTypes55.string,
    start: PropTypes55.string,
    startTimezone: PropTypes55.string,
    end: PropTypes55.string,
    endTimezone: PropTypes55.string,
    isAllDay: PropTypes55.string,
    title: PropTypes55.string,
    description: PropTypes55.string,
    recurrenceRule: PropTypes55.string,
    recurrenceId: PropTypes55.string,
    recurrenceException: PropTypes55.string
  })
};
Scheduler.defaultProps = defaultProps7;
Scheduler.displayName = "KendoReactScheduler";

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useCellSync.js
var React104 = __toESM(require_react());
var useCellSync = function(args, inputs) {
  var element6 = args.element;
  var syncWidth = function() {
    if (!element6 || !element6.current) {
      return;
    }
    var widest = [];
    var biggestPadding = [];
    var biggestBorder = [];
    var elements = element6.current.querySelectorAll(args.selector);
    elements.forEach(function(el) {
      var width = el.getBoundingClientRect().width;
      var level = args.explicitDepth && args.attribute !== void 0 ? el.getAttribute(args.attribute) : 0;
      var padding = getPadding(el, true);
      var border = getBorders(el, true);
      if (level === null) {
        return;
      }
      if (!biggestBorder[level] || border > biggestBorder[level]) {
        biggestBorder[level] = border;
      }
      if (!biggestPadding[level] || padding > biggestPadding[level]) {
        biggestPadding[level] = padding;
      }
      if (!widest[level] || width > widest[level]) {
        widest[level] = width;
      }
    });
    elements.forEach(function(el) {
      var level = args.explicitDepth ? el.getAttribute(args.attribute) : 0;
      if (level === null) {
        return;
      }
      el.style.minWidth = "".concat(widest[level] - biggestPadding[level] - biggestBorder[level], "px");
    });
  };
  React104.useLayoutEffect(syncWidth, inputs);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useRowSync.js
var React105 = __toESM(require_react());
var stripSelectorSymbol = function(str) {
  return str.slice(1, str.length);
};
var useRowSync = function(args, inputs) {
  var element6 = args.element;
  var syncHeight = function() {
    if (!element6 || !args.syncHeight) {
      return;
    }
    var highest = [[]];
    var elements = Array.from(element6.querySelectorAll(args.selector)).filter(function(el) {
      return !el.classList.contains(stripSelectorSymbol(args.applyTo));
    });
    elements.forEach(function(el) {
      var height = el.clientHeight;
      var x = el.getAttribute(args.horizontalAttribute);
      var y = el.getAttribute(args.verticalAttribute);
      if (x === null || y === null) {
        return;
      }
      if (!highest[x]) {
        highest[x] = [];
      }
      if (!highest[x][y] || height > highest[x][y]) {
        highest[x][y] = height - BORDER_WIDTH;
      }
    });
    var targets = Array.from(element6.querySelectorAll(args.applyTo));
    targets.forEach(function(el) {
      var x = el.getAttribute(args.horizontalAttribute);
      var y = el.getAttribute(args.verticalAttribute);
      if (x === null || y === null) {
        return;
      }
      var slotPadding = getPadding(el);
      var height = highest[x][y] - slotPadding;
      setRect(el, { height }, true);
    });
  };
  React105.useEffect(syncHeight, inputs);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useEditable.js
var React106 = __toESM(require_react());
var useEditable = function(editable) {
  var context2 = React106.useContext(SchedulerPropsContext);
  var settings = editable !== void 0 ? editable : context2.editable || false;
  var edit = settings === true || settings !== void 0 && settings !== false && settings.edit === true;
  var resize = settings === true || settings !== void 0 && settings !== false && settings.resize === true;
  var remove = settings === true || settings !== void 0 && settings !== false && settings.remove === true;
  var drag = settings === true || settings !== void 0 && settings !== false && settings.drag === true;
  var add = settings === true || settings !== void 0 && settings !== false && settings.add === true;
  var select = settings === true || settings !== void 0 && settings !== false && settings.select === true;
  return {
    add,
    edit,
    drag,
    remove,
    resize,
    select
  };
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useSlotExpand.js
var React107 = __toESM(require_react());
var useSlotExpand = function(slot, config) {
  var timeout2 = React107.useRef();
  var initialHeight = React107.useRef(0);
  var scheduler2 = useSchedulerElementContext();
  var getInitialHeight = function() {
    if (!slot.current) {
      return;
    }
    var element6 = slot.current.element;
    if (!element6) {
      return;
    }
    initialHeight.current = element6.clientHeight;
  };
  var expand2 = React107.useCallback(function() {
    if (!config || !slot.current) {
      return;
    }
    var element6 = slot.current.element;
    var props = slot.current.props;
    if (!element6) {
      return;
    }
    var slotPadding = getPadding(element6);
    var highest = 0;
    var existing = props.items.filter(function(i) {
      return i.n.current;
    });
    existing.forEach(function(item) {
      if (!item.n.current) {
        return;
      }
      var height = getRect(item.n.current.element).height;
      highest += height;
    });
    var minHeight = existing.length * BORDER_WIDTH * 2 + highest - (slotPadding || 0) + (typeof config === "object" && config.offsetTop ? config.offsetTop : 0) + (typeof config === "object" && config.offsetBottom ? config.offsetBottom : 0);
    if (existing.length) {
      if (minHeight > initialHeight.current - slotPadding) {
        setRect(element6, { height: minHeight }, true);
      }
    } else if (element6) {
      element6.style.minHeight = "";
    }
  }, [config, slot]);
  var handleResize = React107.useCallback(function() {
    if (timeout2.current !== void 0) {
      window.cancelAnimationFrame(timeout2.current);
    }
    timeout2.current = window.requestAnimationFrame(function() {
      expand2();
    });
  }, [expand2]);
  React107.useLayoutEffect(getInitialHeight, []);
  React107.useEffect(expand2, [slot, slot.current && slot.current.props, config]);
  React107.useEffect(function() {
    if (!slot.current) {
      return;
    }
    var props = slot.current.props;
    var existing = props.items.filter(function(i) {
      return i.n.current;
    });
    var callbacks = existing.map(function(item) {
      if (!item.n.current || !item.n.current.element) {
        return;
      }
      if (!scheduler2.current) {
        return;
      }
      var resizeObserver = window.ResizeObserver;
      var observer = resizeObserver && new resizeObserver(handleResize);
      if (observer) {
        observer.observe(item.n.current.element);
      }
      return function() {
        if (observer) {
          observer.disconnect();
        }
      };
    });
    return function() {
      callbacks.forEach(function(cb) {
        return cb && cb();
      });
    };
  }, [handleResize, scheduler2, slot]);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useSchedulerItem.js
var React108 = __toESM(require_react());
var useSchedulerItem = function(props, ref) {
  var _ref = props.n, itemRef = props.itemRef;
  var item = React108.useRef(null);
  var element6 = React108.useRef(null);
  var _a14 = useSchedulerViewItemsContext(), dispatchItems = _a14[1];
  React108.useImperativeHandle(item, function() {
    return { element: element6.current, props };
  });
  React108.useImperativeHandle(ref, function() {
    return item.current;
  });
  React108.useImperativeHandle(_ref, function() {
    return item.current;
  });
  React108.useImperativeHandle(itemRef, function() {
    return item.current;
  });
  React108.useLayoutEffect(function() {
    dispatchItems({
      type: COLLECTION_ACTION.add,
      item
    });
    return function() {
      dispatchItems({
        type: COLLECTION_ACTION.remove,
        item
      });
    };
  });
  return {
    item,
    element: element6
  };
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/use-items-focus.js
var ITEMS_FOCUS_ACTION;
(function(ITEMS_FOCUS_ACTION2) {
  ITEMS_FOCUS_ACTION2["next"] = "ITEMS_FOCUS_NEXT";
  ITEMS_FOCUS_ACTION2["prev"] = "ITEMS_FOCUS_PREV";
})(ITEMS_FOCUS_ACTION || (ITEMS_FOCUS_ACTION = {}));
var useItemsFocus = function(items) {
  var handleFocusedItemsAction = function(action, event2) {
    switch (action.type) {
      case ITEMS_FOCUS_ACTION.next: {
        if (!action.item || !action.item.current || !items) {
          return;
        }
        var next = findNextItem(action.item, items, action.ignoreIsAllDay, false);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      case ITEMS_FOCUS_ACTION.prev: {
        if (!action.item || !action.item.current || !items) {
          return;
        }
        var next = findNextItem(action.item, items, action.ignoreIsAllDay, true);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      default:
        break;
    }
  };
  return [[], handleFocusedItemsAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/use-slots-focus.js
var SLOTS_FOCUS_ACTION;
(function(SLOTS_FOCUS_ACTION2) {
  SLOTS_FOCUS_ACTION2["up"] = "SLOT_FOCUS_UP";
  SLOTS_FOCUS_ACTION2["down"] = "SLOT_FOCUS_DOWN";
  SLOTS_FOCUS_ACTION2["left"] = "SLOT_FOCUS_LEFT";
  SLOTS_FOCUS_ACTION2["right"] = "SLOT_FOCUS_RIGHT";
})(SLOTS_FOCUS_ACTION || (SLOTS_FOCUS_ACTION = {}));
var useSlotsFocus = function(slots) {
  var handleFocusedSlotsAction = function(action, event2) {
    switch (action.type) {
      case SLOTS_FOCUS_ACTION.up: {
        if (!action.slot.current || !slots) {
          return;
        }
        var next = findUpSlot(action.slot, slots);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      case SLOTS_FOCUS_ACTION.down: {
        if (!action.slot || !slots) {
          return;
        }
        var next = findDownSlot(action.slot, slots);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      case SLOTS_FOCUS_ACTION.left: {
        if (!action.slot || !slots) {
          return;
        }
        var next = findLeftSlot(action.slot, slots);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      case SLOTS_FOCUS_ACTION.right: {
        if (!action.slot || !slots) {
          return;
        }
        var next = findRightSlot(action.slot, slots);
        if (next && next.current && next.current.element) {
          event2.preventDefault();
          next.current.element.focus();
        }
        break;
      }
      default:
        break;
    }
  };
  return [[], handleFocusedSlotsAction];
};
var findUpSlot = function(target, all) {
  return all.find(function(slot) {
    return slot.current !== null && target.current !== null && slot.current.props.row === target.current.props.row - 1 && slot.current.props.col === target.current.props.col;
  });
};
var findLeftSlot = function(target, all) {
  return all.find(function(slot) {
    return slot.current !== null && target.current !== null && slot.current.props.row === target.current.props.row && slot.current.props.col === target.current.props.col - 1;
  });
};
var findRightSlot = function(target, all) {
  return all.find(function(slot) {
    return slot.current !== null && target.current !== null && slot.current.props.row === target.current.props.row && slot.current.props.col === target.current.props.col + 1;
  });
};
var findDownSlot = function(target, all) {
  return all.find(function(slot) {
    return slot.current !== null && target.current !== null && slot.current.props.row === target.current.props.row + 1 && slot.current.props.col === target.current.props.col;
  });
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/use-items-selection.js
var React109 = __toESM(require_react());
var __spreadArray11 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var ITEMS_SELECT_ACTION;
(function(ITEMS_SELECT_ACTION2) {
  ITEMS_SELECT_ACTION2["select"] = "ITEMS_SELECT_SELECT";
  ITEMS_SELECT_ACTION2["selectNext"] = "ITEMS_SELECT_SELECT_NEXT";
  ITEMS_SELECT_ACTION2["selectPrev"] = "ITEMS_SELECT_SELECT_PREV";
  ITEMS_SELECT_ACTION2["reset"] = "ITEMS_SELECT_RESET";
  ITEMS_SELECT_ACTION2["add"] = "ITEMS_SELECT_ADD";
  ITEMS_SELECT_ACTION2["remove"] = "ITEMS_SELECT_REMOVE";
})(ITEMS_SELECT_ACTION || (ITEMS_SELECT_ACTION = {}));
var useItemsSelection = function(items) {
  var _a14 = React109.useState([]), selectedItems = _a14[0], setSelectedItems = _a14[1];
  var handleSchedulerItemsSelectAction = React109.useCallback(function(action, event2) {
    switch (action.type) {
      case ITEMS_SELECT_ACTION.select:
        if (!action.item) {
          return;
        }
        setSelectedItems([action.item]);
        break;
      case ITEMS_SELECT_ACTION.selectNext: {
        if (!action.item || !action.item.current || !items) {
          return;
        }
        var next = findNextItem(action.item, items, action.ignoreIsAllDay, false);
        if (next) {
          event2.preventDefault();
          setSelectedItems([next]);
        }
        break;
      }
      case ITEMS_SELECT_ACTION.selectPrev: {
        if (!action.item || !action.item.current || !items) {
          return;
        }
        var next = findNextItem(action.item, items, action.ignoreIsAllDay, true);
        if (next) {
          event2.preventDefault();
          setSelectedItems([next]);
        }
        break;
      }
      case ITEMS_SELECT_ACTION.reset:
        setSelectedItems([]);
        break;
      case ITEMS_SELECT_ACTION.add:
        if (!action.item) {
          return;
        }
        if (!selectedItems.some(function(si) {
          return si === action.item;
        })) {
          setSelectedItems(__spreadArray11(__spreadArray11([], selectedItems, true), [action.item], false));
        }
        break;
      case ITEMS_SELECT_ACTION.remove:
        if (!action.item) {
          return;
        }
        setSelectedItems(__spreadArray11([], selectedItems.filter(function(si) {
          return si !== action.item;
        }), true));
        break;
      default:
        break;
    }
  }, [items, selectedItems]);
  return [selectedItems, handleSchedulerItemsSelectAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/use-slots-selection.js
var React110 = __toESM(require_react());
var __spreadArray12 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var SLOTS_SELECT_ACTION;
(function(SLOTS_SELECT_ACTION2) {
  SLOTS_SELECT_ACTION2["select"] = "SLOTS_SELECT_SELECT";
  SLOTS_SELECT_ACTION2["reset"] = "SLOTS_SELECT_RESET";
  SLOTS_SELECT_ACTION2["add"] = "SLOTS_SELECT_ADD";
})(SLOTS_SELECT_ACTION || (SLOTS_SELECT_ACTION = {}));
var useSlotsSelection = function(_slots) {
  var _a14 = React110.useState([]), selectedSlots = _a14[0], setSelectedSlots = _a14[1];
  var handleSchedulerSlotsSelectAction = React110.useCallback(function(action) {
    switch (action.type) {
      case SLOTS_SELECT_ACTION.select:
        if (!action.slot) {
          return;
        }
        setSelectedSlots([action.slot]);
        break;
      case SLOTS_SELECT_ACTION.reset:
        setSelectedSlots([]);
        break;
      case SLOTS_SELECT_ACTION.add:
        if (!action.slot) {
          return;
        }
        if (!selectedSlots.some(function(ss) {
          return ss === action.slot;
        })) {
          setSelectedSlots(__spreadArray12(__spreadArray12([], selectedSlots, true), [action.slot], false));
        }
        break;
      default:
        break;
    }
  }, [selectedSlots]);
  return [selectedSlots, handleSchedulerSlotsSelectAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/components/BaseView.js
var React111 = __toESM(require_react());
var BaseView = React111.forwardRef(function(props, ref) {
  var element6 = React111.useRef(null);
  React111.useImperativeHandle(ref, function() {
    return element6.current;
  });
  var _a14 = useCollection([]), items = _a14[0], dispatchItems = _a14[1];
  var _b3 = useCollection([]), slots = _b3[0], dispatchSlots = _b3[1];
  var _c2 = useItemsFocus(items), focusedItems = _c2[0], dispatchFocusedItems = _c2[1];
  var _d = useSlotsFocus(slots), focusedSlots = _d[0], dispatchFocusedSlots = _d[1];
  var _e = useItemsSelection(items), selectedItems = _e[0], dispatchSelectedItems = _e[1];
  var _f = useSlotsSelection(slots), selectedSlots = _f[0], dispatchSelectedSlots = _f[1];
  var handleSchedulerItemsSelectAction = React111.useCallback(function(action, event2) {
    dispatchSelectedSlots({ type: SLOTS_SELECT_ACTION.reset });
    dispatchSelectedItems(action, event2);
  }, [dispatchSelectedItems, dispatchSelectedSlots]);
  var handleSchedulerSlotsSelectAction = React111.useCallback(function(action, event2) {
    dispatchSelectedItems({ type: ITEMS_SELECT_ACTION.reset }, event2);
    dispatchSelectedSlots(action);
  }, [dispatchSelectedItems, dispatchSelectedSlots]);
  var className = React111.useMemo(function() {
    return classNames("k-scheduler-layout k-scheduler-layout-flex", props.className);
  }, [props.className]);
  useCellSync({ element: element6, selector: ".k-group-cell", attribute: "data-depth-index", explicitDepth: true });
  useCellSync({ element: element6, selector: ".k-side-cell", attribute: "data-depth-index", explicitDepth: false });
  return React111.createElement(
    SchedulerViewContext,
    { props: props.props, ranges: props.ranges, items: [items, dispatchItems], slots: [slots, dispatchSlots], selectedItems: [selectedItems, handleSchedulerItemsSelectAction], selectedSlots: [selectedSlots, handleSchedulerSlotsSelectAction], focusedItems: [focusedItems, dispatchFocusedItems], focusedSlots: [focusedSlots, dispatchFocusedSlots] },
    React111.createElement("div", { ref: element6, style: props.style, className, role: "presentation" }, props.children)
  );
});
BaseView.displayName = "KendoReactSchedulerBaseView";

// node_modules/@progress/kendo-react-scheduler/dist/es/context/SchedulerResourceIteratorContext.js
var React112 = __toESM(require_react());
var SchedulerResourceIteratorContext = React112.createContext({
  resource: {},
  groupIndex: 0
});
var useSchedulerResourceIteratorContext = function() {
  return React112.useContext(SchedulerResourceIteratorContext);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/common/VerticalResourceIterator.js
var React113 = __toESM(require_react());
var VerticalResourceIterator = function(props) {
  var nested = props.nested, wrapGroup = props.wrapGroup, children2 = props.children;
  var cellContent = props.cellContent || DefaultCellContent;
  var resources = toGroupResources(props.group, props.resources);
  var depth = 0;
  var groupIndex = 0;
  return React113.createElement("div", { className: "k-scheduler-group" }, nested ? wrapGroup ? React113.createElement(
    "div",
    { className: "k-scheduler-row" },
    React113.createElement("div", { className: "k-sticky-cell" }, renderResourcesRecursivelyWrapped({ resources, children: children2, cellContent, depth, groupIndex })),
    React113.createElement("div", { className: "k-scheduler-cell k-group-content" }, renderResourcesRecursively({ resources, children: children2, cellContent, depth, groupIndex }, false))
  ) : renderResourcesRecursively({ resources, children: children2, cellContent, depth, groupIndex }, true) : wrapGroup ? React113.createElement(
    "div",
    { className: "k-scheduler-row" },
    React113.createElement("div", { className: "k-sticky-cell" }, renderResourcesWrapped({ resources, children: children2, cellContent, depth, groupIndex })),
    React113.createElement("div", { className: "k-scheduler-cell k-group-content" }, children2)
  ) : renderResources({ resources, children: children2, cellContent, depth, groupIndex }));
};
var renderResourcesWrapped = function(args) {
  return React113.createElement(
    "div",
    { className: "k-scheduler-row" },
    React113.createElement("div", { className: "k-scheduler-row" }, args.resources.map(function(_2, index) {
      return React113.createElement("div", { key: index, className: "k-scheduler-cell k-resource-cell k-heading-cell", "data-depth-index": index });
    }))
  );
};
var renderResourcesRecursively = function(args, headers) {
  if (headers === void 0) {
    headers = true;
  }
  var resources = args.resources, children2 = args.children, cellContent = args.cellContent, groupIndex = args.groupIndex, depth = args.depth;
  var hasGroups = resources.length > 0;
  if (depth === resources.length || !hasGroups) {
    return React113.createElement(SchedulerResourceIteratorContext.Provider, { value: { resource: resources[depth], groupIndex: hasGroups ? groupIndex : 0 } }, children2);
  }
  var dataLength = resources[depth].data.length;
  return resources[depth].data.map(function(dataItem, dataIndex) {
    return React113.createElement(
      "div",
      { key: dataIndex, className: "k-scheduler-row" },
      headers && React113.createElement("div", { className: "k-scheduler-cell k-group-cell k-heading-cell", "data-depth-index": depth }, dataItem.text),
      React113.createElement("div", { className: "k-scheduler-cell k-group-content k-resource-row", "data-depth-index": depth, "data-resource-index": dataLength * groupIndex + dataIndex }, renderResourcesRecursively({
        resources,
        children: children2,
        cellContent,
        groupIndex: dataLength * groupIndex + dataIndex,
        depth: depth + 1
      }, headers))
    );
  });
};
var renderResourcesRecursivelyWrapped = function(args) {
  var resources = args.resources, children2 = args.children, cellContent = args.cellContent, groupIndex = args.groupIndex, depth = args.depth;
  var dataLength = resources.length ? resources[depth].data.length : 0;
  if (!resources[depth]) {
    return null;
  }
  return resources[depth].data.map(function(dataItem, dataIndex) {
    return React113.createElement(
      "div",
      { key: dataIndex, className: "k-scheduler-row" },
      React113.createElement("div", { className: "k-scheduler-cell k-resource-cell k-resource-row k-heading-cell", "data-depth-index": depth, "data-resource-index": dataLength * groupIndex + dataIndex }, dataItem.text),
      depth + 1 !== resources.length && React113.createElement("div", { className: "k-scheduler-cell k-resource-content" }, renderResourcesRecursivelyWrapped({
        resources,
        children: children2,
        cellContent,
        groupIndex: dataLength * groupIndex + dataIndex,
        depth: depth + 1
      }))
    );
  });
};
var renderGroupContentRecursively = function(args) {
  var resources = args.resources, children2 = args.children, cellContent = args.cellContent, groupIndex = args.groupIndex, depth = args.depth;
  var hasGroups = resources.length > 0;
  if (depth === resources.length || !hasGroups) {
    return React113.createElement(SchedulerResourceIteratorContext.Provider, { value: { resource: resources[depth], groupIndex: hasGroups ? groupIndex : void 0 } }, children2);
  }
  var dataLength = resources[depth].data.length;
  return resources[depth].data.map(function(_dataItem, dataIndex) {
    return React113.createElement(
      "div",
      { key: dataIndex, className: "k-scheduler-row" },
      React113.createElement("div", { className: "k-scheduler-cell k-group-content" }, renderGroupContentRecursively({
        resources,
        children: children2,
        cellContent,
        groupIndex: dataLength * groupIndex + dataIndex,
        depth: depth + 1
      }))
    );
  });
};
var renderResources = function(args) {
  var resources = args.resources, children2 = args.children, groupIndex = args.groupIndex, cellContent = args.cellContent;
  return React113.createElement(
    "div",
    { className: "k-scheduler-row" },
    cellPrefix(resources),
    cellContent,
    cellChildren(children2, resources, groupIndex)
  );
};
var cellChildren = function(children2, resources, groupIndex) {
  var hasGroups = resources.length > 0;
  return React113.createElement(
    "div",
    { className: "k-scheduler-cell k-group-content" },
    React113.createElement(SchedulerResourceIteratorContext.Provider, { value: { resource: resources[groupIndex], groupIndex: hasGroups ? groupIndex : void 0 } }, children2)
  );
};
var cellPrefix = function(resources) {
  return resources.map(function(_2, index) {
    return React113.createElement("div", { key: index, className: "k-scheduler-cell k-group-cell k-heading-cell", "data-depth-index": index });
  });
};
VerticalResourceIterator.displayName = "KendoReactSchedulerVerticalResourceIterator";
var DefaultCellContent = null;

// node_modules/@progress/kendo-react-scheduler/dist/es/services/rangeService.js
var toRanges = function(dateRange, _a14) {
  var step = _a14.step, timezone = _a14.timezone;
  var ranges = [];
  var zonedRangeStart = ZonedDate.fromLocalDate(dateRange.start, timezone);
  var zonedRangeEnd = ZonedDate.fromLocalDate(dateRange.end, timezone);
  for (var current = zonedRangeStart.clone(), index = 0; current.getTime() < zonedRangeEnd.getTime(); index++, current = current.addTime(step)) {
    var zonedStart = current.clone();
    var zonedEnd = zonedStart.clone().addTime(step);
    var start2 = new Date(zonedStart.getTime());
    var end2 = new Date(zonedEnd.getTime());
    var range3 = {
      index,
      end: end2,
      start: start2,
      zonedStart,
      zonedEnd
    };
    ranges.push(range3);
  }
  return ranges;
};

// node_modules/@progress/kendo-recurrence/dist/es/limitations.js
var limitations_exports = {};
__export(limitations_exports, {
  byHour: () => byHour,
  byMinute: () => byMinute,
  byMonth: () => byMonth,
  byMonthDay: () => byMonthDay,
  bySecond: () => bySecond,
  byWeekDay: () => byWeekDay,
  byWeekNumber: () => byWeekNumber,
  byYearDay: () => byYearDay
});

// node_modules/@progress/kendo-recurrence/dist/es/utils/has-modifiers.js
var some = function(arr) {
  return arr instanceof Array && arr.length > 0;
};
var hasModifiers = function(rule) {
  return some(rule.bySecond) || some(rule.byMinute) || some(rule.byHour) || some(rule.byYearDay) || some(rule.byMonthDay) || some(rule.byWeekDay) || some(rule.byMonth) || some(rule.byWeekNumber);
};

// node_modules/@progress/kendo-recurrence/dist/es/utils/parse-date-time.js
var parseDateTimeList = function(rule) {
  var pairs = rule.split(";");
  var values2 = [];
  var timezone = null;
  for (var idx = 0; idx < pairs.length; idx++) {
    var _a14 = pairs[idx].split(":"), property = _a14[0], _b3 = _a14[1], val = _b3 === void 0 ? "" : _b3;
    var tzIndex = property.indexOf("TZID");
    if (tzIndex !== -1) {
      timezone = property.substring(tzIndex).split("=")[1];
    }
    values2 = val.split(",").map(function(v) {
      return parseISODate(v, timezone);
    });
  }
  if (!values2.length || values2[0] === null) {
    return null;
  }
  return values2;
};
var parseDateTime = function(rule) {
  var list = parseDateTimeList(rule);
  if (list === null) {
    return null;
  }
  return list[0];
};

// node_modules/@telerik/kendo-intl/dist/es/cldr/default-data.js
var defaultData2 = {
  en: {
    name: "en",
    identity: {
      version: {
        ze: "$Revision: 12418 $",
        Bd: "29"
      },
      language: "en"
    },
    territory: "US",
    numbers: {
      symbols: {
        decimal: ".",
        group: ",",
        list: ";",
        percentSign: "%",
        plusSign: "+",
        minusSign: "-",
        exponential: "E",
        superscriptingExponent: "\xD7",
        perMille: "\u2030",
        infinity: "\u221E",
        nan: "NaN",
        timeSeparator: ":"
      },
      decimal: {
        patterns: [
          "n"
        ],
        groupSize: [
          3
        ]
      },
      scientific: {
        patterns: [
          "nEn"
        ],
        groupSize: []
      },
      percent: {
        patterns: [
          "n%"
        ],
        groupSize: [
          3
        ]
      },
      currency: {
        patterns: [
          "$n"
        ],
        groupSize: [
          3
        ],
        "unitPattern-count-one": "n $",
        "unitPattern-count-other": "n $"
      },
      currencies: {
        BGN: {
          displayName: "Bulgarian Lev",
          "displayName-count-one": "Bulgarian lev",
          "displayName-count-other": "Bulgarian leva",
          symbol: "BGN"
        },
        EUR: {
          displayName: "Euro",
          "displayName-count-one": "euro",
          "displayName-count-other": "euros",
          symbol: "\u20AC",
          "symbol-alt-narrow": "\u20AC"
        },
        USD: {
          displayName: "US Dollar",
          "displayName-count-one": "US dollar",
          "displayName-count-other": "US dollars",
          symbol: "$",
          "symbol-alt-narrow": "$"
        }
      },
      localeCurrency: "USD",
      accounting: {
        patterns: [
          "$n",
          "($n)"
        ],
        groupSize: [
          3
        ]
      }
    },
    calendar: {
      gmtFormat: "GMT{0}",
      gmtZeroFormat: "GMT",
      patterns: {
        d: "M/d/y",
        D: "EEEE, MMMM d, y",
        m: "MMM d",
        M: "MMMM d",
        y: "MMM y",
        Y: "MMMM y",
        F: "EEEE, MMMM d, y h:mm:ss a",
        g: "M/d/y h:mm a",
        G: "M/d/y h:mm:ss a",
        t: "h:mm a",
        T: "h:mm:ss a",
        s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
        u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
      },
      dateTimeFormats: {
        full: "{1} 'at' {0}",
        long: "{1} 'at' {0}",
        medium: "{1}, {0}",
        short: "{1}, {0}",
        availableFormats: {
          Bh: "h B",
          Bhm: "h:mm B",
          Bhms: "h:mm:ss B",
          d: "d",
          E: "ccc",
          EBhm: "E h:mm B",
          EBhms: "E h:mm:ss B",
          Ed: "d E",
          Ehm: "E h:mm a",
          EHm: "E HH:mm",
          Ehms: "E h:mm:ss a",
          EHms: "E HH:mm:ss",
          Gy: "y G",
          GyMMM: "MMM y G",
          GyMMMd: "MMM d, y G",
          GyMMMEd: "E, MMM d, y G",
          h: "h a",
          H: "HH",
          hm: "h:mm a",
          Hm: "HH:mm",
          hms: "h:mm:ss a",
          Hms: "HH:mm:ss",
          hmsv: "h:mm:ss a v",
          Hmsv: "HH:mm:ss v",
          hmv: "h:mm a v",
          Hmv: "HH:mm v",
          M: "L",
          Md: "M/d",
          MEd: "E, M/d",
          MMM: "LLL",
          MMMd: "MMM d",
          MMMEd: "E, MMM d",
          MMMMd: "MMMM d",
          "MMMMW-count-one": "'week' W 'of' MMMM",
          "MMMMW-count-other": "'week' W 'of' MMMM",
          ms: "mm:ss",
          y: "y",
          yM: "M/y",
          yMd: "M/d/y",
          yMEd: "E, M/d/y",
          yMMM: "MMM y",
          yMMMd: "MMM d, y",
          yMMMEd: "E, MMM d, y",
          yMMMM: "MMMM y",
          yQQQ: "QQQ y",
          yQQQQ: "QQQQ y",
          "yw-count-one": "'week' w 'of' Y",
          "yw-count-other": "'week' w 'of' Y"
        }
      },
      timeFormats: {
        full: "h:mm:ss a zzzz",
        long: "h:mm:ss a z",
        medium: "h:mm:ss a",
        short: "h:mm a"
      },
      dateFormats: {
        full: "EEEE, MMMM d, y",
        long: "MMMM d, y",
        medium: "MMM d, y",
        short: "M/d/yy"
      },
      days: {
        format: {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Sun",
            "Mon",
            "Tue",
            "Wed",
            "Thu",
            "Fri",
            "Sat"
          ],
          narrow: [
            "S",
            "M",
            "T",
            "W",
            "T",
            "F",
            "S"
          ],
          short: [
            "Su",
            "Mo",
            "Tu",
            "We",
            "Th",
            "Fr",
            "Sa"
          ],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        }
      },
      months: {
        format: {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec"
          ],
          narrow: [
            "J",
            "F",
            "M",
            "A",
            "M",
            "J",
            "J",
            "A",
            "S",
            "O",
            "N",
            "D"
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December"
          ]
        }
      },
      quarters: {
        format: {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        },
        "stand-alone": {
          abbreviated: [
            "Q1",
            "Q2",
            "Q3",
            "Q4"
          ],
          narrow: [
            "1",
            "2",
            "3",
            "4"
          ],
          wide: [
            "1st quarter",
            "2nd quarter",
            "3rd quarter",
            "4th quarter"
          ]
        }
      },
      dayPeriods: {
        format: {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          narrow: {
            midnight: "mi",
            am: "a",
            "am-alt-variant": "am",
            noon: "n",
            pm: "p",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "in the morning",
            afternoon1: "in the afternoon",
            evening1: "in the evening",
            night1: "at night"
          }
        },
        "stand-alone": {
          abbreviated: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          narrow: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          },
          wide: {
            midnight: "midnight",
            am: "AM",
            "am-alt-variant": "am",
            noon: "noon",
            pm: "PM",
            "pm-alt-variant": "pm",
            morning1: "morning",
            afternoon1: "afternoon",
            evening1: "evening",
            night1: "night"
          }
        }
      },
      eras: {
        format: {
          wide: {
            "0": "Before Christ",
            "1": "Anno Domini",
            "0-alt-variant": "Before Common Era",
            "1-alt-variant": "Common Era"
          },
          abbreviated: {
            "0": "BC",
            "1": "AD",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          },
          narrow: {
            "0": "B",
            "1": "A",
            "0-alt-variant": "BCE",
            "1-alt-variant": "CE"
          }
        }
      },
      dateFields: {
        era: {
          wide: "era"
        },
        year: {
          wide: "year",
          short: "yr.",
          narrow: "yr."
        },
        quarter: {
          wide: "quarter",
          short: "qtr.",
          narrow: "qtr."
        },
        month: {
          wide: "month",
          short: "mo.",
          narrow: "mo."
        },
        week: {
          wide: "week",
          short: "wk.",
          narrow: "wk."
        },
        day: {
          wide: "day",
          short: "day",
          narrow: "day"
        },
        weekday: {
          wide: "day of the week"
        },
        dayperiod: {
          wide: "AM/PM"
        },
        hour: {
          wide: "hour",
          short: "hr.",
          narrow: "hr."
        },
        minute: {
          wide: "minute",
          short: "min.",
          narrow: "min."
        },
        second: {
          wide: "second",
          short: "sec.",
          narrow: "sec."
        },
        millisecond: {
          wide: "millisecond",
          short: "ms",
          narrow: "ms"
        },
        zone: {
          wide: "time zone"
        }
      }
    }
  },
  supplemental: {
    likelySubtags: {
      en: "en-Latn-US"
    },
    currencyData: {
      region: {
        US: [
          {
            USD: {
              Ja: "1792-01-01"
            }
          }
        ]
      }
    },
    weekData: {
      firstDay: {
        US: "sun"
      },
      weekendStart: {
        "001": "sat"
      },
      weekendEnd: {
        "001": "sun"
      }
    }
  }
};
var default_data_default2 = defaultData2;

// node_modules/@telerik/kendo-intl/dist/es/common/is-string.js
function isString3(value2) {
  return typeof value2 === "string";
}

// node_modules/@telerik/kendo-intl/dist/es/error-details.js
var error_details_default2 = {
  "NoLocale": "Missing locale info for '{0}'",
  "NoCurrency": "Cannot determine currency information. Please load the locale currencies data.",
  "NoSupplementalCurrency": "Cannot determine currency. Please load the supplemental currencyData.",
  "NoCurrencyRegion": "No currency data for region '{0}'",
  "NoCurrencyDisplay": "Cannot determine currency display information. Please load the locale currencies data. The default culture does not include the all currencies data.",
  "NoGMTInfo": "Cannot determine locale GMT format. Please load the locale timeZoneNames data.",
  "NoWeekData": "Cannot determine locale first day of week. Please load the supplemental weekData.",
  "NoFirstDay": "Cannot determine locale first day of week. Please load the supplemental weekData. The default culture includes only the 'en-US' first day info.",
  "NoValidCurrency": "Cannot determine a default currency for the {0} locale. Please specify explicitly the currency with the format options.",
  "NoDateFieldNames": "Cannot determine the locale date field names. Please load the locale dateFields data."
};

// node_modules/@telerik/kendo-intl/dist/es/errors.js
var formatRegExp6 = /\{(\d+)}?\}/g;
var IntlError3 = function IntlError4(ref) {
  var name2 = ref.name;
  var message = ref.message;
  if (!name2 || !message) {
    throw new Error("{ name: string, message: string } object is required!");
  }
  this.name = name2;
  this.message = message;
};
IntlError3.prototype.formatMessage = function formatMessage3() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  var flattenValues = flatten3(values2);
  var formattedMessage = this.message.replace(formatRegExp6, function(match, index) {
    return flattenValues[parseInt(index, 10)];
  });
  return this.name + ": " + formattedMessage;
};
IntlError3.prototype.error = function error2() {
  var values2 = [], len = arguments.length;
  while (len--)
    values2[len] = arguments[len];
  return new Error(this.formatMessage(values2));
};
var flatten3 = function(arr) {
  return arr.reduce(function(a, b) {
    return a.concat(b);
  }, []);
};
var toIntlErrors2 = function(errors3) {
  var predicate = function(prev, name2) {
    prev[name2] = new IntlError3({ name: name2, message: errors3[name2] });
    return prev;
  };
  return Object.keys(errors3).reduce(predicate, {});
};
var errors2 = toIntlErrors2(error_details_default2);

// node_modules/@telerik/kendo-intl/dist/es/cldr/info.js
function availableLocaleInfo2(fullName, suffixes) {
  var parts = fullName.split("-");
  var language = parts[0];
  var script = parts[1];
  var territory = parts[2];
  return cldr2[fullName] || suffixes.indexOf(territory) !== -1 && cldr2[language + "-" + territory] || suffixes.indexOf(script) !== -1 && cldr2[language + "-" + script] || cldr2[language];
}
function localeFullName2(language, suffixes) {
  var likelySubtags = cldr2.supplemental.likelySubtags;
  for (var idx = 0; idx < suffixes.length; idx++) {
    var name2 = likelySubtags[language + "-" + suffixes[idx]];
    if (name2) {
      return name2;
    }
  }
  if (likelySubtags[language]) {
    return likelySubtags[language];
  }
}
var cldr2 = default_data_default2;
function getLocaleInfo2(locale) {
  var info;
  if (isString3(locale)) {
    info = localeInfo2(locale);
  } else {
    info = locale;
  }
  return info;
}
function localeInfo2(locale) {
  if (cldr2[locale]) {
    return cldr2[locale];
  }
  var likelySubtags = cldr2.supplemental.likelySubtags;
  if (likelySubtags) {
    var parts = locale.split("-");
    var language = parts[0];
    var suffixes = parts.slice(1);
    var fullName = localeFullName2(language, suffixes);
    var info = fullName ? availableLocaleInfo2(fullName, suffixes) : null;
    if (info) {
      return info;
    }
  }
  throw errors2.NoLocale.error(locale);
}

// node_modules/@telerik/kendo-intl/dist/es/common/constants.js
var DECIMAL2 = "decimal";
var CURRENCY2 = "currency";
var ACCOUNTING2 = "accounting";
var PERCENT2 = "percent";
var SCIENTIFIC2 = "scientific";
var CURRENCY_PLACEHOLDER2 = "$";
var PERCENT_PLACEHOLDER2 = "%";
var NUMBER_PLACEHOLDER2 = "n";
var LIST_SEPARATOR2 = ";";
var GROUP_SEPARATOR2 = ",";
var POINT2 = ".";
var EMPTY2 = "";
var DEFAULT_LOCALE2 = "en";

// node_modules/@telerik/kendo-intl/dist/es/cldr/load-numbers.js
var LATIN_NUMBER_FORMATS2 = "Formats-numberSystem-latn";
var LATIN_NUMBER_SYMBOLS2 = "symbols-numberSystem-latn";
var patternRegExp2 = /([#,0.]+)/g;
var cldrCurrencyRegExp2 = /¤/g;
function getPatterns2(pattern) {
  patternRegExp2.lastIndex = 0;
  return pattern.replace(cldrCurrencyRegExp2, CURRENCY_PLACEHOLDER2).replace(patternRegExp2, NUMBER_PLACEHOLDER2).split(LIST_SEPARATOR2);
}
function getGroupSize2(pattern) {
  patternRegExp2.lastIndex = 0;
  var numberPatterns = patternRegExp2.exec(pattern.split(LIST_SEPARATOR2)[0])[0].split(POINT2);
  var integer = numberPatterns[0];
  var groupSize = integer.split(GROUP_SEPARATOR2).slice(1).map(function(group2) {
    return group2.length;
  }).reverse();
  return groupSize;
}
function loadCurrencyUnitPatterns2(currencyInfo, currencyFormats) {
  for (var field in currencyFormats) {
    if (field.startsWith("unitPattern")) {
      currencyInfo[field] = currencyFormats[field].replace("{0}", NUMBER_PLACEHOLDER2).replace("{1}", CURRENCY_PLACEHOLDER2);
    }
  }
}
function loadNumbersInfo2(locale, info) {
  var localeInfo3 = cldr2[locale];
  var numbers = localeInfo3.numbers = localeInfo3.numbers || {};
  numbers.symbols = numbers.symbols || {};
  for (var field in info) {
    if (field === LATIN_NUMBER_SYMBOLS2) {
      Object.assign(numbers.symbols, info[field]);
    } else if (field.includes(LATIN_NUMBER_FORMATS2)) {
      var style = field.substr(0, field.indexOf(LATIN_NUMBER_FORMATS2));
      var pattern = info[field].standard;
      numbers[style] = {
        patterns: getPatterns2(pattern)
      };
      if (style === CURRENCY2) {
        numbers[style].groupSize = getGroupSize2((info[DECIMAL2 + LATIN_NUMBER_FORMATS2] || info[field]).standard);
        loadCurrencyUnitPatterns2(numbers[style], info[field]);
        numbers[ACCOUNTING2] = {
          patterns: getPatterns2(info[field][ACCOUNTING2]),
          groupSize: numbers[style].groupSize
        };
      } else {
        numbers[style].groupSize = getGroupSize2(pattern);
      }
    } else if (field === "currencies") {
      numbers.currencies = info[field];
    }
  }
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/load-dates.js
var predefinedDatePatterns2 = {
  s: "yyyy'-'MM'-'dd'T'HH':'mm':'ss",
  u: "yyyy'-'MM'-'dd HH':'mm':'ss'Z'"
};
var YEAR_REGEX2 = /y+/g;
var SHORT_DATE2 = [["dateFormats", "short"]];
var datePatterns2 = {
  D: [["dateFormats", "full"]],
  m: [["dateTimeFormats", "availableFormats", "MMMd"]],
  M: [["dateTimeFormats", "availableFormats", "MMMMd"]],
  y: [["dateTimeFormats", "availableFormats", "yMMM"]],
  Y: [["dateTimeFormats", "availableFormats", "yMMMM"]],
  F: [["dateFormats", "full"], ["timeFormats", "medium"]],
  g: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "short"]],
  G: [["dateTimeFormats", "availableFormats", "yMd"], ["timeFormats", "medium"]],
  t: [["timeFormats", "short"]],
  T: [["timeFormats", "medium"]]
};
function toArray2(obj) {
  var result = [];
  var names = Object.getOwnPropertyNames(obj);
  for (var idx = 0; idx < names.length; idx++) {
    var value2 = obj[names[idx]];
    result.push(value2);
  }
  return result;
}
function getCalendarNames2(info, isObj) {
  var result = {};
  for (var formatType in info) {
    var names = result[formatType] = {};
    for (var format3 in info[formatType]) {
      var formats = info[formatType][format3];
      names[format3] = isObj ? formats : toArray2(formats);
    }
  }
  return result;
}
function getEraNames2(eras) {
  var result = {};
  var format3 = result.format = {};
  var eraNameMap = {
    eraAbbr: "abbreviated",
    eraNames: "wide",
    eraNarrow: "narrow"
  };
  for (var eraFormatName in eras) {
    var formatName = eraNameMap[eraFormatName];
    format3[formatName] = eras[eraFormatName];
  }
  return result;
}
function loadCalendarNames2(locale, calendar) {
  var localeCalendar = cldr2[locale].calendar;
  localeCalendar.days = getCalendarNames2(calendar.days);
  localeCalendar.months = getCalendarNames2(calendar.months);
  localeCalendar.quarters = getCalendarNames2(calendar.quarters);
  localeCalendar.dayPeriods = getCalendarNames2(calendar.dayPeriods, true);
  localeCalendar.eras = getEraNames2(calendar.eras);
}
function loadCalendarDateFields2(locale, fields) {
  var localeCalendar = cldr2[locale].calendar;
  var dateFields = {};
  for (var field in fields) {
    var ref = field.split("-");
    var fieldName = ref[0];
    var formatType = ref[1];
    if (formatType === void 0)
      formatType = "wide";
    var fieldInfo = dateFields[fieldName] || {};
    var displayName = fields[field].displayName;
    if (!displayName) {
      continue;
    }
    fieldInfo[formatType] = displayName;
    dateFields[fieldName] = fieldInfo;
  }
  localeCalendar.dateFields = dateFields;
}
function getPredefinedFormat2(paths, calendar) {
  var result = [];
  for (var pathIdx = 0; pathIdx < paths.length; pathIdx++) {
    var fields = paths[pathIdx];
    var pattern = calendar;
    for (var idx = 0; idx < fields.length; idx++) {
      pattern = pattern[fields[idx]];
    }
    result.push(pattern);
  }
  return result.join(" ");
}
function loadCalendarPatterns2(locale, calendar) {
  var cldrCalendar = cldr2[locale].calendar;
  var patterns = cldrCalendar.patterns = {};
  patterns.d = getPredefinedFormat2(SHORT_DATE2, calendar).replace(YEAR_REGEX2, "y");
  for (var pattern in datePatterns2) {
    patterns[pattern] = getPredefinedFormat2(datePatterns2[pattern], calendar);
  }
  for (var pattern$1 in predefinedDatePatterns2) {
    patterns[pattern$1] = predefinedDatePatterns2[pattern$1];
  }
  var dateTimeFormats = calendar.dateTimeFormats;
  cldrCalendar.dateTimeFormats = {
    full: dateTimeFormats.full,
    long: dateTimeFormats.long,
    medium: dateTimeFormats.medium,
    short: dateTimeFormats.short,
    availableFormats: dateTimeFormats.availableFormats
  };
  cldrCalendar.timeFormats = calendar.timeFormats;
  cldrCalendar.dateFormats = calendar.dateFormats;
}
function loadCalendarInfo2(locale, info) {
  var calendar = cldr2[locale].calendar = cldr2[locale].calendar || {};
  for (var field in info) {
    if (field === "timeZoneNames") {
      calendar.gmtFormat = info[field].gmtFormat;
      calendar.gmtZeroFormat = info[field].gmtZeroFormat;
    } else if (field === "calendars" && info[field].gregorian) {
      loadCalendarPatterns2(locale, info[field].gregorian);
      loadCalendarNames2(locale, info[field].gregorian);
    } else if (field === "fields") {
      loadCalendarDateFields2(locale, info.fields);
    }
  }
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/territory.js
function territoryFromName2(name2, identity4) {
  var likelySubtags = cldr2.supplemental.likelySubtags;
  var parts = name2.split("-");
  if (likelySubtags) {
    var likelyName = likelySubtags[name2] || likelySubtags[parts[0]];
    if (likelyName) {
      parts = likelyName.split("-");
    }
  }
  if (identity4) {
    for (var idx = parts.length - 1; idx >= 1; idx--) {
      var part = parts[idx];
      if (part === identity4.variant || part === identity4.script) {
        parts.splice(idx, 1);
      }
    }
  }
  var length = parts.length;
  if (length > 1) {
    var territory = parts[length - 1];
    return territory.toUpperCase();
  }
}
function localeTerritory2(info) {
  if (info.territory) {
    return info.territory;
  }
  var name2 = info.name;
  var identity4 = info.identity;
  var territory;
  if (identity4 && identity4.territory) {
    territory = identity4.territory;
  } else {
    territory = territoryFromName2(name2, identity4);
  }
  info.territory = territory;
  return territory;
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/load.js
function loadLocale2(locale, info) {
  for (var field in info) {
    if (field === "numbers") {
      loadNumbersInfo2(locale, info[field]);
    } else if (field === "dates") {
      loadCalendarInfo2(locale, info[field]);
    }
  }
}
function load2() {
  var arguments$1 = arguments;
  var length = arguments.length;
  for (var idx = 0; idx < length; idx++) {
    var entry = arguments$1[idx];
    if (entry.main) {
      var locale = Object.keys(entry.main)[0];
      var info = entry.main[locale];
      var localeInfo3 = cldr2[locale] = cldr2[locale] || {};
      localeInfo3.name = localeInfo3.name || locale;
      localeInfo3.identity = localeInfo3.identity || info.identity;
      localeTerritory2(localeInfo3);
      loadLocale2(locale, info);
    } else if (entry.supplemental) {
      if (entry.supplemental.weekData) {
        cldr2.supplemental.weekData = {
          firstDay: entry.supplemental.weekData.firstDay,
          weekendStart: entry.supplemental.weekData.weekendStart,
          weekendEnd: entry.supplemental.weekData.weekendEnd
        };
      } else if (entry.supplemental.likelySubtags) {
        cldr2.supplemental.likelySubtags = Object.assign(cldr2.supplemental.likelySubtags, entry.supplemental.likelySubtags);
      } else if (entry.supplemental.currencyData) {
        var currencyData = cldr2.supplemental.currencyData;
        currencyData.region = Object.assign(currencyData.region || {}, entry.supplemental.currencyData.region);
        currencyData.fractions = Object.assign(currencyData.fractions || {}, entry.supplemental.currencyData.fractions);
      }
    }
  }
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/set-data.js
function setData2(data2) {
  var locale = data2.name;
  var info = cldr2[locale] = cldr2[locale] || {};
  var supplemental = cldr2.supplemental = cldr2.supplemental || {};
  if (data2.likelySubtags) {
    supplemental.likelySubtags = Object.assign(supplemental.likelySubtags || {}, data2.likelySubtags);
  }
  if (data2.currencyData) {
    supplemental.currencyData = supplemental.currencyData || {};
    supplemental.currencyData.fractions = Object.assign(supplemental.currencyData.fractions || {}, data2.currencyData);
  }
  var numbers = info.numbers;
  Object.assign(info, data2);
  if (numbers && data2.numbers) {
    info.numbers = Object.assign({}, numbers, data2.numbers);
  }
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/date-field-name.js
function dateFieldName2(options2, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  var info = localeInfo2(locale);
  var dateFields = info.calendar.dateFields;
  if (!dateFields) {
    throw errors2.NoDateFieldNames.error();
  }
  var fieldNameInfo = dateFields[options2.type] || {};
  return fieldNameInfo[options2.nameType] || fieldNameInfo["wide"];
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/date-format-names.js
function lowerArray2(arr) {
  var result = [];
  for (var idx = 0; idx < arr.length; idx++) {
    result.push(arr[idx].toLowerCase());
  }
  return result;
}
function lowerObject2(obj) {
  var result = {};
  for (var field in obj) {
    result[field] = obj[field].toLowerCase();
  }
  return result;
}
function cloneLower2(obj) {
  var result = Array.isArray(obj) ? lowerArray2(obj) : lowerObject2(obj);
  return result;
}
function dateFormatNames2(locale, options2) {
  var type = options2.type;
  var nameType = options2.nameType;
  var standAlone = options2.standAlone;
  var lower = options2.lower;
  var info = getLocaleInfo2(locale);
  var formatType = standAlone ? "stand-alone" : "format";
  var lowerNameType = (lower ? "lower-" : EMPTY2) + nameType;
  var formatNames3 = info.calendar[type][formatType];
  var result = formatNames3[lowerNameType];
  if (!result && lower) {
    result = formatNames3[lowerNameType] = cloneLower2(formatNames3[nameType]);
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/parse-range-date.js
function parseRangeDate2(value2) {
  var parts = value2.split("-");
  var year = parseInt(parts[0], 10);
  var month = parseInt(parts[1], 10) - 1;
  var day = parseInt(parts[2], 10);
  return new Date(year, month, day);
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/currency.js
var NoCurrency2 = errors2.NoCurrency;
var NoCurrencyDisplay2 = errors2.NoCurrencyDisplay;
var NoSupplementalCurrency2 = errors2.NoSupplementalCurrency;
var NoCurrencyRegion2 = errors2.NoCurrencyRegion;
var NoValidCurrency2 = errors2.NoValidCurrency;
var DEFAULT_CURRENCY_FRACTIONS2 = 2;
var SYMBOL2 = "symbol";
var INVALID_CURRENCY_CODE2 = "XXX";
var GLOBAL_CURRENCIES2 = {
  "001": "USD",
  // 001 refers to world. not sure if it is correct to assume USD but seems better than throw an error
  "150": "EUR"
  // 150 territory for Europe
};
function getCurrencyInfo2(locale, currency, throwIfNoValid) {
  var info = getLocaleInfo2(locale);
  var currencies = info.numbers.currencies;
  if (!currencies) {
    if (throwIfNoValid) {
      throw NoCurrency2.error();
    }
    return;
  }
  var currencyDisplayInfo = currencies[currency];
  if (!currencyDisplayInfo) {
    if (throwIfNoValid) {
      throw NoCurrencyDisplay2.error();
    }
    return;
  }
  return currencyDisplayInfo;
}
function lengthComparer2(a, b) {
  return b.length - a.length;
}
function regionCurrency2(regionCurrencies) {
  var latestValidUntil, latestValidUntilRange;
  var latestStillValid, latestStillValidDate;
  for (var idx = 0; idx < regionCurrencies.length; idx++) {
    var currency = regionCurrencies[idx];
    var code = Object.keys(currency)[0];
    var info = currency[code];
    if (code !== INVALID_CURRENCY_CODE2 && info.Cd !== "false" && info.Ja) {
      if (!info.Tb) {
        var stillValidDate = parseRangeDate2(info.Ja);
        if (!latestStillValidDate || latestStillValidDate < stillValidDate) {
          latestStillValid = code;
          latestStillValidDate = stillValidDate;
        }
      } else if (!latestStillValid) {
        var validFrom = parseRangeDate2(info.Ja);
        var validTo = parseRangeDate2(info.Tb);
        if (!latestValidUntilRange || latestValidUntilRange.to < validTo || latestValidUntilRange.from < validFrom) {
          latestValidUntil = code;
          latestValidUntilRange = {
            from: validFrom,
            to: validTo
          };
        }
      }
    }
  }
  return latestStillValid || latestValidUntil;
}
function currencyDisplays2(locale, currency, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  var currencyInfo = getCurrencyInfo2(locale, currency, throwIfNoValid);
  if (!currencyInfo) {
    return;
  }
  if (!currencyInfo.displays) {
    var displays = [currency];
    for (var field in currencyInfo) {
      displays.push(currencyInfo[field]);
    }
    displays.sort(lengthComparer2);
    currencyInfo.displays = displays;
  }
  return currencyInfo.displays;
}
function currencyDisplay2(locale, options2) {
  var value2 = options2.value;
  var currency = options2.currency;
  var currencyDisplay3 = options2.currencyDisplay;
  if (currencyDisplay3 === void 0)
    currencyDisplay3 = SYMBOL2;
  if (currencyDisplay3 === "code") {
    return currency;
  }
  var currencyInfo = getCurrencyInfo2(locale, currency, true);
  var result;
  if (currencyDisplay3 === SYMBOL2) {
    result = currencyInfo["symbol-alt-narrow"] || currencyInfo[SYMBOL2];
  } else {
    if (typeof value2 === void 0 || value2 !== 1) {
      result = currencyInfo["displayName-count-other"];
    } else {
      result = currencyInfo["displayName-count-one"];
    }
  }
  return result;
}
function currencyFractionOptions2(code) {
  var minimumFractionDigits = DEFAULT_CURRENCY_FRACTIONS2;
  var maximumFractionDigits = DEFAULT_CURRENCY_FRACTIONS2;
  var fractions = ((cldr2.supplemental.currencyData || {}).fractions || {})[code];
  if (fractions && fractions.Ub) {
    maximumFractionDigits = minimumFractionDigits = parseInt(fractions.Ub, 10);
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function territoryCurrencyCode2(territory, throwIfNoValid) {
  if (throwIfNoValid === void 0)
    throwIfNoValid = true;
  if (GLOBAL_CURRENCIES2[territory]) {
    return GLOBAL_CURRENCIES2[territory];
  }
  var currencyData = cldr2.supplemental.currencyData;
  if (!currencyData) {
    if (throwIfNoValid) {
      throw NoSupplementalCurrency2.error();
    }
    return;
  }
  var regionCurrencies = currencyData.region[territory];
  if (!regionCurrencies) {
    if (throwIfNoValid) {
      throw NoCurrencyRegion2.error(territory);
    }
    return;
  }
  var currencyCode = regionCurrency2(regionCurrencies);
  return currencyCode;
}
function localeCurrency2(locale, throwIfNoValid) {
  var info = getLocaleInfo2(locale);
  var numbers = info.numbers;
  if (!numbers.localeCurrency) {
    var currency = territoryCurrencyCode2(localeTerritory2(info), throwIfNoValid);
    if (!currency && throwIfNoValid) {
      throw NoValidCurrency2.error(info.name);
    }
    numbers.localeCurrency = currency;
  }
  return numbers.localeCurrency;
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/constants.js
var DAYS_OF_WEEK2 = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
var DEFAULT_TERRITORY2 = "001";

// node_modules/@telerik/kendo-intl/dist/es/cldr/first-day.js
var NoWeekData3 = errors2.NoWeekData;
var NoFirstDay2 = errors2.NoFirstDay;
function firstDay2(locale) {
  var info = getLocaleInfo2(locale);
  if (!isNaN(info.firstDay)) {
    return info.firstDay;
  }
  var weekData = cldr2.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData3.error();
  }
  var firstDay3 = weekData.firstDay[localeTerritory2(info)] || weekData.firstDay[DEFAULT_TERRITORY2];
  if (!firstDay3) {
    throw NoFirstDay2.error();
  }
  info.firstDay = DAYS_OF_WEEK2.indexOf(firstDay3);
  return info.firstDay;
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/weekend-range.js
var NoWeekData4 = errors2.NoWeekData;
function weekendRange2(locale) {
  var info = getLocaleInfo2(locale);
  if (info.weekendRange) {
    return info.weekendRange;
  }
  var weekData = cldr2.supplemental.weekData;
  if (!weekData) {
    throw NoWeekData4.error();
  }
  var territory = localeTerritory2(info);
  var start2 = weekData.weekendStart[territory] || weekData.weekendStart[DEFAULT_TERRITORY2];
  var end2 = weekData.weekendEnd[territory] || weekData.weekendEnd[DEFAULT_TERRITORY2];
  info.weekendRange = {
    start: DAYS_OF_WEEK2.indexOf(start2),
    end: DAYS_OF_WEEK2.indexOf(end2)
  };
  return info.weekendRange;
}

// node_modules/@telerik/kendo-intl/dist/es/cldr/number-symbols.js
function numberSymbols2(locale) {
  var info = getLocaleInfo2(locale);
  return info.numbers.symbols;
}

// node_modules/@telerik/kendo-intl/dist/es/common/is-negative-zero.js
function isNegativeZero2(value2) {
  return 1 / value2 === -Infinity;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/format-currency-symbol.js
function formatCurrencySymbol2(info, options2) {
  if (options2 === void 0)
    options2 = {};
  if (!options2.currency) {
    options2.currency = localeCurrency2(info, true);
  }
  var display = currencyDisplay2(info, options2);
  return display;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/group-integer.js
function groupInteger2(number41, start2, end2, options2, info) {
  var symbols = info.numbers.symbols;
  var decimalIndex = number41.indexOf(symbols.decimal);
  var groupSizes = options2.groupSize.slice();
  var groupSize = groupSizes.shift();
  var integerEnd = decimalIndex !== -1 ? decimalIndex : end2 + 1;
  var integer = number41.substring(start2, integerEnd);
  var result = number41;
  var integerLength = integer.length;
  if (integerLength >= groupSize) {
    var idx = integerLength;
    var parts = [];
    while (idx > -1) {
      var value2 = integer.substring(idx - groupSize, idx);
      if (value2) {
        parts.push(value2);
      }
      idx -= groupSize;
      var newGroupSize = groupSizes.shift();
      groupSize = newGroupSize !== void 0 ? newGroupSize : groupSize;
      if (groupSize === 0) {
        value2 = integer.substring(0, idx);
        if (value2) {
          parts.push(value2);
        }
        break;
      }
    }
    integer = parts.reverse().join(symbols.group);
    result = number41.substring(0, start2) + integer + number41.substring(integerEnd);
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/is-currency-style.js
function isCurrencyStyle2(style) {
  return style === CURRENCY2 || style === ACCOUNTING2;
}

// node_modules/@telerik/kendo-intl/dist/es/common/pad.js
function pad2(number41, digits, right2) {
  if (digits === void 0)
    digits = 2;
  if (right2 === void 0)
    right2 = false;
  var count2 = digits - String(number41).length;
  var result = number41;
  if (count2 > 0) {
    var padString = new Array(count2 + 1).join("0");
    result = right2 ? number41 + padString : padString + number41;
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/common/round.js
var MAX_PRECISION2 = 20;
function round2(value2, precision) {
  var result = value2;
  var decimals = precision || 0;
  result = result.toString().split("e");
  result = Math.round(Number(result[0] + "e" + (result[1] ? Number(result[1]) + decimals : decimals)));
  result = result.toString().split("e");
  result = Number(result[0] + "e" + (result[1] ? Number(result[1]) - decimals : -decimals));
  return result.toFixed(Math.min(decimals, MAX_PRECISION2));
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/standard-number-format.js
var DEFAULT_DECIMAL_ROUNDING2 = 3;
var DEFAULT_PERCENT_ROUNDING2 = 0;
var trailingZeroRegex2 = /0+$/;
function fractionOptions2(options2) {
  var minimumFractionDigits = options2.minimumFractionDigits;
  var maximumFractionDigits = options2.maximumFractionDigits;
  var style = options2.style;
  var isCurrency = isCurrencyStyle2(style);
  var currencyFractions;
  if (isCurrency) {
    currencyFractions = currencyFractionOptions2(options2.currency);
  }
  if (minimumFractionDigits === void 0) {
    minimumFractionDigits = isCurrency ? currencyFractions.minimumFractionDigits : 0;
  }
  if (maximumFractionDigits === void 0) {
    if (style === PERCENT2) {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_PERCENT_ROUNDING2);
    } else if (isCurrency) {
      maximumFractionDigits = Math.max(minimumFractionDigits, currencyFractions.maximumFractionDigits);
    } else {
      maximumFractionDigits = Math.max(minimumFractionDigits, DEFAULT_DECIMAL_ROUNDING2);
    }
  }
  return {
    minimumFractionDigits,
    maximumFractionDigits
  };
}
function applyPattern2(value2, pattern, symbol) {
  var result = EMPTY2;
  for (var idx = 0, length = pattern.length; idx < length; idx++) {
    var ch = pattern.charAt(idx);
    if (ch === NUMBER_PLACEHOLDER2) {
      result += value2;
    } else if (ch === CURRENCY_PLACEHOLDER2 || ch === PERCENT_PLACEHOLDER2) {
      result += symbol;
    } else {
      result += ch;
    }
  }
  return result;
}
function currencyUnitPattern2(info, value2) {
  var currencyInfo = info.numbers.currency;
  var pattern = value2 !== 1 ? currencyInfo["unitPattern-count-other"] : currencyInfo["unitPattern-count-one"];
  if (value2 < 0) {
    pattern = pattern.replace(NUMBER_PLACEHOLDER2, "-" + NUMBER_PLACEHOLDER2);
  }
  return pattern;
}
function standardNumberFormat2(number41, options2, info) {
  var symbols = info.numbers.symbols;
  var style = options2.style;
  var isCurrency = isCurrencyStyle2(style);
  if (style === SCIENTIFIC2) {
    var exponential = options2.minimumFractionDigits !== void 0 ? number41.toExponential(options2.minimumFractionDigits) : number41.toExponential();
    return exponential.replace(POINT2, symbols.decimal);
  }
  var value2 = number41;
  var symbol;
  if (isCurrency) {
    options2.value = value2;
    symbol = formatCurrencySymbol2(info, options2);
  }
  if (style === PERCENT2) {
    value2 *= 100;
    symbol = symbols.percentSign;
  }
  var ref = fractionOptions2(options2);
  var minimumFractionDigits = ref.minimumFractionDigits;
  var maximumFractionDigits = ref.maximumFractionDigits;
  value2 = round2(value2, maximumFractionDigits);
  var negative = value2 < 0;
  var negativeZero = isNegativeZero2(number41);
  var parts = value2.split(POINT2);
  var integer = parts[0];
  var fraction = pad2(parts[1] ? parts[1].replace(trailingZeroRegex2, EMPTY2) : EMPTY2, minimumFractionDigits, true);
  if (negative) {
    integer = integer.substring(1);
  }
  if (options2.minimumIntegerDigits) {
    integer = pad2(integer, options2.minimumIntegerDigits);
  }
  var formattedValue = options2.useGrouping !== false ? groupInteger2(integer, 0, integer.length, options2, info) : integer;
  if (fraction) {
    formattedValue += symbols.decimal + fraction;
  }
  var pattern;
  if (isCurrency && options2.currencyDisplay === "name") {
    pattern = currencyUnitPattern2(info, number41);
  } else {
    var patterns = options2.patterns;
    pattern = negative || negativeZero ? patterns[1] || "-" + patterns[0] : patterns[0];
  }
  if (pattern === NUMBER_PLACEHOLDER2 && !negative) {
    return formattedValue;
  }
  var result = applyPattern2(formattedValue, pattern, symbol);
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/utils.js
var literalRegExp2 = /(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g;
var PLACEHOLDER3 = "__??__";
function setStyleOptions2(formatOptions3, info) {
  var format3 = formatOptions3.format;
  if (format3.indexOf(PERCENT_PLACEHOLDER2) !== -1) {
    formatOptions3.style = PERCENT2;
    formatOptions3.symbol = info.numbers.symbols.percentSign;
    formatOptions3.number *= 100;
  }
  if (format3.indexOf(CURRENCY_PLACEHOLDER2) !== -1) {
    formatOptions3.style = CURRENCY2;
    formatOptions3.symbol = formatCurrencySymbol2(info);
  }
}
function setFormatLiterals2(formatOptions3) {
  var format3 = formatOptions3.format;
  if (format3.indexOf("'") > -1 || format3.indexOf('"') > -1 || format3.indexOf("\\") > -1) {
    var literals2 = formatOptions3.literals = [];
    formatOptions3.format = format3.replace(literalRegExp2, function(match) {
      var quoteChar = match.charAt(0).replace("\\", EMPTY2);
      var literal = match.slice(1).replace(quoteChar, EMPTY2);
      literals2.push(literal);
      return PLACEHOLDER3;
    });
  }
}
function replaceLiterals2(number41, literals2) {
  var result = number41;
  if (literals2) {
    var length = literals2.length;
    for (var idx = 0; idx < length; idx++) {
      result = result.replace(PLACEHOLDER3, literals2[idx]);
    }
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/custom-number-format.js
var SHARP2 = "#";
var ZERO2 = "0";
var trailingZerosRegExp2 = /(\.(?:[0-9]*[1-9])?)0+$/g;
var trailingPointRegExp2 = /\.$/;
var commaRegExp2 = /\,/g;
function trimTrailingZeros2(value2, lastZero) {
  var trimRegex;
  if (lastZero === 0) {
    trimRegex = trailingZerosRegExp2;
  } else {
    trimRegex = new RegExp("(\\.[0-9]{" + lastZero + "}[1-9]*)0+$", "g");
  }
  return value2.replace(trimRegex, "$1").replace(trailingPointRegExp2, EMPTY2);
}
function roundNumber2(formatOptions3) {
  var number41 = formatOptions3.number;
  var format3 = formatOptions3.format;
  var decimalIndex = format3.indexOf(POINT2);
  if (decimalIndex !== -1) {
    var zeroIndex = format3.lastIndexOf(ZERO2) - decimalIndex;
    var sharpIndex = format3.lastIndexOf(SHARP2) - decimalIndex;
    var hasZero = zeroIndex > -1;
    var hasSharp = sharpIndex > -1;
    var fraction = number41.toString().split("e");
    if (fraction[1]) {
      fraction = round2(number41, Math.abs(fraction[1]));
    } else {
      fraction = fraction[0];
    }
    fraction = fraction.split(POINT2)[1] || EMPTY2;
    var precision = fraction.length;
    var trailingZeros = -1;
    if (!hasZero && !hasSharp) {
      formatOptions3.format = format3.substring(0, decimalIndex) + format3.substring(decimalIndex + 1);
      decimalIndex = -1;
      precision = 0;
    } else if (hasZero && zeroIndex > sharpIndex) {
      precision = zeroIndex;
    } else if (sharpIndex > zeroIndex) {
      if (hasSharp && precision > sharpIndex) {
        precision = sharpIndex;
      } else if (hasZero && precision < zeroIndex) {
        precision = zeroIndex;
      }
      trailingZeros = hasZero ? zeroIndex : 0;
    }
    if (precision > -1) {
      number41 = round2(number41, precision);
      if (trailingZeros > -1) {
        number41 = trimTrailingZeros2(number41, trailingZeros);
      }
    }
  } else {
    number41 = round2(number41);
  }
  if (formatOptions3.negative && number41 * -1 >= 0 && !formatOptions3.negativeZero) {
    formatOptions3.negative = false;
  }
  formatOptions3.number = number41;
  formatOptions3.decimalIndex = decimalIndex;
}
function isConstantFormat2(format3) {
  return format3.indexOf(SHARP2) === -1 && format3.indexOf(ZERO2) === -1;
}
function setValueSpecificFormat2(formatOptions3) {
  var number41 = formatOptions3.number;
  var format3 = formatOptions3.format;
  format3 = format3.split(LIST_SEPARATOR2);
  if ((formatOptions3.negative || formatOptions3.negativeZero) && format3[1]) {
    format3 = format3[1];
    formatOptions3.hasNegativeFormat = true;
  } else if (number41 === 0) {
    var zeroFormat = format3[2];
    format3 = zeroFormat || format3[0];
    if (zeroFormat && isConstantFormat2(zeroFormat)) {
      formatOptions3.constant = zeroFormat;
    }
  } else {
    format3 = format3[0];
  }
  formatOptions3.format = format3;
}
function setGroupOptions2(formatOptions3) {
  formatOptions3.hasGroup = formatOptions3.format.indexOf(GROUP_SEPARATOR2) > -1;
  if (formatOptions3.hasGroup) {
    formatOptions3.format = formatOptions3.format.replace(commaRegExp2, EMPTY2);
  }
}
function placeholderIndex2(index1, index2, start2) {
  var index;
  if (index1 === -1 && index2 !== -1) {
    index = index2;
  } else if (index1 !== -1 && index2 === -1) {
    index = index1;
  } else {
    index = start2 ? Math.min(index1, index2) : Math.max(index1, index2);
  }
  return index;
}
function setPlaceholderIndices2(formatOptions3) {
  var format3 = formatOptions3.format;
  var sharpIndex = format3.indexOf(SHARP2);
  var zeroIndex = format3.indexOf(ZERO2);
  var start2 = placeholderIndex2(sharpIndex, zeroIndex, true);
  sharpIndex = format3.lastIndexOf(SHARP2);
  zeroIndex = format3.lastIndexOf(ZERO2);
  var end2 = placeholderIndex2(sharpIndex, zeroIndex);
  if (start2 === format3.length) {
    end2 = start2;
  }
  formatOptions3.start = start2;
  formatOptions3.end = end2;
  formatOptions3.lastZeroIndex = zeroIndex;
}
function replaceStyleSymbols2(number41, style, symbol) {
  var result = number41;
  if (style === CURRENCY2 || style === PERCENT2) {
    result = EMPTY2;
    for (var idx = 0, length = number41.length; idx < length; idx++) {
      var ch = number41.charAt(idx);
      result += ch === CURRENCY_PLACEHOLDER2 || ch === PERCENT_PLACEHOLDER2 ? symbol : ch;
    }
  }
  return result;
}
function replacePlaceHolders2(formatOptions3, info) {
  var start2 = formatOptions3.start;
  var end2 = formatOptions3.end;
  var negative = formatOptions3.negative;
  var negativeZero = formatOptions3.negativeZero;
  var format3 = formatOptions3.format;
  var decimalIndex = formatOptions3.decimalIndex;
  var lastZeroIndex = formatOptions3.lastZeroIndex;
  var hasNegativeFormat = formatOptions3.hasNegativeFormat;
  var hasGroup = formatOptions3.hasGroup;
  var number41 = formatOptions3.number;
  var value2 = number41.toString().split(POINT2);
  var length = format3.length;
  var integer = value2[0];
  var fraction = value2[1] || EMPTY2;
  var integerLength = integer.length;
  var replacement = EMPTY2;
  number41 = format3.substring(0, start2);
  if ((negative || negativeZero) && !hasNegativeFormat) {
    number41 += "-";
  }
  for (var idx = start2; idx < length; idx++) {
    var ch = format3.charAt(idx);
    if (decimalIndex === -1) {
      if (end2 - idx < integerLength) {
        number41 += integer;
        break;
      }
    } else {
      if (lastZeroIndex !== -1 && lastZeroIndex < idx) {
        replacement = EMPTY2;
      }
      if (decimalIndex - idx <= integerLength && decimalIndex - idx > -1) {
        number41 += integer;
        idx = decimalIndex;
      }
      if (decimalIndex === idx) {
        number41 += (fraction ? info.numbers.symbols.decimal : EMPTY2) + fraction;
        idx += end2 - decimalIndex + 1;
        continue;
      }
    }
    if (ch === ZERO2) {
      number41 += ch;
      replacement = ch;
    } else if (ch === SHARP2) {
      number41 += replacement;
    }
  }
  if (hasGroup) {
    number41 = groupInteger2(number41, start2 + (negative && !hasNegativeFormat ? 1 : 0), Math.max(end2, integerLength + start2), info.numbers.decimal, info);
  }
  if (end2 >= start2) {
    number41 += format3.substring(end2 + 1);
  }
  return number41;
}
function applyCustomFormat2(formatOptions3, info) {
  var number41 = formatOptions3.number;
  if (formatOptions3.start !== -1) {
    number41 = replacePlaceHolders2(formatOptions3, info);
    number41 = replaceStyleSymbols2(number41, formatOptions3.style, formatOptions3.symbol);
    number41 = replaceLiterals2(number41, formatOptions3.literals);
  }
  return number41;
}
function customNumberFormat2(number41, format3, info) {
  var formatOptions3 = {
    negative: number41 < 0,
    number: Math.abs(number41),
    negativeZero: isNegativeZero2(number41),
    format: format3
  };
  setValueSpecificFormat2(formatOptions3);
  if (formatOptions3.constant) {
    return formatOptions3.constant;
  }
  setFormatLiterals2(formatOptions3);
  setStyleOptions2(formatOptions3, info);
  setGroupOptions2(formatOptions3);
  roundNumber2(formatOptions3);
  setPlaceholderIndices2(formatOptions3);
  return applyCustomFormat2(formatOptions3, info);
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/format-options.js
var standardFormatRegExp2 = /^(n|c|p|e|a)(\d*)$/i;
function standardFormatOptions2(format3) {
  var formatAndPrecision = standardFormatRegExp2.exec(format3);
  if (formatAndPrecision) {
    var options2 = {
      style: DECIMAL2
    };
    var style = formatAndPrecision[1].toLowerCase();
    if (style === "c") {
      options2.style = CURRENCY2;
    } else if (style === "a") {
      options2.style = ACCOUNTING2;
    } else if (style === "p") {
      options2.style = PERCENT2;
    } else if (style === "e") {
      options2.style = SCIENTIFIC2;
    }
    if (formatAndPrecision[2]) {
      options2.minimumFractionDigits = options2.maximumFractionDigits = parseInt(formatAndPrecision[2], 10);
    }
    return options2;
  }
}
function formatOptions2(format3) {
  var options2;
  if (isString3(format3)) {
    options2 = standardFormatOptions2(format3);
  } else {
    options2 = format3;
  }
  return options2;
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/format-number.js
function formatNumber2(number41, format3, locale) {
  if (format3 === void 0)
    format3 = NUMBER_PLACEHOLDER2;
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  if (number41 === void 0 || number41 === null) {
    return EMPTY2;
  }
  if (!isFinite(number41)) {
    return String(number41);
  }
  var info = localeInfo2(locale);
  var options2 = formatOptions2(format3);
  var result;
  if (options2) {
    var style = options2.style || DECIMAL2;
    result = standardNumberFormat2(number41, Object.assign({}, info.numbers[style], options2), info);
  } else {
    result = customNumberFormat2(number41, format3, info);
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/common/is-number.js
function isNumber2(value2) {
  return typeof value2 === "number";
}

// node_modules/@telerik/kendo-intl/dist/es/numbers/parse-number.js
var exponentRegExp2 = /[eE][\-+]?[0-9]+/;
var nonBreakingSpaceRegExp2 = /\u00A0/g;
function cleanNegativePattern2(number41, patterns) {
  if (patterns.length > 1) {
    var parts = (patterns[1] || EMPTY2).replace(CURRENCY_PLACEHOLDER2, EMPTY2).split(NUMBER_PLACEHOLDER2);
    if (number41.indexOf(parts[0]) > -1 && number41.indexOf(parts[1]) > -1) {
      return number41.replace(parts[0], EMPTY2).replace(parts[1], EMPTY2);
    }
  }
}
function cleanCurrencyNumber2(value2, info, format3) {
  var options2 = formatOptions2(format3) || {};
  var isCurrency = isCurrencyStyle2(options2.style);
  var number41 = value2;
  var negative;
  var currency = options2.currency || localeCurrency2(info, isCurrency);
  if (currency) {
    var displays = currencyDisplays2(info, currency, isCurrency);
    if (displays) {
      for (var idx = 0; idx < displays.length; idx++) {
        var display = displays[idx];
        if (number41.includes(display)) {
          number41 = number41.replace(display, EMPTY2);
          isCurrency = true;
          break;
        }
      }
    }
    if (isCurrency) {
      var cleanNumber = cleanNegativePattern2(number41, info.numbers.currency.patterns) || cleanNegativePattern2(number41, info.numbers.accounting.patterns);
      if (cleanNumber) {
        negative = true;
        number41 = cleanNumber;
      }
    }
  }
  return {
    number: number41,
    negative
  };
}
function cleanLiterals2(number41, formatOptions3) {
  var literals2 = formatOptions3.literals;
  var result = number41;
  if (literals2) {
    for (var idx = 0; idx < literals2.length; idx++) {
      result = result.replace(literals2[idx], EMPTY2);
    }
  }
  return result;
}
function parseNumber2(value2, locale, format3) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  if (format3 === void 0)
    format3 = {};
  if (!value2 && value2 !== 0) {
    return null;
  }
  if (isNumber2(value2)) {
    return value2;
  }
  var info = localeInfo2(locale);
  var symbols = info.numbers.symbols;
  var number41 = value2.toString();
  var formatOptions3 = format3 || {};
  var isPercent;
  if (isString3(format3)) {
    formatOptions3 = { format: format3 };
    setFormatLiterals2(formatOptions3);
    number41 = cleanLiterals2(number41, formatOptions3);
    setStyleOptions2(formatOptions3, info);
  }
  if (formatOptions3.style === PERCENT2 || number41.indexOf(symbols.percentSign) > -1) {
    number41 = number41.replace(symbols.percentSign, EMPTY2);
    isPercent = true;
  }
  if (exponentRegExp2.test(number41)) {
    number41 = parseFloat(number41.replace(symbols.decimal, POINT2));
    return isNaN(number41) ? null : number41;
  }
  var ref = cleanCurrencyNumber2(number41, info, formatOptions3);
  var negativeCurrency = ref.negative;
  var currencyNumber = ref.number;
  number41 = String(currencyNumber).trim();
  var negativeSignIndex = number41.indexOf("-");
  if (negativeSignIndex > 0) {
    return null;
  }
  var isNegative = negativeSignIndex > -1;
  isNegative = negativeCurrency !== void 0 ? negativeCurrency : isNegative;
  number41 = number41.replace("-", EMPTY2).replace(nonBreakingSpaceRegExp2, " ").split(symbols.group.replace(nonBreakingSpaceRegExp2, " ")).join(EMPTY2).replace(symbols.decimal, POINT2);
  number41 = parseFloat(number41);
  if (isNaN(number41)) {
    number41 = null;
  } else if (isNegative) {
    number41 *= -1;
  }
  if (number41 && isPercent) {
    number41 /= 100;
  }
  return number41;
}

// node_modules/@telerik/kendo-intl/dist/es/common/format-string.js
var formatRegExp7 = /\{(\d+)}/g;
function formatString2(format3) {
  var values2 = arguments;
  return format3.replace(formatRegExp7, function(match, index) {
    var value2 = values2[parseInt(index, 10) + 1];
    return value2;
  });
}

// node_modules/@telerik/kendo-intl/dist/es/dates/date-pattern.js
var REMOVAL_PENALTY2 = 120;
var ADDITION_PENALTY2 = 20;
var LENGHT_DELTA2 = [2, 1, 5, 3, 4];
var LONG_LESS_PENALTY_DELTA2 = -2;
var SHORT_LESS_PENALTY_DELTA2 = -1;
var SHORT_MORE_PENALTY_DELTA2 = 1;
var LONG_MORE_PENALTY_DELTA2 = 2;
var PENALTIES2 = {};
PENALTIES2[LONG_LESS_PENALTY_DELTA2.toString()] = 8;
PENALTIES2[SHORT_LESS_PENALTY_DELTA2.toString()] = 6;
PENALTIES2[LONG_MORE_PENALTY_DELTA2.toString()] = 6;
PENALTIES2[SHORT_MORE_PENALTY_DELTA2.toString()] = 3;
var VALUE_FORMAT_LENGTH2 = {
  numeric: 1,
  "2-digit": 2,
  short: 3,
  long: 4,
  narrow: 5
};
var TIME_SPECIFIERS_REGEX2 = /[hHmsSzZoOvVxX]/;
function getHourSpecifier2(options2) {
  return options2.hour12 ? "h" : "H";
}
var DATE_OPTIONS_MAP2 = [{
  key: "era",
  specifier: "G"
}, {
  key: "year",
  specifier: "y"
}, {
  key: "month",
  specifier: "M"
}, {
  key: "day",
  specifier: "d"
}, {
  key: "weekday",
  specifier: "E"
}, {
  key: "hour",
  getSpecifier: getHourSpecifier2
}, {
  key: "minute",
  specifier: "m"
}, {
  key: "second",
  specifier: "s"
}, {
  key: "timeZoneName",
  specifier: "z"
}];
var STAND_ALONE_SPECIFIERS2 = {
  e: "c",
  E: "c",
  M: "L",
  Q: "q"
};
var specifiersRegex2 = {};
var resolvedFormats2 = {};
function getSpecifierRegex2(specifier) {
  if (!specifiersRegex2[specifier]) {
    specifiersRegex2[specifier] = new RegExp(specifier + "+");
  }
  return specifiersRegex2[specifier];
}
function skeletonSpecifiers2(skeleton) {
  var result = [];
  var current = skeleton.charAt(0);
  var specifier = current;
  for (var idx = 1; idx < skeleton.length; idx++) {
    var character = skeleton.charAt(idx);
    if (character === specifier) {
      current += character;
    } else {
      result.push(current);
      current = specifier = character;
    }
  }
  result.push(current);
  return result;
}
function findBestMatch2(specifiers, availableFormats) {
  var specifiersLength = specifiers.length;
  var maxScore = -Number.MAX_VALUE;
  var bestMatches, result;
  for (var format3 in availableFormats) {
    var matches = [];
    var currentFormat = format3.replace("v", "z");
    var score = 0;
    for (var idx = 0; idx < specifiersLength; idx++) {
      var specifier = specifiers[idx];
      var specifierRegex = getSpecifierRegex2(specifier[0]);
      var match = (specifierRegex.exec(currentFormat) || [])[0];
      if (!match) {
        score -= REMOVAL_PENALTY2;
      } else {
        currentFormat = currentFormat.replace(match, EMPTY2);
        if (match.length !== specifier.length) {
          var delta = Math.max(Math.min(LENGHT_DELTA2[match.length] - LENGHT_DELTA2[specifier.length], 2), -2);
          score -= PENALTIES2[delta];
        }
      }
      matches.push(match);
      if (score < maxScore) {
        break;
      }
    }
    if (currentFormat.length) {
      score -= skeletonSpecifiers2(currentFormat).length * ADDITION_PENALTY2;
    }
    if (score > maxScore) {
      maxScore = score;
      bestMatches = matches;
      result = availableFormats[format3];
    }
  }
  result = result.replace("v", "z");
  for (var idx$1 = 0; idx$1 < specifiersLength; idx$1++) {
    var bestMatch = bestMatches[idx$1];
    if (bestMatch && bestMatch !== specifiers[idx$1]) {
      var matchSpecifier = bestMatches[idx$1][0];
      result = result.replace(getSpecifierRegex2(matchSpecifier), specifiers[idx$1]);
      if (STAND_ALONE_SPECIFIERS2[matchSpecifier]) {
        result = result.replace(getSpecifierRegex2(STAND_ALONE_SPECIFIERS2[matchSpecifier]), specifiers[idx$1]);
      }
    }
  }
  return result;
}
function cacheFormat2(skeleton, format3, locale) {
  if (!resolvedFormats2[locale]) {
    resolvedFormats2[locale] = {};
  }
  resolvedFormats2[locale][skeleton] = format3;
}
function skeletonFormat2(skeleton, info) {
  var availableFormats = info.calendar.dateTimeFormats.availableFormats;
  if (availableFormats[skeleton]) {
    return availableFormats[skeleton];
  }
  if (resolvedFormats2[info.name] && resolvedFormats2[info.name][skeleton]) {
    return resolvedFormats2[info.name][skeleton];
  }
  var timeStartIndex = skeleton.search(TIME_SPECIFIERS_REGEX2);
  var result;
  if (timeStartIndex > 0) {
    var dateSkeleton = skeleton.substr(0, timeStartIndex);
    var timeSkeleton = skeleton.substr(timeStartIndex);
    result = formatString2(
      info.calendar.dateTimeFormats.short,
      //should be deterimed based on specifiers
      availableFormats[timeSkeleton] || findBestMatch2(skeletonSpecifiers2(timeSkeleton), availableFormats),
      availableFormats[dateSkeleton] || findBestMatch2(skeletonSpecifiers2(dateSkeleton), availableFormats)
    );
  } else {
    result = findBestMatch2(skeletonSpecifiers2(skeleton), availableFormats);
  }
  cacheFormat2(skeleton, result, info.name);
  return result;
}
function skeletonFromOptions2(options2) {
  var result = [];
  for (var idx = 0; idx < DATE_OPTIONS_MAP2.length; idx++) {
    var option = DATE_OPTIONS_MAP2[idx];
    var field = option.key;
    var value2 = options2[field];
    if (value2) {
      var spcifier = option.specifier || option.getSpecifier(options2);
      result.push(spcifier.repeat(VALUE_FORMAT_LENGTH2[value2]));
    }
  }
  return result.join(EMPTY2);
}
function datePattern2(format3, info) {
  var calendar = info.calendar;
  var result;
  if (isString3(format3)) {
    if (calendar.patterns[format3]) {
      result = calendar.patterns[format3];
    } else {
      result = format3;
    }
  } else if (format3) {
    if (format3.pattern) {
      return format3.pattern;
    }
    var skeleton = format3.skeleton;
    if (!skeleton) {
      if (format3.datetime) {
        result = formatString2(calendar.dateTimeFormats[format3.datetime], calendar.timeFormats[format3.datetime], calendar.dateFormats[format3.datetime]);
      } else if (format3.date) {
        result = calendar.dateFormats[format3.date];
      } else if (format3.time) {
        result = calendar.timeFormats[format3.time];
      } else {
        skeleton = skeletonFromOptions2(format3);
      }
    }
    if (skeleton) {
      result = skeletonFormat2(skeleton, info);
    }
  }
  if (!result) {
    result = calendar.patterns.d;
  }
  return result;
}

// node_modules/@telerik/kendo-intl/dist/es/dates/date-name-type.js
function dateNameType2(formatLength) {
  var nameType;
  if (formatLength <= 3) {
    nameType = "abbreviated";
  } else if (formatLength === 4) {
    nameType = "wide";
  } else if (formatLength === 5) {
    nameType = "narrow";
  } else if (formatLength === 6) {
    nameType = "short";
  }
  return nameType;
}

// node_modules/@telerik/kendo-intl/dist/es/dates/format-names.js
function formatNames2(locale, type, formatLength, standAlone, lower) {
  return dateFormatNames2(locale, {
    type,
    nameType: dateNameType2(formatLength),
    standAlone,
    lower
  });
}

// node_modules/@telerik/kendo-intl/dist/es/common/is-date.js
function isFunction3(fun) {
  return typeof fun === "function";
}
function isDate3(value2) {
  return Boolean(value2) && isFunction3(value2.getTime) && isFunction3(value2.getMonth);
}

// node_modules/@telerik/kendo-intl/dist/es/dates/constants.js
var MONTH2 = "month";
var HOUR2 = "hour";
var ZONE2 = "zone";
var WEEKDAY2 = "weekday";
var QUARTER2 = "quarter";
var DATE_FIELD_MAP2 = {
  "G": "era",
  "y": "year",
  "q": QUARTER2,
  "Q": QUARTER2,
  "M": MONTH2,
  "L": MONTH2,
  "d": "day",
  "E": WEEKDAY2,
  "c": WEEKDAY2,
  "e": WEEKDAY2,
  "h": HOUR2,
  "H": HOUR2,
  "k": HOUR2,
  "K": HOUR2,
  "m": "minute",
  "s": "second",
  "S": "millisecond",
  "a": "dayperiod",
  "x": ZONE2,
  "X": ZONE2,
  "z": ZONE2,
  "Z": ZONE2
};
var dateFormatRegExp2 = /d{1,2}|E{1,6}|e{1,6}|c{3,6}|c{1}|M{1,5}|L{1,5}|y{1,4}|H{1,2}|h{1,2}|k{1,2}|K{1,2}|m{1,2}|a{1,5}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|x{1,5}|X{1,5}|G{1,5}|q{1,5}|Q{1,5}|"[^"]*"|'[^']*'/g;

// node_modules/@telerik/kendo-intl/dist/es/dates/format-date.js
function formatDayOfWeekIndex2(day, formatLength, localeInfo3) {
  var firstDayIndex = firstDay2(localeInfo3);
  var dayIndex;
  if (day < firstDayIndex) {
    dayIndex = 7 - firstDayIndex + day;
  } else {
    dayIndex = day - firstDayIndex;
  }
  return dayIndex + 1;
}
function formatMonth2(month, formatLength, info, standAlone) {
  if (formatLength <= 2) {
    return pad2(month + 1, formatLength);
  }
  return formatNames2(info, "months", formatLength, standAlone)[month];
}
function formatQuarter2(date2, formatLength, info, standAlone) {
  var quarter = Math.floor(date2.getMonth() / 3);
  if (formatLength < 3) {
    return quarter + 1;
  }
  return formatNames2(info, "quarters", formatLength, standAlone)[quarter];
}
function formatTimeZone2(date2, info, options2) {
  var shortHours = options2.shortHours;
  var optionalMinutes = options2.optionalMinutes;
  var separator2 = options2.separator;
  var localizedName = options2.localizedName;
  var zZeroOffset = options2.zZeroOffset;
  var offset4 = date2.getTimezoneOffset() / 60;
  if (offset4 === 0 && zZeroOffset) {
    return "Z";
  }
  var sign = offset4 <= 0 ? "+" : "-";
  var hoursMinutes = Math.abs(offset4).toString().split(".");
  var minutes = hoursMinutes[1] || 0;
  var result = sign + (shortHours ? hoursMinutes[0] : pad2(hoursMinutes[0], 2));
  if (minutes || !optionalMinutes) {
    result += (separator2 ? ":" : EMPTY2) + pad2(minutes, 2);
  }
  if (localizedName) {
    var localizedFormat = offset4 === 0 ? info.calendar.gmtZeroFormat : info.calendar.gmtFormat;
    result = formatString2(localizedFormat, result);
  }
  return result;
}
function formatDayOfWeek2(date2, formatLength, info, standAlone) {
  var result;
  if (formatLength < 3) {
    result = formatDayOfWeekIndex2(date2.getDay(), formatLength, info);
  } else {
    result = formatNames2(info, "days", formatLength, standAlone)[date2.getDay()];
  }
  return result;
}
var formatters2 = {};
formatters2.d = function(date2, formatLength) {
  return pad2(date2.getDate(), formatLength);
};
formatters2.E = function(date2, formatLength, info) {
  return formatNames2(info, "days", formatLength)[date2.getDay()];
};
formatters2.M = function(date2, formatLength, info) {
  return formatMonth2(date2.getMonth(), formatLength, info, false);
};
formatters2.L = function(date2, formatLength, info) {
  return formatMonth2(date2.getMonth(), formatLength, info, true);
};
formatters2.y = function(date2, formatLength) {
  var year = date2.getFullYear();
  if (formatLength === 2) {
    year = year % 100;
  }
  return pad2(year, formatLength);
};
formatters2.h = function(date2, formatLength) {
  var hours = date2.getHours() % 12 || 12;
  return pad2(hours, formatLength);
};
formatters2.H = function(date2, formatLength) {
  return pad2(date2.getHours(), formatLength);
};
formatters2.k = function(date2, formatLength) {
  return pad2(date2.getHours() || 24, formatLength);
};
formatters2.K = function(date2, formatLength) {
  return pad2(date2.getHours() % 12, formatLength);
};
formatters2.m = function(date2, formatLength) {
  return pad2(date2.getMinutes(), formatLength);
};
formatters2.s = function(date2, formatLength) {
  return pad2(date2.getSeconds(), formatLength);
};
formatters2.S = function(date2, formatLength) {
  var milliseconds = date2.getMilliseconds();
  var result;
  if (milliseconds !== 0) {
    result = pad2(String(milliseconds / 1e3).split(".")[1].substr(0, formatLength), formatLength, true);
  } else {
    result = pad2(EMPTY2, formatLength);
  }
  return result;
};
formatters2.a = function(date2, formatLength, info) {
  return formatNames2(info, "dayPeriods", formatLength)[date2.getHours() < 12 ? "am" : "pm"];
};
formatters2.z = function(date2, formatLength, info) {
  return formatTimeZone2(date2, info, {
    shortHours: formatLength < 4,
    optionalMinutes: formatLength < 4,
    separator: true,
    localizedName: true
  });
};
formatters2.Z = function(date2, formatLength, info) {
  return formatTimeZone2(date2, info, {
    separator: formatLength > 3,
    localizedName: formatLength === 4,
    zZeroOffset: formatLength === 5
  });
};
formatters2.x = function(date2, formatLength, info) {
  return formatTimeZone2(date2, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5
  });
};
formatters2.X = function(date2, formatLength, info) {
  return formatTimeZone2(date2, info, {
    optionalMinutes: formatLength === 1,
    separator: formatLength === 3 || formatLength === 5,
    zZeroOffset: true
  });
};
formatters2.G = function(date2, formatLength, info) {
  var era = date2.getFullYear() >= 0 ? 1 : 0;
  return formatNames2(info, "eras", formatLength)[era];
};
formatters2.e = formatDayOfWeek2;
formatters2.c = function(date2, formatLength, info) {
  return formatDayOfWeek2(date2, formatLength, info, true);
};
formatters2.q = function(date2, formatLength, info) {
  return formatQuarter2(date2, formatLength, info, true);
};
formatters2.Q = formatQuarter2;
function formatDate4(date2, format3, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  if (!isDate3(date2)) {
    if (date2 === void 0 || date2 === null) {
      return EMPTY2;
    }
    return date2;
  }
  var info = localeInfo2(locale);
  var pattern = datePattern2(format3, info);
  return pattern.replace(dateFormatRegExp2, function(match) {
    var formatLength = match.length;
    var result;
    if (match.includes("'") || match.includes('"')) {
      result = match.slice(1, formatLength - 1);
    } else {
      result = formatters2[match[0]](date2, formatLength, info);
    }
    return result;
  });
}

// node_modules/@telerik/kendo-intl/dist/es/dates/time-utils.js
function convertTimeZone2(date2, fromOffset, toOffset) {
  var fromLocalOffset = date2.getTimezoneOffset();
  var offsetDate = new Date(date2.getTime() + (fromOffset - toOffset) * 6e4);
  var toLocalOffset = offsetDate.getTimezoneOffset();
  return new Date(offsetDate.getTime() + (toLocalOffset - fromLocalOffset) * 6e4);
}
function adjustDST3(date2, hours) {
  if (!hours && date2.getHours() === 23) {
    date2.setHours(date2.getHours() + 2);
  }
}

// node_modules/@telerik/kendo-intl/dist/es/dates/parse-date.js
var timeZoneOffsetRegExp2 = /([+|\-]\d{1,2})(:?)(\d{2})?/;
var dateRegExp3 = /^\/Date\((.*?)\)\/$/;
var offsetRegExp2 = /[+-]\d*/;
var numberRegExp2 = {
  2: /^\d{1,2}/,
  3: /^\d{1,3}/,
  4: /^\d{4}/
};
var numberRegex2 = /\d+/;
var PLACEHOLDER4 = "{0}";
var leadingSpacesRegex2 = /^ */;
var trailingSpacesRegex2 = / *$/;
var standardDateFormats2 = [
  "yyyy/MM/dd HH:mm:ss",
  "yyyy/MM/dd HH:mm",
  "yyyy/MM/dd",
  "E MMM dd yyyy HH:mm:ss",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSXXX",
  "yyyy-MM-ddTHH:mm:ss.SSXXX",
  "yyyy-MM-ddTHH:mm:ssXXX",
  "yyyy-MM-ddTHH:mm:ss.SSSSSSS",
  "yyyy-MM-ddTHH:mm:ss.SSS",
  "yyyy-MM-ddTHH:mmXXX",
  "yyyy-MM-ddTHH:mmX",
  "yyyy-MM-ddTHH:mm:ss",
  "yyyy-MM-ddTHH:mm",
  "yyyy-MM-dd HH:mm:ss",
  "yyyy-MM-dd HH:mm",
  "yyyy-MM-dd",
  "HH:mm:ss",
  "HH:mm"
];
var FORMATS_SEQUENCE2 = ["G", "g", "F", "Y", "y", "M", "m", "D", "d", "y", "T", "t"];
var TWO_DIGIT_YEAR_MAX2 = 2029;
function outOfRange2(value2, start2, end2) {
  return !(value2 >= start2 && value2 <= end2);
}
function lookAhead2(match, state) {
  var format3 = state.format;
  var idx = state.idx;
  var i = 0;
  while (format3[idx] === match) {
    i++;
    idx++;
  }
  if (i > 0) {
    idx -= 1;
  }
  state.idx = idx;
  return i;
}
function getNumber2(size, state) {
  var regex = size ? numberRegExp2[size] || new RegExp("^\\d{1," + size + "}") : numberRegex2, match = state.value.substr(state.valueIdx, size).match(regex);
  if (match) {
    match = match[0];
    state.valueIdx += match.length;
    return parseInt(match, 10);
  }
  return null;
}
function getIndexByName2(names, state, lower) {
  var i = 0, length = names.length, name2, nameLength, matchLength = 0, matchIdx = 0, subValue;
  for (; i < length; i++) {
    name2 = names[i];
    nameLength = name2.length;
    subValue = state.value.substr(state.valueIdx, nameLength);
    if (lower) {
      subValue = subValue.toLowerCase();
    }
    if (subValue === name2 && nameLength > matchLength) {
      matchLength = nameLength;
      matchIdx = i;
    }
  }
  if (matchLength) {
    state.valueIdx += matchLength;
    return matchIdx + 1;
  }
  return null;
}
function checkLiteral2(state) {
  var result = false;
  if (state.value.charAt(state.valueIdx) === state.format[state.idx]) {
    state.valueIdx++;
    result = true;
  }
  return result;
}
function calendarGmtFormats2(calendar) {
  var gmtFormat = calendar.gmtFormat;
  var gmtZeroFormat = calendar.gmtZeroFormat;
  if (!gmtFormat) {
    throw errors2.NoGMTInfo.error();
  }
  return [gmtFormat.replace(PLACEHOLDER4, EMPTY2).toLowerCase(), gmtZeroFormat.replace(PLACEHOLDER4, EMPTY2).toLowerCase()];
}
function parseTimeZoneOffset2(state, info, options2) {
  var shortHours = options2.shortHours;
  var noSeparator = options2.noSeparator;
  var optionalMinutes = options2.optionalMinutes;
  var localizedName = options2.localizedName;
  var zLiteral = options2.zLiteral;
  state.UTC = true;
  if (zLiteral && state.value.charAt(state.valueIdx) === "Z") {
    state.valueIdx++;
    return false;
  }
  if (localizedName && !getIndexByName2(calendarGmtFormats2(info.calendar), state, true)) {
    return true;
  }
  var matches = timeZoneOffsetRegExp2.exec(state.value.substr(state.valueIdx, 6));
  if (!matches) {
    return !localizedName;
  }
  var hoursMatch = matches[1];
  var minutesMatch = matches[3];
  var hoursOffset = parseInt(hoursMatch, 10);
  var separator2 = matches[2];
  var minutesOffset = parseInt(minutesMatch, 10);
  if (isNaN(hoursOffset) || !shortHours && hoursMatch.length !== 3 || !optionalMinutes && isNaN(minutesOffset) || noSeparator && separator2) {
    return true;
  }
  if (isNaN(minutesOffset)) {
    minutesOffset = null;
  }
  if (outOfRange2(hoursOffset, -12, 13) || minutesOffset && outOfRange2(minutesOffset, 0, 59)) {
    return true;
  }
  state.valueIdx += matches[0].length;
  state.hoursOffset = hoursOffset;
  state.minutesOffset = minutesOffset;
}
function parseMonth2(ch, state, info) {
  var count2 = lookAhead2(ch, state);
  var names = formatNames2(info, "months", count2, ch === "L", true);
  var month = count2 < 3 ? getNumber2(2, state) : getIndexByName2(names, state, true);
  if (month === null || outOfRange2(month, 1, 12)) {
    return true;
  }
  state.month = month - 1;
}
function parseDayOfWeek2(ch, state, info) {
  var count2 = lookAhead2(ch, state);
  var names = formatNames2(info, "days", count2, ch === "c", true);
  var dayOfWeek2 = count2 < 3 ? getNumber2(1, state) : getIndexByName2(names, state, true);
  if (!dayOfWeek2 && dayOfWeek2 !== 0 || outOfRange2(dayOfWeek2, 1, 7)) {
    return true;
  }
}
var parsers2 = {};
parsers2.d = function(state) {
  lookAhead2("d", state);
  var day = getNumber2(2, state);
  if (day === null || outOfRange2(day, 1, 31)) {
    return true;
  }
  if (state.day === null) {
    state.day = day;
  }
};
parsers2.E = function(state, info) {
  var count2 = lookAhead2("E", state);
  var dayOfWeek2 = getIndexByName2(formatNames2(info, "days", count2, false, true), state, true);
  if (dayOfWeek2 === null) {
    return true;
  }
};
parsers2.M = function(state, info) {
  return parseMonth2("M", state, info);
};
parsers2.L = function(state, info) {
  return parseMonth2("L", state, info);
};
parsers2.y = function(state) {
  var count2 = lookAhead2("y", state);
  var year = getNumber2(count2 === 1 ? void 0 : count2, state);
  if (year === null) {
    return true;
  }
  if (count2 === 2) {
    var currentYear = (/* @__PURE__ */ new Date()).getFullYear();
    year = currentYear - currentYear % 100 + year;
    if (year > TWO_DIGIT_YEAR_MAX2) {
      year -= 100;
    }
  }
  state.year = year;
};
parsers2.h = function(state) {
  lookAhead2("h", state);
  var hours = getNumber2(2, state);
  if (hours === 12) {
    hours = 0;
  }
  if (hours === null || outOfRange2(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers2.K = function(state) {
  lookAhead2("K", state);
  var hours = getNumber2(2, state);
  if (hours === null || outOfRange2(hours, 0, 11)) {
    return true;
  }
  state.hours = hours;
};
parsers2.a = function(state, info) {
  var count2 = lookAhead2("a", state);
  var periodFormats = formatNames2(info, "dayPeriods", count2, false, true);
  var pmHour = getIndexByName2([periodFormats.pm], state, true);
  if (!pmHour && !getIndexByName2([periodFormats.am], state, true)) {
    return true;
  }
  state.pmHour = pmHour;
};
parsers2.H = function(state) {
  lookAhead2("H", state);
  var hours = getNumber2(2, state);
  if (hours === null || outOfRange2(hours, 0, 23)) {
    return true;
  }
  state.hours = hours;
};
parsers2.k = function(state) {
  lookAhead2("k", state);
  var hours = getNumber2(2, state);
  if (hours === null || outOfRange2(hours, 1, 24)) {
    return true;
  }
  state.hours = hours === 24 ? 0 : hours;
};
parsers2.m = function(state) {
  lookAhead2("m", state);
  var minutes = getNumber2(2, state);
  if (minutes === null || outOfRange2(minutes, 0, 59)) {
    return true;
  }
  state.minutes = minutes;
};
parsers2.s = function(state) {
  lookAhead2("s", state);
  var seconds = getNumber2(2, state);
  if (seconds === null || outOfRange2(seconds, 0, 59)) {
    return true;
  }
  state.seconds = seconds;
};
parsers2.S = function(state) {
  var count2 = lookAhead2("S", state);
  var match = state.value.substr(state.valueIdx, count2);
  var milliseconds = null;
  if (!isNaN(parseInt(match, 10))) {
    milliseconds = parseFloat("0." + match, 10);
    milliseconds = round2(milliseconds, 3);
    milliseconds *= 1e3;
    state.valueIdx += count2;
  }
  if (milliseconds === null || outOfRange2(milliseconds, 0, 999)) {
    return true;
  }
  state.milliseconds = milliseconds;
};
parsers2.z = function(state, info) {
  var count2 = lookAhead2("z", state);
  var shortFormat = count2 < 4;
  var invalid = parseTimeZoneOffset2(state, info, {
    shortHours: shortFormat,
    optionalMinutes: shortFormat,
    localizedName: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers2.Z = function(state, info) {
  var count2 = lookAhead2("Z", state);
  var invalid = parseTimeZoneOffset2(state, info, {
    noSeparator: count2 < 4,
    zLiteral: count2 === 5,
    localizedName: count2 === 4
  });
  if (invalid) {
    return invalid;
  }
};
parsers2.x = function(state, info) {
  var count2 = lookAhead2("x", state);
  var invalid = parseTimeZoneOffset2(state, info, {
    noSeparator: count2 !== 3 && count2 !== 5,
    optionalMinutes: count2 === 1
  });
  if (invalid) {
    return invalid;
  }
};
parsers2.X = function(state, info) {
  var count2 = lookAhead2("X", state);
  var invalid = parseTimeZoneOffset2(state, info, {
    noSeparator: count2 !== 3 && count2 !== 5,
    optionalMinutes: count2 === 1,
    zLiteral: true
  });
  if (invalid) {
    return invalid;
  }
};
parsers2.G = function(state, info) {
  var count2 = lookAhead2("G", state);
  var eras = formatNames2(info, "eras", count2, false, true);
  var era = getIndexByName2([eras[0], eras[1]], state, true);
  if (era === null) {
    return true;
  }
};
parsers2.e = function(state, info) {
  return parseDayOfWeek2("e", state, info);
};
parsers2.c = function(state, info) {
  return parseDayOfWeek2("c", state, info);
};
function createDate3(state) {
  var year = state.year;
  var month = state.month;
  var day = state.day;
  var hours = state.hours;
  var minutes = state.minutes;
  var seconds = state.seconds;
  var milliseconds = state.milliseconds;
  var pmHour = state.pmHour;
  var UTC = state.UTC;
  var hoursOffset = state.hoursOffset;
  var minutesOffset = state.minutesOffset;
  var hasTime = hours !== null || minutes !== null || seconds || null;
  var date2 = /* @__PURE__ */ new Date();
  var result;
  if (year === null && month === null && day === null && hasTime) {
    year = date2.getFullYear();
    month = date2.getMonth();
    day = date2.getDate();
  } else {
    if (year === null) {
      year = date2.getFullYear();
    }
    if (day === null) {
      day = 1;
    }
  }
  if (pmHour && hours < 12) {
    hours += 12;
  }
  if (UTC) {
    if (hoursOffset) {
      hours += -hoursOffset;
    }
    if (minutesOffset) {
      minutes += -minutesOffset * (hoursOffset < 0 ? -1 : 1);
    }
    result = new Date(Date.UTC(year, month, day, hours, minutes, seconds, milliseconds));
  } else {
    result = new Date(year, month, day, hours, minutes, seconds, milliseconds);
    adjustDST3(result, hours);
  }
  if (year < 100) {
    result.setFullYear(year);
  }
  if (result.getDate() !== day && UTC === void 0) {
    return null;
  }
  return result;
}
function addFormatSpaces2(value2, format3) {
  var leadingSpaces = leadingSpacesRegex2.exec(format3)[0];
  var trailingSpaces = trailingSpacesRegex2.exec(format3)[0];
  return "" + leadingSpaces + value2 + trailingSpaces;
}
function parseExact2(value2, format3, info) {
  var pattern = datePattern2(format3, info).split(EMPTY2);
  var state = {
    format: pattern,
    idx: 0,
    value: addFormatSpaces2(value2, format3),
    valueIdx: 0,
    year: null,
    month: null,
    day: null,
    hours: null,
    minutes: null,
    seconds: null,
    milliseconds: null
  };
  var length = pattern.length;
  var literal = false;
  for (; state.idx < length; state.idx++) {
    var ch = pattern[state.idx];
    if (literal) {
      if (ch === "'") {
        literal = false;
      }
      checkLiteral2(state);
    } else {
      if (parsers2[ch]) {
        var invalid = parsers2[ch](state, info);
        if (invalid) {
          return null;
        }
      } else if (ch === "'") {
        literal = true;
        checkLiteral2(state);
      } else if (!checkLiteral2(state)) {
        return null;
      }
    }
  }
  if (state.valueIdx < value2.length) {
    return null;
  }
  return createDate3(state) || null;
}
function parseMicrosoftDateOffset2(offset4) {
  var sign = offset4.substr(0, 1) === "-" ? -1 : 1;
  var result = offset4.substring(1);
  result = parseInt(result.substr(0, 2), 10) * 60 + parseInt(result.substring(2), 10);
  return sign * result;
}
function parseMicrosoftDateFormat2(value2) {
  if (value2 && value2.indexOf("/D") === 0) {
    var date2 = dateRegExp3.exec(value2);
    if (date2) {
      date2 = date2[1];
      var tzoffset = offsetRegExp2.exec(date2.substring(1));
      date2 = new Date(parseInt(date2, 10));
      if (tzoffset) {
        tzoffset = parseMicrosoftDateOffset2(tzoffset[0]);
        date2 = convertTimeZone2(date2, date2.getTimezoneOffset(), 0);
        date2 = convertTimeZone2(date2, 0, -1 * tzoffset);
      }
      return date2;
    }
  }
}
function defaultFormats2(calendar) {
  var formats = [];
  var patterns = calendar.patterns;
  var length = FORMATS_SEQUENCE2.length;
  for (var idx = 0; idx < length; idx++) {
    formats.push(patterns[FORMATS_SEQUENCE2[idx]]);
  }
  return formats.concat(standardDateFormats2);
}
function parseDate3(value2, formats, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  if (!value2) {
    return null;
  }
  if (isDate3(value2)) {
    return value2;
  }
  var parseValue = String(value2).trim();
  var date2 = parseMicrosoftDateFormat2(parseValue);
  if (date2) {
    return date2;
  }
  var info = localeInfo2(locale);
  var parseFormats = formats || defaultFormats2(info.calendar);
  parseFormats = Array.isArray(parseFormats) ? parseFormats : [parseFormats];
  var length = parseFormats.length;
  for (var idx = 0; idx < length; idx++) {
    date2 = parseExact2(parseValue, parseFormats[idx], info);
    if (date2) {
      return date2;
    }
  }
  return date2;
}

// node_modules/@telerik/kendo-intl/dist/es/dates/split-date-format.js
var NAME_TYPES2 = {
  month: {
    type: "months",
    minLength: 3,
    standAlone: "L"
  },
  quarter: {
    type: "quarters",
    minLength: 3,
    standAlone: "q"
  },
  weekday: {
    type: "days",
    minLength: {
      E: 0,
      c: 3,
      e: 3
    },
    standAlone: "c"
  },
  dayperiod: {
    type: "dayPeriods",
    minLength: 0
  },
  era: {
    type: "eras",
    minLength: 0
  }
};
var LITERAL2 = "literal";
function addLiteral2(parts, value2) {
  var lastPart = parts[parts.length - 1];
  if (lastPart && lastPart.type === LITERAL2) {
    lastPart.pattern += value2;
  } else {
    parts.push({
      type: LITERAL2,
      pattern: value2
    });
  }
}
function isHour122(pattern) {
  return pattern === "h" || pattern === "K";
}
function splitDateFormat2(format3, locale) {
  if (locale === void 0)
    locale = DEFAULT_LOCALE2;
  var info = localeInfo2(locale);
  var pattern = datePattern2(format3, info);
  var parts = [];
  var lastIndex = dateFormatRegExp2.lastIndex = 0;
  var match = dateFormatRegExp2.exec(pattern);
  while (match) {
    var value2 = match[0];
    if (lastIndex < match.index) {
      addLiteral2(parts, pattern.substring(lastIndex, match.index));
    }
    if (value2.startsWith('"') || value2.startsWith("'")) {
      addLiteral2(parts, value2);
    } else {
      var specifier = value2[0];
      var type = DATE_FIELD_MAP2[specifier];
      var part = {
        type,
        pattern: value2
      };
      if (type === "hour") {
        part.hour12 = isHour122(value2);
      }
      var names = NAME_TYPES2[type];
      if (names) {
        var minLength = isNumber2(names.minLength) ? names.minLength : names.minLength[specifier];
        var patternLength = value2.length;
        if (patternLength >= minLength) {
          part.names = {
            type: names.type,
            nameType: dateNameType2(patternLength),
            standAlone: names.standAlone === specifier
          };
        }
      }
      parts.push(part);
    }
    lastIndex = dateFormatRegExp2.lastIndex;
    match = dateFormatRegExp2.exec(pattern);
  }
  if (lastIndex < pattern.length) {
    addLiteral2(parts, pattern.substring(lastIndex));
  }
  return parts;
}

// node_modules/@telerik/kendo-intl/dist/es/format.js
var formatRegExp8 = /\{(\d+)(:[^\}]+)?\}/g;
function toString2(value2, format3, locale) {
  if (format3) {
    if (isDate3(value2)) {
      return formatDate4(value2, format3, locale);
    } else if (isNumber2(value2)) {
      return formatNumber2(value2, format3, locale);
    }
  }
  return value2 !== void 0 && value2 !== null ? value2 : EMPTY2;
}
function format2(format3, values2, locale) {
  return format3.replace(formatRegExp8, function(match, index, placeholderFormat) {
    var value2 = values2[parseInt(index, 10)];
    return toString2(value2, placeholderFormat ? placeholderFormat.substring(1) : EMPTY2, locale);
  });
}

// node_modules/@progress/kendo-recurrence/dist/es/utils/serialize-date-time.js
var serializeDates = function(values2) {
  if (!values2 || values2.length === 0) {
    return "";
  }
  var timezone = values2[0].timezone;
  var isUTC = timezone === "Etc/UTC";
  var suffix = isUTC ? "Z" : "";
  var parts = values2.map(function(val) {
    return formatDate4(val, "yyyyMMddTHHmmss") + suffix;
  });
  var header = timezone && !isUTC ? ";TZID=" + timezone : "";
  return header + ":" + parts.join(",") + " ";
};

// node_modules/@progress/kendo-recurrence/dist/es/utils/duration.js
var duration = function(start2, end2) {
  return end2.getTime() - start2.getTime();
};

// node_modules/@progress/kendo-recurrence/dist/es/utils.js
var isOutOfRange = function(value2, range3) {
  if (!range3) {
    return false;
  }
  var start2 = range3.start, end2 = range3.end;
  return value2 < start2 || value2 > end2 || value2 === 0 && start2 < 0;
};
var acsendingComparer = function(a, b) {
  return a - b;
};
var parseArray = function(list, range3) {
  var result = [];
  for (var idx = 0; idx < list.length; idx++) {
    var value2 = parseInt(list[idx], 10);
    if (isNaN(value2) || isOutOfRange(value2, range3)) {
      return [];
    }
    result.push(value2);
  }
  return result.sort(acsendingComparer);
};
var DATE_FORMATS = [
  "yyyyMMddTHHmmssSSSXXX",
  "yyyyMMddTHHmmssXXX",
  "yyyyMMddTHHmmss",
  "yyyyMMddTHHmm",
  "yyyyMMddTHH",
  "yyyyMMdd"
];
function toUTCDateTime2(localDate) {
  return new Date(Date.UTC(localDate.getFullYear(), localDate.getMonth(), localDate.getDate(), localDate.getHours(), localDate.getMinutes(), localDate.getSeconds(), localDate.getMilliseconds()));
}
var parseISODate = function(value2, timezone) {
  var parsed = parseDate3(value2) || parseDate3(value2, DATE_FORMATS);
  if (!parsed) {
    return null;
  }
  var utcDate = timezone ? toUTCDateTime2(parsed) : parsed;
  return ZonedDate.fromUTCDate(utcDate, timezone || "Etc/UTC");
};
var WEEK_DAYS_IDX = {
  "SU": Day.Sunday,
  "MO": Day.Monday,
  "TU": Day.Tuesday,
  "WE": Day.Wednesday,
  "TH": Day.Thursday,
  "FR": Day.Friday,
  "SA": Day.Saturday
};
var parseWeekDay = function(weekDay) {
  return WEEK_DAYS_IDX[weekDay];
};
var parseWeekDayList = function(weekDays) {
  var result = [];
  for (var idx = 0; idx < weekDays.length; idx++) {
    var value2 = weekDays[idx];
    var day = parseWeekDay(value2.substring(value2.length - 2).toUpperCase());
    if (day === void 0) {
      return [];
    }
    result.push({
      offset: parseInt(value2.substring(0, value2.length - 2), 10) || 0,
      day
    });
  }
  return result;
};
var setDayOfWeek = function(date2, day, dir) {
  if (dir === void 0) {
    dir = 1;
  }
  day = (day - date2.getUTCDay() + 7 * dir) % 7;
  date2.setUTCDate(date2.getUTCDate() + day);
};
var normalizeDayIndex = function(weekDay, weekStart) {
  return weekDay + (weekDay < weekStart ? 7 : 0);
};

// node_modules/@progress/kendo-recurrence/dist/es/limitations.js
var numberSortPredicate = function(a, b) {
  return a - b;
};
var weekInMonth = function(date2, weekStart) {
  var firstWeekDay = toUTCDateTime2(firstDayOfMonth(date2)).getUTCDay();
  var firstWeekLength = 7 - (firstWeekDay + 7 - (weekStart || 7)) || 7;
  if (firstWeekLength < 0) {
    firstWeekLength += 7;
  }
  return Math.ceil((date2.getUTCDate() - firstWeekLength) / 7) + 1;
};
var weekInYear2 = function(date2, weekStart) {
  date2 = new Date(Date.UTC(date2.getUTCFullYear(), date2.getUTCMonth(), date2.getUTCDate()));
  var year = date2.getUTCFullYear();
  if (weekStart !== void 0) {
    setDayOfWeek(date2, weekStart, -1);
    date2.setUTCDate(date2.getUTCDate() + 4);
  } else {
    date2.setUTCDate(date2.getUTCDate() + (4 - (date2.getUTCDay() || 7)));
  }
  var days = Math.floor((date2.getTime() - Date.UTC(year, 0, 1, -6)) / 864e5);
  return 1 + Math.floor(days / 7);
};
var normalizeOffset = function(date2, rule, weekStart) {
  var offset4 = rule.offset;
  if (!offset4) {
    return weekInMonth(date2, weekStart);
  }
  var lastDate = new Date(Date.UTC(date2.getUTCFullYear(), date2.getUTCMonth() + 1, 0));
  var weeksInMonth = weekInMonth(lastDate, weekStart);
  var day = normalizeDayIndex(rule.day, weekStart);
  var skipFirst = day < normalizeDayIndex(new Date(Date.UTC(date2.getUTCFullYear(), date2.getUTCMonth(), 1)).getUTCDay(), weekStart);
  var skipLast = day > normalizeDayIndex(lastDate.getUTCDay(), weekStart);
  if (offset4 < 0) {
    offset4 = weeksInMonth + (offset4 + 1 - (skipLast ? 1 : 0));
  } else if (skipFirst) {
    offset4 += 1;
  }
  weeksInMonth -= skipLast ? 1 : 0;
  if (offset4 < (skipFirst ? 1 : 0) || offset4 > weeksInMonth) {
    return null;
  }
  return offset4;
};
var isInWeek = function(date2, rule, weekStart) {
  return weekInMonth(date2, weekStart) === normalizeOffset(date2, rule, weekStart);
};
var numberOfWeeks = function(date2, weekStart) {
  return weekInMonth(new Date(Date.UTC(date2.getUTCFullYear(), date2.getUTCMonth() + 1, 0)), weekStart);
};
var DAYS_IN_LEAPYEAR = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366];
var DAYS_IN_YEAR = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365];
var leapYear = function(year) {
  year = year.getUTCFullYear();
  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;
};
var dayInYear = function(date2) {
  var month = date2.getUTCMonth();
  var days = leapYear(date2) ? DAYS_IN_LEAPYEAR[month] : DAYS_IN_YEAR[month];
  return days + date2.getUTCDate();
};
var MONTHS2 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
var getMonthLength = function(date2) {
  var month = date2.getUTCMonth();
  if (month === 1) {
    if (new Date(Date.UTC(date2.getUTCFullYear(), 1, 29)).getUTCMonth() === 1) {
      return 29;
    }
    return 28;
  }
  return MONTHS2[month];
};
var ruleValues = function(rules3, value2, normalize3) {
  var length = rules3.length;
  var availableRules = [];
  for (var idx = 0; idx < length; idx++) {
    var ruleValue = rules3[idx];
    if (normalize3) {
      ruleValue = normalize3(ruleValue);
    }
    if (value2 === ruleValue) {
      return null;
    } else if (value2 < ruleValue) {
      availableRules.push(ruleValue);
    }
  }
  return availableRules;
};
var ruleWeekValues = function(days, date2, weekStart) {
  var currentDay = normalizeDayIndex(date2.getUTCDay(), weekStart);
  var length = days.length;
  var ruleWeekOffset;
  var weekDay, day;
  var weekNumber;
  var result = [];
  for (var idx = 0; idx < length; idx++) {
    weekDay = days[idx];
    weekNumber = weekInMonth(date2, weekStart);
    ruleWeekOffset = normalizeOffset(date2, weekDay, weekStart);
    if (ruleWeekOffset === null) {
      continue;
    }
    if (weekNumber < ruleWeekOffset) {
      result.push(weekDay);
    } else if (weekNumber === ruleWeekOffset) {
      day = normalizeDayIndex(weekDay.day, weekStart);
      if (currentDay < day) {
        result.push(weekDay);
      } else if (currentDay === day) {
        return null;
      }
    }
  }
  return result;
};
var byMonth = function(date2, end2, rule) {
  var monthRules = rule.byMonth;
  var monthRuleValues = ruleValues(monthRules, date2.getUTCMonth() + 1);
  var changed = false;
  if (monthRuleValues !== null) {
    if (monthRuleValues.length) {
      date2.setUTCMonth(monthRuleValues[0] - 1, 1);
    } else {
      date2.setUTCFullYear(date2.getUTCFullYear() + 1, monthRules[0] - 1, 1);
    }
    changed = true;
  }
  return changed;
};
var byMonthDay = function(date2, end2, rule) {
  var monthLength;
  var changed = false;
  function normalize3(monthDay) {
    if (monthDay < 0) {
      monthDay = monthLength + monthDay + 1;
    }
    return monthDay;
  }
  while (date2 <= end2) {
    var month = date2.getUTCMonth();
    monthLength = getMonthLength(date2);
    var days = ruleValues(rule.byMonthDay, date2.getUTCDate(), normalize3);
    if (days === null) {
      return changed;
    }
    changed = true;
    if (days.length) {
      date2.setUTCMonth(month, days.sort(numberSortPredicate)[0]);
      if (month === date2.getUTCMonth()) {
        break;
      }
    } else {
      date2.setUTCMonth(month + 1, 1);
    }
  }
  return changed;
};
var byYearDay = function(date2, end2, rule) {
  var year;
  var changed = false;
  function normalize3(yearDay) {
    if (yearDay < 0) {
      yearDay = year + yearDay;
    }
    return yearDay;
  }
  while (date2 < end2) {
    year = leapYear(date2) ? 366 : 365;
    var days = ruleValues(rule.byYearDay, dayInYear(date2), normalize3);
    if (days === null) {
      return changed;
    }
    changed = true;
    year = date2.getUTCFullYear();
    if (days.length) {
      date2.setUTCFullYear(year, 0, days.sort(numberSortPredicate)[0]);
      break;
    } else {
      date2.setUTCFullYear(year + 1, 0, 1);
    }
  }
  return changed;
};
var byWeekNumber = function(date2, end2, rule) {
  var weekStart = rule.weekStart || Day.Monday;
  var changed = false;
  function normalize3(week) {
    if (week < 0) {
      week = 53 + week;
    }
    return week;
  }
  while (date2 < end2) {
    var weekRuleValues = ruleValues(rule.byWeekNumber, weekInYear2(date2, weekStart), normalize3);
    if (weekRuleValues === null) {
      return changed;
    }
    changed = true;
    var year = date2.getUTCFullYear();
    if (weekRuleValues.length) {
      var day = weekRuleValues.sort(numberSortPredicate)[0] * 7 - 1;
      date2.setUTCFullYear(year, 0, day);
      setDayOfWeek(date2, weekStart, -1);
      break;
    } else {
      date2.setUTCFullYear(year + 1, 0, 1);
    }
  }
  return changed;
};
var byWeekDay = function(startDate, end2, rule) {
  var ruleValue = rule.byWeekDay;
  var weekStart = rule.weekStart || Day.Monday;
  var weekDayRules = ruleWeekValues(ruleValue, startDate, weekStart);
  if (weekDayRules === null) {
    return false;
  }
  if (!weekDayRules[0]) {
    weekDayRules = ruleValue;
    setDayOfWeek(startDate, weekStart);
  }
  var results = weekDayRules.map(function(weekDayRule) {
    var date2 = cloneDate(startDate);
    var day = weekDayRule.day;
    if (weekDayRule.offset) {
      while (date2 <= end2 && !isInWeek(date2, weekDayRule, weekStart)) {
        if (weekInMonth(date2, weekStart) === numberOfWeeks(date2, weekStart)) {
          date2.setUTCMonth(date2.getUTCMonth() + 1, 1);
        } else {
          date2.setUTCDate(date2.getUTCDate() + 7);
          setDayOfWeek(date2, weekStart, -1);
        }
      }
    }
    if (date2.getUTCDay() !== day) {
      setDayOfWeek(date2, day);
    }
    return date2;
  }).sort(function(a, b) {
    return a.getTime() - b.getTime();
  });
  var firstDate = results[0];
  if (firstDate) {
    startDate.setTime(firstDate);
  }
  return true;
};
var byHour = function(date2, end2, rule) {
  var hourRules = rule.byHour;
  var changed = false;
  var startTime = rule.na;
  var startHours = startTime.getUTCHours();
  var hourValues = ruleValues(hourRules, startHours);
  if (hourValues !== null) {
    changed = true;
    date2.setUTCHours(startHours);
    if (hourValues.length) {
      hourValues = hourValues[0];
      date2.setUTCHours(hourValues);
    } else {
      hourValues = date2.getUTCHours();
      date2.setUTCDate(date2.getUTCDate() + 1);
      hourValues = hourRules[0];
      date2.setUTCHours(hourValues);
    }
    if (rule.byMinute) {
      date2.setUTCMinutes(0);
    }
    startTime.setUTCHours(hourValues, date2.getUTCMinutes());
  }
  return changed;
};
var byMinute = function(date2, end2, rule) {
  var minuteRules = rule.byMinute;
  var currentMinutes = date2.getUTCMinutes();
  var minuteValues = ruleValues(minuteRules, currentMinutes);
  var startHours = rule.na.getUTCHours();
  var changed = false;
  if (minuteValues !== null) {
    changed = true;
    if (minuteValues.length) {
      minuteValues = minuteValues[0];
    } else {
      startHours += 1;
      minuteValues = minuteRules[0];
    }
    if (rule.bySecond) {
      date2.setUTCSeconds(0);
    }
    date2.setUTCHours(startHours, minuteValues);
    startHours = startHours % 24;
    rule.na.setUTCHours(startHours, minuteValues, date2.getUTCSeconds());
  }
  return changed;
};
var bySecond = function(date2, _end, rule) {
  var secondRules = rule.bySecond;
  var secondsValues = ruleValues(secondRules, date2.getUTCSeconds());
  var startHours = rule.na.getUTCHours();
  var dateMinutes = date2.getUTCMinutes();
  var changed = false;
  if (secondsValues !== null) {
    changed = true;
    if (secondsValues.length) {
      date2.setUTCSeconds(secondsValues[0]);
    } else {
      dateMinutes += 1;
      date2.setUTCMinutes(dateMinutes, secondRules[0]);
      if (dateMinutes > 59) {
        dateMinutes = dateMinutes % 60;
        startHours = (startHours + 1) % 24;
      }
    }
    rule.na.setUTCHours(startHours, dateMinutes, date2.getUTCSeconds());
  }
  return changed;
};

// node_modules/@progress/kendo-recurrence/dist/es/frequencies.js
var RULE_NAMES = ["byMonth", "byWeekNumber", "byYearDay", "byMonthDay", "byWeekDay", "byHour", "byMinute", "bySecond"];
var RULE_NAMES_LENGTH = RULE_NAMES.length;
var intervalExcess = function(diff, interval) {
  var excess;
  if (diff !== 0 && diff < interval) {
    excess = interval - diff;
  } else {
    excess = diff % interval;
    if (excess) {
      excess = interval - excess;
    }
  }
  return excess;
};
var addTime = function(date2, time2) {
  date2.setTime(date2.getTime() + time2);
};
var BaseFrequency = (
  /** @class */
  function() {
    function BaseFrequency2() {
    }
    BaseFrequency2.prototype.next = function(date2, rule) {
      var startTime = rule.na;
      var minutes, seconds;
      if (rule.bySecond) {
        seconds = date2.getUTCSeconds() + 1;
        date2.setUTCSeconds(seconds);
        startTime.setUTCSeconds(seconds);
      } else if (rule.byMinute) {
        minutes = date2.getUTCMinutes() + 1;
        date2.setUTCMinutes(minutes);
        startTime.setUTCMinutes(minutes);
      } else {
        return false;
      }
      return true;
    };
    BaseFrequency2.prototype.normalize = function(options2) {
      var rule = options2.rule;
      if (options2.idx === 4 && rule.byHour) {
        rule.na.setUTCHours(0);
        this.za(options2.date, rule);
      }
    };
    BaseFrequency2.prototype.limit = function(date2, end2, rule) {
      var interval = rule.interval || 1;
      var idx;
      while (date2 <= end2) {
        var modified = void 0;
        var firstRule = void 0;
        var day = date2.getUTCDate();
        for (idx = 0; idx < RULE_NAMES_LENGTH; idx++) {
          var ruleName = RULE_NAMES[idx];
          if (rule[ruleName]) {
            modified = limitations_exports[ruleName](date2, end2, rule);
            if (firstRule !== void 0 && modified) {
              break;
            } else {
              firstRule = modified;
            }
          }
          if (modified) {
            this.normalize({ date: date2, rule, day, idx });
          }
        }
        if ((interval === 1 || !this.interval(rule, date2)) && idx === RULE_NAMES_LENGTH) {
          break;
        }
      }
    };
    BaseFrequency2.prototype.interval = function(rule, current) {
      var start2 = rule.Mc.toUTCDate();
      var hours = current.getUTCHours();
      var weekStart = rule.weekStart;
      var interval = rule.interval;
      var frequency = rule.freq;
      var date2 = new Date(current);
      var modified = false;
      var excess = 0;
      var month = 0;
      var day = 1;
      var diff;
      var startTimeHours;
      if (frequency === "hourly") {
        startTimeHours = rule.na.getUTCHours();
        date2 = date2.getTime();
        if (hours !== startTimeHours) {
          date2 += (startTimeHours - hours) * MS_PER_HOUR;
        }
        date2 -= start2.getTime();
        diff = Math.floor(date2 / MS_PER_HOUR);
        excess = intervalExcess(diff, interval);
        if (excess !== 0) {
          this.za(current, rule, excess);
          modified = true;
        }
      } else if (frequency === "daily") {
        addTime(date2, -start2);
        diff = Math.round(date2 / MS_PER_DAY);
        excess = intervalExcess(diff, interval);
        if (excess !== 0) {
          this.Zb(current, rule, excess);
          modified = true;
        }
      } else if (frequency === "weekly") {
        excess = this.getNumberOfWeeksBetweenDates(start2, current);
        var normalizedCurrentIndex = normalizeDayIndex(current.getUTCDay(), weekStart);
        var normalizedStartIndex = normalizeDayIndex(start2.getUTCDay(), weekStart);
        if (normalizedCurrentIndex < normalizedStartIndex) {
          excess += 1;
        }
        excess = intervalExcess(excess, interval);
        if (excess !== 0) {
          setDayOfWeek(current, rule.weekStart, -1);
          current.setUTCDate(current.getUTCDate() + excess * 7);
          modified = true;
        }
      } else if (frequency === "monthly") {
        diff = current.getUTCFullYear() - start2.getUTCFullYear();
        diff = current.getUTCMonth() - start2.getUTCMonth() + diff * 12;
        excess = intervalExcess(diff, interval);
        if (excess !== 0) {
          day = hasModifiers(rule) ? 1 : current.getDate();
          current.setUTCFullYear(current.getUTCFullYear(), current.getUTCMonth() + excess, day);
          modified = true;
        }
      } else if (frequency === "yearly") {
        diff = current.getUTCFullYear() - start2.getUTCFullYear();
        excess = intervalExcess(diff, interval);
        if (!rule.byMonth) {
          month = current.getUTCMonth();
        }
        if (!rule.byYearDay && !rule.byMonthDay && !rule.byWeekDay) {
          day = current.getUTCDate();
        }
        if (excess !== 0) {
          current.setUTCFullYear(current.getUTCFullYear() + excess, month, day);
          modified = true;
        }
      }
      return modified;
    };
    BaseFrequency2.prototype.za = function(date2, rule, interval) {
      var startTime = rule.na;
      var hours = startTime.getUTCHours();
      if (interval) {
        hours += interval;
      }
      date2.setUTCHours(hours);
      hours = hours % 24;
      startTime.setUTCHours(hours);
    };
    BaseFrequency2.prototype.Zb = function(date2, rule, interval) {
      date2.setUTCDate(date2.getUTCDate() + interval);
    };
    BaseFrequency2.prototype.getNumberOfWeeksBetweenDates = function(first2, second) {
      var weeks = (second.getTime() - first2.getTime()) / 6048e5;
      var exactWeeks = Math.floor(weeks);
      if (weeks - exactWeeks > 0.99) {
        exactWeeks = Math.round(weeks);
      }
      return exactWeeks;
    };
    return BaseFrequency2;
  }()
);
var HourlyFrequency = (
  /** @class */
  function(_super) {
    tslib_es6_exports.ub(HourlyFrequency2, _super);
    function HourlyFrequency2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    HourlyFrequency2.prototype.next = function(date2, rule) {
      if (!BaseFrequency.prototype.next.call(this, date2, rule)) {
        this.za(date2, rule, 1);
      }
      return false;
    };
    HourlyFrequency2.prototype.normalize = function(options2) {
      var rule = options2.rule;
      if (options2.idx === 4) {
        rule.na.setUTCHours(0);
        this.za(options2.date, rule);
      }
    };
    return HourlyFrequency2;
  }(BaseFrequency)
);
var DailyFrequency = (
  /** @class */
  function(_super) {
    tslib_es6_exports.ub(DailyFrequency2, _super);
    function DailyFrequency2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    DailyFrequency2.prototype.next = function(date2, rule) {
      if (!BaseFrequency.prototype.next.call(this, date2, rule)) {
        this[rule.byHour ? "_hour" : "_date"](date2, rule, 1);
      }
      return false;
    };
    return DailyFrequency2;
  }(BaseFrequency)
);
var WeeklyFrequency = (
  /** @class */
  function(_super) {
    tslib_es6_exports.ub(WeeklyFrequency2, _super);
    function WeeklyFrequency2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    WeeklyFrequency2.prototype.setup = function(rule, eventStartDate) {
      if (!rule.byWeekDay) {
        rule.byWeekDay = [{
          day: eventStartDate.getUTCDay(),
          offset: 0
        }];
      }
    };
    return WeeklyFrequency2;
  }(DailyFrequency)
);
var MonthlyFrequency = (
  /** @class */
  function(_super) {
    tslib_es6_exports.ub(MonthlyFrequency2, _super);
    function MonthlyFrequency2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MonthlyFrequency2.prototype.next = function(date2, rule) {
      var day;
      if (!BaseFrequency.prototype.next.call(this, date2, rule)) {
        if (rule.byHour) {
          this.za(date2, rule, 1);
        } else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {
          this.Zb(date2, rule, 1);
        } else {
          day = date2.getUTCDate();
          date2.setUTCMonth(date2.getUTCMonth() + 1);
          while (date2.getUTCDate() !== day) {
            date2.setUTCDate(day);
          }
          this.za(date2, rule);
        }
      }
      return false;
    };
    MonthlyFrequency2.prototype.normalize = function(options2) {
      var rule = options2.rule, date2 = options2.date;
      if (options2.idx === 0 && !rule.byMonthDay && !rule.byWeekDay) {
        date2.setUTCDate(options2.day);
      } else {
        _super.prototype.normalize.call(this, options2);
      }
    };
    MonthlyFrequency2.prototype.setup = function(rule, eventStartDate, date2) {
      if (!rule.byMonthDay && !rule.byWeekDay) {
        date2.setUTCDate(eventStartDate.getUTCDate());
      }
    };
    return MonthlyFrequency2;
  }(BaseFrequency)
);
var YearlyFrequency = (
  /** @class */
  function(_super) {
    tslib_es6_exports.ub(YearlyFrequency2, _super);
    function YearlyFrequency2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    YearlyFrequency2.prototype.next = function(date2, rule) {
      var day;
      if (!BaseFrequency.prototype.next.call(this, date2, rule)) {
        if (rule.byHour) {
          this.za(date2, rule, 1);
        } else if (rule.byMonthDay || rule.byWeekDay || rule.byYearDay || rule.byWeekNumber) {
          this.Zb(date2, rule, 1);
        } else if (rule.byMonth) {
          day = date2.getUTCDate();
          date2.setUTCMonth(date2.getUTCMonth() + 1);
          while (date2.getUTCDate() !== day) {
            date2.setUTCDate(day);
          }
          this.za(date2, rule);
        } else {
          date2.setUTCFullYear(date2.getUTCFullYear() + 1);
          this.za(date2, rule);
        }
      }
      return false;
    };
    YearlyFrequency2.prototype.setup = function() {
    };
    return YearlyFrequency2;
  }(MonthlyFrequency)
);

// node_modules/@progress/kendo-recurrence/dist/es/expand.js
var frequencies = {
  "hourly": new HourlyFrequency(),
  "daily": new DailyFrequency(),
  "weekly": new WeeklyFrequency(),
  "monthly": new MonthlyFrequency(),
  "yearly": new YearlyFrequency()
};
var normalizeDST = function(date2) {
  return ZonedDate.fromLocalDate(date2.toLocalDate(), date2.timezone);
};
var getTimeAfterMidnight = function(date2) {
  return date2.getHours() * MS_PER_HOUR + date2.getMinutes() * MS_PER_MINUTE + date2.getSeconds() * 1e3 + date2.getMilliseconds();
};
var isException2 = function(exceptions, date2) {
  if (!exceptions) {
    return false;
  }
  var dateTime = date2.getTime() - date2.getMilliseconds();
  var length = exceptions.length;
  for (var idx = 0; idx < length; idx++) {
    if (exceptions[idx].getTime() === dateTime) {
      return true;
    }
  }
  return false;
};
var startPeriodByFreq = function(start2, rule) {
  var date2 = start2.toUTCDate();
  switch (rule.freq) {
    case "yearly":
      date2.setUTCFullYear(date2.getFullYear(), 0, 1);
      break;
    case "monthly":
      date2.setUTCFullYear(date2.getFullYear(), date2.getMonth(), 1);
      break;
    case "weekly":
      setDayOfWeek(date2, rule.weekStart, -1);
      break;
    default:
      break;
  }
  if (rule.byHour) {
    date2.setUTCHours(0);
  }
  if (rule.byMinute) {
    date2.setUTCMinutes(0);
  }
  if (rule.bySecond) {
    date2.setUTCSeconds(0);
  }
  return ZonedDate.fromUTCDate(date2, start2.timezone);
};
var endPeriodByFreq = function(start2, rule) {
  var date2 = start2.toUTCDate();
  switch (rule.freq) {
    case "yearly":
      date2.setUTCFullYear(date2.getUTCFullYear(), 11, 31);
      break;
    case "monthly":
      date2.setUTCFullYear(date2.getUTCFullYear(), date2.getUTCMonth() + 1, 0);
      break;
    case "weekly":
      setDayOfWeek(date2, rule.weekStart, -1);
      date2.setUTCDate(date2.getUTCDate() + 6);
      break;
    default:
      break;
  }
  if (rule.byHour) {
    date2.setUTCHours(23);
  }
  if (rule.byMinute) {
    date2.setUTCMinutes(59);
  }
  if (rule.bySecond) {
    date2.setUTCSeconds(59);
  }
  return ZonedDate.fromUTCDate(date2, start2.timezone);
};
var eventsByPosition = function(periodEvents, start2, positions) {
  var periodEventsLength = periodEvents.length;
  var events2 = [];
  var position4;
  for (var idx = 0, length_1 = positions.length; idx < length_1; idx++) {
    position4 = positions[idx];
    if (position4 < 0) {
      position4 = periodEventsLength + position4;
    } else {
      position4 -= 1;
    }
    var event_1 = periodEvents[position4];
    if (event_1 && event_1.start >= start2) {
      events2.push(event_1);
    }
  }
  return events2;
};
var removeExceptionDates = function(periodEvents, exceptionDates) {
  var events2 = [];
  for (var idx = 0; idx < periodEvents.length; idx++) {
    var event_2 = periodEvents[idx];
    if (event_2 && !isException2(exceptionDates, event_2.start)) {
      events2.push(event_2);
    }
  }
  return events2;
};
function expand(rule, options2) {
  var rangeStart = options2.rangeStart, rangeEnd = options2.rangeEnd;
  if (!rule) {
    return {
      success: true,
      errorMessage: "",
      events: []
    };
  }
  var freqName = rule.freq;
  var freq = frequencies[freqName];
  var eventStart = rule.start;
  var eventDuration = duration(rule.start, rule.end);
  var endPeriod;
  if (rule.start.getTime() > rule.end.getTime()) {
    return {
      success: false,
      errorMessage: "Invalid recurrence rule: Start date (" + rule.start + ")" + ("is greater than End date " + rule.start),
      events: []
    };
  }
  if (!freq) {
    return {
      success: false,
      errorMessage: 'Invalid recurrence frequency "' + freqName + '"',
      events: []
    };
  }
  var events2 = [];
  var positions = rule.bySetPosition;
  var currentIdx = positions ? 0 : 1;
  var exceptionDates = rule.exceptionDates;
  var start2 = rangeStart.toTimezone(eventStart.timezone);
  var startPeriod = start2;
  var end2 = rangeEnd.toTimezone(eventStart.timezone);
  var count2 = rule.count;
  if (rule.until && rule.until.getTime() < end2.getTime()) {
    end2 = rule.until.clone();
  }
  var hours = start2.getHours();
  var minutes = start2.getMinutes();
  var seconds = start2.getSeconds();
  var useEventStart = freqName === "yearly" || freqName === "monthly" || freqName === "weekly";
  if (start2.getTime() < eventStart.getTime() || count2 || rule.interval > 1 || useEventStart) {
    start2 = eventStart.clone();
  } else {
    if (!rule.byHour) {
      hours = eventStart.getHours();
    }
    if (!rule.byMinute) {
      minutes = eventStart.getMinutes();
    }
    if (!rule.bySecond) {
      seconds = eventStart.getSeconds();
    }
    var startAdj = start2.toUTCDate();
    startAdj.setUTCHours(hours, minutes, seconds, eventStart.getMilliseconds());
    start2 = ZonedDate.fromUTCDate(startAdj, start2.timezone);
  }
  rule.Mc = start2.clone();
  if (positions) {
    start2 = startPeriodByFreq(start2, rule);
    end2 = endPeriodByFreq(end2, rule);
    var diff = getTimeAfterMidnight(end2) - getTimeAfterMidnight(start2);
    if (diff < 0) {
      var endAdj = end2.toUTCDate();
      endAdj.setUTCHours(start2.getHours(), start2.getMinutes(), start2.getSeconds(), start2.getMilliseconds());
      end2 = ZonedDate.fromUTCDate(endAdj, end2.timezone);
    }
    rule.Mc = start2.clone();
    endPeriod = endPeriodByFreq(start2, rule);
  }
  var startTime = getTimeAfterMidnight(start2);
  rule.na = new Date(startTime);
  var next = start2.toUTCDate();
  if (freq.setup) {
    freq.setup(rule, eventStart, next);
    start2 = ZonedDate.fromUTCDate(next, start2.timezone);
  }
  next = start2.toUTCDate();
  freq.limit(next, end2.toUTCDate(), rule);
  start2 = ZonedDate.fromUTCDate(next, start2.timezone);
  while (start2 <= end2) {
    var endDate = start2.addTime(eventDuration);
    var inPeriod = start2 >= startPeriod || endDate > startPeriod;
    if (inPeriod && !isException2(exceptionDates, start2) || positions) {
      events2.push({
        start: normalizeDST(start2),
        end: normalizeDST(endDate)
      });
      if (freqName === "hourly" || freqName === "minutely" || freqName === "secondly") {
        startTime = getTimeAfterMidnight(normalizeDST(start2));
        rule.na = new Date(startTime);
      }
    }
    if (positions) {
      next = start2.toUTCDate();
      freq.next(next, rule);
      freq.limit(next, end2.toUTCDate(), rule);
      start2 = ZonedDate.fromUTCDate(next, start2.timezone);
      if (start2 > endPeriod) {
        var periodEvents = eventsByPosition(events2.slice(currentIdx), eventStart, positions);
        periodEvents = removeExceptionDates(periodEvents, exceptionDates);
        events2 = events2.slice(0, currentIdx).concat(periodEvents);
        endPeriod = endPeriodByFreq(start2, rule);
        currentIdx = events2.length;
      }
      if (count2 && count2 === currentIdx) {
        break;
      }
    } else {
      if (count2 && count2 === currentIdx) {
        break;
      }
      currentIdx += 1;
      next = start2.toUTCDate();
      freq.next(next, rule);
      freq.limit(next, end2.toUTCDate(), rule);
      start2 = ZonedDate.fromUTCDate(next, start2.timezone);
    }
  }
  return {
    success: true,
    errorMessage: "",
    events: events2
  };
}

// node_modules/@progress/kendo-recurrence/dist/es/parse-rule.js
var normalizeWeekDay = function(day, weekStart) {
  return day + (day < weekStart ? 7 : 0);
};
var daySortPredicate = function(weekStart) {
  return function(a, b) {
    return normalizeWeekDay(a.day, weekStart) - normalizeWeekDay(b.day, weekStart);
  };
};
var sortDays = function(rrule) {
  var byWeekDay2 = rrule.byWeekDay, weekStart = rrule.weekStart;
  if (!byWeekDay2) {
    return;
  }
  byWeekDay2.sort(daySortPredicate(weekStart));
};
var parseRule = function(options2) {
  if (!options2) {
    return null;
  }
  var recurrenceRule = options2.recurrenceRule, _a14 = options2.weekStart, weekStart = _a14 === void 0 ? 0 : _a14;
  var rule = {};
  var splits, value2;
  var idx = 0, length;
  var parts;
  var property;
  if (!recurrenceRule) {
    return null;
  }
  var lines = recurrenceRule.split("\n");
  if (!lines[1] && (recurrenceRule.indexOf("DTSTART") !== -1 || recurrenceRule.indexOf("DTEND") !== -1 || recurrenceRule.indexOf("EXDATE") !== -1)) {
    lines = recurrenceRule.split(" ");
  }
  for (idx = 0, length = lines.length; idx < length; idx++) {
    var line = (lines[idx] || "").trim();
    if (line.indexOf("DTSTART") !== -1) {
      rule.start = parseDateTime(line);
    } else if (line.indexOf("DTEND") !== -1) {
      rule.end = parseDateTime(line);
    } else if (line.indexOf("EXDATE") !== -1) {
      rule.exceptionDates = parseDateTimeList(line);
    } else if (line.indexOf("RRULE") !== -1) {
      parts = line.substring(6);
    } else if (line.trim()) {
      parts = line;
    }
  }
  parts = parts.split(";");
  for (idx = 0, length = parts.length; idx < length; idx++) {
    property = parts[idx];
    splits = property.split("=");
    value2 = (splits[1] || "").trim().split(",");
    switch (splits[0].trim().toUpperCase()) {
      case "FREQ":
        rule.freq = value2[0].toLowerCase();
        break;
      case "UNTIL":
        rule.until = parseISODate(value2[0]);
        break;
      case "COUNT":
        rule.count = parseInt(value2[0], 10);
        break;
      case "INTERVAL":
        rule.interval = parseInt(value2[0], 10);
        break;
      case "BYSECOND":
        rule.bySecond = parseArray(value2, { start: 0, end: 60 });
        break;
      case "BYMINUTE":
        rule.byMinute = parseArray(value2, { start: 0, end: 59 });
        break;
      case "BYHOUR":
        rule.byHour = parseArray(value2, { start: 0, end: 23 });
        break;
      case "BYMONTHDAY":
        rule.byMonthDay = parseArray(value2, { start: -31, end: 31 });
        break;
      case "BYYEARDAY":
        rule.byYearDay = parseArray(value2, { start: -366, end: 366 });
        break;
      case "BYMONTH":
        rule.byMonth = parseArray(value2, { start: 1, end: 12 });
        break;
      case "BYDAY":
        rule.byWeekDay = parseWeekDayList(value2);
        break;
      case "BYWEEKNO":
        rule.byWeekNumber = parseArray(value2, { start: -53, end: 53 });
        break;
      case "BYSETPOS":
        rule.bySetPosition = parseArray(value2, { start: -366, end: 366 });
        break;
      case "WKST":
        rule.weekStart = parseWeekDay(value2[0]);
        break;
      default:
        break;
    }
  }
  if (rule.freq === void 0 || rule.count !== void 0 && rule.until) {
    return null;
  }
  if (rule.weekStart === void 0) {
    rule.weekStart = weekStart;
  }
  if (!rule.interval) {
    rule.interval = 1;
  }
  if (rule.bySetPosition && !hasModifiers(rule)) {
    rule.bySetPosition = [];
  }
  sortDays(rule);
  return rule;
};

// node_modules/@progress/kendo-recurrence/dist/es/serialize-rule.js
var WEEK_DAYS = {
  0: "SU",
  1: "MO",
  2: "TU",
  3: "WE",
  4: "TH",
  5: "FR",
  6: "SA"
};
var serializeWeekDayList = function(list) {
  var length = list.length;
  var result = [];
  var valueString;
  for (var idx = 0; idx < length; idx++) {
    var value2 = list[idx];
    if (typeof value2 === "string") {
      valueString = value2;
    } else {
      valueString = "" + WEEK_DAYS[value2.day];
      if (value2.offset) {
        valueString = value2.offset + valueString;
      }
    }
    result.push(valueString);
  }
  return result.toString();
};
var serializeRule = function(rrule, timezone) {
  if (!rrule || !rrule.freq) {
    return null;
  }
  var weekStart = rrule.weekStart;
  var rruleString = "FREQ=" + rrule.freq.toUpperCase();
  var exdates = "";
  var start2 = "";
  var end2 = "";
  var until = rrule.until;
  if (rrule.interval > 1) {
    rruleString += ";INTERVAL=" + rrule.interval;
  }
  if (rrule.count) {
    rruleString += ";COUNT=" + rrule.count;
  }
  if (until) {
    rruleString += ";UNTIL=" + toString2(until.toTimezone("Etc/UTC"), "yyyyMMddTHHmmss") + "Z";
  }
  if (rrule.byMonth) {
    rruleString += ";BYMONTH=" + rrule.byMonth;
  }
  if (rrule.byWeekNumber) {
    rruleString += ";BYWEEKNO=" + rrule.byWeekNumber;
  }
  if (rrule.byYearDay) {
    rruleString += ";BYYEARDAY=" + rrule.byYearDay;
  }
  if (rrule.byMonthDay) {
    rruleString += ";BYMONTHDAY=" + rrule.byMonthDay;
  }
  if (rrule.byWeekDay) {
    rruleString += ";BYDAY=" + serializeWeekDayList(rrule.byWeekDay);
  }
  if (rrule.byHour) {
    rruleString += ";BYHOUR=" + rrule.byHour;
  }
  if (rrule.byMinute) {
    rruleString += ";BYMINUTE=" + rrule.byMinute;
  }
  if (rrule.bySecond) {
    rruleString += ";BYSECOND=" + rrule.bySecond;
  }
  if (rrule.bySetPosition) {
    rruleString += ";BYSETPOS=" + rrule.bySetPosition;
  }
  if (weekStart !== void 0) {
    rruleString += ";WKST=" + WEEK_DAYS[weekStart];
  }
  if (rrule.start) {
    start2 = "DTSTART" + serializeDates([rrule.start]);
  }
  if (rrule.end) {
    end2 = "DTEND" + serializeDates([rrule.end]);
  }
  if (rrule.exceptionDates) {
    exdates = "EXDATE" + serializeDates(rrule.exceptionDates);
  }
  if (start2 || end2 || exdates) {
    rruleString = start2 + end2 + exdates + "RRULE:" + rruleString;
  }
  return rruleString;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/services/occurrenceService.js
var __spreadArray13 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var toOccurrences = function(data2, _a14) {
  var dateRange = _a14.dateRange, fields = _a14.fields, timezone = _a14.timezone;
  var result = data2.map(readItem(fields)).reduce(occurrenceReducer(dateRange, timezone, fields), []).filter(function(occurrence) {
    return !isMaster(occurrence.dataItem, fields);
  });
  return result;
};
var readItem = function(fields) {
  return function(dataItem) {
    var result = {
      uid: getter(fields.id || "id")(dataItem),
      start: getter(fields.start || "start")(dataItem),
      startTimezone: getter(fields.startTimezone || "startTimezone")(dataItem),
      originalStart: getter(fields.originalStart || "originalStart")(dataItem),
      end: getter(fields.end || "end")(dataItem),
      endTimezone: getter(fields.endTimezone || "endTimezone")(dataItem),
      isAllDay: getter(fields.isAllDay || "isAllDay")(dataItem),
      title: getter(fields.title || "title")(dataItem),
      description: getter(fields.description || "description")(dataItem),
      occurrenceId: getter("occurrenceId")(dataItem),
      recurrenceRule: getter(fields.recurrenceRule || "recurrenceRule")(dataItem),
      recurrenceExceptions: getter(fields.recurrenceExceptions || "recurrenceExceptions")(dataItem),
      recurrenceId: getter(fields.recurrenceId || "recurrenceId")(dataItem),
      dataItem: clone(dataItem)
    };
    return result;
  };
};
var occurrenceReducer = function(dateRange, timezone, fields) {
  return function(acc, current) {
    return __spreadArray13(__spreadArray13([], acc, true), Boolean(current.recurrenceRule) && Boolean(current.recurrenceId === null || current.recurrenceId === void 0) && isMaster(current.dataItem, fields) ? __spreadArray13([], occurrences(current, { dateRange, timezone, fields }), true) : [current], true);
  };
};
var occurrences = function(item, _a14) {
  var dateRange = _a14.dateRange, timezone = _a14.timezone, fields = _a14.fields;
  var rrule = item.recurrenceRule;
  var rule = parseRule({ recurrenceRule: rrule });
  if (!rule.start) {
    rule.start = ZonedDate.fromLocalDate(item.start, timezone);
  }
  if (!rule.end) {
    rule.end = ZonedDate.fromLocalDate(item.end, timezone);
  }
  var exceptionRule = item.recurrenceExceptions;
  if (exceptionRule) {
    rule.exceptionDates = exceptionRule.map(function(exDate) {
      return ZonedDate.fromLocalDate(exDate, timezone);
    });
  }
  var utcRangeStart = dateRange.zonedStart;
  var utcRangeEnd = dateRange.zonedEnd;
  var series = expand(rule, {
    rangeStart: utcRangeStart,
    rangeEnd: utcRangeEnd
  });
  if (!series.events.length) {
    return [];
  }
  var expanded = series.events.map(function(occurrence, idx) {
    var occurrenceItem = clone(item);
    var occurrenceDataItem = clone(item.dataItem);
    occurrenceItem.recurrenceId = occurrenceItem.uid;
    setField(occurrenceDataItem, fields.recurrenceId, item.uid);
    occurrenceItem.originalStart = occurrence.start.toLocalDate();
    setField(occurrenceDataItem, fields.originalStart, occurrence.start.toLocalDate());
    occurrenceItem.start = occurrence.start.toLocalDate();
    setField(occurrenceDataItem, fields.start, occurrence.start.toLocalDate());
    occurrenceItem.end = occurrence.end.toLocalDate();
    setField(occurrenceDataItem, fields.end, occurrence.end.toLocalDate());
    occurrenceItem.occurrenceId = String(idx);
    setField(occurrenceDataItem, "occurrenceId", String(idx));
    occurrenceItem.dataItem = occurrenceDataItem;
    return occurrenceItem;
  });
  return expanded;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/services/itemsService.js
var React114 = __toESM(require_react());
var __assign56 = function() {
  __assign56 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign56.apply(this, arguments);
};
var toItems = function(occurrences2, _a14, _b3) {
  var timezone = _a14.timezone;
  var groups = _b3.groups, ranges = _b3.ranges;
  var result = [];
  var sorted = orderBy(occurrences2, [
    { field: "start", dir: "asc" },
    { field: "end", dir: "desc" },
    { field: "isAllDay", dir: "desc" }
  ]);
  sorted.forEach(function(occurrence) {
    groups.forEach(function(g) {
      var group2 = groups.length === 1 ? personalizedGroup(occurrence, g) : g;
      if (inGroup(occurrence, group2)) {
        ranges.forEach(function(range3) {
          if (inRange2(occurrence, range3)) {
            var itemRef = React114.createRef();
            var _ref = React114.createRef();
            var head = range3.end < occurrence.end;
            var tail = occurrence.start < range3.start;
            var zonedStart = ZonedDate.fromLocalDate(occurrence.start, timezone);
            var zonedEnd = ZonedDate.fromLocalDate(occurrence.end, timezone);
            var item = __assign56(__assign56({}, occurrence), { n: _ref, itemRef, head, tail, order: null, zonedStart, zonedEnd, group: group2, range: range3, slots: [], isRecurring: Boolean(occurrence.recurrenceRule), isException: Boolean(!occurrence.recurrenceRule && occurrence.recurrenceId !== null && occurrence.recurrenceId !== void 0), isAllDay: Boolean(occurrence.isAllDay) });
            result.push(item);
          }
        });
      }
    });
  });
  return result;
};
var personalizedGroup = function(occurrence, group2) {
  return {
    index: 0,
    resources: group2.resources.filter(function(resource) {
      return inResource(occurrence, resource);
    })
  };
};
var inResource = function(occurrence, resource) {
  return resource.multiple ? (occurrence.dataItem[resource.field] || []).some(function(val) {
    return resource[resource.valueField] === val;
  }) : occurrence.dataItem[resource.field] === resource[resource.valueField];
};
var inGroup = function(occurrence, group2) {
  return !group2.resources.some(function(res) {
    return res.multiple ? !occurrence.dataItem[res.field].some(function(val) {
      return res[res.valueField] === val;
    }) : occurrence.dataItem[res.field] !== res[res.valueField];
  });
};
var inSlot = function(occurrence, slot) {
  return intersects(slot.start, slot.end, occurrence.start, occurrence.end);
};
var inRange2 = function(occurrence, range3) {
  return intersects(range3.start, range3.end, occurrence.start, occurrence.end) && (range3.isAllDay === void 0 || occurrence.isAllDay === void 0 || occurrence.isAllDay === range3.isAllDay);
};

// node_modules/@progress/kendo-react-scheduler/dist/es/services/slotsService.js
var React115 = __toESM(require_react());
var toSlots = function(_dateRange, _a14, _b3) {
  var step = _a14.step;
  var groups = _b3.groups, ranges = _b3.ranges;
  var slots = [];
  groups.forEach(function(group2) {
    ranges.forEach(function(range3) {
      var viewStart = range3.zonedStart;
      var viewEnd = range3.zonedEnd;
      var offset4 = viewEnd.timezoneOffset - viewStart.timezoneOffset;
      for (var current = viewStart.clone(), index = 0, deficiency = offset4 < 0 ? offset4 * MS_PER_MINUTE3 * -1 : 0; current.getTime() < viewEnd.getTime(); index++, current = current.addTime(step)) {
        var _ref = React115.createRef();
        var zonedStart = current.clone();
        var zonedEnd = current.addTime(step);
        var difference = (zonedEnd.timezoneOffset - zonedStart.timezoneOffset) * MS_PER_MINUTE3;
        var canFill = step <= Math.abs(difference);
        if (deficiency && canFill) {
          deficiency -= step;
          current = current.addTime(-step);
        }
        var start2 = new Date(zonedStart.getTime());
        var end2 = new Date(zonedEnd.getTime());
        var slot = {
          n: _ref,
          index,
          end: end2,
          start: start2,
          zonedStart,
          zonedEnd,
          range: range3,
          group: group2,
          items: [],
          isAllDay: MS_PER_DAY <= step
        };
        slots.push(slot);
      }
    });
  });
  return slots;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/tasks/SchedulerTask.js
var React116 = __toESM(require_react());
var SchedulerTask = React116.forwardRef(function(props, ref) {
  var _ref = props.n, onRemoveClick = props.onRemoveClick;
  var task = React116.useRef(null);
  var element6 = React116.useRef(null);
  React116.useImperativeHandle(task, function() {
    return { props, element: element6.current };
  });
  React116.useImperativeHandle(ref, function() {
    return task.current;
  });
  React116.useImperativeHandle(_ref, function() {
    return task.current;
  });
  var editable = useEditable(props.editable);
  var localization = useLocalization();
  var deleteMessage = localization.toLanguageString(deleteTitle, messages2[deleteTitle]);
  var resource = props.group.resources.find(function(r) {
    return Boolean(r.colorField && r[r.colorField] !== void 0);
  });
  var color = resource && resource.colorField && resource[resource.colorField];
  var handleRemoveClick = React116.useCallback(function(syntheticEvent) {
    if (!onRemoveClick) {
      return;
    }
    onRemoveClick.call(void 0, {
      syntheticEvent,
      target: task.current
    });
  }, [onRemoveClick, task]);
  var className = React116.useMemo(function() {
    return classNames("k-task", props.className);
  }, [props.className]);
  return React116.createElement(
    "div",
    { id: props.id, ref: element6, style: props.style, className, tabIndex: props.tabIndex || void 0 },
    color && React116.createElement("span", { className: "k-scheduler-mark", style: { color, backgroundColor: color } }),
    props.isRecurring && React116.createElement(IconWrap, { name: "arrow-rotate-cw", icon: arrowRotateCwIcon }),
    props.isException && React116.createElement(IconWrap, { name: "arrows-no-repeat", icon: arrowsNoRepeatIcon }),
    props.title,
    editable.remove && React116.createElement(
      "a",
      { className: "k-link k-event-delete", title: deleteMessage, "aria-label": deleteMessage, onClick: handleRemoveClick },
      React116.createElement(IconWrap, { name: "x", icon: xIcon })
    )
  );
});
SchedulerTask.displayName = "KendoReactSchedulerTask";

// node_modules/@progress/kendo-react-scheduler/dist/es/tasks/SchedulerViewTask.js
var React117 = __toESM(require_react());
var __assign57 = function() {
  __assign57 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign57.apply(this, arguments);
};
var __rest27 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerViewTask = React117.forwardRef(function(props, ref) {
  var taskProp = props.task, _ref = props.n, taskProps = __rest27(props, ["task", "_ref"]);
  var task = React117.useRef(null);
  var viewTask = React117.useRef(null);
  React117.useImperativeHandle(viewTask, function() {
    return { props, element: task.current && task.current.element };
  });
  React117.useImperativeHandle(_ref, function() {
    return task.current;
  });
  React117.useImperativeHandle(ref, function() {
    return viewTask.current;
  });
  var Task = taskProp || defaultProps8.task;
  return React117.createElement(Task, __assign57({}, taskProps, { n: task }));
});
var defaultProps8 = {
  task: SchedulerTask
};
SchedulerViewTask.defaultProps = defaultProps8;
SchedulerViewTask.displayName = "KendoReactSchedulerViewTask";

// node_modules/@progress/kendo-react-dialogs/dist/es/DialogTitleBar.js
var React118 = __toESM(require_react());
var DialogTitleBar = function(_a14) {
  var children2 = _a14.children, onCloseButtonClick = _a14.onCloseButtonClick, id = _a14.id, closeIcon = _a14.closeIcon;
  return React118.createElement(
    "div",
    { className: "k-window-titlebar k-dialog-titlebar", id },
    React118.createElement("div", { className: "k-window-title k-dialog-title" }, children2),
    React118.createElement("div", { className: "k-window-titlebar-actions k-dialog-titlebar-actions" }, closeIcon && React118.createElement(Button, { role: "button", "aria-label": "Close", onClick: onCloseButtonClick, icon: "x", svgIcon: xIcon, fillMode: "flat", className: "k-window-titlebar-action k-dialog-titlebar-action" }))
  );
};

// node_modules/@progress/kendo-react-dialogs/dist/es/DialogActionsBar.js
var React119 = __toESM(require_react());
var PropTypes56 = __toESM(require_prop_types());
var DialogActionsBar = function(props) {
  var _a14;
  var _b3 = props.layout, layout = _b3 === void 0 ? defaultProps9.layout : _b3, children2 = props.children;
  var wrapperClasses2 = classNames("k-actions", "k-actions-horizontal", "k-window-actions k-dialog-actions", (_a14 = {}, _a14["k-actions-".concat(layout)] = layout, _a14));
  return React119.createElement("div", { className: wrapperClasses2 }, children2);
};
DialogActionsBar.propTypes = {
  children: PropTypes56.any,
  layout: PropTypes56.oneOf(["start", "center", "end", "stretched"])
};
var defaultProps9 = {
  layout: "stretched"
};

// node_modules/@progress/kendo-react-dialogs/dist/es/package-metadata.js
var packageMetadata9 = {
  name: "@progress/kendo-react-dialogs",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225582,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-dialogs/dist/es/constants.js
var DATA_DIALOGS_ID = "data-windowid";
var DEFAULT_DIALOGS_ZINDEX = 10002;
var ZINDEX_DIALOGS_STEP = 2;
var DIALOGS_SELECTOR = ".k-window:not(.k-dialog), .k-dialog-wrapper";

// node_modules/@progress/kendo-react-dialogs/dist/es/utils.js
var getMaxZIndex = function(currentZIndex, currentDocument, currentWindowId) {
  var maxZindex = currentZIndex;
  if (currentDocument && currentDocument.defaultView) {
    var allWindows = currentDocument.querySelectorAll(DIALOGS_SELECTOR);
    var zIndexChanged_1 = false;
    allWindows.forEach(function(KRwindow) {
      var computedStyle = currentDocument.defaultView.getComputedStyle(KRwindow, null);
      var dataId = KRwindow.getAttribute(DATA_DIALOGS_ID);
      if (dataId !== currentWindowId && computedStyle.zIndex !== null) {
        var zIndexValue = parseInt(computedStyle.zIndex, 10);
        if (zIndexValue >= maxZindex) {
          maxZindex = zIndexValue;
          zIndexChanged_1 = true;
        }
      }
    });
    return zIndexChanged_1 ? maxZindex + ZINDEX_DIALOGS_STEP : maxZindex;
  }
  return maxZindex;
};

// node_modules/@progress/kendo-react-dialogs/dist/es/Dialog.js
var React120 = __toESM(require_react());
var ReactDOM4 = __toESM(require_react_dom());
var PropTypes57 = __toESM(require_prop_types());
var __extends44 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign58 = function() {
  __assign58 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign58.apply(this, arguments);
};
var DialogWithoutContext = (
  /** @class */
  function(_super) {
    __extends44(DialogWithoutContext2, _super);
    function DialogWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.context = 0;
      _this3.aa = guid();
      _this3.titleId = _this3.generateTitleId();
      _this3.contentId = _this3.generateContentId();
      _this3.onCloseDialog = function(event2) {
        event2.preventDefault();
        dispatchEvent(_this3.props.onClose, event2, _this3, void 0);
      };
      _this3.onKeyDown = function(event2) {
        if (event2.keyCode === Keys.esc && _this3.props.onClose) {
          event2.preventDefault();
          _this3.onCloseDialog(event2);
        }
        var kDialog = _this3.element;
        if (kDialog && event2.keyCode === Keys.tab) {
          var focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])';
          var focusableContent = kDialog.querySelectorAll(focusableElements);
          var firstFocusableElement = focusableContent[0];
          var lastFocusableElement = focusableContent[focusableContent.length - 1];
          var currentDocument = _this3.getDocument();
          var activeElement = getActiveElement(currentDocument);
          if (event2.shiftKey) {
            if (currentDocument && activeElement === firstFocusableElement || currentDocument && activeElement === _this3.element) {
              lastFocusableElement.focus();
              event2.preventDefault();
            }
          } else {
            if (currentDocument && activeElement === lastFocusableElement) {
              firstFocusableElement.focus();
              event2.preventDefault();
            }
          }
        }
      };
      _this3.getCurrentZIndex = function() {
        if (!_this3.state || _this3.context === void 0) {
          return _this3.context ? _this3.context : DEFAULT_DIALOGS_ZINDEX;
        }
        return _this3.state.zIndex > (_this3.context ? _this3.context + ZINDEX_DIALOGS_STEP : 0) ? _this3.state.zIndex : _this3.context + ZINDEX_DIALOGS_STEP;
      };
      _this3.getDocument = function() {
        return _this3.props.appendTo ? _this3.props.appendTo.ownerDocument : document;
      };
      validatePackage2(packageMetadata9);
      _this3.state = {
        zIndex: getMaxZIndex(_this3.getCurrentZIndex(), _this3.getDocument(), _this3.aa)
      };
      return _this3;
    }
    DialogWithoutContext2.prototype.componentDidMount = function() {
      if (this.element) {
        if (this.props.autoFocus) {
          this.element.focus();
        }
      }
    };
    DialogWithoutContext2.prototype.render = function() {
      var _a14, _b3;
      var _this3 = this;
      var id = this.props.id !== void 0 ? this.props.id : this.titleId;
      var _c2 = this.props, title = _c2.title, width = _c2.width, height = _c2.height, children2 = _c2.children, minWidth = _c2.minWidth, dir = _c2.dir, style = _c2.style, contentStyle = _c2.contentStyle;
      var elementsArray = React120.Children.toArray(children2);
      var content = this.getContent(elementsArray);
      var actions = this.getActionBar(elementsArray);
      var aria = title ? {
        "aria-labelledby": id
      } : null;
      var closeIcon = this.props.closeIcon !== void 0 ? this.props.closeIcon : true;
      var currentZIndex = this.getCurrentZIndex();
      var dialogElement = React120.createElement(
        ZIndexContext.Provider,
        { value: currentZIndex },
        React120.createElement(
          "div",
          __assign58({}, (_a14 = {}, _a14[DATA_DIALOGS_ID] = this.aa, _a14), { className: "k-dialog-wrapper" + (this.props.className ? " " + this.props.className : ""), onKeyDown: this.onKeyDown, tabIndex: 0, dir, style: __assign58({ zIndex: currentZIndex }, style), ref: function(el) {
            return _this3.element = el;
          } }),
          React120.createElement("div", { className: "k-overlay" }),
          React120.createElement(
            "div",
            __assign58({}, aria, { className: classNames("k-window k-dialog", (_b3 = {}, _b3["k-window-".concat(this.props.themeColor)] = this.props.themeColor, _b3)), role: "dialog", "aria-labelledby": id, "aria-modal": true, "aria-describedby": this.contentId, style: { width, height, minWidth } }),
            this.props.title && React120.createElement(DialogTitleBar, { closeIcon, onCloseButtonClick: this.onCloseDialog, id }, title),
            React120.createElement("div", { className: "k-window-content k-dialog-content", style: contentStyle, id: this.contentId }, content),
            actions
          )
        )
      );
      if (canUseDOM) {
        return this.props.appendTo !== null ? ReactDOM4.createPortal(dialogElement, this.props.appendTo || document.body) : dialogElement;
      }
      return null;
    };
    DialogWithoutContext2.prototype.getActionBar = function(children2) {
      return children2.filter(function(child) {
        return child && child.type === DialogActionsBar;
      });
    };
    DialogWithoutContext2.prototype.getContent = function(children2) {
      return children2.filter(function(child) {
        return child && child.type !== DialogActionsBar;
      });
    };
    DialogWithoutContext2.prototype.generateTitleId = function() {
      return "dialog-title" + this.aa;
    };
    DialogWithoutContext2.prototype.generateContentId = function() {
      return "dialog-content" + this.aa;
    };
    DialogWithoutContext2.displayName = "Dialog";
    DialogWithoutContext2.propTypes = {
      title: PropTypes57.any,
      id: PropTypes57.string,
      dir: PropTypes57.string,
      style: PropTypes57.object,
      closeIcon: PropTypes57.bool,
      width: PropTypes57.oneOfType([PropTypes57.number, PropTypes57.string]),
      height: PropTypes57.oneOfType([PropTypes57.number, PropTypes57.string]),
      minWidth: PropTypes57.oneOfType([PropTypes57.number, PropTypes57.string]),
      autoFocus: PropTypes57.bool
    };
    DialogWithoutContext2.defaultProps = {
      autoFocus: false
    };
    DialogWithoutContext2.contextType = ZIndexContext;
    return DialogWithoutContext2;
  }(React120.Component)
);
var DialogPropsContext = createPropsContext();
var Dialog = withPropsContext(DialogPropsContext, DialogWithoutContext);
Dialog.displayName = "KendoReactDialog";

// node_modules/@progress/kendo-react-dialogs/dist/es/StageEnum.js
var windowStage;
(function(windowStage2) {
  windowStage2["DEFAULT"] = "DEFAULT";
  windowStage2["FULLSCREEN"] = "FULLSCREEN";
  windowStage2["MINIMIZED"] = "MINIMIZED";
})(windowStage || (windowStage = {}));

// node_modules/@progress/kendo-react-dialogs/dist/es/messages/index.js
var _a11;
var dialogsWindowMaximizeButton = "dialogs.windowMaximizeButton";
var dialogsWindowMinimizeButton = "dialogs.windowMinimizeButton";
var dialogsWindowRestoreButton = "dialogs.windowRestoreButton";
var dialogsWindowCloseButton = "dialogs.windowCloseButton";
var messages5 = (_a11 = {}, _a11[dialogsWindowMaximizeButton] = "maximize", _a11[dialogsWindowMinimizeButton] = "minimize", _a11[dialogsWindowRestoreButton] = "restore", _a11[dialogsWindowCloseButton] = "close", _a11);

// node_modules/@progress/kendo-react-dialogs/dist/es/WindowTitlebar.js
var React121 = __toESM(require_react());
var __assign59 = function() {
  __assign59 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign59.apply(this, arguments);
};
var WindowTitleBarComponent = function(props) {
  var children2 = props.children, onCloseButtonClick = props.onCloseButtonClick, onMinimizeButtonClick = props.onMinimizeButtonClick, onFullScreenButtonClick = props.onFullScreenButtonClick, onRestoreButtonClick = props.onRestoreButtonClick, onDoubleClick = props.onDoubleClick, stage = props.stage, forwardedRef = props.forwardedRef, id = props.id;
  var localization = useLocalization();
  var minimizeButtonRender = props.minimizeButton ? React121.createElement(props.minimizeButton, { onClick: onMinimizeButtonClick, stage }) : React121.createElement(Button, { fillMode: "flat", icon: "window-minimize", svgIcon: windowMinimizeIcon, className: "k-window-titlebar-action", onClick: onMinimizeButtonClick, "aria-label": localization.toLanguageString(dialogsWindowMinimizeButton, messages5[dialogsWindowMinimizeButton]) });
  var maximizeButtonRender = props.maximizeButton ? React121.createElement(props.maximizeButton, { onClick: onFullScreenButtonClick, stage }) : React121.createElement(Button, { fillMode: "flat", icon: "window-maximize", svgIcon: windowIcon, className: "k-window-titlebar-action", onClick: onFullScreenButtonClick, "aria-label": localization.toLanguageString(dialogsWindowMaximizeButton, messages5[dialogsWindowMaximizeButton]) });
  var restoreButtonRender = props.restoreButton ? React121.createElement(props.restoreButton, { onClick: onRestoreButtonClick, stage }) : React121.createElement(Button, { fillMode: "flat", icon: "window-restore", svgIcon: windowRestoreIcon, className: "k-window-titlebar-action", onClick: onRestoreButtonClick, "aria-label": localization.toLanguageString(dialogsWindowRestoreButton, messages5[dialogsWindowRestoreButton]) });
  var closeButtonRender = props.closeButton ? React121.createElement(props.closeButton, { onClick: onCloseButtonClick, stage }) : React121.createElement(Button, { fillMode: "flat", icon: "x", svgIcon: xIcon, className: "k-window-titlebar-action", onClick: onCloseButtonClick, "aria-label": localization.toLanguageString(dialogsWindowCloseButton, messages5[dialogsWindowCloseButton]) });
  return React121.createElement(
    "div",
    { className: "k-window-titlebar", style: { touchAction: "none" }, ref: forwardedRef, onDoubleClick },
    React121.createElement("div", { className: "k-window-title", id }, children2 ? children2 : ""),
    React121.createElement(
      "div",
      { className: "k-window-titlebar-actions" },
      stage === windowStage.DEFAULT && minimizeButtonRender,
      stage === windowStage.DEFAULT && maximizeButtonRender,
      stage !== windowStage.DEFAULT && restoreButtonRender,
      closeButtonRender
    )
  );
};
var WindowTitleBar = React121.forwardRef(function(props, ref) {
  return React121.createElement(WindowTitleBarComponent, __assign59({}, props, { forwardedRef: ref }));
});

// node_modules/@progress/kendo-react-dialogs/dist/es/WindowResizeHandlers.js
var React122 = __toESM(require_react());
var __extends45 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var keys = ["n", "e", "s", "w", "se", "sw", "ne", "nw"];
var ResizeHandlers = (
  /** @class */
  function(_super) {
    __extends45(ResizeHandlers2, _super);
    function ResizeHandlers2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ResizeHandlers2.prototype.render = function() {
      var _this3 = this;
      return React122.createElement(
        "div",
        { className: "k-resize-handles-wrapper" },
        " ",
        keys.map(function(key, index) {
          return React122.createElement(
            Draggable,
            { key: index, onDrag: function(data2) {
              var event2 = data2.event;
              event2.originalEvent.preventDefault();
              _this3.props.onResize(event2, { end: false, direction: key });
            }, onRelease: function(data2) {
              var event2 = data2.event;
              event2.originalEvent.preventDefault();
              _this3.props.onResize(event2, { end: true, direction: key });
            } },
            React122.createElement("div", { className: "k-resize-handle k-resize-" + key, style: { display: "block", touchAction: "none" } })
          );
        })
      );
    };
    return ResizeHandlers2;
  }(React122.Component)
);

// node_modules/@progress/kendo-react-dialogs/dist/es/MiddleLayerOptimization.js
var React123 = __toESM(require_react());
var __extends46 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MiddleLayerOptimization = (
  /** @class */
  function(_super) {
    __extends46(MiddleLayerOptimization2, _super);
    function MiddleLayerOptimization2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MiddleLayerOptimization2.prototype.shouldComponentUpdate = function(nextProps) {
      return nextProps.shouldUpdateOnDrag || !nextProps.isDragging;
    };
    MiddleLayerOptimization2.prototype.render = function() {
      return this.props.children;
    };
    return MiddleLayerOptimization2;
  }(React123.Component)
);

// node_modules/@progress/kendo-react-dialogs/dist/es/WindowActionsBar.js
var React124 = __toESM(require_react());
var PropTypes58 = __toESM(require_prop_types());
var WindowActionsBar = function(props) {
  var _a14 = props.layout, layout = _a14 === void 0 ? defaultProps10.layout : _a14, children2 = props.children;
  var wrapperClasses2 = classNames("k-actions", "k-window-actions", "k-actions-horizontal", "k-hstack", {
    "k-justify-content-start": layout === "start",
    "k-justify-content-center": layout === "center",
    "k-justify-content-end": layout === "end",
    "k-justify-content-stretch": layout === "stretched"
  });
  return React124.createElement("div", { className: wrapperClasses2 }, children2);
};
WindowActionsBar.propTypes = {
  children: PropTypes58.any,
  layout: PropTypes58.oneOf(["start", "center", "end", "stretched"])
};
var defaultProps10 = {
  layout: "end"
};

// node_modules/@progress/kendo-react-dialogs/dist/es/Window.js
var React125 = __toESM(require_react());
var ReactDOM5 = __toESM(require_react_dom());
var PropTypes59 = __toESM(require_prop_types());
var __extends47 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign60 = function() {
  __assign60 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign60.apply(this, arguments);
};
var DEFAULT_WIDTH = 300;
var DEFAULT_HEIGHT = 300;
var DEFAULT_MIN_WIDTH = 120;
var DEFAULT_MIN_HEIGHT = 100;
var DEFAULT_STEP = 5;
var WindowWithoutContext = (
  /** @class */
  function(_super) {
    __extends47(WindowWithoutContext2, _super);
    function WindowWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.context = 0;
      _this3.draggable = null;
      _this3.offSetCoordinates = { x: 0, y: 0 };
      _this3.aa = guid();
      _this3.titleId = _this3.generateTitleId();
      _this3.mounted = false;
      _this3.onKeyDown = function(event2) {
        if (event2.target !== event2.currentTarget) {
          return;
        }
        var minWidth = _this3.props.minWidth || DEFAULT_MIN_WIDTH;
        var minHeight = _this3.props.minHeight || DEFAULT_MIN_HEIGHT;
        if (event2.ctrlKey && _this3.props.resizable) {
          switch (event2.keyCode) {
            case Keys.up:
              event2.preventDefault();
              if (minHeight <= _this3.height - DEFAULT_STEP) {
                _this3.setState({ height: _this3.height - DEFAULT_STEP });
              }
              break;
            case Keys.down:
              event2.preventDefault();
              _this3.setState({ height: _this3.height + DEFAULT_STEP });
              break;
            case Keys.left:
              if (minWidth <= _this3.width - DEFAULT_STEP) {
                _this3.setState({ width: _this3.width - DEFAULT_STEP });
              }
              break;
            case Keys.right:
              _this3.setState({ width: _this3.width + DEFAULT_STEP });
              break;
            default:
              return;
          }
          _this3.dispatchMoveEvent(_this3.props.onResize, event2, false, void 0);
          return;
        }
        if (event2.altKey) {
          switch (event2.keyCode) {
            case Keys.up:
              if (_this3.windowStage === windowStage.MINIMIZED) {
                _this3.handleRestore(event2);
                dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.DEFAULT });
              } else if (_this3.windowStage === windowStage.DEFAULT) {
                _this3.handleFullscreen(event2);
                dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.FULLSCREEN });
              }
              break;
            case Keys.down:
              if (_this3.windowStage === windowStage.FULLSCREEN) {
                _this3.handleRestore(event2);
                dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.DEFAULT });
              } else if (_this3.windowStage === windowStage.DEFAULT) {
                _this3.handleMinimize(event2);
                dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.MINIMIZED });
              }
              break;
            default:
          }
          return;
        }
        if (!event2.ctrlKey) {
          switch (event2.keyCode) {
            case Keys.esc:
              if (_this3.props.onClose) {
                _this3.handleCloseWindow(event2);
              }
              return;
            case Keys.up:
              _this3.setState({ top: _this3.state.top - DEFAULT_STEP });
              break;
            case Keys.down:
              _this3.setState({ top: _this3.state.top + DEFAULT_STEP });
              break;
            case Keys.left:
              _this3.setState({ left: _this3.state.left - DEFAULT_STEP });
              break;
            case Keys.right:
              _this3.setState({ left: _this3.state.left + DEFAULT_STEP });
              break;
            default:
              return;
          }
        }
        _this3.dispatchMoveEvent(_this3.props.onMove, event2, false, void 0);
      };
      _this3.onPress = function(data2) {
        var e = data2.event;
        _this3.windowCoordinatesState.differenceLeft = e.pageX - _this3.left;
        _this3.windowCoordinatesState.differenceTop = e.pageY - _this3.top;
      };
      _this3.onDrag = function(data2) {
        var e = data2.event;
        e.originalEvent.preventDefault();
        if (_this3.windowStage !== windowStage.FULLSCREEN && _this3.props.draggable) {
          _this3.setState({
            top: Math.max(e.pageY - _this3.windowCoordinatesState.differenceTop, 0),
            left: e.pageX - _this3.windowCoordinatesState.differenceLeft,
            isDragging: true
          });
          if (_this3.props.onMove) {
            _this3.dispatchMoveEvent(_this3.props.onMove, e, true, false);
          }
        }
      };
      _this3.onRelease = function(data2) {
        var e = data2.event;
        if (_this3.windowStage !== windowStage.FULLSCREEN && _this3.props.draggable) {
          if (_this3.props.onMove) {
            _this3.dispatchMoveEvent(_this3.props.onMove, e, true, true);
          }
        }
        _this3.setState({
          isDragging: false
        });
      };
      _this3.onFocus = function() {
        if (_this3.bb) {
          clearTimeout(_this3.bb);
          _this3.bb = void 0;
        } else {
          _this3.setState({
            focused: true,
            zIndex: getMaxZIndex(_this3.getCurrentZIndex(), _this3.getDocument(), _this3.aa)
          });
        }
      };
      _this3.onBlur = function() {
        clearTimeout(_this3.bb);
        var currentWindow = _this3.getWindow();
        if (currentWindow) {
          _this3.bb = currentWindow.setTimeout(function() {
            if (_this3.mounted) {
              _this3.setState({ focused: false });
            }
            _this3.bb = void 0;
          });
        }
      };
      _this3.getInitialTop = function() {
        if (_this3.props.top !== void 0) {
          return _this3.props.top;
        }
        if (_this3.props.initialTop !== void 0) {
          return _this3.props.initialTop;
        }
        var height = DEFAULT_HEIGHT;
        if (_this3.props.height !== void 0) {
          height = _this3.props.height;
        } else if (_this3.props.initialHeight !== void 0) {
          height = _this3.props.initialHeight;
        }
        if (_this3.props.appendTo) {
          return _this3.props.appendTo.offsetHeight / 2 - height / 2;
        }
        var currentWindow = _this3.getWindow();
        return currentWindow ? currentWindow.innerHeight / 2 - height / 2 : 0;
      };
      _this3.getInitialLeft = function() {
        if (_this3.props.left !== void 0) {
          return _this3.props.left;
        }
        if (_this3.props.initialLeft !== void 0) {
          return _this3.props.initialLeft;
        }
        var width = DEFAULT_WIDTH;
        if (_this3.props.width !== void 0) {
          width = _this3.props.width;
        } else if (_this3.props.initialWidth !== void 0) {
          width = _this3.props.initialWidth;
        }
        if (_this3.props.appendTo) {
          return _this3.props.appendTo.offsetWidth / 2 - width / 2;
        }
        var currentWindow = _this3.getWindow();
        return currentWindow ? currentWindow.innerWidth / 2 - width / 2 : 0;
      };
      _this3.getInitialWidth = function() {
        var width = DEFAULT_WIDTH;
        if (_this3.props.width !== void 0) {
          width = _this3.props.width;
        } else if (_this3.props.initialWidth !== void 0) {
          width = _this3.props.initialWidth;
        }
        return width;
      };
      _this3.getInitialHeight = function() {
        var height = DEFAULT_HEIGHT;
        if (_this3.props.height !== void 0) {
          height = _this3.props.height;
        } else if (_this3.props.initialHeight !== void 0) {
          height = _this3.props.initialHeight;
        }
        return height;
      };
      _this3.handleMinimize = function(event2) {
        event2.preventDefault();
        _this3.windowCoordinatesState.leftBeforeAction = _this3.left;
        _this3.windowCoordinatesState.topBeforeAction = _this3.top;
        _this3.windowCoordinatesState.widthBeforeAction = _this3.width;
        _this3.windowCoordinatesState.heightBeforeAction = _this3.height;
        _this3.setState({
          stage: windowStage.MINIMIZED,
          height: 0
        });
        dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.MINIMIZED });
      };
      _this3.handleFullscreen = function(event2) {
        event2.preventDefault();
        _this3.windowCoordinatesState.leftBeforeAction = _this3.left;
        _this3.windowCoordinatesState.topBeforeAction = _this3.top;
        _this3.windowCoordinatesState.widthBeforeAction = _this3.width;
        _this3.windowCoordinatesState.heightBeforeAction = _this3.height;
        var currentWindow = _this3.getWindow();
        var innerWidth = currentWindow ? currentWindow.innerWidth : 0;
        var innerHeight = currentWindow ? currentWindow.innerHeight : 0;
        _this3.setState({
          left: 0,
          top: 0,
          width: _this3.props.appendTo ? _this3.props.appendTo.offsetWidth : innerWidth,
          height: _this3.props.appendTo ? _this3.props.appendTo.offsetHeight : innerHeight,
          stage: windowStage.FULLSCREEN
        });
        dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.FULLSCREEN });
      };
      _this3.handleRestore = function(event2) {
        event2.preventDefault();
        if (_this3.windowStage === windowStage.FULLSCREEN) {
          _this3.setState({
            stage: windowStage.DEFAULT,
            left: _this3.windowCoordinatesState.leftBeforeAction,
            top: _this3.windowCoordinatesState.topBeforeAction,
            width: _this3.windowCoordinatesState.widthBeforeAction,
            height: _this3.windowCoordinatesState.heightBeforeAction
          });
        } else if (_this3.windowStage === windowStage.MINIMIZED) {
          _this3.setState({
            stage: windowStage.DEFAULT,
            height: _this3.windowCoordinatesState.heightBeforeAction
          });
        }
        dispatchEvent(_this3.props.onStageChange, event2, _this3, { state: windowStage.DEFAULT });
      };
      _this3.handleCloseWindow = function(event2) {
        event2.preventDefault();
        dispatchEvent(_this3.props.onClose, event2, _this3, { state: void 0 });
      };
      _this3.handleDoubleClick = function(e) {
        if (_this3.windowStage === windowStage.FULLSCREEN || _this3.windowStage === windowStage.MINIMIZED) {
          _this3.handleRestore(e);
        } else {
          _this3.handleFullscreen(e);
        }
      };
      _this3.handleResize = function(event2, props2) {
        var x = _this3.props.appendTo ? event2.pageX - _this3.offSetCoordinates.x : event2.pageX;
        var y = _this3.props.appendTo ? event2.pageY - _this3.offSetCoordinates.y : event2.pageY;
        var currentWidth = _this3.width;
        var currentHeight = _this3.height;
        var minWidth = _this3.props.minWidth || DEFAULT_MIN_WIDTH;
        var minHeight = _this3.props.minHeight || DEFAULT_MIN_HEIGHT;
        var heightDifference = _this3.top - y;
        var widthDifference = _this3.left - x;
        var newWidth = x - _this3.left;
        var newHeight = y - _this3.top;
        var newState = Object.assign({}, _this3.state, { isDragging: !props2.end });
        if (props2.direction.indexOf("n") >= 0 && minHeight - (currentHeight + heightDifference) < 0) {
          if (_this3.top > 0) {
            newState.height = currentHeight + heightDifference;
          }
          newState.top = y;
        }
        if (props2.direction.indexOf("s") >= 0 && minHeight - newHeight < 0) {
          newState.height = newHeight;
        }
        if (props2.direction.indexOf("w") >= 0 && minWidth - (currentWidth + widthDifference) < 0) {
          if (_this3.left > 0) {
            newState.width = currentWidth + widthDifference;
          }
          newState.left = x;
        }
        if (props2.direction.indexOf("e") >= 0 && minWidth - newWidth < 0) {
          newState.width = newWidth;
        }
        _this3.setState(newState);
        _this3.dispatchMoveEvent(_this3.props.onResize, event2, true, props2.end);
      };
      _this3.dispatchMoveEvent = function(callback, event2, drag, end2) {
        if (!callback) {
          return;
        }
        callback.call(void 0, {
          nativeEvent: event2.nativeEvent ? event2.nativeEvent : event2.originalEvent,
          drag,
          end: end2,
          target: _this3,
          left: _this3.state.left,
          top: _this3.state.top,
          width: _this3.state.width,
          hight: _this3.state.height,
          height: _this3.state.height
        });
      };
      _this3.handleBrowserWindowResize = function() {
        if (_this3.windowStage === windowStage.FULLSCREEN) {
          var currentWindow = _this3.getWindow();
          var innerWidth_1 = currentWindow ? currentWindow.innerWidth : 0;
          var innerHeight_1 = currentWindow ? currentWindow.innerHeight : 0;
          _this3.setState({
            width: _this3.props.appendTo ? _this3.props.appendTo.offsetWidth : innerWidth_1,
            height: _this3.props.appendTo ? _this3.props.appendTo.offsetHeight : innerHeight_1
          });
        }
      };
      _this3.getCurrentZIndex = function() {
        if (!_this3.state || _this3.context === void 0) {
          return _this3.context ? _this3.context : DEFAULT_DIALOGS_ZINDEX;
        }
        return _this3.state.zIndex > (_this3.context ? _this3.context + ZINDEX_DIALOGS_STEP : 0) ? _this3.state.zIndex : _this3.context + ZINDEX_DIALOGS_STEP;
      };
      _this3.getDocument = function() {
        return _this3.props.appendTo ? _this3.props.appendTo.ownerDocument : document;
      };
      _this3.getWindow = function() {
        var currentDocument = _this3.getDocument();
        return currentDocument && currentDocument.defaultView;
      };
      validatePackage2(packageMetadata9);
      _this3.state = {
        stage: _this3.props.stage || windowStage.DEFAULT,
        isDragging: false,
        top: _this3.getInitialTop(),
        left: _this3.getInitialLeft(),
        width: _this3.getInitialWidth(),
        height: _this3.getInitialHeight(),
        focused: true,
        zIndex: getMaxZIndex(_this3.getCurrentZIndex(), _this3.getDocument(), _this3.aa)
      };
      _this3.windowCoordinatesState = {
        leftBeforeAction: _this3.getInitialLeft(),
        topBeforeAction: _this3.getInitialTop(),
        widthBeforeAction: _this3.getInitialWidth(),
        heightBeforeAction: _this3.getInitialHeight()
      };
      return _this3;
    }
    WindowWithoutContext2.prototype.componentDidMount = function() {
      var currentWindow = this.getWindow();
      if (currentWindow) {
        currentWindow.addEventListener("resize", this.handleBrowserWindowResize);
      }
      var currentDocument = this.getDocument();
      if (this.props.appendTo && currentDocument) {
        var containerCoordinates = this.props.appendTo.getBoundingClientRect();
        var bodyRect = currentDocument.body.getBoundingClientRect();
        this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;
        this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;
      }
      this.mounted = true;
    };
    WindowWithoutContext2.prototype.componentWillUnmount = function() {
      var currentWindow = this.getWindow();
      if (currentWindow) {
        currentWindow.removeEventListener("resize", this.handleBrowserWindowResize);
      }
      this.mounted = false;
    };
    WindowWithoutContext2.prototype.componentDidUpdate = function() {
      var currentDocument = this.getDocument();
      if (this.props.appendTo && currentDocument) {
        var containerCoordinates = this.props.appendTo.getBoundingClientRect();
        var bodyRect = currentDocument.body.getBoundingClientRect();
        this.offSetCoordinates.x = containerCoordinates.left - bodyRect.left;
        this.offSetCoordinates.y = containerCoordinates.top - bodyRect.top;
      }
      this.mounted = true;
    };
    WindowWithoutContext2.prototype.render = function() {
      var _a14, _b3;
      var _this3 = this;
      var elementsArray = React125.Children.toArray(this.props.children);
      var content = this.getContent(elementsArray);
      var actions = this.getActionBar(elementsArray);
      var currentZIndex = this.getCurrentZIndex();
      var classNamesWindow = classNames("k-window", this.props.className, (_a14 = {}, _a14["k-window-".concat(this.props.themeColor)] = this.props.themeColor, _a14["k-window-minimized"] = this.state.stage === "MINIMIZED", _a14["k-window-focused"] = this.state.focused, _a14));
      var windowElement = React125.createElement(
        ZIndexContext.Provider,
        { value: currentZIndex },
        React125.createElement(
          React125.Fragment,
          null,
          this.props.modal && React125.createElement("div", { className: "k-overlay", style: __assign60({ zIndex: currentZIndex }, this.props.overlayStyle) }),
          React125.createElement(
            "div",
            __assign60({}, (_b3 = {}, _b3[DATA_DIALOGS_ID] = this.aa, _b3), { tabIndex: 0, role: "dialog", "aria-labelledby": this.titleId, onFocus: this.onFocus, onBlur: this.onBlur, onKeyDown: this.onKeyDown, ref: function(el) {
              _this3.windowElement = el;
              _this3.element = el;
            }, className: classNamesWindow, style: __assign60({ top: this.top, left: this.left, width: this.width, height: this.height || "", zIndex: currentZIndex }, this.props.style) }),
            React125.createElement(
              MiddleLayerOptimization,
              { shouldUpdateOnDrag: this.props.shouldUpdateOnDrag || false, isDragging: this.state.isDragging },
              React125.createElement(
                Draggable,
                { onPress: this.onPress, onDrag: this.onDrag, onRelease: this.onRelease, ref: function(component) {
                  return _this3.draggable = component;
                } },
                React125.createElement(WindowTitleBar, { stage: this.windowStage, onDoubleClick: this.props.doubleClickStageChange ? this.handleDoubleClick : void 0, onMinimizeButtonClick: this.handleMinimize, onFullScreenButtonClick: this.handleFullscreen, onRestoreButtonClick: this.handleRestore, onCloseButtonClick: this.handleCloseWindow, closeButton: this.props.closeButton, minimizeButton: this.props.minimizeButton, maximizeButton: this.props.maximizeButton, restoreButton: this.props.restoreButton, id: this.titleId }, this.props.title)
              ),
              this.windowStage !== windowStage.MINIMIZED ? React125.createElement(
                React125.Fragment,
                null,
                React125.createElement("div", { className: "k-window-content" }, content),
                actions
              ) : null,
              this.windowStage === windowStage.DEFAULT && this.props.resizable ? React125.createElement(ResizeHandlers, { onResize: this.handleResize }) : null
            )
          )
        )
      );
      if (canUseDOM) {
        return this.props.appendTo !== null ? ReactDOM5.createPortal(windowElement, this.props.appendTo || document.body) : windowElement;
      }
      return null;
    };
    Object.defineProperty(WindowWithoutContext2.prototype, "top", {
      // Getters
      get: function() {
        if (this.windowStage !== windowStage.FULLSCREEN) {
          return Math.max(this.props.top || this.state.top, 0);
        }
        return 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(WindowWithoutContext2.prototype, "left", {
      get: function() {
        if (this.windowStage !== windowStage.FULLSCREEN) {
          return Math.max(this.props.left || this.state.left, 0);
        }
        return 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(WindowWithoutContext2.prototype, "width", {
      get: function() {
        var width = this.props.width || this.state.width;
        if (this.windowStage === windowStage.FULLSCREEN) {
          if (this.props.appendTo) {
            width = this.props.appendTo.offsetWidth;
            return width;
          }
          var currentWindow = this.getWindow();
          width = currentWindow ? currentWindow.innerWidth : 0;
        }
        return width;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(WindowWithoutContext2.prototype, "height", {
      get: function() {
        var height = this.props.height || this.state.height;
        if (this.windowStage === windowStage.FULLSCREEN) {
          if (this.props.appendTo) {
            height = this.props.appendTo.offsetHeight;
            return height;
          }
          var currentWindow = this.getWindow();
          height = currentWindow ? currentWindow.innerHeight : 0;
        } else if (this.windowStage === windowStage.MINIMIZED) {
          height = 0;
        }
        return height;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(WindowWithoutContext2.prototype, "windowStage", {
      get: function() {
        return this.props.stage || this.state.stage;
      },
      enumerable: false,
      configurable: true
    });
    WindowWithoutContext2.prototype.getActionBar = function(children2) {
      return children2.filter(function(child) {
        return child && child.type === WindowActionsBar;
      });
    };
    WindowWithoutContext2.prototype.getContent = function(children2) {
      return children2.filter(function(child) {
        return child && child.type !== WindowActionsBar;
      });
    };
    WindowWithoutContext2.prototype.generateTitleId = function() {
      return "window-title-" + this.aa;
    };
    WindowWithoutContext2.displayName = "Window";
    WindowWithoutContext2.propTypes = {
      width: PropTypes59.number,
      height: PropTypes59.number,
      left: PropTypes59.number,
      top: PropTypes59.number,
      initialWidth: PropTypes59.number,
      initialHeight: PropTypes59.number,
      initialLeft: PropTypes59.number,
      initialTop: PropTypes59.number,
      minWidth: PropTypes59.number,
      minHeight: PropTypes59.number,
      resizable: PropTypes59.bool,
      draggable: PropTypes59.bool,
      title: PropTypes59.any,
      shouldUpdateOnDrag: PropTypes59.bool,
      stage: PropTypes59.oneOf(["DEFAULT", "MINIMIZED", "FULLSCREEN"]),
      className: PropTypes59.string,
      style: PropTypes59.object,
      overlayStyle: PropTypes59.object
    };
    WindowWithoutContext2.defaultProps = {
      minWidth: DEFAULT_MIN_WIDTH,
      minHeight: DEFAULT_MIN_HEIGHT,
      resizable: true,
      draggable: true,
      modal: false,
      doubleClickStageChange: true
    };
    WindowWithoutContext2.contextType = ZIndexContext;
    return WindowWithoutContext2;
  }(React125.Component)
);
var WindowPropsContext = createPropsContext();
var Window2 = withPropsContext(WindowPropsContext, WindowWithoutContext);
Window2.displayName = "KendoReactWindow";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/SchedulerRemoveDialog.js
var React126 = __toESM(require_react());
var ReactDOM6 = __toESM(require_react_dom());
var SchedulerRemoveDialog = React126.forwardRef(function(props, ref) {
  var onClose = props.onClose, onCancel = props.onCancel, onConfirm = props.onConfirm;
  var target = React126.useRef(null);
  React126.useImperativeHandle(target, function() {
    return { props };
  });
  React126.useImperativeHandle(ref, function() {
    return target.current;
  });
  var localization = useLocalization();
  var removeCancelMessage = localization.toLanguageString(editorCancel, messages2[editorCancel]);
  var removeConfirmMessage = localization.toLanguageString(editorDelete, messages2[editorDelete]);
  var removeMessage = localization.toLanguageString(deleteConfirmation, messages2[deleteConfirmation]);
  var deleteDialogTitleMessage = localization.toLanguageString(deleteDialogTitle, messages2[deleteDialogTitle]);
  var handleClose = React126.useCallback(function(_a14) {
    var syntheticEvent = _a14.syntheticEvent;
    if (!onClose) {
      return;
    }
    var ev = {
      syntheticEvent,
      value: null,
      target: target.current
    };
    onClose.call(void 0, ev);
  }, [onClose]);
  var handleCancel = React126.useCallback(function(syntheticEvent) {
    if (!onCancel) {
      return;
    }
    onCancel.call(void 0, { syntheticEvent, value: null });
  }, [onCancel]);
  var handleConfirm = React126.useCallback(function(syntheticEvent) {
    if (!onConfirm) {
      return;
    }
    onConfirm.call(void 0, { syntheticEvent, value: null });
  }, [onConfirm]);
  return canUseDOM ? ReactDOM6.createPortal(React126.createElement(
    Dialog,
    { title: deleteDialogTitleMessage, onClose: handleClose },
    removeMessage,
    React126.createElement(
      DialogActionsBar,
      null,
      React126.createElement(Button, { onClick: handleCancel }, removeCancelMessage),
      React126.createElement(Button, { onClick: handleConfirm }, removeConfirmMessage)
    )
  ), document && document.body) : null;
});
SchedulerRemoveDialog.displayName = "KendoReactSchedulerRemoveDialog";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/SchedulerOccurrenceDialog.js
var React127 = __toESM(require_react());
var ReactDOM7 = __toESM(require_react_dom());
var SchedulerOccurrenceDialog = React127.forwardRef(function(props, ref) {
  var isRemove = props.isRemove, onClose = props.onClose, onSeriesClick = props.onSeriesClick, onOccurrenceClick = props.onOccurrenceClick;
  var target = React127.useRef(null);
  React127.useImperativeHandle(target, function() {
    return { props };
  });
  React127.useImperativeHandle(ref, function() {
    return target.current;
  });
  var localizationService = useLocalization();
  var localizeMessage = function(message) {
    return localizationService.toLanguageString(message, messages2[message]);
  };
  var editOccurrenceMessage = localizeMessage(editorOccurrence);
  var editSeriesMessage = localizeMessage(editorSeries);
  var editRecurringConfirmationMessage = localizeMessage(editorRecurringConfirmation);
  var editRecurringDialogTitleMessage = localizeMessage(editorRecurringDialogTitle);
  var deleteOccurrenceMessage = localizeMessage(deleteOccurrence);
  var deleteSeriesMessage = localizeMessage(deleteSeries);
  var deleteRecurringDialogTitleMessage = localizeMessage(deleteRecurringDialogTitle);
  var deleteRecurringConfirmationMessage = localizeMessage(deleteRecurringConfirmation);
  var titleMessage = isRemove ? deleteRecurringDialogTitleMessage : editRecurringDialogTitleMessage;
  var confirmationMessage = isRemove ? deleteRecurringConfirmationMessage : editRecurringConfirmationMessage;
  var occurrenceMessage = isRemove ? deleteOccurrenceMessage : editOccurrenceMessage;
  var seriesMessage = isRemove ? deleteSeriesMessage : editSeriesMessage;
  var handleClose = React127.useCallback(function(_a14) {
    var syntheticEvent = _a14.syntheticEvent;
    if (!onClose) {
      return;
    }
    onClose.call(void 0, { syntheticEvent, value: null, target: target.current });
  }, [onClose]);
  var handleSeriesClick = React127.useCallback(function(syntheticEvent) {
    if (!onSeriesClick) {
      return;
    }
    onSeriesClick.call(void 0, { syntheticEvent, value: null, target: target.current });
  }, [onSeriesClick]);
  var handleOccurrenceClick = React127.useCallback(function(syntheticEvent) {
    if (!onOccurrenceClick) {
      return;
    }
    onOccurrenceClick.call(void 0, { syntheticEvent, value: null, target: target.current });
  }, [onOccurrenceClick]);
  return canUseDOM ? ReactDOM7.createPortal(React127.createElement(
    Dialog,
    { title: titleMessage, onClose: handleClose },
    confirmationMessage,
    React127.createElement(
      DialogActionsBar,
      null,
      React127.createElement(Button, { onClick: handleOccurrenceClick }, occurrenceMessage),
      React127.createElement(Button, { onClick: handleSeriesClick }, seriesMessage)
    )
  ), document && document.body) : null;
});
SchedulerOccurrenceDialog.displayName = "KendoReactSchedulerSchedulerOccurrenceDialog";

// node_modules/@progress/kendo-react-scheduler/dist/es/tasks/SchedulerEditTask.js
var React128 = __toESM(require_react());
var __assign61 = function() {
  __assign61 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign61.apply(this, arguments);
};
var __rest28 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerEditTask = React128.forwardRef(function(props, ref) {
  var _ref = props.n, onDataAction = props.onDataAction, viewTaskProp = props.viewTask, propRemoveDialog = props.removeDialog, propRemoveItem = props.removeItem, onRemoveItemChange = props.onRemoveItemChange, propOccurrenceDialog = props.occurrenceDialog, propShowOccurrenceDialog = props.showOccurrenceDialog, onShowOccurrenceDialogChange = props.onShowOccurrenceDialogChange, propShowRemoveDialog = props.showRemoveDialog, onShowRemoveDialogChange = props.onShowRemoveDialogChange, taskProps = __rest28(props, ["_ref", "onDataAction", "viewTask", "removeDialog", "removeItem", "onRemoveItemChange", "occurrenceDialog", "showOccurrenceDialog", "onShowOccurrenceDialogChange", "showRemoveDialog", "onShowRemoveDialogChange"]);
  var viewTask = React128.useRef(null);
  React128.useImperativeHandle(viewTask, function() {
    return { props, element: viewTask.current && viewTask.current.element };
  });
  React128.useImperativeHandle(_ref, function() {
    return viewTask.current;
  });
  React128.useImperativeHandle(ref, function() {
    return viewTask.current;
  });
  var VieTask = viewTaskProp || defaultProps11.viewTask;
  var OccurrenceDialog = propOccurrenceDialog || defaultProps11.occurrenceDialog;
  var RemoveDialog = propRemoveDialog || defaultProps11.removeDialog;
  var editable = useEditable(props.editable);
  var fields = useSchedulerFieldsContext();
  var _a14 = useSchedulerDataContext(), data2 = _a14[0], dispatchData = _a14[1];
  var _b3 = React128.useState(null), series = _b3[0], setSeries = _b3[1];
  var _c2 = useControlledState(null, propRemoveItem, onRemoveItemChange), removeItem2 = _c2[0], setRemoveItem = _c2[1];
  var _d = useControlledState(false, propShowRemoveDialog, onShowRemoveDialogChange), showRemoveDialog = _d[0], setShowRemoveDialog = _d[1];
  var _e = useControlledState(false, propShowOccurrenceDialog, onShowOccurrenceDialogChange), showOccurrenceDialog = _e[0], setShowOccurrenceDialog = _e[1];
  var handleRemoveClick = React128.useCallback(function(event2) {
    if (!editable.remove) {
      return;
    }
    setRemoveItem(props.dataItem, event2);
    if (props.isRecurring) {
      setShowOccurrenceDialog(true, event2);
    } else {
      setShowRemoveDialog(true, event2);
    }
  }, [
    setRemoveItem,
    props.dataItem,
    props.isRecurring,
    setShowOccurrenceDialog,
    setShowRemoveDialog
  ]);
  var handleCancel = React128.useCallback(function(event2) {
    setSeries(null);
    setRemoveItem(null, event2);
    setShowRemoveDialog(false, event2);
    setShowOccurrenceDialog(false, event2);
  }, [
    setSeries,
    setRemoveItem,
    setShowRemoveDialog,
    setShowOccurrenceDialog
  ]);
  var handleRemoveConfirm = React128.useCallback(function(event2) {
    if (onDataAction && removeItem2) {
      onDataAction.call(void 0, {
        type: DATA_ACTION.remove,
        series,
        dataItem: removeItem2
      });
    }
    setRemoveItem(null, event2);
    setShowRemoveDialog(false, event2);
  }, [
    removeItem2,
    dispatchData,
    setShowRemoveDialog
  ]);
  var handleRemoveItemChange = React128.useCallback(function(value2, event2) {
    if (!setRemoveItem) {
      return;
    }
    setRemoveItem(value2, event2);
  }, [setRemoveItem]);
  var handleRemoveDialogChange = React128.useCallback(function(value2, event2) {
    if (!setShowRemoveDialog) {
      return;
    }
    setShowRemoveDialog(value2, event2);
  }, [setShowRemoveDialog]);
  var handleOccurrenceDialogChange = React128.useCallback(function(value2, event2) {
    if (!setShowOccurrenceDialog) {
      return;
    }
    setShowOccurrenceDialog(value2, event2);
  }, [setShowOccurrenceDialog]);
  var handleOccurrenceClick = React128.useCallback(function(event2) {
    if (removeItem2) {
      setSeries(false);
      setRemoveItem(props.dataItem, event2);
      setShowRemoveDialog(true, event2);
    }
    setShowOccurrenceDialog(false, event2);
  }, [
    setSeries,
    props.dataItem,
    removeItem2,
    setRemoveItem,
    setShowRemoveDialog
  ]);
  var handleSeriesClick = React128.useCallback(function(event2) {
    if (removeItem2) {
      setSeries(true);
      var dataItem = findMaster(removeItem2, fields, data2);
      setRemoveItem(dataItem, event2);
      setShowRemoveDialog(true, event2);
    }
    setShowOccurrenceDialog(false, event2);
  }, [
    fields,
    removeItem2,
    setSeries,
    setRemoveItem,
    setShowRemoveDialog,
    setShowOccurrenceDialog
  ]);
  return React128.createElement(
    SchedulerEditTaskContext,
    { remove: [removeItem2, handleRemoveItemChange], showRemoveDialog: [showRemoveDialog, handleRemoveDialogChange], showOccurrenceDialog: [showOccurrenceDialog, handleOccurrenceDialogChange] },
    React128.createElement(VieTask, __assign61({ n: viewTask }, taskProps, { onRemoveClick: handleRemoveClick })),
    showOccurrenceDialog && React128.createElement(OccurrenceDialog, { dataItem: removeItem2, isRemove: removeItem2 !== null, onClose: handleCancel, onOccurrenceClick: handleOccurrenceClick, onSeriesClick: handleSeriesClick }),
    showRemoveDialog && React128.createElement(RemoveDialog, { dataItem: removeItem2, onClose: handleCancel, onCancel: handleCancel, onConfirm: handleRemoveConfirm })
  );
});
var defaultProps11 = {
  viewTask: SchedulerViewTask,
  occurrenceDialog: SchedulerOccurrenceDialog,
  removeDialog: SchedulerRemoveDialog
};
SchedulerEditTask.defaultProps = defaultProps11;
SchedulerEditTask.displayName = "KendoReactSchedulerEditTask";

// node_modules/@progress/kendo-react-form/dist/es/FormContext.js
var React129 = __toESM(require_react());
var FormContext = React129.createContext(null);

// node_modules/@progress/kendo-react-form/dist/es/Field.js
var React130 = __toESM(require_react());
var __assign62 = function() {
  __assign62 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign62.apply(this, arguments);
};
var __rest29 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Field = function(props) {
  var name2 = props.name, component = props.component, validator = props.validator, children2 = props.children, onChange = props.onChange, others = __rest29(props, ["name", "component", "validator", "children", "onChange"]);
  var form = React130.useContext(FormContext);
  var formId = form ? form.id : "";
  React130.useEffect(function() {
    if (!form) {
      return;
    }
    var unregisterField = form.registerField(name2, validator);
    return unregisterField;
  }, [name2, formId, validator]);
  var handleOnChange = React130.useCallback(function(event2) {
    var newValue = event2 ? event2.value !== void 0 ? event2.value : event2.target ? event2.target.value : event2.target : event2;
    form.onChange(name2, { value: newValue });
    if (onChange) {
      onChange.call(void 0, event2);
    }
  }, [name2, formId, onChange]);
  var onNativeComponentChange = React130.useCallback(function(event2) {
    return form.onChange(name2, { value: event2.target.value });
  }, [name2, formId]);
  var handleOnBlur = React130.useCallback(function() {
    return form.onBlur(name2);
  }, [name2, formId]);
  var handleOnFocus = React130.useCallback(function() {
    return form.onFocus(name2);
  }, [name2, formId]);
  if (!form) {
    return null;
  }
  var value2 = form.valueGetter(name2);
  if (typeof component === "string") {
    return React130.createElement(component, __assign62({ onChange: onNativeComponentChange, onBlur: handleOnBlur, onFocus: handleOnFocus, value: value2, children: children2 }, others));
  }
  return React130.createElement(component, __assign62(__assign62({ children: children2 }, others), {
    // input
    onChange: handleOnChange,
    onBlur: handleOnBlur,
    onFocus: handleOnFocus,
    value: value2,
    // meta
    validationMessage: form.errors[name2],
    touched: form.touched[name2],
    modified: form.modified[name2],
    visited: form.visited[name2],
    // Our `valid` implementation requires double submit to show html5 validation errors,
    // however it's NOT recommended to show html5 validation errors at all as:
    // - There is no standard way to change validation look and feel with CSS.
    // - Look different in each browser / OS
    // - You can have a page in one language but an error message displayed in another language (not localizable)
    valid: !(Boolean(form.errors[name2]) && form.touched[name2]),
    name: name2
  }));
};
Field.displayName = "KendoReactField";

// node_modules/@progress/kendo-react-form/dist/es/package-metadata.js
var packageMetadata10 = {
  name: "@progress/kendo-react-form",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225633,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-form/dist/es/Form.js
var React131 = __toESM(require_react());
var PropTypes60 = __toESM(require_prop_types());
var __extends48 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign63 = function() {
  __assign63 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign63.apply(this, arguments);
};
var __spreadArray14 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var FORCEUPDATE_ACCUMULATOR_TIMEOUT = 0;
var Form = (
  /** @class */
  function(_super) {
    __extends48(Form2, _super);
    function Form2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.aa = guid();
      _this3._b = {};
      _this3.$b = {};
      _this3.ac = {};
      _this3.bc = {};
      _this3.Nc = {};
      _this3.cc = {};
      _this3.Oc = false;
      _this3.dc = false;
      _this3.isValid = function() {
        return _this3.isFormValid(_this3.errors);
      };
      _this3.accumulatedForceUpdate = function() {
        if (_this3.cb) {
          clearTimeout(_this3.cb);
        }
        _this3.cb = window.setTimeout(function() {
          _this3.cb = void 0;
          _this3.forceUpdate();
        }, FORCEUPDATE_ACCUMULATOR_TIMEOUT);
      };
      _this3.resetForm = function() {
        _this3.values = clone(_this3.props.initialValues);
        _this3.aa = guid();
        _this3._b = {};
        _this3.$b = {};
        _this3.ac = {};
        _this3.bc = {};
        _this3.cc = {};
        _this3.dc = false;
        _this3.forceUpdate();
      };
      _this3.onReset = function() {
        return _this3.resetForm();
      };
      _this3.addField = function(field) {
        _this3.cc[field] = true;
      };
      _this3.onSubmit = function(event2) {
        var touchedVisited = {};
        var fields = _this3.fields;
        if (event2) {
          if (typeof event2.preventDefault === "function") {
            event2.preventDefault();
          }
          if (typeof event2.stopPropagation === "function") {
            event2.stopPropagation();
          }
        }
        fields.forEach(function(fieldName) {
          touchedVisited[fieldName] = true;
        });
        _this3.visited = __assign63({}, touchedVisited);
        _this3.touched = __assign63({}, touchedVisited);
        var values2 = _this3.values;
        var isValid = _this3.isFormValid(_this3.errors);
        var isModified = _this3.isFormModified(_this3.modified, fields);
        if (_this3.props.onSubmitClick) {
          _this3.props.onSubmitClick.call(void 0, {
            values: values2,
            isValid,
            isModified,
            event: event2
          });
        }
        if (isValid && (_this3.props.ignoreModified || isModified) && _this3.props.onSubmit) {
          _this3.dc = true;
          _this3.props.onSubmit.call(void 0, values2, event2);
        }
        _this3.forceUpdate();
      };
      _this3.onChange = function(name2, options2) {
        var _a14;
        var value2 = options2.value;
        _this3.addField(name2);
        if (!_this3.modified[name2]) {
          _this3.modified = __assign63(__assign63({}, _this3.modified), (_a14 = {}, _a14[name2] = true, _a14));
        }
        _this3.valueSetter(name2, value2);
        _this3.forceUpdate();
      };
      _this3.onFocus = function(name2, skipForceUpdate) {
        var _a14;
        if (_this3.visited[name2]) {
          return;
        }
        _this3.visited = __assign63(__assign63({}, _this3.visited), (_a14 = {}, _a14[name2] = true, _a14));
        if (!skipForceUpdate) {
          _this3.forceUpdate();
        }
      };
      _this3.onBlur = function(name2, skipForceUpdate) {
        var _a14;
        if (_this3.touched[name2]) {
          return;
        }
        _this3.onFocus(name2, skipForceUpdate);
        _this3.touched = __assign63(__assign63({}, _this3.touched), (_a14 = {}, _a14[name2] = true, _a14));
        if (!skipForceUpdate) {
          _this3.forceUpdate();
        }
      };
      _this3.onFieldRegister = function(name2, validator) {
        var _a14;
        _this3.addField(name2);
        var oldValidators = _this3.validatorsByField[name2] || [];
        var nextIndex = oldValidators.length;
        _this3.validatorsByField = __assign63(__assign63({}, _this3.validatorsByField), (_a14 = {}, _a14[name2] = __spreadArray14(__spreadArray14([], oldValidators, true), [validator], false), _a14));
        _this3.accumulatedForceUpdate();
        return function() {
          var _a15;
          if (_this3.Oc) {
            return;
          }
          var newValidators = __spreadArray14([], _this3.validatorsByField[name2] || [], true);
          var validatorIsUnregistered = Boolean(newValidators[nextIndex]);
          newValidators[nextIndex] = void 0;
          _this3.validatorsByField = __assign63(__assign63({}, _this3.validatorsByField), (_a15 = {}, _a15[name2] = newValidators, _a15));
          if (validatorIsUnregistered) {
            _this3.accumulatedForceUpdate();
          }
        };
      };
      _this3.isFormValid = function(errors3) {
        return !Object.keys(errors3).some(function(fieldName) {
          return Boolean(errors3[fieldName]);
        });
      };
      _this3.isFormModified = function(modified, fields) {
        return fields.some(function(fieldName) {
          return modified[fieldName];
        });
      };
      _this3.isFormHasNotTouched = function(touched, fields) {
        return fields.some(function(fieldName) {
          return !touched[fieldName];
        });
      };
      _this3.isFormTouched = function(touched, fields) {
        return fields.some(function(fieldName) {
          return touched[fieldName];
        });
      };
      _this3.isFormVisited = function(visited, fields) {
        return fields.some(function(fieldName) {
          return visited[fieldName];
        });
      };
      _this3.valueGetter = function(fieldName) {
        return getter(fieldName)(_this3.values);
      };
      _this3.valueSetter = function(fieldName, value2) {
        return setter(fieldName)(_this3.values, value2);
      };
      _this3.onArrayAction = function(name2) {
        var _a14;
        _this3.addField(name2);
        if (!_this3.modified[name2]) {
          _this3.modified = __assign63(__assign63({}, _this3.modified), (_a14 = {}, _a14[name2] = true, _a14));
        }
        _this3.onBlur(name2, true);
      };
      _this3.onInsert = function(name2, options2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14([], _this3.valueGetter(name2) || [], true);
        newArray.splice(options2.index, 0, options2.value);
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
      };
      _this3.onUnshift = function(name2, options2) {
        _this3.onInsert(name2, {
          value: options2.value,
          index: 0
        });
      };
      _this3.onPush = function(name2, options2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14(__spreadArray14([], _this3.valueGetter(name2) || [], true), [options2.value], false);
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
      };
      _this3.onPop = function(name2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14([], _this3.valueGetter(name2) || [], true);
        var value2 = newArray.pop();
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
        return value2;
      };
      _this3.onRemove = function(name2, options2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14([], _this3.valueGetter(name2) || [], true);
        var value2 = newArray.splice(options2.index, 1);
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
        return value2;
      };
      _this3.onReplace = function(name2, options2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14([], _this3.valueGetter(name2) || [], true);
        newArray.splice(options2.index, 1, options2.value);
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
      };
      _this3.onMove = function(name2, options2) {
        _this3.onArrayAction(name2);
        var newArray = __spreadArray14([], _this3.valueGetter(name2) || [], true);
        var value2 = newArray[options2.prevIndex];
        newArray.splice(options2.prevIndex, 1);
        newArray.splice(options2.nextIndex, 0, value2);
        _this3.valueSetter(name2, newArray);
        _this3.forceUpdate();
      };
      validatePackage2(packageMetadata10);
      _this3.values = clone(props.initialValues);
      return _this3;
    }
    Object.defineProperty(Form2.prototype, "touched", {
      /**
       * @hidden
       */
      get: function() {
        return this._b;
      },
      /**
       * @hidden
       */
      set: function(value2) {
        this._b = value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "visited", {
      /**
       * @hidden
       */
      get: function() {
        return this.$b;
      },
      /**
       * @hidden
       */
      set: function(value2) {
        this.$b = value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "modified", {
      /**
       * @hidden
       */
      get: function() {
        return this.ac;
      },
      /**
       * @hidden
       */
      set: function(value2) {
        this.ac = value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "validatorsByField", {
      /**
       * @hidden
       */
      get: function() {
        return this.bc;
      },
      /**
       * @hidden
       */
      set: function(value2) {
        this.bc = value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "values", {
      /**
       * @hidden
       */
      get: function() {
        return this.Nc;
      },
      /**
       * @hidden
       */
      set: function(value2) {
        this.Nc = value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "fields", {
      /**
       * @hidden
       */
      get: function() {
        return Object.keys(this.cc);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "formErrors", {
      /**
       * @hidden
       */
      get: function() {
        if (this.props.validator) {
          return this.props.validator(this.values, this.valueGetter);
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Form2.prototype, "errors", {
      /**
       * @hidden
       */
      get: function() {
        var _this3 = this;
        var errors3 = {};
        var fields = this.fields;
        var validatorsByField = this.validatorsByField;
        fields.forEach(function(fieldName) {
          errors3[fieldName] = "";
          if (validatorsByField[fieldName]) {
            var validators_1 = [];
            validatorsByField[fieldName].forEach(function(validator) {
              if (Array.isArray(validator)) {
                validators_1.push.apply(validators_1, validator);
              } else {
                validators_1.push(validator);
              }
            });
            validators_1.find(function(validator) {
              if (validator) {
                var result = validator(_this3.valueGetter(fieldName), _this3.valueGetter, { name: fieldName });
                if (result) {
                  errors3[fieldName] = result;
                  return true;
                }
              }
              return false;
            });
          }
        });
        var formErrors = this.formErrors;
        if (formErrors) {
          cloneObject(this.formErrors, errors3);
        }
        return errors3;
      },
      enumerable: false,
      configurable: true
    });
    Form2.prototype.componentWillUnmount = function() {
      this.Oc = true;
      if (this.cb) {
        clearTimeout(this.cb);
      }
    };
    Form2.prototype.render = function() {
      var render5 = this.props.render;
      var touched = this.touched;
      var visited = this.visited;
      var modified = this.modified;
      var fields = this.fields;
      var errors3 = this.errors;
      var formValid = this.isFormValid(errors3);
      var formModified = this.isFormModified(modified, fields);
      var formTouched = this.isFormTouched(touched, fields);
      var formVisited = this.isFormVisited(visited, fields);
      var formHasNotTouched = this.isFormHasNotTouched(touched, fields);
      var allowSubmit = formHasNotTouched && !formValid || formValid && (this.props.ignoreModified || formModified);
      return React131.createElement(FormContext.Provider, { key: this.aa, value: {
        id: this.aa,
        valueGetter: this.valueGetter,
        errors: errors3,
        modified,
        touched,
        visited,
        registerField: this.onFieldRegister,
        onSubmit: this.onSubmit,
        onChange: this.onChange,
        onFocus: this.onFocus,
        onBlur: this.onBlur,
        onUnshift: this.onUnshift,
        onPush: this.onPush,
        onInsert: this.onInsert,
        onPop: this.onPop,
        onRemove: this.onRemove,
        onReplace: this.onReplace,
        onMove: this.onMove
      } }, render5({
        valid: formValid,
        modified: formModified,
        touched: formTouched,
        visited: formVisited,
        submitted: this.dc,
        valueGetter: this.valueGetter,
        errors: errors3,
        allowSubmit,
        onChange: this.onChange,
        onSubmit: this.onSubmit,
        onFormReset: this.resetForm
      }));
    };
    Form2.displayName = "KendoReactForm";
    Form2.propTypes = {
      initialValues: PropTypes60.any,
      onSubmit: PropTypes60.func,
      onSubmitClick: PropTypes60.func,
      render: PropTypes60.func.isRequired
    };
    return Form2;
  }(React131.Component)
);

// node_modules/@progress/kendo-react-form/dist/es/FieldArray.js
var React132 = __toESM(require_react());
var __assign64 = function() {
  __assign64 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign64.apply(this, arguments);
};
var __rest30 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FieldArray = function(props) {
  var name2 = props.name, component = props.component, validator = props.validator, type = props.type, children2 = props.children, others = __rest30(props, ["name", "component", "validator", "type", "children"]);
  var form = React132.useContext(FormContext);
  var formId = form ? form.id : "";
  React132.useEffect(function() {
    if (!form) {
      return;
    }
    var unregisterField = form.registerField(name2, validator);
    return unregisterField;
  }, [name2, formId, validator]);
  var onUnshift = React132.useCallback(function(event2) {
    return form.onUnshift(name2, event2);
  }, [name2, formId]);
  var onPush = React132.useCallback(function(event2) {
    return form.onPush(name2, event2);
  }, [name2, formId]);
  var onInsert = React132.useCallback(function(event2) {
    return form.onInsert(name2, event2);
  }, [name2, formId]);
  var onPop = React132.useCallback(function() {
    return form.onPop(name2);
  }, [name2, formId]);
  var onRemove = React132.useCallback(function(event2) {
    return form.onRemove(name2, event2);
  }, [name2, formId]);
  var onReplace = React132.useCallback(function(event2) {
    return form.onReplace(name2, event2);
  }, [name2, formId]);
  var onMove = React132.useCallback(function(event2) {
    return form.onMove(name2, event2);
  }, [name2, formId]);
  if (!form) {
    return null;
  }
  var value2 = form.valueGetter(name2);
  return React132.createElement(component, __assign64({
    // input
    value: value2,
    // meta
    validationMessage: form.errors[name2],
    touched: form.touched[name2],
    modified: form.modified[name2],
    visited: form.visited[name2],
    // Our `valid` implementation requires double submit to show html5 validation errors,
    // however it's NOT recommended to show html5 validation errors at all as:
    // - There is no standard way to change validation look and feel with CSS.
    // - Look different in each browser / OS
    // - You can have a page in one language but an error message displayed in another language (not localizable)
    valid: !(Boolean(form.errors[name2]) && form.touched[name2]),
    onUnshift,
    onPush,
    onInsert,
    onPop,
    onRemove,
    onReplace,
    onMove,
    children: children2,
    name: name2
  }, others));
};
FieldArray.displayName = "KendoReactFieldArray";

// node_modules/@progress/kendo-react-form/dist/es/FieldWrapper.js
var React133 = __toESM(require_react());
var FieldWrapper = function(props) {
  var fieldClassName = classNames({
    "k-form-field": true,
    "k-rtl": props.dir === "rtl"
  }, props.className);
  return React133.createElement("div", { className: fieldClassName, style: props.style }, props.children);
};
FieldWrapper.displayName = "KendoReactFieldWrapper";

// node_modules/@progress/kendo-react-form/dist/es/FormElement.js
var React134 = __toESM(require_react());
var __assign65 = function() {
  __assign65 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign65.apply(this, arguments);
};
var __rest31 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FormElement = React134.forwardRef(function(props, ref) {
  var _a14;
  var element6 = React134.useRef(null);
  var target = React134.useRef(null);
  React134.useImperativeHandle(target, function() {
    return { element: element6.current, props };
  });
  React134.useImperativeHandle(ref, function() {
    return target.current;
  });
  var form = React134.useContext(FormContext);
  var className = props.className, onSubmit = props.onSubmit, style = props.style, horizontal = props.horizontal, size = props.size, others = __rest31(props, ["className", "onSubmit", "style", "horizontal", "size"]);
  var formClassName = classNames((_a14 = {
    "k-form": true
  }, _a14["k-form-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-form-horizontal"] = horizontal === true, _a14), className);
  return React134.createElement("form", __assign65({ ref: element6 }, others, { style: props.style, className: formClassName, onSubmit: form ? form.onSubmit : void 0 }), props.children);
});
var defaultProps12 = {
  size: "medium"
};
FormElement.displayName = "KendoReactFormElement";
FormElement.defaultProps = defaultProps12;

// node_modules/@progress/kendo-drawing/dist/es/drawing.js
var drawing_exports = {};
__export(drawing_exports, {
  Animation: () => animation_default,
  AnimationFactory: () => animation_factory_default,
  Arc: () => arc_default2,
  BaseNode: () => base_node_default,
  Circle: () => circle_default2,
  Element: () => element_default,
  Gradient: () => gradient_default,
  GradientStop: () => gradient_stop_default,
  Group: () => group_default,
  HasObservers: () => has_observers_default,
  Image: () => image_default,
  Layout: () => layout_default,
  LinearGradient: () => linear_gradient_default,
  MultiPath: () => MultiPath,
  OptionsStore: () => options_store_default,
  Path: () => Path,
  PathParser: () => path_parser_default,
  QuadNode: () => quad_node_default,
  RadialGradient: () => radial_gradient_default,
  Rect: () => rect_default2,
  ShapesQuadTree: () => shapes_quad_tree_default,
  Surface: () => surface_default4,
  SurfaceFactory: () => surface_factory_default,
  Text: () => text_default,
  align: () => align2,
  canvas: () => canvas_exports,
  exportImage: () => exportImage,
  exportSVG: () => exportSVG,
  fit: () => fit2,
  parsePath: () => parse_path_default,
  stack: () => stack,
  svg: () => svg_exports,
  util: () => util_exports,
  vAlign: () => vAlign,
  vStack: () => vStack,
  vWrap: () => vWrap,
  wrap: () => wrap
});

// node_modules/@progress/kendo-drawing/dist/es/common/class.js
var Class = function Class2() {
};
var class_default = Class;

// node_modules/@progress/kendo-drawing/dist/es/common/observable.js
var Observable = function(Class3) {
  function Observable2() {
    Class3.call(this);
    this.Ba = {};
  }
  if (Class3)
    Observable2.__proto__ = Class3;
  Observable2.prototype = Object.create(Class3 && Class3.prototype);
  Observable2.prototype.constructor = Observable2;
  Observable2.prototype.bind = function bind(eventName, handlers, one) {
    var arguments$1 = arguments;
    var this$1 = this;
    var eventNames = getArray(eventName);
    var handlersIsFunction = isFunction4(handlers);
    var length = eventNames.length;
    if (handlers === void 0) {
      for (var field in eventName) {
        this$1.bind(field, eventName[field]);
      }
      return this;
    }
    var loop = function(idx2) {
      var eventName$1 = eventNames[idx2];
      var handler = handlersIsFunction ? handlers : handlers[eventName$1];
      if (handler) {
        if (one) {
          var original = handler;
          handler = function() {
            this$1.unbind(eventName$1, handler);
            original.apply(this$1, arguments$1);
          };
          handler.original = original;
        }
        var events2 = this$1.Ba[eventName$1] = this$1.Ba[eventName$1] || [];
        events2.push(handler);
      }
    };
    for (var idx = 0; idx < length; idx++)
      loop(idx);
    return this;
  };
  Observable2.prototype.one = function one(eventNames, handlers) {
    return this.bind(eventNames, handlers, true);
  };
  Observable2.prototype.first = function first2(eventName, handlers) {
    var this$1 = this;
    var eventNames = getArray(eventName);
    var handlersIsFunction = isFunction4(handlers);
    for (var idx = 0, length = eventNames.length; idx < length; idx++) {
      var eventName$1 = eventNames[idx];
      var handler = handlersIsFunction ? handlers : handlers[eventName$1];
      if (handler) {
        var events2 = this$1.Ba[eventName$1] = this$1.Ba[eventName$1] || [];
        events2.unshift(handler);
      }
    }
    return this;
  };
  Observable2.prototype.trigger = function trigger(eventName, e) {
    var this$1 = this;
    if (e === void 0)
      e = {};
    var events2 = this.Ba[eventName];
    if (events2) {
      var length = events2.length;
      e.sender = this;
      e.ec = false;
      e.preventDefault = preventDefault;
      e.isDefaultPrevented = isDefaultPrevented;
      events2 = events2.slice();
      for (var idx = 0; idx < length; idx++) {
        events2[idx].call(this$1, e);
      }
      return e.ec === true;
    }
    return false;
  };
  Observable2.prototype.unbind = function unbind(eventName, handler) {
    var events2 = this.Ba[eventName];
    if (eventName === void 0) {
      this.Ba = {};
    } else if (events2) {
      if (handler) {
        for (var idx = events2.length - 1; idx >= 0; idx--) {
          if (events2[idx] === handler || events2[idx].original === handler) {
            events2.splice(idx, 1);
          }
        }
      } else {
        this.Ba[eventName] = [];
      }
    }
    return this;
  };
  return Observable2;
}(class_default);
function isFunction4(value2) {
  return typeof value2 === "function";
}
function getArray(value2) {
  return typeof value2 === "string" ? [value2] : value2;
}
function preventDefault() {
  this.ec = true;
}
function isDefaultPrevented() {
  return this.ec === true;
}
var observable_default = Observable;

// node_modules/@progress/kendo-drawing/dist/es/common/animation-frame.js
var animationFrameProxy = function(callback) {
  var wnd = typeof window !== "undefined" ? window : {};
  var animationFrame = wnd.requestAnimationFrame || wnd.webkitRequestAnimationFrame || wnd.mozRequestAnimationFrame || wnd.oRequestAnimationFrame || wnd.msRequestAnimationFrame || function(callback2) {
    setTimeout(callback2, 1e3 / 60);
  };
  animationFrameProxy = function(callback2) {
    return animationFrame.call(wnd, callback2);
  };
  animationFrameProxy(callback);
};
var animation_frame_default = animationFrameProxy;

// node_modules/@progress/kendo-drawing/dist/es/common/html-encode.js
var ampRegExp = /&/g;
var ltRegExp = /</g;
var quoteRegExp = /"/g;
var aposRegExp = /'/g;
var gtRegExp = />/g;
function htmlEncode(value2) {
  return String(value2).replace(ampRegExp, "&amp;").replace(ltRegExp, "&lt;").replace(gtRegExp, "&gt;").replace(quoteRegExp, "&quot;").replace(aposRegExp, "&#39;");
}

// node_modules/@progress/kendo-drawing/dist/es/common/log-to-console.js
function logToConsole(message) {
  var console2 = window.console;
  if (typeof console2 != "undefined" && console2.log) {
    console2.log(message);
  }
}

// node_modules/@progress/kendo-drawing/dist/es/common/save-as.js
function saveAs(options2) {
  var dataURI = options2.dataURI;
  var fileName = options2.fileName;
  var data2 = dataURI;
  if (typeof data2 == "string" && window.Blob) {
    var parts = data2.split(";base64,");
    var contentType = parts[0];
    var base64 = atob(parts[1]);
    var array7 = new Uint8Array(base64.length);
    for (var idx = 0; idx < base64.length; idx++) {
      array7[idx] = base64.charCodeAt(idx);
    }
    data2 = new Blob([array7.buffer], { type: contentType });
  }
  if (navigator.msSaveBlob) {
    navigator.msSaveBlob(data2, fileName);
  } else {
    var link = document.createElement("a");
    link.download = fileName;
    data2 = link.href = URL.createObjectURL(data2);
    var e = document.createEvent("MouseEvents");
    e.initMouseEvent("click", true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
    link.dispatchEvent(e);
    setTimeout(function() {
      URL.revokeObjectURL(data2);
    });
  }
}

// node_modules/@progress/kendo-drawing/dist/es/common/support.js
function matchUserAgent(userAgent) {
  var browserRxs = {
    edge: /(edge)[ \/]([\w.]+)/i,
    webkit: /(chrome)[ \/]([\w.]+)/i,
    safari: /(webkit)[ \/]([\w.]+)/i,
    opera: /(opera)(?:.*version|)[ \/]([\w.]+)/i,
    msie: /(msie\s|trident.*? rv:)([\w.]+)/i,
    mozilla: /(mozilla)(?:.*? rv:([\w.]+))/i
  };
  var browser4 = {};
  for (var agent in browserRxs) {
    if (browserRxs.hasOwnProperty(agent)) {
      var match = userAgent.match(browserRxs[agent]);
      if (match) {
        browser4[agent] = true;
        browser4[match[1].toLowerCase().split(" ")[0].split("/")[0]] = true;
        browser4.version = parseInt(document.documentMode || match[2], 10);
        break;
      }
    }
  }
  return browser4;
}
var browser = null;
var support = {
  get browser() {
    if (typeof window === "undefined" || browser) {
      return browser;
    }
    browser = matchUserAgent(window.navigator.userAgent);
    return browser;
  }
};
var support_default = support;

// node_modules/@progress/kendo-drawing/dist/es/util/now.js
var now2 = Date.now || function() {
  return (/* @__PURE__ */ new Date()).getTime();
};
var now_default = now2;

// node_modules/@progress/kendo-drawing/dist/es/common/throttle.js
function throttle3(fn, delay) {
  var lastExecTime = 0;
  var timeout2;
  if (!delay || delay <= 0) {
    return fn;
  }
  var throttled = function() {
    var elapsed = now_default() - lastExecTime;
    var args = arguments;
    var exec2 = function() {
      fn.apply(null, args);
      lastExecTime = now_default();
    };
    if (!lastExecTime) {
      return exec2();
    }
    if (timeout2) {
      clearTimeout(timeout2);
    }
    if (elapsed > delay) {
      exec2();
    } else {
      timeout2 = setTimeout(exec2, delay - elapsed);
    }
  };
  throttled.cancel = function() {
    clearTimeout(timeout2);
  };
  return throttled;
}

// node_modules/@progress/kendo-drawing/dist/es/common/color/named-colors.js
var namedColors = {
  aliceblue: "f0f8ff",
  antiquewhite: "faebd7",
  aqua: "00ffff",
  aquamarine: "7fffd4",
  azure: "f0ffff",
  beige: "f5f5dc",
  bisque: "ffe4c4",
  black: "000000",
  blanchedalmond: "ffebcd",
  blue: "0000ff",
  blueviolet: "8a2be2",
  brown: "a52a2a",
  burlywood: "deb887",
  cadetblue: "5f9ea0",
  chartreuse: "7fff00",
  chocolate: "d2691e",
  coral: "ff7f50",
  cornflowerblue: "6495ed",
  cornsilk: "fff8dc",
  crimson: "dc143c",
  cyan: "00ffff",
  darkblue: "00008b",
  darkcyan: "008b8b",
  darkgoldenrod: "b8860b",
  darkgray: "a9a9a9",
  darkgrey: "a9a9a9",
  darkgreen: "006400",
  darkkhaki: "bdb76b",
  darkmagenta: "8b008b",
  darkolivegreen: "556b2f",
  darkorange: "ff8c00",
  darkorchid: "9932cc",
  darkred: "8b0000",
  darksalmon: "e9967a",
  darkseagreen: "8fbc8f",
  darkslateblue: "483d8b",
  darkslategray: "2f4f4f",
  darkslategrey: "2f4f4f",
  darkturquoise: "00ced1",
  darkviolet: "9400d3",
  deeppink: "ff1493",
  deepskyblue: "00bfff",
  dimgray: "696969",
  dimgrey: "696969",
  dodgerblue: "1e90ff",
  firebrick: "b22222",
  floralwhite: "fffaf0",
  forestgreen: "228b22",
  fuchsia: "ff00ff",
  gainsboro: "dcdcdc",
  ghostwhite: "f8f8ff",
  gold: "ffd700",
  goldenrod: "daa520",
  gray: "808080",
  grey: "808080",
  green: "008000",
  greenyellow: "adff2f",
  honeydew: "f0fff0",
  hotpink: "ff69b4",
  indianred: "cd5c5c",
  indigo: "4b0082",
  ivory: "fffff0",
  khaki: "f0e68c",
  lavender: "e6e6fa",
  lavenderblush: "fff0f5",
  lawngreen: "7cfc00",
  lemonchiffon: "fffacd",
  lightblue: "add8e6",
  lightcoral: "f08080",
  lightcyan: "e0ffff",
  lightgoldenrodyellow: "fafad2",
  lightgray: "d3d3d3",
  lightgrey: "d3d3d3",
  lightgreen: "90ee90",
  lightpink: "ffb6c1",
  lightsalmon: "ffa07a",
  lightseagreen: "20b2aa",
  lightskyblue: "87cefa",
  lightslategray: "778899",
  lightslategrey: "778899",
  lightsteelblue: "b0c4de",
  lightyellow: "ffffe0",
  lime: "00ff00",
  limegreen: "32cd32",
  linen: "faf0e6",
  magenta: "ff00ff",
  maroon: "800000",
  mediumaquamarine: "66cdaa",
  mediumblue: "0000cd",
  mediumorchid: "ba55d3",
  mediumpurple: "9370d8",
  mediumseagreen: "3cb371",
  mediumslateblue: "7b68ee",
  mediumspringgreen: "00fa9a",
  mediumturquoise: "48d1cc",
  mediumvioletred: "c71585",
  midnightblue: "191970",
  mintcream: "f5fffa",
  mistyrose: "ffe4e1",
  moccasin: "ffe4b5",
  navajowhite: "ffdead",
  navy: "000080",
  oldlace: "fdf5e6",
  olive: "808000",
  olivedrab: "6b8e23",
  orange: "ffa500",
  orangered: "ff4500",
  orchid: "da70d6",
  palegoldenrod: "eee8aa",
  palegreen: "98fb98",
  paleturquoise: "afeeee",
  palevioletred: "d87093",
  papayawhip: "ffefd5",
  peachpuff: "ffdab9",
  peru: "cd853f",
  pink: "ffc0cb",
  plum: "dda0dd",
  powderblue: "b0e0e6",
  purple: "800080",
  red: "ff0000",
  rosybrown: "bc8f8f",
  royalblue: "4169e1",
  saddlebrown: "8b4513",
  salmon: "fa8072",
  sandybrown: "f4a460",
  seagreen: "2e8b57",
  seashell: "fff5ee",
  sienna: "a0522d",
  silver: "c0c0c0",
  skyblue: "87ceeb",
  slateblue: "6a5acd",
  slategray: "708090",
  slategrey: "708090",
  snow: "fffafa",
  springgreen: "00ff7f",
  steelblue: "4682b4",
  tan: "d2b48c",
  teal: "008080",
  thistle: "d8bfd8",
  tomato: "ff6347",
  turquoise: "40e0d0",
  violet: "ee82ee",
  wheat: "f5deb3",
  white: "ffffff",
  whitesmoke: "f5f5f5",
  yellow: "ffff00",
  yellowgreen: "9acd32"
};
var named_colors_default = namedColors;

// node_modules/@progress/kendo-drawing/dist/es/common/color/parse-color.js
var browser2 = support_default.browser;
var matchNamedColor = function(color) {
  var colorNames = Object.keys(named_colors_default);
  colorNames.push("transparent");
  var regexp = new RegExp("^(" + colorNames.join("|") + ")(\\W|$)", "i");
  matchNamedColor = function(color2) {
    return regexp.exec(color2);
  };
  return regexp.exec(color);
};
var BaseColor = function(Class3) {
  function BaseColor2() {
    Class3.call(this);
  }
  if (Class3)
    BaseColor2.__proto__ = Class3;
  BaseColor2.prototype = Object.create(Class3 && Class3.prototype);
  BaseColor2.prototype.constructor = BaseColor2;
  BaseColor2.prototype.toHSV = function toHSV() {
    return this;
  };
  BaseColor2.prototype.toRGB = function toRGB() {
    return this;
  };
  BaseColor2.prototype.toHex = function toHex(options2) {
    return this.toBytes().toHex(options2);
  };
  BaseColor2.prototype.toBytes = function toBytes() {
    return this;
  };
  BaseColor2.prototype.toCss = function toCss(options2) {
    return "#" + this.toHex(options2);
  };
  BaseColor2.prototype.toCssRgba = function toCssRgba() {
    var rgb = this.toBytes();
    return "rgba(" + rgb.r + ", " + rgb.g + ", " + rgb.b + ", " + parseFloat(Number(this.a).toFixed(3)) + ")";
  };
  BaseColor2.prototype.toDisplay = function toDisplay() {
    if (browser2.msie && browser2.version < 9) {
      return this.toCss();
    }
    return this.toCssRgba();
  };
  BaseColor2.prototype.equals = function equals(c) {
    return c === this || c !== null && c !== void 0 && this.toCssRgba() === parseColor(c).toCssRgba();
  };
  BaseColor2.prototype.diff = function diff(other) {
    if (other === null) {
      return NaN;
    }
    var c1 = this.toBytes();
    var c2 = other.toBytes();
    return Math.sqrt(Math.pow((c1.r - c2.r) * 0.3, 2) + Math.pow((c1.g - c2.g) * 0.59, 2) + Math.pow((c1.b - c2.b) * 0.11, 2));
  };
  BaseColor2.prototype.clone = function clone2() {
    var c = this.toBytes();
    if (c === this) {
      c = new Bytes(c.r, c.g, c.b, c.a);
    }
    return c;
  };
  return BaseColor2;
}(class_default);
var RGB = function(BaseColor2) {
  function RGB2(r, g, b, a) {
    BaseColor2.call(this);
    this.r = r;
    this.g = g;
    this.b = b;
    this.a = a;
  }
  if (BaseColor2)
    RGB2.__proto__ = BaseColor2;
  RGB2.prototype = Object.create(BaseColor2 && BaseColor2.prototype);
  RGB2.prototype.constructor = RGB2;
  RGB2.prototype.toHSV = function toHSV() {
    var ref = this;
    var r = ref.r;
    var g = ref.g;
    var b = ref.b;
    var min = Math.min(r, g, b);
    var max = Math.max(r, g, b);
    var delta = max - min;
    var v = max;
    var h, s;
    if (delta === 0) {
      return new HSV(0, 0, v, this.a);
    }
    if (max !== 0) {
      s = delta / max;
      if (r === max) {
        h = (g - b) / delta;
      } else if (g === max) {
        h = 2 + (b - r) / delta;
      } else {
        h = 4 + (r - g) / delta;
      }
      h *= 60;
      if (h < 0) {
        h += 360;
      }
    } else {
      s = 0;
      h = -1;
    }
    return new HSV(h, s, v, this.a);
  };
  RGB2.prototype.toHSL = function toHSL() {
    var ref = this;
    var r = ref.r;
    var g = ref.g;
    var b = ref.b;
    var max = Math.max(r, g, b);
    var min = Math.min(r, g, b);
    var h, s, l = (max + min) / 2;
    if (max === min) {
      h = s = 0;
    } else {
      var d = max - min;
      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
      switch (max) {
        case r:
          h = (g - b) / d + (g < b ? 6 : 0);
          break;
        case g:
          h = (b - r) / d + 2;
          break;
        case b:
          h = (r - g) / d + 4;
          break;
        default:
          break;
      }
    }
    return new HSL(h * 60, s * 100, l * 100, this.a);
  };
  RGB2.prototype.toBytes = function toBytes() {
    return new Bytes(this.r * 255, this.g * 255, this.b * 255, this.a);
  };
  return RGB2;
}(BaseColor);
var Bytes = function(RGB2) {
  function Bytes2(r, g, b, a) {
    RGB2.call(this, Math.round(r), Math.round(g), Math.round(b), a);
  }
  if (RGB2)
    Bytes2.__proto__ = RGB2;
  Bytes2.prototype = Object.create(RGB2 && RGB2.prototype);
  Bytes2.prototype.constructor = Bytes2;
  Bytes2.prototype.toRGB = function toRGB() {
    return new RGB2(this.r / 255, this.g / 255, this.b / 255, this.a);
  };
  Bytes2.prototype.toHSV = function toHSV() {
    return this.toRGB().toHSV();
  };
  Bytes2.prototype.toHSL = function toHSL() {
    return this.toRGB().toHSL();
  };
  Bytes2.prototype.toHex = function toHex(options2) {
    var value2 = hex(this.r, 2) + hex(this.g, 2) + hex(this.b, 2);
    if (options2 && options2.alpha) {
      value2 += hex(Math.round(this.a * 255), 2);
    }
    return value2;
  };
  Bytes2.prototype.toBytes = function toBytes() {
    return this;
  };
  return Bytes2;
}(RGB);
function hex(n, width, pad4) {
  if (pad4 === void 0)
    pad4 = "0";
  var result = n.toString(16);
  while (width > result.length) {
    result = pad4 + result;
  }
  return result;
}
var HSV = function(BaseColor2) {
  function HSV2(h, s, v, a) {
    BaseColor2.call(this);
    this.h = h;
    this.s = s;
    this.v = v;
    this.a = a;
  }
  if (BaseColor2)
    HSV2.__proto__ = BaseColor2;
  HSV2.prototype = Object.create(BaseColor2 && BaseColor2.prototype);
  HSV2.prototype.constructor = HSV2;
  HSV2.prototype.toRGB = function toRGB() {
    var ref = this;
    var h = ref.h;
    var s = ref.s;
    var v = ref.v;
    var r, g, b;
    if (s === 0) {
      r = g = b = v;
    } else {
      h /= 60;
      var i = Math.floor(h);
      var f = h - i;
      var p = v * (1 - s);
      var q = v * (1 - s * f);
      var t = v * (1 - s * (1 - f));
      switch (i) {
        case 0:
          r = v;
          g = t;
          b = p;
          break;
        case 1:
          r = q;
          g = v;
          b = p;
          break;
        case 2:
          r = p;
          g = v;
          b = t;
          break;
        case 3:
          r = p;
          g = q;
          b = v;
          break;
        case 4:
          r = t;
          g = p;
          b = v;
          break;
        default:
          r = v;
          g = p;
          b = q;
          break;
      }
    }
    return new RGB(r, g, b, this.a);
  };
  HSV2.prototype.toHSL = function toHSL() {
    return this.toRGB().toHSL();
  };
  HSV2.prototype.toBytes = function toBytes() {
    return this.toRGB().toBytes();
  };
  return HSV2;
}(BaseColor);
var HSL = function(BaseColor2) {
  function HSL2(h, s, l, a) {
    BaseColor2.call(this);
    this.h = h;
    this.s = s;
    this.l = l;
    this.a = a;
  }
  if (BaseColor2)
    HSL2.__proto__ = BaseColor2;
  HSL2.prototype = Object.create(BaseColor2 && BaseColor2.prototype);
  HSL2.prototype.constructor = HSL2;
  HSL2.prototype.toRGB = function toRGB() {
    var h = this.h / 360;
    var s = this.s / 100;
    var l = this.l / 100;
    var r, g, b;
    if (s === 0) {
      r = g = b = l;
    } else {
      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;
      var p = 2 * l - q;
      r = hue2rgb(p, q, h + 1 / 3);
      g = hue2rgb(p, q, h);
      b = hue2rgb(p, q, h - 1 / 3);
    }
    return new RGB(r, g, b, this.a);
  };
  HSL2.prototype.toHSV = function toHSV() {
    return this.toRGB().toHSV();
  };
  HSL2.prototype.toBytes = function toBytes() {
    return this.toRGB().toBytes();
  };
  return HSL2;
}(BaseColor);
function hue2rgb(p, q, s) {
  var t = s;
  if (t < 0) {
    t += 1;
  }
  if (t > 1) {
    t -= 1;
  }
  if (t < 1 / 6) {
    return p + (q - p) * 6 * t;
  }
  if (t < 1 / 2) {
    return q;
  }
  if (t < 2 / 3) {
    return p + (q - p) * (2 / 3 - t) * 6;
  }
  return p;
}
function alphaFromHex(a) {
  return parseFloat(parseFloat(parseInt(a, 16) / 255).toFixed(3));
}
function parseColor(value2, safe) {
  var m, ret;
  if (value2 == null || value2 === "none") {
    return null;
  }
  if (value2 instanceof BaseColor) {
    return value2;
  }
  var color = value2.toLowerCase();
  if (m = matchNamedColor(color)) {
    if (m[1] === "transparent") {
      color = new RGB(1, 1, 1, 0);
    } else {
      color = parseColor(named_colors_default[m[1]], safe);
    }
    color.match = [m[1]];
    return color;
  }
  if (m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\b/i.exec(color)) {
    ret = new Bytes(
      parseInt(m[1], 16),
      parseInt(m[2], 16),
      parseInt(m[3], 16),
      1
    );
  } else if (m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])\b/i.exec(color)) {
    ret = new Bytes(
      parseInt(m[1] + m[1], 16),
      parseInt(m[2] + m[2], 16),
      parseInt(m[3] + m[3], 16),
      1
    );
  } else if (m = /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])\b/i.exec(color)) {
    ret = new Bytes(
      parseInt(m[1] + m[1], 16),
      parseInt(m[2] + m[2], 16),
      parseInt(m[3] + m[3], 16),
      alphaFromHex(m[4] + m[4])
    );
  } else if (m = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})\b/i.exec(color)) {
    ret = new Bytes(
      parseInt(m[1], 16),
      parseInt(m[2], 16),
      parseInt(m[3], 16),
      alphaFromHex(m[4])
    );
  } else if (m = /^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)/.exec(color)) {
    ret = new Bytes(
      parseInt(m[1], 10),
      parseInt(m[2], 10),
      parseInt(m[3], 10),
      1
    );
  } else if (m = /^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)/.exec(color)) {
    ret = new Bytes(
      parseInt(m[1], 10),
      parseInt(m[2], 10),
      parseInt(m[3], 10),
      parseFloat(m[4])
    );
  } else if (m = /^rgb\(\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*\)/.exec(color)) {
    ret = new RGB(
      parseFloat(m[1]) / 100,
      parseFloat(m[2]) / 100,
      parseFloat(m[3]) / 100,
      1
    );
  } else if (m = /^rgba\(\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9]*\.?[0-9]+)%\s*,\s*([0-9.]+)\s*\)/.exec(color)) {
    ret = new RGB(
      parseFloat(m[1]) / 100,
      parseFloat(m[2]) / 100,
      parseFloat(m[3]) / 100,
      parseFloat(m[4])
    );
  }
  if (ret) {
    ret.match = m;
  } else if (!safe) {
    throw new Error("Cannot parse color: " + color);
  }
  return ret;
}

// node_modules/@progress/kendo-drawing/dist/es/common/color/color.js
var DARK_TRESHOLD = 180;
var Color = function(Class3) {
  function Color2(value2) {
    var this$1 = this;
    Class3.call(this);
    if (arguments.length === 1) {
      var formats = Color2.formats;
      var resolvedColor = this.resolveColor(value2);
      for (var idx = 0; idx < formats.length; idx++) {
        var formatRegex = formats[idx].re;
        var processor = formats[idx].process;
        var parts = formatRegex.exec(resolvedColor);
        if (parts) {
          var channels = processor(parts);
          this$1.r = channels[0];
          this$1.g = channels[1];
          this$1.b = channels[2];
        }
      }
    } else {
      this.r = arguments[0];
      this.g = arguments[1];
      this.b = arguments[2];
    }
    this.r = this.normalizeByte(this.r);
    this.g = this.normalizeByte(this.g);
    this.b = this.normalizeByte(this.b);
  }
  if (Class3)
    Color2.__proto__ = Class3;
  Color2.prototype = Object.create(Class3 && Class3.prototype);
  Color2.prototype.constructor = Color2;
  Color2.prototype.toHex = function toHex() {
    var pad4 = this.padDigit;
    var r = this.r.toString(16);
    var g = this.g.toString(16);
    var b = this.b.toString(16);
    return "#" + pad4(r) + pad4(g) + pad4(b);
  };
  Color2.prototype.resolveColor = function resolveColor(value2) {
    var color = value2 || "black";
    if (color.charAt(0) === "#") {
      color = color.substr(1, 6);
    }
    color = color.replace(/ /g, "");
    color = color.toLowerCase();
    color = Color2.namedColors[color] || color;
    return color;
  };
  Color2.prototype.normalizeByte = function normalizeByte(value2) {
    if (value2 < 0 || isNaN(value2)) {
      return 0;
    }
    return value2 > 255 ? 255 : value2;
  };
  Color2.prototype.padDigit = function padDigit(value2) {
    return value2.length === 1 ? "0" + value2 : value2;
  };
  Color2.prototype.brightness = function brightness(value2) {
    var round4 = Math.round;
    this.r = round4(this.normalizeByte(this.r * value2));
    this.g = round4(this.normalizeByte(this.g * value2));
    this.b = round4(this.normalizeByte(this.b * value2));
    return this;
  };
  Color2.prototype.percBrightness = function percBrightness() {
    return Math.sqrt(0.241 * this.r * this.r + 0.691 * this.g * this.g + 0.068 * this.b * this.b);
  };
  Color2.prototype.isDark = function isDark() {
    return this.percBrightness() < DARK_TRESHOLD;
  };
  Color2.fromBytes = function fromBytes(r, g, b, a) {
    return new Bytes(r, g, b, a != null ? a : 1);
  };
  Color2.fromRGB = function fromRGB(r, g, b, a) {
    return new RGB(r, g, b, a != null ? a : 1);
  };
  Color2.fromHSV = function fromHSV(h, s, v, a) {
    return new HSV(h, s, v, a != null ? a : 1);
  };
  Color2.fromHSL = function fromHSL(h, s, l, a) {
    return new HSL(h, s, l, a != null ? a : 1);
  };
  return Color2;
}(class_default);
Color.formats = [{
  re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
  process: function(parts) {
    return [
      parseInt(parts[1], 10),
      parseInt(parts[2], 10),
      parseInt(parts[3], 10)
    ];
  }
}, {
  re: /^(\w{2})(\w{2})(\w{2})$/,
  process: function(parts) {
    return [
      parseInt(parts[1], 16),
      parseInt(parts[2], 16),
      parseInt(parts[3], 16)
    ];
  }
}, {
  re: /^(\w{1})(\w{1})(\w{1})$/,
  process: function(parts) {
    return [
      parseInt(parts[1] + parts[1], 16),
      parseInt(parts[2] + parts[2], 16),
      parseInt(parts[3] + parts[3], 16)
    ];
  }
}];
Color.namedColors = named_colors_default;
var color_default = Color;

// node_modules/@progress/kendo-drawing/dist/es/core/has-observers.js
var HasObservers = function(Class3) {
  function HasObservers2() {
    Class3.apply(this, arguments);
  }
  if (Class3)
    HasObservers2.__proto__ = Class3;
  HasObservers2.prototype = Object.create(Class3 && Class3.prototype);
  HasObservers2.prototype.constructor = HasObservers2;
  HasObservers2.prototype.observers = function observers() {
    this.Ra = this.Ra || [];
    return this.Ra;
  };
  HasObservers2.prototype.addObserver = function addObserver(element6) {
    if (!this.Ra) {
      this.Ra = [element6];
    } else {
      this.Ra.push(element6);
    }
    return this;
  };
  HasObservers2.prototype.removeObserver = function removeObserver(element6) {
    var observers = this.observers();
    var index = observers.indexOf(element6);
    if (index !== -1) {
      observers.splice(index, 1);
    }
    return this;
  };
  HasObservers2.prototype.trigger = function trigger(methodName, event2) {
    var observers = this.Ra;
    if (observers && !this.xb) {
      for (var idx = 0; idx < observers.length; idx++) {
        var observer = observers[idx];
        if (observer[methodName]) {
          observer[methodName](event2);
        }
      }
    }
    return this;
  };
  HasObservers2.prototype.optionsChange = function optionsChange(e) {
    if (e === void 0)
      e = {};
    e.element = this;
    this.trigger("optionsChange", e);
  };
  HasObservers2.prototype.geometryChange = function geometryChange() {
    this.trigger("geometryChange", {
      element: this
    });
  };
  HasObservers2.prototype.suspend = function suspend() {
    this.xb = (this.xb || 0) + 1;
    return this;
  };
  HasObservers2.prototype.resume = function resume() {
    this.xb = Math.max((this.xb || 0) - 1, 0);
    return this;
  };
  HasObservers2.prototype.Sa = function _observerField(field, value2) {
    if (this[field]) {
      this[field].removeObserver(this);
    }
    this[field] = value2;
    value2.addObserver(this);
  };
  return HasObservers2;
}(class_default);
var has_observers_default = HasObservers;

// node_modules/@progress/kendo-drawing/dist/es/util.js
var util_exports = {};
__export(util_exports, {
  DEG_TO_RAD: () => DEG_TO_RAD,
  LRUCache: () => lru_cache_default,
  MAX_NUM: () => MAX_NUM,
  MIN_NUM: () => MIN_NUM,
  TextMetrics: () => text_metrics_default,
  append: () => append,
  arabicToRoman: () => arabicToRoman,
  bindEvents: () => bindEvents,
  createPromise: () => createPromise,
  defined: () => defined,
  definitionId: () => definitionId,
  deg: () => deg,
  elementOffset: () => elementOffset,
  elementPadding: () => elementPadding,
  elementScale: () => elementScale,
  elementSize: () => elementSize,
  elementStyles: () => elementStyles,
  encodeBase64: () => encodeBase64,
  eventCoordinates: () => eventCoordinates,
  eventElement: () => eventElement,
  hashKey: () => hashKey,
  isTransparent: () => isTransparent,
  last: () => last3,
  limitValue: () => limitValue,
  measureText: () => measureText,
  mergeSort: () => mergeSort,
  normalizeText: () => normalizeText,
  now: () => now_default,
  objectKey: () => objectKey,
  promiseAll: () => promiseAll,
  rad: () => rad,
  round: () => round3,
  unbindEvents: () => unbindEvents,
  valueOrDefault: () => valueOrDefault2
});

// node_modules/@progress/kendo-drawing/dist/es/util/append.js
function append(first2, second) {
  first2.push.apply(first2, second);
  return first2;
}

// node_modules/@progress/kendo-drawing/dist/es/util/arabic-to-roman.js
var literals = {
  1: "i",
  10: "x",
  100: "c",
  2: "ii",
  20: "xx",
  200: "cc",
  3: "iii",
  30: "xxx",
  300: "ccc",
  4: "iv",
  40: "xl",
  400: "cd",
  5: "v",
  50: "l",
  500: "d",
  6: "vi",
  60: "lx",
  600: "dc",
  7: "vii",
  70: "lxx",
  700: "dcc",
  8: "viii",
  80: "lxxx",
  800: "dccc",
  9: "ix",
  90: "xc",
  900: "cm",
  1e3: "m"
};
function arabicToRoman(n) {
  var values2 = [
    1e3,
    900,
    800,
    700,
    600,
    500,
    400,
    300,
    200,
    100,
    90,
    80,
    70,
    60,
    50,
    40,
    30,
    20,
    10,
    9,
    8,
    7,
    6,
    5,
    4,
    3,
    2,
    1
  ];
  var roman = "";
  while (n > 0) {
    if (n < values2[0]) {
      values2.shift();
    } else {
      roman += literals[values2[0]];
      n -= values2[0];
    }
  }
  return roman;
}

// node_modules/@progress/kendo-drawing/dist/es/util/create-promise.js
function createPromise() {
  var resolveFn, rejectFn;
  var promise = new Promise(function(resolve, reject) {
    resolveFn = function(data2) {
      promise.fc = "resolved";
      resolve(data2);
      return promise;
    };
    rejectFn = function(data2) {
      promise.fc = "rejected";
      reject(data2);
      return promise;
    };
  });
  promise.fc = "pending";
  promise.resolve = resolveFn;
  promise.reject = rejectFn;
  promise.state = function() {
    return promise.fc;
  };
  return promise;
}

// node_modules/@progress/kendo-drawing/dist/es/util/defined.js
var UNDEFINED = "undefined";
function defined(value2) {
  return typeof value2 !== UNDEFINED;
}

// node_modules/@progress/kendo-drawing/dist/es/util/definition-id.js
var defId = 1;
function definitionId() {
  return "kdef" + defId++;
}

// node_modules/@progress/kendo-drawing/dist/es/util/constants.js
var DEG_TO_RAD = Math.PI / 180;
var MAX_NUM = Number.MAX_VALUE;
var MIN_NUM = -Number.MAX_VALUE;

// node_modules/@progress/kendo-drawing/dist/es/util/deg.js
function deg(radians) {
  return radians / DEG_TO_RAD;
}

// node_modules/@progress/kendo-drawing/dist/es/util/encode-utf.js
var fromCharCode = String.fromCharCode;
var BOM = "\xFE\xFF";
function encodeUTF8(input) {
  var output = "";
  for (var i = 0; i < input.length; i++) {
    var code = input.charCodeAt(i);
    if (55296 <= code && code <= 56319) {
      var hi = code;
      var low = input.charCodeAt(++i);
      if (!isNaN(low)) {
        code = (hi - 55296) * 1024 + (low - 56320) + 65536;
      }
    }
    if (code < 128) {
      output += fromCharCode(code);
    } else if (code < 2048) {
      output += fromCharCode(192 | code >>> 6);
      output += fromCharCode(128 | code & 63);
    } else if (code < 65536) {
      output += fromCharCode(224 | code >>> 12);
      output += fromCharCode(128 | code >>> 6 & 63);
      output += fromCharCode(128 | code & 63);
    } else if (code < 1114111) {
      output += fromCharCode(240 | code >>> 18);
      output += fromCharCode(128 | code >>> 12 & 63);
      output += fromCharCode(128 | code >>> 6 & 63);
      output += fromCharCode(128 | code & 63);
    }
  }
  return output;
}
function encodeUnit(codeUnit) {
  return fromCharCode(codeUnit >> 8) + fromCharCode(codeUnit & 255);
}
function encodeUTF16BE(input) {
  var output = "";
  for (var i = 0; i < input.length; i++) {
    var c = input.charCodeAt(i);
    if (c < 65535) {
      output += encodeUnit(c);
    } else {
      var lead = (c - 65536 >> 10) + 55296;
      var trail = (c - 65536 & 1023) + 56320;
      output += encodeUnit(lead);
      output += encodeUnit(trail);
    }
  }
  return output;
}

// node_modules/@progress/kendo-drawing/dist/es/util/encode-base64.js
var KEY_STR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
function encodeBase64(input) {
  var output = "";
  var i = 0;
  var utfInput = encodeUTF8(input);
  while (i < utfInput.length) {
    var chr1 = utfInput.charCodeAt(i++);
    var chr2 = utfInput.charCodeAt(i++);
    var chr3 = utfInput.charCodeAt(i++);
    var enc1 = chr1 >> 2;
    var enc2 = (chr1 & 3) << 4 | chr2 >> 4;
    var enc3 = (chr2 & 15) << 2 | chr3 >> 6;
    var enc4 = chr3 & 63;
    if (isNaN(chr2)) {
      enc3 = enc4 = 64;
    } else if (isNaN(chr3)) {
      enc4 = 64;
    }
    output = output + KEY_STR.charAt(enc1) + KEY_STR.charAt(enc2) + KEY_STR.charAt(enc3) + KEY_STR.charAt(enc4);
  }
  return output;
}

// node_modules/@progress/kendo-drawing/dist/es/util/event-coordinates.js
function eventCoordinates(e) {
  if (defined((e.x || {}).location)) {
    return {
      x: e.x.location,
      y: e.y.location
    };
  }
  return {
    x: e.pageX || e.clientX || 0,
    y: e.pageY || e.clientY || 0
  };
}

// node_modules/@progress/kendo-drawing/dist/es/util/event-element.js
function eventElement(e) {
  if (e === void 0)
    e = {};
  return e.touch ? e.touch.initialTouch : e.target;
}

// node_modules/@progress/kendo-drawing/dist/es/util/is-transparent.js
function isTransparent(color) {
  return color === "" || color === null || color === "none" || color === "transparent" || !defined(color);
}

// node_modules/@progress/kendo-drawing/dist/es/util/last.js
function last3(array7) {
  if (array7) {
    return array7[array7.length - 1];
  }
}

// node_modules/@progress/kendo-drawing/dist/es/util/limit-value.js
function limitValue(value2, min, max) {
  return Math.max(Math.min(value2, max), min);
}

// node_modules/@progress/kendo-drawing/dist/es/util/merge-sort.js
function mergeSort(a, cmp) {
  if (a.length < 2) {
    return a.slice();
  }
  function merge2(a2, b) {
    var r = [], ai = 0, bi = 0, i = 0;
    while (ai < a2.length && bi < b.length) {
      if (cmp(a2[ai], b[bi]) <= 0) {
        r[i++] = a2[ai++];
      } else {
        r[i++] = b[bi++];
      }
    }
    if (ai < a2.length) {
      r.push.apply(r, a2.slice(ai));
    }
    if (bi < b.length) {
      r.push.apply(r, b.slice(bi));
    }
    return r;
  }
  return function sort3(a2) {
    if (a2.length <= 1) {
      return a2;
    }
    var m = Math.floor(a2.length / 2);
    var left2 = a2.slice(0, m);
    var right2 = a2.slice(m);
    left2 = sort3(left2);
    right2 = sort3(right2);
    return merge2(left2, right2);
  }(a);
}

// node_modules/@progress/kendo-drawing/dist/es/util/promise-all.js
function promiseAll(promises) {
  return Promise.all(promises);
}

// node_modules/@progress/kendo-drawing/dist/es/util/rad.js
function rad(degrees) {
  return degrees * DEG_TO_RAD;
}

// node_modules/@progress/kendo-drawing/dist/es/util/round.js
function pow(p) {
  if (p) {
    return Math.pow(10, p);
  }
  return 1;
}
function round3(value2, precision) {
  var power = pow(precision);
  return Math.round(value2 * power) / power;
}

// node_modules/@progress/kendo-drawing/dist/es/util/value-or-default.js
function valueOrDefault2(value2, defaultValue2) {
  return defined(value2) ? value2 : defaultValue2;
}

// node_modules/@progress/kendo-drawing/dist/es/util/bind-events.js
function bindEvents(element6, events2) {
  for (var eventName in events2) {
    var eventNames = eventName.trim().split(" ");
    for (var idx = 0; idx < eventNames.length; idx++) {
      element6.addEventListener(eventNames[idx], events2[eventName], false);
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/util/element-offset.js
function elementOffset(element6) {
  var box = element6.getBoundingClientRect();
  var documentElement = document.documentElement;
  return {
    top: box.top + (window.pageYOffset || documentElement.scrollTop) - (documentElement.clientTop || 0),
    left: box.left + (window.pageXOffset || documentElement.scrollLeft) - (documentElement.clientLeft || 0)
  };
}

// node_modules/@progress/kendo-drawing/dist/es/util/element-styles.js
function elementStyles(element6, styles6) {
  var result = {};
  var style = window.getComputedStyle(element6) || {};
  var stylesArray = Array.isArray(styles6) ? styles6 : [styles6];
  for (var idx = 0; idx < stylesArray.length; idx++) {
    var field = stylesArray[idx];
    result[field] = style[field];
  }
  return result;
}

// node_modules/@progress/kendo-drawing/dist/es/util/element-size.js
function getPixels(value2) {
  if (isNaN(value2)) {
    return value2;
  }
  return value2 + "px";
}
function elementSize(element6, size) {
  if (size) {
    var width = size.width;
    var height = size.height;
    if (defined(width)) {
      element6.style.width = getPixels(width);
    }
    if (defined(height)) {
      element6.style.height = getPixels(height);
    }
  } else {
    var size$1 = elementStyles(element6, ["width", "height"]);
    return {
      width: parseInt(size$1.width, 10),
      height: parseInt(size$1.height, 10)
    };
  }
}

// node_modules/@progress/kendo-drawing/dist/es/util/unbind-events.js
function unbindEvents(element6, events2) {
  if (events2 === void 0)
    events2 = {};
  for (var name2 in events2) {
    var eventNames = name2.trim().split(" ");
    for (var idx = 0; idx < eventNames.length; idx++) {
      element6.removeEventListener(eventNames[idx], events2[name2], false);
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/util/element-padding.js
function elementPadding(element6) {
  var ref = elementStyles(element6, ["paddingLeft", "paddingTop"]);
  var paddingLeft = ref.paddingLeft;
  var paddingTop = ref.paddingTop;
  return {
    top: parseFloat(paddingTop),
    left: parseFloat(paddingLeft)
  };
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/matrix.js
var Matrix = function(Class3) {
  function Matrix2(a, b, c, d, e, f) {
    if (a === void 0)
      a = 0;
    if (b === void 0)
      b = 0;
    if (c === void 0)
      c = 0;
    if (d === void 0)
      d = 0;
    if (e === void 0)
      e = 0;
    if (f === void 0)
      f = 0;
    Class3.call(this);
    this.a = a;
    this.b = b;
    this.c = c;
    this.d = d;
    this.e = e;
    this.f = f;
  }
  if (Class3)
    Matrix2.__proto__ = Class3;
  Matrix2.prototype = Object.create(Class3 && Class3.prototype);
  Matrix2.prototype.constructor = Matrix2;
  Matrix2.prototype.multiplyCopy = function multiplyCopy(matrix) {
    return new Matrix2(
      this.a * matrix.a + this.c * matrix.b,
      this.b * matrix.a + this.d * matrix.b,
      this.a * matrix.c + this.c * matrix.d,
      this.b * matrix.c + this.d * matrix.d,
      this.a * matrix.e + this.c * matrix.f + this.e,
      this.b * matrix.e + this.d * matrix.f + this.f
    );
  };
  Matrix2.prototype.invert = function invert() {
    var ref = this;
    var a = ref.a;
    var b = ref.b;
    var d = ref.c;
    var e = ref.d;
    var g = ref.e;
    var h = ref.f;
    var det = a * e - b * d;
    if (det === 0) {
      return null;
    }
    return new Matrix2(
      e / det,
      -b / det,
      -d / det,
      a / det,
      (d * h - e * g) / det,
      (b * g - a * h) / det
    );
  };
  Matrix2.prototype.clone = function clone2() {
    return new Matrix2(this.a, this.b, this.c, this.d, this.e, this.f);
  };
  Matrix2.prototype.equals = function equals(other) {
    if (!other) {
      return false;
    }
    return this.a === other.a && this.b === other.b && this.c === other.c && this.d === other.d && this.e === other.e && this.f === other.f;
  };
  Matrix2.prototype.round = function round$1(precision) {
    this.a = round3(this.a, precision);
    this.b = round3(this.b, precision);
    this.c = round3(this.c, precision);
    this.d = round3(this.d, precision);
    this.e = round3(this.e, precision);
    this.f = round3(this.f, precision);
    return this;
  };
  Matrix2.prototype.toArray = function toArray3(precision) {
    var result = [this.a, this.b, this.c, this.d, this.e, this.f];
    if (defined(precision)) {
      for (var i = 0; i < result.length; i++) {
        result[i] = round3(result[i], precision);
      }
    }
    return result;
  };
  Matrix2.prototype.toString = function toString5(precision, separator2) {
    if (separator2 === void 0)
      separator2 = ",";
    return this.toArray(precision).join(separator2);
  };
  Matrix2.translate = function translate(x, y) {
    return new Matrix2(1, 0, 0, 1, x, y);
  };
  Matrix2.unit = function unit() {
    return new Matrix2(1, 0, 0, 1, 0, 0);
  };
  Matrix2.rotate = function rotate(angle, x, y) {
    var matrix = new Matrix2();
    matrix.a = Math.cos(rad(angle));
    matrix.b = Math.sin(rad(angle));
    matrix.c = -matrix.b;
    matrix.d = matrix.a;
    matrix.e = x - x * matrix.a + y * matrix.b || 0;
    matrix.f = y - y * matrix.a - x * matrix.b || 0;
    return matrix;
  };
  Matrix2.scale = function scale(scaleX, scaleY) {
    return new Matrix2(scaleX, 0, 0, scaleY, 0, 0);
  };
  return Matrix2;
}(class_default);
Matrix.IDENTITY = Matrix.unit();
var matrix_default = Matrix;

// node_modules/@progress/kendo-drawing/dist/es/util/element-scale.js
var matrixRegexp = /matrix\((.*)\)/;
function parseMatrix(matrixString) {
  var match = matrixString.match(matrixRegexp);
  if (match === null || match.length !== 2) {
    return matrix_default.unit();
  }
  var members = match[1].split(",").map(function(x) {
    return parseFloat(x);
  });
  return new (Function.prototype.bind.apply(matrix_default, [null].concat(members)))();
}
function transformMatrix(element6) {
  var transform2 = getComputedStyle(element6).transform;
  if (transform2 === "none") {
    return matrix_default.unit();
  }
  return parseMatrix(transform2);
}
function elementScale(element6) {
  if (!element6) {
    return matrix_default.unit();
  }
  var matrix = transformMatrix(element6);
  var parent = element6.parentElement;
  while (parent) {
    var parentMatrix = transformMatrix(parent);
    matrix = matrix.multiplyCopy(parentMatrix);
    parent = parent.parentElement;
  }
  matrix.b = matrix.c = matrix.e = matrix.f = 0;
  return matrix;
}

// node_modules/@progress/kendo-drawing/dist/es/text-metrics/lru-cache.js
var LRUCache = function(Class3) {
  function LRUCache2(size) {
    Class3.call(this);
    this.Ca = size;
    this.Pc = 0;
    this.Qc = {};
  }
  if (Class3)
    LRUCache2.__proto__ = Class3;
  LRUCache2.prototype = Object.create(Class3 && Class3.prototype);
  LRUCache2.prototype.constructor = LRUCache2;
  LRUCache2.prototype.put = function put(key, value2) {
    var map2 = this.Qc;
    var entry = { key, value: value2 };
    map2[key] = entry;
    if (!this.Da) {
      this.Da = this.Ea = entry;
    } else {
      this.Ea.newer = entry;
      entry.older = this.Ea;
      this.Ea = entry;
    }
    if (this.Pc >= this.Ca) {
      map2[this.Da.key] = null;
      this.Da = this.Da.newer;
      this.Da.older = null;
    } else {
      this.Pc++;
    }
  };
  LRUCache2.prototype.get = function get(key) {
    var entry = this.Qc[key];
    if (entry) {
      if (entry === this.Da && entry !== this.Ea) {
        this.Da = entry.newer;
        this.Da.older = null;
      }
      if (entry !== this.Ea) {
        if (entry.older) {
          entry.older.newer = entry.newer;
          entry.newer.older = entry.older;
        }
        entry.older = this.Ea;
        entry.newer = null;
        this.Ea.newer = entry;
        this.Ea = entry;
      }
      return entry.value;
    }
  };
  return LRUCache2;
}(class_default);
var lru_cache_default = LRUCache;

// node_modules/@progress/kendo-drawing/dist/es/text-metrics/util.js
var REPLACE_REGEX = /\r?\n|\r|\t/g;
var SPACE = " ";
function normalizeText(text) {
  return String(text).replace(REPLACE_REGEX, SPACE);
}
function objectKey(object22) {
  var parts = [];
  for (var key in object22) {
    parts.push(key + object22[key]);
  }
  return parts.sort().join("");
}
function hashKey(str) {
  var hash = 2166136261;
  for (var i = 0; i < str.length; ++i) {
    hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);
    hash ^= str.charCodeAt(i);
  }
  return hash >>> 0;
}

// node_modules/@progress/kendo-drawing/dist/es/text-metrics/text-metrics.js
function zeroSize() {
  return { width: 0, height: 0, baseline: 0 };
}
var DEFAULT_OPTIONS = {
  baselineMarkerSize: 1
};
var defaultMeasureBox;
if (typeof document !== "undefined") {
  defaultMeasureBox = document.createElement("div");
  defaultMeasureBox.style.cssText = "position: absolute !important; top: -4000px !important; width: auto !important; height: auto !important;padding: 0 !important; margin: 0 !important; border: 0 !important;line-height: normal !important; visibility: hidden !important; white-space: pre!important;";
}
var TextMetrics = function(Class3) {
  function TextMetrics2(options2) {
    Class3.call(this);
    this.Rc = new lru_cache_default(1e3);
    this.options = Object.assign({}, DEFAULT_OPTIONS, options2);
  }
  if (Class3)
    TextMetrics2.__proto__ = Class3;
  TextMetrics2.prototype = Object.create(Class3 && Class3.prototype);
  TextMetrics2.prototype.constructor = TextMetrics2;
  TextMetrics2.prototype.measure = function measure(text, style, options2) {
    if (options2 === void 0)
      options2 = {};
    if (typeof text === "undefined" || text === null) {
      return zeroSize();
    }
    var styleKey = objectKey(style);
    var cacheKey = hashKey(text + styleKey);
    var cachedResult = this.Rc.get(cacheKey);
    if (cachedResult) {
      return cachedResult;
    }
    var size = zeroSize();
    var measureBox = options2.box || defaultMeasureBox;
    var baselineMarker = this.Fd().cloneNode(false);
    for (var key in style) {
      var value2 = style[key];
      if (typeof value2 !== "undefined") {
        measureBox.style[key] = value2;
      }
    }
    var textStr = options2.normalizeText !== false ? normalizeText(text) : String(text);
    measureBox.textContent = textStr;
    measureBox.appendChild(baselineMarker);
    document.body.appendChild(measureBox);
    if (textStr.length) {
      size.width = measureBox.offsetWidth - this.options.baselineMarkerSize;
      size.height = measureBox.offsetHeight;
      size.baseline = baselineMarker.offsetTop + this.options.baselineMarkerSize;
    }
    if (size.width > 0 && size.height > 0) {
      this.Rc.put(cacheKey, size);
    }
    measureBox.parentNode.removeChild(measureBox);
    return size;
  };
  TextMetrics2.prototype.Fd = function _baselineMarker() {
    var marker = document.createElement("div");
    marker.style.cssText = "display: inline-block; vertical-align: baseline;width: " + this.options.baselineMarkerSize + "px; height: " + this.options.baselineMarkerSize + "px;overflow: hidden;";
    return marker;
  };
  return TextMetrics2;
}(class_default);
TextMetrics.current = new TextMetrics();
var text_metrics_default = TextMetrics;

// node_modules/@progress/kendo-drawing/dist/es/text-metrics/measure-text.js
function measureText(text, style, measureBox) {
  return text_metrics_default.current.measure(text, style, measureBox);
}

// node_modules/@progress/kendo-drawing/dist/es/core/options-store.js
var toString3 = {}.toString;
var OptionsStore = function(HasObservers2) {
  function OptionsStore2(options2, prefix) {
    var this$1 = this;
    if (prefix === void 0)
      prefix = "";
    HasObservers2.call(this);
    this.prefix = prefix;
    for (var field in options2) {
      var member2 = options2[field];
      member2 = this$1.Sc(member2, field);
      this$1[field] = member2;
    }
  }
  if (HasObservers2)
    OptionsStore2.__proto__ = HasObservers2;
  OptionsStore2.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  OptionsStore2.prototype.constructor = OptionsStore2;
  OptionsStore2.prototype.get = function get(field) {
    var parts = field.split(".");
    var result = this;
    while (parts.length && result) {
      var part = parts.shift();
      result = result[part];
    }
    return result;
  };
  OptionsStore2.prototype.set = function set2(field, value2) {
    var current = this.get(field);
    if (current !== value2) {
      this.Gd(field, this.Sc(value2, field));
      this.optionsChange({
        field: this.prefix + field,
        value: value2
      });
    }
  };
  OptionsStore2.prototype.Gd = function _set(field, value2) {
    var this$1 = this;
    var composite = field.indexOf(".") >= 0;
    var parentObj = this;
    var fieldName = field;
    if (composite) {
      var parts = fieldName.split(".");
      var prefix = this.prefix;
      while (parts.length > 1) {
        fieldName = parts.shift();
        prefix += fieldName + ".";
        var obj = parentObj[fieldName];
        if (!obj) {
          obj = new OptionsStore2({}, prefix);
          obj.addObserver(this$1);
          parentObj[fieldName] = obj;
        }
        parentObj = obj;
      }
      fieldName = parts[0];
    }
    parentObj.Hd(fieldName);
    parentObj[fieldName] = value2;
  };
  OptionsStore2.prototype.Hd = function _clear(field) {
    var current = this[field];
    if (current && current.removeObserver) {
      current.removeObserver(this);
    }
  };
  OptionsStore2.prototype.Sc = function _wrap(object22, field) {
    var type = toString3.call(object22);
    var wrapped = object22;
    if (wrapped !== null && defined(wrapped) && type === "[object Object]") {
      if (!(object22 instanceof OptionsStore2) && !(object22 instanceof class_default)) {
        wrapped = new OptionsStore2(wrapped, this.prefix + field + ".");
      }
      wrapped.addObserver(this);
    }
    return wrapped;
  };
  return OptionsStore2;
}(has_observers_default);
var options_store_default = OptionsStore;

// node_modules/@progress/kendo-drawing/dist/es/mixins/with-accessors.js
function setAccessor(field) {
  return function(value2) {
    if (this[field] !== value2) {
      this[field] = value2;
      this.geometryChange();
    }
    return this;
  };
}
function getAccessor(field) {
  return function() {
    return this[field];
  };
}
function defineAccessors(fn, fields) {
  for (var i = 0; i < fields.length; i++) {
    var name2 = fields[i];
    var capitalized = name2.charAt(0).toUpperCase() + name2.substring(1, name2.length);
    fn["set" + capitalized] = setAccessor(name2);
    fn["get" + capitalized] = getAccessor(name2);
  }
}
var withAccessors = function(TBase, names) {
  var result = function(TBase2) {
    function result2() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      result2.__proto__ = TBase2;
    result2.prototype = Object.create(TBase2 && TBase2.prototype);
    result2.prototype.constructor = result2;
    return result2;
  }(TBase);
  defineAccessors(result.prototype, names);
  return result;
};
var with_accessors_default = withAccessors;

// node_modules/@progress/kendo-drawing/dist/es/geometry/to-matrix.js
function toMatrix(transformation) {
  if (transformation && typeof transformation.matrix === "function") {
    return transformation.matrix();
  }
  return transformation;
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/point.js
var Point = function(superclass) {
  function Point2(x, y) {
    superclass.call(this);
    this.x = x || 0;
    this.y = y || 0;
  }
  if (superclass)
    Point2.__proto__ = superclass;
  Point2.prototype = Object.create(superclass && superclass.prototype);
  Point2.prototype.constructor = Point2;
  var staticAccessors = { ZERO: { configurable: true } };
  Point2.prototype.equals = function equals(other) {
    return other && other.x === this.x && other.y === this.y;
  };
  Point2.prototype.clone = function clone2() {
    return new Point2(this.x, this.y);
  };
  Point2.prototype.rotate = function rotate(angle, origin) {
    var originPoint = Point2.create(origin) || Point2.ZERO;
    return this.transform(matrix_default.rotate(angle, originPoint.x, originPoint.y));
  };
  Point2.prototype.translate = function translate(x, y) {
    this.x += x;
    this.y += y;
    this.geometryChange();
    return this;
  };
  Point2.prototype.translateWith = function translateWith(point2) {
    return this.translate(point2.x, point2.y);
  };
  Point2.prototype.move = function move(x, y) {
    this.x = this.y = 0;
    return this.translate(x, y);
  };
  Point2.prototype.scale = function scale(scaleX, scaleY) {
    if (scaleY === void 0)
      scaleY = scaleX;
    this.x *= scaleX;
    this.y *= scaleY;
    this.geometryChange();
    return this;
  };
  Point2.prototype.scaleCopy = function scaleCopy(scaleX, scaleY) {
    return this.clone().scale(scaleX, scaleY);
  };
  Point2.prototype.transform = function transform2(transformation) {
    var matrix = toMatrix(transformation);
    var ref = this;
    var x = ref.x;
    var y = ref.y;
    this.x = matrix.a * x + matrix.c * y + matrix.e;
    this.y = matrix.b * x + matrix.d * y + matrix.f;
    this.geometryChange();
    return this;
  };
  Point2.prototype.transformCopy = function transformCopy(transformation) {
    var point2 = this.clone();
    if (transformation) {
      point2.transform(transformation);
    }
    return point2;
  };
  Point2.prototype.distanceTo = function distanceTo(point2) {
    var dx = this.x - point2.x;
    var dy = this.y - point2.y;
    return Math.sqrt(dx * dx + dy * dy);
  };
  Point2.prototype.round = function round$1(digits) {
    this.x = round3(this.x, digits);
    this.y = round3(this.y, digits);
    this.geometryChange();
    return this;
  };
  Point2.prototype.toArray = function toArray3(digits) {
    var doRound = defined(digits);
    var x = doRound ? round3(this.x, digits) : this.x;
    var y = doRound ? round3(this.y, digits) : this.y;
    return [x, y];
  };
  Point2.prototype.toString = function toString5(digits, separator2) {
    if (separator2 === void 0)
      separator2 = " ";
    var ref = this;
    var x = ref.x;
    var y = ref.y;
    if (defined(digits)) {
      x = round3(x, digits);
      y = round3(y, digits);
    }
    return x + separator2 + y;
  };
  Point2.create = function create(arg0, arg1) {
    if (defined(arg0)) {
      if (arg0 instanceof Point2) {
        return arg0;
      } else if (arguments.length === 1 && arg0.length === 2) {
        return new Point2(arg0[0], arg0[1]);
      }
      return new Point2(arg0, arg1);
    }
  };
  Point2.min = function min() {
    var arguments$1 = arguments;
    var minX = MAX_NUM;
    var minY = MAX_NUM;
    for (var i = 0; i < arguments.length; i++) {
      var point2 = arguments$1[i];
      minX = Math.min(point2.x, minX);
      minY = Math.min(point2.y, minY);
    }
    return new Point2(minX, minY);
  };
  Point2.max = function max() {
    var arguments$1 = arguments;
    var maxX = MIN_NUM;
    var maxY = MIN_NUM;
    for (var i = 0; i < arguments.length; i++) {
      var point2 = arguments$1[i];
      maxX = Math.max(point2.x, maxX);
      maxY = Math.max(point2.y, maxY);
    }
    return new Point2(maxX, maxY);
  };
  Point2.minPoint = function minPoint() {
    return new Point2(MIN_NUM, MIN_NUM);
  };
  Point2.maxPoint = function maxPoint() {
    return new Point2(MAX_NUM, MAX_NUM);
  };
  staticAccessors.ZERO.get = function() {
    return new Point2(0, 0);
  };
  Object.defineProperties(Point2, staticAccessors);
  return Point2;
}(with_accessors_default(has_observers_default, ["x", "y"]));
var point_default = Point;

// node_modules/@progress/kendo-drawing/dist/es/geometry/size.js
var Size = function(superclass) {
  function Size2(width, height) {
    superclass.call(this);
    this.width = width || 0;
    this.height = height || 0;
  }
  if (superclass)
    Size2.__proto__ = superclass;
  Size2.prototype = Object.create(superclass && superclass.prototype);
  Size2.prototype.constructor = Size2;
  var staticAccessors = { ZERO: { configurable: true } };
  Size2.prototype.equals = function equals(other) {
    return other && other.width === this.width && other.height === this.height;
  };
  Size2.prototype.clone = function clone2() {
    return new Size2(this.width, this.height);
  };
  Size2.prototype.toArray = function toArray3(digits) {
    var doRound = defined(digits);
    var width = doRound ? round3(this.width, digits) : this.width;
    var height = doRound ? round3(this.height, digits) : this.height;
    return [width, height];
  };
  Size2.create = function create(arg0, arg1) {
    if (defined(arg0)) {
      if (arg0 instanceof Size2) {
        return arg0;
      } else if (arguments.length === 1 && arg0.length === 2) {
        return new Size2(arg0[0], arg0[1]);
      }
      return new Size2(arg0, arg1);
    }
  };
  staticAccessors.ZERO.get = function() {
    return new Size2(0, 0);
  };
  Object.defineProperties(Size2, staticAccessors);
  return Size2;
}(with_accessors_default(has_observers_default, ["width", "height"]));
var size_default = Size;

// node_modules/@progress/kendo-drawing/dist/es/geometry/rect.js
var Rect = function(HasObservers2) {
  function Rect3(origin, size, cornerRadius) {
    if (origin === void 0)
      origin = new point_default();
    if (size === void 0)
      size = new size_default();
    if (cornerRadius === void 0)
      cornerRadius = 0;
    HasObservers2.call(this);
    this.setOrigin(origin);
    this.setSize(size);
    this.setCornerRadius(cornerRadius);
  }
  if (HasObservers2)
    Rect3.__proto__ = HasObservers2;
  Rect3.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  Rect3.prototype.constructor = Rect3;
  Rect3.prototype.clone = function clone2() {
    return new Rect3(
      this.origin.clone(),
      this.size.clone()
    );
  };
  Rect3.prototype.equals = function equals(other) {
    return other && other.origin.equals(this.origin) && other.size.equals(this.size);
  };
  Rect3.prototype.setOrigin = function setOrigin(value2) {
    this.Sa("origin", point_default.create(value2));
    this.geometryChange();
    return this;
  };
  Rect3.prototype.getOrigin = function getOrigin() {
    return this.origin;
  };
  Rect3.prototype.setCornerRadius = function setCornerRadius(radius) {
    this.cornerRadius = Array.isArray(radius) ? radius : [radius, radius];
    this.geometryChange();
    return this;
  };
  Rect3.prototype.getCornerRadius = function getCornerRadius() {
    return this.cornerRadius;
  };
  Rect3.prototype.setSize = function setSize(value2) {
    this.Sa("size", size_default.create(value2));
    this.geometryChange();
    return this;
  };
  Rect3.prototype.getSize = function getSize() {
    return this.size;
  };
  Rect3.prototype.width = function width() {
    return this.size.width;
  };
  Rect3.prototype.height = function height() {
    return this.size.height;
  };
  Rect3.prototype.topLeft = function topLeft() {
    return this.origin.clone();
  };
  Rect3.prototype.bottomRight = function bottomRight() {
    return this.origin.clone().translate(this.width(), this.height());
  };
  Rect3.prototype.topRight = function topRight() {
    return this.origin.clone().translate(this.width(), 0);
  };
  Rect3.prototype.bottomLeft = function bottomLeft() {
    return this.origin.clone().translate(0, this.height());
  };
  Rect3.prototype.center = function center() {
    return this.origin.clone().translate(this.width() / 2, this.height() / 2);
  };
  Rect3.prototype.bbox = function bbox(matrix) {
    var tl = this.topLeft().transformCopy(matrix);
    var tr = this.topRight().transformCopy(matrix);
    var br = this.bottomRight().transformCopy(matrix);
    var bl = this.bottomLeft().transformCopy(matrix);
    return Rect3.fromPoints(tl, tr, br, bl);
  };
  Rect3.prototype.transformCopy = function transformCopy(m) {
    return Rect3.fromPoints(
      this.topLeft().transform(m),
      this.bottomRight().transform(m)
    );
  };
  Rect3.prototype.expand = function expand2(x, y) {
    if (y === void 0)
      y = x;
    this.size.width += 2 * x;
    this.size.height += 2 * y;
    this.origin.translate(-x, -y);
    return this;
  };
  Rect3.prototype.expandCopy = function expandCopy(x, y) {
    return this.clone().expand(x, y);
  };
  Rect3.prototype.containsPoint = function containsPoint(point2) {
    var origin = this.origin;
    var bottomRight = this.bottomRight();
    return !(point2.x < origin.x || point2.y < origin.y || bottomRight.x < point2.x || bottomRight.y < point2.y);
  };
  Rect3.prototype.ha = function _isOnPath(point2, width) {
    var rectOuter = this.expandCopy(width, width);
    var rectInner = this.expandCopy(-width, -width);
    return rectOuter.containsPoint(point2) && !rectInner.containsPoint(point2);
  };
  Rect3.fromPoints = function fromPoints() {
    var topLeft = point_default.min.apply(null, arguments);
    var bottomRight = point_default.max.apply(null, arguments);
    var size = new size_default(
      bottomRight.x - topLeft.x,
      bottomRight.y - topLeft.y
    );
    return new Rect3(topLeft, size);
  };
  Rect3.union = function union(a, b) {
    return Rect3.fromPoints(
      point_default.min(a.topLeft(), b.topLeft()),
      point_default.max(a.bottomRight(), b.bottomRight())
    );
  };
  Rect3.intersect = function intersect2(a, b) {
    var rect1 = {
      left: a.topLeft().x,
      top: a.topLeft().y,
      right: a.bottomRight().x,
      bottom: a.bottomRight().y
    };
    var rect2 = {
      left: b.topLeft().x,
      top: b.topLeft().y,
      right: b.bottomRight().x,
      bottom: b.bottomRight().y
    };
    if (rect1.left <= rect2.right && rect2.left <= rect1.right && rect1.top <= rect2.bottom && rect2.top <= rect1.bottom) {
      return Rect3.fromPoints(
        new point_default(Math.max(rect1.left, rect2.left), Math.max(rect1.top, rect2.top)),
        new point_default(Math.min(rect1.right, rect2.right), Math.min(rect1.bottom, rect2.bottom))
      );
    }
  };
  return Rect3;
}(has_observers_default);
var rect_default = Rect;

// node_modules/@progress/kendo-drawing/dist/es/geometry/transformation.js
var Transformation = function(HasObservers2) {
  function Transformation2(matrix) {
    if (matrix === void 0)
      matrix = matrix_default.unit();
    HasObservers2.call(this);
    this.w = matrix;
  }
  if (HasObservers2)
    Transformation2.__proto__ = HasObservers2;
  Transformation2.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  Transformation2.prototype.constructor = Transformation2;
  Transformation2.prototype.clone = function clone2() {
    return new Transformation2(
      this.w.clone()
    );
  };
  Transformation2.prototype.equals = function equals(other) {
    return other && other.w.equals(this.w);
  };
  Transformation2.prototype.translate = function translate(x, y) {
    this.w = this.w.multiplyCopy(matrix_default.translate(x, y));
    this.db();
    return this;
  };
  Transformation2.prototype.scale = function scale(scaleX, scaleY, origin) {
    if (scaleY === void 0)
      scaleY = scaleX;
    if (origin === void 0)
      origin = null;
    var originPoint = origin;
    if (originPoint) {
      originPoint = point_default.create(originPoint);
      this.w = this.w.multiplyCopy(matrix_default.translate(originPoint.x, originPoint.y));
    }
    this.w = this.w.multiplyCopy(matrix_default.scale(scaleX, scaleY));
    if (originPoint) {
      this.w = this.w.multiplyCopy(matrix_default.translate(-originPoint.x, -originPoint.y));
    }
    this.db();
    return this;
  };
  Transformation2.prototype.rotate = function rotate(angle, origin) {
    var originPoint = point_default.create(origin) || point_default.ZERO;
    this.w = this.w.multiplyCopy(matrix_default.rotate(angle, originPoint.x, originPoint.y));
    this.db();
    return this;
  };
  Transformation2.prototype.multiply = function multiply(transformation) {
    var matrix = toMatrix(transformation);
    this.w = this.w.multiplyCopy(matrix);
    this.db();
    return this;
  };
  Transformation2.prototype.matrix = function matrix(value2) {
    if (value2) {
      this.w = value2;
      this.db();
      return this;
    }
    return this.w;
  };
  Transformation2.prototype.db = function _optionsChange() {
    this.optionsChange({
      field: "transform",
      value: this
    });
  };
  return Transformation2;
}(has_observers_default);
var transformation_default = Transformation;

// node_modules/@progress/kendo-drawing/dist/es/geometry/transform.js
function transform(matrix) {
  if (matrix === null) {
    return null;
  }
  if (matrix instanceof transformation_default) {
    return matrix;
  }
  return new transformation_default(matrix);
}

// node_modules/@progress/kendo-drawing/dist/es/shapes/element.js
var Element2 = function(HasObservers2) {
  function Element3(options2) {
    HasObservers2.call(this);
    this.Id(options2);
  }
  if (HasObservers2)
    Element3.__proto__ = HasObservers2;
  Element3.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  Element3.prototype.constructor = Element3;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Rect";
  };
  Element3.prototype.Id = function _initOptions(options2) {
    if (options2 === void 0)
      options2 = {};
    var clip = options2.clip;
    var transform2 = options2.transform;
    if (transform2) {
      options2.transform = transform(transform2);
    }
    if (clip && !clip.id) {
      clip.id = definitionId();
    }
    this.options = new options_store_default(options2);
    this.options.addObserver(this);
  };
  Element3.prototype.transform = function transform2(value2) {
    if (defined(value2)) {
      this.options.set("transform", transform(value2));
    } else {
      return this.options.get("transform");
    }
  };
  Element3.prototype.parentTransform = function parentTransform() {
    var element6 = this;
    var parentMatrix;
    while (element6.parent) {
      element6 = element6.parent;
      var transformation = element6.transform();
      if (transformation) {
        parentMatrix = transformation.matrix().multiplyCopy(parentMatrix || matrix_default.unit());
      }
    }
    if (parentMatrix) {
      return transform(parentMatrix);
    }
  };
  Element3.prototype.currentTransform = function currentTransform(parentTransform) {
    if (parentTransform === void 0)
      parentTransform = this.parentTransform();
    var elementTransform = this.transform();
    var elementMatrix = toMatrix(elementTransform);
    var parentMatrix = toMatrix(parentTransform);
    var combinedMatrix;
    if (elementMatrix && parentMatrix) {
      combinedMatrix = parentMatrix.multiplyCopy(elementMatrix);
    } else {
      combinedMatrix = elementMatrix || parentMatrix;
    }
    if (combinedMatrix) {
      return transform(combinedMatrix);
    }
  };
  Element3.prototype.visible = function visible(value2) {
    if (defined(value2)) {
      this.options.set("visible", value2);
      return this;
    }
    return this.options.get("visible") !== false;
  };
  Element3.prototype.clip = function clip(value2) {
    var options2 = this.options;
    if (defined(value2)) {
      if (value2 && !value2.id) {
        value2.id = definitionId();
      }
      options2.set("clip", value2);
      return this;
    }
    return options2.get("clip");
  };
  Element3.prototype.opacity = function opacity(value2) {
    if (defined(value2)) {
      this.options.set("opacity", value2);
      return this;
    }
    return valueOrDefault2(this.options.get("opacity"), 1);
  };
  Element3.prototype.clippedBBox = function clippedBBox(transformation) {
    var bbox = this.gc(transformation);
    if (bbox) {
      var clip = this.clip();
      return clip ? rect_default.intersect(bbox, clip.bbox(transformation)) : bbox;
    }
  };
  Element3.prototype.containsPoint = function containsPoint(point2, parentTransform) {
    if (this.visible()) {
      var transform2 = this.currentTransform(parentTransform);
      var transformedPoint = point2;
      if (transform2) {
        transformedPoint = point2.transformCopy(transform2.matrix().invert());
      }
      return this.Tc() && this.Fa(transformedPoint) || this.ha && this.Jd() && this.ha(transformedPoint);
    }
    return false;
  };
  Element3.prototype.Tc = function _hasFill() {
    var fill = this.options.fill;
    return fill && !isTransparent(fill.color);
  };
  Element3.prototype.Jd = function _hasStroke() {
    var stroke = this.options.stroke;
    return stroke && stroke.width > 0 && !isTransparent(stroke.color);
  };
  Element3.prototype.gc = function _clippedBBox(transformation) {
    return this.bbox(transformation);
  };
  Object.defineProperties(Element3.prototype, prototypeAccessors);
  return Element3;
}(has_observers_default);
var element_default = Element2;

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/ellipse-extreme-angles.js
function ellipseExtremeAngles(center, rx, ry, matrix) {
  var extremeX = 0;
  var extremeY = 0;
  if (matrix) {
    extremeX = Math.atan2(matrix.c * ry, matrix.a * rx);
    if (matrix.b !== 0) {
      extremeY = Math.atan2(matrix.d * ry, matrix.b * rx);
    }
  }
  return {
    x: extremeX,
    y: extremeY
  };
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/circle.js
var PI_DIV_2 = Math.PI / 2;
var Circle = function(superclass) {
  function Circle3(center, radius) {
    if (center === void 0)
      center = new point_default();
    if (radius === void 0)
      radius = 0;
    superclass.call(this);
    this.setCenter(center);
    this.setRadius(radius);
  }
  if (superclass)
    Circle3.__proto__ = superclass;
  Circle3.prototype = Object.create(superclass && superclass.prototype);
  Circle3.prototype.constructor = Circle3;
  Circle3.prototype.setCenter = function setCenter(value2) {
    this.Sa("center", point_default.create(value2));
    this.geometryChange();
    return this;
  };
  Circle3.prototype.getCenter = function getCenter() {
    return this.center;
  };
  Circle3.prototype.equals = function equals(other) {
    return other && other.center.equals(this.center) && other.radius === this.radius;
  };
  Circle3.prototype.clone = function clone2() {
    return new Circle3(this.center.clone(), this.radius);
  };
  Circle3.prototype.pointAt = function pointAt(angle) {
    return this.hc(rad(angle));
  };
  Circle3.prototype.bbox = function bbox(matrix) {
    var this$1 = this;
    var extremeAngles = ellipseExtremeAngles(this.center, this.radius, this.radius, matrix);
    var minPoint = point_default.maxPoint();
    var maxPoint = point_default.minPoint();
    for (var i = 0; i < 4; i++) {
      var currentPointX = this$1.hc(extremeAngles.x + i * PI_DIV_2).transformCopy(matrix);
      var currentPointY = this$1.hc(extremeAngles.y + i * PI_DIV_2).transformCopy(matrix);
      var currentPoint = new point_default(currentPointX.x, currentPointY.y);
      minPoint = point_default.min(minPoint, currentPoint);
      maxPoint = point_default.max(maxPoint, currentPoint);
    }
    return rect_default.fromPoints(minPoint, maxPoint);
  };
  Circle3.prototype.hc = function _pointAt(angle) {
    var ref = this;
    var center = ref.center;
    var radius = ref.radius;
    return new point_default(
      center.x + radius * Math.cos(angle),
      center.y + radius * Math.sin(angle)
    );
  };
  Circle3.prototype.containsPoint = function containsPoint(point2) {
    var ref = this;
    var center = ref.center;
    var radius = ref.radius;
    var inCircle = Math.pow(point2.x - center.x, 2) + Math.pow(point2.y - center.y, 2) <= Math.pow(radius, 2);
    return inCircle;
  };
  Circle3.prototype.ha = function _isOnPath(point2, width) {
    var ref = this;
    var center = ref.center;
    var radius = ref.radius;
    var pointDistance = center.distanceTo(point2);
    return radius - width <= pointDistance && pointDistance <= radius + width;
  };
  return Circle3;
}(with_accessors_default(has_observers_default, ["radius"]));
var circle_default = Circle;

// node_modules/@progress/kendo-drawing/dist/es/mixins/paintable.js
var GRADIENT = "Gradient";
var paintable = function(TBase) {
  return function(TBase2) {
    function anonymous() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      anonymous.__proto__ = TBase2;
    anonymous.prototype = Object.create(TBase2 && TBase2.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.fill = function fill(color, opacity) {
      var options2 = this.options;
      if (defined(color)) {
        if (color && color.nodeType !== GRADIENT) {
          var newFill = {
            color
          };
          if (defined(opacity)) {
            newFill.opacity = opacity;
          }
          options2.set("fill", newFill);
        } else {
          options2.set("fill", color);
        }
        return this;
      }
      return options2.get("fill");
    };
    anonymous.prototype.stroke = function stroke(color, width, opacity) {
      if (defined(color)) {
        this.options.set("stroke.color", color);
        if (defined(width)) {
          this.options.set("stroke.width", width);
        }
        if (defined(opacity)) {
          this.options.set("stroke.opacity", opacity);
        }
        return this;
      }
      return this.options.get("stroke");
    };
    return anonymous;
  }(TBase);
};
var paintable_default = paintable;

// node_modules/@progress/kendo-drawing/dist/es/mixins/measurable.js
var IDENTITY_MATRIX_HASH = matrix_default.IDENTITY.toString();
var measurable = function(TBase) {
  return function(TBase2) {
    function anonymous() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      anonymous.__proto__ = TBase2;
    anonymous.prototype = Object.create(TBase2 && TBase2.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.bbox = function bbox(transformation) {
      var combinedMatrix = toMatrix(this.currentTransform(transformation));
      var matrixHash = combinedMatrix ? combinedMatrix.toString() : IDENTITY_MATRIX_HASH;
      var bbox2;
      if (this.ic && this.Kd === matrixHash) {
        bbox2 = this.ic.clone();
      } else {
        bbox2 = this.Ta(combinedMatrix);
        this.ic = bbox2 ? bbox2.clone() : null;
        this.Kd = matrixHash;
      }
      var strokeWidth = this.options.get("stroke.width");
      if (strokeWidth && bbox2) {
        bbox2.expand(strokeWidth / 2);
      }
      return bbox2;
    };
    anonymous.prototype.geometryChange = function geometryChange() {
      delete this.ic;
      this.trigger("geometryChange", {
        element: this
      });
    };
    return anonymous;
  }(TBase);
};
var measurable_default = measurable;

// node_modules/@progress/kendo-drawing/dist/es/mixins/with-geometry.js
function geometryAccessor(name2) {
  var fieldName = "_" + name2;
  return function(value2) {
    if (defined(value2)) {
      this.Sa(fieldName, value2);
      this.geometryChange();
      return this;
    }
    return this[fieldName];
  };
}
function defineGeometryAccessors(fn, names) {
  for (var i = 0; i < names.length; i++) {
    fn[names[i]] = geometryAccessor(names[i]);
  }
}
var withGeometry = function(TBase, names) {
  if (names === void 0)
    names = ["geometry"];
  var result = function(TBase2) {
    function result2() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      result2.__proto__ = TBase2;
    result2.prototype = Object.create(TBase2 && TBase2.prototype);
    result2.prototype.constructor = result2;
    return result2;
  }(TBase);
  defineGeometryAccessors(result.prototype, names);
  return result;
};
var with_geometry_default = withGeometry;

// node_modules/@progress/kendo-drawing/dist/es/shapes/circle.js
var DEFAULT_STROKE = "#000";
var Circle2 = function(superclass) {
  function Circle3(geometry, options2) {
    if (geometry === void 0)
      geometry = new circle_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.geometry(geometry);
    if (!defined(this.options.stroke)) {
      this.stroke(DEFAULT_STROKE);
    }
  }
  if (superclass)
    Circle3.__proto__ = superclass;
  Circle3.prototype = Object.create(superclass && superclass.prototype);
  Circle3.prototype.constructor = Circle3;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Circle";
  };
  Circle3.prototype.rawBBox = function rawBBox() {
    return this.eb.bbox();
  };
  Circle3.prototype.Ta = function _bbox(matrix) {
    return this.eb.bbox(matrix);
  };
  Circle3.prototype.Fa = function _containsPoint(point2) {
    return this.geometry().containsPoint(point2);
  };
  Circle3.prototype.ha = function _isOnPath(point2) {
    return this.geometry().ha(point2, this.options.stroke.width / 2);
  };
  Object.defineProperties(Circle3.prototype, prototypeAccessors);
  return Circle3;
}(paintable_default(measurable_default(with_geometry_default(element_default))));
var circle_default2 = Circle2;

// node_modules/@progress/kendo-drawing/dist/es/geometry/constants.js
var PRECISION = 10;

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/close.js
function close(a, b, tolerance) {
  if (tolerance === void 0)
    tolerance = PRECISION;
  return round3(Math.abs(a - b), tolerance) === 0;
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/close-or-less.js
function closeOrLess(a, b, tolerance) {
  return a < b || close(a, b, tolerance);
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/line-intersection.js
function lineIntersection(p0, p1, p2, p3) {
  var s1x = p1.x - p0.x;
  var s2x = p3.x - p2.x;
  var s1y = p1.y - p0.y;
  var s2y = p3.y - p2.y;
  var nx = p0.x - p2.x;
  var ny = p0.y - p2.y;
  var d = s1x * s2y - s2x * s1y;
  var s = (s1x * ny - s1y * nx) / d;
  var t = (s2x * ny - s2y * nx) / d;
  if (s >= 0 && s <= 1 && t >= 0 && t <= 1) {
    return new point_default(p0.x + t * s1x, p0.y + t * s1y);
  }
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/arc.js
var MAX_INTERVAL = 45;
var pow2 = Math.pow;
var accessors = ["radiusX", "radiusY", "startAngle", "endAngle", "anticlockwise"];
var Arc = function(superclass) {
  function Arc3(center, options2) {
    if (center === void 0)
      center = new point_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this);
    this.setCenter(center);
    this.radiusX = options2.radiusX;
    this.radiusY = options2.radiusY || options2.radiusX;
    this.startAngle = options2.startAngle;
    this.endAngle = options2.endAngle;
    this.anticlockwise = options2.anticlockwise || false;
    this.xRotation = options2.xRotation;
  }
  if (superclass)
    Arc3.__proto__ = superclass;
  Arc3.prototype = Object.create(superclass && superclass.prototype);
  Arc3.prototype.constructor = Arc3;
  Arc3.prototype.clone = function clone2() {
    return new Arc3(this.center, {
      radiusX: this.radiusX,
      radiusY: this.radiusY,
      startAngle: this.startAngle,
      endAngle: this.endAngle,
      anticlockwise: this.anticlockwise
    });
  };
  Arc3.prototype.setCenter = function setCenter(value2) {
    this.Sa("center", point_default.create(value2));
    this.geometryChange();
    return this;
  };
  Arc3.prototype.getCenter = function getCenter() {
    return this.center;
  };
  Arc3.prototype.pointAt = function pointAt(angle) {
    var center = this.center;
    var radian = rad(angle);
    return new point_default(
      center.x + this.radiusX * Math.cos(radian),
      center.y + this.radiusY * Math.sin(radian)
    );
  };
  Arc3.prototype.curvePoints = function curvePoints() {
    var this$1 = this;
    var startAngle = this.startAngle;
    var dir = this.anticlockwise ? -1 : 1;
    var curvePoints2 = [this.pointAt(startAngle)];
    var interval = this.yb();
    var intervalAngle = interval.endAngle - interval.startAngle;
    var subIntervalsCount = Math.ceil(intervalAngle / MAX_INTERVAL);
    var subIntervalAngle = intervalAngle / subIntervalsCount;
    var currentAngle = startAngle;
    var transformation;
    if (this.xRotation) {
      transformation = transform().rotate(this.xRotation, this.center);
    }
    for (var i = 1; i <= subIntervalsCount; i++) {
      var nextAngle = currentAngle + dir * subIntervalAngle;
      var points3 = this$1.Ld(currentAngle, nextAngle, transformation);
      curvePoints2.push(points3.cp1, points3.cp2, points3.p2);
      currentAngle = nextAngle;
    }
    return curvePoints2;
  };
  Arc3.prototype.bbox = function bbox(matrix) {
    var this$1 = this;
    var interval = this.yb();
    var startAngle = interval.startAngle;
    var endAngle = interval.endAngle;
    var extremeAngles = ellipseExtremeAngles(this.center, this.radiusX, this.radiusY, matrix);
    var extremeX = deg(extremeAngles.x);
    var extremeY = deg(extremeAngles.y);
    var endPoint = this.pointAt(endAngle).transformCopy(matrix);
    var currentAngleX = bboxStartAngle(extremeX, startAngle);
    var currentAngleY = bboxStartAngle(extremeY, startAngle);
    var currentPoint = this.pointAt(startAngle).transformCopy(matrix);
    var minPoint = point_default.min(currentPoint, endPoint);
    var maxPoint = point_default.max(currentPoint, endPoint);
    while (currentAngleX < endAngle || currentAngleY < endAngle) {
      var currentPointX = void 0;
      if (currentAngleX < endAngle) {
        currentPointX = this$1.pointAt(currentAngleX).transformCopy(matrix);
        currentAngleX += 90;
      }
      var currentPointY = void 0;
      if (currentAngleY < endAngle) {
        currentPointY = this$1.pointAt(currentAngleY).transformCopy(matrix);
        currentAngleY += 90;
      }
      currentPoint = new point_default(currentPointX.x, currentPointY.y);
      minPoint = point_default.min(minPoint, currentPoint);
      maxPoint = point_default.max(maxPoint, currentPoint);
    }
    return rect_default.fromPoints(minPoint, maxPoint);
  };
  Arc3.prototype.yb = function _arcInterval() {
    var ref = this;
    var startAngle = ref.startAngle;
    var endAngle = ref.endAngle;
    var anticlockwise = ref.anticlockwise;
    if (anticlockwise) {
      var oldStart = startAngle;
      startAngle = endAngle;
      endAngle = oldStart;
    }
    if (startAngle > endAngle || anticlockwise && startAngle === endAngle) {
      endAngle += 360;
    }
    return {
      startAngle,
      endAngle
    };
  };
  Arc3.prototype.Ld = function _intervalCurvePoints(startAngle, endAngle, transformation) {
    var p1 = this.pointAt(startAngle);
    var p2 = this.pointAt(endAngle);
    var p1Derivative = this.Uc(startAngle);
    var p2Derivative = this.Uc(endAngle);
    var t = (rad(endAngle) - rad(startAngle)) / 3;
    var cp1 = new point_default(p1.x + t * p1Derivative.x, p1.y + t * p1Derivative.y);
    var cp2 = new point_default(p2.x - t * p2Derivative.x, p2.y - t * p2Derivative.y);
    if (transformation) {
      p1.transform(transformation);
      p2.transform(transformation);
      cp1.transform(transformation);
      cp2.transform(transformation);
    }
    return {
      p1,
      cp1,
      cp2,
      p2
    };
  };
  Arc3.prototype.Uc = function _derivativeAt(angle) {
    var radian = rad(angle);
    return new point_default(-this.radiusX * Math.sin(radian), this.radiusY * Math.cos(radian));
  };
  Arc3.prototype.containsPoint = function containsPoint(point2) {
    var interval = this.yb();
    var intervalAngle = interval.endAngle - interval.startAngle;
    var ref = this;
    var center = ref.center;
    var radiusX = ref.radiusX;
    var radiusY = ref.radiusY;
    var distance = center.distanceTo(point2);
    var angleRad = Math.atan2(point2.y - center.y, point2.x - center.x);
    var pointRadius = radiusX * radiusY / Math.sqrt(pow2(radiusX, 2) * pow2(Math.sin(angleRad), 2) + pow2(radiusY, 2) * pow2(Math.cos(angleRad), 2));
    var startPoint = this.pointAt(this.startAngle).round(PRECISION);
    var endPoint = this.pointAt(this.endAngle).round(PRECISION);
    var intersection = lineIntersection(center, point2.round(PRECISION), startPoint, endPoint);
    var containsPoint2;
    if (intervalAngle < 180) {
      containsPoint2 = intersection && closeOrLess(center.distanceTo(intersection), distance) && closeOrLess(distance, pointRadius);
    } else {
      var angle = calculateAngle(center.x, center.y, radiusX, radiusY, point2.x, point2.y);
      if (angle !== 360) {
        angle = (360 + angle) % 360;
      }
      var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;
      containsPoint2 = inAngleRange && closeOrLess(distance, pointRadius) || !inAngleRange && (!intersection || intersection.equals(point2));
    }
    return containsPoint2;
  };
  Arc3.prototype.ha = function _isOnPath(point2, width) {
    var interval = this.yb();
    var center = this.center;
    var angle = calculateAngle(center.x, center.y, this.radiusX, this.radiusY, point2.x, point2.y);
    if (angle !== 360) {
      angle = (360 + angle) % 360;
    }
    var inAngleRange = interval.startAngle <= angle && angle <= interval.endAngle;
    return inAngleRange && this.pointAt(angle).distanceTo(point2) <= width;
  };
  Arc3.fromPoints = function fromPoints(start2, end2, rx, ry, largeArc, swipe, rotation) {
    var arcParameters = normalizeArcParameters({
      x1: start2.x,
      y1: start2.y,
      x2: end2.x,
      y2: end2.y,
      rx,
      ry,
      largeArc,
      swipe,
      rotation
    });
    return new Arc3(arcParameters.center, {
      startAngle: arcParameters.startAngle,
      endAngle: arcParameters.endAngle,
      radiusX: arcParameters.radiusX,
      radiusY: arcParameters.radiusY,
      xRotation: arcParameters.xRotation,
      anticlockwise: swipe === 0
    });
  };
  return Arc3;
}(with_accessors_default(has_observers_default, accessors));
function calculateAngle(cx, cy, rx, ry, x, y) {
  var cos = round3((x - cx) / rx, 3);
  var sin = round3((y - cy) / ry, 3);
  return round3(deg(Math.atan2(sin, cos)));
}
function normalizeArcParameters(parameters) {
  var x1 = parameters.x1;
  var y1 = parameters.y1;
  var x2 = parameters.x2;
  var y2 = parameters.y2;
  var rx = parameters.rx;
  var ry = parameters.ry;
  var largeArc = parameters.largeArc;
  var swipe = parameters.swipe;
  var rotation = parameters.rotation;
  if (rotation === void 0)
    rotation = 0;
  var radians = rad(rotation);
  var cosine = Math.cos(radians);
  var sine = Math.sin(radians);
  var xT = cosine * (x1 - x2) / 2 + sine * (y1 - y2) / 2;
  var yT = -sine * (x1 - x2) / 2 + cosine * (y1 - y2) / 2;
  var sign = largeArc !== swipe ? 1 : -1;
  var xt2 = Math.pow(xT, 2);
  var yt2 = Math.pow(yT, 2);
  var rx2 = Math.pow(rx, 2);
  var ry2 = Math.pow(ry, 2);
  var delta = xt2 / rx2 + yt2 / ry2;
  if (delta > 1) {
    delta = Math.sqrt(xt2 / rx2 + yt2 / ry2);
    rx = delta * rx;
    rx2 = Math.pow(rx, 2);
    ry = delta * ry;
    ry2 = Math.pow(ry, 2);
  }
  var constT = sign * Math.sqrt((rx2 * ry2 - rx2 * yt2 - ry2 * xt2) / (rx2 * yt2 + ry2 * xt2));
  if (isNaN(constT)) {
    constT = 0;
  }
  var cxT = constT * (rx * yT) / ry;
  var cyT = -constT * (ry * xT) / rx;
  var cx = cosine * cxT - sine * cyT + (x1 + x2) / 2;
  var cy = sine * cxT + cosine * cyT + (y1 + y2) / 2;
  var uX = (xT - cxT) / rx;
  var uY = (yT - cyT) / ry;
  var vX = -(xT + cxT) / rx;
  var vY = -(yT + cyT) / ry;
  var startAngle = (uY >= 0 ? 1 : -1) * deg(Math.acos(uX / Math.sqrt(uX * uX + uY * uY)));
  var angleCosine = round3((uX * vX + uY * vY) / (Math.sqrt(uX * uX + uY * uY) * Math.sqrt(vX * vX + vY * vY)), 10);
  var angle = (uX * vY - uY * vX >= 0 ? 1 : -1) * deg(Math.acos(angleCosine));
  if (!swipe && angle > 0) {
    angle -= 360;
  }
  if (swipe && angle < 0) {
    angle += 360;
  }
  var endAngle = startAngle + angle;
  var signEndAngle = endAngle >= 0 ? 1 : -1;
  endAngle = Math.abs(endAngle) % 360 * signEndAngle;
  return {
    center: new point_default(cx, cy),
    startAngle,
    endAngle,
    radiusX: rx,
    radiusY: ry,
    xRotation: rotation
  };
}
function bboxStartAngle(angle, start2) {
  var startAngle = angle;
  while (startAngle < start2) {
    startAngle += 90;
  }
  return startAngle;
}
var arc_default = Arc;

// node_modules/@progress/kendo-drawing/dist/es/shapes/elements-array.js
var push = [].push;
var pop = [].pop;
var splice = [].splice;
var shift = [].shift;
var slice = [].slice;
var unshift = [].unshift;
var ElementsArray = function(HasObservers2) {
  function ElementsArray2(array7) {
    if (array7 === void 0)
      array7 = [];
    HasObservers2.call(this);
    this.length = 0;
    this.jc(0, array7.length, array7);
  }
  if (HasObservers2)
    ElementsArray2.__proto__ = HasObservers2;
  ElementsArray2.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  ElementsArray2.prototype.constructor = ElementsArray2;
  ElementsArray2.prototype.elements = function elements(value2) {
    if (value2) {
      this.jc(0, this.length, value2);
      this.Ua();
      return this;
    }
    return this.slice(0);
  };
  ElementsArray2.prototype.push = function push$1() {
    var elements = arguments;
    var result = push.apply(this, elements);
    this.Va(elements);
    return result;
  };
  ElementsArray2.prototype.slice = function slice$1() {
    return slice.call(this);
  };
  ElementsArray2.prototype.pop = function pop$1() {
    var length = this.length;
    var result = pop.apply(this);
    if (length) {
      this.Vc([result]);
    }
    return result;
  };
  ElementsArray2.prototype.splice = function splice2(index, howMany) {
    var elements = slice.call(arguments, 2);
    var result = this.jc(index, howMany, elements);
    this.Ua();
    return result;
  };
  ElementsArray2.prototype.shift = function shift$1() {
    var length = this.length;
    var result = shift.apply(this);
    if (length) {
      this.Vc([result]);
    }
    return result;
  };
  ElementsArray2.prototype.unshift = function unshift$1() {
    var elements = arguments;
    var result = unshift.apply(this, elements);
    this.Va(elements);
    return result;
  };
  ElementsArray2.prototype.indexOf = function indexOf(element6) {
    var this$1 = this;
    var length = this.length;
    for (var idx = 0; idx < length; idx++) {
      if (this$1[idx] === element6) {
        return idx;
      }
    }
    return -1;
  };
  ElementsArray2.prototype.jc = function _splice(index, howMany, elements) {
    var result = splice.apply(this, [index, howMany].concat(elements));
    this.Wc(result);
    this.Xc(elements);
    return result;
  };
  ElementsArray2.prototype.Va = function _add(elements) {
    this.Xc(elements);
    this.Ua();
  };
  ElementsArray2.prototype.Vc = function _remove(elements) {
    this.Wc(elements);
    this.Ua();
  };
  ElementsArray2.prototype.Xc = function _setObserver(elements) {
    var this$1 = this;
    for (var idx = 0; idx < elements.length; idx++) {
      elements[idx].addObserver(this$1);
    }
  };
  ElementsArray2.prototype.Wc = function _clearObserver(elements) {
    var this$1 = this;
    for (var idx = 0; idx < elements.length; idx++) {
      elements[idx].removeObserver(this$1);
    }
  };
  ElementsArray2.prototype.Ua = function _change() {
  };
  return ElementsArray2;
}(has_observers_default);
var elements_array_default = ElementsArray;

// node_modules/@progress/kendo-drawing/dist/es/shapes/geometry-elements-array.js
var GeometryElementsArray = function(ElementsArray2) {
  function GeometryElementsArray2() {
    ElementsArray2.apply(this, arguments);
  }
  if (ElementsArray2)
    GeometryElementsArray2.__proto__ = ElementsArray2;
  GeometryElementsArray2.prototype = Object.create(ElementsArray2 && ElementsArray2.prototype);
  GeometryElementsArray2.prototype.constructor = GeometryElementsArray2;
  GeometryElementsArray2.prototype.Ua = function _change() {
    this.geometryChange();
  };
  return GeometryElementsArray2;
}(elements_array_default);
var geometry_elements_array_default = GeometryElementsArray;

// node_modules/@progress/kendo-drawing/dist/es/geometry.js
var geometry_exports = {};
__export(geometry_exports, {
  Arc: () => arc_default,
  Circle: () => circle_default,
  Matrix: () => matrix_default,
  Point: () => point_default,
  Rect: () => rect_default,
  Segment: () => segment_default,
  Size: () => size_default,
  Transformation: () => transformation_default,
  toMatrix: () => toMatrix,
  transform: () => transform
});

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/is-out-of-end-point.js
function isOutOfEndPoint(endPoint, controlPoint, point2) {
  var angle = deg(Math.atan2(controlPoint.y - endPoint.y, controlPoint.x - endPoint.x));
  var rotatedPoint = point2.transformCopy(transform().rotate(-angle, endPoint));
  return rotatedPoint.x < endPoint.x;
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/calculate-curve-at.js
function calculateCurveAt(t, field, points3) {
  var t1 = 1 - t;
  return Math.pow(t1, 3) * points3[0][field] + 3 * Math.pow(t1, 2) * t * points3[1][field] + 3 * Math.pow(t, 2) * t1 * points3[2][field] + Math.pow(t, 3) * points3[3][field];
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/to-cubic-polynomial.js
function toCubicPolynomial(points3, field) {
  return [
    -points3[0][field] + 3 * points3[1][field] - 3 * points3[2][field] + points3[3][field],
    3 * (points3[0][field] - 2 * points3[1][field] + points3[2][field]),
    3 * (-points3[0][field] + points3[1][field]),
    points3[0][field]
  ];
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/complex-number.js
var ComplexNumber = function(Class3) {
  function ComplexNumber2(real, img) {
    if (real === void 0)
      real = 0;
    if (img === void 0)
      img = 0;
    Class3.call(this);
    this.real = real;
    this.img = img;
  }
  if (Class3)
    ComplexNumber2.__proto__ = Class3;
  ComplexNumber2.prototype = Object.create(Class3 && Class3.prototype);
  ComplexNumber2.prototype.constructor = ComplexNumber2;
  ComplexNumber2.prototype.add = function add(cNumber) {
    return new ComplexNumber2(round3(this.real + cNumber.real, PRECISION), round3(this.img + cNumber.img, PRECISION));
  };
  ComplexNumber2.prototype.addConstant = function addConstant(value2) {
    return new ComplexNumber2(this.real + value2, this.img);
  };
  ComplexNumber2.prototype.negate = function negate() {
    return new ComplexNumber2(-this.real, -this.img);
  };
  ComplexNumber2.prototype.multiply = function multiply(cNumber) {
    return new ComplexNumber2(
      this.real * cNumber.real - this.img * cNumber.img,
      this.real * cNumber.img + this.img * cNumber.real
    );
  };
  ComplexNumber2.prototype.multiplyConstant = function multiplyConstant(value2) {
    return new ComplexNumber2(this.real * value2, this.img * value2);
  };
  ComplexNumber2.prototype.nthRoot = function nthRoot(n) {
    var rad2 = Math.atan2(this.img, this.real);
    var r = Math.sqrt(Math.pow(this.img, 2) + Math.pow(this.real, 2));
    var nthR = Math.pow(r, 1 / n);
    return new ComplexNumber2(nthR * Math.cos(rad2 / n), nthR * Math.sin(rad2 / n));
  };
  ComplexNumber2.prototype.equals = function equals(cNumber) {
    return this.real === cNumber.real && this.img === cNumber.img;
  };
  ComplexNumber2.prototype.isReal = function isReal() {
    return this.img === 0;
  };
  return ComplexNumber2;
}(class_default);
var complex_number_default = ComplexNumber;

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/solve-cubic-equation.js
function numberSign(x) {
  return x < 0 ? -1 : 1;
}
function solveQuadraticEquation(a, b, c) {
  var squareRoot = Math.sqrt(Math.pow(b, 2) - 4 * a * c);
  return [
    (-b + squareRoot) / (2 * a),
    (-b - squareRoot) / (2 * a)
  ];
}
function solveCubicEquation(a, b, c, d) {
  if (a === 0) {
    return solveQuadraticEquation(b, c, d);
  }
  var p = (3 * a * c - Math.pow(b, 2)) / (3 * Math.pow(a, 2));
  var q = (2 * Math.pow(b, 3) - 9 * a * b * c + 27 * Math.pow(a, 2) * d) / (27 * Math.pow(a, 3));
  var Q = Math.pow(p / 3, 3) + Math.pow(q / 2, 2);
  var i = new complex_number_default(0, 1);
  var b3a = -b / (3 * a);
  var x1, x2, y1, y2, y3, z1, z2;
  if (Q < 0) {
    x1 = new complex_number_default(-q / 2, Math.sqrt(-Q)).nthRoot(3);
    x2 = new complex_number_default(-q / 2, -Math.sqrt(-Q)).nthRoot(3);
  } else {
    x1 = -q / 2 + Math.sqrt(Q);
    x1 = new complex_number_default(numberSign(x1) * Math.pow(Math.abs(x1), 1 / 3));
    x2 = -q / 2 - Math.sqrt(Q);
    x2 = new complex_number_default(numberSign(x2) * Math.pow(Math.abs(x2), 1 / 3));
  }
  y1 = x1.add(x2);
  z1 = x1.add(x2).multiplyConstant(-1 / 2);
  z2 = x1.add(x2.negate()).multiplyConstant(Math.sqrt(3) / 2);
  y2 = z1.add(i.multiply(z2));
  y3 = z1.add(i.negate().multiply(z2));
  var result = [];
  if (y1.isReal()) {
    result.push(round3(y1.real + b3a, PRECISION));
  }
  if (y2.isReal()) {
    result.push(round3(y2.real + b3a, PRECISION));
  }
  if (y3.isReal()) {
    result.push(round3(y3.real + b3a, PRECISION));
  }
  return result;
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/has-roots-in-range.js
function hasRootsInRange(points3, point2, field, rootField, range3) {
  var polynomial = toCubicPolynomial(points3, rootField);
  var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point2[rootField]);
  var intersection;
  for (var idx = 0; idx < roots.length; idx++) {
    if (0 <= roots[idx] && roots[idx] <= 1) {
      intersection = calculateCurveAt(roots[idx], field, points3);
      if (Math.abs(intersection - point2[field]) <= range3) {
        return true;
      }
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/curve-intersections-count.js
function curveIntersectionsCount(points3, point2, bbox) {
  var polynomial = toCubicPolynomial(points3, "x");
  var roots = solveCubicEquation(polynomial[0], polynomial[1], polynomial[2], polynomial[3] - point2.x);
  var rayIntersection, intersectsRay;
  var count2 = 0;
  for (var i = 0; i < roots.length; i++) {
    rayIntersection = calculateCurveAt(roots[i], "y", points3);
    intersectsRay = close(rayIntersection, point2.y) || rayIntersection > point2.y;
    if (intersectsRay && ((roots[i] === 0 || roots[i] === 1) && bbox.bottomRight().x > point2.x || 0 < roots[i] && roots[i] < 1)) {
      count2++;
    }
  }
  return count2;
}

// node_modules/@progress/kendo-drawing/dist/es/geometry/math/line-intersections-count.js
function lineIntersectionsCount(a, b, point2) {
  var intersects3;
  if (a.x !== b.x) {
    var minX = Math.min(a.x, b.x);
    var maxX = Math.max(a.x, b.x);
    var minY = Math.min(a.y, b.y);
    var maxY = Math.max(a.y, b.y);
    var inRange3 = minX <= point2.x && point2.x < maxX;
    if (minY === maxY) {
      intersects3 = point2.y <= minY && inRange3;
    } else {
      intersects3 = inRange3 && (maxY - minY) * ((a.x - b.x) * (a.y - b.y) > 0 ? point2.x - minX : maxX - point2.x) / (maxX - minX) + minY - point2.y >= 0;
    }
  }
  return intersects3 ? 1 : 0;
}

// node_modules/@progress/kendo-drawing/dist/es/mixins/with-points.js
function pointAccessor(name2) {
  var fieldName = "_" + name2;
  return function(value2) {
    if (defined(value2)) {
      this.Sa(fieldName, point_default.create(value2));
      this.geometryChange();
      return this;
    }
    return this[fieldName];
  };
}
function definePointAccessors(fn, names) {
  for (var i = 0; i < names.length; i++) {
    fn[names[i]] = pointAccessor(names[i]);
  }
}
var withPoints = function(TBase, names) {
  var result = function(TBase2) {
    function result2() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      result2.__proto__ = TBase2;
    result2.prototype = Object.create(TBase2 && TBase2.prototype);
    result2.prototype.constructor = result2;
    return result2;
  }(TBase);
  definePointAccessors(result.prototype, names);
  return result;
};
var with_points_default = withPoints;

// node_modules/@progress/kendo-drawing/dist/es/geometry/segment.js
var points = ["anchor", "controlIn", "controlOut"];
var Segment = function(superclass) {
  function Segment2(anchor, controlIn, controlOut) {
    superclass.call(this);
    this.anchor(anchor || new point_default());
    this.controlIn(controlIn);
    this.controlOut(controlOut);
  }
  if (superclass)
    Segment2.__proto__ = superclass;
  Segment2.prototype = Object.create(superclass && superclass.prototype);
  Segment2.prototype.constructor = Segment2;
  Segment2.prototype.bboxTo = function bboxTo(toSegment, matrix) {
    var segmentAnchor = this.anchor().transformCopy(matrix);
    var toSegmentAnchor = toSegment.anchor().transformCopy(matrix);
    var rect;
    if (this.controlOut() && toSegment.controlIn()) {
      rect = this.Nd(
        segmentAnchor,
        this.controlOut().transformCopy(matrix),
        toSegment.controlIn().transformCopy(matrix),
        toSegmentAnchor
      );
    } else {
      rect = this.Od(segmentAnchor, toSegmentAnchor);
    }
    return rect;
  };
  Segment2.prototype.Od = function _lineBoundingBox(p1, p2) {
    return rect_default.fromPoints(p1, p2);
  };
  Segment2.prototype.Nd = function _curveBoundingBox(p1, cp1, cp2, p2) {
    var points3 = [p1, cp1, cp2, p2];
    var extremesX = this.Yc(points3, "x");
    var extremesY = this.Yc(points3, "y");
    var xLimits = arrayLimits([extremesX.min, extremesX.max, p1.x, p2.x]);
    var yLimits = arrayLimits([extremesY.min, extremesY.max, p1.y, p2.y]);
    return rect_default.fromPoints(new point_default(xLimits.min, yLimits.min), new point_default(xLimits.max, yLimits.max));
  };
  Segment2.prototype.Yc = function _curveExtremesFor(points3, field) {
    var extremes = this.Pd(
      points3[0][field],
      points3[1][field],
      points3[2][field],
      points3[3][field]
    );
    return {
      min: calculateCurveAt(extremes.min, field, points3),
      max: calculateCurveAt(extremes.max, field, points3)
    };
  };
  Segment2.prototype.Pd = function _curveExtremes(x1, x2, x3, x4) {
    var a = x1 - 3 * x2 + 3 * x3 - x4;
    var b = -2 * (x1 - 2 * x2 + x3);
    var c = x1 - x2;
    var sqrt = Math.sqrt(b * b - 4 * a * c);
    var t1 = 0;
    var t2 = 1;
    if (a === 0) {
      if (b !== 0) {
        t1 = t2 = -c / b;
      }
    } else if (!isNaN(sqrt)) {
      t1 = (-b + sqrt) / (2 * a);
      t2 = (-b - sqrt) / (2 * a);
    }
    var min = Math.max(Math.min(t1, t2), 0);
    if (min < 0 || min > 1) {
      min = 0;
    }
    var max = Math.min(Math.max(t1, t2), 1);
    if (max > 1 || max < 0) {
      max = 1;
    }
    return {
      min,
      max
    };
  };
  Segment2.prototype.Qd = function _intersectionsTo(segment, point2) {
    var intersectionsCount;
    if (this.controlOut() && segment.controlIn()) {
      intersectionsCount = curveIntersectionsCount([this.anchor(), this.controlOut(), segment.controlIn(), segment.anchor()], point2, this.bboxTo(segment));
    } else {
      intersectionsCount = lineIntersectionsCount(this.anchor(), segment.anchor(), point2);
    }
    return intersectionsCount;
  };
  Segment2.prototype.Rd = function _isOnCurveTo(segment, point2, width, endSegment) {
    var bbox = this.bboxTo(segment).expand(width, width);
    if (bbox.containsPoint(point2)) {
      var p1 = this.anchor();
      var p2 = this.controlOut();
      var p3 = segment.controlIn();
      var p4 = segment.anchor();
      if (endSegment === "start" && p1.distanceTo(point2) <= width) {
        return !isOutOfEndPoint(p1, p2, point2);
      } else if (endSegment === "end" && p4.distanceTo(point2) <= width) {
        return !isOutOfEndPoint(p4, p3, point2);
      }
      var points3 = [p1, p2, p3, p4];
      if (hasRootsInRange(points3, point2, "x", "y", width) || hasRootsInRange(points3, point2, "y", "x", width)) {
        return true;
      }
      var rotation = transform().rotate(45, point2);
      var rotatedPoints = [p1.transformCopy(rotation), p2.transformCopy(rotation), p3.transformCopy(rotation), p4.transformCopy(rotation)];
      return hasRootsInRange(rotatedPoints, point2, "x", "y", width) || hasRootsInRange(rotatedPoints, point2, "y", "x", width);
    }
  };
  Segment2.prototype.Sd = function _isOnLineTo(segment, point2, width) {
    var p1 = this.anchor();
    var p2 = segment.anchor();
    var angle = deg(Math.atan2(p2.y - p1.y, p2.x - p1.x));
    var rect = new rect_default([p1.x, p1.y - width / 2], [p1.distanceTo(p2), width]);
    return rect.containsPoint(point2.transformCopy(transform().rotate(-angle, p1)));
  };
  Segment2.prototype.kc = function _isOnPathTo(segment, point2, width, endSegment) {
    var isOnPath;
    if (this.controlOut() && segment.controlIn()) {
      isOnPath = this.Rd(segment, point2, width / 2, endSegment);
    } else {
      isOnPath = this.Sd(segment, point2, width);
    }
    return isOnPath;
  };
  return Segment2;
}(with_points_default(has_observers_default, points));
function arrayLimits(arr) {
  var length = arr.length;
  var min = MAX_NUM;
  var max = MIN_NUM;
  for (var i = 0; i < length; i++) {
    max = Math.max(max, arr[i]);
    min = Math.min(min, arr[i]);
  }
  return {
    min,
    max
  };
}
var segment_default = Segment;

// node_modules/@progress/kendo-drawing/dist/es/shapes/utils/points-to-curve.js
var WEIGHT = 0.333;
var EXTREMUM_ALLOWED_DEVIATION = 0.01;
var X = "x";
var Y = "y";
function pointsToCurve(pointsIn, closed) {
  var points3 = pointsIn.slice(0);
  var segments = [];
  var length = points3.length;
  if (length > 2) {
    removeDuplicates(0, points3);
    length = points3.length;
  }
  if (length < 2 || length === 2 && points3[0].equals(points3[1])) {
    return segments;
  }
  var p0 = points3[0];
  var p1 = points3[1];
  var p2 = points3[2];
  segments.push(new segment_default(p0));
  while (p0.equals(points3[length - 1])) {
    closed = true;
    points3.pop();
    length--;
  }
  if (length === 2) {
    var tangent = getTangent(p0, p1, X, Y);
    last3(segments).controlOut(
      firstControlPoint(tangent, p0, p1, X, Y)
    );
    segments.push(new segment_default(
      p1,
      secondControlPoint(tangent, p0, p1, X, Y)
    ));
    return segments;
  }
  var initialControlPoint, lastControlPoint;
  if (closed) {
    p0 = points3[length - 1];
    p1 = points3[0];
    p2 = points3[1];
    var controlPoints = getControlPoints(p0, p1, p2);
    initialControlPoint = controlPoints[1];
    lastControlPoint = controlPoints[0];
  } else {
    var tangent$1 = getTangent(p0, p1, X, Y);
    initialControlPoint = firstControlPoint(tangent$1, p0, p1, X, Y);
  }
  var cp0 = initialControlPoint;
  for (var idx = 0; idx <= length - 3; idx++) {
    removeDuplicates(idx, points3);
    length = points3.length;
    if (idx + 3 <= length) {
      p0 = points3[idx];
      p1 = points3[idx + 1];
      p2 = points3[idx + 2];
      var controlPoints$1 = getControlPoints(p0, p1, p2);
      last3(segments).controlOut(cp0);
      cp0 = controlPoints$1[1];
      var cp1 = controlPoints$1[0];
      segments.push(new segment_default(p1, cp1));
    }
  }
  if (closed) {
    p0 = points3[length - 2];
    p1 = points3[length - 1];
    p2 = points3[0];
    var controlPoints$2 = getControlPoints(p0, p1, p2);
    last3(segments).controlOut(cp0);
    segments.push(new segment_default(
      p1,
      controlPoints$2[0]
    ));
    last3(segments).controlOut(controlPoints$2[1]);
    segments.push(new segment_default(
      p2,
      lastControlPoint
    ));
  } else {
    var tangent$2 = getTangent(p1, p2, X, Y);
    last3(segments).controlOut(cp0);
    segments.push(new segment_default(
      p2,
      secondControlPoint(tangent$2, p1, p2, X, Y)
    ));
  }
  return segments;
}
function pointsToClosedCurve(pointsIn) {
  return pointsToCurve(pointsIn, true);
}
function removeDuplicates(idx, points3) {
  while (points3[idx + 1] && (points3[idx].equals(points3[idx + 1]) || points3[idx + 1].equals(points3[idx + 2]))) {
    points3.splice(idx + 1, 1);
  }
}
function invertAxis(p0, p1, p2) {
  var invertAxis2 = false;
  if (p0.x === p1.x) {
    invertAxis2 = true;
  } else if (p1.x === p2.x) {
    if (p1.y < p2.y && p0.y <= p1.y || p2.y < p1.y && p1.y <= p0.y) {
      invertAxis2 = true;
    }
  } else {
    var fn = lineFunction(p0, p1);
    var y2 = calculateFunction(fn, p2.x);
    if (!(p0.y <= p1.y && p2.y <= y2) && !(p1.y <= p0.y && p2.y >= y2)) {
      invertAxis2 = true;
    }
  }
  return invertAxis2;
}
function isLine(p0, p1, p2) {
  var fn = lineFunction(p0, p1);
  var y2 = calculateFunction(fn, p2.x);
  return p0.x === p1.x && p1.x === p2.x || round3(y2, 1) === round3(p2.y, 1);
}
function lineFunction(p1, p2) {
  var a = (p2.y - p1.y) / (p2.x - p1.x);
  var b = p1.y - a * p1.x;
  return [b, a];
}
function getControlPoints(p0, p1, p2) {
  var xField = X;
  var yField = Y;
  var restrict = false;
  var switchOrientation = false;
  var tangent;
  if (isLine(p0, p1, p2)) {
    tangent = getTangent(p0, p1, X, Y);
  } else {
    var monotonic = {
      x: isMonotonicByField(p0, p1, p2, X),
      y: isMonotonicByField(p0, p1, p2, Y)
    };
    if (monotonic.x && monotonic.y) {
      tangent = getTangent(p0, p2, X, Y);
      restrict = true;
    } else {
      if (invertAxis(p0, p1, p2)) {
        xField = Y;
        yField = X;
      }
      if (monotonic[xField]) {
        tangent = 0;
      } else {
        var sign;
        if (p2[yField] < p0[yField] && p0[yField] <= p1[yField] || p0[yField] < p2[yField] && p1[yField] <= p0[yField]) {
          sign = numberSign2((p2[yField] - p0[yField]) * (p1[xField] - p0[xField]));
        } else {
          sign = -numberSign2((p2[xField] - p0[xField]) * (p1[yField] - p0[yField]));
        }
        tangent = EXTREMUM_ALLOWED_DEVIATION * sign;
        switchOrientation = true;
      }
    }
  }
  var secondCP = secondControlPoint(tangent, p0, p1, xField, yField);
  if (switchOrientation) {
    var oldXField = xField;
    xField = yField;
    yField = oldXField;
  }
  var firstCP = firstControlPoint(tangent, p1, p2, xField, yField);
  if (restrict) {
    restrictControlPoint(p0, p1, secondCP, tangent);
    restrictControlPoint(p1, p2, firstCP, tangent);
  }
  return [secondCP, firstCP];
}
function restrictControlPoint(p1, p2, cp, tangent) {
  if (p1.y < p2.y) {
    if (p2.y < cp.y) {
      cp.x = p1.x + (p2.y - p1.y) / tangent;
      cp.y = p2.y;
    } else if (cp.y < p1.y) {
      cp.x = p2.x - (p2.y - p1.y) / tangent;
      cp.y = p1.y;
    }
  } else {
    if (cp.y < p2.y) {
      cp.x = p1.x - (p1.y - p2.y) / tangent;
      cp.y = p2.y;
    } else if (p1.y < cp.y) {
      cp.x = p2.x + (p1.y - p2.y) / tangent;
      cp.y = p1.y;
    }
  }
}
function getTangent(p0, p1, xField, yField) {
  var x = p1[xField] - p0[xField];
  var y = p1[yField] - p0[yField];
  var tangent;
  if (x === 0) {
    tangent = 0;
  } else {
    tangent = y / x;
  }
  return tangent;
}
function isMonotonicByField(p0, p1, p2, field) {
  return p2[field] > p1[field] && p1[field] > p0[field] || p2[field] < p1[field] && p1[field] < p0[field];
}
function firstControlPoint(tangent, p0, p3, xField, yField) {
  var t1 = p0[xField];
  var t2 = p3[xField];
  var distance = (t2 - t1) * WEIGHT;
  return point(t1 + distance, p0[yField] + distance * tangent, xField, yField);
}
function secondControlPoint(tangent, p0, p3, xField, yField) {
  var t1 = p0[xField];
  var t2 = p3[xField];
  var distance = (t2 - t1) * WEIGHT;
  return point(t2 - distance, p3[yField] - distance * tangent, xField, yField);
}
function point(xValue, yValue, xField, yField) {
  var controlPoint = new point_default();
  controlPoint[xField] = xValue;
  controlPoint[yField] = yValue;
  return controlPoint;
}
function calculateFunction(fn, x) {
  var length = fn.length;
  var result = 0;
  for (var i = 0; i < length; i++) {
    result += Math.pow(x, i) * fn[i];
  }
  return result;
}
function numberSign2(value2) {
  return value2 <= 0 ? -1 : 1;
}

// node_modules/@progress/kendo-drawing/dist/es/parsing/shape-map.js
var ShapeMap = {
  l: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    for (var i = 0; i < parameters.length; i += 2) {
      var point2 = new point_default(parameters[i], parameters[i + 1]);
      if (options2.isRelative) {
        point2.translateWith(position4);
      }
      path.lineTo(point2.x, point2.y);
      position4.x = point2.x;
      position4.y = point2.y;
    }
  },
  c: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    for (var i = 0; i < parameters.length; i += 6) {
      var controlOut = new point_default(parameters[i], parameters[i + 1]);
      var controlIn = new point_default(parameters[i + 2], parameters[i + 3]);
      var point2 = new point_default(parameters[i + 4], parameters[i + 5]);
      if (options2.isRelative) {
        controlIn.translateWith(position4);
        controlOut.translateWith(position4);
        point2.translateWith(position4);
      }
      path.curveTo(controlOut, controlIn, point2);
      position4.x = point2.x;
      position4.y = point2.y;
    }
  },
  v: function(path, options2) {
    var value2 = options2.isRelative ? 0 : options2.position.x;
    toLineParamaters(options2.parameters, true, value2);
    this.l(path, options2);
  },
  h: function(path, options2) {
    var value2 = options2.isRelative ? 0 : options2.position.y;
    toLineParamaters(options2.parameters, false, value2);
    this.l(path, options2);
  },
  a: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    for (var i = 0; i < parameters.length; i += 7) {
      var radiusX = parameters[i];
      var radiusY = parameters[i + 1];
      var rotation = parameters[i + 2];
      var largeArc = parameters[i + 3];
      var swipe = parameters[i + 4];
      var endPoint = new point_default(parameters[i + 5], parameters[i + 6]);
      if (options2.isRelative) {
        endPoint.translateWith(position4);
      }
      if (position4.x !== endPoint.x || position4.y !== endPoint.y) {
        path.arcTo(endPoint, radiusX, radiusY, largeArc, swipe, rotation);
        position4.x = endPoint.x;
        position4.y = endPoint.y;
      }
    }
  },
  s: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    var previousCommand = options2.previousCommand;
    var lastControlIn;
    if (previousCommand === "s" || previousCommand === "c") {
      lastControlIn = last3(last3(path.paths).segments).controlIn();
    }
    for (var i = 0; i < parameters.length; i += 4) {
      var controlIn = new point_default(parameters[i], parameters[i + 1]);
      var endPoint = new point_default(parameters[i + 2], parameters[i + 3]);
      var controlOut = void 0;
      if (options2.isRelative) {
        controlIn.translateWith(position4);
        endPoint.translateWith(position4);
      }
      if (lastControlIn) {
        controlOut = reflectionPoint(lastControlIn, position4);
      } else {
        controlOut = position4.clone();
      }
      lastControlIn = controlIn;
      path.curveTo(controlOut, controlIn, endPoint);
      position4.x = endPoint.x;
      position4.y = endPoint.y;
    }
  },
  q: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    for (var i = 0; i < parameters.length; i += 4) {
      var controlPoint = new point_default(parameters[i], parameters[i + 1]);
      var endPoint = new point_default(parameters[i + 2], parameters[i + 3]);
      if (options2.isRelative) {
        controlPoint.translateWith(position4);
        endPoint.translateWith(position4);
      }
      var cubicControlPoints = quadraticToCubicControlPoints(position4, controlPoint, endPoint);
      path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);
      position4.x = endPoint.x;
      position4.y = endPoint.y;
    }
  },
  t: function(path, options2) {
    var parameters = options2.parameters;
    var position4 = options2.position;
    var previousCommand = options2.previousCommand;
    var controlPoint;
    if (previousCommand === "q" || previousCommand === "t") {
      var lastSegment = last3(last3(path.paths).segments);
      controlPoint = lastSegment.controlIn().clone().translateWith(position4.scaleCopy(-1 / 3)).scale(3 / 2);
    }
    for (var i = 0; i < parameters.length; i += 2) {
      var endPoint = new point_default(parameters[i], parameters[i + 1]);
      if (options2.isRelative) {
        endPoint.translateWith(position4);
      }
      if (controlPoint) {
        controlPoint = reflectionPoint(controlPoint, position4);
      } else {
        controlPoint = position4.clone();
      }
      var cubicControlPoints = quadraticToCubicControlPoints(position4, controlPoint, endPoint);
      path.curveTo(cubicControlPoints.controlOut, cubicControlPoints.controlIn, endPoint);
      position4.x = endPoint.x;
      position4.y = endPoint.y;
    }
  }
};
function toLineParamaters(parameters, isVertical, value2) {
  var insertPosition = isVertical ? 0 : 1;
  for (var i = 0; i < parameters.length; i += 2) {
    parameters.splice(i + insertPosition, 0, value2);
  }
}
function reflectionPoint(point2, center) {
  if (point2 && center) {
    return center.scaleCopy(2).translate(-point2.x, -point2.y);
  }
}
var third = 1 / 3;
function quadraticToCubicControlPoints(position4, controlPoint, endPoint) {
  var scaledPoint = controlPoint.clone().scale(2 / 3);
  return {
    controlOut: scaledPoint.clone().translateWith(position4.scaleCopy(third)),
    controlIn: scaledPoint.translateWith(endPoint.scaleCopy(third))
  };
}
var shape_map_default = ShapeMap;

// node_modules/@progress/kendo-drawing/dist/es/parsing/parse-path.js
var SEGMENT_REGEX = /([a-df-z]{1})([^a-df-z]*)(z)?/gi;
var SPLIT_REGEX = /[,\s]?([+\-]?(?:\d*\.\d+|\d+)(?:[eE][+\-]?\d+)?)/g;
var MOVE = "m";
var CLOSE = "z";
function parseParameters(str) {
  var parameters = [];
  str.replace(SPLIT_REGEX, function(match, number41) {
    parameters.push(parseFloat(number41));
  });
  return parameters;
}
function parsePath(pathInstance, str) {
  var position4 = new point_default();
  var previousCommand;
  str.replace(SEGMENT_REGEX, function(match, element6, params, closePath) {
    var command = element6.toLowerCase();
    var isRelative = command === element6;
    var parameters = parseParameters(params.trim());
    if (command === MOVE) {
      if (isRelative) {
        position4.x += parameters[0];
        position4.y += parameters[1];
      } else {
        position4.x = parameters[0];
        position4.y = parameters[1];
      }
      pathInstance.moveTo(position4.x, position4.y);
      if (parameters.length > 2) {
        command = "l";
        parameters.splice(0, 2);
      }
    }
    if (shape_map_default[command]) {
      shape_map_default[command](
        pathInstance,
        {
          parameters,
          position: position4,
          isRelative,
          previousCommand
        }
      );
      if (closePath && closePath.toLowerCase() === CLOSE) {
        pathInstance.close();
      }
    } else if (command !== MOVE) {
      throw new Error("Error while parsing SVG path. Unsupported command: " + command);
    }
    previousCommand = command;
  });
  return pathInstance;
}
var parse_path_default = parsePath;

// node_modules/@progress/kendo-drawing/dist/es/shapes/utils/elements-bounding-box.js
function elementsBoundingBox(elements, applyTransform, transformation) {
  var boundingBox;
  for (var i = 0; i < elements.length; i++) {
    var element6 = elements[i];
    if (element6.visible()) {
      var elementBoundingBox = applyTransform ? element6.bbox(transformation) : element6.rawBBox();
      if (elementBoundingBox) {
        if (boundingBox) {
          boundingBox = rect_default.union(boundingBox, elementBoundingBox);
        } else {
          boundingBox = elementBoundingBox;
        }
      }
    }
  }
  return boundingBox;
}

// node_modules/@progress/kendo-drawing/dist/es/shapes/utils/elements-clippend-bounding-box.js
function elementsClippedBoundingBox(elements, transformation) {
  var boundingBox;
  for (var i = 0; i < elements.length; i++) {
    var element6 = elements[i];
    if (element6.visible()) {
      var elementBoundingBox = element6.clippedBBox(transformation);
      if (elementBoundingBox) {
        if (boundingBox) {
          boundingBox = rect_default.union(boundingBox, elementBoundingBox);
        } else {
          boundingBox = elementBoundingBox;
        }
      }
    }
  }
  return boundingBox;
}

// node_modules/@progress/kendo-drawing/dist/es/shapes/path.js
var SPACE2 = " ";
var printPoints = function(precision) {
  return function() {
    var points3 = [], len = arguments.length;
    while (len--)
      points3[len] = arguments[len];
    return points3.map(function(p) {
      return p.toString(precision);
    }).join(SPACE2);
    ;
  };
};
var segmentType = function(segmentStart, segmentEnd) {
  return segmentStart.controlOut() && segmentEnd.controlIn() ? "C" : "L";
};
var Path = function(superclass) {
  function Path2(options2) {
    superclass.call(this, options2);
    this.segments = new geometry_elements_array_default();
    this.segments.addObserver(this);
    if (!defined(this.options.stroke)) {
      this.stroke("#000");
      if (!defined(this.options.stroke.lineJoin)) {
        this.options.set("stroke.lineJoin", "miter");
      }
    }
  }
  if (superclass)
    Path2.__proto__ = superclass;
  Path2.prototype = Object.create(superclass && superclass.prototype);
  Path2.prototype.constructor = Path2;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Path";
  };
  Path2.prototype.moveTo = function moveTo(x, y) {
    this.suspend();
    this.segments.elements([]);
    this.resume();
    this.lineTo(x, y);
    return this;
  };
  Path2.prototype.lineTo = function lineTo(x, y) {
    var point2 = defined(y) ? new point_default(x, y) : x;
    var segment = new segment_default(point2);
    this.segments.push(segment);
    return this;
  };
  Path2.prototype.curveTo = function curveTo(controlOut, controlIn, point2) {
    if (this.segments.length > 0) {
      var lastSegment = last3(this.segments);
      var segment = new segment_default(point2, controlIn);
      this.suspend();
      lastSegment.controlOut(controlOut);
      this.resume();
      this.segments.push(segment);
    }
    return this;
  };
  Path2.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {
    if (this.segments.length > 0) {
      var lastSegment = last3(this.segments);
      var anchor = lastSegment.anchor();
      var start2 = rad(startAngle);
      var center = new point_default(
        anchor.x - radiusX * Math.cos(start2),
        anchor.y - radiusY * Math.sin(start2)
      );
      var arc2 = new arc_default(center, {
        startAngle,
        endAngle,
        radiusX,
        radiusY,
        anticlockwise
      });
      this.Zc(arc2);
    }
    return this;
  };
  Path2.prototype.arcTo = function arcTo(end2, rx, ry, largeArc, swipe, rotation) {
    if (this.segments.length > 0) {
      var lastSegment = last3(this.segments);
      var anchor = lastSegment.anchor();
      var arc = arc_default.fromPoints(anchor, point_default.create(end2), rx, ry, largeArc, swipe, rotation);
      this.Zc(arc);
    }
    return this;
  };
  Path2.prototype.Zc = function _addArcSegments(arc) {
    var this$1 = this;
    this.suspend();
    var curvePoints = arc.curvePoints();
    for (var i = 1; i < curvePoints.length; i += 3) {
      this$1.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);
    }
    this.resume();
    this.geometryChange();
  };
  Path2.prototype.close = function close2() {
    this.options.closed = true;
    this.geometryChange();
    return this;
  };
  Path2.prototype.rawBBox = function rawBBox() {
    return this.Ta();
  };
  Path2.prototype.toString = function toString5(digits) {
    var output = "";
    var segments = this.segments;
    var length = segments.length;
    if (length > 0) {
      var parts = [];
      var print = printPoints(digits);
      var currentType;
      for (var i = 1; i < length; i++) {
        var type = segmentType(segments[i - 1], segments[i]);
        if (type !== currentType) {
          currentType = type;
          parts.push(type);
        }
        if (type === "L") {
          parts.push(print(segments[i].anchor()));
        } else {
          parts.push(print(
            segments[i - 1].controlOut(),
            segments[i].controlIn(),
            segments[i].anchor()
          ));
        }
      }
      output = "M" + print(segments[0].anchor()) + SPACE2 + parts.join(SPACE2);
      if (this.options.closed) {
        output += "Z";
      }
    }
    return output;
  };
  Path2.prototype.Fa = function _containsPoint(point2) {
    var segments = this.segments;
    var length = segments.length;
    var intersectionsCount = 0;
    var previous, current;
    for (var idx = 1; idx < length; idx++) {
      previous = segments[idx - 1];
      current = segments[idx];
      intersectionsCount += previous.Qd(current, point2);
    }
    if (this.options.closed || !segments[0].anchor().equals(segments[length - 1].anchor())) {
      intersectionsCount += lineIntersectionsCount(segments[0].anchor(), segments[length - 1].anchor(), point2);
    }
    return intersectionsCount % 2 !== 0;
  };
  Path2.prototype.ha = function _isOnPath(point2, width) {
    var segments = this.segments;
    var length = segments.length;
    var pathWidth = width || this.options.stroke.width;
    if (length > 1) {
      if (segments[0].kc(segments[1], point2, pathWidth, "start")) {
        return true;
      }
      for (var idx = 2; idx <= length - 2; idx++) {
        if (segments[idx - 1].kc(segments[idx], point2, pathWidth)) {
          return true;
        }
      }
      if (segments[length - 2].kc(segments[length - 1], point2, pathWidth, "end")) {
        return true;
      }
    }
    return false;
  };
  Path2.prototype.Ta = function _bbox(matrix) {
    var segments = this.segments;
    var length = segments.length;
    var boundingBox;
    if (length === 1) {
      var anchor = segments[0].anchor().transformCopy(matrix);
      boundingBox = new rect_default(anchor, size_default.ZERO);
    } else if (length > 0) {
      for (var i = 1; i < length; i++) {
        var segmentBox = segments[i - 1].bboxTo(segments[i], matrix);
        if (boundingBox) {
          boundingBox = rect_default.union(boundingBox, segmentBox);
        } else {
          boundingBox = segmentBox;
        }
      }
    }
    return boundingBox;
  };
  Path2.parse = function parse3(str, options2) {
    return MultiPath.parse(str, options2);
  };
  Path2.fromRect = function fromRect(rect, options2) {
    var path = new Path2(options2);
    var ref = rect.cornerRadius;
    var rx = ref[0];
    var ry = ref[1];
    if (rx === 0 && ry === 0) {
      path.moveTo(rect.topLeft()).lineTo(rect.topRight()).lineTo(rect.bottomRight()).lineTo(rect.bottomLeft()).close();
    } else {
      var origin = rect.origin;
      var x = origin.x;
      var y = origin.y;
      var width = rect.width();
      var height = rect.height();
      rx = limitValue(rx, 0, width / 2);
      ry = limitValue(ry, 0, height / 2);
      path.moveTo(x + rx, y).lineTo(x + width - rx, y).arcTo([x + width, y + ry], rx, ry, false).lineTo(x + width, y + height - ry).arcTo([x + width - rx, y + height], rx, ry, false).lineTo(x + rx, y + height).arcTo([x, y + height - ry], rx, ry, false).lineTo(x, y + ry).arcTo([x + rx, y], rx, ry, false);
    }
    return path;
  };
  Path2.fromPoints = function fromPoints(points3, options2) {
    if (points3) {
      var path = new Path2(options2);
      for (var i = 0; i < points3.length; i++) {
        var point2 = point_default.create(points3[i]);
        if (point2) {
          if (i === 0) {
            path.moveTo(point2);
          } else {
            path.lineTo(point2);
          }
        }
      }
      return path;
    }
  };
  Path2.curveFromPoints = function curveFromPoints(points3, options2) {
    if (points3) {
      var segments = pointsToCurve(points3);
      var path = new Path2(options2);
      path.segments.push.apply(path.segments, segments);
      return path;
    }
  };
  Path2.fromArc = function fromArc(arc, options2) {
    var path = new Path2(options2);
    var startAngle = arc.startAngle;
    var start2 = arc.pointAt(startAngle);
    path.moveTo(start2.x, start2.y);
    path.arc(startAngle, arc.endAngle, arc.radiusX, arc.radiusY, arc.anticlockwise);
    return path;
  };
  Object.defineProperties(Path2.prototype, prototypeAccessors);
  return Path2;
}(paintable_default(measurable_default(element_default)));
var MultiPath = function(superclass) {
  function MultiPath2(options2) {
    superclass.call(this, options2);
    this.paths = new geometry_elements_array_default();
    this.paths.addObserver(this);
    if (!defined(this.options.stroke)) {
      this.stroke("#000");
    }
  }
  if (superclass)
    MultiPath2.__proto__ = superclass;
  MultiPath2.prototype = Object.create(superclass && superclass.prototype);
  MultiPath2.prototype.constructor = MultiPath2;
  var prototypeAccessors$1 = { nodeType: { configurable: true } };
  MultiPath2.parse = function parse3(str, options2) {
    var instance4 = new MultiPath2(options2);
    return parse_path_default(instance4, str);
  };
  MultiPath2.prototype.toString = function toString5(digits) {
    var paths = this.paths;
    var output = "";
    if (paths.length > 0) {
      var result = [];
      for (var i = 0; i < paths.length; i++) {
        result.push(paths[i].toString(digits));
      }
      output = result.join(SPACE2);
    }
    return output;
  };
  prototypeAccessors$1.nodeType.get = function() {
    return "MultiPath";
  };
  MultiPath2.prototype.moveTo = function moveTo(x, y) {
    var path = new Path();
    path.moveTo(x, y);
    this.paths.push(path);
    return this;
  };
  MultiPath2.prototype.lineTo = function lineTo(x, y) {
    if (this.paths.length > 0) {
      last3(this.paths).lineTo(x, y);
    }
    return this;
  };
  MultiPath2.prototype.curveTo = function curveTo(controlOut, controlIn, point2) {
    if (this.paths.length > 0) {
      last3(this.paths).curveTo(controlOut, controlIn, point2);
    }
    return this;
  };
  MultiPath2.prototype.arc = function arc(startAngle, endAngle, radiusX, radiusY, anticlockwise) {
    if (this.paths.length > 0) {
      last3(this.paths).arc(startAngle, endAngle, radiusX, radiusY, anticlockwise);
    }
    return this;
  };
  MultiPath2.prototype.arcTo = function arcTo(end2, rx, ry, largeArc, swipe, rotation) {
    if (this.paths.length > 0) {
      last3(this.paths).arcTo(end2, rx, ry, largeArc, swipe, rotation);
    }
    return this;
  };
  MultiPath2.prototype.close = function close2() {
    if (this.paths.length > 0) {
      last3(this.paths).close();
    }
    return this;
  };
  MultiPath2.prototype.Ta = function _bbox(matrix) {
    return elementsBoundingBox(this.paths, true, matrix);
  };
  MultiPath2.prototype.rawBBox = function rawBBox() {
    return elementsBoundingBox(this.paths, false);
  };
  MultiPath2.prototype.Fa = function _containsPoint(point2) {
    var paths = this.paths;
    for (var idx = 0; idx < paths.length; idx++) {
      if (paths[idx].Fa(point2)) {
        return true;
      }
    }
    return false;
  };
  MultiPath2.prototype.ha = function _isOnPath(point2) {
    var paths = this.paths;
    var width = this.options.stroke.width;
    for (var idx = 0; idx < paths.length; idx++) {
      if (paths[idx].ha(point2, width)) {
        return true;
      }
    }
    return false;
  };
  MultiPath2.prototype.gc = function _clippedBBox(transformation) {
    return elementsClippedBoundingBox(this.paths, this.currentTransform(transformation));
  };
  Object.defineProperties(MultiPath2.prototype, prototypeAccessors$1);
  return MultiPath2;
}(paintable_default(measurable_default(element_default)));

// node_modules/@progress/kendo-drawing/dist/es/shapes/arc.js
var DEFAULT_STROKE2 = "#000";
var Arc2 = function(superclass) {
  function Arc3(geometry, options2) {
    if (geometry === void 0)
      geometry = new arc_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.geometry(geometry);
    if (!defined(this.options.stroke)) {
      this.stroke(DEFAULT_STROKE2);
    }
  }
  if (superclass)
    Arc3.__proto__ = superclass;
  Arc3.prototype = Object.create(superclass && superclass.prototype);
  Arc3.prototype.constructor = Arc3;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Arc";
  };
  Arc3.prototype.Ta = function _bbox(matrix) {
    return this.eb.bbox(matrix);
  };
  Arc3.prototype.rawBBox = function rawBBox() {
    return this.geometry().bbox();
  };
  Arc3.prototype.toPath = function toPath() {
    var path = new Path();
    var curvePoints = this.geometry().curvePoints();
    if (curvePoints.length > 0) {
      path.moveTo(curvePoints[0].x, curvePoints[0].y);
      for (var i = 1; i < curvePoints.length; i += 3) {
        path.curveTo(curvePoints[i], curvePoints[i + 1], curvePoints[i + 2]);
      }
    }
    return path;
  };
  Arc3.prototype.Fa = function _containsPoint(point2) {
    return this.geometry().containsPoint(point2);
  };
  Arc3.prototype.ha = function _isOnPath(point2) {
    return this.geometry().ha(point2, this.options.stroke.width / 2);
  };
  Object.defineProperties(Arc3.prototype, prototypeAccessors);
  return Arc3;
}(paintable_default(measurable_default(with_geometry_default(element_default))));
var arc_default2 = Arc2;

// node_modules/@progress/kendo-drawing/dist/es/shapes/text.js
var DEFAULT_FONT = "12px sans-serif";
var DEFAULT_FILL = "#000";
var Text = function(superclass) {
  function Text2(content, position4, options2) {
    if (position4 === void 0)
      position4 = new point_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.content(content);
    this.position(position4);
    if (!this.options.font) {
      this.options.font = DEFAULT_FONT;
    }
    if (!defined(this.options.fill)) {
      this.fill(DEFAULT_FILL);
    }
  }
  if (superclass)
    Text2.__proto__ = superclass;
  Text2.prototype = Object.create(superclass && superclass.prototype);
  Text2.prototype.constructor = Text2;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Text";
  };
  Text2.prototype.content = function content(value2) {
    if (defined(value2)) {
      this.options.set("content", value2);
      return this;
    }
    return this.options.get("content");
  };
  Text2.prototype.measure = function measure() {
    var metrics = measureText(this.content(), {
      font: this.options.get("font")
    });
    return metrics;
  };
  Text2.prototype.rect = function rect() {
    var size = this.measure();
    var pos = this.position().clone();
    return new rect_default(pos, [size.width, size.height]);
  };
  Text2.prototype.bbox = function bbox(transformation) {
    var combinedMatrix = toMatrix(this.currentTransform(transformation));
    return this.rect().bbox(combinedMatrix);
  };
  Text2.prototype.rawBBox = function rawBBox() {
    return this.rect().bbox();
  };
  Text2.prototype.Fa = function _containsPoint(point2) {
    return this.rect().containsPoint(point2);
  };
  Object.defineProperties(Text2.prototype, prototypeAccessors);
  return Text2;
}(paintable_default(with_points_default(element_default, ["position"])));
var text_default = Text;

// node_modules/@progress/kendo-drawing/dist/es/shapes/image.js
var Image2 = function(superclass) {
  function Image3(src, rect, options2) {
    if (rect === void 0)
      rect = new rect_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.src(src);
    this.rect(rect);
  }
  if (superclass)
    Image3.__proto__ = superclass;
  Image3.prototype = Object.create(superclass && superclass.prototype);
  Image3.prototype.constructor = Image3;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Image";
  };
  Image3.prototype.src = function src(value2) {
    if (defined(value2)) {
      this.options.set("src", value2);
      return this;
    }
    return this.options.get("src");
  };
  Image3.prototype.bbox = function bbox(transformation) {
    var combinedMatrix = toMatrix(this.currentTransform(transformation));
    return this.Ga.bbox(combinedMatrix);
  };
  Image3.prototype.rawBBox = function rawBBox() {
    return this.Ga.bbox();
  };
  Image3.prototype.Fa = function _containsPoint(point2) {
    return this.Ga.containsPoint(point2);
  };
  Image3.prototype.Tc = function _hasFill() {
    return this.src();
  };
  Object.defineProperties(Image3.prototype, prototypeAccessors);
  return Image3;
}(with_geometry_default(element_default, ["rect"]));
var image_default = Image2;

// node_modules/@progress/kendo-drawing/dist/es/mixins/traversable.js
var traversable = function(TBase, childrenField) {
  return function(TBase2) {
    function anonymous() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      anonymous.__proto__ = TBase2;
    anonymous.prototype = Object.create(TBase2 && TBase2.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.traverse = function traverse(callback) {
      var children2 = this[childrenField];
      for (var i = 0; i < children2.length; i++) {
        var child = children2[i];
        if (child.traverse) {
          child.traverse(callback);
        } else {
          callback(child);
        }
      }
      return this;
    };
    return anonymous;
  }(TBase);
};
var traversable_default = traversable;

// node_modules/@progress/kendo-drawing/dist/es/shapes/group.js
var Group = function(superclass) {
  function Group2(options2) {
    superclass.call(this, options2);
    this.children = [];
  }
  if (superclass)
    Group2.__proto__ = superclass;
  Group2.prototype = Object.create(superclass && superclass.prototype);
  Group2.prototype.constructor = Group2;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Group";
  };
  Group2.prototype.childrenChange = function childrenChange(action, items, index) {
    this.trigger("childrenChange", {
      action,
      items,
      index
    });
  };
  Group2.prototype.append = function append$1() {
    append(this.children, arguments);
    this._c(arguments, this);
    this.childrenChange("add", arguments);
    return this;
  };
  Group2.prototype.insert = function insert(index, element6) {
    this.children.splice(index, 0, element6);
    element6.parent = this;
    this.childrenChange("add", [element6], index);
    return this;
  };
  Group2.prototype.insertAt = function insertAt(element6, index) {
    return this.insert(index, element6);
  };
  Group2.prototype.remove = function remove(element6) {
    var index = this.children.indexOf(element6);
    if (index >= 0) {
      this.children.splice(index, 1);
      element6.parent = null;
      this.childrenChange("remove", [element6], index);
    }
    return this;
  };
  Group2.prototype.removeAt = function removeAt(index) {
    if (0 <= index && index < this.children.length) {
      var element6 = this.children[index];
      this.children.splice(index, 1);
      element6.parent = null;
      this.childrenChange("remove", [element6], index);
    }
    return this;
  };
  Group2.prototype.clear = function clear3() {
    var items = this.children;
    this.children = [];
    this._c(items, null);
    this.childrenChange("remove", items, 0);
    return this;
  };
  Group2.prototype.bbox = function bbox(transformation) {
    return elementsBoundingBox(this.children, true, this.currentTransform(transformation));
  };
  Group2.prototype.rawBBox = function rawBBox() {
    return elementsBoundingBox(this.children, false);
  };
  Group2.prototype.gc = function _clippedBBox(transformation) {
    return elementsClippedBoundingBox(this.children, this.currentTransform(transformation));
  };
  Group2.prototype.currentTransform = function currentTransform(transformation) {
    return element_default.prototype.currentTransform.call(this, transformation) || null;
  };
  Group2.prototype.containsPoint = function containsPoint(point2, parentTransform) {
    if (this.visible()) {
      var children2 = this.children;
      var transform2 = this.currentTransform(parentTransform);
      for (var idx = 0; idx < children2.length; idx++) {
        if (children2[idx].containsPoint(point2, transform2)) {
          return true;
        }
      }
    }
    return false;
  };
  Group2.prototype._c = function _reparent(elements, newParent) {
    var this$1 = this;
    for (var i = 0; i < elements.length; i++) {
      var child = elements[i];
      var parent = child.parent;
      if (parent && parent !== this$1 && parent.remove) {
        parent.remove(child);
      }
      child.parent = newParent;
    }
  };
  Object.defineProperties(Group2.prototype, prototypeAccessors);
  return Group2;
}(traversable_default(element_default, "children"));
var group_default = Group;

// node_modules/@progress/kendo-drawing/dist/es/alignment/translate-to-point.js
function translateToPoint(point2, bbox, element6) {
  var transofrm = element6.transform() || transform();
  var matrix = transofrm.matrix();
  matrix.e += point2.x - bbox.origin.x;
  matrix.f += point2.y - bbox.origin.y;
  transofrm.matrix(matrix);
  element6.transform(transofrm);
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/align-start.js
function alignStart(size, rect, align3, axis, sizeField) {
  var start2;
  if (align3 === "start") {
    start2 = rect.origin[axis];
  } else if (align3 === "end") {
    start2 = rect.origin[axis] + rect.size[sizeField] - size;
  } else {
    start2 = rect.origin[axis] + (rect.size[sizeField] - size) / 2;
  }
  return start2;
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/align-start-reverse.js
function alignStartReverse(size, rect, align3, axis, sizeField) {
  var start2;
  if (align3 === "start") {
    start2 = rect.origin[axis] + rect.size[sizeField] - size;
  } else if (align3 === "end") {
    start2 = rect.origin[axis];
  } else {
    start2 = rect.origin[axis] + (rect.size[sizeField] - size) / 2;
  }
  return start2;
}

// node_modules/@progress/kendo-drawing/dist/es/shapes/layout.js
var DEFAULT_OPTIONS2 = {
  alignContent: "start",
  justifyContent: "start",
  alignItems: "start",
  spacing: 0,
  orientation: "horizontal",
  lineSpacing: 0,
  wrap: true,
  revers: false
};
var forEach = function(elements, callback) {
  elements.forEach(callback);
};
var forEachReverse = function(elements, callback) {
  var length = elements.length;
  for (var idx = length - 1; idx >= 0; idx--) {
    callback(elements[idx], idx);
  }
};
var Layout = function(Group2) {
  function Layout2(rect, options2) {
    Group2.call(this, Object.assign({}, DEFAULT_OPTIONS2, options2));
    this.Ga = rect;
    this.fb = {};
  }
  if (Group2)
    Layout2.__proto__ = Group2;
  Layout2.prototype = Object.create(Group2 && Group2.prototype);
  Layout2.prototype.constructor = Layout2;
  Layout2.prototype.rect = function rect(value2) {
    if (value2) {
      this.Ga = value2;
      return this;
    }
    return this.Ga;
  };
  Layout2.prototype.Td = function _initMap() {
    var options2 = this.options;
    var fieldMap = this.fb;
    if (options2.orientation === "horizontal") {
      fieldMap.sizeField = "width";
      fieldMap.groupsSizeField = "height";
      fieldMap.groupAxis = "x";
      fieldMap.groupsAxis = "y";
    } else {
      fieldMap.sizeField = "height";
      fieldMap.groupsSizeField = "width";
      fieldMap.groupAxis = "y";
      fieldMap.groupsAxis = "x";
    }
    if (options2.reverse) {
      this.forEach = forEachReverse;
      this.justifyAlign = alignStartReverse;
    } else {
      this.forEach = forEach;
      this.justifyAlign = alignStart;
    }
  };
  Layout2.prototype.reflow = function reflow() {
    var this$1 = this;
    if (!this.Ga || this.children.length === 0) {
      return;
    }
    this.Td();
    if (this.options.transform) {
      this.transform(null);
    }
    var options2 = this.options;
    var rect = this.Ga;
    var ref = this.Ud();
    var groups = ref.groups;
    var groupsSize = ref.groupsSize;
    var ref$1 = this.fb;
    var sizeField = ref$1.sizeField;
    var groupsSizeField = ref$1.groupsSizeField;
    var groupAxis = ref$1.groupAxis;
    var groupsAxis = ref$1.groupsAxis;
    var groupOrigin = new point_default();
    var elementOrigin = new point_default();
    var size = new size_default();
    var groupStart = alignStart(groupsSize, rect, options2.alignContent, groupsAxis, groupsSizeField);
    var elementStart, group2, groupBox;
    var arrangeElements = function(bbox, idx) {
      var element6 = group2.elements[idx];
      elementOrigin[groupAxis] = elementStart;
      elementOrigin[groupsAxis] = alignStart(bbox.size[groupsSizeField], groupBox, options2.alignItems, groupsAxis, groupsSizeField);
      translateToPoint(elementOrigin, bbox, element6);
      elementStart += bbox.size[sizeField] + options2.spacing;
    };
    for (var groupIdx = 0; groupIdx < groups.length; groupIdx++) {
      group2 = groups[groupIdx];
      groupOrigin[groupAxis] = elementStart = this$1.justifyAlign(group2.size, rect, options2.justifyContent, groupAxis, sizeField);
      groupOrigin[groupsAxis] = groupStart;
      size[sizeField] = group2.size;
      size[groupsSizeField] = group2.lineSize;
      groupBox = new rect_default(groupOrigin, size);
      this$1.forEach(group2.bboxes, arrangeElements);
      groupStart += group2.lineSize + options2.lineSpacing;
    }
    if (!options2.wrap && group2.size > rect.size[sizeField]) {
      var scale = rect.size[sizeField] / groupBox.size[sizeField];
      var scaledStart = groupBox.topLeft().scale(scale, scale);
      var scaledSize = groupBox.size[groupsSizeField] * scale;
      var newStart = alignStart(scaledSize, rect, options2.alignContent, groupsAxis, groupsSizeField);
      var transform2 = transform();
      if (groupAxis === "x") {
        transform2.translate(rect.origin.x - scaledStart.x, newStart - scaledStart.y);
      } else {
        transform2.translate(newStart - scaledStart.x, rect.origin.y - scaledStart.y);
      }
      transform2.scale(scale, scale);
      this.transform(transform2);
    }
  };
  Layout2.prototype.Ud = function _initGroups() {
    var this$1 = this;
    var ref = this;
    var options2 = ref.options;
    var children2 = ref.children;
    var lineSpacing = options2.lineSpacing;
    var wrap2 = options2.wrap;
    var spacing = options2.spacing;
    var sizeField = this.fb.sizeField;
    var group2 = this.lc();
    var groups = [];
    var addGroup = function() {
      groups.push(group2);
      groupsSize += group2.lineSize + lineSpacing;
    };
    var groupsSize = -lineSpacing;
    for (var idx = 0; idx < children2.length; idx++) {
      var element6 = children2[idx];
      var bbox = children2[idx].clippedBBox();
      if (element6.visible() && bbox) {
        if (wrap2 && group2.size + bbox.size[sizeField] + spacing > this$1.Ga.size[sizeField]) {
          if (group2.bboxes.length === 0) {
            this$1.mc(group2, bbox, element6);
            addGroup();
            group2 = this$1.lc();
          } else {
            addGroup();
            group2 = this$1.lc();
            this$1.mc(group2, bbox, element6);
          }
        } else {
          this$1.mc(group2, bbox, element6);
        }
      }
    }
    if (group2.bboxes.length) {
      addGroup();
    }
    return {
      groups,
      groupsSize
    };
  };
  Layout2.prototype.mc = function _addToGroup(group2, bbox, element6) {
    group2.size += bbox.size[this.fb.sizeField] + this.options.spacing;
    group2.lineSize = Math.max(bbox.size[this.fb.groupsSizeField], group2.lineSize);
    group2.bboxes.push(bbox);
    group2.elements.push(element6);
  };
  Layout2.prototype.lc = function _newGroup() {
    return {
      lineSize: 0,
      size: -this.options.spacing,
      bboxes: [],
      elements: []
    };
  };
  return Layout2;
}(group_default);
var layout_default = Layout;

// node_modules/@progress/kendo-drawing/dist/es/shapes/rect.js
var Rect2 = function(superclass) {
  function Rect3(geometry, options2) {
    if (geometry === void 0)
      geometry = new rect_default();
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.geometry(geometry);
    if (!defined(this.options.stroke)) {
      this.stroke("#000");
    }
  }
  if (superclass)
    Rect3.__proto__ = superclass;
  Rect3.prototype = Object.create(superclass && superclass.prototype);
  Rect3.prototype.constructor = Rect3;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Rect";
  };
  Rect3.prototype.Ta = function _bbox(matrix) {
    return this.eb.bbox(matrix);
  };
  Rect3.prototype.rawBBox = function rawBBox() {
    return this.eb.bbox();
  };
  Rect3.prototype.Fa = function _containsPoint(point2) {
    return this.eb.containsPoint(point2);
  };
  Rect3.prototype.ha = function _isOnPath(point2) {
    return this.geometry().ha(point2, this.options.stroke.width / 2);
  };
  Object.defineProperties(Rect3.prototype, prototypeAccessors);
  return Rect3;
}(paintable_default(measurable_default(with_geometry_default(element_default))));
var rect_default2 = Rect2;

// node_modules/@progress/kendo-drawing/dist/es/alignment/align-elements.js
function alignElements(elements, rect, alignment, axis, sizeField) {
  for (var idx = 0; idx < elements.length; idx++) {
    var bbox = elements[idx].clippedBBox();
    if (bbox) {
      var point2 = bbox.origin.clone();
      point2[axis] = alignStart(bbox.size[sizeField], rect, alignment || "start", axis, sizeField);
      translateToPoint(point2, bbox, elements[idx]);
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/align.js
function align2(elements, rect, alignment) {
  alignElements(elements, rect, alignment, "x", "width");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/v-align.js
function vAlign(elements, rect, alignment) {
  alignElements(elements, rect, alignment, "y", "height");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/stack-elements.js
function stackElements(elements, stackAxis, otherAxis, sizeField) {
  if (elements.length > 1) {
    var origin = new point_default();
    var previousBBox = elements[0].bbox;
    for (var idx = 1; idx < elements.length; idx++) {
      var element6 = elements[idx].element;
      var bbox = elements[idx].bbox;
      origin[stackAxis] = previousBBox.origin[stackAxis] + previousBBox.size[sizeField];
      origin[otherAxis] = bbox.origin[otherAxis];
      translateToPoint(origin, bbox, element6);
      bbox.origin[stackAxis] = origin[stackAxis];
      previousBBox = bbox;
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/create-stack-elements.js
function createStackElements(elements) {
  var stackElements2 = [];
  for (var idx = 0; idx < elements.length; idx++) {
    var element6 = elements[idx];
    var bbox = element6.clippedBBox();
    if (bbox) {
      stackElements2.push({
        element: element6,
        bbox
      });
    }
  }
  return stackElements2;
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/stack.js
function stack(elements) {
  stackElements(createStackElements(elements), "x", "y", "width");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/v-stack.js
function vStack(elements) {
  stackElements(createStackElements(elements), "y", "x", "height");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/wrap-elements.js
function getStacks(elements, rect, sizeField) {
  var maxSize = rect.size[sizeField];
  var stacks = [];
  var stack2 = [];
  var stackSize = 0;
  var element6, bbox;
  var addElementToStack = function() {
    stack2.push({
      element: element6,
      bbox
    });
  };
  for (var idx = 0; idx < elements.length; idx++) {
    element6 = elements[idx];
    bbox = element6.clippedBBox();
    if (bbox) {
      var size = bbox.size[sizeField];
      if (stackSize + size > maxSize) {
        if (stack2.length) {
          stacks.push(stack2);
          stack2 = [];
          addElementToStack();
          stackSize = size;
        } else {
          addElementToStack();
          stacks.push(stack2);
          stack2 = [];
          stackSize = 0;
        }
      } else {
        addElementToStack();
        stackSize += size;
      }
    }
  }
  if (stack2.length) {
    stacks.push(stack2);
  }
  return stacks;
}
function wrapElements(elements, rect, axis, otherAxis, sizeField) {
  var stacks = getStacks(elements, rect, sizeField);
  var origin = rect.origin.clone();
  var result = [];
  for (var idx = 0; idx < stacks.length; idx++) {
    var stack2 = stacks[idx];
    var startElement = stack2[0];
    origin[otherAxis] = startElement.bbox.origin[otherAxis];
    translateToPoint(origin, startElement.bbox, startElement.element);
    startElement.bbox.origin[axis] = origin[axis];
    stackElements(stack2, axis, otherAxis, sizeField);
    result.push([]);
    for (var elementIdx = 0; elementIdx < stack2.length; elementIdx++) {
      result[idx].push(stack2[elementIdx].element);
    }
  }
  return result;
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/wrap.js
function wrap(elements, rect) {
  return wrapElements(elements, rect, "x", "y", "width");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/v-wrap.js
function vWrap(elements, rect) {
  return wrapElements(elements, rect, "y", "x", "height");
}

// node_modules/@progress/kendo-drawing/dist/es/alignment/fit.js
function fit2(element6, rect) {
  var bbox = element6.clippedBBox();
  if (bbox) {
    var elementSize2 = bbox.size;
    var rectSize = rect.size;
    if (rectSize.width < elementSize2.width || rectSize.height < elementSize2.height) {
      var scale = Math.min(rectSize.width / elementSize2.width, rectSize.height / elementSize2.height);
      var transform2 = element6.transform() || transform();
      transform2.scale(scale, scale);
      element6.transform(transform2);
    }
  }
}

// node_modules/@progress/kendo-drawing/dist/es/gradients/stops-array.js
var StopsArray = function(ElementsArray2) {
  function StopsArray2() {
    ElementsArray2.apply(this, arguments);
  }
  if (ElementsArray2)
    StopsArray2.__proto__ = ElementsArray2;
  StopsArray2.prototype = Object.create(ElementsArray2 && ElementsArray2.prototype);
  StopsArray2.prototype.constructor = StopsArray2;
  StopsArray2.prototype.Ua = function _change() {
    this.optionsChange({
      field: "stops"
    });
  };
  return StopsArray2;
}(elements_array_default);
var stops_array_default = StopsArray;

// node_modules/@progress/kendo-drawing/dist/es/mixins/with-options.js
function optionsAccessor(name2) {
  return function(value2) {
    if (defined(value2)) {
      this.options.set(name2, value2);
      return this;
    }
    return this.options.get(name2);
  };
}
function defineOptionsAccessors(fn, names) {
  for (var i = 0; i < names.length; i++) {
    fn[names[i]] = optionsAccessor(names[i]);
  }
}
var withOptions = function(TBase, names) {
  var result = function(TBase2) {
    function result2() {
      TBase2.apply(this, arguments);
    }
    if (TBase2)
      result2.__proto__ = TBase2;
    result2.prototype = Object.create(TBase2 && TBase2.prototype);
    result2.prototype.constructor = result2;
    return result2;
  }(TBase);
  defineOptionsAccessors(result.prototype, names);
  return result;
};
var with_options_default = withOptions;

// node_modules/@progress/kendo-drawing/dist/es/gradients/gradient-stop.js
var options = ["offset", "color", "opacity"];
var GradientStop = function(superclass) {
  function GradientStop2(offset4, color, opacity) {
    superclass.call(this);
    this.options = new options_store_default({
      offset: offset4,
      color,
      opacity: defined(opacity) ? opacity : 1
    });
    this.options.addObserver(this);
  }
  if (superclass)
    GradientStop2.__proto__ = superclass;
  GradientStop2.prototype = Object.create(superclass && superclass.prototype);
  GradientStop2.prototype.constructor = GradientStop2;
  GradientStop2.create = function create(arg) {
    if (defined(arg)) {
      var stop;
      if (arg instanceof GradientStop2) {
        stop = arg;
      } else if (arg.length > 1) {
        stop = new GradientStop2(arg[0], arg[1], arg[2]);
      } else {
        stop = new GradientStop2(arg.offset, arg.color, arg.opacity);
      }
      return stop;
    }
  };
  return GradientStop2;
}(with_options_default(has_observers_default, options));
var gradient_stop_default = GradientStop;

// node_modules/@progress/kendo-drawing/dist/es/gradients/gradient.js
var Gradient = function(HasObservers2) {
  function Gradient2(options2) {
    if (options2 === void 0)
      options2 = {};
    HasObservers2.call(this);
    this.stops = new stops_array_default(this.Vd(options2.stops));
    this.stops.addObserver(this);
    this.$c = options2.userSpace;
    this.id = definitionId();
  }
  if (HasObservers2)
    Gradient2.__proto__ = HasObservers2;
  Gradient2.prototype = Object.create(HasObservers2 && HasObservers2.prototype);
  Gradient2.prototype.constructor = Gradient2;
  var prototypeAccessors = { nodeType: { configurable: true } };
  prototypeAccessors.nodeType.get = function() {
    return "Gradient";
  };
  Gradient2.prototype.userSpace = function userSpace(value2) {
    if (defined(value2)) {
      this.$c = value2;
      this.optionsChange();
      return this;
    }
    return this.$c;
  };
  Gradient2.prototype.Vd = function _createStops(stops) {
    if (stops === void 0)
      stops = [];
    var result = [];
    for (var idx = 0; idx < stops.length; idx++) {
      result.push(gradient_stop_default.create(stops[idx]));
    }
    return result;
  };
  Gradient2.prototype.addStop = function addStop(offset4, color, opacity) {
    this.stops.push(new gradient_stop_default(offset4, color, opacity));
  };
  Gradient2.prototype.removeStop = function removeStop(stop) {
    var index = this.stops.indexOf(stop);
    if (index >= 0) {
      this.stops.splice(index, 1);
    }
  };
  Gradient2.prototype.optionsChange = function optionsChange(e) {
    this.trigger("optionsChange", {
      field: "gradient" + (e ? "." + e.field : ""),
      value: this
    });
  };
  Gradient2.prototype.geometryChange = function geometryChange() {
    this.optionsChange();
  };
  Object.defineProperties(Gradient2.prototype, prototypeAccessors);
  return Gradient2;
}(has_observers_default);
var gradient_default = Gradient;

// node_modules/@progress/kendo-drawing/dist/es/gradients/linear-gradient.js
var points2 = ["start", "end"];
var LinearGradient = function(superclass) {
  function LinearGradient2(options2) {
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.start(options2.start || new point_default());
    this.end(options2.end || new point_default(1, 0));
  }
  if (superclass)
    LinearGradient2.__proto__ = superclass;
  LinearGradient2.prototype = Object.create(superclass && superclass.prototype);
  LinearGradient2.prototype.constructor = LinearGradient2;
  return LinearGradient2;
}(with_points_default(gradient_default, points2));
var linear_gradient_default = LinearGradient;

// node_modules/@progress/kendo-drawing/dist/es/gradients/radial-gradient.js
var RadialGradient = function(superclass) {
  function RadialGradient2(options2) {
    if (options2 === void 0)
      options2 = {};
    superclass.call(this, options2);
    this.center(options2.center || new point_default());
    this.ad = defined(options2.radius) ? options2.radius : 1;
    this.bd = options2.fallbackFill;
  }
  if (superclass)
    RadialGradient2.__proto__ = superclass;
  RadialGradient2.prototype = Object.create(superclass && superclass.prototype);
  RadialGradient2.prototype.constructor = RadialGradient2;
  RadialGradient2.prototype.radius = function radius(value2) {
    if (defined(value2)) {
      this.ad = value2;
      this.geometryChange();
      return this;
    }
    return this.ad;
  };
  RadialGradient2.prototype.fallbackFill = function fallbackFill(value2) {
    if (defined(value2)) {
      this.bd = value2;
      this.optionsChange();
      return this;
    }
    return this.bd;
  };
  return RadialGradient2;
}(with_points_default(gradient_default, ["center"]));
var radial_gradient_default = RadialGradient;

// node_modules/@progress/kendo-drawing/dist/es/animations/easing-functions.js
var easing_functions_exports = {};
__export(easing_functions_exports, {
  easeOutElastic: () => easeOutElastic,
  linear: () => linear,
  swing: () => swing
});
function swing(position4) {
  return 0.5 - Math.cos(position4 * Math.PI) / 2;
}
function linear(position4) {
  return position4;
}
function easeOutElastic(position4, time2, start2, diff) {
  var s = 1.70158, p = 0, a = diff;
  if (position4 === 0) {
    return start2;
  }
  if (position4 === 1) {
    return start2 + diff;
  }
  if (!p) {
    p = 0.5;
  }
  if (a < Math.abs(diff)) {
    a = diff;
    s = p / 4;
  } else {
    s = p / (2 * Math.PI) * Math.asin(diff / a);
  }
  return a * Math.pow(2, -10 * position4) * Math.sin((Number(position4) - s) * (1.1 * Math.PI) / p) + diff + start2;
}

// node_modules/@progress/kendo-drawing/dist/es/animations/animation-factory.js
var instance;
var AnimationFactory = function(Class3) {
  function AnimationFactory2() {
    Class3.call(this);
    this.zb = [];
  }
  if (Class3)
    AnimationFactory2.__proto__ = Class3;
  AnimationFactory2.prototype = Object.create(Class3 && Class3.prototype);
  AnimationFactory2.prototype.constructor = AnimationFactory2;
  var staticAccessors = { current: { configurable: true } };
  staticAccessors.current.get = function() {
    if (!instance) {
      instance = new AnimationFactory2();
    }
    return instance;
  };
  AnimationFactory2.prototype.register = function register(name2, type) {
    this.zb.push({
      name: name2,
      type
    });
  };
  AnimationFactory2.prototype.create = function create(element6, options2) {
    var items = this.zb;
    var match;
    if (options2 && options2.type) {
      var type = options2.type.toLowerCase();
      for (var i = 0; i < items.length; i++) {
        if (items[i].name.toLowerCase() === type) {
          match = items[i];
          break;
        }
      }
    }
    if (match) {
      return new match.type(element6, options2);
    }
  };
  Object.defineProperties(AnimationFactory2, staticAccessors);
  return AnimationFactory2;
}(class_default);
var animation_factory_default = AnimationFactory;

// node_modules/@progress/kendo-drawing/dist/es/animations/animation.js
var Animation2 = function(Class3) {
  function Animation3(element6, options2) {
    Class3.call(this);
    this.options = Object.assign({}, this.options, options2);
    this.element = element6;
  }
  if (Class3)
    Animation3.__proto__ = Class3;
  Animation3.prototype = Object.create(Class3 && Class3.prototype);
  Animation3.prototype.constructor = Animation3;
  var prototypeAccessors = { options: { configurable: true } };
  Animation3.create = function create(type, element6, options2) {
    return animation_factory_default.current.create(type, element6, options2);
  };
  prototypeAccessors.options.get = function() {
    return this.Wd || {
      duration: 500,
      easing: "swing"
    };
  };
  prototypeAccessors.options.set = function(value2) {
    this.Wd = value2;
  };
  Animation3.prototype.setup = function setup() {
  };
  Animation3.prototype.step = function step() {
  };
  Animation3.prototype.play = function play() {
    var this$1 = this;
    var options2 = this.options;
    var duration2 = options2.duration;
    var delay = options2.delay;
    if (delay === void 0)
      delay = 0;
    var easing = easing_functions_exports[options2.easing];
    var start2 = now_default() + delay;
    var finish = start2 + duration2;
    if (duration2 === 0) {
      this.step(1);
      this.abort();
    } else {
      setTimeout(function() {
        var loop = function() {
          if (this$1.Xd) {
            return;
          }
          var wallTime = now_default();
          var time2 = limitValue(wallTime - start2, 0, duration2);
          var position4 = time2 / duration2;
          var easingPosition = easing(position4, time2, 0, 1, duration2);
          this$1.step(easingPosition);
          if (wallTime < finish) {
            animation_frame_default(loop);
          } else {
            this$1.abort();
          }
        };
        loop();
      }, delay);
    }
  };
  Animation3.prototype.abort = function abort() {
    this.Xd = true;
  };
  Animation3.prototype.destroy = function destroy2() {
    this.abort();
  };
  Object.defineProperties(Animation3.prototype, prototypeAccessors);
  return Animation3;
}(class_default);
var animation_default = Animation2;

// node_modules/@progress/kendo-drawing/dist/es/parsing/path-parser.js
var instance2;
var PathParser = function(Class3) {
  function PathParser2() {
    Class3.apply(this, arguments);
  }
  if (Class3)
    PathParser2.__proto__ = Class3;
  PathParser2.prototype = Object.create(Class3 && Class3.prototype);
  PathParser2.prototype.constructor = PathParser2;
  var staticAccessors = { current: { configurable: true } };
  staticAccessors.current.get = function() {
    if (!instance2) {
      instance2 = new PathParser2();
    }
    return instance2;
  };
  PathParser2.prototype.parse = function parse3(str, options2) {
    var multiPath = new MultiPath(options2);
    return parse_path_default(multiPath, str);
  };
  Object.defineProperties(PathParser2, staticAccessors);
  return PathParser2;
}(class_default);
var path_parser_default = PathParser;

// node_modules/@progress/kendo-drawing/dist/es/core/base-node.js
var BaseNode = function(Class3) {
  function BaseNode2(srcElement) {
    Class3.call(this);
    this.childNodes = [];
    this.parent = null;
    if (srcElement) {
      this.srcElement = srcElement;
      this.observe();
    }
  }
  if (Class3)
    BaseNode2.__proto__ = Class3;
  BaseNode2.prototype = Object.create(Class3 && Class3.prototype);
  BaseNode2.prototype.constructor = BaseNode2;
  BaseNode2.prototype.destroy = function destroy2() {
    var this$1 = this;
    if (this.srcElement) {
      this.srcElement.removeObserver(this);
    }
    var children2 = this.childNodes;
    for (var i = 0; i < children2.length; i++) {
      this$1.childNodes[i].destroy();
    }
    this.parent = null;
  };
  BaseNode2.prototype.load = function load3() {
  };
  BaseNode2.prototype.observe = function observe() {
    if (this.srcElement) {
      this.srcElement.addObserver(this);
    }
  };
  BaseNode2.prototype.append = function append2(node14) {
    this.childNodes.push(node14);
    node14.parent = this;
  };
  BaseNode2.prototype.insertAt = function insertAt(node14, pos) {
    this.childNodes.splice(pos, 0, node14);
    node14.parent = this;
  };
  BaseNode2.prototype.remove = function remove(index, count2) {
    var this$1 = this;
    var end2 = index + count2;
    for (var i = index; i < end2; i++) {
      this$1.childNodes[i].removeSelf();
    }
    this.childNodes.splice(index, count2);
  };
  BaseNode2.prototype.removeSelf = function removeSelf() {
    this.clear();
    this.destroy();
  };
  BaseNode2.prototype.clear = function clear3() {
    this.remove(0, this.childNodes.length);
  };
  BaseNode2.prototype.invalidate = function invalidate() {
    if (this.parent) {
      this.parent.invalidate();
    }
  };
  BaseNode2.prototype.geometryChange = function geometryChange() {
    this.invalidate();
  };
  BaseNode2.prototype.optionsChange = function optionsChange() {
    this.invalidate();
  };
  BaseNode2.prototype.childrenChange = function childrenChange(e) {
    if (e.action === "add") {
      this.load(e.items, e.index);
    } else if (e.action === "remove") {
      this.remove(e.index, e.items.length);
    }
    this.invalidate();
  };
  return BaseNode2;
}(class_default);
var base_node_default = BaseNode;

// node_modules/@progress/kendo-drawing/dist/es/core/surface.js
var events = [
  "click",
  "mouseenter",
  "mouseleave",
  "mousemove",
  "resize"
];
var Surface = function(Observable2) {
  function Surface5(element6, options2) {
    Observable2.call(this);
    this.options = Object.assign({}, options2);
    this.element = element6;
    this.element.Wa = this.exportVisual.bind(this);
    this.cd = this.Ab("click");
    this.Bb = this.Ab("mouseenter");
    this.Cb = this.Ab("mouseleave");
    this.dd = this.Ab("mousemove");
    this.gb = new group_default();
    elementSize(element6, this.options);
    this.bind(events, this.options);
    this.nc();
  }
  if (Observable2)
    Surface5.__proto__ = Observable2;
  Surface5.prototype = Object.create(Observable2 && Observable2.prototype);
  Surface5.prototype.constructor = Surface5;
  Surface5.prototype.draw = function draw(element6) {
    this.gb.children.push(element6);
  };
  Surface5.prototype.clear = function clear3() {
    this.gb.children = [];
  };
  Surface5.prototype.destroy = function destroy2() {
    this.gb = null;
    this.element.Wa = null;
    this.unbind();
  };
  Surface5.prototype.eventTarget = function eventTarget(e) {
    var this$1 = this;
    var domNode = eventElement(e);
    var node14;
    while (!node14 && domNode) {
      node14 = domNode.oc;
      if (domNode === this$1.element) {
        break;
      }
      domNode = domNode.parentElement;
    }
    if (node14) {
      return node14.srcElement;
    }
  };
  Surface5.prototype.exportVisual = function exportVisual() {
    return this.gb;
  };
  Surface5.prototype.getSize = function getSize() {
    return elementSize(this.element);
  };
  Surface5.prototype.currentSize = function currentSize(size) {
    if (size) {
      this.Ca = size;
    } else {
      return this.Ca;
    }
  };
  Surface5.prototype.setSize = function setSize(size) {
    elementSize(this.element, size);
    this.currentSize(size);
    this.Db();
  };
  Surface5.prototype.resize = function resize(force) {
    var size = this.getSize();
    var currentSize = this.currentSize();
    if (force || (size.width > 0 || size.height > 0) && (!currentSize || size.width !== currentSize.width || size.height !== currentSize.height)) {
      this.currentSize(size);
      this.Db(size, force);
      this.trigger("resize", size);
    }
  };
  Surface5.prototype.size = function size(value2) {
    if (!value2) {
      return this.getSize();
    }
    this.setSize(value2);
  };
  Surface5.prototype.suspendTracking = function suspendTracking() {
    this.pc = true;
  };
  Surface5.prototype.resumeTracking = function resumeTracking() {
    this.pc = false;
  };
  Surface5.prototype.nc = function _enableTracking() {
  };
  Surface5.prototype.Db = function _resize() {
  };
  Surface5.prototype.Ab = function _handler(eventName) {
    var this$1 = this;
    return function(e) {
      var node14 = this$1.eventTarget(e);
      if (node14 && !this$1.pc) {
        this$1.trigger(eventName, {
          element: node14,
          originalEvent: e,
          type: eventName
        });
      }
    };
  };
  Surface5.prototype.Yd = function _elementOffset() {
    var element6 = this.element;
    var padding = elementPadding(element6);
    var ref = elementOffset(element6);
    var left2 = ref.left;
    var top = ref.top;
    return {
      left: left2 + padding.left,
      top: top + padding.top
    };
  };
  Surface5.prototype.Zd = function _surfacePoint(e) {
    var offset4 = this.Yd();
    var coord = eventCoordinates(e);
    var x = coord.x - offset4.left;
    var y = coord.y - offset4.top;
    var inverseTransform = elementScale(this.element).invert();
    var point2 = new point_default(
      x,
      y
    ).transform(inverseTransform);
    return point2;
  };
  return Surface5;
}(observable_default);
var surface_default = Surface;

// node_modules/@progress/kendo-drawing/dist/es/svg/utils/render-attribute.js
function renderAttr(name2, value2) {
  return defined(value2) && value2 !== null ? " " + name2 + '="' + value2 + '" ' : "";
}

// node_modules/@progress/kendo-drawing/dist/es/svg/utils/render-all-attributes.js
function renderAllAttr(attrs) {
  var output = "";
  for (var i = 0; i < attrs.length; i++) {
    output += renderAttr(attrs[i][0], attrs[i][1]);
  }
  return output;
}

// node_modules/@progress/kendo-drawing/dist/es/svg/utils/render-style.js
function renderStyle(attrs) {
  var output = "";
  for (var i = 0; i < attrs.length; i++) {
    var value2 = attrs[i][1];
    if (defined(value2)) {
      output += attrs[i][0] + ":" + value2 + ";";
    }
  }
  if (output !== "") {
    return output;
  }
}

// node_modules/@progress/kendo-drawing/dist/es/svg/node-map.js
var NODE_MAP = {};
var node_map_default = NODE_MAP;

// node_modules/@progress/kendo-drawing/dist/es/svg/constants.js
var SVG_NS = "http://www.w3.org/2000/svg";
var NONE = "none";
var POINT_DIGITS = 3;

// node_modules/@progress/kendo-drawing/dist/es/svg/utils/render-svg.js
var applyStyle = function(styleString, element6) {
  return styleString.split(";").filter(function(s) {
    return s !== "";
  }).forEach(function(s) {
    var parts = s.split(":");
    element6.style[parts[0].trim()] = parts[1].trim();
  });
};
var styleAttr = "data-style";
var replaceStyleAttr = function(html) {
  return html.replace(/\sstyle=/g, " " + styleAttr + "=");
};
var restoreStyleAttr = function(container) {
  Array.from(container.querySelectorAll("[" + styleAttr + "]")).forEach(function(element6) {
    var styleString = element6.getAttribute(styleAttr);
    element6.removeAttribute(styleAttr);
    applyStyle(styleString, element6);
  });
};
var renderSVG = function(container, svg) {
  container.innerHTML = replaceStyleAttr(svg);
  restoreStyleAttr(container);
};
if (typeof document !== "undefined") {
  testFragment = "<svg xmlns='" + SVG_NS + "'></svg>";
  testContainer = document.createElement("div");
  hasParser = typeof DOMParser !== "undefined";
  testContainer.innerHTML = testFragment;
  if (hasParser && testContainer.firstChild.namespaceURI !== SVG_NS) {
    renderSVG = function(container, svg) {
      var parser = new DOMParser();
      var chartDoc = parser.parseFromString(replaceStyleAttr(svg), "text/xml");
      restoreStyleAttr(chartDoc);
      var importedDoc = document.adoptNode(chartDoc.documentElement);
      container.innerHTML = "";
      container.appendChild(importedDoc);
    };
  }
}
var render_svg_default = renderSVG;
var testFragment;
var testContainer;
var hasParser;

// node_modules/@progress/kendo-drawing/dist/es/svg/node.js
var TRANSFORM = "transform";
var DefinitionMap = {
  clip: "clip-path",
  fill: "fill"
};
function isDefinition(type, value2) {
  return type === "clip" || type === "fill" && (!value2 || value2.nodeType === "Gradient");
}
function baseUrl() {
  var base = document.getElementsByTagName("base")[0];
  var href = document.location.href;
  var url = "";
  if (base && !(support_default.browser || {}).msie) {
    var hashIndex = href.indexOf("#");
    if (hashIndex !== -1) {
      href = href.substring(0, hashIndex);
    }
    url = href;
  }
  return url;
}
var Node2 = function(BaseNode2) {
  function Node4(srcElement, options2) {
    BaseNode2.call(this, srcElement);
    this.definitions = {};
    this.options = options2;
  }
  if (BaseNode2)
    Node4.__proto__ = BaseNode2;
  Node4.prototype = Object.create(BaseNode2 && BaseNode2.prototype);
  Node4.prototype.constructor = Node4;
  Node4.prototype.destroy = function destroy2() {
    if (this.element) {
      this.element.oc = null;
      this.element = null;
    }
    this.clearDefinitions();
    BaseNode2.prototype.destroy.call(this);
  };
  Node4.prototype.load = function load3(elements, pos) {
    var this$1 = this;
    for (var i = 0; i < elements.length; i++) {
      var srcElement = elements[i];
      var children2 = srcElement.children;
      var childNode = new node_map_default[srcElement.nodeType](srcElement, this$1.options);
      if (defined(pos)) {
        this$1.insertAt(childNode, pos);
      } else {
        this$1.append(childNode);
      }
      childNode.createDefinitions();
      if (children2 && children2.length > 0) {
        childNode.load(children2);
      }
      var element6 = this$1.element;
      if (element6) {
        childNode.attachTo(element6, pos);
      }
    }
  };
  Node4.prototype.root = function root() {
    var root2 = this;
    while (root2.parent) {
      root2 = root2.parent;
    }
    return root2;
  };
  Node4.prototype.attachTo = function attachTo(domElement, pos) {
    var container = document.createElement("div");
    render_svg_default(
      container,
      "<svg xmlns='" + SVG_NS + "' version='1.1'>" + this.render() + "</svg>"
    );
    var element6 = container.firstChild.firstChild;
    if (element6) {
      if (defined(pos)) {
        domElement.insertBefore(element6, domElement.childNodes[pos] || null);
      } else {
        domElement.appendChild(element6);
      }
      this.setElement(element6);
    }
  };
  Node4.prototype.setElement = function setElement(element6) {
    if (this.element) {
      this.element.oc = null;
    }
    this.element = element6;
    this.element.oc = this;
    var nodes = this.childNodes;
    for (var i = 0; i < nodes.length; i++) {
      var childElement = element6.childNodes[i];
      nodes[i].setElement(childElement);
    }
  };
  Node4.prototype.clear = function clear3() {
    this.clearDefinitions();
    if (this.element) {
      this.element.innerHTML = "";
    }
    var children2 = this.childNodes;
    for (var i = 0; i < children2.length; i++) {
      children2[i].destroy();
    }
    this.childNodes = [];
  };
  Node4.prototype.removeSelf = function removeSelf() {
    if (this.element) {
      var parentNode = this.element.parentNode;
      if (parentNode) {
        parentNode.removeChild(this.element);
      }
      this.element = null;
    }
    BaseNode2.prototype.removeSelf.call(this);
  };
  Node4.prototype.template = function template2() {
    return this.renderChildren();
  };
  Node4.prototype.render = function render5() {
    return this.template();
  };
  Node4.prototype.renderChildren = function renderChildren() {
    var nodes = this.childNodes;
    var output = "";
    for (var i = 0; i < nodes.length; i++) {
      output += nodes[i].render();
    }
    return output;
  };
  Node4.prototype.optionsChange = function optionsChange(e) {
    var field = e.field;
    var value2 = e.value;
    if (field === "visible") {
      this.css("display", value2 ? "" : NONE);
    } else if (DefinitionMap[field] && isDefinition(field, value2)) {
      this.updateDefinition(field, value2);
    } else if (field === "opacity") {
      this.attr("opacity", value2);
    } else if (field === "cursor") {
      this.css("cursor", value2);
    } else if (field === "id") {
      if (value2) {
        this.attr("id", value2);
      } else {
        this.removeAttr("id");
      }
    }
    BaseNode2.prototype.optionsChange.call(this, e);
  };
  Node4.prototype.attr = function attr(name2, value2) {
    if (this.element) {
      this.element.setAttribute(name2, value2);
    }
  };
  Node4.prototype.allAttr = function allAttr(attrs) {
    var this$1 = this;
    for (var i = 0; i < attrs.length; i++) {
      this$1.attr(attrs[i][0], attrs[i][1]);
    }
  };
  Node4.prototype.css = function css(name2, value2) {
    if (this.element) {
      this.element.style[name2] = value2;
    }
  };
  Node4.prototype.allCss = function allCss(styles6) {
    var this$1 = this;
    for (var i = 0; i < styles6.length; i++) {
      this$1.css(styles6[i][0], styles6[i][1]);
    }
  };
  Node4.prototype.removeAttr = function removeAttr(name2) {
    if (this.element) {
      this.element.removeAttribute(name2);
    }
  };
  Node4.prototype.mapTransform = function mapTransform(transform2) {
    var attrs = [];
    if (transform2) {
      attrs.push([
        TRANSFORM,
        "matrix(" + transform2.matrix().toString(6) + ")"
      ]);
    }
    return attrs;
  };
  Node4.prototype.renderTransform = function renderTransform() {
    return renderAllAttr(
      this.mapTransform(this.srcElement.transform())
    );
  };
  Node4.prototype.transformChange = function transformChange(value2) {
    if (value2) {
      this.allAttr(this.mapTransform(value2));
    } else {
      this.removeAttr(TRANSFORM);
    }
  };
  Node4.prototype.mapStyle = function mapStyle() {
    var options2 = this.srcElement.options;
    var style = [["cursor", options2.cursor]];
    if (options2.visible === false) {
      style.push(["display", NONE]);
    }
    return style;
  };
  Node4.prototype.renderStyle = function renderStyle$1() {
    return renderAttr("style", renderStyle(this.mapStyle(true)));
  };
  Node4.prototype.renderOpacity = function renderOpacity() {
    return renderAttr("opacity", this.srcElement.options.opacity);
  };
  Node4.prototype.renderId = function renderId() {
    return renderAttr("id", this.srcElement.options.id);
  };
  Node4.prototype.createDefinitions = function createDefinitions() {
    var srcElement = this.srcElement;
    var definitions = this.definitions;
    if (srcElement) {
      var options2 = srcElement.options;
      var hasDefinitions;
      for (var field in DefinitionMap) {
        var definition = options2.get(field);
        if (definition && isDefinition(field, definition)) {
          definitions[field] = definition;
          hasDefinitions = true;
        }
      }
      if (hasDefinitions) {
        this.definitionChange({
          action: "add",
          definitions
        });
      }
    }
  };
  Node4.prototype.definitionChange = function definitionChange(e) {
    if (this.parent) {
      this.parent.definitionChange(e);
    }
  };
  Node4.prototype.updateDefinition = function updateDefinition(type, value2) {
    var definitions = this.definitions;
    var current = definitions[type];
    var attr = DefinitionMap[type];
    var definition = {};
    if (current) {
      definition[type] = current;
      this.definitionChange({
        action: "remove",
        definitions: definition
      });
      delete definitions[type];
    }
    if (!value2) {
      if (current) {
        this.removeAttr(attr);
      }
    } else {
      definition[type] = value2;
      this.definitionChange({
        action: "add",
        definitions: definition
      });
      definitions[type] = value2;
      this.attr(attr, this.refUrl(value2.id));
    }
  };
  Node4.prototype.clearDefinitions = function clearDefinitions() {
    var definitions = this.definitions;
    this.definitionChange({
      action: "remove",
      definitions
    });
    this.definitions = {};
  };
  Node4.prototype.renderDefinitions = function renderDefinitions() {
    return renderAllAttr(this.mapDefinitions());
  };
  Node4.prototype.mapDefinitions = function mapDefinitions() {
    var this$1 = this;
    var definitions = this.definitions;
    var attrs = [];
    for (var field in definitions) {
      attrs.push([DefinitionMap[field], this$1.refUrl(definitions[field].id)]);
    }
    return attrs;
  };
  Node4.prototype.refUrl = function refUrl(id) {
    var skipBaseHref = (this.options || {}).skipBaseHref;
    var baseHref = this.baseUrl().replace(/'/g, "\\'");
    var base = skipBaseHref ? "" : baseHref;
    return "url(" + base + "#" + id + ")";
  };
  Node4.prototype.baseUrl = function baseUrl$1() {
    return baseUrl();
  };
  return Node4;
}(base_node_default);
var node_default = Node2;

// node_modules/@progress/kendo-drawing/dist/es/svg/gradient-stop-node.js
var GradientStopNode = function(Node4) {
  function GradientStopNode2() {
    Node4.apply(this, arguments);
  }
  if (Node4)
    GradientStopNode2.__proto__ = Node4;
  GradientStopNode2.prototype = Object.create(Node4 && Node4.prototype);
  GradientStopNode2.prototype.constructor = GradientStopNode2;
  GradientStopNode2.prototype.template = function template2() {
    return "<stop " + this.renderOffset() + " " + this.renderStyle() + " />";
  };
  GradientStopNode2.prototype.renderOffset = function renderOffset() {
    return renderAttr("offset", this.srcElement.offset());
  };
  GradientStopNode2.prototype.mapStyle = function mapStyle() {
    var srcElement = this.srcElement;
    return [
      ["stop-color", srcElement.color()],
      ["stop-opacity", srcElement.opacity()]
    ];
  };
  GradientStopNode2.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "offset") {
      this.attr(e.field, e.value);
    } else if (e.field === "color" || e.field === "opacity") {
      this.css("stop-" + e.field, e.value);
    }
  };
  return GradientStopNode2;
}(node_default);
var gradient_stop_node_default = GradientStopNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/gradient-node.js
var GradientNode = function(Node4) {
  function GradientNode2(srcElement) {
    Node4.call(this, srcElement);
    this.id = srcElement.id;
    this.loadStops();
  }
  if (Node4)
    GradientNode2.__proto__ = Node4;
  GradientNode2.prototype = Object.create(Node4 && Node4.prototype);
  GradientNode2.prototype.constructor = GradientNode2;
  GradientNode2.prototype.loadStops = function loadStops() {
    var this$1 = this;
    var stops = this.srcElement.stops;
    var element6 = this.element;
    for (var idx = 0; idx < stops.length; idx++) {
      var stopNode = new gradient_stop_node_default(stops[idx]);
      this$1.append(stopNode);
      if (element6) {
        stopNode.attachTo(element6);
      }
    }
  };
  GradientNode2.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "gradient.stops") {
      base_node_default.prototype.clear.call(this);
      this.loadStops();
    } else if (e.field === "gradient") {
      this.allAttr(this.mapCoordinates());
    }
  };
  GradientNode2.prototype.renderCoordinates = function renderCoordinates() {
    return renderAllAttr(this.mapCoordinates());
  };
  GradientNode2.prototype.mapSpace = function mapSpace() {
    return ["gradientUnits", this.srcElement.userSpace() ? "userSpaceOnUse" : "objectBoundingBox"];
  };
  return GradientNode2;
}(node_default);
var gradient_node_default = GradientNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/linear-gradient-node.js
var LinearGradientNode = function(GradientNode2) {
  function LinearGradientNode2() {
    GradientNode2.apply(this, arguments);
  }
  if (GradientNode2)
    LinearGradientNode2.__proto__ = GradientNode2;
  LinearGradientNode2.prototype = Object.create(GradientNode2 && GradientNode2.prototype);
  LinearGradientNode2.prototype.constructor = LinearGradientNode2;
  LinearGradientNode2.prototype.template = function template2() {
    return "<linearGradient id='" + this.id + "' " + this.renderCoordinates() + ">" + this.renderChildren() + "</linearGradient>";
  };
  LinearGradientNode2.prototype.mapCoordinates = function mapCoordinates() {
    var srcElement = this.srcElement;
    var start2 = srcElement.start();
    var end2 = srcElement.end();
    var attrs = [
      ["x1", start2.x],
      ["y1", start2.y],
      ["x2", end2.x],
      ["y2", end2.y],
      this.mapSpace()
    ];
    return attrs;
  };
  return LinearGradientNode2;
}(gradient_node_default);
var linear_gradient_node_default = LinearGradientNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/radial-gradient-node.js
var RadialGradientNode = function(GradientNode2) {
  function RadialGradientNode2() {
    GradientNode2.apply(this, arguments);
  }
  if (GradientNode2)
    RadialGradientNode2.__proto__ = GradientNode2;
  RadialGradientNode2.prototype = Object.create(GradientNode2 && GradientNode2.prototype);
  RadialGradientNode2.prototype.constructor = RadialGradientNode2;
  RadialGradientNode2.prototype.template = function template2() {
    return "<radialGradient id='" + this.id + "' " + this.renderCoordinates() + ">" + this.renderChildren() + "</radialGradient>";
  };
  RadialGradientNode2.prototype.mapCoordinates = function mapCoordinates() {
    var srcElement = this.srcElement;
    var center = srcElement.center();
    var radius = srcElement.radius();
    var attrs = [
      ["cx", center.x],
      ["cy", center.y],
      ["r", radius],
      this.mapSpace()
    ];
    return attrs;
  };
  return RadialGradientNode2;
}(gradient_node_default);
var radial_gradient_node_default = RadialGradientNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/clip-node.js
var ClipNode = function(Node4) {
  function ClipNode2(srcElement) {
    Node4.call(this);
    this.srcElement = srcElement;
    this.id = srcElement.id;
    this.load([srcElement]);
  }
  if (Node4)
    ClipNode2.__proto__ = Node4;
  ClipNode2.prototype = Object.create(Node4 && Node4.prototype);
  ClipNode2.prototype.constructor = ClipNode2;
  ClipNode2.prototype.template = function template2() {
    return "<clipPath id='" + this.id + "'>" + this.renderChildren() + "</clipPath>";
  };
  return ClipNode2;
}(node_default);
var clip_node_default = ClipNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/definition-node.js
var DefinitionNode = function(Node4) {
  function DefinitionNode2() {
    Node4.call(this);
    this.definitionMap = {};
  }
  if (Node4)
    DefinitionNode2.__proto__ = Node4;
  DefinitionNode2.prototype = Object.create(Node4 && Node4.prototype);
  DefinitionNode2.prototype.constructor = DefinitionNode2;
  DefinitionNode2.prototype.attachTo = function attachTo(domElement) {
    this.element = domElement;
  };
  DefinitionNode2.prototype.template = function template2() {
    return "<defs>" + this.renderChildren() + "</defs>";
  };
  DefinitionNode2.prototype.definitionChange = function definitionChange(e) {
    var definitions = e.definitions;
    var action = e.action;
    if (action === "add") {
      this.addDefinitions(definitions);
    } else if (action === "remove") {
      this.removeDefinitions(definitions);
    }
  };
  DefinitionNode2.prototype.createDefinition = function createDefinition(type, item) {
    var nodeType;
    if (type === "clip") {
      nodeType = clip_node_default;
    } else if (type === "fill") {
      if (item instanceof linear_gradient_default) {
        nodeType = linear_gradient_node_default;
      } else if (item instanceof radial_gradient_default) {
        nodeType = radial_gradient_node_default;
      }
    }
    return new nodeType(item);
  };
  DefinitionNode2.prototype.addDefinitions = function addDefinitions(definitions) {
    var this$1 = this;
    for (var field in definitions) {
      this$1.addDefinition(field, definitions[field]);
    }
  };
  DefinitionNode2.prototype.addDefinition = function addDefinition(type, srcElement) {
    var ref = this;
    var element6 = ref.element;
    var definitionMap = ref.definitionMap;
    var id = srcElement.id;
    var mapItem2 = definitionMap[id];
    if (!mapItem2) {
      var node14 = this.createDefinition(type, srcElement);
      definitionMap[id] = {
        element: node14,
        count: 1
      };
      this.append(node14);
      if (element6) {
        node14.attachTo(this.element);
      }
    } else {
      mapItem2.count++;
    }
  };
  DefinitionNode2.prototype.removeDefinitions = function removeDefinitions(definitions) {
    var this$1 = this;
    for (var field in definitions) {
      this$1.removeDefinition(definitions[field]);
    }
  };
  DefinitionNode2.prototype.removeDefinition = function removeDefinition(srcElement) {
    var definitionMap = this.definitionMap;
    var id = srcElement.id;
    var mapItem2 = definitionMap[id];
    if (mapItem2) {
      mapItem2.count--;
      if (mapItem2.count === 0) {
        this.remove(this.childNodes.indexOf(mapItem2.element), 1);
        delete definitionMap[id];
      }
    }
  };
  return DefinitionNode2;
}(node_default);
var definition_node_default = DefinitionNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/root-node.js
var RootNode = function(Node4) {
  function RootNode3(options2) {
    Node4.call(this);
    this.options = options2;
    this.defs = new definition_node_default();
  }
  if (Node4)
    RootNode3.__proto__ = Node4;
  RootNode3.prototype = Object.create(Node4 && Node4.prototype);
  RootNode3.prototype.constructor = RootNode3;
  RootNode3.prototype.attachTo = function attachTo(domElement) {
    this.element = domElement;
    this.defs.attachTo(domElement.firstElementChild);
  };
  RootNode3.prototype.clear = function clear3() {
    base_node_default.prototype.clear.call(this);
  };
  RootNode3.prototype.template = function template2() {
    return this.defs.render() + this.renderChildren();
  };
  RootNode3.prototype.definitionChange = function definitionChange(e) {
    this.defs.definitionChange(e);
  };
  return RootNode3;
}(node_default);
var root_node_default = RootNode;

// node_modules/@progress/kendo-drawing/dist/es/core/constants.js
var DASH_ARRAYS = {
  dot: [1.5, 3.5],
  dash: [4, 3.5],
  longdash: [8, 3.5],
  dashdot: [3.5, 3.5, 1.5, 3.5],
  longdashdot: [8, 3.5, 1.5, 3.5],
  longdashdotdot: [8, 3.5, 1.5, 3.5, 1.5, 3.5]
};
var SOLID = "solid";
var BUTT = "butt";

// node_modules/@progress/kendo-drawing/dist/es/svg/path-node.js
var ATTRIBUTE_MAP = {
  "fill.opacity": "fill-opacity",
  "stroke.color": "stroke",
  "stroke.width": "stroke-width",
  "stroke.opacity": "stroke-opacity"
};
var PathNode = function(Node4) {
  function PathNode3() {
    Node4.apply(this, arguments);
  }
  if (Node4)
    PathNode3.__proto__ = Node4;
  PathNode3.prototype = Object.create(Node4 && Node4.prototype);
  PathNode3.prototype.constructor = PathNode3;
  PathNode3.prototype.geometryChange = function geometryChange() {
    this.attr("d", this.renderData());
    this.invalidate();
  };
  PathNode3.prototype.optionsChange = function optionsChange(e) {
    switch (e.field) {
      case "fill":
        if (e.value) {
          this.allAttr(this.mapFill(e.value));
        } else {
          this.removeAttr("fill");
        }
        break;
      case "fill.color":
        this.allAttr(this.mapFill({ color: e.value }));
        break;
      case "stroke":
        if (e.value) {
          this.allAttr(this.mapStroke(e.value));
        } else {
          this.removeAttr("stroke");
        }
        break;
      case "transform":
        this.transformChange(e.value);
        break;
      default:
        var name2 = ATTRIBUTE_MAP[e.field];
        if (name2) {
          this.attr(name2, e.value);
        }
        break;
    }
    Node4.prototype.optionsChange.call(this, e);
  };
  PathNode3.prototype.content = function content() {
    if (this.element) {
      this.element.textContent = this.srcElement.content();
    }
  };
  PathNode3.prototype.renderData = function renderData() {
    return this.srcElement.toString(POINT_DIGITS) || void 0;
  };
  PathNode3.prototype.mapStroke = function mapStroke(stroke) {
    var attrs = [];
    if (stroke && !isTransparent(stroke.color)) {
      attrs.push(["stroke", stroke.color]);
      attrs.push(["stroke-width", stroke.width]);
      attrs.push(["stroke-linecap", this.renderLinecap(stroke)]);
      attrs.push(["stroke-linejoin", stroke.lineJoin]);
      if (defined(stroke.opacity)) {
        attrs.push(["stroke-opacity", stroke.opacity]);
      }
      if (defined(stroke.dashType)) {
        attrs.push(["stroke-dasharray", this.renderDashType(stroke)]);
      }
    } else {
      attrs.push(["stroke", NONE]);
    }
    return attrs;
  };
  PathNode3.prototype.renderStroke = function renderStroke() {
    return renderAllAttr(
      this.mapStroke(this.srcElement.options.stroke)
    );
  };
  PathNode3.prototype.renderDashType = function renderDashType(stroke) {
    var dashType = stroke.dashType;
    var width = stroke.width;
    if (width === void 0)
      width = 1;
    if (dashType && dashType !== SOLID) {
      var dashArray = DASH_ARRAYS[dashType.toLowerCase()];
      var result = [];
      for (var i = 0; i < dashArray.length; i++) {
        result.push(dashArray[i] * width);
      }
      return result.join(" ");
    }
  };
  PathNode3.prototype.renderLinecap = function renderLinecap(stroke) {
    var dashType = stroke.dashType;
    var lineCap = stroke.lineCap;
    return dashType && dashType !== "solid" ? BUTT : lineCap;
  };
  PathNode3.prototype.mapFill = function mapFill(fill) {
    var attrs = [];
    if (!(fill && fill.nodeType === "Gradient")) {
      if (fill && !isTransparent(fill.color)) {
        attrs.push(["fill", fill.color]);
        if (defined(fill.opacity)) {
          attrs.push(["fill-opacity", fill.opacity]);
        }
      } else {
        attrs.push(["fill", NONE]);
      }
    }
    return attrs;
  };
  PathNode3.prototype.renderFill = function renderFill() {
    return renderAllAttr(
      this.mapFill(this.srcElement.options.fill)
    );
  };
  PathNode3.prototype.template = function template2() {
    return "<path " + this.renderId() + " " + this.renderStyle() + " " + this.renderOpacity() + " " + renderAttr("d", this.renderData()) + this.renderStroke() + this.renderFill() + this.renderDefinitions() + this.renderTransform() + "></path>";
  };
  return PathNode3;
}(node_default);
var path_node_default = PathNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/arc-node.js
var ArcNode = function(PathNode3) {
  function ArcNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    ArcNode3.__proto__ = PathNode3;
  ArcNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  ArcNode3.prototype.constructor = ArcNode3;
  ArcNode3.prototype.renderData = function renderData() {
    return this.srcElement.toPath().toString(POINT_DIGITS);
  };
  return ArcNode3;
}(path_node_default);
var arc_node_default = ArcNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/circle-node.js
var CircleNode = function(PathNode3) {
  function CircleNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    CircleNode3.__proto__ = PathNode3;
  CircleNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  CircleNode3.prototype.constructor = CircleNode3;
  CircleNode3.prototype.geometryChange = function geometryChange() {
    var center = this.center();
    this.attr("cx", center.x);
    this.attr("cy", center.y);
    this.attr("r", this.radius());
    this.invalidate();
  };
  CircleNode3.prototype.center = function center() {
    return this.srcElement.geometry().center;
  };
  CircleNode3.prototype.radius = function radius() {
    return this.srcElement.geometry().radius;
  };
  CircleNode3.prototype.template = function template2() {
    return "<circle " + this.renderId() + " " + this.renderStyle() + " " + this.renderOpacity() + "cx='" + this.center().x + "' cy='" + this.center().y + "' r='" + this.radius() + "'" + this.renderStroke() + " " + this.renderFill() + " " + this.renderDefinitions() + this.renderTransform() + " ></circle>";
  };
  return CircleNode3;
}(path_node_default);
var circle_node_default = CircleNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/group-node.js
var GroupNode = function(Node4) {
  function GroupNode3() {
    Node4.apply(this, arguments);
  }
  if (Node4)
    GroupNode3.__proto__ = Node4;
  GroupNode3.prototype = Object.create(Node4 && Node4.prototype);
  GroupNode3.prototype.constructor = GroupNode3;
  GroupNode3.prototype.template = function template2() {
    return "<g" + (this.renderId() + this.renderTransform() + this.renderStyle() + this.renderOpacity() + this.renderDefinitions()) + ">" + this.renderChildren() + "</g>";
  };
  GroupNode3.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "transform") {
      this.transformChange(e.value);
    }
    Node4.prototype.optionsChange.call(this, e);
  };
  return GroupNode3;
}(node_default);
var group_node_default = GroupNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/image-node.js
var ImageNode = function(PathNode3) {
  function ImageNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    ImageNode3.__proto__ = PathNode3;
  ImageNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  ImageNode3.prototype.constructor = ImageNode3;
  ImageNode3.prototype.geometryChange = function geometryChange() {
    this.allAttr(this.mapPosition());
    this.invalidate();
  };
  ImageNode3.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "src") {
      this.allAttr(this.mapSource());
    }
    PathNode3.prototype.optionsChange.call(this, e);
  };
  ImageNode3.prototype.mapPosition = function mapPosition() {
    var rect = this.srcElement.rect();
    var tl = rect.topLeft();
    return [
      ["x", tl.x],
      ["y", tl.y],
      ["width", rect.width() + "px"],
      ["height", rect.height() + "px"]
    ];
  };
  ImageNode3.prototype.renderPosition = function renderPosition() {
    return renderAllAttr(this.mapPosition());
  };
  ImageNode3.prototype.mapSource = function mapSource(encode) {
    var src = this.srcElement.src();
    if (encode) {
      src = htmlEncode(src);
    }
    return [["xlink:href", src]];
  };
  ImageNode3.prototype.renderSource = function renderSource() {
    return renderAllAttr(this.mapSource(true));
  };
  ImageNode3.prototype.template = function template2() {
    return "<image preserveAspectRatio='none' " + this.renderId() + " " + this.renderStyle() + " " + this.renderTransform() + " " + this.renderOpacity() + this.renderPosition() + " " + this.renderSource() + " " + this.renderDefinitions() + "></image>";
  };
  return ImageNode3;
}(path_node_default);
var image_node_default = ImageNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/multi-path-node.js
var MultiPathNode = function(PathNode3) {
  function MultiPathNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    MultiPathNode3.__proto__ = PathNode3;
  MultiPathNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  MultiPathNode3.prototype.constructor = MultiPathNode3;
  MultiPathNode3.prototype.renderData = function renderData() {
    return this.srcElement.toString(POINT_DIGITS) || "undefined";
  };
  return MultiPathNode3;
}(path_node_default);
var multi_path_node_default = MultiPathNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/rect-node.js
var RectNode = function(PathNode3) {
  function RectNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    RectNode3.__proto__ = PathNode3;
  RectNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  RectNode3.prototype.constructor = RectNode3;
  RectNode3.prototype.geometryChange = function geometryChange() {
    var geometry = this.srcElement.geometry();
    this.attr("x", geometry.origin.x);
    this.attr("y", geometry.origin.y);
    this.attr("width", geometry.size.width);
    this.attr("height", geometry.size.height);
    this.attr("rx", geometry.cornerRadius[0]);
    this.attr("ry", geometry.cornerRadius[1]);
    this.invalidate();
  };
  RectNode3.prototype.size = function size() {
    return this.srcElement.geometry().size;
  };
  RectNode3.prototype.origin = function origin() {
    return this.srcElement.geometry().origin;
  };
  RectNode3.prototype.rx = function rx() {
    return this.srcElement.geometry().cornerRadius[0];
  };
  RectNode3.prototype.ry = function ry() {
    return this.srcElement.geometry().cornerRadius[1];
  };
  RectNode3.prototype.template = function template2() {
    return "<rect " + this.renderId() + " " + this.renderStyle() + " " + this.renderOpacity() + " x='" + this.origin().x + "' y='" + this.origin().y + "' rx='" + this.rx() + "' ry='" + this.ry() + "' width='" + this.size().width + "' height='" + this.size().height + "' " + this.renderStroke() + " " + this.renderFill() + " " + this.renderDefinitions() + " " + this.renderTransform() + " />";
  };
  return RectNode3;
}(path_node_default);
var rect_node_default = RectNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/text-node.js
var ENTITY_REGEX = /&(?:[a-zA-Z]+|#\d+);/g;
function decodeEntities(text) {
  if (!text || typeof text !== "string" || !ENTITY_REGEX.test(text)) {
    return text;
  }
  var element6 = decodeEntities.i;
  ENTITY_REGEX.lastIndex = 0;
  return text.replace(ENTITY_REGEX, function(match) {
    element6.innerHTML = match;
    return element6.textContent || element6.innerText;
  });
}
if (typeof document !== "undefined") {
  decodeEntities.i = document.createElement("span");
}
var TextNode = function(PathNode3) {
  function TextNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    TextNode3.__proto__ = PathNode3;
  TextNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  TextNode3.prototype.constructor = TextNode3;
  TextNode3.prototype.geometryChange = function geometryChange() {
    var pos = this.pos();
    this.attr("x", pos.x);
    this.attr("y", pos.y);
    this.invalidate();
  };
  TextNode3.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "font") {
      this.attr("style", renderStyle(this.mapStyle()));
      this.geometryChange();
    } else if (e.field === "content") {
      PathNode3.prototype.content.call(this, this.srcElement.content());
    }
    PathNode3.prototype.optionsChange.call(this, e);
  };
  TextNode3.prototype.mapStyle = function mapStyle(encode) {
    var style = PathNode3.prototype.mapStyle.call(this, encode);
    var font = this.srcElement.options.font;
    if (encode) {
      font = htmlEncode(font);
    }
    style.push(["font", font], ["white-space", "pre"]);
    return style;
  };
  TextNode3.prototype.pos = function pos() {
    var pos2 = this.srcElement.position();
    var size = this.srcElement.measure();
    return pos2.clone().setY(pos2.y + size.baseline);
  };
  TextNode3.prototype.renderContent = function renderContent() {
    var content = this.srcElement.content();
    content = decodeEntities(content);
    content = htmlEncode(content);
    return normalizeText(content);
  };
  TextNode3.prototype.renderTextAnchor = function renderTextAnchor() {
    var anchor;
    if ((this.options || {}).rtl && !(support_default.browser.msie || support_default.browser.edge)) {
      anchor = "end";
    }
    return renderAttr("text-anchor", anchor);
  };
  TextNode3.prototype.template = function template2() {
    return "<text " + this.renderId() + " " + this.renderTextAnchor() + " " + this.renderStyle() + " " + this.renderOpacity() + "x='" + this.pos().x + "' y='" + this.pos().y + "' " + this.renderStroke() + " " + this.renderTransform() + " " + this.renderDefinitions() + this.renderFill() + ">" + this.renderContent() + "</text>";
  };
  return TextNode3;
}(path_node_default);
var text_node_default = TextNode;

// node_modules/@progress/kendo-drawing/dist/es/svg/surface.js
node_map_default.Arc = arc_node_default;
node_map_default.Circle = circle_node_default;
node_map_default.Group = group_node_default;
node_map_default.Image = image_node_default;
node_map_default.MultiPath = multi_path_node_default;
node_map_default.Path = path_node_default;
node_map_default.Rect = rect_node_default;
node_map_default.Text = text_node_default;
var RTL = "rtl";
function alignToScreen(element6) {
  var ctm;
  try {
    ctm = element6.getScreenCTM ? element6.getScreenCTM() : null;
  } catch (e) {
  }
  if (ctm) {
    var left2 = -ctm.e % 1;
    var top = -ctm.f % 1;
    var style = element6.style;
    if (left2 !== 0 || top !== 0) {
      style.left = left2 + "px";
      style.top = top + "px";
    }
  }
}
var Surface2 = function(BaseSurface) {
  function Surface5(element6, options2) {
    BaseSurface.call(this, element6, options2);
    this.J = new root_node_default(Object.assign({
      rtl: elementStyles(element6, "direction").direction === RTL
    }, this.options));
    render_svg_default(this.element, this.Eb(""));
    this.oa = this.element.firstElementChild;
    this.oa.style.width = "100%";
    this.oa.style.height = "100%";
    this.oa.style.overflow = "hidden";
    alignToScreen(this.oa);
    this.J.attachTo(this.oa);
    bindEvents(this.element, {
      click: this.cd,
      mouseover: this.Bb,
      mouseout: this.Cb,
      mousemove: this.dd
    });
    this.resize();
  }
  if (BaseSurface)
    Surface5.__proto__ = BaseSurface;
  Surface5.prototype = Object.create(BaseSurface && BaseSurface.prototype);
  Surface5.prototype.constructor = Surface5;
  var prototypeAccessors = { type: { configurable: true } };
  prototypeAccessors.type.get = function() {
    return "svg";
  };
  Surface5.prototype.destroy = function destroy2() {
    if (this.J) {
      this.J.destroy();
      this.J = null;
      this.oa = null;
      unbindEvents(this.element, {
        click: this.cd,
        mouseover: this.Bb,
        mouseout: this.Cb,
        mousemove: this.dd
      });
    }
    BaseSurface.prototype.destroy.call(this);
  };
  Surface5.prototype.translate = function translate(offset4) {
    var viewBox = Math.round(offset4.x) + " " + Math.round(offset4.y) + " " + this.Ca.width + " " + this.Ca.height;
    this.hb = offset4;
    this.oa.setAttribute("viewBox", viewBox);
  };
  Surface5.prototype.draw = function draw(element6) {
    BaseSurface.prototype.draw.call(this, element6);
    this.J.load([element6]);
  };
  Surface5.prototype.clear = function clear3() {
    BaseSurface.prototype.clear.call(this);
    this.J.clear();
  };
  Surface5.prototype.svg = function svg() {
    return "<?xml version='1.0' ?>" + this.Eb();
  };
  Surface5.prototype.exportVisual = function exportVisual() {
    var ref = this;
    var visual = ref.gb;
    var offset4 = ref.hb;
    if (offset4) {
      var wrap2 = new group_default();
      wrap2.children.push(visual);
      wrap2.transform(
        transform().translate(-offset4.x, -offset4.y)
      );
      visual = wrap2;
    }
    return visual;
  };
  Surface5.prototype.Db = function _resize() {
    if (this.hb) {
      this.translate(this.hb);
    }
  };
  Surface5.prototype.Eb = function _template(svgStyles) {
    var styles6 = typeof svgStyles === "string" ? svgStyles : "style='width: 100%; height: 100%; overflow: hidden;' ";
    return "<svg " + styles6 + "xmlns='" + SVG_NS + "' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>" + this.J.render() + "</svg>";
  };
  Object.defineProperties(Surface5.prototype, prototypeAccessors);
  return Surface5;
}(surface_default);
var surface_default2 = Surface2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/node-map.js
var NODE_MAP2 = {};
var node_map_default2 = NODE_MAP2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/utils/render-path.js
function renderPath(ctx, path) {
  var segments = path.segments;
  if (segments.length === 0) {
    return;
  }
  var segment = segments[0];
  var anchor = segment.anchor();
  ctx.moveTo(anchor.x, anchor.y);
  for (var i = 1; i < segments.length; i++) {
    segment = segments[i];
    anchor = segment.anchor();
    var prevSeg = segments[i - 1];
    var prevOut = prevSeg.controlOut();
    var controlIn = segment.controlIn();
    if (prevOut && controlIn) {
      ctx.bezierCurveTo(
        prevOut.x,
        prevOut.y,
        controlIn.x,
        controlIn.y,
        anchor.x,
        anchor.y
      );
    } else {
      ctx.lineTo(anchor.x, anchor.y);
    }
  }
  if (path.options.closed) {
    ctx.closePath();
  }
}

// node_modules/@progress/kendo-drawing/dist/es/canvas/node.js
var Node3 = function(BaseNode2) {
  function Node4(srcElement) {
    BaseNode2.call(this, srcElement);
    if (srcElement) {
      this.initClip();
    }
  }
  if (BaseNode2)
    Node4.__proto__ = BaseNode2;
  Node4.prototype = Object.create(BaseNode2 && BaseNode2.prototype);
  Node4.prototype.constructor = Node4;
  Node4.prototype.initClip = function initClip() {
    var clip = this.srcElement.clip();
    if (clip) {
      this.clip = clip;
      clip.addObserver(this);
    }
  };
  Node4.prototype.clear = function clear3() {
    if (this.srcElement) {
      this.srcElement.removeObserver(this);
    }
    this.clearClip();
    BaseNode2.prototype.clear.call(this);
  };
  Node4.prototype.clearClip = function clearClip() {
    if (this.clip) {
      this.clip.removeObserver(this);
      delete this.clip;
    }
  };
  Node4.prototype.setClip = function setClip(ctx) {
    if (this.clip) {
      ctx.beginPath();
      renderPath(ctx, this.clip);
      ctx.clip();
    }
  };
  Node4.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "clip") {
      this.clearClip();
      this.initClip();
    }
    BaseNode2.prototype.optionsChange.call(this, e);
  };
  Node4.prototype.setTransform = function setTransform(ctx) {
    if (this.srcElement) {
      var transform2 = this.srcElement.transform();
      if (transform2) {
        ctx.transform.apply(ctx, transform2.matrix().toArray(6));
      }
    }
  };
  Node4.prototype.loadElements = function loadElements(elements, pos, cors) {
    var this$1 = this;
    for (var i = 0; i < elements.length; i++) {
      var srcElement = elements[i];
      var children2 = srcElement.children;
      var childNode = new node_map_default2[srcElement.nodeType](srcElement, cors);
      if (children2 && children2.length > 0) {
        childNode.load(children2, pos, cors);
      }
      if (defined(pos)) {
        this$1.insertAt(childNode, pos);
      } else {
        this$1.append(childNode);
      }
    }
  };
  Node4.prototype.load = function load3(elements, pos, cors) {
    this.loadElements(elements, pos, cors);
    this.invalidate();
  };
  Node4.prototype.setOpacity = function setOpacity(ctx) {
    if (this.srcElement) {
      var opacity = this.srcElement.opacity();
      if (defined(opacity)) {
        this.globalAlpha(ctx, opacity);
      }
    }
  };
  Node4.prototype.globalAlpha = function globalAlpha(ctx, value2) {
    var opactity = value2;
    if (opactity && ctx.globalAlpha) {
      opactity *= ctx.globalAlpha;
    }
    ctx.globalAlpha = opactity;
  };
  Node4.prototype.visible = function visible() {
    var src = this.srcElement;
    return !src || src && src.options.visible !== false;
  };
  return Node4;
}(base_node_default);
var node_default2 = Node3;

// node_modules/@progress/kendo-drawing/dist/es/canvas/group-node.js
var GroupNode2 = function(superclass) {
  function GroupNode3() {
    superclass.apply(this, arguments);
  }
  if (superclass)
    GroupNode3.__proto__ = superclass;
  GroupNode3.prototype = Object.create(superclass && superclass.prototype);
  GroupNode3.prototype.constructor = GroupNode3;
  GroupNode3.prototype.renderTo = function renderTo(ctx) {
    if (!this.visible()) {
      return;
    }
    ctx.save();
    this.setTransform(ctx);
    this.setClip(ctx);
    this.setOpacity(ctx);
    var childNodes = this.childNodes;
    for (var i = 0; i < childNodes.length; i++) {
      var child = childNodes[i];
      if (child.visible()) {
        child.renderTo(ctx);
      }
    }
    ctx.restore();
  };
  return GroupNode3;
}(traversable_default(node_default2, "childNodes"));
var group_node_default2 = GroupNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/root-node.js
var FRAME_DELAY = 1e3 / 60;
var RootNode2 = function(superclass) {
  function RootNode3(canvas, size) {
    superclass.call(this);
    this.canvas = canvas;
    this.size = size;
    this.ctx = canvas.getContext("2d");
    var invalidateHandler = this.qc.bind(this);
    this.invalidate = throttle3(function() {
      animation_frame_default(invalidateHandler);
    }, FRAME_DELAY);
  }
  if (superclass)
    RootNode3.__proto__ = superclass;
  RootNode3.prototype = Object.create(superclass && superclass.prototype);
  RootNode3.prototype.constructor = RootNode3;
  RootNode3.prototype.destroy = function destroy2() {
    superclass.prototype.destroy.call(this);
    this.canvas = null;
    this.ctx = null;
  };
  RootNode3.prototype.load = function load3(elements, pos, cors) {
    this.loadElements(elements, pos, cors);
    this.qc();
  };
  RootNode3.prototype._d = function _rescale(scale) {
    var ref = this;
    var canvas = ref.canvas;
    var size = ref.size;
    canvas.width = size.width * scale;
    canvas.height = size.height * scale;
    this.ctx.scale(scale, scale);
  };
  RootNode3.prototype.$d = function _devicePixelRatio() {
    if (typeof window.devicePixelRatio === "number") {
      return window.devicePixelRatio;
    }
    return 1;
  };
  RootNode3.prototype.qc = function _invalidate(options2) {
    if (!this.ctx) {
      return;
    }
    var fixedScale = options2 && options2.fixedScale;
    var scale = fixedScale ? 1 : this.$d();
    this._d(scale);
    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
    this.renderTo(this.ctx);
  };
  return RootNode3;
}(traversable_default(group_node_default2, "childNodes"));
var root_node_default2 = RootNode2;

// node_modules/@progress/kendo-drawing/dist/es/search/quad-root.js
var QuadRoot = function(Class3) {
  function QuadRoot2() {
    Class3.call(this);
    this.shapes = [];
  }
  if (Class3)
    QuadRoot2.__proto__ = Class3;
  QuadRoot2.prototype = Object.create(Class3 && Class3.prototype);
  QuadRoot2.prototype.constructor = QuadRoot2;
  QuadRoot2.prototype.Va = function _add(shape19, bbox) {
    this.shapes.push({
      bbox,
      shape: shape19
    });
    shape19.ib = this;
  };
  QuadRoot2.prototype.pointShapes = function pointShapes(point2) {
    var shapes = this.shapes;
    var length = shapes.length;
    var result = [];
    for (var idx = 0; idx < length; idx++) {
      if (shapes[idx].bbox.containsPoint(point2)) {
        result.push(shapes[idx].shape);
      }
    }
    return result;
  };
  QuadRoot2.prototype.insert = function insert(shape19, bbox) {
    this.Va(shape19, bbox);
  };
  QuadRoot2.prototype.remove = function remove(shape19) {
    var shapes = this.shapes;
    var length = shapes.length;
    for (var idx = 0; idx < length; idx++) {
      if (shapes[idx].shape === shape19) {
        shapes.splice(idx, 1);
        break;
      }
    }
  };
  return QuadRoot2;
}(class_default);
var quad_root_default = QuadRoot;

// node_modules/@progress/kendo-drawing/dist/es/search/quad-node.js
var QuadNode = function(QuadRoot2) {
  function QuadNode2(rect) {
    QuadRoot2.call(this);
    this.children = [];
    this.rect = rect;
  }
  if (QuadRoot2)
    QuadNode2.__proto__ = QuadRoot2;
  QuadNode2.prototype = Object.create(QuadRoot2 && QuadRoot2.prototype);
  QuadNode2.prototype.constructor = QuadNode2;
  QuadNode2.prototype.inBounds = function inBounds(rect) {
    var nodeRect = this.rect;
    var nodeBottomRight = nodeRect.bottomRight();
    var bottomRight = rect.bottomRight();
    var inBounds2 = nodeRect.origin.x <= rect.origin.x && nodeRect.origin.y <= rect.origin.y && bottomRight.x <= nodeBottomRight.x && bottomRight.y <= nodeBottomRight.y;
    return inBounds2;
  };
  QuadNode2.prototype.pointShapes = function pointShapes(point2) {
    var children2 = this.children;
    var length = children2.length;
    var result = QuadRoot2.prototype.pointShapes.call(this, point2);
    for (var idx = 0; idx < length; idx++) {
      append(result, children2[idx].pointShapes(point2));
    }
    return result;
  };
  QuadNode2.prototype.insert = function insert(shape19, bbox) {
    var children2 = this.children;
    var inserted = false;
    if (this.inBounds(bbox)) {
      if (this.shapes.length < 4) {
        this.Va(shape19, bbox);
      } else {
        if (!children2.length) {
          this.ae();
        }
        for (var idx = 0; idx < children2.length; idx++) {
          if (children2[idx].insert(shape19, bbox)) {
            inserted = true;
            break;
          }
        }
        if (!inserted) {
          this.Va(shape19, bbox);
        }
      }
      inserted = true;
    }
    return inserted;
  };
  QuadNode2.prototype.ae = function _initChildren() {
    var ref = this;
    var rect = ref.rect;
    var children2 = ref.children;
    var center = rect.center();
    var halfWidth = rect.width() / 2;
    var halfHeight = rect.height() / 2;
    children2.push(
      new QuadNode2(new rect_default([rect.origin.x, rect.origin.y], [halfWidth, halfHeight])),
      new QuadNode2(new rect_default([center.x, rect.origin.y], [halfWidth, halfHeight])),
      new QuadNode2(new rect_default([rect.origin.x, center.y], [halfWidth, halfHeight])),
      new QuadNode2(new rect_default([center.x, center.y], [halfWidth, halfHeight]))
    );
  };
  return QuadNode2;
}(quad_root_default);
var quad_node_default = QuadNode;

// node_modules/@progress/kendo-drawing/dist/es/search/shapes-quad-tree.js
var ROOT_SIZE = 3e3;
var LEVEL_STEP = 1e4;
var MAX_LEVEL = 75;
var ShapesQuadTree = function(Class3) {
  function ShapesQuadTree2() {
    Class3.call(this);
    this.initRoots();
  }
  if (Class3)
    ShapesQuadTree2.__proto__ = Class3;
  ShapesQuadTree2.prototype = Object.create(Class3 && Class3.prototype);
  ShapesQuadTree2.prototype.constructor = ShapesQuadTree2;
  ShapesQuadTree2.prototype.initRoots = function initRoots() {
    this.rootMap = {};
    this.root = new quad_root_default();
    this.rootElements = [];
  };
  ShapesQuadTree2.prototype.clear = function clear3() {
    var this$1 = this;
    var rootElements = this.rootElements;
    for (var idx = 0; idx < rootElements.length; idx++) {
      this$1.remove(rootElements[idx]);
    }
    this.initRoots();
  };
  ShapesQuadTree2.prototype.pointShape = function pointShape(point2) {
    var sectorRoot = (this.rootMap[Math.floor(point2.x / ROOT_SIZE)] || {})[Math.floor(point2.y / ROOT_SIZE)];
    var result = this.root.pointShapes(point2);
    if (sectorRoot) {
      result = result.concat(sectorRoot.pointShapes(point2));
    }
    this.assignZindex(result);
    result.sort(zIndexComparer);
    for (var idx = 0; idx < result.length; idx++) {
      if (result[idx].containsPoint(point2)) {
        return result[idx];
      }
    }
  };
  ShapesQuadTree2.prototype.assignZindex = function assignZindex(elements) {
    var this$1 = this;
    for (var idx = 0; idx < elements.length; idx++) {
      var element6 = elements[idx];
      var zIndex3 = 0;
      var levelWeight = Math.pow(LEVEL_STEP, MAX_LEVEL);
      var parents = [];
      while (element6) {
        parents.push(element6);
        element6 = element6.parent;
      }
      while (parents.length) {
        element6 = parents.pop();
        zIndex3 += ((element6.parent ? element6.parent.children : this$1.rootElements).indexOf(element6) + 1) * levelWeight;
        levelWeight /= LEVEL_STEP;
      }
      elements[idx].Fb = zIndex3;
    }
  };
  ShapesQuadTree2.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "transform" || e.field === "stroke.width") {
      this.bboxChange(e.element);
    }
  };
  ShapesQuadTree2.prototype.geometryChange = function geometryChange(e) {
    this.bboxChange(e.element);
  };
  ShapesQuadTree2.prototype.bboxChange = function bboxChange(element6) {
    var this$1 = this;
    if (element6.nodeType === "Group") {
      for (var idx = 0; idx < element6.children.length; idx++) {
        this$1.bboxChange(element6.children[idx]);
      }
    } else {
      if (element6.ib) {
        element6.ib.remove(element6);
      }
      this.ed(element6);
    }
  };
  ShapesQuadTree2.prototype.add = function add(elements) {
    var elementsArray = Array.isArray(elements) ? elements.slice(0) : [elements];
    append(this.rootElements, elementsArray);
    this.fd(elementsArray);
  };
  ShapesQuadTree2.prototype.childrenChange = function childrenChange(e) {
    var this$1 = this;
    if (e.action === "remove") {
      for (var idx = 0; idx < e.items.length; idx++) {
        this$1.remove(e.items[idx]);
      }
    } else {
      this.fd(Array.prototype.slice.call(e.items, 0));
    }
  };
  ShapesQuadTree2.prototype.fd = function _insert(elements) {
    var this$1 = this;
    var element6;
    while (elements.length > 0) {
      element6 = elements.pop();
      element6.addObserver(this$1);
      if (element6.nodeType === "Group") {
        append(elements, element6.children);
      } else {
        this$1.ed(element6);
      }
    }
  };
  ShapesQuadTree2.prototype.ed = function _insertShape(shape19) {
    var bbox = shape19.bbox();
    if (bbox) {
      var sectors = this.getSectors(bbox);
      var x = sectors[0][0];
      var y = sectors[1][0];
      if (this.inRoot(sectors)) {
        this.root.insert(shape19, bbox);
      } else {
        var rootMap = this.rootMap;
        if (!rootMap[x]) {
          rootMap[x] = {};
        }
        if (!rootMap[x][y]) {
          rootMap[x][y] = new quad_node_default(
            new rect_default([x * ROOT_SIZE, y * ROOT_SIZE], [ROOT_SIZE, ROOT_SIZE])
          );
        }
        rootMap[x][y].insert(shape19, bbox);
      }
    }
  };
  ShapesQuadTree2.prototype.remove = function remove(element6) {
    var this$1 = this;
    element6.removeObserver(this);
    if (element6.nodeType === "Group") {
      var children2 = element6.children;
      for (var idx = 0; idx < children2.length; idx++) {
        this$1.remove(children2[idx]);
      }
    } else if (element6.ib) {
      element6.ib.remove(element6);
      delete element6.ib;
    }
  };
  ShapesQuadTree2.prototype.inRoot = function inRoot(sectors) {
    return sectors[0].length > 1 || sectors[1].length > 1;
  };
  ShapesQuadTree2.prototype.getSectors = function getSectors(rect) {
    var bottomRight = rect.bottomRight();
    var bottomX = Math.floor(bottomRight.x / ROOT_SIZE);
    var bottomY = Math.floor(bottomRight.y / ROOT_SIZE);
    var sectors = [[], []];
    for (var x = Math.floor(rect.origin.x / ROOT_SIZE); x <= bottomX; x++) {
      sectors[0].push(x);
    }
    for (var y = Math.floor(rect.origin.y / ROOT_SIZE); y <= bottomY; y++) {
      sectors[1].push(y);
    }
    return sectors;
  };
  return ShapesQuadTree2;
}(class_default);
function zIndexComparer(x1, x2) {
  if (x1.Fb < x2.Fb) {
    return 1;
  }
  if (x1.Fb > x2.Fb) {
    return -1;
  }
  return 0;
}
var shapes_quad_tree_default = ShapesQuadTree;

// node_modules/@progress/kendo-drawing/dist/es/canvas/surface-cursor.js
var SurfaceCursor = function SurfaceCursor2(surface) {
  surface.bind("mouseenter", this.Bb.bind(this));
  surface.bind("mouseleave", this.Cb.bind(this));
  this.element = surface.element;
};
SurfaceCursor.prototype.clear = function clear() {
  this.Gb();
};
SurfaceCursor.prototype.destroy = function destroy() {
  this.Gb();
  delete this.element;
};
SurfaceCursor.prototype.Bb = function _mouseenter(e) {
  var cursor = this.be(e);
  if (!cursor) {
    this.Gb();
  } else {
    if (!this.rc) {
      this.ce = this.de();
    }
    this.gd(cursor);
  }
};
SurfaceCursor.prototype.Cb = function _mouseleave() {
  this.Gb();
};
SurfaceCursor.prototype.be = function _shapeCursor(e) {
  var shape19 = e.element;
  while (shape19 && !defined(shape19.options.cursor)) {
    shape19 = shape19.parent;
  }
  if (shape19) {
    return shape19.options.cursor;
  }
};
SurfaceCursor.prototype.de = function _getCursor() {
  if (this.element) {
    return this.element.style.cursor;
  }
};
SurfaceCursor.prototype.gd = function _setCursor(cursor) {
  if (this.element) {
    this.element.style.cursor = cursor;
    this.rc = cursor;
  }
};
SurfaceCursor.prototype.Gb = function _resetCursor() {
  if (this.rc) {
    this.gd(this.ce || "");
    delete this.rc;
  }
};
var surface_cursor_default = SurfaceCursor;

// node_modules/@progress/kendo-drawing/dist/es/canvas/path-node.js
function addGradientStops(gradient, stops) {
  for (var idx = 0; idx < stops.length; idx++) {
    var stop = stops[idx];
    var color = parseColor(stop.color());
    color.a *= stop.opacity();
    gradient.addColorStop(stop.offset(), color.toCssRgba());
  }
}
var PathNode2 = function(Node4) {
  function PathNode3() {
    Node4.apply(this, arguments);
  }
  if (Node4)
    PathNode3.__proto__ = Node4;
  PathNode3.prototype = Object.create(Node4 && Node4.prototype);
  PathNode3.prototype.constructor = PathNode3;
  PathNode3.prototype.renderTo = function renderTo(ctx) {
    ctx.save();
    this.setTransform(ctx);
    this.setClip(ctx);
    this.setOpacity(ctx);
    ctx.beginPath();
    this.renderPoints(ctx, this.srcElement);
    this.setLineDash(ctx);
    this.setLineCap(ctx);
    this.setLineJoin(ctx);
    this.setFill(ctx);
    this.setStroke(ctx);
    ctx.restore();
  };
  PathNode3.prototype.setFill = function setFill(ctx) {
    var fill = this.srcElement.options.fill;
    var hasFill = false;
    if (fill) {
      if (fill.nodeType === "Gradient") {
        this.setGradientFill(ctx, fill);
        hasFill = true;
      } else if (!isTransparent(fill.color)) {
        ctx.fillStyle = fill.color;
        ctx.save();
        this.globalAlpha(ctx, fill.opacity);
        ctx.fill();
        ctx.restore();
        hasFill = true;
      }
    }
    return hasFill;
  };
  PathNode3.prototype.setGradientFill = function setGradientFill(ctx, fill) {
    var bbox = this.srcElement.rawBBox();
    var gradient;
    if (fill instanceof linear_gradient_default) {
      var start2 = fill.start();
      var end2 = fill.end();
      gradient = ctx.createLinearGradient(start2.x, start2.y, end2.x, end2.y);
    } else if (fill instanceof radial_gradient_default) {
      var center = fill.center();
      gradient = ctx.createRadialGradient(center.x, center.y, 0, center.x, center.y, fill.radius());
    }
    addGradientStops(gradient, fill.stops);
    ctx.save();
    if (!fill.userSpace()) {
      ctx.transform(bbox.width(), 0, 0, bbox.height(), bbox.origin.x, bbox.origin.y);
    }
    ctx.fillStyle = gradient;
    ctx.fill();
    ctx.restore();
  };
  PathNode3.prototype.setStroke = function setStroke(ctx) {
    var stroke = this.srcElement.options.stroke;
    if (stroke && !isTransparent(stroke.color) && stroke.width > 0) {
      ctx.strokeStyle = stroke.color;
      ctx.lineWidth = valueOrDefault2(stroke.width, 1);
      ctx.save();
      this.globalAlpha(ctx, stroke.opacity);
      ctx.stroke();
      ctx.restore();
      return true;
    }
  };
  PathNode3.prototype.dashType = function dashType() {
    var stroke = this.srcElement.options.stroke;
    if (stroke && stroke.dashType) {
      return stroke.dashType.toLowerCase();
    }
  };
  PathNode3.prototype.setLineDash = function setLineDash(ctx) {
    var dashType = this.dashType();
    if (dashType && dashType !== SOLID) {
      var dashArray = DASH_ARRAYS[dashType];
      if (ctx.setLineDash) {
        ctx.setLineDash(dashArray);
      } else {
        ctx.mozDash = dashArray;
        ctx.webkitLineDash = dashArray;
      }
    }
  };
  PathNode3.prototype.setLineCap = function setLineCap(ctx) {
    var dashType = this.dashType();
    var stroke = this.srcElement.options.stroke;
    if (dashType && dashType !== SOLID) {
      ctx.lineCap = BUTT;
    } else if (stroke && stroke.lineCap) {
      ctx.lineCap = stroke.lineCap;
    }
  };
  PathNode3.prototype.setLineJoin = function setLineJoin(ctx) {
    var stroke = this.srcElement.options.stroke;
    if (stroke && stroke.lineJoin) {
      ctx.lineJoin = stroke.lineJoin;
    }
  };
  PathNode3.prototype.renderPoints = function renderPoints(ctx, path) {
    renderPath(ctx, path);
  };
  return PathNode3;
}(node_default2);
var path_node_default2 = PathNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/arc-node.js
var ArcNode2 = function(PathNode3) {
  function ArcNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    ArcNode3.__proto__ = PathNode3;
  ArcNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  ArcNode3.prototype.constructor = ArcNode3;
  ArcNode3.prototype.renderPoints = function renderPoints(ctx) {
    var path = this.srcElement.toPath();
    renderPath(ctx, path);
  };
  return ArcNode3;
}(path_node_default2);
var arc_node_default2 = ArcNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/circle-node.js
var CircleNode2 = function(PathNode3) {
  function CircleNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    CircleNode3.__proto__ = PathNode3;
  CircleNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  CircleNode3.prototype.constructor = CircleNode3;
  CircleNode3.prototype.renderPoints = function renderPoints(ctx) {
    var ref = this.srcElement.geometry();
    var center = ref.center;
    var radius = ref.radius;
    ctx.arc(center.x, center.y, radius, 0, Math.PI * 2);
  };
  return CircleNode3;
}(path_node_default2);
var circle_node_default2 = CircleNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/image-node.js
var ImageNode2 = function(PathNode3) {
  function ImageNode3(srcElement, cors) {
    PathNode3.call(this, srcElement);
    this.onLoad = this.onLoad.bind(this);
    this.onError = this.onError.bind(this);
    this.loading = createPromise();
    var img = this.img = new Image();
    var src = srcElement.src();
    if (cors && !/^data:/i.test(src)) {
      img.crossOrigin = cors;
    }
    if (src) {
      img.src = src;
    }
    if (img.complete) {
      this.onLoad();
    } else {
      img.onload = this.onLoad;
      img.onerror = this.onError;
    }
  }
  if (PathNode3)
    ImageNode3.__proto__ = PathNode3;
  ImageNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  ImageNode3.prototype.constructor = ImageNode3;
  ImageNode3.prototype.renderTo = function renderTo(ctx) {
    if (this.loading.state() === "resolved") {
      ctx.save();
      this.setTransform(ctx);
      this.setClip(ctx);
      this.drawImage(ctx);
      ctx.restore();
    }
  };
  ImageNode3.prototype.optionsChange = function optionsChange(e) {
    if (e.field === "src") {
      this.loading = createPromise();
      this.img.src = this.srcElement.src();
    } else {
      PathNode3.prototype.optionsChange.call(this, e);
    }
  };
  ImageNode3.prototype.onLoad = function onLoad() {
    this.loading.resolve();
    this.invalidate();
  };
  ImageNode3.prototype.onError = function onError() {
    this.loading.reject(new Error(
      "Unable to load image '" + this.img.src + "'. Check for connectivity and verify CORS headers."
    ));
  };
  ImageNode3.prototype.drawImage = function drawImage2(ctx) {
    var rect = this.srcElement.rect();
    var topLeft = rect.topLeft();
    ctx.drawImage(
      this.img,
      topLeft.x,
      topLeft.y,
      rect.width(),
      rect.height()
    );
  };
  return ImageNode3;
}(path_node_default2);
var image_node_default2 = ImageNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/multi-path-node.js
var MultiPathNode2 = function(PathNode3) {
  function MultiPathNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    MultiPathNode3.__proto__ = PathNode3;
  MultiPathNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  MultiPathNode3.prototype.constructor = MultiPathNode3;
  MultiPathNode3.prototype.renderPoints = function renderPoints(ctx) {
    var paths = this.srcElement.paths;
    for (var i = 0; i < paths.length; i++) {
      renderPath(ctx, paths[i]);
    }
  };
  return MultiPathNode3;
}(path_node_default2);
var multi_path_node_default2 = MultiPathNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/rect-node.js
var RectNode2 = function(PathNode3) {
  function RectNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    RectNode3.__proto__ = PathNode3;
  RectNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  RectNode3.prototype.constructor = RectNode3;
  RectNode3.prototype.renderPoints = function renderPoints(ctx) {
    var geometry = this.srcElement.geometry();
    var ref = geometry.cornerRadius;
    var rx = ref[0];
    var ry = ref[1];
    if (rx === 0 && ry === 0) {
      var origin = geometry.origin;
      var size = geometry.size;
      ctx.rect(origin.x, origin.y, size.width, size.height);
    } else {
      PathNode3.prototype.renderPoints.call(this, ctx, Path.fromRect(geometry));
    }
  };
  return RectNode3;
}(path_node_default2);
var rect_node_default2 = RectNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/text-node.js
var TextNode2 = function(PathNode3) {
  function TextNode3() {
    PathNode3.apply(this, arguments);
  }
  if (PathNode3)
    TextNode3.__proto__ = PathNode3;
  TextNode3.prototype = Object.create(PathNode3 && PathNode3.prototype);
  TextNode3.prototype.constructor = TextNode3;
  TextNode3.prototype.renderTo = function renderTo(ctx) {
    var text = this.srcElement;
    var pos = text.position();
    var size = text.measure();
    ctx.save();
    this.setTransform(ctx);
    this.setClip(ctx);
    this.setOpacity(ctx);
    ctx.beginPath();
    ctx.font = text.options.font;
    ctx.textAlign = "left";
    if (this.setFill(ctx)) {
      ctx.fillText(text.content(), pos.x, pos.y + size.baseline);
    }
    if (this.setStroke(ctx)) {
      this.setLineDash(ctx);
      ctx.strokeText(text.content(), pos.x, pos.y + size.baseline);
    }
    ctx.restore();
  };
  return TextNode3;
}(path_node_default2);
var text_node_default2 = TextNode2;

// node_modules/@progress/kendo-drawing/dist/es/canvas/surface.js
node_map_default2.Arc = arc_node_default2;
node_map_default2.Circle = circle_node_default2;
node_map_default2.Group = group_node_default2;
node_map_default2.Image = image_node_default2;
node_map_default2.MultiPath = multi_path_node_default2;
node_map_default2.Path = path_node_default2;
node_map_default2.Rect = rect_node_default2;
node_map_default2.Text = text_node_default2;
var Surface3 = function(BaseSurface) {
  function Surface5(element6, options2) {
    BaseSurface.call(this, element6, options2);
    this.element.innerHTML = this.Eb(this);
    var canvas = this.element.firstElementChild;
    canvas.style.width = "100%";
    canvas.style.height = "100%";
    var size = elementSize(element6);
    canvas.width = size.width;
    canvas.height = size.height;
    this.oa = canvas;
    this.J = new root_node_default2(canvas, size);
    this.Hb = this.ee.bind(this);
    bindEvents(this.element, {
      click: this.Hb,
      mousemove: this.Hb
    });
  }
  if (BaseSurface)
    Surface5.__proto__ = BaseSurface;
  Surface5.prototype = Object.create(BaseSurface && BaseSurface.prototype);
  Surface5.prototype.constructor = Surface5;
  var prototypeAccessors = { type: { configurable: true } };
  prototypeAccessors.type.get = function() {
    return "canvas";
  };
  Surface5.prototype.destroy = function destroy2() {
    BaseSurface.prototype.destroy.call(this);
    if (this.J) {
      this.J.destroy();
      this.J = null;
    }
    if (this.ba) {
      this.ba.clear();
      delete this.ba;
    }
    if (this.jb) {
      this.jb.destroy();
      delete this.jb;
    }
    unbindEvents(this.element, {
      click: this.Hb,
      mousemove: this.Hb
    });
  };
  Surface5.prototype.draw = function draw(element6) {
    BaseSurface.prototype.draw.call(this, element6);
    this.J.load([element6], void 0, this.options.cors);
    if (this.ba) {
      this.ba.add([element6]);
    }
  };
  Surface5.prototype.clear = function clear3() {
    BaseSurface.prototype.clear.call(this);
    this.J.clear();
    if (this.ba) {
      this.ba.clear();
    }
    if (this.jb) {
      this.jb.clear();
    }
  };
  Surface5.prototype.eventTarget = function eventTarget(e) {
    if (this.ba) {
      var point2 = this.Zd(e);
      var shape19 = this.ba.pointShape(point2);
      return shape19;
    }
  };
  Surface5.prototype.image = function image() {
    var ref = this;
    var root = ref.J;
    var rootElement = ref.oa;
    var loadingStates = [];
    root.traverse(function(childNode) {
      if (childNode.loading) {
        loadingStates.push(childNode.loading);
      }
    });
    var promise = createPromise();
    var resolveDataURL = function() {
      root.qc({ fixedScale: true });
      try {
        var data2 = rootElement.toDataURL();
        promise.resolve(data2);
      } catch (e) {
        promise.reject(e);
      }
    };
    promiseAll(loadingStates).then(resolveDataURL, resolveDataURL);
    return promise;
  };
  Surface5.prototype.suspendTracking = function suspendTracking() {
    BaseSurface.prototype.suspendTracking.call(this);
    if (this.ba) {
      this.ba.clear();
      delete this.ba;
    }
  };
  Surface5.prototype.resumeTracking = function resumeTracking() {
    BaseSurface.prototype.resumeTracking.call(this);
    if (!this.ba) {
      this.ba = new shapes_quad_tree_default();
      var childNodes = this.J.childNodes;
      var rootElements = [];
      for (var idx = 0; idx < childNodes.length; idx++) {
        rootElements.push(childNodes[idx].srcElement);
      }
      this.ba.add(rootElements);
    }
  };
  Surface5.prototype.Db = function _resize() {
    this.oa.width = this.Ca.width;
    this.oa.height = this.Ca.height;
    this.J.size = this.Ca;
    this.J.invalidate();
  };
  Surface5.prototype.Eb = function _template() {
    return "<canvas></canvas>";
  };
  Surface5.prototype.nc = function _enableTracking() {
    this.ba = new shapes_quad_tree_default();
    this.jb = new surface_cursor_default(this);
    BaseSurface.prototype.nc.call(this);
  };
  Surface5.prototype.ee = function _trackMouse(e) {
    if (this.pc) {
      return;
    }
    var shape19 = this.eventTarget(e);
    if (e.type !== "click") {
      var currentShape = this.fe;
      if (currentShape && currentShape !== shape19) {
        this.trigger("mouseleave", {
          element: currentShape,
          originalEvent: e,
          type: "mouseleave"
        });
      }
      if (shape19 && currentShape !== shape19) {
        this.trigger("mouseenter", {
          element: shape19,
          originalEvent: e,
          type: "mouseenter"
        });
      }
      this.trigger("mousemove", {
        element: shape19,
        originalEvent: e,
        type: "mousemove"
      });
      this.fe = shape19;
    } else if (shape19) {
      this.trigger("click", {
        element: shape19,
        originalEvent: e,
        type: "click"
      });
    }
  };
  Object.defineProperties(Surface5.prototype, prototypeAccessors);
  return Surface5;
}(surface_default);
var surface_default3 = Surface3;

// node_modules/@progress/kendo-drawing/dist/es/surface-factory.js
var instance3;
var support2;
var hasDocument = function() {
  return typeof document !== "undefined";
};
var supportsCanvas = function() {
  return hasDocument() && document.createElement("canvas").getContext;
};
var supportsSVG = function() {
  return hasDocument() && document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1");
};
var SurfaceFactory = function(Class3) {
  function SurfaceFactory2() {
    Class3.call(this);
    this.zb = [{
      name: "svg",
      type: surface_default2
    }, {
      name: "canvas",
      type: surface_default3
    }];
  }
  if (Class3)
    SurfaceFactory2.__proto__ = Class3;
  SurfaceFactory2.prototype = Object.create(Class3 && Class3.prototype);
  SurfaceFactory2.prototype.constructor = SurfaceFactory2;
  var staticAccessors = { support: { configurable: true }, current: { configurable: true } };
  staticAccessors.support.get = function() {
    if (!support2) {
      support2 = {
        canvas: supportsCanvas(),
        svg: supportsSVG()
      };
    }
    return support2;
  };
  staticAccessors.current.get = function() {
    if (!instance3) {
      instance3 = new SurfaceFactory2();
    }
    return instance3;
  };
  SurfaceFactory2.prototype.create = function create(element6, options2) {
    var items = this.zb;
    var match = items[0];
    if (options2 && options2.type) {
      var preferred = options2.type.toLowerCase();
      for (var i = 0; i < items.length; i++) {
        if (items[i].name === preferred) {
          match = items[i];
          break;
        }
      }
    }
    if (match) {
      return new match.type(element6, options2);
    }
    logToConsole(
      "Warning: Unable to create Kendo UI Drawing Surface. Possible causes:\n- The browser does not support SVG and Canvas. User agent: " + navigator.userAgent
    );
  };
  Object.defineProperties(SurfaceFactory2, staticAccessors);
  return SurfaceFactory2;
}(class_default);
var surface_factory_default = SurfaceFactory;

// node_modules/@progress/kendo-drawing/dist/es/surface.js
var Surface4 = function(BaseSurface) {
  function Surface5() {
    BaseSurface.apply(this, arguments);
  }
  if (BaseSurface)
    Surface5.__proto__ = BaseSurface;
  Surface5.prototype = Object.create(BaseSurface && BaseSurface.prototype);
  Surface5.prototype.constructor = Surface5;
  var staticAccessors = { support: { configurable: true } };
  staticAccessors.support.get = function() {
    return surface_factory_default.support;
  };
  Surface5.create = function create(element6, options2) {
    return surface_factory_default.current.create(element6, options2);
  };
  Object.defineProperties(Surface5, staticAccessors);
  return Surface5;
}(surface_default);
var surface_default4 = Surface4;

// node_modules/@progress/kendo-drawing/dist/es/svg.js
var svg_exports = {};
__export(svg_exports, {
  ArcNode: () => arc_node_default,
  CircleNode: () => circle_node_default,
  ClipNode: () => clip_node_default,
  DefinitionNode: () => definition_node_default,
  GradientStopNode: () => gradient_stop_node_default,
  GroupNode: () => group_node_default,
  ImageNode: () => image_node_default,
  LinearGradientNode: () => linear_gradient_node_default,
  MultiPathNode: () => multi_path_node_default,
  Node: () => node_default,
  PathNode: () => path_node_default,
  RadialGradientNode: () => radial_gradient_node_default,
  RectNode: () => rect_node_default,
  RootNode: () => root_node_default,
  Surface: () => surface_default2,
  TextNode: () => text_node_default,
  exportGroup: () => exportGroup
});

// node_modules/@progress/kendo-drawing/dist/es/svg/export-group.js
function exportGroup(group2) {
  var root = new root_node_default({
    skipBaseHref: true
  });
  var bbox = group2.clippedBBox();
  var rootGroup = group2;
  if (bbox) {
    var origin = bbox.getOrigin();
    var exportRoot = new group_default();
    exportRoot.transform(transform().translate(-origin.x, -origin.y));
    exportRoot.children.push(group2);
    rootGroup = exportRoot;
  }
  root.load([rootGroup]);
  var svg = "<?xml version='1.0' ?><svg xmlns='" + SVG_NS + "' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1'>" + root.render() + "</svg>";
  root.destroy();
  return svg;
}

// node_modules/@progress/kendo-drawing/dist/es/canvas.js
var canvas_exports = {};
__export(canvas_exports, {
  ArcNode: () => arc_node_default2,
  CircleNode: () => circle_node_default2,
  GroupNode: () => group_node_default2,
  ImageNode: () => image_node_default2,
  MultiPathNode: () => multi_path_node_default2,
  Node: () => node_default2,
  PathNode: () => path_node_default2,
  RectNode: () => rect_node_default2,
  RootNode: () => root_node_default2,
  Surface: () => surface_default3,
  TextNode: () => text_node_default2
});

// node_modules/@progress/kendo-drawing/dist/es/canvas/export-image.js
function exportImage(group2, options2) {
  var defaults = {
    width: "800px",
    height: "600px",
    cors: "Anonymous"
  };
  var exportRoot = group2;
  var bbox = group2.clippedBBox();
  if (bbox) {
    var origin = bbox.getOrigin();
    exportRoot = new group_default();
    exportRoot.transform(transform().translate(-origin.x, -origin.y));
    exportRoot.children.push(group2);
    var size = bbox.getSize();
    defaults.width = size.width + "px";
    defaults.height = size.height + "px";
  }
  var surfaceOptions = Object.assign(defaults, options2);
  var container = document.createElement("div");
  var style = container.style;
  style.display = "none";
  style.width = surfaceOptions.width;
  style.height = surfaceOptions.height;
  document.body.appendChild(container);
  var surface = new surface_default3(container, surfaceOptions);
  surface.suspendTracking();
  surface.draw(exportRoot);
  var promise = surface.image();
  var destroy2 = function() {
    surface.destroy();
    document.body.removeChild(container);
  };
  promise.then(destroy2, destroy2);
  return promise;
}

// node_modules/@progress/kendo-drawing/dist/es/svg/export-svg.js
function exportSVG(group2, options2) {
  var svg = exportGroup(group2);
  if (!options2 || !options2.raw) {
    svg = "data:image/svg+xml;base64," + encodeBase64(svg);
  }
  return createPromise().resolve(svg);
}

// node_modules/@progress/kendo-drawing/dist/es/pdf.js
var pdf_exports = {};
__export(pdf_exports, {
  BinaryStream: () => BinaryStream,
  Document: () => PDFDocument,
  TEXT_RENDERING_MODE: () => TEXT_RENDERING_MODE,
  clearImageCache: () => clearImageCache,
  defineFont: () => defineFont,
  exportPDF: () => exportPDF,
  exportPDFToBlob: () => exportPDFToBlob,
  getFontURL: () => getFontURL,
  getPaperOptions: () => getPaperOptions,
  loadFonts: () => loadFonts,
  loadImages: () => loadImages,
  parseFontDef: () => parseFontDef,
  render: () => render4,
  saveAs: () => saveAs2,
  toBlob: () => toBlob,
  toDataURL: () => toDataURL
});

// node_modules/@progress/kendo-drawing/dist/es/pdf/utils.js
var HAS_TYPED_ARRAYS = typeof Uint8Array !== "undefined" && support_default.browser && (!support_default.browser.msie || support_default.browser.version > 9);
var BASE64 = function() {
  var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
  return {
    decode: function(str) {
      var input = str.replace(/[^A-Za-z0-9\+\/\=]/g, ""), i = 0, n = input.length, output = [];
      while (i < n) {
        var enc1 = keyStr.indexOf(input.charAt(i++));
        var enc2 = keyStr.indexOf(input.charAt(i++));
        var enc3 = keyStr.indexOf(input.charAt(i++));
        var enc4 = keyStr.indexOf(input.charAt(i++));
        var chr1 = enc1 << 2 | enc2 >>> 4;
        var chr2 = (enc2 & 15) << 4 | enc3 >>> 2;
        var chr3 = (enc3 & 3) << 6 | enc4;
        output.push(chr1);
        if (enc3 != 64) {
          output.push(chr2);
        }
        if (enc4 != 64) {
          output.push(chr3);
        }
      }
      return output;
    },
    encode: function(bytes) {
      var i = 0, n = bytes.length;
      var output = "";
      while (i < n) {
        var chr1 = bytes[i++];
        var chr2 = bytes[i++];
        var chr3 = bytes[i++];
        var enc1 = chr1 >>> 2;
        var enc2 = (chr1 & 3) << 4 | chr2 >>> 4;
        var enc3 = (chr2 & 15) << 2 | chr3 >>> 6;
        var enc4 = chr3 & 63;
        if (i - n == 2) {
          enc3 = enc4 = 64;
        } else if (i - n == 1) {
          enc4 = 64;
        }
        output += keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);
      }
      return output;
    }
  };
}();
function BinaryStream(data2) {
  var offset4 = 0, length = 0;
  if (data2 == null) {
    data2 = HAS_TYPED_ARRAYS ? new Uint8Array(256) : [];
  } else {
    length = data2.length;
  }
  var ensure = HAS_TYPED_ARRAYS ? function(len) {
    if (len >= data2.length) {
      var tmp = new Uint8Array(Math.max(len + 256, data2.length * 2));
      tmp.set(data2, 0);
      data2 = tmp;
    }
  } : function() {
  };
  var get = HAS_TYPED_ARRAYS ? function() {
    return new Uint8Array(data2.buffer, 0, length);
  } : function() {
    return data2;
  };
  var write = HAS_TYPED_ARRAYS ? function(bytes) {
    if (typeof bytes == "string") {
      return writeString(bytes);
    }
    var len = bytes.length;
    ensure(offset4 + len);
    data2.set(bytes, offset4);
    offset4 += len;
    if (offset4 > length) {
      length = offset4;
    }
  } : function(bytes) {
    if (typeof bytes == "string") {
      return writeString(bytes);
    }
    for (var i = 0; i < bytes.length; ++i) {
      writeByte(bytes[i]);
    }
  };
  var slice2 = HAS_TYPED_ARRAYS ? function(start2, length2) {
    if (data2.buffer.slice) {
      return new Uint8Array(data2.buffer.slice(start2, start2 + length2));
    } else {
      var x = new Uint8Array(length2);
      x.set(new Uint8Array(data2.buffer, start2, length2));
      return x;
    }
  } : function(start2, length2) {
    return data2.slice(start2, start2 + length2);
  };
  function eof() {
    return offset4 >= length;
  }
  function readByte() {
    return offset4 < length ? data2[offset4++] : 0;
  }
  function writeByte(b) {
    ensure(offset4);
    data2[offset4++] = b & 255;
    if (offset4 > length) {
      length = offset4;
    }
  }
  function readShort() {
    return readByte() << 8 | readByte();
  }
  function writeShort(w) {
    writeByte(w >> 8);
    writeByte(w);
  }
  function readShort_() {
    var w = readShort();
    return w >= 32768 ? w - 65536 : w;
  }
  function writeShort_(w) {
    writeShort(w < 0 ? w + 65536 : w);
  }
  function readLong() {
    return readShort() * 65536 + readShort();
  }
  function writeLong(w) {
    writeShort(w >>> 16 & 65535);
    writeShort(w & 65535);
  }
  function readLong_() {
    var w = readLong();
    return w >= 2147483648 ? w - 4294967296 : w;
  }
  function writeLong_(w) {
    writeLong(w < 0 ? w + 4294967296 : w);
  }
  function readFixed() {
    return readLong() / 65536;
  }
  function writeFixed(f) {
    writeLong(Math.round(f * 65536));
  }
  function readFixed_() {
    return readLong_() / 65536;
  }
  function writeFixed_(f) {
    writeLong_(Math.round(f * 65536));
  }
  function read(len) {
    return times(len, readByte);
  }
  function readString(len) {
    return String.fromCharCode.apply(String, read(len));
  }
  function writeString(str) {
    for (var i = 0; i < str.length; ++i) {
      writeByte(str.charCodeAt(i));
    }
  }
  function times(n, reader) {
    for (var ret = new Array(n), i = 0; i < n; ++i) {
      ret[i] = reader();
    }
    return ret;
  }
  var stream2 = {
    eof,
    readByte,
    writeByte,
    readShort,
    writeShort,
    readLong,
    writeLong,
    readFixed,
    writeFixed,
    // signed numbers.
    readShort_,
    writeShort_,
    readLong_,
    writeLong_,
    readFixed_,
    writeFixed_,
    read,
    write,
    readString,
    writeString,
    times,
    get,
    slice: slice2,
    offset: function(pos) {
      if (pos != null) {
        offset4 = pos;
        return stream2;
      }
      return offset4;
    },
    skip: function(nbytes) {
      offset4 += nbytes;
    },
    toString: function() {
      throw new Error("FIX CALLER.  BinaryStream is no longer convertible to string!");
    },
    length: function() {
      return length;
    },
    saveExcursion: function(f) {
      var pos = offset4;
      try {
        return f();
      } finally {
        offset4 = pos;
      }
    },
    writeBase64: function(base64) {
      if (window.atob) {
        writeString(window.atob(base64));
      } else {
        write(BASE64.decode(base64));
      }
    },
    base64: function() {
      return BASE64.encode(get());
    }
  };
  return stream2;
}
function ucs2decode(string66) {
  var output = [], counter = 0, length = string66.length, value2, extra;
  while (counter < length) {
    value2 = string66.charCodeAt(counter++);
    if (value2 >= 55296 && value2 <= 56319 && counter < length) {
      extra = string66.charCodeAt(counter++);
      if ((extra & 64512) == 56320) {
        output.push(((value2 & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value2);
        counter--;
      }
    } else {
      output.push(value2);
    }
  }
  return output;
}
function ucs2encode(array7) {
  return array7.map(function(value2) {
    var output = "";
    if (value2 > 65535) {
      value2 -= 65536;
      output += String.fromCharCode(value2 >>> 10 & 1023 | 55296);
      value2 = 56320 | value2 & 1023;
    }
    output += String.fromCharCode(value2);
    return output;
  }).join("");
}
function atobUint8Array(base64) {
  var data2 = window.atob(base64);
  var result = new Uint8Array(data2.length);
  for (var idx = 0; idx < data2.length; idx++) {
    result[idx] = data2.charCodeAt(idx);
  }
  return result;
}
function createUint8Array(data2) {
  var result = new Uint8Array(data2.length);
  for (var idx = 0; idx < data2.length; idx++) {
    result[idx] = data2[idx];
  }
  return result;
}
function base64ToUint8Array(base64) {
  if (window.atob) {
    return atobUint8Array(base64);
  }
  return createUint8Array(BASE64.decode(base64));
}

// node_modules/@progress/kendo-drawing/dist/es/pdf/ttf.js
function hasOwnProperty(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}
function sortedKeys(obj) {
  return Object.keys(obj).sort(function(a, b) {
    return a - b;
  }).map(parseFloat);
}
var Directory = function Directory2(data2) {
  this.raw = data2;
  this.scalerType = data2.readLong();
  this.tableCount = data2.readShort();
  this.searchRange = data2.readShort();
  this.entrySelector = data2.readShort();
  this.rangeShift = data2.readShort();
  var tables = this.tables = {};
  for (var i = 0; i < this.tableCount; ++i) {
    var entry = {
      tag: data2.readString(4),
      checksum: data2.readLong(),
      offset: data2.readLong(),
      length: data2.readLong()
    };
    tables[entry.tag] = entry;
  }
};
Directory.prototype.readTable = function readTable(name2, Ctor) {
  var def = this.tables[name2];
  if (!def) {
    throw new Error("Table " + name2 + " not found in directory");
  }
  return this[name2] = def.table = new Ctor(this, def);
};
Directory.prototype.render = function render2(tables) {
  var this$1 = this;
  var tableCount = Object.keys(tables).length;
  var maxpow2 = Math.pow(2, Math.floor(Math.log(tableCount) / Math.LN2));
  var searchRange = maxpow2 * 16;
  var entrySelector = Math.floor(Math.log(maxpow2) / Math.LN2);
  var rangeShift = tableCount * 16 - searchRange;
  var out = BinaryStream();
  out.writeLong(this.scalerType);
  out.writeShort(tableCount);
  out.writeShort(searchRange);
  out.writeShort(entrySelector);
  out.writeShort(rangeShift);
  var directoryLength = tableCount * 16;
  var offset4 = out.offset() + directoryLength;
  var headOffset = null;
  var tableData = BinaryStream();
  for (var tag in tables) {
    if (hasOwnProperty(tables, tag)) {
      var table = tables[tag];
      out.writeString(tag);
      out.writeLong(this$1.checksum(table));
      out.writeLong(offset4);
      out.writeLong(table.length);
      tableData.write(table);
      if (tag == "head") {
        headOffset = offset4;
      }
      offset4 += table.length;
      while (offset4 % 4) {
        tableData.writeByte(0);
        offset4++;
      }
    }
  }
  out.write(tableData.get());
  var sum = this.checksum(out.get());
  var adjustment = 2981146554 - sum;
  out.offset(headOffset + 8);
  out.writeLong(adjustment);
  return out.get();
};
Directory.prototype.checksum = function checksum(data2) {
  data2 = BinaryStream(data2);
  var sum = 0;
  while (!data2.eof()) {
    sum += data2.readLong();
  }
  return sum & 4294967295;
};
var Table = function Table2(file, def) {
  this.definition = def;
  this.length = def.length;
  this.offset = def.offset;
  this.file = file;
  this.rawData = file.raw;
  this.parse(file.raw);
};
Table.prototype.raw = function raw() {
  return this.rawData.slice(this.offset, this.length);
};
Table.prototype.parse = function parse() {
};
var HeadTable = function(Table3) {
  function HeadTable2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    HeadTable2.__proto__ = Table3;
  HeadTable2.prototype = Object.create(Table3 && Table3.prototype);
  HeadTable2.prototype.constructor = HeadTable2;
  HeadTable2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    this.version = data2.readLong();
    this.revision = data2.readLong();
    this.checkSumAdjustment = data2.readLong();
    this.magicNumber = data2.readLong();
    this.flags = data2.readShort();
    this.unitsPerEm = data2.readShort();
    this.created = data2.read(8);
    this.modified = data2.read(8);
    this.xMin = data2.readShort_();
    this.yMin = data2.readShort_();
    this.xMax = data2.readShort_();
    this.yMax = data2.readShort_();
    this.macStyle = data2.readShort();
    this.lowestRecPPEM = data2.readShort();
    this.fontDirectionHint = data2.readShort_();
    this.indexToLocFormat = data2.readShort_();
    this.glyphDataFormat = data2.readShort_();
  };
  HeadTable2.prototype.render = function render5(indexToLocFormat) {
    var out = BinaryStream();
    out.writeLong(this.version);
    out.writeLong(this.revision);
    out.writeLong(0);
    out.writeLong(this.magicNumber);
    out.writeShort(this.flags);
    out.writeShort(this.unitsPerEm);
    out.write(this.created);
    out.write(this.modified);
    out.writeShort_(this.xMin);
    out.writeShort_(this.yMin);
    out.writeShort_(this.xMax);
    out.writeShort_(this.yMax);
    out.writeShort(this.macStyle);
    out.writeShort(this.lowestRecPPEM);
    out.writeShort_(this.fontDirectionHint);
    out.writeShort_(indexToLocFormat);
    out.writeShort_(this.glyphDataFormat);
    return out.get();
  };
  return HeadTable2;
}(Table);
var LocaTable = function(Table3) {
  function LocaTable2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    LocaTable2.__proto__ = Table3;
  LocaTable2.prototype = Object.create(Table3 && Table3.prototype);
  LocaTable2.prototype.constructor = LocaTable2;
  LocaTable2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    var format3 = this.file.head.indexToLocFormat;
    if (format3 === 0) {
      this.offsets = data2.times(this.length / 2, function() {
        return 2 * data2.readShort();
      });
    } else {
      this.offsets = data2.times(this.length / 4, data2.readLong);
    }
  };
  LocaTable2.prototype.offsetOf = function offsetOf(id) {
    return this.offsets[id];
  };
  LocaTable2.prototype.lengthOf = function lengthOf(id) {
    return this.offsets[id + 1] - this.offsets[id];
  };
  LocaTable2.prototype.render = function render5(offsets) {
    var out = BinaryStream();
    var needsLongFormat = offsets[offsets.length - 1] > 65535;
    for (var i = 0; i < offsets.length; ++i) {
      if (needsLongFormat) {
        out.writeLong(offsets[i]);
      } else {
        out.writeShort(offsets[i] / 2);
      }
    }
    return {
      format: needsLongFormat ? 1 : 0,
      table: out.get()
    };
  };
  return LocaTable2;
}(Table);
var HheaTable = function(Table3) {
  function HheaTable2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    HheaTable2.__proto__ = Table3;
  HheaTable2.prototype = Object.create(Table3 && Table3.prototype);
  HheaTable2.prototype.constructor = HheaTable2;
  HheaTable2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    this.version = data2.readLong();
    this.ascent = data2.readShort_();
    this.descent = data2.readShort_();
    this.lineGap = data2.readShort_();
    this.advanceWidthMax = data2.readShort();
    this.minLeftSideBearing = data2.readShort_();
    this.minRightSideBearing = data2.readShort_();
    this.xMaxExtent = data2.readShort_();
    this.caretSlopeRise = data2.readShort_();
    this.caretSlopeRun = data2.readShort_();
    this.caretOffset = data2.readShort_();
    data2.skip(4 * 2);
    this.metricDataFormat = data2.readShort_();
    this.numOfLongHorMetrics = data2.readShort();
  };
  HheaTable2.prototype.render = function render5(ids) {
    var out = BinaryStream();
    out.writeLong(this.version);
    out.writeShort_(this.ascent);
    out.writeShort_(this.descent);
    out.writeShort_(this.lineGap);
    out.writeShort(this.advanceWidthMax);
    out.writeShort_(this.minLeftSideBearing);
    out.writeShort_(this.minRightSideBearing);
    out.writeShort_(this.xMaxExtent);
    out.writeShort_(this.caretSlopeRise);
    out.writeShort_(this.caretSlopeRun);
    out.writeShort_(this.caretOffset);
    out.write([0, 0, 0, 0, 0, 0, 0, 0]);
    out.writeShort_(this.metricDataFormat);
    out.writeShort(ids.length);
    return out.get();
  };
  return HheaTable2;
}(Table);
var MaxpTable = function(Table3) {
  function MaxpTable2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    MaxpTable2.__proto__ = Table3;
  MaxpTable2.prototype = Object.create(Table3 && Table3.prototype);
  MaxpTable2.prototype.constructor = MaxpTable2;
  MaxpTable2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    this.version = data2.readLong();
    this.numGlyphs = data2.readShort();
    this.maxPoints = data2.readShort();
    this.maxContours = data2.readShort();
    this.maxComponentPoints = data2.readShort();
    this.maxComponentContours = data2.readShort();
    this.maxZones = data2.readShort();
    this.maxTwilightPoints = data2.readShort();
    this.maxStorage = data2.readShort();
    this.maxFunctionDefs = data2.readShort();
    this.maxInstructionDefs = data2.readShort();
    this.maxStackElements = data2.readShort();
    this.maxSizeOfInstructions = data2.readShort();
    this.maxComponentElements = data2.readShort();
    this.maxComponentDepth = data2.readShort();
  };
  MaxpTable2.prototype.render = function render5(glyphIds2) {
    var out = BinaryStream();
    out.writeLong(this.version);
    out.writeShort(glyphIds2.length);
    out.writeShort(this.maxPoints);
    out.writeShort(this.maxContours);
    out.writeShort(this.maxComponentPoints);
    out.writeShort(this.maxComponentContours);
    out.writeShort(this.maxZones);
    out.writeShort(this.maxTwilightPoints);
    out.writeShort(this.maxStorage);
    out.writeShort(this.maxFunctionDefs);
    out.writeShort(this.maxInstructionDefs);
    out.writeShort(this.maxStackElements);
    out.writeShort(this.maxSizeOfInstructions);
    out.writeShort(this.maxComponentElements);
    out.writeShort(this.maxComponentDepth);
    return out.get();
  };
  return MaxpTable2;
}(Table);
var HmtxTable = function(Table3) {
  function HmtxTable2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    HmtxTable2.__proto__ = Table3;
  HmtxTable2.prototype = Object.create(Table3 && Table3.prototype);
  HmtxTable2.prototype.constructor = HmtxTable2;
  HmtxTable2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    var dir = this.file, hhea = dir.hhea;
    this.metrics = data2.times(hhea.numOfLongHorMetrics, function() {
      return {
        advance: data2.readShort(),
        lsb: data2.readShort_()
      };
    });
    var lsbCount = dir.maxp.numGlyphs - dir.hhea.numOfLongHorMetrics;
    this.leftSideBearings = data2.times(lsbCount, data2.readShort_);
  };
  HmtxTable2.prototype.forGlyph = function forGlyph(id) {
    var metrics = this.metrics;
    var n = metrics.length;
    if (id < n) {
      return metrics[id];
    }
    return {
      advance: metrics[n - 1].advance,
      lsb: this.leftSideBearings[id - n]
    };
  };
  HmtxTable2.prototype.render = function render5(glyphIds2) {
    var this$1 = this;
    var out = BinaryStream();
    for (var i = 0; i < glyphIds2.length; ++i) {
      var m = this$1.forGlyph(glyphIds2[i]);
      out.writeShort(m.advance);
      out.writeShort_(m.lsb);
    }
    return out.get();
  };
  return HmtxTable2;
}(Table);
var GlyfTable = function() {
  var SimpleGlyph = function SimpleGlyph2(raw2) {
    this.raw = raw2;
  };
  var prototypeAccessors = { compound: { configurable: true } };
  prototypeAccessors.compound.get = function() {
    return false;
  };
  SimpleGlyph.prototype.render = function render5() {
    return this.raw.get();
  };
  Object.defineProperties(SimpleGlyph.prototype, prototypeAccessors);
  var ARG_1_AND_2_ARE_WORDS = 1;
  var WE_HAVE_A_SCALE = 8;
  var MORE_COMPONENTS = 32;
  var WE_HAVE_AN_X_AND_Y_SCALE = 64;
  var WE_HAVE_A_TWO_BY_TWO = 128;
  var CompoundGlyph = function CompoundGlyph2(data2) {
    this.raw = data2;
    var ids = this.glyphIds = [];
    var offsets = this.idOffsets = [];
    while (true) {
      var flags = data2.readShort();
      offsets.push(data2.offset());
      ids.push(data2.readShort());
      if (!(flags & MORE_COMPONENTS)) {
        break;
      }
      data2.skip(flags & ARG_1_AND_2_ARE_WORDS ? 4 : 2);
      if (flags & WE_HAVE_A_TWO_BY_TWO) {
        data2.skip(8);
      } else if (flags & WE_HAVE_AN_X_AND_Y_SCALE) {
        data2.skip(4);
      } else if (flags & WE_HAVE_A_SCALE) {
        data2.skip(2);
      }
    }
  };
  var prototypeAccessors$1 = { compound: { configurable: true } };
  prototypeAccessors$1.compound.get = function() {
    return true;
  };
  CompoundGlyph.prototype.render = function render5(old2new) {
    var this$1 = this;
    var out = BinaryStream(this.raw.get());
    for (var i = 0; i < this.glyphIds.length; ++i) {
      var id = this$1.glyphIds[i];
      out.offset(this$1.idOffsets[i]);
      out.writeShort(old2new[id]);
    }
    return out.get();
  };
  Object.defineProperties(CompoundGlyph.prototype, prototypeAccessors$1);
  return function(Table3) {
    function anonymous() {
      Table3.apply(this, arguments);
    }
    if (Table3)
      anonymous.__proto__ = Table3;
    anonymous.prototype = Object.create(Table3 && Table3.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.parse = function parse3() {
      this.cache = {};
    };
    anonymous.prototype.glyphFor = function glyphFor(id) {
      var cache2 = this.cache;
      if (hasOwnProperty(cache2, id)) {
        return cache2[id];
      }
      var loca = this.file.loca;
      var length = loca.lengthOf(id);
      if (length === 0) {
        return cache2[id] = null;
      }
      var data2 = this.rawData;
      var offset4 = this.offset + loca.offsetOf(id);
      var raw2 = BinaryStream(data2.slice(offset4, length));
      var numberOfContours = raw2.readShort_();
      var xMin = raw2.readShort_();
      var yMin = raw2.readShort_();
      var xMax = raw2.readShort_();
      var yMax = raw2.readShort_();
      var glyph = cache2[id] = numberOfContours < 0 ? new CompoundGlyph(raw2) : new SimpleGlyph(raw2);
      glyph.numberOfContours = numberOfContours;
      glyph.xMin = xMin;
      glyph.yMin = yMin;
      glyph.xMax = xMax;
      glyph.yMax = yMax;
      return glyph;
    };
    anonymous.prototype.render = function render5(glyphs, oldIds, old2new) {
      var out = BinaryStream(), offsets = [];
      for (var i = 0; i < oldIds.length; ++i) {
        var id = oldIds[i];
        var glyph = glyphs[id];
        if (out.offset() % 2) {
          out.writeByte(0);
        }
        offsets.push(out.offset());
        if (glyph) {
          out.write(glyph.render(old2new));
        }
      }
      if (out.offset() % 2) {
        out.writeByte(0);
      }
      offsets.push(out.offset());
      return {
        table: out.get(),
        offsets
      };
    };
    return anonymous;
  }(Table);
}();
var NameTable = function() {
  var NameEntry = function NameEntry2(text, entry) {
    this.text = text;
    this.length = text.length;
    this.platformID = entry.platformID;
    this.platformSpecificID = entry.platformSpecificID;
    this.languageID = entry.languageID;
    this.nameID = entry.nameID;
  };
  return function(Table3) {
    function anonymous() {
      Table3.apply(this, arguments);
    }
    if (Table3)
      anonymous.__proto__ = Table3;
    anonymous.prototype = Object.create(Table3 && Table3.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.parse = function parse3(data2) {
      data2.offset(this.offset);
      data2.readShort();
      var count2 = data2.readShort();
      var stringOffset = this.offset + data2.readShort();
      var nameRecords = data2.times(count2, function() {
        return {
          platformID: data2.readShort(),
          platformSpecificID: data2.readShort(),
          languageID: data2.readShort(),
          nameID: data2.readShort(),
          length: data2.readShort(),
          offset: data2.readShort() + stringOffset
        };
      });
      var strings = this.strings = {};
      for (var i = 0; i < nameRecords.length; ++i) {
        var rec = nameRecords[i];
        data2.offset(rec.offset);
        var text = data2.readString(rec.length);
        if (!strings[rec.nameID]) {
          strings[rec.nameID] = [];
        }
        strings[rec.nameID].push(new NameEntry(text, rec));
      }
      this.postscriptEntry = strings[6][0];
      this.postscriptName = this.postscriptEntry.text.replace(/[^\x20-\x7F]/g, "");
    };
    anonymous.prototype.render = function render5(psName) {
      var this$1 = this;
      var strings = this.strings;
      var strCount = 0;
      for (var i in strings) {
        if (hasOwnProperty(strings, i)) {
          strCount += strings[i].length;
        }
      }
      var out = BinaryStream();
      var strTable = BinaryStream();
      out.writeShort(0);
      out.writeShort(strCount);
      out.writeShort(6 + 12 * strCount);
      for (i in strings) {
        if (hasOwnProperty(strings, i)) {
          var list = i == 6 ? [
            new NameEntry(psName, this$1.postscriptEntry)
          ] : strings[i];
          for (var j = 0; j < list.length; ++j) {
            var str = list[j];
            out.writeShort(str.platformID);
            out.writeShort(str.platformSpecificID);
            out.writeShort(str.languageID);
            out.writeShort(str.nameID);
            out.writeShort(str.length);
            out.writeShort(strTable.offset());
            strTable.writeString(str.text);
          }
        }
      }
      out.write(strTable.get());
      return out.get();
    };
    return anonymous;
  }(Table);
}();
var PostTable = function() {
  var POSTSCRIPT_GLYPHS = ".notdef .null nonmarkingreturn space exclam quotedbl numbersign dollar percent ampersand quotesingle parenleft parenright asterisk plus comma hyphen period slash zero one two three four five six seven eight nine colon semicolon less equal greater question at A B C D E F G H I J K L M N O P Q R S T U V W X Y Z bracketleft backslash bracketright asciicircum underscore grave a b c d e f g h i j k l m n o p q r s t u v w x y z braceleft bar braceright asciitilde Adieresis Aring Ccedilla Eacute Ntilde Odieresis Udieresis aacute agrave acircumflex adieresis atilde aring ccedilla eacute egrave ecircumflex edieresis iacute igrave icircumflex idieresis ntilde oacute ograve ocircumflex odieresis otilde uacute ugrave ucircumflex udieresis dagger degree cent sterling section bullet paragraph germandbls registered copyright trademark acute dieresis notequal AE Oslash infinity plusminus lessequal greaterequal yen mu partialdiff summation product pi integral ordfeminine ordmasculine Omega ae oslash questiondown exclamdown logicalnot radical florin approxequal Delta guillemotleft guillemotright ellipsis nonbreakingspace Agrave Atilde Otilde OE oe endash emdash quotedblleft quotedblright quoteleft quoteright divide lozenge ydieresis Ydieresis fraction currency guilsinglleft guilsinglright fi fl daggerdbl periodcentered quotesinglbase quotedblbase perthousand Acircumflex Ecircumflex Aacute Edieresis Egrave Iacute Icircumflex Idieresis Igrave Oacute Ocircumflex apple Ograve Uacute Ucircumflex Ugrave dotlessi circumflex tilde macron breve dotaccent ring cedilla hungarumlaut ogonek caron Lslash lslash Scaron scaron Zcaron zcaron brokenbar Eth eth Yacute yacute Thorn thorn minus multiply onesuperior twosuperior threesuperior onehalf onequarter threequarters franc Gbreve gbreve Idotaccent Scedilla scedilla Cacute cacute Ccaron ccaron dcroat".split(/\s+/g);
  return function(Table3) {
    function anonymous() {
      Table3.apply(this, arguments);
    }
    if (Table3)
      anonymous.__proto__ = Table3;
    anonymous.prototype = Object.create(Table3 && Table3.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.parse = function parse3(data2) {
      var this$1 = this;
      data2.offset(this.offset);
      this.format = data2.readLong();
      this.italicAngle = data2.readFixed_();
      this.underlinePosition = data2.readShort_();
      this.underlineThickness = data2.readShort_();
      this.isFixedPitch = data2.readLong();
      this.minMemType42 = data2.readLong();
      this.maxMemType42 = data2.readLong();
      this.minMemType1 = data2.readLong();
      this.maxMemType1 = data2.readLong();
      var numberOfGlyphs;
      switch (this.format) {
        case 65536:
        case 196608:
          break;
        case 131072:
          numberOfGlyphs = data2.readShort();
          this.glyphNameIndex = data2.times(numberOfGlyphs, data2.readShort);
          this.names = [];
          var limit5 = this.offset + this.length;
          while (data2.offset() < limit5) {
            this$1.names.push(data2.readString(data2.readByte()));
          }
          break;
        case 151552:
          numberOfGlyphs = data2.readShort();
          this.offsets = data2.read(numberOfGlyphs);
          break;
        case 262144:
          this.map = data2.times(this.file.maxp.numGlyphs, data2.readShort);
          break;
      }
    };
    anonymous.prototype.glyphFor = function glyphFor(code) {
      switch (this.format) {
        case 65536:
          return POSTSCRIPT_GLYPHS[code] || ".notdef";
        case 131072:
          var index = this.glyphNameIndex[code];
          if (index < POSTSCRIPT_GLYPHS.length) {
            return POSTSCRIPT_GLYPHS[index];
          }
          return this.names[index - POSTSCRIPT_GLYPHS.length] || ".notdef";
        case 151552:
        case 196608:
          return ".notdef";
        case 262144:
          return this.map[code] || 65535;
      }
    };
    anonymous.prototype.render = function render5(mapping) {
      var this$1 = this;
      if (this.format == 196608) {
        return this.raw();
      }
      var out = BinaryStream(this.rawData.slice(this.offset, 32));
      out.writeLong(131072);
      out.offset(32);
      var indexes = [];
      var strings = [];
      for (var i = 0; i < mapping.length; ++i) {
        var id = mapping[i];
        var post = this$1.glyphFor(id);
        var index = POSTSCRIPT_GLYPHS.indexOf(post);
        if (index >= 0) {
          indexes.push(index);
        } else {
          indexes.push(POSTSCRIPT_GLYPHS.length + strings.length);
          strings.push(post);
        }
      }
      out.writeShort(mapping.length);
      for (i = 0; i < indexes.length; ++i) {
        out.writeShort(indexes[i]);
      }
      for (i = 0; i < strings.length; ++i) {
        out.writeByte(strings[i].length);
        out.writeString(strings[i]);
      }
      return out.get();
    };
    return anonymous;
  }(Table);
}();
var CmapTable = function() {
  var CmapEntry = function CmapEntry2(data2, offset4, codeMap) {
    var self = this;
    self.platformID = data2.readShort();
    self.platformSpecificID = data2.readShort();
    self.offset = offset4 + data2.readLong();
    data2.saveExcursion(function() {
      var code;
      data2.offset(self.offset);
      self.format = data2.readShort();
      switch (self.format) {
        case 0:
          self.length = data2.readShort();
          self.language = data2.readShort();
          for (var i = 0; i < 256; ++i) {
            codeMap[i] = data2.readByte();
          }
          break;
        case 4:
          self.length = data2.readShort();
          self.language = data2.readShort();
          var segCount = data2.readShort() / 2;
          data2.skip(6);
          var endCode = data2.times(segCount, data2.readShort);
          data2.skip(2);
          var startCode = data2.times(segCount, data2.readShort);
          var idDelta = data2.times(segCount, data2.readShort_);
          var idRangeOffset = data2.times(segCount, data2.readShort);
          var count2 = (self.length + self.offset - data2.offset()) / 2;
          var glyphIds2 = data2.times(count2, data2.readShort);
          for (i = 0; i < segCount; ++i) {
            var start2 = startCode[i], end2 = endCode[i];
            for (code = start2; code <= end2; ++code) {
              var glyphId;
              if (idRangeOffset[i] === 0) {
                glyphId = code + idDelta[i];
              } else {
                var index = idRangeOffset[i] / 2 - (segCount - i) + (code - start2);
                glyphId = glyphIds2[index] || 0;
                if (glyphId !== 0) {
                  glyphId += idDelta[i];
                }
              }
              codeMap[code] = glyphId & 65535;
            }
          }
          break;
        case 6:
          self.length = data2.readShort();
          self.language = data2.readShort();
          code = data2.readShort();
          var length = data2.readShort();
          while (length-- > 0) {
            codeMap[code++] = data2.readShort();
          }
          break;
        case 12:
          data2.readShort();
          self.length = data2.readLong();
          self.language = data2.readLong();
          var ngroups = data2.readLong();
          while (ngroups-- > 0) {
            code = data2.readLong();
            var endCharCode = data2.readLong();
            var glyphCode = data2.readLong();
            while (code <= endCharCode) {
              codeMap[code++] = glyphCode++;
            }
          }
          break;
        default:
          if (window.console) {
            window.console.error("Unhandled CMAP format: " + self.format);
          }
      }
    });
  };
  function renderCharmap(ncid2ogid, ogid2ngid) {
    var codes = sortedKeys(ncid2ogid);
    var startCodes = [];
    var endCodes = [];
    var last4 = null;
    var diff = null;
    function new_gid(charcode) {
      return ogid2ngid[ncid2ogid[charcode]];
    }
    for (var i = 0; i < codes.length; ++i) {
      var code = codes[i];
      var gid = new_gid(code);
      var delta = gid - code;
      if (last4 == null || delta !== diff) {
        if (last4) {
          endCodes.push(last4);
        }
        startCodes.push(code);
        diff = delta;
      }
      last4 = code;
    }
    if (last4) {
      endCodes.push(last4);
    }
    endCodes.push(65535);
    startCodes.push(65535);
    var segCount = startCodes.length;
    var segCountX2 = segCount * 2;
    var searchRange = 2 * Math.pow(2, Math.floor(Math.log(segCount) / Math.LN2));
    var entrySelector = Math.log(searchRange / 2) / Math.LN2;
    var rangeShift = segCountX2 - searchRange;
    var deltas = [];
    var rangeOffsets = [];
    var glyphIds2 = [];
    for (i = 0; i < segCount; ++i) {
      var startCode = startCodes[i];
      var endCode = endCodes[i];
      if (startCode == 65535) {
        deltas.push(0);
        rangeOffsets.push(0);
        break;
      }
      var startGlyph = new_gid(startCode);
      if (startCode - startGlyph >= 32768) {
        deltas.push(0);
        rangeOffsets.push(2 * (glyphIds2.length + segCount - i));
        for (var j = startCode; j <= endCode; ++j) {
          glyphIds2.push(new_gid(j));
        }
      } else {
        deltas.push(startGlyph - startCode);
        rangeOffsets.push(0);
      }
    }
    var out = BinaryStream();
    out.writeShort(3);
    out.writeShort(1);
    out.writeLong(12);
    out.writeShort(4);
    out.writeShort(16 + segCount * 8 + glyphIds2.length * 2);
    out.writeShort(0);
    out.writeShort(segCountX2);
    out.writeShort(searchRange);
    out.writeShort(entrySelector);
    out.writeShort(rangeShift);
    endCodes.forEach(out.writeShort);
    out.writeShort(0);
    startCodes.forEach(out.writeShort);
    deltas.forEach(out.writeShort_);
    rangeOffsets.forEach(out.writeShort);
    glyphIds2.forEach(out.writeShort);
    return out.get();
  }
  return function(Table3) {
    function anonymous() {
      Table3.apply(this, arguments);
    }
    if (Table3)
      anonymous.__proto__ = Table3;
    anonymous.prototype = Object.create(Table3 && Table3.prototype);
    anonymous.prototype.constructor = anonymous;
    anonymous.prototype.parse = function parse3(data2) {
      var self = this;
      var offset4 = self.offset;
      data2.offset(offset4);
      self.codeMap = {};
      self.version = data2.readShort();
      var tableCount = data2.readShort();
      self.tables = data2.times(tableCount, function() {
        return new CmapEntry(data2, offset4, self.codeMap);
      });
    };
    anonymous.render = function render5(ncid2ogid, ogid2ngid) {
      var out = BinaryStream();
      out.writeShort(0);
      out.writeShort(1);
      out.write(renderCharmap(ncid2ogid, ogid2ngid));
      return out.get();
    };
    return anonymous;
  }(Table);
}();
var OS2Table = function(Table3) {
  function OS2Table2() {
    Table3.apply(this, arguments);
  }
  if (Table3)
    OS2Table2.__proto__ = Table3;
  OS2Table2.prototype = Object.create(Table3 && Table3.prototype);
  OS2Table2.prototype.constructor = OS2Table2;
  OS2Table2.prototype.parse = function parse3(data2) {
    data2.offset(this.offset);
    this.version = data2.readShort();
    this.averageCharWidth = data2.readShort_();
    this.weightClass = data2.readShort();
    this.widthClass = data2.readShort();
    this.type = data2.readShort();
    this.ySubscriptXSize = data2.readShort_();
    this.ySubscriptYSize = data2.readShort_();
    this.ySubscriptXOffset = data2.readShort_();
    this.ySubscriptYOffset = data2.readShort_();
    this.ySuperscriptXSize = data2.readShort_();
    this.ySuperscriptYSize = data2.readShort_();
    this.ySuperscriptXOffset = data2.readShort_();
    this.ySuperscriptYOffset = data2.readShort_();
    this.yStrikeoutSize = data2.readShort_();
    this.yStrikeoutPosition = data2.readShort_();
    this.familyClass = data2.readShort_();
    this.panose = data2.times(10, data2.readByte);
    this.charRange = data2.times(4, data2.readLong);
    this.vendorID = data2.readString(4);
    this.selection = data2.readShort();
    this.firstCharIndex = data2.readShort();
    this.lastCharIndex = data2.readShort();
    if (this.version > 0) {
      this.ascent = data2.readShort_();
      this.descent = data2.readShort_();
      this.lineGap = data2.readShort_();
      this.winAscent = data2.readShort();
      this.winDescent = data2.readShort();
      this.codePageRange = data2.times(2, data2.readLong);
      if (this.version > 1) {
        this.xHeight = data2.readShort();
        this.capHeight = data2.readShort();
        this.defaultChar = data2.readShort();
        this.breakChar = data2.readShort();
        this.maxContext = data2.readShort();
      }
    }
  };
  OS2Table2.prototype.render = function render5() {
    return this.raw();
  };
  return OS2Table2;
}(Table);
var subsetTag = 1e5;
function nextSubsetTag() {
  var ret = "", n = String(subsetTag);
  for (var i = 0; i < n.length; ++i) {
    ret += String.fromCharCode(n.charCodeAt(i) - 48 + 65);
  }
  ++subsetTag;
  return ret;
}
var Subfont = function Subfont2(font) {
  this.font = font;
  this.subset = {};
  this.unicodes = {};
  this.ogid2ngid = { 0: 0 };
  this.ngid2ogid = { 0: 0 };
  this.ncid2ogid = {};
  this.next = this.firstChar = 1;
  this.nextGid = 1;
  this.psName = nextSubsetTag() + "+" + this.font.psName;
};
Subfont.prototype.use = function use(ch) {
  var self = this;
  if (typeof ch == "string") {
    return ucs2decode(ch).reduce(function(ret, code2) {
      return ret + String.fromCharCode(self.use(code2));
    }, "");
  }
  var code = self.unicodes[ch];
  if (!code) {
    code = self.next++;
    self.subset[code] = ch;
    self.unicodes[ch] = code;
    var old_gid = self.font.cmap.codeMap[ch];
    if (old_gid) {
      self.ncid2ogid[code] = old_gid;
      if (self.ogid2ngid[old_gid] == null) {
        var new_gid = self.nextGid++;
        self.ogid2ngid[old_gid] = new_gid;
        self.ngid2ogid[new_gid] = old_gid;
      }
    }
  }
  return code;
};
Subfont.prototype.encodeText = function encodeText(text) {
  return this.use(text);
};
Subfont.prototype.glyphIds = function glyphIds() {
  return sortedKeys(this.ogid2ngid);
};
Subfont.prototype.glyphsFor = function glyphsFor(glyphIds2, result) {
  var this$1 = this;
  if (!result) {
    result = {};
  }
  for (var i = 0; i < glyphIds2.length; ++i) {
    var id = glyphIds2[i];
    if (!result[id]) {
      var glyph = result[id] = this$1.font.glyf.glyphFor(id);
      if (glyph && glyph.compound) {
        this$1.glyphsFor(glyph.glyphIds, result);
      }
    }
  }
  return result;
};
Subfont.prototype.render = function render3() {
  var this$1 = this;
  var glyphs = this.glyphsFor(this.glyphIds());
  for (var old_gid in glyphs) {
    if (hasOwnProperty(glyphs, old_gid)) {
      old_gid = parseInt(old_gid, 10);
      if (this$1.ogid2ngid[old_gid] == null) {
        var new_gid = this$1.nextGid++;
        this$1.ogid2ngid[old_gid] = new_gid;
        this$1.ngid2ogid[new_gid] = old_gid;
      }
    }
  }
  var new_gid_ids = sortedKeys(this.ngid2ogid);
  var old_gid_ids = new_gid_ids.map(function(id) {
    return this.ngid2ogid[id];
  }, this);
  var font = this.font;
  var glyf = font.glyf.render(glyphs, old_gid_ids, this.ogid2ngid);
  var loca = font.loca.render(glyf.offsets);
  this.lastChar = this.next - 1;
  var tables = {
    "cmap": CmapTable.render(this.ncid2ogid, this.ogid2ngid),
    "glyf": glyf.table,
    "loca": loca.table,
    "hmtx": font.hmtx.render(old_gid_ids),
    "hhea": font.hhea.render(old_gid_ids),
    "maxp": font.maxp.render(old_gid_ids),
    "post": font.post.render(old_gid_ids),
    "name": font.name.render(this.psName),
    "head": font.head.render(loca.format),
    "OS/2": font.os2.render()
  };
  return this.font.directory.render(tables);
};
Subfont.prototype.cidToGidMap = function cidToGidMap() {
  var this$1 = this;
  var out = BinaryStream(), len = 0;
  for (var cid = this.firstChar; cid < this.next; ++cid) {
    while (len < cid) {
      out.writeShort(0);
      len++;
    }
    var old_gid = this$1.ncid2ogid[cid];
    if (old_gid) {
      var new_gid = this$1.ogid2ngid[old_gid];
      out.writeShort(new_gid);
    } else {
      out.writeShort(0);
    }
    len++;
  }
  return out.get();
};
var TTFFont = function TTFFont2(rawData, name2) {
  var self = this;
  var data2 = self.contents = BinaryStream(rawData);
  if (data2.readString(4) == "ttcf") {
    var offset4;
    var parse3 = function() {
      data2.offset(offset4);
      self.parse();
    };
    if (!name2) {
      throw new Error("Must specify a name for TTC files");
    }
    data2.readLong();
    var numFonts = data2.readLong();
    for (var i = 0; i < numFonts; ++i) {
      offset4 = data2.readLong();
      data2.saveExcursion(parse3);
      if (self.psName == name2) {
        return;
      }
    }
    throw new Error("Font " + name2 + " not found in collection");
  } else {
    data2.offset(0);
    self.parse();
  }
};
TTFFont.prototype.parse = function parse2() {
  var dir = this.directory = new Directory(this.contents);
  this.head = dir.readTable("head", HeadTable);
  this.loca = dir.readTable("loca", LocaTable);
  this.hhea = dir.readTable("hhea", HheaTable);
  this.maxp = dir.readTable("maxp", MaxpTable);
  this.hmtx = dir.readTable("hmtx", HmtxTable);
  this.glyf = dir.readTable("glyf", GlyfTable);
  this.name = dir.readTable("name", NameTable);
  this.post = dir.readTable("post", PostTable);
  this.cmap = dir.readTable("cmap", CmapTable);
  this.os2 = dir.readTable("OS/2", OS2Table);
  this.psName = this.name.postscriptName;
  this.ascent = this.os2.ascent || this.hhea.ascent;
  this.descent = this.os2.descent || this.hhea.descent;
  this.lineGap = this.os2.lineGap || this.hhea.lineGap;
  this.scale = 1e3 / this.head.unitsPerEm;
};
TTFFont.prototype.widthOfGlyph = function widthOfGlyph(glyph) {
  return this.hmtx.forGlyph(glyph).advance * this.scale;
};
TTFFont.prototype.makeSubset = function makeSubset() {
  return new Subfont(this);
};

// node_modules/@progress/pako-esm/dist/pako-esm5.js
var Z_NO_FLUSH = 0;
var Z_PARTIAL_FLUSH = 1;
var Z_SYNC_FLUSH = 2;
var Z_FULL_FLUSH = 3;
var Z_FINISH = 4;
var Z_BLOCK = 5;
var Z_TREES = 6;
var Z_OK = 0;
var Z_STREAM_END = 1;
var Z_NEED_DICT = 2;
var Z_ERRNO = -1;
var Z_STREAM_ERROR = -2;
var Z_DATA_ERROR = -3;
var Z_BUF_ERROR = -5;
var Z_NO_COMPRESSION = 0;
var Z_BEST_SPEED = 1;
var Z_BEST_COMPRESSION = 9;
var Z_DEFAULT_COMPRESSION = -1;
var Z_FILTERED = 1;
var Z_HUFFMAN_ONLY = 2;
var Z_RLE = 3;
var Z_FIXED = 4;
var Z_DEFAULT_STRATEGY = 0;
var Z_BINARY = 0;
var Z_TEXT = 1;
var Z_UNKNOWN = 2;
var Z_DEFLATED = 8;
function _has(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}
function assign(obj) {
  var sources = Array.prototype.slice.call(arguments, 1);
  while (sources.length) {
    var source = sources.shift();
    if (!source) {
      continue;
    }
    if (typeof source !== "object") {
      throw new TypeError(source + "must be non-object");
    }
    for (var p in source) {
      if (_has(source, p)) {
        obj[p] = source[p];
      }
    }
  }
  return obj;
}
function shrinkBuf(buf, size) {
  if (buf.length === size) {
    return buf;
  }
  if (buf.subarray) {
    return buf.subarray(0, size);
  }
  buf.length = size;
  return buf;
}
var fnTyped = {
  arraySet: function(dest, src, src_offs, len, dest_offs) {
    if (src.subarray && dest.subarray) {
      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);
      return;
    }
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    var i, l, len, pos, chunk, result;
    len = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      len += chunks[i].length;
    }
    result = new Uint8Array(len);
    pos = 0;
    for (i = 0, l = chunks.length; i < l; i++) {
      chunk = chunks[i];
      result.set(chunk, pos);
      pos += chunk.length;
    }
    return result;
  },
  Buf8: function(size) {
    return new Uint8Array(size);
  },
  Buf16: function(size) {
    return new Uint16Array(size);
  },
  Buf32: function(size) {
    return new Int32Array(size);
  }
};
var fnUntyped = {
  arraySet: function(dest, src, src_offs, len, dest_offs) {
    for (var i = 0; i < len; i++) {
      dest[dest_offs + i] = src[src_offs + i];
    }
  },
  // Join array of chunks to single array.
  flattenChunks: function(chunks) {
    return [].concat.apply([], chunks);
  },
  Buf8: function(size) {
    return new Array(size);
  },
  Buf16: function(size) {
    return new Array(size);
  },
  Buf32: function(size) {
    return new Array(size);
  }
};
var typedOK = function() {
  var supported = typeof Uint8Array !== "undefined" && typeof Uint16Array !== "undefined" && typeof Int32Array !== "undefined";
  typedOK = function() {
    return supported;
  };
  return supported;
};
var arraySet = function(dest, src, src_offs, len, dest_offs) {
  arraySet = typedOK() ? fnTyped.arraySet : fnUntyped.arraySet;
  return arraySet(dest, src, src_offs, len, dest_offs);
};
var flattenChunks = function(chunks) {
  flattenChunks = typedOK() ? fnTyped.flattenChunks : fnUntyped.flattenChunks;
  return flattenChunks(chunks);
};
var Buf8 = function(size) {
  Buf8 = typedOK() ? fnTyped.Buf8 : fnUntyped.Buf8;
  return Buf8(size);
};
var Buf16 = function(size) {
  Buf16 = typedOK() ? fnTyped.Buf16 : fnUntyped.Buf16;
  return Buf16(size);
};
var Buf32 = function(size) {
  Buf32 = typedOK() ? fnTyped.Buf32 : fnUntyped.Buf32;
  return Buf32(size);
};
var strApplyOK = function() {
  var result = true;
  try {
    String.fromCharCode.apply(null, [0]);
  } catch (_2) {
    result = false;
  }
  strApplyOK = function() {
    return result;
  };
  return result;
};
var strApplyUintOK = function() {
  var result = true;
  try {
    String.fromCharCode.apply(null, new Uint8Array(1));
  } catch (_2) {
    result = false;
  }
  strApplyUintOK = function() {
    return result;
  };
  return result;
};
var utf8len = function(c) {
  var table = Buf8(256);
  for (var q = 0; q < 256; q++) {
    table[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;
  }
  table[254] = table[254] = 1;
  utf8len = function(arg) {
    return table[arg];
  };
  return table[c];
};
function string2buf(str) {
  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;
  for (m_pos = 0; m_pos < str_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 64512) === 56320) {
        c = 65536 + (c - 55296 << 10) + (c2 - 56320);
        m_pos++;
      }
    }
    buf_len += c < 128 ? 1 : c < 2048 ? 2 : c < 65536 ? 3 : 4;
  }
  buf = new Uint8Array(buf_len);
  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {
    c = str.charCodeAt(m_pos);
    if ((c & 64512) === 55296 && m_pos + 1 < str_len) {
      c2 = str.charCodeAt(m_pos + 1);
      if ((c2 & 64512) === 56320) {
        c = 65536 + (c - 55296 << 10) + (c2 - 56320);
        m_pos++;
      }
    }
    if (c < 128) {
      buf[i++] = c;
    } else if (c < 2048) {
      buf[i++] = 192 | c >>> 6;
      buf[i++] = 128 | c & 63;
    } else if (c < 65536) {
      buf[i++] = 224 | c >>> 12;
      buf[i++] = 128 | c >>> 6 & 63;
      buf[i++] = 128 | c & 63;
    } else {
      buf[i++] = 240 | c >>> 18;
      buf[i++] = 128 | c >>> 12 & 63;
      buf[i++] = 128 | c >>> 6 & 63;
      buf[i++] = 128 | c & 63;
    }
  }
  return buf;
}
function _buf2binstring(buf, len) {
  if (len < 65534) {
    if (buf.subarray && strApplyUintOK() || !buf.subarray && strApplyOK()) {
      return String.fromCharCode.apply(null, shrinkBuf(buf, len));
    }
  }
  var result = "";
  for (var i = 0; i < len; i++) {
    result += String.fromCharCode(buf[i]);
  }
  return result;
}
function buf2binstring(buf) {
  return _buf2binstring(buf, buf.length);
}
function binstring2buf(str) {
  var buf = new Uint8Array(str.length);
  for (var i = 0, len = buf.length; i < len; i++) {
    buf[i] = str.charCodeAt(i);
  }
  return buf;
}
function buf2string(buf, max) {
  var i, out, c, c_len;
  var len = max || buf.length;
  var utf16buf = new Array(len * 2);
  for (out = 0, i = 0; i < len; ) {
    c = buf[i++];
    if (c < 128) {
      utf16buf[out++] = c;
      continue;
    }
    c_len = utf8len(c);
    if (c_len > 4) {
      utf16buf[out++] = 65533;
      i += c_len - 1;
      continue;
    }
    c &= c_len === 2 ? 31 : c_len === 3 ? 15 : 7;
    while (c_len > 1 && i < len) {
      c = c << 6 | buf[i++] & 63;
      c_len--;
    }
    if (c_len > 1) {
      utf16buf[out++] = 65533;
      continue;
    }
    if (c < 65536) {
      utf16buf[out++] = c;
    } else {
      c -= 65536;
      utf16buf[out++] = 55296 | c >> 10 & 1023;
      utf16buf[out++] = 56320 | c & 1023;
    }
  }
  return _buf2binstring(utf16buf, out);
}
function utf8border(buf, max) {
  var pos;
  max = max || buf.length;
  if (max > buf.length) {
    max = buf.length;
  }
  pos = max - 1;
  while (pos >= 0 && (buf[pos] & 192) === 128) {
    pos--;
  }
  if (pos < 0) {
    return max;
  }
  if (pos === 0) {
    return max;
  }
  return pos + utf8len(buf[pos]) > max ? pos : max;
}
function adler32(adler, buf, len, pos) {
  var s1 = adler & 65535 | 0, s2 = adler >>> 16 & 65535 | 0, n = 0;
  while (len !== 0) {
    n = len > 2e3 ? 2e3 : len;
    len -= n;
    do {
      s1 = s1 + buf[pos++] | 0;
      s2 = s2 + s1 | 0;
    } while (--n);
    s1 %= 65521;
    s2 %= 65521;
  }
  return s1 | s2 << 16 | 0;
}
function makeTable() {
  var c, table = [];
  for (var n = 0; n < 256; n++) {
    c = n;
    for (var k = 0; k < 8; k++) {
      c = c & 1 ? 3988292384 ^ c >>> 1 : c >>> 1;
    }
    table[n] = c;
  }
  return table;
}
var crcTable = function() {
  var table = makeTable();
  crcTable = function() {
    return table;
  };
  return table;
};
function crc32(crc, buf, len, pos) {
  var t = crcTable(), end2 = pos + len;
  crc ^= -1;
  for (var i = pos; i < end2; i++) {
    crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 255];
  }
  return crc ^ -1;
}
var BAD = 30;
var TYPE = 12;
function inflate_fast(strm, start2) {
  var state;
  var _in;
  var last4;
  var _out;
  var beg;
  var end2;
  var dmax;
  var wsize;
  var whave;
  var wnext;
  var s_window;
  var hold;
  var bits;
  var lcode;
  var dcode;
  var lmask;
  var dmask;
  var here;
  var op;
  var len;
  var dist;
  var from;
  var from_source;
  var input, output;
  state = strm.state;
  _in = strm.next_in;
  input = strm.input;
  last4 = _in + (strm.avail_in - 5);
  _out = strm.next_out;
  output = strm.output;
  beg = _out - (start2 - strm.avail_out);
  end2 = _out + (strm.avail_out - 257);
  dmax = state.dmax;
  wsize = state.wsize;
  whave = state.whave;
  wnext = state.wnext;
  s_window = state.window;
  hold = state.hold;
  bits = state.bits;
  lcode = state.lencode;
  dcode = state.distcode;
  lmask = (1 << state.lenbits) - 1;
  dmask = (1 << state.distbits) - 1;
  top:
    do {
      if (bits < 15) {
        hold += input[_in++] << bits;
        bits += 8;
        hold += input[_in++] << bits;
        bits += 8;
      }
      here = lcode[hold & lmask];
      dolen:
        for (; ; ) {
          op = here >>> 24;
          hold >>>= op;
          bits -= op;
          op = here >>> 16 & 255;
          if (op === 0) {
            output[_out++] = here & 65535;
          } else if (op & 16) {
            len = here & 65535;
            op &= 15;
            if (op) {
              if (bits < op) {
                hold += input[_in++] << bits;
                bits += 8;
              }
              len += hold & (1 << op) - 1;
              hold >>>= op;
              bits -= op;
            }
            if (bits < 15) {
              hold += input[_in++] << bits;
              bits += 8;
              hold += input[_in++] << bits;
              bits += 8;
            }
            here = dcode[hold & dmask];
            dodist:
              for (; ; ) {
                op = here >>> 24;
                hold >>>= op;
                bits -= op;
                op = here >>> 16 & 255;
                if (op & 16) {
                  dist = here & 65535;
                  op &= 15;
                  if (bits < op) {
                    hold += input[_in++] << bits;
                    bits += 8;
                    if (bits < op) {
                      hold += input[_in++] << bits;
                      bits += 8;
                    }
                  }
                  dist += hold & (1 << op) - 1;
                  if (dist > dmax) {
                    strm.msg = "invalid distance too far back";
                    state.mode = BAD;
                    break top;
                  }
                  hold >>>= op;
                  bits -= op;
                  op = _out - beg;
                  if (dist > op) {
                    op = dist - op;
                    if (op > whave) {
                      if (state.sane) {
                        strm.msg = "invalid distance too far back";
                        state.mode = BAD;
                        break top;
                      }
                    }
                    from = 0;
                    from_source = s_window;
                    if (wnext === 0) {
                      from += wsize - op;
                      if (op < len) {
                        len -= op;
                        do {
                          output[_out++] = s_window[from++];
                        } while (--op);
                        from = _out - dist;
                        from_source = output;
                      }
                    } else if (wnext < op) {
                      from += wsize + wnext - op;
                      op -= wnext;
                      if (op < len) {
                        len -= op;
                        do {
                          output[_out++] = s_window[from++];
                        } while (--op);
                        from = 0;
                        if (wnext < len) {
                          op = wnext;
                          len -= op;
                          do {
                            output[_out++] = s_window[from++];
                          } while (--op);
                          from = _out - dist;
                          from_source = output;
                        }
                      }
                    } else {
                      from += wnext - op;
                      if (op < len) {
                        len -= op;
                        do {
                          output[_out++] = s_window[from++];
                        } while (--op);
                        from = _out - dist;
                        from_source = output;
                      }
                    }
                    while (len > 2) {
                      output[_out++] = from_source[from++];
                      output[_out++] = from_source[from++];
                      output[_out++] = from_source[from++];
                      len -= 3;
                    }
                    if (len) {
                      output[_out++] = from_source[from++];
                      if (len > 1) {
                        output[_out++] = from_source[from++];
                      }
                    }
                  } else {
                    from = _out - dist;
                    do {
                      output[_out++] = output[from++];
                      output[_out++] = output[from++];
                      output[_out++] = output[from++];
                      len -= 3;
                    } while (len > 2);
                    if (len) {
                      output[_out++] = output[from++];
                      if (len > 1) {
                        output[_out++] = output[from++];
                      }
                    }
                  }
                } else if ((op & 64) === 0) {
                  here = dcode[(here & 65535) + (hold & (1 << op) - 1)];
                  continue dodist;
                } else {
                  strm.msg = "invalid distance code";
                  state.mode = BAD;
                  break top;
                }
                break;
              }
          } else if ((op & 64) === 0) {
            here = lcode[(here & 65535) + (hold & (1 << op) - 1)];
            continue dolen;
          } else if (op & 32) {
            state.mode = TYPE;
            break top;
          } else {
            strm.msg = "invalid literal/length code";
            state.mode = BAD;
            break top;
          }
          break;
        }
    } while (_in < last4 && _out < end2);
  len = bits >> 3;
  _in -= len;
  bits -= len << 3;
  hold &= (1 << bits) - 1;
  strm.next_in = _in;
  strm.next_out = _out;
  strm.avail_in = _in < last4 ? 5 + (last4 - _in) : 5 - (_in - last4);
  strm.avail_out = _out < end2 ? 257 + (end2 - _out) : 257 - (_out - end2);
  state.hold = hold;
  state.bits = bits;
  return;
}
var MAXBITS = 15;
var ENOUGH_LENS = 852;
var ENOUGH_DISTS = 592;
var CODES = 0;
var LENS = 1;
var DISTS = 2;
var lbase = [
  /* Length codes 257..285 base */
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  13,
  15,
  17,
  19,
  23,
  27,
  31,
  35,
  43,
  51,
  59,
  67,
  83,
  99,
  115,
  131,
  163,
  195,
  227,
  258,
  0,
  0
];
var lext = [
  /* Length codes 257..285 extra */
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  16,
  17,
  17,
  17,
  17,
  18,
  18,
  18,
  18,
  19,
  19,
  19,
  19,
  20,
  20,
  20,
  20,
  21,
  21,
  21,
  21,
  16,
  72,
  78
];
var dbase = [
  /* Distance codes 0..29 base */
  1,
  2,
  3,
  4,
  5,
  7,
  9,
  13,
  17,
  25,
  33,
  49,
  65,
  97,
  129,
  193,
  257,
  385,
  513,
  769,
  1025,
  1537,
  2049,
  3073,
  4097,
  6145,
  8193,
  12289,
  16385,
  24577,
  0,
  0
];
var dext = [
  /* Distance codes 0..29 extra */
  16,
  16,
  16,
  16,
  17,
  17,
  18,
  18,
  19,
  19,
  20,
  20,
  21,
  21,
  22,
  22,
  23,
  23,
  24,
  24,
  25,
  25,
  26,
  26,
  27,
  27,
  28,
  28,
  29,
  29,
  64,
  64
];
function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {
  var bits = opts.bits;
  var len = 0;
  var sym = 0;
  var min = 0, max = 0;
  var root = 0;
  var curr = 0;
  var drop = 0;
  var left2 = 0;
  var used = 0;
  var huff = 0;
  var incr;
  var fill;
  var low;
  var mask;
  var next;
  var base = null;
  var base_index = 0;
  var end2;
  var count2 = Buf16(MAXBITS + 1);
  var offs = Buf16(MAXBITS + 1);
  var extra = null;
  var extra_index = 0;
  var here_bits, here_op, here_val;
  for (len = 0; len <= MAXBITS; len++) {
    count2[len] = 0;
  }
  for (sym = 0; sym < codes; sym++) {
    count2[lens[lens_index + sym]]++;
  }
  root = bits;
  for (max = MAXBITS; max >= 1; max--) {
    if (count2[max] !== 0) {
      break;
    }
  }
  if (root > max) {
    root = max;
  }
  if (max === 0) {
    table[table_index++] = 1 << 24 | 64 << 16 | 0;
    table[table_index++] = 1 << 24 | 64 << 16 | 0;
    opts.bits = 1;
    return 0;
  }
  for (min = 1; min < max; min++) {
    if (count2[min] !== 0) {
      break;
    }
  }
  if (root < min) {
    root = min;
  }
  left2 = 1;
  for (len = 1; len <= MAXBITS; len++) {
    left2 <<= 1;
    left2 -= count2[len];
    if (left2 < 0) {
      return -1;
    }
  }
  if (left2 > 0 && (type === CODES || max !== 1)) {
    return -1;
  }
  offs[1] = 0;
  for (len = 1; len < MAXBITS; len++) {
    offs[len + 1] = offs[len] + count2[len];
  }
  for (sym = 0; sym < codes; sym++) {
    if (lens[lens_index + sym] !== 0) {
      work[offs[lens[lens_index + sym]]++] = sym;
    }
  }
  if (type === CODES) {
    base = extra = work;
    end2 = 19;
  } else if (type === LENS) {
    base = lbase;
    base_index -= 257;
    extra = lext;
    extra_index -= 257;
    end2 = 256;
  } else {
    base = dbase;
    extra = dext;
    end2 = -1;
  }
  huff = 0;
  sym = 0;
  len = min;
  next = table_index;
  curr = root;
  drop = 0;
  low = -1;
  used = 1 << root;
  mask = used - 1;
  if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
    return 1;
  }
  for (; ; ) {
    here_bits = len - drop;
    if (work[sym] < end2) {
      here_op = 0;
      here_val = work[sym];
    } else if (work[sym] > end2) {
      here_op = extra[extra_index + work[sym]];
      here_val = base[base_index + work[sym]];
    } else {
      here_op = 32 + 64;
      here_val = 0;
    }
    incr = 1 << len - drop;
    fill = 1 << curr;
    min = fill;
    do {
      fill -= incr;
      table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val | 0;
    } while (fill !== 0);
    incr = 1 << len - 1;
    while (huff & incr) {
      incr >>= 1;
    }
    if (incr !== 0) {
      huff &= incr - 1;
      huff += incr;
    } else {
      huff = 0;
    }
    sym++;
    if (--count2[len] === 0) {
      if (len === max) {
        break;
      }
      len = lens[lens_index + work[sym]];
    }
    if (len > root && (huff & mask) !== low) {
      if (drop === 0) {
        drop = root;
      }
      next += min;
      curr = len - drop;
      left2 = 1 << curr;
      while (curr + drop < max) {
        left2 -= count2[curr + drop];
        if (left2 <= 0) {
          break;
        }
        curr++;
        left2 <<= 1;
      }
      used += 1 << curr;
      if (type === LENS && used > ENOUGH_LENS || type === DISTS && used > ENOUGH_DISTS) {
        return 1;
      }
      low = huff & mask;
      table[low] = root << 24 | curr << 16 | next - table_index | 0;
    }
  }
  if (huff !== 0) {
    table[next + huff] = len - drop << 24 | 64 << 16 | 0;
  }
  opts.bits = root;
  return 0;
}
var CODES$1 = 0;
var LENS$1 = 1;
var DISTS$1 = 2;
var Z_FINISH$1 = 4;
var Z_BLOCK$1 = 5;
var Z_TREES$1 = 6;
var Z_OK$1 = 0;
var Z_STREAM_END$1 = 1;
var Z_NEED_DICT$1 = 2;
var Z_STREAM_ERROR$1 = -2;
var Z_DATA_ERROR$1 = -3;
var Z_MEM_ERROR = -4;
var Z_BUF_ERROR$1 = -5;
var Z_DEFLATED$1 = 8;
var HEAD = 1;
var FLAGS = 2;
var TIME = 3;
var OS = 4;
var EXLEN = 5;
var EXTRA = 6;
var NAME = 7;
var COMMENT = 8;
var HCRC = 9;
var DICTID = 10;
var DICT = 11;
var TYPE$1 = 12;
var TYPEDO = 13;
var STORED = 14;
var COPY_ = 15;
var COPY = 16;
var TABLE = 17;
var LENLENS = 18;
var CODELENS = 19;
var LEN_ = 20;
var LEN = 21;
var LENEXT = 22;
var DIST = 23;
var DISTEXT = 24;
var MATCH = 25;
var LIT = 26;
var CHECK = 27;
var LENGTH = 28;
var DONE = 29;
var BAD$1 = 30;
var MEM = 31;
var SYNC = 32;
var ENOUGH_LENS$1 = 852;
var ENOUGH_DISTS$1 = 592;
function zswap32(q) {
  return (q >>> 24 & 255) + (q >>> 8 & 65280) + ((q & 65280) << 8) + ((q & 255) << 24);
}
function InflateState() {
  this.mode = 0;
  this.last = false;
  this.wrap = 0;
  this.havedict = false;
  this.flags = 0;
  this.dmax = 0;
  this.check = 0;
  this.total = 0;
  this.head = null;
  this.wbits = 0;
  this.wsize = 0;
  this.whave = 0;
  this.wnext = 0;
  this.window = null;
  this.hold = 0;
  this.bits = 0;
  this.length = 0;
  this.offset = 0;
  this.extra = 0;
  this.lencode = null;
  this.distcode = null;
  this.lenbits = 0;
  this.distbits = 0;
  this.ncode = 0;
  this.nlen = 0;
  this.ndist = 0;
  this.have = 0;
  this.next = null;
  this.lens = Buf16(320);
  this.work = Buf16(288);
  this.lendyn = null;
  this.distdyn = null;
  this.sane = 0;
  this.back = 0;
  this.was = 0;
}
function inflateResetKeep(strm) {
  var state;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  strm.total_in = strm.total_out = state.total = 0;
  strm.msg = "";
  if (state.wrap) {
    strm.adler = state.wrap & 1;
  }
  state.mode = HEAD;
  state.last = 0;
  state.havedict = 0;
  state.dmax = 32768;
  state.head = null;
  state.hold = 0;
  state.bits = 0;
  state.lencode = state.lendyn = Buf32(ENOUGH_LENS$1);
  state.distcode = state.distdyn = Buf32(ENOUGH_DISTS$1);
  state.sane = 1;
  state.back = -1;
  return Z_OK$1;
}
function inflateReset(strm) {
  var state;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  state.wsize = 0;
  state.whave = 0;
  state.wnext = 0;
  return inflateResetKeep(strm);
}
function inflateReset2(strm, windowBits) {
  var wrap2;
  var state;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  if (windowBits < 0) {
    wrap2 = 0;
    windowBits = -windowBits;
  } else {
    wrap2 = (windowBits >> 4) + 1;
    if (windowBits < 48) {
      windowBits &= 15;
    }
  }
  if (windowBits && (windowBits < 8 || windowBits > 15)) {
    return Z_STREAM_ERROR$1;
  }
  if (state.window !== null && state.wbits !== windowBits) {
    state.window = null;
  }
  state.wrap = wrap2;
  state.wbits = windowBits;
  return inflateReset(strm);
}
function inflateInit2(strm, windowBits) {
  var ret;
  var state;
  if (!strm) {
    return Z_STREAM_ERROR$1;
  }
  state = new InflateState();
  strm.state = state;
  state.window = null;
  ret = inflateReset2(strm, windowBits);
  if (ret !== Z_OK$1) {
    strm.state = null;
  }
  return ret;
}
var virgin = true;
var lenfix, distfix;
function fixedtables(state) {
  if (virgin) {
    var sym;
    lenfix = Buf32(512);
    distfix = Buf32(32);
    sym = 0;
    while (sym < 144) {
      state.lens[sym++] = 8;
    }
    while (sym < 256) {
      state.lens[sym++] = 9;
    }
    while (sym < 280) {
      state.lens[sym++] = 7;
    }
    while (sym < 288) {
      state.lens[sym++] = 8;
    }
    inflate_table(LENS$1, state.lens, 0, 288, lenfix, 0, state.work, { bits: 9 });
    sym = 0;
    while (sym < 32) {
      state.lens[sym++] = 5;
    }
    inflate_table(DISTS$1, state.lens, 0, 32, distfix, 0, state.work, { bits: 5 });
    virgin = false;
  }
  state.lencode = lenfix;
  state.lenbits = 9;
  state.distcode = distfix;
  state.distbits = 5;
}
function updatewindow(strm, src, end2, copy) {
  var dist;
  var state = strm.state;
  if (state.window === null) {
    state.wsize = 1 << state.wbits;
    state.wnext = 0;
    state.whave = 0;
    state.window = Buf8(state.wsize);
  }
  if (copy >= state.wsize) {
    arraySet(state.window, src, end2 - state.wsize, state.wsize, 0);
    state.wnext = 0;
    state.whave = state.wsize;
  } else {
    dist = state.wsize - state.wnext;
    if (dist > copy) {
      dist = copy;
    }
    arraySet(state.window, src, end2 - copy, dist, state.wnext);
    copy -= dist;
    if (copy) {
      arraySet(state.window, src, end2 - copy, copy, 0);
      state.wnext = copy;
      state.whave = state.wsize;
    } else {
      state.wnext += dist;
      if (state.wnext === state.wsize) {
        state.wnext = 0;
      }
      if (state.whave < state.wsize) {
        state.whave += dist;
      }
    }
  }
  return 0;
}
function inflate(strm, flush) {
  var state;
  var input, output;
  var next;
  var put;
  var have, left2;
  var hold;
  var bits;
  var _in, _out;
  var copy;
  var from;
  var from_source;
  var here = 0;
  var here_bits, here_op, here_val;
  var last_bits, last_op, last_val;
  var len;
  var ret;
  var hbuf = Buf8(4);
  var opts;
  var n;
  var order = (
    /* permutation of code lengths */
    [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
  );
  if (!strm || !strm.state || !strm.output || !strm.input && strm.avail_in !== 0) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  if (state.mode === TYPE$1) {
    state.mode = TYPEDO;
  }
  put = strm.next_out;
  output = strm.output;
  left2 = strm.avail_out;
  next = strm.next_in;
  input = strm.input;
  have = strm.avail_in;
  hold = state.hold;
  bits = state.bits;
  _in = have;
  _out = left2;
  ret = Z_OK$1;
  inf_leave:
    for (; ; ) {
      switch (state.mode) {
        case HEAD:
          if (state.wrap === 0) {
            state.mode = TYPEDO;
            break;
          }
          while (bits < 16) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if (state.wrap & 2 && hold === 35615) {
            state.check = 0;
            hbuf[0] = hold & 255;
            hbuf[1] = hold >>> 8 & 255;
            state.check = crc32(state.check, hbuf, 2, 0);
            hold = 0;
            bits = 0;
            state.mode = FLAGS;
            break;
          }
          state.flags = 0;
          if (state.head) {
            state.head.done = false;
          }
          if (!(state.wrap & 1) || /* check if zlib header allowed */
          (((hold & 255) << 8) + (hold >> 8)) % 31) {
            strm.msg = "incorrect header check";
            state.mode = BAD$1;
            break;
          }
          if ((hold & 15) !== Z_DEFLATED$1) {
            strm.msg = "unknown compression method";
            state.mode = BAD$1;
            break;
          }
          hold >>>= 4;
          bits -= 4;
          len = (hold & 15) + 8;
          if (state.wbits === 0) {
            state.wbits = len;
          } else if (len > state.wbits) {
            strm.msg = "invalid window size";
            state.mode = BAD$1;
            break;
          }
          state.dmax = 1 << len;
          strm.adler = state.check = 1;
          state.mode = hold & 512 ? DICTID : TYPE$1;
          hold = 0;
          bits = 0;
          break;
        case FLAGS:
          while (bits < 16) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          state.flags = hold;
          if ((state.flags & 255) !== Z_DEFLATED$1) {
            strm.msg = "unknown compression method";
            state.mode = BAD$1;
            break;
          }
          if (state.flags & 57344) {
            strm.msg = "unknown header flags set";
            state.mode = BAD$1;
            break;
          }
          if (state.head) {
            state.head.text = hold >> 8 & 1;
          }
          if (state.flags & 512) {
            hbuf[0] = hold & 255;
            hbuf[1] = hold >>> 8 & 255;
            state.check = crc32(state.check, hbuf, 2, 0);
          }
          hold = 0;
          bits = 0;
          state.mode = TIME;
        case TIME:
          while (bits < 32) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if (state.head) {
            state.head.time = hold;
          }
          if (state.flags & 512) {
            hbuf[0] = hold & 255;
            hbuf[1] = hold >>> 8 & 255;
            hbuf[2] = hold >>> 16 & 255;
            hbuf[3] = hold >>> 24 & 255;
            state.check = crc32(state.check, hbuf, 4, 0);
          }
          hold = 0;
          bits = 0;
          state.mode = OS;
        case OS:
          while (bits < 16) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if (state.head) {
            state.head.xflags = hold & 255;
            state.head.os = hold >> 8;
          }
          if (state.flags & 512) {
            hbuf[0] = hold & 255;
            hbuf[1] = hold >>> 8 & 255;
            state.check = crc32(state.check, hbuf, 2, 0);
          }
          hold = 0;
          bits = 0;
          state.mode = EXLEN;
        case EXLEN:
          if (state.flags & 1024) {
            while (bits < 16) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            state.length = hold;
            if (state.head) {
              state.head.extra_len = hold;
            }
            if (state.flags & 512) {
              hbuf[0] = hold & 255;
              hbuf[1] = hold >>> 8 & 255;
              state.check = crc32(state.check, hbuf, 2, 0);
            }
            hold = 0;
            bits = 0;
          } else if (state.head) {
            state.head.extra = null;
          }
          state.mode = EXTRA;
        case EXTRA:
          if (state.flags & 1024) {
            copy = state.length;
            if (copy > have) {
              copy = have;
            }
            if (copy) {
              if (state.head) {
                len = state.head.extra_len - state.length;
                if (!state.head.extra) {
                  state.head.extra = new Array(state.head.extra_len);
                }
                arraySet(
                  state.head.extra,
                  input,
                  next,
                  // extra field is limited to 65536 bytes
                  // - no need for additional size check
                  copy,
                  /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                  len
                );
              }
              if (state.flags & 512) {
                state.check = crc32(state.check, input, copy, next);
              }
              have -= copy;
              next += copy;
              state.length -= copy;
            }
            if (state.length) {
              break inf_leave;
            }
          }
          state.length = 0;
          state.mode = NAME;
        case NAME:
          if (state.flags & 2048) {
            if (have === 0) {
              break inf_leave;
            }
            copy = 0;
            do {
              len = input[next + copy++];
              if (state.head && len && state.length < 65536) {
                state.head.name += String.fromCharCode(len);
              }
            } while (len && copy < have);
            if (state.flags & 512) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            if (len) {
              break inf_leave;
            }
          } else if (state.head) {
            state.head.name = null;
          }
          state.length = 0;
          state.mode = COMMENT;
        case COMMENT:
          if (state.flags & 4096) {
            if (have === 0) {
              break inf_leave;
            }
            copy = 0;
            do {
              len = input[next + copy++];
              if (state.head && len && state.length < 65536) {
                state.head.comment += String.fromCharCode(len);
              }
            } while (len && copy < have);
            if (state.flags & 512) {
              state.check = crc32(state.check, input, copy, next);
            }
            have -= copy;
            next += copy;
            if (len) {
              break inf_leave;
            }
          } else if (state.head) {
            state.head.comment = null;
          }
          state.mode = HCRC;
        case HCRC:
          if (state.flags & 512) {
            while (bits < 16) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            if (hold !== (state.check & 65535)) {
              strm.msg = "header crc mismatch";
              state.mode = BAD$1;
              break;
            }
            hold = 0;
            bits = 0;
          }
          if (state.head) {
            state.head.hcrc = state.flags >> 9 & 1;
            state.head.done = true;
          }
          strm.adler = state.check = 0;
          state.mode = TYPE$1;
          break;
        case DICTID:
          while (bits < 32) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          strm.adler = state.check = zswap32(hold);
          hold = 0;
          bits = 0;
          state.mode = DICT;
        case DICT:
          if (state.havedict === 0) {
            strm.next_out = put;
            strm.avail_out = left2;
            strm.next_in = next;
            strm.avail_in = have;
            state.hold = hold;
            state.bits = bits;
            return Z_NEED_DICT$1;
          }
          strm.adler = state.check = 1;
          state.mode = TYPE$1;
        case TYPE$1:
          if (flush === Z_BLOCK$1 || flush === Z_TREES$1) {
            break inf_leave;
          }
        case TYPEDO:
          if (state.last) {
            hold >>>= bits & 7;
            bits -= bits & 7;
            state.mode = CHECK;
            break;
          }
          while (bits < 3) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          state.last = hold & 1;
          hold >>>= 1;
          bits -= 1;
          switch (hold & 3) {
            case 0:
              state.mode = STORED;
              break;
            case 1:
              fixedtables(state);
              state.mode = LEN_;
              if (flush === Z_TREES$1) {
                hold >>>= 2;
                bits -= 2;
                break inf_leave;
              }
              break;
            case 2:
              state.mode = TABLE;
              break;
            case 3:
              strm.msg = "invalid block type";
              state.mode = BAD$1;
          }
          hold >>>= 2;
          bits -= 2;
          break;
        case STORED:
          hold >>>= bits & 7;
          bits -= bits & 7;
          while (bits < 32) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if ((hold & 65535) !== (hold >>> 16 ^ 65535)) {
            strm.msg = "invalid stored block lengths";
            state.mode = BAD$1;
            break;
          }
          state.length = hold & 65535;
          hold = 0;
          bits = 0;
          state.mode = COPY_;
          if (flush === Z_TREES$1) {
            break inf_leave;
          }
        case COPY_:
          state.mode = COPY;
        case COPY:
          copy = state.length;
          if (copy) {
            if (copy > have) {
              copy = have;
            }
            if (copy > left2) {
              copy = left2;
            }
            if (copy === 0) {
              break inf_leave;
            }
            arraySet(output, input, next, copy, put);
            have -= copy;
            next += copy;
            left2 -= copy;
            put += copy;
            state.length -= copy;
            break;
          }
          state.mode = TYPE$1;
          break;
        case TABLE:
          while (bits < 14) {
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          state.nlen = (hold & 31) + 257;
          hold >>>= 5;
          bits -= 5;
          state.ndist = (hold & 31) + 1;
          hold >>>= 5;
          bits -= 5;
          state.ncode = (hold & 15) + 4;
          hold >>>= 4;
          bits -= 4;
          if (state.nlen > 286 || state.ndist > 30) {
            strm.msg = "too many length or distance symbols";
            state.mode = BAD$1;
            break;
          }
          state.have = 0;
          state.mode = LENLENS;
        case LENLENS:
          while (state.have < state.ncode) {
            while (bits < 3) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            state.lens[order[state.have++]] = hold & 7;
            hold >>>= 3;
            bits -= 3;
          }
          while (state.have < 19) {
            state.lens[order[state.have++]] = 0;
          }
          state.lencode = state.lendyn;
          state.lenbits = 7;
          opts = { bits: state.lenbits };
          ret = inflate_table(CODES$1, state.lens, 0, 19, state.lencode, 0, state.work, opts);
          state.lenbits = opts.bits;
          if (ret) {
            strm.msg = "invalid code lengths set";
            state.mode = BAD$1;
            break;
          }
          state.have = 0;
          state.mode = CODELENS;
        case CODELENS:
          while (state.have < state.nlen + state.ndist) {
            for (; ; ) {
              here = state.lencode[hold & (1 << state.lenbits) - 1];
              here_bits = here >>> 24;
              here_op = here >>> 16 & 255;
              here_val = here & 65535;
              if (here_bits <= bits) {
                break;
              }
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            if (here_val < 16) {
              hold >>>= here_bits;
              bits -= here_bits;
              state.lens[state.have++] = here_val;
            } else {
              if (here_val === 16) {
                n = here_bits + 2;
                while (bits < n) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= here_bits;
                bits -= here_bits;
                if (state.have === 0) {
                  strm.msg = "invalid bit length repeat";
                  state.mode = BAD$1;
                  break;
                }
                len = state.lens[state.have - 1];
                copy = 3 + (hold & 3);
                hold >>>= 2;
                bits -= 2;
              } else if (here_val === 17) {
                n = here_bits + 3;
                while (bits < n) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= here_bits;
                bits -= here_bits;
                len = 0;
                copy = 3 + (hold & 7);
                hold >>>= 3;
                bits -= 3;
              } else {
                n = here_bits + 7;
                while (bits < n) {
                  if (have === 0) {
                    break inf_leave;
                  }
                  have--;
                  hold += input[next++] << bits;
                  bits += 8;
                }
                hold >>>= here_bits;
                bits -= here_bits;
                len = 0;
                copy = 11 + (hold & 127);
                hold >>>= 7;
                bits -= 7;
              }
              if (state.have + copy > state.nlen + state.ndist) {
                strm.msg = "invalid bit length repeat";
                state.mode = BAD$1;
                break;
              }
              while (copy--) {
                state.lens[state.have++] = len;
              }
            }
          }
          if (state.mode === BAD$1) {
            break;
          }
          if (state.lens[256] === 0) {
            strm.msg = "invalid code -- missing end-of-block";
            state.mode = BAD$1;
            break;
          }
          state.lenbits = 9;
          opts = { bits: state.lenbits };
          ret = inflate_table(LENS$1, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);
          state.lenbits = opts.bits;
          if (ret) {
            strm.msg = "invalid literal/lengths set";
            state.mode = BAD$1;
            break;
          }
          state.distbits = 6;
          state.distcode = state.distdyn;
          opts = { bits: state.distbits };
          ret = inflate_table(DISTS$1, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);
          state.distbits = opts.bits;
          if (ret) {
            strm.msg = "invalid distances set";
            state.mode = BAD$1;
            break;
          }
          state.mode = LEN_;
          if (flush === Z_TREES$1) {
            break inf_leave;
          }
        case LEN_:
          state.mode = LEN;
        case LEN:
          if (have >= 6 && left2 >= 258) {
            strm.next_out = put;
            strm.avail_out = left2;
            strm.next_in = next;
            strm.avail_in = have;
            state.hold = hold;
            state.bits = bits;
            inflate_fast(strm, _out);
            put = strm.next_out;
            output = strm.output;
            left2 = strm.avail_out;
            next = strm.next_in;
            input = strm.input;
            have = strm.avail_in;
            hold = state.hold;
            bits = state.bits;
            if (state.mode === TYPE$1) {
              state.back = -1;
            }
            break;
          }
          state.back = 0;
          for (; ; ) {
            here = state.lencode[hold & (1 << state.lenbits) - 1];
            here_bits = here >>> 24;
            here_op = here >>> 16 & 255;
            here_val = here & 65535;
            if (here_bits <= bits) {
              break;
            }
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if (here_op && (here_op & 240) === 0) {
            last_bits = here_bits;
            last_op = here_op;
            last_val = here_val;
            for (; ; ) {
              here = state.lencode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
              here_bits = here >>> 24;
              here_op = here >>> 16 & 255;
              here_val = here & 65535;
              if (last_bits + here_bits <= bits) {
                break;
              }
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            hold >>>= last_bits;
            bits -= last_bits;
            state.back += last_bits;
          }
          hold >>>= here_bits;
          bits -= here_bits;
          state.back += here_bits;
          state.length = here_val;
          if (here_op === 0) {
            state.mode = LIT;
            break;
          }
          if (here_op & 32) {
            state.back = -1;
            state.mode = TYPE$1;
            break;
          }
          if (here_op & 64) {
            strm.msg = "invalid literal/length code";
            state.mode = BAD$1;
            break;
          }
          state.extra = here_op & 15;
          state.mode = LENEXT;
        case LENEXT:
          if (state.extra) {
            n = state.extra;
            while (bits < n) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            state.length += hold & (1 << state.extra) - 1;
            hold >>>= state.extra;
            bits -= state.extra;
            state.back += state.extra;
          }
          state.was = state.length;
          state.mode = DIST;
        case DIST:
          for (; ; ) {
            here = state.distcode[hold & (1 << state.distbits) - 1];
            here_bits = here >>> 24;
            here_op = here >>> 16 & 255;
            here_val = here & 65535;
            if (here_bits <= bits) {
              break;
            }
            if (have === 0) {
              break inf_leave;
            }
            have--;
            hold += input[next++] << bits;
            bits += 8;
          }
          if ((here_op & 240) === 0) {
            last_bits = here_bits;
            last_op = here_op;
            last_val = here_val;
            for (; ; ) {
              here = state.distcode[last_val + ((hold & (1 << last_bits + last_op) - 1) >> last_bits)];
              here_bits = here >>> 24;
              here_op = here >>> 16 & 255;
              here_val = here & 65535;
              if (last_bits + here_bits <= bits) {
                break;
              }
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            hold >>>= last_bits;
            bits -= last_bits;
            state.back += last_bits;
          }
          hold >>>= here_bits;
          bits -= here_bits;
          state.back += here_bits;
          if (here_op & 64) {
            strm.msg = "invalid distance code";
            state.mode = BAD$1;
            break;
          }
          state.offset = here_val;
          state.extra = here_op & 15;
          state.mode = DISTEXT;
        case DISTEXT:
          if (state.extra) {
            n = state.extra;
            while (bits < n) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            state.offset += hold & (1 << state.extra) - 1;
            hold >>>= state.extra;
            bits -= state.extra;
            state.back += state.extra;
          }
          if (state.offset > state.dmax) {
            strm.msg = "invalid distance too far back";
            state.mode = BAD$1;
            break;
          }
          state.mode = MATCH;
        case MATCH:
          if (left2 === 0) {
            break inf_leave;
          }
          copy = _out - left2;
          if (state.offset > copy) {
            copy = state.offset - copy;
            if (copy > state.whave) {
              if (state.sane) {
                strm.msg = "invalid distance too far back";
                state.mode = BAD$1;
                break;
              }
            }
            if (copy > state.wnext) {
              copy -= state.wnext;
              from = state.wsize - copy;
            } else {
              from = state.wnext - copy;
            }
            if (copy > state.length) {
              copy = state.length;
            }
            from_source = state.window;
          } else {
            from_source = output;
            from = put - state.offset;
            copy = state.length;
          }
          if (copy > left2) {
            copy = left2;
          }
          left2 -= copy;
          state.length -= copy;
          do {
            output[put++] = from_source[from++];
          } while (--copy);
          if (state.length === 0) {
            state.mode = LEN;
          }
          break;
        case LIT:
          if (left2 === 0) {
            break inf_leave;
          }
          output[put++] = state.length;
          left2--;
          state.mode = LEN;
          break;
        case CHECK:
          if (state.wrap) {
            while (bits < 32) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold |= input[next++] << bits;
              bits += 8;
            }
            _out -= left2;
            strm.total_out += _out;
            state.total += _out;
            if (_out) {
              strm.adler = state.check = /*UPDATE(state.check, put - _out, _out);*/
              state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out);
            }
            _out = left2;
            if ((state.flags ? hold : zswap32(hold)) !== state.check) {
              strm.msg = "incorrect data check";
              state.mode = BAD$1;
              break;
            }
            hold = 0;
            bits = 0;
          }
          state.mode = LENGTH;
        case LENGTH:
          if (state.wrap && state.flags) {
            while (bits < 32) {
              if (have === 0) {
                break inf_leave;
              }
              have--;
              hold += input[next++] << bits;
              bits += 8;
            }
            if (hold !== (state.total & 4294967295)) {
              strm.msg = "incorrect length check";
              state.mode = BAD$1;
              break;
            }
            hold = 0;
            bits = 0;
          }
          state.mode = DONE;
        case DONE:
          ret = Z_STREAM_END$1;
          break inf_leave;
        case BAD$1:
          ret = Z_DATA_ERROR$1;
          break inf_leave;
        case MEM:
          return Z_MEM_ERROR;
        case SYNC:
        default:
          return Z_STREAM_ERROR$1;
      }
    }
  strm.next_out = put;
  strm.avail_out = left2;
  strm.next_in = next;
  strm.avail_in = have;
  state.hold = hold;
  state.bits = bits;
  if (state.wsize || _out !== strm.avail_out && state.mode < BAD$1 && (state.mode < CHECK || flush !== Z_FINISH$1)) {
    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out))
      ;
  }
  _in -= strm.avail_in;
  _out -= strm.avail_out;
  strm.total_in += _in;
  strm.total_out += _out;
  state.total += _out;
  if (state.wrap && _out) {
    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
    state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out);
  }
  strm.data_type = state.bits + (state.last ? 64 : 0) + (state.mode === TYPE$1 ? 128 : 0) + (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);
  if ((_in === 0 && _out === 0 || flush === Z_FINISH$1) && ret === Z_OK$1) {
    ret = Z_BUF_ERROR$1;
  }
  return ret;
}
function inflateEnd(strm) {
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  var state = strm.state;
  if (state.window) {
    state.window = null;
  }
  strm.state = null;
  return Z_OK$1;
}
function inflateGetHeader(strm, head) {
  var state;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  if ((state.wrap & 2) === 0) {
    return Z_STREAM_ERROR$1;
  }
  state.head = head;
  head.done = false;
  return Z_OK$1;
}
function inflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;
  var state;
  var dictid;
  var ret;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR$1;
  }
  state = strm.state;
  if (state.wrap !== 0 && state.mode !== DICT) {
    return Z_STREAM_ERROR$1;
  }
  if (state.mode === DICT) {
    dictid = 1;
    dictid = adler32(dictid, dictionary, dictLength, 0);
    if (dictid !== state.check) {
      return Z_DATA_ERROR$1;
    }
  }
  ret = updatewindow(strm, dictionary, dictLength, dictLength);
  if (ret) {
    state.mode = MEM;
    return Z_MEM_ERROR;
  }
  state.havedict = 1;
  return Z_OK$1;
}
var msg = {
  2: "need dictionary",
  /* Z_NEED_DICT       2  */
  1: "stream end",
  /* Z_STREAM_END      1  */
  0: "",
  /* Z_OK              0  */
  "-1": "file error",
  /* Z_ERRNO         (-1) */
  "-2": "stream error",
  /* Z_STREAM_ERROR  (-2) */
  "-3": "data error",
  /* Z_DATA_ERROR    (-3) */
  "-4": "insufficient memory",
  /* Z_MEM_ERROR     (-4) */
  "-5": "buffer error",
  /* Z_BUF_ERROR     (-5) */
  "-6": "incompatible version"
  /* Z_VERSION_ERROR (-6) */
};
function ZStream() {
  this.input = null;
  this.next_in = 0;
  this.avail_in = 0;
  this.total_in = 0;
  this.output = null;
  this.next_out = 0;
  this.avail_out = 0;
  this.total_out = 0;
  this.msg = "";
  this.state = null;
  this.data_type = 2;
  this.adler = 0;
}
function GZheader() {
  this.text = 0;
  this.time = 0;
  this.xflags = 0;
  this.os = 0;
  this.extra = null;
  this.extra_len = 0;
  this.name = "";
  this.comment = "";
  this.hcrc = 0;
  this.done = false;
}
var toString4 = Object.prototype.toString;
var Inflate = function Inflate2(options2) {
  if (!(this instanceof Inflate2)) {
    return new Inflate2(options2);
  }
  this.options = assign({
    chunkSize: 16384,
    windowBits: 0,
    to: ""
  }, options2 || {});
  var opt = this.options;
  if (opt.raw && opt.windowBits >= 0 && opt.windowBits < 16) {
    opt.windowBits = -opt.windowBits;
    if (opt.windowBits === 0) {
      opt.windowBits = -15;
    }
  }
  if (opt.windowBits >= 0 && opt.windowBits < 16 && !(options2 && options2.windowBits)) {
    opt.windowBits += 32;
  }
  if (opt.windowBits > 15 && opt.windowBits < 48) {
    if ((opt.windowBits & 15) === 0) {
      opt.windowBits |= 15;
    }
  }
  this.err = 0;
  this.msg = "";
  this.ended = false;
  this.chunks = [];
  this.strm = new ZStream();
  this.strm.avail_out = 0;
  var status = inflateInit2(
    this.strm,
    opt.windowBits
  );
  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }
  this.header = new GZheader();
  inflateGetHeader(this.strm, this.header);
  if (opt.dictionary) {
    if (typeof opt.dictionary === "string") {
      opt.dictionary = string2buf(opt.dictionary);
    } else if (toString4.call(opt.dictionary) === "[object ArrayBuffer]") {
      opt.dictionary = new Uint8Array(opt.dictionary);
    }
    if (opt.raw) {
      status = inflateSetDictionary(this.strm, opt.dictionary);
      if (status !== Z_OK) {
        throw new Error(msg[status]);
      }
    }
  }
};
Inflate.prototype.push = function push2(data2, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var dictionary = this.options.dictionary;
  var status, _mode;
  var next_out_utf8, tail, utf8str;
  var dict2;
  var allowBufError = false;
  if (this.ended) {
    return false;
  }
  _mode = mode === ~~mode ? mode : mode === true ? Z_FINISH : Z_NO_FLUSH;
  if (typeof data2 === "string") {
    strm.input = binstring2buf(data2);
  } else if (toString4.call(data2) === "[object ArrayBuffer]") {
    strm.input = new Uint8Array(data2);
  } else {
    strm.input = data2;
  }
  strm.next_in = 0;
  strm.avail_in = strm.input.length;
  do {
    if (strm.avail_out === 0) {
      strm.output = Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = inflate(strm, Z_NO_FLUSH);
    if (status === Z_NEED_DICT && dictionary) {
      if (typeof dictionary === "string") {
        dict2 = string2buf(dictionary);
      } else if (toString4.call(dictionary) === "[object ArrayBuffer]") {
        dict2 = new Uint8Array(dictionary);
      } else {
        dict2 = dictionary;
      }
      status = inflateSetDictionary(this.strm, dict2);
    }
    if (status === Z_BUF_ERROR && allowBufError === true) {
      status = Z_OK;
      allowBufError = false;
    }
    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.next_out) {
      if (strm.avail_out === 0 || status === Z_STREAM_END || strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH)) {
        if (this.options.to === "string") {
          next_out_utf8 = utf8border(strm.output, strm.next_out);
          tail = strm.next_out - next_out_utf8;
          utf8str = buf2string(strm.output, next_out_utf8);
          strm.next_out = tail;
          strm.avail_out = chunkSize - tail;
          if (tail) {
            arraySet(strm.output, strm.output, next_out_utf8, tail, 0);
          }
          this.onData(utf8str);
        } else {
          this.onData(shrinkBuf(strm.output, strm.next_out));
        }
      }
    }
    if (strm.avail_in === 0 && strm.avail_out === 0) {
      allowBufError = true;
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);
  if (status === Z_STREAM_END) {
    _mode = Z_FINISH;
  }
  if (_mode === Z_FINISH) {
    status = inflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }
  return true;
};
Inflate.prototype.onData = function onData(chunk) {
  this.chunks.push(chunk);
};
Inflate.prototype.onEnd = function onEnd(status) {
  if (status === Z_OK) {
    if (this.options.to === "string") {
      this.result = this.chunks.join("");
    } else {
      this.result = flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};
function inflate$1(input, options2) {
  var inflator = new Inflate(options2);
  inflator.push(input, true);
  if (inflator.err) {
    throw inflator.msg || msg[inflator.err];
  }
  return inflator.result;
}
function inflateRaw(input, options2) {
  options2 = options2 || {};
  options2.raw = true;
  return inflate$1(input, options2);
}
var ungzip = inflate$1;
function zero(buf) {
  var len = buf.length;
  while (--len >= 0) {
    buf[len] = 0;
  }
}
var STORED_BLOCK = 0;
var STATIC_TREES = 1;
var DYN_TREES = 2;
var MIN_MATCH = 3;
var MAX_MATCH = 258;
var LENGTH_CODES = 29;
var LITERALS = 256;
var L_CODES = LITERALS + 1 + LENGTH_CODES;
var D_CODES = 30;
var BL_CODES = 19;
var HEAP_SIZE = 2 * L_CODES + 1;
var MAX_BITS = 15;
var Buf_size = 16;
var MAX_BL_BITS = 7;
var END_BLOCK = 256;
var REP_3_6 = 16;
var REPZ_3_10 = 17;
var REPZ_11_138 = 18;
var extra_lbits = (
  /* extra bits for each length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
);
var extra_dbits = (
  /* extra bits for each distance code */
  [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
);
var extra_blbits = (
  /* extra bits for each bit length code */
  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
);
var bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
var DIST_CODE_LEN = 512;
var static_ltree;
var static_dtree;
var _dist_code;
var _length_code;
var base_length;
var base_dist;
function StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {
  this.static_tree = static_tree;
  this.extra_bits = extra_bits;
  this.extra_base = extra_base;
  this.elems = elems;
  this.max_length = max_length;
  this.has_stree = static_tree && static_tree.length;
}
var static_l_desc;
var static_d_desc;
var static_bl_desc;
function TreeDesc(dyn_tree, stat_desc) {
  this.dyn_tree = dyn_tree;
  this.max_code = 0;
  this.stat_desc = stat_desc;
}
function d_code(dist) {
  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];
}
function put_short(s, w) {
  s.pending_buf[s.pending++] = w & 255;
  s.pending_buf[s.pending++] = w >>> 8 & 255;
}
function send_bits(s, value2, length) {
  if (s.bi_valid > Buf_size - length) {
    s.bi_buf |= value2 << s.bi_valid & 65535;
    put_short(s, s.bi_buf);
    s.bi_buf = value2 >> Buf_size - s.bi_valid;
    s.bi_valid += length - Buf_size;
  } else {
    s.bi_buf |= value2 << s.bi_valid & 65535;
    s.bi_valid += length;
  }
}
function send_code(s, c, tree) {
  send_bits(
    s,
    tree[c * 2],
    tree[c * 2 + 1]
    /*.Len*/
  );
}
function bi_reverse(code, len) {
  var res = 0;
  do {
    res |= code & 1;
    code >>>= 1;
    res <<= 1;
  } while (--len > 0);
  return res >>> 1;
}
function bi_flush(s) {
  if (s.bi_valid === 16) {
    put_short(s, s.bi_buf);
    s.bi_buf = 0;
    s.bi_valid = 0;
  } else if (s.bi_valid >= 8) {
    s.pending_buf[s.pending++] = s.bi_buf & 255;
    s.bi_buf >>= 8;
    s.bi_valid -= 8;
  }
}
function gen_bitlen(s, desc) {
  var tree = desc.dyn_tree;
  var max_code = desc.max_code;
  var stree = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var extra = desc.stat_desc.extra_bits;
  var base = desc.stat_desc.extra_base;
  var max_length = desc.stat_desc.max_length;
  var h;
  var n, m;
  var bits;
  var xbits;
  var f;
  var overflow = 0;
  for (bits = 0; bits <= MAX_BITS; bits++) {
    s.bl_count[bits] = 0;
  }
  tree[s.heap[s.heap_max] * 2 + 1] = 0;
  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {
    n = s.heap[h];
    bits = tree[tree[n * 2 + 1] * 2 + 1] + 1;
    if (bits > max_length) {
      bits = max_length;
      overflow++;
    }
    tree[n * 2 + 1] = bits;
    if (n > max_code) {
      continue;
    }
    s.bl_count[bits]++;
    xbits = 0;
    if (n >= base) {
      xbits = extra[n - base];
    }
    f = tree[n * 2];
    s.opt_len += f * (bits + xbits);
    if (has_stree) {
      s.static_len += f * (stree[n * 2 + 1] + xbits);
    }
  }
  if (overflow === 0) {
    return;
  }
  do {
    bits = max_length - 1;
    while (s.bl_count[bits] === 0) {
      bits--;
    }
    s.bl_count[bits]--;
    s.bl_count[bits + 1] += 2;
    s.bl_count[max_length]--;
    overflow -= 2;
  } while (overflow > 0);
  for (bits = max_length; bits !== 0; bits--) {
    n = s.bl_count[bits];
    while (n !== 0) {
      m = s.heap[--h];
      if (m > max_code) {
        continue;
      }
      if (tree[m * 2 + 1] !== bits) {
        s.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];
        tree[m * 2 + 1] = bits;
      }
      n--;
    }
  }
}
function gen_codes(tree, max_code, bl_count) {
  var next_code = new Array(MAX_BITS + 1);
  var code = 0;
  var bits;
  var n;
  for (bits = 1; bits <= MAX_BITS; bits++) {
    next_code[bits] = code = code + bl_count[bits - 1] << 1;
  }
  for (n = 0; n <= max_code; n++) {
    var len = tree[n * 2 + 1];
    if (len === 0) {
      continue;
    }
    tree[n * 2] = bi_reverse(next_code[len]++, len);
  }
}
function tr_static_init() {
  var n;
  var bits;
  var length;
  var code;
  var dist;
  var bl_count = new Array(MAX_BITS + 1);
  static_ltree = new Array((L_CODES + 2) * 2);
  zero(static_ltree);
  static_dtree = new Array(D_CODES * 2);
  zero(static_dtree);
  _dist_code = new Array(DIST_CODE_LEN);
  zero(_dist_code);
  _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);
  zero(_length_code);
  base_length = new Array(LENGTH_CODES);
  zero(base_length);
  base_dist = new Array(D_CODES);
  zero(base_dist);
  length = 0;
  for (code = 0; code < LENGTH_CODES - 1; code++) {
    base_length[code] = length;
    for (n = 0; n < 1 << extra_lbits[code]; n++) {
      _length_code[length++] = code;
    }
  }
  _length_code[length - 1] = code;
  dist = 0;
  for (code = 0; code < 16; code++) {
    base_dist[code] = dist;
    for (n = 0; n < 1 << extra_dbits[code]; n++) {
      _dist_code[dist++] = code;
    }
  }
  dist >>= 7;
  for (; code < D_CODES; code++) {
    base_dist[code] = dist << 7;
    for (n = 0; n < 1 << extra_dbits[code] - 7; n++) {
      _dist_code[256 + dist++] = code;
    }
  }
  for (bits = 0; bits <= MAX_BITS; bits++) {
    bl_count[bits] = 0;
  }
  n = 0;
  while (n <= 143) {
    static_ltree[n * 2 + 1] = 8;
    n++;
    bl_count[8]++;
  }
  while (n <= 255) {
    static_ltree[n * 2 + 1] = 9;
    n++;
    bl_count[9]++;
  }
  while (n <= 279) {
    static_ltree[n * 2 + 1] = 7;
    n++;
    bl_count[7]++;
  }
  while (n <= 287) {
    static_ltree[n * 2 + 1] = 8;
    n++;
    bl_count[8]++;
  }
  gen_codes(static_ltree, L_CODES + 1, bl_count);
  for (n = 0; n < D_CODES; n++) {
    static_dtree[n * 2 + 1] = 5;
    static_dtree[n * 2] = bi_reverse(n, 5);
  }
  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);
  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);
  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS);
}
function init_block(s) {
  var n;
  for (n = 0; n < L_CODES; n++) {
    s.dyn_ltree[n * 2] = 0;
  }
  for (n = 0; n < D_CODES; n++) {
    s.dyn_dtree[n * 2] = 0;
  }
  for (n = 0; n < BL_CODES; n++) {
    s.bl_tree[n * 2] = 0;
  }
  s.dyn_ltree[END_BLOCK * 2] = 1;
  s.opt_len = s.static_len = 0;
  s.last_lit = s.matches = 0;
}
function bi_windup(s) {
  if (s.bi_valid > 8) {
    put_short(s, s.bi_buf);
  } else if (s.bi_valid > 0) {
    s.pending_buf[s.pending++] = s.bi_buf;
  }
  s.bi_buf = 0;
  s.bi_valid = 0;
}
function copy_block(s, buf, len, header) {
  bi_windup(s);
  if (header) {
    put_short(s, len);
    put_short(s, ~len);
  }
  arraySet(s.pending_buf, s.window, buf, len, s.pending);
  s.pending += len;
}
function smaller(tree, n, m, depth) {
  var _n2 = n * 2;
  var _m2 = m * 2;
  return tree[_n2] < tree[_m2] || tree[_n2] === tree[_m2] && depth[n] <= depth[m];
}
function pqdownheap(s, tree, k) {
  var v = s.heap[k];
  var j = k << 1;
  while (j <= s.heap_len) {
    if (j < s.heap_len && smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {
      j++;
    }
    if (smaller(tree, v, s.heap[j], s.depth)) {
      break;
    }
    s.heap[k] = s.heap[j];
    k = j;
    j <<= 1;
  }
  s.heap[k] = v;
}
function compress_block(s, ltree, dtree) {
  var dist;
  var lc;
  var lx = 0;
  var code;
  var extra;
  if (s.last_lit !== 0) {
    do {
      dist = s.pending_buf[s.d_buf + lx * 2] << 8 | s.pending_buf[s.d_buf + lx * 2 + 1];
      lc = s.pending_buf[s.l_buf + lx];
      lx++;
      if (dist === 0) {
        send_code(s, lc, ltree);
      } else {
        code = _length_code[lc];
        send_code(s, code + LITERALS + 1, ltree);
        extra = extra_lbits[code];
        if (extra !== 0) {
          lc -= base_length[code];
          send_bits(s, lc, extra);
        }
        dist--;
        code = d_code(dist);
        send_code(s, code, dtree);
        extra = extra_dbits[code];
        if (extra !== 0) {
          dist -= base_dist[code];
          send_bits(s, dist, extra);
        }
      }
    } while (lx < s.last_lit);
  }
  send_code(s, END_BLOCK, ltree);
}
function build_tree(s, desc) {
  var tree = desc.dyn_tree;
  var stree = desc.stat_desc.static_tree;
  var has_stree = desc.stat_desc.has_stree;
  var elems = desc.stat_desc.elems;
  var n, m;
  var max_code = -1;
  var node14;
  s.heap_len = 0;
  s.heap_max = HEAP_SIZE;
  for (n = 0; n < elems; n++) {
    if (tree[n * 2] !== 0) {
      s.heap[++s.heap_len] = max_code = n;
      s.depth[n] = 0;
    } else {
      tree[n * 2 + 1] = 0;
    }
  }
  while (s.heap_len < 2) {
    node14 = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;
    tree[node14 * 2] = 1;
    s.depth[node14] = 0;
    s.opt_len--;
    if (has_stree) {
      s.static_len -= stree[node14 * 2 + 1];
    }
  }
  desc.max_code = max_code;
  for (n = s.heap_len >> 1; n >= 1; n--) {
    pqdownheap(s, tree, n);
  }
  node14 = elems;
  do {
    n = s.heap[
      1
      /*SMALLEST*/
    ];
    s.heap[
      1
      /*SMALLEST*/
    ] = s.heap[s.heap_len--];
    pqdownheap(
      s,
      tree,
      1
      /*SMALLEST*/
    );
    m = s.heap[
      1
      /*SMALLEST*/
    ];
    s.heap[--s.heap_max] = n;
    s.heap[--s.heap_max] = m;
    tree[node14 * 2] = tree[n * 2] + tree[m * 2];
    s.depth[node14] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;
    tree[n * 2 + 1] = tree[m * 2 + 1] = node14;
    s.heap[
      1
      /*SMALLEST*/
    ] = node14++;
    pqdownheap(
      s,
      tree,
      1
      /*SMALLEST*/
    );
  } while (s.heap_len >= 2);
  s.heap[--s.heap_max] = s.heap[
    1
    /*SMALLEST*/
  ];
  gen_bitlen(s, desc);
  gen_codes(tree, max_code, s.bl_count);
}
function scan_tree(s, tree, max_code) {
  var n;
  var prevlen = -1;
  var curlen;
  var nextlen = tree[0 * 2 + 1];
  var count2 = 0;
  var max_count = 7;
  var min_count = 4;
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  tree[(max_code + 1) * 2 + 1] = 65535;
  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1];
    if (++count2 < max_count && curlen === nextlen) {
      continue;
    } else if (count2 < min_count) {
      s.bl_tree[curlen * 2] += count2;
    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        s.bl_tree[curlen * 2]++;
      }
      s.bl_tree[REP_3_6 * 2]++;
    } else if (count2 <= 10) {
      s.bl_tree[REPZ_3_10 * 2]++;
    } else {
      s.bl_tree[REPZ_11_138 * 2]++;
    }
    count2 = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;
    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;
    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}
function send_tree(s, tree, max_code) {
  var n;
  var prevlen = -1;
  var curlen;
  var nextlen = tree[0 * 2 + 1];
  var count2 = 0;
  var max_count = 7;
  var min_count = 4;
  if (nextlen === 0) {
    max_count = 138;
    min_count = 3;
  }
  for (n = 0; n <= max_code; n++) {
    curlen = nextlen;
    nextlen = tree[(n + 1) * 2 + 1];
    if (++count2 < max_count && curlen === nextlen) {
      continue;
    } else if (count2 < min_count) {
      do {
        send_code(s, curlen, s.bl_tree);
      } while (--count2 !== 0);
    } else if (curlen !== 0) {
      if (curlen !== prevlen) {
        send_code(s, curlen, s.bl_tree);
        count2--;
      }
      send_code(s, REP_3_6, s.bl_tree);
      send_bits(s, count2 - 3, 2);
    } else if (count2 <= 10) {
      send_code(s, REPZ_3_10, s.bl_tree);
      send_bits(s, count2 - 3, 3);
    } else {
      send_code(s, REPZ_11_138, s.bl_tree);
      send_bits(s, count2 - 11, 7);
    }
    count2 = 0;
    prevlen = curlen;
    if (nextlen === 0) {
      max_count = 138;
      min_count = 3;
    } else if (curlen === nextlen) {
      max_count = 6;
      min_count = 3;
    } else {
      max_count = 7;
      min_count = 4;
    }
  }
}
function build_bl_tree(s) {
  var max_blindex;
  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);
  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);
  build_tree(s, s.bl_desc);
  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {
    if (s.bl_tree[bl_order[max_blindex] * 2 + 1] !== 0) {
      break;
    }
  }
  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;
  return max_blindex;
}
function send_all_trees(s, lcodes, dcodes, blcodes) {
  var rank2;
  send_bits(s, lcodes - 257, 5);
  send_bits(s, dcodes - 1, 5);
  send_bits(s, blcodes - 4, 4);
  for (rank2 = 0; rank2 < blcodes; rank2++) {
    send_bits(s, s.bl_tree[bl_order[rank2] * 2 + 1], 3);
  }
  send_tree(s, s.dyn_ltree, lcodes - 1);
  send_tree(s, s.dyn_dtree, dcodes - 1);
}
function detect_data_type(s) {
  var black_mask = 4093624447;
  var n;
  for (n = 0; n <= 31; n++, black_mask >>>= 1) {
    if (black_mask & 1 && s.dyn_ltree[n * 2] !== 0) {
      return Z_BINARY;
    }
  }
  if (s.dyn_ltree[9 * 2] !== 0 || s.dyn_ltree[10 * 2] !== 0 || s.dyn_ltree[13 * 2] !== 0) {
    return Z_TEXT;
  }
  for (n = 32; n < LITERALS; n++) {
    if (s.dyn_ltree[n * 2] !== 0) {
      return Z_TEXT;
    }
  }
  return Z_BINARY;
}
var static_init_done = false;
function _tr_init(s) {
  if (!static_init_done) {
    tr_static_init();
    static_init_done = true;
  }
  s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);
  s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);
  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);
  s.bi_buf = 0;
  s.bi_valid = 0;
  init_block(s);
}
function _tr_stored_block(s, buf, stored_len, last4) {
  send_bits(s, (STORED_BLOCK << 1) + (last4 ? 1 : 0), 3);
  copy_block(s, buf, stored_len, true);
}
function _tr_align(s) {
  send_bits(s, STATIC_TREES << 1, 3);
  send_code(s, END_BLOCK, static_ltree);
  bi_flush(s);
}
function _tr_flush_block(s, buf, stored_len, last4) {
  var opt_lenb, static_lenb;
  var max_blindex = 0;
  if (s.level > 0) {
    if (s.strm.data_type === Z_UNKNOWN) {
      s.strm.data_type = detect_data_type(s);
    }
    build_tree(s, s.l_desc);
    build_tree(s, s.d_desc);
    max_blindex = build_bl_tree(s);
    opt_lenb = s.opt_len + 3 + 7 >>> 3;
    static_lenb = s.static_len + 3 + 7 >>> 3;
    if (static_lenb <= opt_lenb) {
      opt_lenb = static_lenb;
    }
  } else {
    opt_lenb = static_lenb = stored_len + 5;
  }
  if (stored_len + 4 <= opt_lenb && buf !== -1) {
    _tr_stored_block(s, buf, stored_len, last4);
  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {
    send_bits(s, (STATIC_TREES << 1) + (last4 ? 1 : 0), 3);
    compress_block(s, static_ltree, static_dtree);
  } else {
    send_bits(s, (DYN_TREES << 1) + (last4 ? 1 : 0), 3);
    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);
    compress_block(s, s.dyn_ltree, s.dyn_dtree);
  }
  init_block(s);
  if (last4) {
    bi_windup(s);
  }
}
function _tr_tally(s, dist, lc) {
  s.pending_buf[s.d_buf + s.last_lit * 2] = dist >>> 8 & 255;
  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 255;
  s.pending_buf[s.l_buf + s.last_lit] = lc & 255;
  s.last_lit++;
  if (dist === 0) {
    s.dyn_ltree[lc * 2]++;
  } else {
    s.matches++;
    dist--;
    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]++;
    s.dyn_dtree[d_code(dist) * 2]++;
  }
  return s.last_lit === s.lit_bufsize - 1;
}
var MAX_MEM_LEVEL = 9;
var LENGTH_CODES$1 = 29;
var LITERALS$1 = 256;
var L_CODES$1 = LITERALS$1 + 1 + LENGTH_CODES$1;
var D_CODES$1 = 30;
var BL_CODES$1 = 19;
var HEAP_SIZE$1 = 2 * L_CODES$1 + 1;
var MAX_BITS$1 = 15;
var MIN_MATCH$1 = 3;
var MAX_MATCH$1 = 258;
var MIN_LOOKAHEAD = MAX_MATCH$1 + MIN_MATCH$1 + 1;
var PRESET_DICT = 32;
var INIT_STATE = 42;
var EXTRA_STATE = 69;
var NAME_STATE = 73;
var COMMENT_STATE = 91;
var HCRC_STATE = 103;
var BUSY_STATE = 113;
var FINISH_STATE = 666;
var BS_NEED_MORE = 1;
var BS_BLOCK_DONE = 2;
var BS_FINISH_STARTED = 3;
var BS_FINISH_DONE = 4;
var OS_CODE = 3;
function err(strm, errorCode) {
  strm.msg = msg[errorCode];
  return errorCode;
}
function rank(f) {
  return (f << 1) - (f > 4 ? 9 : 0);
}
function zero$1(buf) {
  var len = buf.length;
  while (--len >= 0) {
    buf[len] = 0;
  }
}
function flush_pending(strm) {
  var s = strm.state;
  var len = s.pending;
  if (len > strm.avail_out) {
    len = strm.avail_out;
  }
  if (len === 0) {
    return;
  }
  arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);
  strm.next_out += len;
  s.pending_out += len;
  strm.total_out += len;
  strm.avail_out -= len;
  s.pending -= len;
  if (s.pending === 0) {
    s.pending_out = 0;
  }
}
function flush_block_only(s, last4) {
  _tr_flush_block(s, s.block_start >= 0 ? s.block_start : -1, s.strstart - s.block_start, last4);
  s.block_start = s.strstart;
  flush_pending(s.strm);
}
function put_byte(s, b) {
  s.pending_buf[s.pending++] = b;
}
function putShortMSB(s, b) {
  s.pending_buf[s.pending++] = b >>> 8 & 255;
  s.pending_buf[s.pending++] = b & 255;
}
function read_buf(strm, buf, start2, size) {
  var len = strm.avail_in;
  if (len > size) {
    len = size;
  }
  if (len === 0) {
    return 0;
  }
  strm.avail_in -= len;
  arraySet(buf, strm.input, strm.next_in, len, start2);
  if (strm.state.wrap === 1) {
    strm.adler = adler32(strm.adler, buf, len, start2);
  } else if (strm.state.wrap === 2) {
    strm.adler = crc32(strm.adler, buf, len, start2);
  }
  strm.next_in += len;
  strm.total_in += len;
  return len;
}
function longest_match(s, cur_match) {
  var chain_length = s.max_chain_length;
  var scan = s.strstart;
  var match;
  var len;
  var best_len = s.prev_length;
  var nice_match = s.nice_match;
  var limit5 = s.strstart > s.w_size - MIN_LOOKAHEAD ? s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0;
  var _win = s.window;
  var wmask = s.w_mask;
  var prev = s.prev;
  var strend = s.strstart + MAX_MATCH$1;
  var scan_end1 = _win[scan + best_len - 1];
  var scan_end = _win[scan + best_len];
  if (s.prev_length >= s.good_match) {
    chain_length >>= 2;
  }
  if (nice_match > s.lookahead) {
    nice_match = s.lookahead;
  }
  do {
    match = cur_match;
    if (_win[match + best_len] !== scan_end || _win[match + best_len - 1] !== scan_end1 || _win[match] !== _win[scan] || _win[++match] !== _win[scan + 1]) {
      continue;
    }
    scan += 2;
    match++;
    do {
    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && _win[++scan] === _win[++match] && scan < strend);
    len = MAX_MATCH$1 - (strend - scan);
    scan = strend - MAX_MATCH$1;
    if (len > best_len) {
      s.match_start = cur_match;
      best_len = len;
      if (len >= nice_match) {
        break;
      }
      scan_end1 = _win[scan + best_len - 1];
      scan_end = _win[scan + best_len];
    }
  } while ((cur_match = prev[cur_match & wmask]) > limit5 && --chain_length !== 0);
  if (best_len <= s.lookahead) {
    return best_len;
  }
  return s.lookahead;
}
function fill_window(s) {
  var _w_size = s.w_size;
  var p, n, m, more, str;
  do {
    more = s.window_size - s.lookahead - s.strstart;
    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {
      arraySet(s.window, s.window, _w_size, _w_size, 0);
      s.match_start -= _w_size;
      s.strstart -= _w_size;
      s.block_start -= _w_size;
      n = s.hash_size;
      p = n;
      do {
        m = s.head[--p];
        s.head[p] = m >= _w_size ? m - _w_size : 0;
      } while (--n);
      n = _w_size;
      p = n;
      do {
        m = s.prev[--p];
        s.prev[p] = m >= _w_size ? m - _w_size : 0;
      } while (--n);
      more += _w_size;
    }
    if (s.strm.avail_in === 0) {
      break;
    }
    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);
    s.lookahead += n;
    if (s.lookahead + s.insert >= MIN_MATCH$1) {
      str = s.strstart - s.insert;
      s.ins_h = s.window[str];
      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + 1]) & s.hash_mask;
      while (s.insert) {
        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH$1 - 1]) & s.hash_mask;
        s.prev[str & s.w_mask] = s.head[s.ins_h];
        s.head[s.ins_h] = str;
        str++;
        s.insert--;
        if (s.lookahead + s.insert < MIN_MATCH$1) {
          break;
        }
      }
    }
  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);
}
function deflate_stored(s, flush) {
  var max_block_size = 65535;
  if (max_block_size > s.pending_buf_size - 5) {
    max_block_size = s.pending_buf_size - 5;
  }
  for (; ; ) {
    if (s.lookahead <= 1) {
      fill_window(s);
      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break;
      }
    }
    s.strstart += s.lookahead;
    s.lookahead = 0;
    var max_start = s.block_start + max_block_size;
    if (s.strstart === 0 || s.strstart >= max_start) {
      s.lookahead = s.strstart - max_start;
      s.strstart = max_start;
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    }
    if (s.strstart - s.block_start >= s.w_size - MIN_LOOKAHEAD) {
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    return BS_FINISH_DONE;
  }
  if (s.strstart > s.block_start) {
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
  }
  return BS_NEED_MORE;
}
function deflate_fast(s, flush) {
  var hash_head;
  var bflush;
  for (; ; ) {
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break;
      }
    }
    hash_head = 0;
    if (s.lookahead >= MIN_MATCH$1) {
      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH$1 - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
    }
    if (hash_head !== 0 && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {
      s.match_length = longest_match(s, hash_head);
    }
    if (s.match_length >= MIN_MATCH$1) {
      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH$1);
      s.lookahead -= s.match_length;
      if (s.match_length <= s.max_lazy_match && s.lookahead >= MIN_MATCH$1) {
        s.match_length--;
        do {
          s.strstart++;
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH$1 - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
        } while (--s.match_length !== 0);
        s.strstart++;
      } else {
        s.strstart += s.match_length;
        s.match_length = 0;
        s.ins_h = s.window[s.strstart];
        s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + 1]) & s.hash_mask;
      }
    } else {
      bflush = _tr_tally(s, 0, s.window[s.strstart]);
      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    }
  }
  s.insert = s.strstart < MIN_MATCH$1 - 1 ? s.strstart : MIN_MATCH$1 - 1;
  if (flush === Z_FINISH) {
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
  }
  return BS_BLOCK_DONE;
}
function deflate_slow(s, flush) {
  var hash_head;
  var bflush;
  var max_insert;
  for (; ; ) {
    if (s.lookahead < MIN_LOOKAHEAD) {
      fill_window(s);
      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break;
      }
    }
    hash_head = 0;
    if (s.lookahead >= MIN_MATCH$1) {
      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH$1 - 1]) & s.hash_mask;
      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = s.strstart;
    }
    s.prev_length = s.match_length;
    s.prev_match = s.match_start;
    s.match_length = MIN_MATCH$1 - 1;
    if (hash_head !== 0 && s.prev_length < s.max_lazy_match && s.strstart - hash_head <= s.w_size - MIN_LOOKAHEAD) {
      s.match_length = longest_match(s, hash_head);
      if (s.match_length <= 5 && (s.strategy === Z_FILTERED || s.match_length === MIN_MATCH$1 && s.strstart - s.match_start > 4096)) {
        s.match_length = MIN_MATCH$1 - 1;
      }
    }
    if (s.prev_length >= MIN_MATCH$1 && s.match_length <= s.prev_length) {
      max_insert = s.strstart + s.lookahead - MIN_MATCH$1;
      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH$1);
      s.lookahead -= s.prev_length - 1;
      s.prev_length -= 2;
      do {
        if (++s.strstart <= max_insert) {
          s.ins_h = (s.ins_h << s.hash_shift ^ s.window[s.strstart + MIN_MATCH$1 - 1]) & s.hash_mask;
          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];
          s.head[s.ins_h] = s.strstart;
        }
      } while (--s.prev_length !== 0);
      s.match_available = 0;
      s.match_length = MIN_MATCH$1 - 1;
      s.strstart++;
      if (bflush) {
        flush_block_only(s, false);
        if (s.strm.avail_out === 0) {
          return BS_NEED_MORE;
        }
      }
    } else if (s.match_available) {
      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);
      if (bflush) {
        flush_block_only(s, false);
      }
      s.strstart++;
      s.lookahead--;
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    } else {
      s.match_available = 1;
      s.strstart++;
      s.lookahead--;
    }
  }
  if (s.match_available) {
    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);
    s.match_available = 0;
  }
  s.insert = s.strstart < MIN_MATCH$1 - 1 ? s.strstart : MIN_MATCH$1 - 1;
  if (flush === Z_FINISH) {
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
  }
  return BS_BLOCK_DONE;
}
function deflate_rle(s, flush) {
  var bflush;
  var prev;
  var scan, strend;
  var _win = s.window;
  for (; ; ) {
    if (s.lookahead <= MAX_MATCH$1) {
      fill_window(s);
      if (s.lookahead <= MAX_MATCH$1 && flush === Z_NO_FLUSH) {
        return BS_NEED_MORE;
      }
      if (s.lookahead === 0) {
        break;
      }
    }
    s.match_length = 0;
    if (s.lookahead >= MIN_MATCH$1 && s.strstart > 0) {
      scan = s.strstart - 1;
      prev = _win[scan];
      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {
        strend = s.strstart + MAX_MATCH$1;
        do {
        } while (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan] && scan < strend);
        s.match_length = MAX_MATCH$1 - (strend - scan);
        if (s.match_length > s.lookahead) {
          s.match_length = s.lookahead;
        }
      }
    }
    if (s.match_length >= MIN_MATCH$1) {
      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH$1);
      s.lookahead -= s.match_length;
      s.strstart += s.match_length;
      s.match_length = 0;
    } else {
      bflush = _tr_tally(s, 0, s.window[s.strstart]);
      s.lookahead--;
      s.strstart++;
    }
    if (bflush) {
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
  }
  return BS_BLOCK_DONE;
}
function deflate_huff(s, flush) {
  var bflush;
  for (; ; ) {
    if (s.lookahead === 0) {
      fill_window(s);
      if (s.lookahead === 0) {
        if (flush === Z_NO_FLUSH) {
          return BS_NEED_MORE;
        }
        break;
      }
    }
    s.match_length = 0;
    bflush = _tr_tally(s, 0, s.window[s.strstart]);
    s.lookahead--;
    s.strstart++;
    if (bflush) {
      flush_block_only(s, false);
      if (s.strm.avail_out === 0) {
        return BS_NEED_MORE;
      }
    }
  }
  s.insert = 0;
  if (flush === Z_FINISH) {
    flush_block_only(s, true);
    if (s.strm.avail_out === 0) {
      return BS_FINISH_STARTED;
    }
    return BS_FINISH_DONE;
  }
  if (s.last_lit) {
    flush_block_only(s, false);
    if (s.strm.avail_out === 0) {
      return BS_NEED_MORE;
    }
  }
  return BS_BLOCK_DONE;
}
function Config(good_length, max_lazy, nice_length, max_chain, func32) {
  this.good_length = good_length;
  this.max_lazy = max_lazy;
  this.nice_length = nice_length;
  this.max_chain = max_chain;
  this.func = func32;
}
var configurationTable = function() {
  var table = [
    /*      good lazy nice chain */
    new Config(0, 0, 0, 0, deflate_stored),
    /* 0 store only */
    new Config(4, 4, 8, 4, deflate_fast),
    /* 1 max speed, no lazy matches */
    new Config(4, 5, 16, 8, deflate_fast),
    /* 2 */
    new Config(4, 6, 32, 32, deflate_fast),
    /* 3 */
    new Config(4, 4, 16, 16, deflate_slow),
    /* 4 lazy matches */
    new Config(8, 16, 32, 32, deflate_slow),
    /* 5 */
    new Config(8, 16, 128, 128, deflate_slow),
    /* 6 */
    new Config(8, 32, 128, 256, deflate_slow),
    /* 7 */
    new Config(32, 128, 258, 1024, deflate_slow),
    /* 8 */
    new Config(32, 258, 258, 4096, deflate_slow)
    /* 9 max compression */
  ];
  configurationTable = function() {
    return table;
  };
  return table;
};
function lm_init(s) {
  s.window_size = 2 * s.w_size;
  zero$1(s.head);
  var table = configurationTable();
  s.max_lazy_match = table[s.level].max_lazy;
  s.good_match = table[s.level].good_length;
  s.nice_match = table[s.level].nice_length;
  s.max_chain_length = table[s.level].max_chain;
  s.strstart = 0;
  s.block_start = 0;
  s.lookahead = 0;
  s.insert = 0;
  s.match_length = s.prev_length = MIN_MATCH$1 - 1;
  s.match_available = 0;
  s.ins_h = 0;
}
function DeflateState() {
  this.strm = null;
  this.status = 0;
  this.pending_buf = null;
  this.pending_buf_size = 0;
  this.pending_out = 0;
  this.pending = 0;
  this.wrap = 0;
  this.gzhead = null;
  this.gzindex = 0;
  this.method = Z_DEFLATED;
  this.last_flush = -1;
  this.w_size = 0;
  this.w_bits = 0;
  this.w_mask = 0;
  this.window = null;
  this.window_size = 0;
  this.prev = null;
  this.head = null;
  this.ins_h = 0;
  this.hash_size = 0;
  this.hash_bits = 0;
  this.hash_mask = 0;
  this.hash_shift = 0;
  this.block_start = 0;
  this.match_length = 0;
  this.prev_match = 0;
  this.match_available = 0;
  this.strstart = 0;
  this.match_start = 0;
  this.lookahead = 0;
  this.prev_length = 0;
  this.max_chain_length = 0;
  this.max_lazy_match = 0;
  this.level = 0;
  this.strategy = 0;
  this.good_match = 0;
  this.nice_match = 0;
  this.dyn_ltree = Buf16(HEAP_SIZE$1 * 2);
  this.dyn_dtree = Buf16((2 * D_CODES$1 + 1) * 2);
  this.bl_tree = Buf16((2 * BL_CODES$1 + 1) * 2);
  zero$1(this.dyn_ltree);
  zero$1(this.dyn_dtree);
  zero$1(this.bl_tree);
  this.l_desc = null;
  this.d_desc = null;
  this.bl_desc = null;
  this.bl_count = Buf16(MAX_BITS$1 + 1);
  this.heap = Buf16(2 * L_CODES$1 + 1);
  zero$1(this.heap);
  this.heap_len = 0;
  this.heap_max = 0;
  this.depth = Buf16(2 * L_CODES$1 + 1);
  zero$1(this.depth);
  this.l_buf = 0;
  this.lit_bufsize = 0;
  this.last_lit = 0;
  this.d_buf = 0;
  this.opt_len = 0;
  this.static_len = 0;
  this.matches = 0;
  this.insert = 0;
  this.bi_buf = 0;
  this.bi_valid = 0;
}
function deflateResetKeep(strm) {
  var s;
  if (!strm || !strm.state) {
    return err(strm, Z_STREAM_ERROR);
  }
  strm.total_in = strm.total_out = 0;
  strm.data_type = Z_UNKNOWN;
  s = strm.state;
  s.pending = 0;
  s.pending_out = 0;
  if (s.wrap < 0) {
    s.wrap = -s.wrap;
  }
  s.status = s.wrap ? INIT_STATE : BUSY_STATE;
  strm.adler = s.wrap === 2 ? 0 : 1;
  s.last_flush = Z_NO_FLUSH;
  _tr_init(s);
  return Z_OK;
}
function deflateReset(strm) {
  var ret = deflateResetKeep(strm);
  if (ret === Z_OK) {
    lm_init(strm.state);
  }
  return ret;
}
function deflateSetHeader(strm, head) {
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR;
  }
  if (strm.state.wrap !== 2) {
    return Z_STREAM_ERROR;
  }
  strm.state.gzhead = head;
  return Z_OK;
}
function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {
  if (!strm) {
    return Z_STREAM_ERROR;
  }
  var wrap2 = 1;
  if (level === Z_DEFAULT_COMPRESSION) {
    level = 6;
  }
  if (windowBits < 0) {
    wrap2 = 0;
    windowBits = -windowBits;
  } else if (windowBits > 15) {
    wrap2 = 2;
    windowBits -= 16;
  }
  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED || windowBits < 8 || windowBits > 15 || level < 0 || level > 9 || strategy < 0 || strategy > Z_FIXED) {
    return err(strm, Z_STREAM_ERROR);
  }
  if (windowBits === 8) {
    windowBits = 9;
  }
  var s = new DeflateState();
  strm.state = s;
  s.strm = strm;
  s.wrap = wrap2;
  s.gzhead = null;
  s.w_bits = windowBits;
  s.w_size = 1 << s.w_bits;
  s.w_mask = s.w_size - 1;
  s.hash_bits = memLevel + 7;
  s.hash_size = 1 << s.hash_bits;
  s.hash_mask = s.hash_size - 1;
  s.hash_shift = ~~((s.hash_bits + MIN_MATCH$1 - 1) / MIN_MATCH$1);
  s.window = Buf8(s.w_size * 2);
  s.head = Buf16(s.hash_size);
  s.prev = Buf16(s.w_size);
  s.lit_bufsize = 1 << memLevel + 6;
  s.pending_buf_size = s.lit_bufsize * 4;
  s.pending_buf = Buf8(s.pending_buf_size);
  s.d_buf = 1 * s.lit_bufsize;
  s.l_buf = (1 + 2) * s.lit_bufsize;
  s.level = level;
  s.strategy = strategy;
  s.method = method;
  return deflateReset(strm);
}
function deflate(strm, flush) {
  var old_flush, s;
  var beg, val;
  if (!strm || !strm.state || flush > Z_BLOCK || flush < 0) {
    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;
  }
  s = strm.state;
  if (!strm.output || !strm.input && strm.avail_in !== 0 || s.status === FINISH_STATE && flush !== Z_FINISH) {
    return err(strm, strm.avail_out === 0 ? Z_BUF_ERROR : Z_STREAM_ERROR);
  }
  s.strm = strm;
  old_flush = s.last_flush;
  s.last_flush = flush;
  if (s.status === INIT_STATE) {
    if (s.wrap === 2) {
      strm.adler = 0;
      put_byte(s, 31);
      put_byte(s, 139);
      put_byte(s, 8);
      if (!s.gzhead) {
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, 0);
        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);
        put_byte(s, OS_CODE);
        s.status = BUSY_STATE;
      } else {
        put_byte(
          s,
          (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (!s.gzhead.extra ? 0 : 4) + (!s.gzhead.name ? 0 : 8) + (!s.gzhead.comment ? 0 : 16)
        );
        put_byte(s, s.gzhead.time & 255);
        put_byte(s, s.gzhead.time >> 8 & 255);
        put_byte(s, s.gzhead.time >> 16 & 255);
        put_byte(s, s.gzhead.time >> 24 & 255);
        put_byte(s, s.level === 9 ? 2 : s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ? 4 : 0);
        put_byte(s, s.gzhead.os & 255);
        if (s.gzhead.extra && s.gzhead.extra.length) {
          put_byte(s, s.gzhead.extra.length & 255);
          put_byte(s, s.gzhead.extra.length >> 8 & 255);
        }
        if (s.gzhead.hcrc) {
          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);
        }
        s.gzindex = 0;
        s.status = EXTRA_STATE;
      }
    } else {
      var header = Z_DEFLATED + (s.w_bits - 8 << 4) << 8;
      var level_flags = -1;
      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {
        level_flags = 0;
      } else if (s.level < 6) {
        level_flags = 1;
      } else if (s.level === 6) {
        level_flags = 2;
      } else {
        level_flags = 3;
      }
      header |= level_flags << 6;
      if (s.strstart !== 0) {
        header |= PRESET_DICT;
      }
      header += 31 - header % 31;
      s.status = BUSY_STATE;
      putShortMSB(s, header);
      if (s.strstart !== 0) {
        putShortMSB(s, strm.adler >>> 16);
        putShortMSB(s, strm.adler & 65535);
      }
      strm.adler = 1;
    }
  }
  if (s.status === EXTRA_STATE) {
    if (s.gzhead.extra) {
      beg = s.pending;
      while (s.gzindex < (s.gzhead.extra.length & 65535)) {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            break;
          }
        }
        put_byte(s, s.gzhead.extra[s.gzindex] & 255);
        s.gzindex++;
      }
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (s.gzindex === s.gzhead.extra.length) {
        s.gzindex = 0;
        s.status = NAME_STATE;
      }
    } else {
      s.status = NAME_STATE;
    }
  }
  if (s.status === NAME_STATE) {
    if (s.gzhead.name) {
      beg = s.pending;
      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        if (s.gzindex < s.gzhead.name.length) {
          val = s.gzhead.name.charCodeAt(s.gzindex++) & 255;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.gzindex = 0;
        s.status = COMMENT_STATE;
      }
    } else {
      s.status = COMMENT_STATE;
    }
  }
  if (s.status === COMMENT_STATE) {
    if (s.gzhead.comment) {
      beg = s.pending;
      do {
        if (s.pending === s.pending_buf_size) {
          if (s.gzhead.hcrc && s.pending > beg) {
            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
          }
          flush_pending(strm);
          beg = s.pending;
          if (s.pending === s.pending_buf_size) {
            val = 1;
            break;
          }
        }
        if (s.gzindex < s.gzhead.comment.length) {
          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 255;
        } else {
          val = 0;
        }
        put_byte(s, val);
      } while (val !== 0);
      if (s.gzhead.hcrc && s.pending > beg) {
        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);
      }
      if (val === 0) {
        s.status = HCRC_STATE;
      }
    } else {
      s.status = HCRC_STATE;
    }
  }
  if (s.status === HCRC_STATE) {
    if (s.gzhead.hcrc) {
      if (s.pending + 2 > s.pending_buf_size) {
        flush_pending(strm);
      }
      if (s.pending + 2 <= s.pending_buf_size) {
        put_byte(s, strm.adler & 255);
        put_byte(s, strm.adler >> 8 & 255);
        strm.adler = 0;
        s.status = BUSY_STATE;
      }
    } else {
      s.status = BUSY_STATE;
    }
  }
  if (s.pending !== 0) {
    flush_pending(strm);
    if (strm.avail_out === 0) {
      s.last_flush = -1;
      return Z_OK;
    }
  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) && flush !== Z_FINISH) {
    return err(strm, Z_BUF_ERROR);
  }
  if (s.status === FINISH_STATE && strm.avail_in !== 0) {
    return err(strm, Z_BUF_ERROR);
  }
  if (strm.avail_in !== 0 || s.lookahead !== 0 || flush !== Z_NO_FLUSH && s.status !== FINISH_STATE) {
    var bstate = s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) : s.strategy === Z_RLE ? deflate_rle(s, flush) : configurationTable()[s.level].func(s, flush);
    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {
      s.status = FINISH_STATE;
    }
    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {
      if (strm.avail_out === 0) {
        s.last_flush = -1;
      }
      return Z_OK;
    }
    if (bstate === BS_BLOCK_DONE) {
      if (flush === Z_PARTIAL_FLUSH) {
        _tr_align(s);
      } else if (flush !== Z_BLOCK) {
        _tr_stored_block(s, 0, 0, false);
        if (flush === Z_FULL_FLUSH) {
          zero$1(s.head);
          if (s.lookahead === 0) {
            s.strstart = 0;
            s.block_start = 0;
            s.insert = 0;
          }
        }
      }
      flush_pending(strm);
      if (strm.avail_out === 0) {
        s.last_flush = -1;
        return Z_OK;
      }
    }
  }
  if (flush !== Z_FINISH) {
    return Z_OK;
  }
  if (s.wrap <= 0) {
    return Z_STREAM_END;
  }
  if (s.wrap === 2) {
    put_byte(s, strm.adler & 255);
    put_byte(s, strm.adler >> 8 & 255);
    put_byte(s, strm.adler >> 16 & 255);
    put_byte(s, strm.adler >> 24 & 255);
    put_byte(s, strm.total_in & 255);
    put_byte(s, strm.total_in >> 8 & 255);
    put_byte(s, strm.total_in >> 16 & 255);
    put_byte(s, strm.total_in >> 24 & 255);
  } else {
    putShortMSB(s, strm.adler >>> 16);
    putShortMSB(s, strm.adler & 65535);
  }
  flush_pending(strm);
  if (s.wrap > 0) {
    s.wrap = -s.wrap;
  }
  return s.pending !== 0 ? Z_OK : Z_STREAM_END;
}
function deflateEnd(strm) {
  var status;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR;
  }
  status = strm.state.status;
  if (status !== INIT_STATE && status !== EXTRA_STATE && status !== NAME_STATE && status !== COMMENT_STATE && status !== HCRC_STATE && status !== BUSY_STATE && status !== FINISH_STATE) {
    return err(strm, Z_STREAM_ERROR);
  }
  strm.state = null;
  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;
}
function deflateSetDictionary(strm, dictionary) {
  var dictLength = dictionary.length;
  var s;
  var str, n;
  var wrap2;
  var avail;
  var next;
  var input;
  var tmpDict;
  if (!strm || !strm.state) {
    return Z_STREAM_ERROR;
  }
  s = strm.state;
  wrap2 = s.wrap;
  if (wrap2 === 2 || wrap2 === 1 && s.status !== INIT_STATE || s.lookahead) {
    return Z_STREAM_ERROR;
  }
  if (wrap2 === 1) {
    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);
  }
  s.wrap = 0;
  if (dictLength >= s.w_size) {
    if (wrap2 === 0) {
      zero$1(s.head);
      s.strstart = 0;
      s.block_start = 0;
      s.insert = 0;
    }
    tmpDict = Buf8(s.w_size);
    arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);
    dictionary = tmpDict;
    dictLength = s.w_size;
  }
  avail = strm.avail_in;
  next = strm.next_in;
  input = strm.input;
  strm.avail_in = dictLength;
  strm.next_in = 0;
  strm.input = dictionary;
  fill_window(s);
  while (s.lookahead >= MIN_MATCH$1) {
    str = s.strstart;
    n = s.lookahead - (MIN_MATCH$1 - 1);
    do {
      s.ins_h = (s.ins_h << s.hash_shift ^ s.window[str + MIN_MATCH$1 - 1]) & s.hash_mask;
      s.prev[str & s.w_mask] = s.head[s.ins_h];
      s.head[s.ins_h] = str;
      str++;
    } while (--n);
    s.strstart = str;
    s.lookahead = MIN_MATCH$1 - 1;
    fill_window(s);
  }
  s.strstart += s.lookahead;
  s.block_start = s.strstart;
  s.insert = s.lookahead;
  s.lookahead = 0;
  s.match_length = s.prev_length = MIN_MATCH$1 - 1;
  s.match_available = 0;
  strm.next_in = next;
  strm.input = input;
  strm.avail_in = avail;
  s.wrap = wrap2;
  return Z_OK;
}
var toString$1 = Object.prototype.toString;
var Deflate = function Deflate2(options2) {
  this.options = assign({
    level: Z_DEFAULT_COMPRESSION,
    method: Z_DEFLATED,
    chunkSize: 16384,
    windowBits: 15,
    memLevel: 8,
    strategy: Z_DEFAULT_STRATEGY,
    to: ""
  }, options2 || {});
  var opt = this.options;
  if (opt.raw && opt.windowBits > 0) {
    opt.windowBits = -opt.windowBits;
  } else if (opt.gzip && opt.windowBits > 0 && opt.windowBits < 16) {
    opt.windowBits += 16;
  }
  this.err = 0;
  this.msg = "";
  this.ended = false;
  this.chunks = [];
  this.strm = new ZStream();
  this.strm.avail_out = 0;
  var status = deflateInit2(
    this.strm,
    opt.level,
    opt.method,
    opt.windowBits,
    opt.memLevel,
    opt.strategy
  );
  if (status !== Z_OK) {
    throw new Error(msg[status]);
  }
  if (opt.header) {
    deflateSetHeader(this.strm, opt.header);
  }
  if (opt.dictionary) {
    var dict2;
    if (typeof opt.dictionary === "string") {
      dict2 = string2buf(opt.dictionary);
    } else if (toString$1.call(opt.dictionary) === "[object ArrayBuffer]") {
      dict2 = new Uint8Array(opt.dictionary);
    } else {
      dict2 = opt.dictionary;
    }
    status = deflateSetDictionary(this.strm, dict2);
    if (status !== Z_OK) {
      throw new Error(msg[status]);
    }
    this.Ae = true;
  }
};
Deflate.prototype.push = function push3(data2, mode) {
  var strm = this.strm;
  var chunkSize = this.options.chunkSize;
  var status, _mode;
  if (this.ended) {
    return false;
  }
  _mode = mode === ~~mode ? mode : mode === true ? Z_FINISH : Z_NO_FLUSH;
  if (typeof data2 === "string") {
    strm.input = string2buf(data2);
  } else if (toString$1.call(data2) === "[object ArrayBuffer]") {
    strm.input = new Uint8Array(data2);
  } else {
    strm.input = data2;
  }
  strm.next_in = 0;
  strm.avail_in = strm.input.length;
  do {
    if (strm.avail_out === 0) {
      strm.output = Buf8(chunkSize);
      strm.next_out = 0;
      strm.avail_out = chunkSize;
    }
    status = deflate(strm, _mode);
    if (status !== Z_STREAM_END && status !== Z_OK) {
      this.onEnd(status);
      this.ended = true;
      return false;
    }
    if (strm.avail_out === 0 || strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH)) {
      if (this.options.to === "string") {
        this.onData(buf2binstring(shrinkBuf(strm.output, strm.next_out)));
      } else {
        this.onData(shrinkBuf(strm.output, strm.next_out));
      }
    }
  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);
  if (_mode === Z_FINISH) {
    status = deflateEnd(this.strm);
    this.onEnd(status);
    this.ended = true;
    return status === Z_OK;
  }
  if (_mode === Z_SYNC_FLUSH) {
    this.onEnd(Z_OK);
    strm.avail_out = 0;
    return true;
  }
  return true;
};
Deflate.prototype.onData = function onData2(chunk) {
  this.chunks.push(chunk);
};
Deflate.prototype.onEnd = function onEnd2(status) {
  if (status === Z_OK) {
    if (this.options.to === "string") {
      this.result = this.chunks.join("");
    } else {
      this.result = flattenChunks(this.chunks);
    }
  }
  this.chunks = [];
  this.err = status;
  this.msg = this.strm.msg;
};
function deflate$1(input, options2) {
  var deflator = new Deflate(options2);
  deflator.push(input, true);
  if (deflator.err) {
    throw deflator.msg || msg[deflator.err];
  }
  return deflator.result;
}
function deflateRaw(input, options2) {
  options2 = options2 || {};
  options2.raw = true;
  return deflate$1(input, options2);
}
function gzip(input, options2) {
  options2 = options2 || {};
  options2.gzip = true;
  return deflate$1(input, options2);
}

// node_modules/@progress/kendo-drawing/dist/es/pdf/deflate.js
var deflate2 = deflate$1;
function supportsDeflate() {
  return true;
}

// node_modules/@progress/kendo-drawing/dist/es/pdf/core.js
var browser3 = support_default.browser;
var NL = "\n";
var RESOURCE_COUNTER = 0;
var PAPER_SIZE = {
  a0: [2383.94, 3370.39],
  a1: [1683.78, 2383.94],
  a2: [1190.55, 1683.78],
  a3: [841.89, 1190.55],
  a4: [595.28, 841.89],
  a5: [419.53, 595.28],
  a6: [297.64, 419.53],
  a7: [209.76, 297.64],
  a8: [147.4, 209.76],
  a9: [104.88, 147.4],
  a10: [73.7, 104.88],
  b0: [2834.65, 4008.19],
  b1: [2004.09, 2834.65],
  b2: [1417.32, 2004.09],
  b3: [1000.63, 1417.32],
  b4: [708.66, 1000.63],
  b5: [498.9, 708.66],
  b6: [354.33, 498.9],
  b7: [249.45, 354.33],
  b8: [175.75, 249.45],
  b9: [124.72, 175.75],
  b10: [87.87, 124.72],
  c0: [2599.37, 3676.54],
  c1: [1836.85, 2599.37],
  c2: [1298.27, 1836.85],
  c3: [918.43, 1298.27],
  c4: [649.13, 918.43],
  c5: [459.21, 649.13],
  c6: [323.15, 459.21],
  c7: [229.61, 323.15],
  c8: [161.57, 229.61],
  c9: [113.39, 161.57],
  c10: [79.37, 113.39],
  executive: [521.86, 756],
  folio: [612, 936],
  legal: [612, 1008],
  letter: [612, 792],
  tabloid: [792, 1224]
};
function makeOutput() {
  var indentLevel = 0, output = BinaryStream();
  function out() {
    var arguments$1 = arguments;
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments$1[i];
      if (x === void 0) {
        throw new Error("Cannot output undefined to PDF");
      } else if (x instanceof PDFValue) {
        x.beforeRender(out);
        x.render(out);
      } else if (isArray2(x)) {
        renderArray(x, out);
      } else if (isDate4(x)) {
        renderDate(x, out);
      } else if (typeof x == "number") {
        if (isNaN(x)) {
          throw new Error("Cannot output NaN to PDF");
        }
        var num = x.toFixed(7);
        if (num.indexOf(".") >= 0) {
          num = num.replace(/\.?0+$/, "");
        }
        if (num == "-0") {
          num = "0";
        }
        output.writeString(num);
      } else if (/string|boolean/.test(typeof x)) {
        output.writeString(String(x));
      } else if (typeof x.get == "function") {
        output.write(x.get());
      } else if (typeof x == "object") {
        if (!x) {
          output.writeString("null");
        } else {
          out(new PDFDictionary(x));
        }
      }
    }
  }
  out.writeData = function(data2) {
    output.write(data2);
  };
  out.withIndent = function(f) {
    ++indentLevel;
    f(out);
    --indentLevel;
  };
  out.indent = function() {
    out(NL, pad3("", indentLevel * 2, "  "));
    out.apply(null, arguments);
  };
  out.offset = function() {
    return output.offset();
  };
  out.toString = function() {
    throw new Error("FIX CALLER");
  };
  out.get = function() {
    return output.get();
  };
  out.stream = function() {
    return output;
  };
  return out;
}
function wrapObject(value2, id) {
  var beforeRender2 = value2.beforeRender;
  var renderValue = value2.render;
  value2.beforeRender = function() {
  };
  value2.render = function(out) {
    out(id, " 0 R");
  };
  value2.renderFull = function(out) {
    value2.hb = out.offset();
    out(id, " 0 obj ");
    beforeRender2.call(value2, out);
    renderValue.call(value2, out);
    out(" endobj");
  };
}
function getPaperOptions(getOption) {
  if (typeof getOption != "function") {
    var options2 = getOption;
    getOption = function(key, def) {
      return key in options2 ? options2[key] : def;
    };
  }
  var paperSize = getOption("paperSize", PAPER_SIZE.a4);
  if (!paperSize) {
    return {};
  }
  if (typeof paperSize == "string") {
    paperSize = PAPER_SIZE[paperSize.toLowerCase()];
    if (paperSize == null) {
      throw new Error("Unknown paper size");
    }
  }
  paperSize[0] = unitsToPoints(paperSize[0]);
  paperSize[1] = unitsToPoints(paperSize[1]);
  if (getOption("landscape", false)) {
    paperSize = [
      Math.max(paperSize[0], paperSize[1]),
      Math.min(paperSize[0], paperSize[1])
    ];
  }
  var margin = getOption("margin");
  if (margin) {
    if (typeof margin == "string" || typeof margin == "number") {
      margin = unitsToPoints(margin, 0);
      margin = { left: margin, top: margin, right: margin, bottom: margin };
    } else {
      margin = {
        left: unitsToPoints(margin.left, 0),
        top: unitsToPoints(margin.top, 0),
        right: unitsToPoints(margin.right, 0),
        bottom: unitsToPoints(margin.bottom, 0)
      };
    }
    if (getOption("addMargin")) {
      paperSize[0] += margin.left + margin.right;
      paperSize[1] += margin.top + margin.bottom;
    }
  }
  return { paperSize, margin };
}
var FONT_CACHE = {
  "Times-Roman": true,
  "Times-Bold": true,
  "Times-Italic": true,
  "Times-BoldItalic": true,
  "Helvetica": true,
  "Helvetica-Bold": true,
  "Helvetica-Oblique": true,
  "Helvetica-BoldOblique": true,
  "Courier": true,
  "Courier-Bold": true,
  "Courier-Oblique": true,
  "Courier-BoldOblique": true,
  "Symbol": true,
  "ZapfDingbats": true
};
function loadBinary(url, cont) {
  var m;
  if (browser3.msie && (m = /^data:.*?;base64,/i.exec(url))) {
    cont(base64ToUint8Array(url.substr(m[0].length)));
    return;
  }
  function error3() {
    if (window.console) {
      if (window.console.error) {
        window.console.error("Cannot load URL: %s", url);
      } else {
        window.console.log("Cannot load URL: %s", url);
      }
    }
    cont(null);
  }
  var req = new XMLHttpRequest();
  req.open("GET", url, true);
  if (HAS_TYPED_ARRAYS) {
    req.responseType = "arraybuffer";
  }
  req.onload = function() {
    if (req.status == 200 || req.status == 304) {
      if (HAS_TYPED_ARRAYS) {
        cont(new Uint8Array(req.response));
      } else {
        cont(new window.VBArray(req.responseBody).toArray());
      }
    } else {
      error3();
    }
  };
  req.onerror = error3;
  req.send(null);
}
function loadFont(url, cont) {
  var font = FONT_CACHE[url];
  if (font) {
    cont(font);
  } else {
    loadBinary(url, function(data2) {
      if (data2 == null) {
        throw new Error("Cannot load font from " + url);
      } else {
        var font2 = new TTFFont(data2);
        FONT_CACHE[url] = font2;
        cont(font2);
      }
    });
  }
}
var IMAGE_CACHE = {};
function clearImageCache() {
  IMAGE_CACHE = {};
}
function loadImage(url, size, cont, options2) {
  var img = IMAGE_CACHE[url], bloburl, blob;
  if (img) {
    cont(img);
  } else {
    img = new Image();
    if (!/^data:/i.test(url)) {
      img.crossOrigin = "Anonymous";
    }
    if (HAS_TYPED_ARRAYS && !/^data:/i.test(url)) {
      var xhr = new XMLHttpRequest();
      xhr.onload = function() {
        blob = xhr.response;
        if (browser3.mozilla && blob.type == "image/svg+xml") {
          var reader = new FileReader();
          reader.onload = function() {
            var doc = new window.DOMParser().parseFromString(this.result, "image/svg+xml");
            var svg = doc.documentElement;
            if (svg.getAttribute("width") && svg.getAttribute("height")) {
              bloburl = URL.createObjectURL(blob);
              _load(bloburl);
            } else {
              svg.setAttribute("width", size.width);
              svg.setAttribute("height", size.height);
              var xml = new window.XMLSerializer().serializeToString(svg);
              var dataURL = "data:image/svg+xml;base64," + encodeBase64(xml);
              _load(dataURL);
            }
          };
          reader.readAsText(blob);
        } else {
          bloburl = URL.createObjectURL(blob);
          _load(bloburl);
        }
      };
      xhr.onerror = _onerror;
      xhr.open("GET", url, true);
      xhr.responseType = "blob";
      xhr.send();
    } else {
      _load(url);
    }
  }
  function _load(url2) {
    img.src = url2;
    if (img.complete && !browser3.msie) {
      _onload.call(img);
    } else {
      img.onload = _onload;
      img.onerror = _onerror;
    }
  }
  function _trycanvas() {
    if (!size) {
      size = { width: img.width, height: img.height };
    }
    var canvas = document.createElement("canvas");
    canvas.width = size.width;
    canvas.height = size.height;
    var ctx = canvas.getContext("2d");
    ctx.drawImage(img, 0, 0, size.width, size.height);
    var imgdata;
    try {
      imgdata = ctx.getImageData(0, 0, size.width, size.height);
    } catch (ex) {
      _onerror();
      return;
    } finally {
      if (bloburl) {
        URL.revokeObjectURL(bloburl);
      }
    }
    var hasAlpha = false, rgb = BinaryStream(), alpha = BinaryStream();
    var rawbytes = imgdata.data;
    var i = 0;
    while (i < rawbytes.length) {
      rgb.writeByte(rawbytes[i++]);
      rgb.writeByte(rawbytes[i++]);
      rgb.writeByte(rawbytes[i++]);
      var a = rawbytes[i++];
      if (a < 255) {
        hasAlpha = true;
      }
      alpha.writeByte(a);
    }
    if (hasAlpha || options2.keepPNG) {
      img = new PDFRawImage(size.width, size.height, rgb, alpha);
    } else {
      var data2 = canvas.toDataURL("image/jpeg", options2.jpegQuality);
      data2 = data2.substr(data2.indexOf(";base64,") + 8);
      var stream2 = BinaryStream();
      stream2.writeBase64(data2);
      img = new PDFJpegImage(stream2);
    }
    cont(IMAGE_CACHE[url] = img);
  }
  function _onerror() {
    cont(IMAGE_CACHE[url] = "ERROR");
  }
  function _onload() {
    if (size) {
      var svg = blob && blob.type === "image/svg+xml" || /^data:image\/svg\+xml;/i.test(this.src.substring(0, 19));
      var upscale = size.width >= img.width || size.height >= img.height;
      if (!svg && upscale) {
        size = null;
      }
    }
    if (!size && blob && /^image\/jpe?g$/i.test(blob.type)) {
      var reader = new FileReader();
      reader.onload = function() {
        try {
          var img2 = new PDFJpegImage(BinaryStream(new Uint8Array(this.result)));
          URL.revokeObjectURL(bloburl);
          cont(IMAGE_CACHE[url] = img2);
        } catch (ex) {
          _trycanvas();
        }
      };
      reader.readAsArrayBuffer(blob);
    } else {
      _trycanvas();
    }
  }
}
function manyLoader(loadOne) {
  return function(urls, callback) {
    var n = urls.length, i = n;
    if (n === 0) {
      return callback();
    }
    function next() {
      if (--n === 0) {
        callback();
      }
    }
    while (i-- > 0) {
      loadOne(urls[i], next);
    }
  };
}
var loadFonts = manyLoader(loadFont);
var loadImages = function(images, callback, options2) {
  options2 = Object.assign({
    jpegQuality: 0.92,
    keepPNG: false
  }, options2);
  var urls = Object.keys(images), n = urls.length;
  if (n === 0) {
    return callback();
  }
  function next() {
    if (--n === 0) {
      callback();
    }
  }
  urls.forEach(function(url) {
    loadImage(url, images[url], next, options2);
  });
};
var PDFDocument = function PDFDocument2(options2) {
  var self = this;
  var out = makeOutput();
  var objcount = 0;
  var objects = [];
  function getOption(name2, defval) {
    return options2 && options2[name2] != null ? options2[name2] : defval;
  }
  self.getOption = getOption;
  self.attach = function(value2) {
    if (objects.indexOf(value2) < 0) {
      wrapObject(value2, ++objcount);
      objects.push(value2);
    }
    return value2;
  };
  self.pages = [];
  self.FONTS = {};
  self.IMAGES = {};
  self.GRAD_COL_FUNCTIONS = {};
  self.GRAD_OPC_FUNCTIONS = {};
  self.GRAD_COL = {};
  self.GRAD_OPC = {};
  var catalog = self.attach(new PDFCatalog());
  var pageTree = self.attach(new PDFPageTree());
  if (getOption("autoPrint")) {
    var nameTree = {};
    nameTree.JavaScript = new PDFDictionary({ Names: [
      new PDFString("JS"),
      self.attach(new PDFDictionary({
        S: _("JavaScript"),
        JS: new PDFString("print(true);")
      }))
    ] });
    catalog.props.Names = new PDFDictionary(nameTree);
  }
  catalog.setPages(pageTree);
  var info = self.attach(new PDFDictionary({
    Producer: new PDFString(getOption("producer", "Kendo UI PDF Generator"), true),
    // XXX: kendo.version?
    Title: new PDFString(getOption("title", ""), true),
    Author: new PDFString(getOption("author", ""), true),
    Subject: new PDFString(getOption("subject", ""), true),
    Keywords: new PDFString(getOption("keywords", ""), true),
    Creator: new PDFString(getOption("creator", "Kendo UI PDF Generator"), true),
    CreationDate: getOption("date", /* @__PURE__ */ new Date())
  }));
  self.addPage = function(options3) {
    var paperOptions = getPaperOptions(function(name2, defval) {
      return options3 && options3[name2] != null ? options3[name2] : defval;
    });
    var paperSize = paperOptions.paperSize;
    var margin = paperOptions.margin;
    var contentWidth = paperSize[0];
    var contentHeight = paperSize[1];
    if (margin) {
      contentWidth -= margin.left + margin.right;
      contentHeight -= margin.top + margin.bottom;
    }
    var content = new PDFStream(makeOutput(), null, true);
    var props = {
      Contents: self.attach(content),
      Parent: pageTree,
      MediaBox: [0, 0, paperSize[0], paperSize[1]]
    };
    var page = new PDFPage(self, props);
    page.he = content;
    pageTree.addPage(self.attach(page));
    page.transform(1, 0, 0, -1, 0, paperSize[1]);
    if (margin) {
      page.translate(margin.left, margin.top);
      page.rect(0, 0, contentWidth, contentHeight);
      page.clip();
    }
    self.pages.push(page);
    return page;
  };
  self.render = function() {
    var i;
    out("%PDF-1.4", NL, "%\xC2\xC1\xDA\xCF\xCE", NL, NL);
    for (i = 0; i < objects.length; ++i) {
      objects[i].renderFull(out);
      out(NL, NL);
    }
    var xrefOffset = out.offset();
    out("xref", NL, 0, " ", objects.length + 1, NL);
    out("0000000000 65535 f ", NL);
    for (i = 0; i < objects.length; ++i) {
      out(zeropad(objects[i].hb, 10), " 00000 n ", NL);
    }
    out(NL);
    out("trailer", NL);
    out(new PDFDictionary({
      Size: objects.length + 1,
      Root: catalog,
      Info: info
    }), NL, NL);
    out("startxref", NL, xrefOffset, NL);
    out("%%EOF", NL);
    return out.stream().offset(0);
  };
  self.loadFonts = loadFonts;
  self.loadImages = loadImages;
};
PDFDocument.prototype.getFont = function getFont(url) {
  var font = this.FONTS[url];
  if (!font) {
    font = FONT_CACHE[url];
    if (!font) {
      throw new Error("Font " + url + " has not been loaded");
    }
    if (font === true) {
      font = this.attach(new PDFStandardFont(url));
    } else {
      font = this.attach(new PDFFont(this, font));
    }
    this.FONTS[url] = font;
  }
  return font;
};
PDFDocument.prototype.getImage = function getImage(url) {
  var img = this.IMAGES[url];
  if (!img) {
    img = IMAGE_CACHE[url];
    if (!img) {
      throw new Error("Image " + url + " has not been loaded");
    }
    if (img === "ERROR") {
      return null;
    }
    img = this.IMAGES[url] = this.attach(img.asStream(this));
  }
  return img;
};
PDFDocument.prototype.getOpacityGS = function getOpacityGS(opacity, forStroke) {
  var id = parseFloat(opacity).toFixed(3);
  opacity = parseFloat(id);
  id += forStroke ? "S" : "F";
  var cache2 = this.ie || (this.ie = {});
  var gs = cache2[id];
  if (!gs) {
    var props = {
      Type: _("ExtGState")
    };
    if (forStroke) {
      props.CA = opacity;
    } else {
      props.ca = opacity;
    }
    gs = this.attach(new PDFDictionary(props));
    gs._ = _("GS" + ++RESOURCE_COUNTER);
    cache2[id] = gs;
  }
  return gs;
};
PDFDocument.prototype.dict = function dict(props) {
  return new PDFDictionary(props);
};
PDFDocument.prototype.name = function name(str) {
  return _(str);
};
PDFDocument.prototype.stream = function stream(props, content) {
  return new PDFStream(content, props);
};
function pad3(str, len, ch) {
  while (str.length < len) {
    str = ch + str;
  }
  return str;
}
function zeropad(n, len) {
  return pad3(String(n), len, "0");
}
function hasOwnProperty2(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
}
var isArray2 = Array.isArray || function(obj) {
  return obj instanceof Array;
};
function isDate4(obj) {
  return obj instanceof Date;
}
function renderArray(a, out) {
  out("[");
  if (a.length > 0) {
    out.withIndent(function() {
      for (var i = 0; i < a.length; ++i) {
        if (i > 0 && i % 8 === 0) {
          out.indent(a[i]);
        } else {
          out(" ", a[i]);
        }
      }
    });
  }
  out(" ]");
}
function renderDate(date2, out) {
  out(
    "(D:",
    zeropad(date2.getUTCFullYear(), 4),
    zeropad(date2.getUTCMonth() + 1, 2),
    zeropad(date2.getUTCDate(), 2),
    zeropad(date2.getUTCHours(), 2),
    zeropad(date2.getUTCMinutes(), 2),
    zeropad(date2.getUTCSeconds(), 2),
    "Z)"
  );
}
function mm2pt(mm) {
  return mm * (72 / 25.4);
}
function cm2pt(cm) {
  return mm2pt(cm * 10);
}
function in2pt(inch) {
  return inch * 72;
}
function unitsToPoints(x, def) {
  if (typeof x == "number") {
    return x;
  }
  if (typeof x == "string") {
    var m;
    m = /^\s*([0-9.]+)\s*(mm|cm|in|pt)\s*$/.exec(x);
    if (m) {
      var num = parseFloat(m[1]);
      if (!isNaN(num)) {
        if (m[2] == "pt") {
          return num;
        }
        return {
          "mm": mm2pt,
          "cm": cm2pt,
          "in": in2pt
        }[m[2]](num);
      }
    }
  }
  if (def != null) {
    return def;
  }
  throw new Error("Can't parse unit: " + x);
}
var PDFValue = function PDFValue2() {
};
PDFValue.prototype.beforeRender = function beforeRender() {
};
var PDFString = function(PDFValue3) {
  function PDFString2(value2, utf16be) {
    PDFValue3.call(this);
    this.value = value2;
    this.utf16be = Boolean(utf16be);
  }
  if (PDFValue3)
    PDFString2.__proto__ = PDFValue3;
  PDFString2.prototype = Object.create(PDFValue3 && PDFValue3.prototype);
  PDFString2.prototype.constructor = PDFString2;
  PDFString2.prototype.render = function render5(out) {
    var txt = this.value;
    if (this.utf16be) {
      txt = BOM + encodeUTF16BE(txt);
      txt = txt.replace(/([\(\)\\])/g, "\\$1");
      out("(", txt, ")");
    } else {
      var data2 = [40];
      for (var i = 0; i < txt.length; ++i) {
        var code = txt.charCodeAt(i) & 255;
        if (code == 40 || code == 41 || code == 92) {
          data2.push(92);
        }
        data2.push(code);
      }
      data2.push(41);
      out.writeData(data2);
    }
  };
  PDFString2.prototype.toString = function toString5() {
    return this.value;
  };
  return PDFString2;
}(PDFValue);
var PDFHexString = function(PDFString2) {
  function PDFHexString2(value2) {
    PDFString2.call(this, value2);
    this.value = value2;
  }
  if (PDFString2)
    PDFHexString2.__proto__ = PDFString2;
  PDFHexString2.prototype = Object.create(PDFString2 && PDFString2.prototype);
  PDFHexString2.prototype.constructor = PDFHexString2;
  PDFHexString2.prototype.render = function render5(out) {
    var this$1 = this;
    out("<");
    for (var i = 0; i < this.value.length; ++i) {
      out(zeropad(this$1.value.charCodeAt(i).toString(16), 4));
    }
    out(">");
  };
  return PDFHexString2;
}(PDFString);
var PDFName = function(PDFValue3) {
  function PDFName2(name2) {
    PDFValue3.call(this);
    this.name = name2;
  }
  if (PDFValue3)
    PDFName2.__proto__ = PDFValue3;
  PDFName2.prototype = Object.create(PDFValue3 && PDFValue3.prototype);
  PDFName2.prototype.constructor = PDFName2;
  PDFName2.get = function get(name2) {
    return _(name2);
  };
  PDFName2.prototype.render = function render5(out) {
    out("/" + this.escape());
  };
  PDFName2.prototype.escape = function escape() {
    return this.name.replace(/[^\x21-\x7E]/g, function(c) {
      return "#" + zeropad(c.charCodeAt(0).toString(16), 2);
    });
  };
  PDFName2.prototype.toString = function toString5() {
    return this.name;
  };
  return PDFName2;
}(PDFValue);
var PDFName_cache = {};
function _(name2) {
  if (hasOwnProperty2(PDFName_cache, name2)) {
    return PDFName_cache[name2];
  }
  return PDFName_cache[name2] = new PDFName(name2);
}
var PDFDictionary = function(PDFValue3) {
  function PDFDictionary2(props) {
    PDFValue3.call(this);
    this.props = props;
  }
  if (PDFValue3)
    PDFDictionary2.__proto__ = PDFValue3;
  PDFDictionary2.prototype = Object.create(PDFValue3 && PDFValue3.prototype);
  PDFDictionary2.prototype.constructor = PDFDictionary2;
  PDFDictionary2.prototype.render = function render5(out) {
    var props = this.props, empty2 = true;
    out("<<");
    out.withIndent(function() {
      for (var i in props) {
        if (hasOwnProperty2(props, i) && !/^_/.test(i)) {
          empty2 = false;
          out.indent(_(i), " ", props[i]);
        }
      }
    });
    if (!empty2) {
      out.indent();
    }
    out(">>");
  };
  return PDFDictionary2;
}(PDFValue);
var PDFStream = function(PDFValue3) {
  function PDFStream2(data2, props, compress) {
    PDFValue3.call(this);
    if (typeof data2 == "string") {
      var tmp = BinaryStream();
      tmp.write(data2);
      data2 = tmp;
    }
    this.data = data2;
    this.props = props || {};
    this.compress = compress;
  }
  if (PDFValue3)
    PDFStream2.__proto__ = PDFValue3;
  PDFStream2.prototype = Object.create(PDFValue3 && PDFValue3.prototype);
  PDFStream2.prototype.constructor = PDFStream2;
  PDFStream2.prototype.render = function render5(out) {
    var data2 = this.data.get(), props = this.props;
    if (this.compress && supportsDeflate()) {
      if (!props.Filter) {
        props.Filter = [];
      } else if (!(props.Filter instanceof Array)) {
        props.Filter = [props.Filter];
      }
      props.Filter.unshift(_("FlateDecode"));
      data2 = deflate2(data2);
    }
    props.Length = data2.length;
    out(new PDFDictionary(props), " stream", NL);
    out.writeData(data2);
    out(NL, "endstream");
  };
  return PDFStream2;
}(PDFValue);
var PDFCatalog = function(PDFDictionary2) {
  function PDFCatalog2() {
    PDFDictionary2.call(this, {
      Type: _("Catalog")
    });
  }
  if (PDFDictionary2)
    PDFCatalog2.__proto__ = PDFDictionary2;
  PDFCatalog2.prototype = Object.create(PDFDictionary2 && PDFDictionary2.prototype);
  PDFCatalog2.prototype.constructor = PDFCatalog2;
  PDFCatalog2.prototype.setPages = function setPages(pagesObj) {
    this.props.Pages = pagesObj;
  };
  return PDFCatalog2;
}(PDFDictionary);
var PDFPageTree = function(PDFDictionary2) {
  function PDFPageTree2() {
    PDFDictionary2.call(this, {
      Type: _("Pages"),
      Kids: [],
      Count: 0
    });
  }
  if (PDFDictionary2)
    PDFPageTree2.__proto__ = PDFDictionary2;
  PDFPageTree2.prototype = Object.create(PDFDictionary2 && PDFDictionary2.prototype);
  PDFPageTree2.prototype.constructor = PDFPageTree2;
  PDFPageTree2.prototype.addPage = function addPage(pageObj) {
    this.props.Kids.push(pageObj);
    this.props.Count++;
  };
  return PDFPageTree2;
}(PDFDictionary);
var SOF_CODES = [192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207];
var PDFJpegImage = function PDFJpegImage2(data2) {
  data2.offset(0);
  var width, height, colorSpace, bitsPerComponent;
  var soi = data2.readShort();
  if (soi != 65496) {
    throw new Error("Invalid JPEG image");
  }
  while (!data2.eof()) {
    var ff = data2.readByte();
    if (ff != 255) {
      throw new Error("Invalid JPEG image");
    }
    var marker = data2.readByte();
    var length = data2.readShort();
    if (SOF_CODES.indexOf(marker) >= 0) {
      bitsPerComponent = data2.readByte();
      height = data2.readShort();
      width = data2.readShort();
      colorSpace = data2.readByte();
      break;
    }
    data2.skip(length - 2);
  }
  if (colorSpace == null) {
    throw new Error("Invalid JPEG image");
  }
  var props = {
    Type: _("XObject"),
    Subtype: _("Image"),
    Width: width,
    Height: height,
    BitsPerComponent: bitsPerComponent,
    Filter: _("DCTDecode")
  };
  switch (colorSpace) {
    case 1:
      props.ColorSpace = _("DeviceGray");
      break;
    case 3:
      props.ColorSpace = _("DeviceRGB");
      break;
    case 4:
      props.ColorSpace = _("DeviceCMYK");
      props.Decode = [1, 0, 1, 0, 1, 0, 1, 0];
      break;
  }
  this.asStream = function() {
    data2.offset(0);
    var stream2 = new PDFStream(data2, props);
    stream2._ = _("I" + ++RESOURCE_COUNTER);
    return stream2;
  };
};
var PDFRawImage = function PDFRawImage2(width, height, rgb, alpha) {
  this.asStream = function(pdf) {
    var mask = new PDFStream(alpha, {
      Type: _("XObject"),
      Subtype: _("Image"),
      Width: width,
      Height: height,
      BitsPerComponent: 8,
      ColorSpace: _("DeviceGray")
    }, true);
    var stream2 = new PDFStream(rgb, {
      Type: _("XObject"),
      Subtype: _("Image"),
      Width: width,
      Height: height,
      BitsPerComponent: 8,
      ColorSpace: _("DeviceRGB"),
      SMask: pdf.attach(mask)
    }, true);
    stream2._ = _("I" + ++RESOURCE_COUNTER);
    return stream2;
  };
};
var PDFStandardFont = function(PDFDictionary2) {
  function PDFStandardFont2(name2) {
    PDFDictionary2.call(this, {
      Type: _("Font"),
      Subtype: _("Type1"),
      BaseFont: _(name2)
    });
    this._ = _("F" + ++RESOURCE_COUNTER);
  }
  if (PDFDictionary2)
    PDFStandardFont2.__proto__ = PDFDictionary2;
  PDFStandardFont2.prototype = Object.create(PDFDictionary2 && PDFDictionary2.prototype);
  PDFStandardFont2.prototype.constructor = PDFStandardFont2;
  PDFStandardFont2.prototype.encodeText = function encodeText2(str) {
    return new PDFString(String(str));
  };
  return PDFStandardFont2;
}(PDFDictionary);
var PDFFont = function(PDFDictionary2) {
  function PDFFont2(pdf, font, props) {
    PDFDictionary2.call(this, {});
    props = this.props;
    props.Type = _("Font");
    props.Subtype = _("Type0");
    props.Encoding = _("Identity-H");
    this.pa = pdf;
    this.la = font;
    this.Xa = font.makeSubset();
    this._ = _("F" + ++RESOURCE_COUNTER);
    var head = font.head;
    this.name = font.psName;
    var scale = this.scale = font.scale;
    this.bbox = [
      head.xMin * scale,
      head.yMin * scale,
      head.xMax * scale,
      head.yMax * scale
    ];
    this.italicAngle = font.post.italicAngle;
    this.ascent = font.ascent * scale;
    this.descent = font.descent * scale;
    this.lineGap = font.lineGap * scale;
    this.capHeight = font.os2.capHeight || this.ascent;
    this.xHeight = font.os2.xHeight || 0;
    this.stemV = 0;
    this.familyClass = (font.os2.familyClass || 0) >> 8;
    this.isSerif = this.familyClass >= 1 && this.familyClass <= 7;
    this.isScript = this.familyClass == 10;
    this.flags = (font.post.isFixedPitch ? 1 : 0) | (this.isSerif ? 1 << 1 : 0) | (this.isScript ? 1 << 3 : 0) | (this.italicAngle !== 0 ? 1 << 6 : 0) | 1 << 5;
  }
  if (PDFDictionary2)
    PDFFont2.__proto__ = PDFDictionary2;
  PDFFont2.prototype = Object.create(PDFDictionary2 && PDFDictionary2.prototype);
  PDFFont2.prototype.constructor = PDFFont2;
  PDFFont2.prototype.encodeText = function encodeText2(text) {
    return new PDFHexString(this.Xa.encodeText(String(text)));
  };
  PDFFont2.prototype.getTextWidth = function getTextWidth(fontSize, text) {
    var this$1 = this;
    var width = 0, codeMap = this.la.cmap.codeMap;
    for (var i = 0; i < text.length; ++i) {
      var glyphId = codeMap[text.charCodeAt(i)];
      width += this$1.la.widthOfGlyph(glyphId || 0);
    }
    return width * fontSize / 1e3;
  };
  PDFFont2.prototype.beforeRender = function beforeRender2() {
    var self = this;
    var sub = self.Xa;
    var data2 = sub.render();
    var fontStream = new PDFStream(BinaryStream(data2), {
      Length1: data2.length
    }, true);
    var descriptor = self.pa.attach(new PDFDictionary2({
      Type: _("FontDescriptor"),
      FontName: _(self.Xa.psName),
      FontBBox: self.bbox,
      Flags: self.flags,
      StemV: self.stemV,
      ItalicAngle: self.italicAngle,
      Ascent: self.ascent,
      Descent: self.descent,
      CapHeight: self.capHeight,
      XHeight: self.xHeight,
      FontFile2: self.pa.attach(fontStream)
    }));
    var cmap = sub.ncid2ogid;
    var firstChar = sub.firstChar;
    var lastChar = sub.lastChar;
    var charWidths = [];
    (function loop(i, chunk) {
      if (i <= lastChar) {
        var gid = cmap[i];
        if (gid == null) {
          loop(i + 1);
        } else {
          if (!chunk) {
            charWidths.push(i, chunk = []);
          }
          chunk.push(self.la.widthOfGlyph(gid));
          loop(i + 1, chunk);
        }
      }
    })(firstChar);
    var descendant = new PDFDictionary2({
      Type: _("Font"),
      Subtype: _("CIDFontType2"),
      BaseFont: _(self.Xa.psName),
      CIDSystemInfo: new PDFDictionary2({
        Registry: new PDFString("Adobe"),
        Ordering: new PDFString("Identity"),
        Supplement: 0
      }),
      FontDescriptor: descriptor,
      FirstChar: firstChar,
      LastChar: lastChar,
      DW: Math.round(self.la.widthOfGlyph(0)),
      W: charWidths,
      CIDToGIDMap: self.pa.attach(self.je())
    });
    var dict2 = self.props;
    dict2.BaseFont = _(self.Xa.psName);
    dict2.DescendantFonts = [self.pa.attach(descendant)];
    var unimap = new PDFToUnicodeCmap(firstChar, lastChar, sub.subset);
    var unimapStream = new PDFStream(makeOutput(), null, true);
    unimapStream.data(unimap);
    dict2.ToUnicode = self.pa.attach(unimapStream);
  };
  PDFFont2.prototype.je = function _makeCidToGidMap() {
    return new PDFStream(BinaryStream(this.Xa.cidToGidMap()), null, true);
  };
  return PDFFont2;
}(PDFDictionary);
var PDFToUnicodeCmap = function(PDFValue3) {
  function PDFToUnicodeCmap2(firstChar, lastChar, map2) {
    PDFValue3.call(this);
    this.firstChar = firstChar;
    this.lastChar = lastChar;
    this.map = map2;
  }
  if (PDFValue3)
    PDFToUnicodeCmap2.__proto__ = PDFValue3;
  PDFToUnicodeCmap2.prototype = Object.create(PDFValue3 && PDFValue3.prototype);
  PDFToUnicodeCmap2.prototype.constructor = PDFToUnicodeCmap2;
  PDFToUnicodeCmap2.prototype.render = function render5(out) {
    out.indent("/CIDInit /ProcSet findresource begin");
    out.indent("12 dict begin");
    out.indent("begincmap");
    out.indent("/CIDSystemInfo <<");
    out.indent("  /Registry (Adobe)");
    out.indent("  /Ordering (UCS)");
    out.indent("  /Supplement 0");
    out.indent(">> def");
    out.indent("/CMapName /Adobe-Identity-UCS def");
    out.indent("/CMapType 2 def");
    out.indent("1 begincodespacerange");
    out.indent("  <0000><ffff>");
    out.indent("endcodespacerange");
    var self = this;
    out.indent(self.lastChar - self.firstChar + 1, " beginbfchar");
    out.withIndent(function() {
      for (var code = self.firstChar; code <= self.lastChar; ++code) {
        var unicode = self.map[code];
        var str = ucs2encode([unicode]);
        out.indent("<", zeropad(code.toString(16), 4), ">", "<");
        for (var i = 0; i < str.length; ++i) {
          out(zeropad(str.charCodeAt(i).toString(16), 4));
        }
        out(">");
      }
    });
    out.indent("endbfchar");
    out.indent("endcmap");
    out.indent("CMapName currentdict /CMap defineresource pop");
    out.indent("end");
    out.indent("end");
  };
  return PDFToUnicodeCmap2;
}(PDFValue);
function makeHash(a) {
  return a.map(function(x) {
    return isArray2(x) ? makeHash(x) : typeof x == "number" ? (Math.round(x * 1e3) / 1e3).toFixed(3) : x;
  }).join(" ");
}
function cacheColorGradientFunction(pdf, r1, g1, b1, r2, g2, b2) {
  var hash = makeHash([r1, g1, b1, r2, g2, b2]);
  var func32 = pdf.GRAD_COL_FUNCTIONS[hash];
  if (!func32) {
    func32 = pdf.GRAD_COL_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({
      FunctionType: 2,
      Domain: [0, 1],
      Range: [0, 1, 0, 1, 0, 1],
      N: 1,
      C0: [r1, g1, b1],
      C1: [r2, g2, b2]
    }));
  }
  return func32;
}
function cacheOpacityGradientFunction(pdf, a1, a2) {
  var hash = makeHash([a1, a2]);
  var func32 = pdf.GRAD_OPC_FUNCTIONS[hash];
  if (!func32) {
    func32 = pdf.GRAD_OPC_FUNCTIONS[hash] = pdf.attach(new PDFDictionary({
      FunctionType: 2,
      Domain: [0, 1],
      Range: [0, 1],
      N: 1,
      C0: [a1],
      C1: [a2]
    }));
  }
  return func32;
}
function makeGradientFunctions(pdf, stops) {
  var hasAlpha = false;
  var opacities = [];
  var colors = [];
  var offsets = [];
  var encode = [];
  var i, prev, cur, prevColor, curColor;
  for (i = 1; i < stops.length; ++i) {
    prev = stops[i - 1];
    cur = stops[i];
    prevColor = prev.color;
    curColor = cur.color;
    colors.push(cacheColorGradientFunction(
      pdf,
      prevColor.r,
      prevColor.g,
      prevColor.b,
      curColor.r,
      curColor.g,
      curColor.b
    ));
    if (prevColor.a < 1 || curColor.a < 1) {
      hasAlpha = true;
    }
    offsets.push(cur.offset);
    encode.push(0, 1);
  }
  if (hasAlpha) {
    for (i = 1; i < stops.length; ++i) {
      prev = stops[i - 1];
      cur = stops[i];
      prevColor = prev.color;
      curColor = cur.color;
      opacities.push(cacheOpacityGradientFunction(
        pdf,
        prevColor.a,
        curColor.a
      ));
    }
  }
  offsets.pop();
  return {
    hasAlpha,
    colors: assemble(colors),
    opacities: hasAlpha ? assemble(opacities) : null
  };
  function assemble(funcs) {
    if (funcs.length == 1) {
      return funcs[0];
    }
    return {
      FunctionType: 3,
      Functions: funcs,
      Domain: [0, 1],
      Bounds: offsets,
      Encode: encode
    };
  }
}
function cacheColorGradient(pdf, isRadial, stops, coords, funcs, box) {
  var shading, hash;
  if (!box) {
    var a = [isRadial].concat(coords);
    stops.forEach(function(x) {
      a.push(x.offset, x.color.r, x.color.g, x.color.b);
    });
    hash = makeHash(a);
    shading = pdf.GRAD_COL[hash];
  }
  if (!shading) {
    shading = new PDFDictionary({
      Type: _("Shading"),
      ShadingType: isRadial ? 3 : 2,
      ColorSpace: _("DeviceRGB"),
      Coords: coords,
      Domain: [0, 1],
      Function: funcs,
      Extend: [true, true]
    });
    pdf.attach(shading);
    shading._ = "S" + ++RESOURCE_COUNTER;
    if (hash) {
      pdf.GRAD_COL[hash] = shading;
    }
  }
  return shading;
}
function cacheOpacityGradient(pdf, isRadial, stops, coords, funcs, box) {
  var opacity, hash;
  if (!box) {
    var a = [isRadial].concat(coords);
    stops.forEach(function(x) {
      a.push(x.offset, x.color.a);
    });
    hash = makeHash(a);
    opacity = pdf.GRAD_OPC[hash];
  }
  if (!opacity) {
    opacity = new PDFDictionary({
      Type: _("ExtGState"),
      AIS: false,
      CA: 1,
      ca: 1,
      SMask: {
        Type: _("Mask"),
        S: _("Luminosity"),
        G: pdf.attach(new PDFStream("/a0 gs /s0 sh", {
          Type: _("XObject"),
          Subtype: _("Form"),
          FormType: 1,
          BBox: box ? [
            box.left,
            box.top + box.height,
            box.left + box.width,
            box.top
          ] : [0, 1, 1, 0],
          Group: {
            Type: _("Group"),
            S: _("Transparency"),
            CS: _("DeviceGray"),
            I: true
          },
          Resources: {
            ExtGState: {
              a0: { CA: 1, ca: 1 }
            },
            Shading: {
              s0: {
                ColorSpace: _("DeviceGray"),
                Coords: coords,
                Domain: [0, 1],
                ShadingType: isRadial ? 3 : 2,
                Function: funcs,
                Extend: [true, true]
              }
            }
          }
        }))
      }
    });
    pdf.attach(opacity);
    opacity._ = "O" + ++RESOURCE_COUNTER;
    if (hash) {
      pdf.GRAD_OPC[hash] = opacity;
    }
  }
  return opacity;
}
function cacheGradient(pdf, gradient, box) {
  var isRadial = gradient.type == "radial";
  var funcs = makeGradientFunctions(pdf, gradient.stops);
  var coords = isRadial ? [
    gradient.start.x,
    gradient.start.y,
    gradient.start.r,
    gradient.end.x,
    gradient.end.y,
    gradient.end.r
  ] : [
    gradient.start.x,
    gradient.start.y,
    gradient.end.x,
    gradient.end.y
  ];
  var shading = cacheColorGradient(
    pdf,
    isRadial,
    gradient.stops,
    coords,
    funcs.colors,
    gradient.userSpace && box
  );
  var opacity = funcs.hasAlpha ? cacheOpacityGradient(
    pdf,
    isRadial,
    gradient.stops,
    coords,
    funcs.opacities,
    gradient.userSpace && box
  ) : null;
  return {
    hasAlpha: funcs.hasAlpha,
    shading,
    opacity
  };
}
var PDFPage = function(PDFDictionary2) {
  function PDFPage2(pdf, props) {
    PDFDictionary2.call(this, props);
    this.pa = pdf;
    this.Be = 0;
    this.sc = false;
    this.hd = {};
    this.Ib = {};
    this.jd = {};
    this.ke = {};
    this.kd = {};
    this.kb = 1;
    this.w = [1, 0, 0, 1, 0, 0];
    this.ld = [];
    this.la = null;
    this.tc = null;
    this.md = [];
    props = this.props;
    props.Type = _("Page");
    props.ProcSet = [
      _("PDF"),
      _("Text"),
      _("ImageB"),
      _("ImageC"),
      _("ImageI")
    ];
    props.Resources = new PDFDictionary2({
      Font: new PDFDictionary2(this.hd),
      ExtGState: new PDFDictionary2(this.Ib),
      XObject: new PDFDictionary2(this.jd),
      Pattern: new PDFDictionary2(this.ke),
      Shading: new PDFDictionary2(this.kd)
    });
    props.Annots = this.ld;
  }
  if (PDFDictionary2)
    PDFPage2.__proto__ = PDFDictionary2;
  PDFPage2.prototype = Object.create(PDFDictionary2 && PDFDictionary2.prototype);
  PDFPage2.prototype.constructor = PDFPage2;
  PDFPage2.prototype.o = function _out() {
    this.he.data.apply(null, arguments);
  };
  PDFPage2.prototype.transform = function transform2(a, b, c, d, e, f) {
    if (!isIdentityMatrix(arguments)) {
      this.w = mmul(arguments, this.w);
      this.o(a, " ", b, " ", c, " ", d, " ", e, " ", f, " cm");
      this.o(NL);
    }
  };
  PDFPage2.prototype.translate = function translate(dx, dy) {
    this.transform(1, 0, 0, 1, dx, dy);
  };
  PDFPage2.prototype.scale = function scale(sx, sy) {
    this.transform(sx, 0, 0, sy, 0, 0);
  };
  PDFPage2.prototype.rotate = function rotate(angle) {
    var cos = Math.cos(angle), sin = Math.sin(angle);
    this.transform(cos, sin, -sin, cos, 0, 0);
  };
  PDFPage2.prototype.beginText = function beginText() {
    this.sc = true;
    this.o("BT", NL);
  };
  PDFPage2.prototype.endText = function endText() {
    this.sc = false;
    this.o("ET", NL);
  };
  PDFPage2.prototype.uc = function _requireTextMode() {
    if (!this.sc) {
      throw new Error("Text mode required; call page.beginText() first");
    }
  };
  PDFPage2.prototype.nd = function _requireFont() {
    if (!this.la) {
      throw new Error("No font selected; call page.setFont() first");
    }
  };
  PDFPage2.prototype.setFont = function setFont(font, size) {
    this.uc();
    if (font == null) {
      font = this.la;
    } else if (!(font instanceof PDFFont)) {
      font = this.pa.getFont(font);
    }
    if (size == null) {
      size = this.tc;
    }
    this.hd[font._] = font;
    this.la = font;
    this.tc = size;
    this.o(font._, " ", size, " Tf", NL);
  };
  PDFPage2.prototype.setTextLeading = function setTextLeading(size) {
    this.uc();
    this.o(size, " TL", NL);
  };
  PDFPage2.prototype.setTextRenderingMode = function setTextRenderingMode(mode) {
    this.uc();
    this.o(mode, " Tr", NL);
  };
  PDFPage2.prototype.showText = function showText(text, requestedWidth) {
    this.nd();
    if (text.length > 1 && requestedWidth && this.la instanceof PDFFont) {
      var outputWidth = this.la.getTextWidth(this.tc, text);
      var scale = requestedWidth / outputWidth * 100;
      this.o(scale, " Tz ");
    }
    this.o(this.la.encodeText(text), " Tj", NL);
  };
  PDFPage2.prototype.showTextNL = function showTextNL(text) {
    this.nd();
    this.o(this.la.encodeText(text), " '", NL);
  };
  PDFPage2.prototype.addLink = function addLink(uri, box) {
    var ll = this.od({ x: box.left, y: box.bottom });
    var ur = this.od({ x: box.right, y: box.top });
    this.ld.push(new PDFDictionary2({
      Type: _("Annot"),
      Subtype: _("Link"),
      Rect: [ll.x, ll.y, ur.x, ur.y],
      Border: [0, 0, 0],
      A: new PDFDictionary2({
        Type: _("Action"),
        S: _("URI"),
        URI: new PDFString(uri)
      })
    }));
  };
  PDFPage2.prototype.setStrokeColor = function setStrokeColor(r, g, b) {
    this.o(r, " ", g, " ", b, " RG", NL);
  };
  PDFPage2.prototype.setOpacity = function setOpacity(opacity) {
    this.setFillOpacity(opacity);
    this.setStrokeOpacity(opacity);
    this.kb *= opacity;
  };
  PDFPage2.prototype.setStrokeOpacity = function setStrokeOpacity(opacity) {
    if (opacity < 1) {
      var gs = this.pa.getOpacityGS(this.kb * opacity, true);
      this.Ib[gs._] = gs;
      this.o(gs._, " gs", NL);
    }
  };
  PDFPage2.prototype.setFillColor = function setFillColor(r, g, b) {
    this.o(r, " ", g, " ", b, " rg", NL);
  };
  PDFPage2.prototype.setFillOpacity = function setFillOpacity(opacity) {
    if (opacity < 1) {
      var gs = this.pa.getOpacityGS(this.kb * opacity, false);
      this.Ib[gs._] = gs;
      this.o(gs._, " gs", NL);
    }
  };
  PDFPage2.prototype.gradient = function gradient(gradient$1, box) {
    this.save();
    this.rect(box.left, box.top, box.width, box.height);
    this.clip();
    if (!gradient$1.userSpace) {
      this.transform(box.width, 0, 0, box.height, box.left, box.top);
    }
    var g = cacheGradient(this.pa, gradient$1, box);
    var sname = g.shading._, oname;
    this.kd[sname] = g.shading;
    if (g.hasAlpha) {
      oname = g.opacity._;
      this.Ib[oname] = g.opacity;
      this.o("/" + oname + " gs ");
    }
    this.o("/" + sname + " sh", NL);
    this.restore();
  };
  PDFPage2.prototype.setDashPattern = function setDashPattern(dashArray, dashPhase) {
    this.o(dashArray, " ", dashPhase, " d", NL);
  };
  PDFPage2.prototype.setLineWidth = function setLineWidth(width) {
    this.o(width, " w", NL);
  };
  PDFPage2.prototype.setLineCap = function setLineCap(lineCap) {
    this.o(lineCap, " J", NL);
  };
  PDFPage2.prototype.setLineJoin = function setLineJoin(lineJoin) {
    this.o(lineJoin, " j", NL);
  };
  PDFPage2.prototype.setMitterLimit = function setMitterLimit(mitterLimit) {
    this.o(mitterLimit, " M", NL);
  };
  PDFPage2.prototype.save = function save() {
    this.md.push(this.P());
    this.o("q", NL);
  };
  PDFPage2.prototype.restore = function restore() {
    this.o("Q", NL);
    this.P(this.md.pop());
  };
  PDFPage2.prototype.moveTo = function moveTo(x, y) {
    this.o(x, " ", y, " m", NL);
  };
  PDFPage2.prototype.lineTo = function lineTo(x, y) {
    this.o(x, " ", y, " l", NL);
  };
  PDFPage2.prototype.bezier = function bezier(x1, y1, x2, y2, x3, y3) {
    this.o(x1, " ", y1, " ", x2, " ", y2, " ", x3, " ", y3, " c", NL);
  };
  PDFPage2.prototype.bezier1 = function bezier1(x1, y1, x3, y3) {
    this.o(x1, " ", y1, " ", x3, " ", y3, " y", NL);
  };
  PDFPage2.prototype.bezier2 = function bezier2(x2, y2, x3, y3) {
    this.o(x2, " ", y2, " ", x3, " ", y3, " v", NL);
  };
  PDFPage2.prototype.close = function close2() {
    this.o("h", NL);
  };
  PDFPage2.prototype.rect = function rect(x, y, w, h) {
    this.o(x, " ", y, " ", w, " ", h, " re", NL);
  };
  PDFPage2.prototype.ellipse = function ellipse(x, y, rx, ry) {
    function _X(v) {
      return x + v;
    }
    function _Y(v) {
      return y + v;
    }
    var k = 0.5522847498307936;
    this.moveTo(_X(0), _Y(ry));
    this.bezier(
      _X(rx * k),
      _Y(ry),
      _X(rx),
      _Y(ry * k),
      _X(rx),
      _Y(0)
    );
    this.bezier(
      _X(rx),
      _Y(-ry * k),
      _X(rx * k),
      _Y(-ry),
      _X(0),
      _Y(-ry)
    );
    this.bezier(
      _X(-rx * k),
      _Y(-ry),
      _X(-rx),
      _Y(-ry * k),
      _X(-rx),
      _Y(0)
    );
    this.bezier(
      _X(-rx),
      _Y(ry * k),
      _X(-rx * k),
      _Y(ry),
      _X(0),
      _Y(ry)
    );
  };
  PDFPage2.prototype.circle = function circle(x, y, r) {
    this.ellipse(x, y, r, r);
  };
  PDFPage2.prototype.stroke = function stroke() {
    this.o("S", NL);
  };
  PDFPage2.prototype.nop = function nop() {
    this.o("n", NL);
  };
  PDFPage2.prototype.clip = function clip() {
    this.o("W n", NL);
  };
  PDFPage2.prototype.clipStroke = function clipStroke() {
    this.o("W S", NL);
  };
  PDFPage2.prototype.closeStroke = function closeStroke() {
    this.o("s", NL);
  };
  PDFPage2.prototype.fill = function fill() {
    this.o("f", NL);
  };
  PDFPage2.prototype.fillStroke = function fillStroke() {
    this.o("B", NL);
  };
  PDFPage2.prototype.drawImage = function drawImage2(url) {
    var img = this.pa.getImage(url);
    if (img) {
      this.jd[img._] = img;
      this.o(img._, " Do", NL);
    }
  };
  PDFPage2.prototype.comment = function comment(txt) {
    var self = this;
    txt.split(/\r?\n/g).forEach(function(line) {
      self.o("% ", line, NL);
    });
  };
  PDFPage2.prototype.P = function _context(val) {
    if (val != null) {
      this.kb = val.opacity;
      this.w = val.matrix;
    } else {
      return {
        opacity: this.kb,
        matrix: this.w
      };
    }
  };
  PDFPage2.prototype.od = function _toPage(p) {
    var m = this.w;
    var a = m[0], b = m[1], c = m[2], d = m[3], e = m[4], f = m[5];
    return {
      x: a * p.x + c * p.y + e,
      y: b * p.x + d * p.y + f
    };
  };
  return PDFPage2;
}(PDFDictionary);
function unquote(str) {
  return str.replace(/^\s*(['"])(.*)\1\s*$/, "$2");
}
function parseFontDef(fontdef) {
  var rx = /^\s*((normal|italic)\s+)?((normal|small-caps)\s+)?((normal|bold|\d+)\s+)?(([0-9.]+)(px|pt))(\/(([0-9.]+)(px|pt)|normal))?\s+(.*?)\s*$/i;
  var m = rx.exec(fontdef);
  if (!m) {
    return { fontSize: 12, fontFamily: "sans-serif" };
  }
  var fontSize = m[8] ? parseInt(m[8], 10) : 12;
  return {
    italic: m[2] && m[2].toLowerCase() == "italic",
    variant: m[4],
    bold: m[6] && /bold|700/i.test(m[6]),
    fontSize,
    lineHeight: m[12] ? m[12] == "normal" ? fontSize : parseInt(m[12], 10) : null,
    fontFamily: m[14].split(/\s*,\s*/g).map(unquote)
  };
}
function getFontURL(style) {
  function mkFamily(name3) {
    if (style.bold) {
      name3 += "|bold";
    }
    if (style.italic) {
      name3 += "|italic";
    }
    return name3.toLowerCase();
  }
  var fontFamily = style.fontFamily;
  var name2, url;
  if (fontFamily instanceof Array) {
    for (var i = 0; i < fontFamily.length; ++i) {
      name2 = mkFamily(fontFamily[i]);
      url = FONT_MAPPINGS[name2];
      if (url) {
        break;
      }
    }
  } else {
    url = FONT_MAPPINGS[fontFamily.toLowerCase()];
  }
  while (typeof url == "function") {
    url = url();
  }
  if (!url) {
    url = "Times-Roman";
  }
  return url;
}
var FONT_MAPPINGS = {
  "serif": "Times-Roman",
  "serif|bold": "Times-Bold",
  "serif|italic": "Times-Italic",
  "serif|bold|italic": "Times-BoldItalic",
  "sans-serif": "Helvetica",
  "sans-serif|bold": "Helvetica-Bold",
  "sans-serif|italic": "Helvetica-Oblique",
  "sans-serif|bold|italic": "Helvetica-BoldOblique",
  "monospace": "Courier",
  "monospace|bold": "Courier-Bold",
  "monospace|italic": "Courier-Oblique",
  "monospace|bold|italic": "Courier-BoldOblique",
  "zapfdingbats": "ZapfDingbats",
  "zapfdingbats|bold": "ZapfDingbats",
  "zapfdingbats|italic": "ZapfDingbats",
  "zapfdingbats|bold|italic": "ZapfDingbats"
};
function fontAlias(alias, name2) {
  alias = alias.toLowerCase();
  FONT_MAPPINGS[alias] = function() {
    return FONT_MAPPINGS[name2];
  };
  FONT_MAPPINGS[alias + "|bold"] = function() {
    return FONT_MAPPINGS[name2 + "|bold"];
  };
  FONT_MAPPINGS[alias + "|italic"] = function() {
    return FONT_MAPPINGS[name2 + "|italic"];
  };
  FONT_MAPPINGS[alias + "|bold|italic"] = function() {
    return FONT_MAPPINGS[name2 + "|bold|italic"];
  };
}
fontAlias("Times New Roman", "serif");
fontAlias("Courier New", "monospace");
fontAlias("Arial", "sans-serif");
fontAlias("Helvetica", "sans-serif");
fontAlias("Verdana", "sans-serif");
fontAlias("Tahoma", "sans-serif");
fontAlias("Georgia", "sans-serif");
fontAlias("Monaco", "monospace");
fontAlias("Andale Mono", "monospace");
function defineFont(name2, url) {
  if (arguments.length == 1) {
    for (var i in name2) {
      if (hasOwnProperty2(name2, i)) {
        defineFont(i, name2[i]);
      }
    }
  } else {
    name2 = name2.toLowerCase();
    FONT_MAPPINGS[name2] = url;
    switch (name2) {
      case "dejavu sans":
        FONT_MAPPINGS["sans-serif"] = url;
        break;
      case "dejavu sans|bold":
        FONT_MAPPINGS["sans-serif|bold"] = url;
        break;
      case "dejavu sans|italic":
        FONT_MAPPINGS["sans-serif|italic"] = url;
        break;
      case "dejavu sans|bold|italic":
        FONT_MAPPINGS["sans-serif|bold|italic"] = url;
        break;
      case "dejavu serif":
        FONT_MAPPINGS["serif"] = url;
        break;
      case "dejavu serif|bold":
        FONT_MAPPINGS["serif|bold"] = url;
        break;
      case "dejavu serif|italic":
        FONT_MAPPINGS["serif|italic"] = url;
        break;
      case "dejavu serif|bold|italic":
        FONT_MAPPINGS["serif|bold|italic"] = url;
        break;
      case "dejavu mono":
        FONT_MAPPINGS["monospace"] = url;
        break;
      case "dejavu mono|bold":
        FONT_MAPPINGS["monospace|bold"] = url;
        break;
      case "dejavu mono|italic":
        FONT_MAPPINGS["monospace|italic"] = url;
        break;
      case "dejavu mono|bold|italic":
        FONT_MAPPINGS["monospace|bold|italic"] = url;
        break;
    }
  }
}
function mmul(a, b) {
  var a1 = a[0], b1 = a[1], c1 = a[2], d1 = a[3], e1 = a[4], f1 = a[5];
  var a2 = b[0], b2 = b[1], c2 = b[2], d2 = b[3], e2 = b[4], f2 = b[5];
  return [
    a1 * a2 + b1 * c2,
    a1 * b2 + b1 * d2,
    c1 * a2 + d1 * c2,
    c1 * b2 + d1 * d2,
    e1 * a2 + f1 * c2 + e2,
    e1 * b2 + f1 * d2 + f2
  ];
}
function isIdentityMatrix(m) {
  return m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0;
}
var TEXT_RENDERING_MODE = {
  fill: 0,
  stroke: 1,
  fillAndStroke: 2,
  invisible: 3,
  fillAndClip: 4,
  strokeAndClip: 5,
  fillStrokeClip: 6,
  clip: 7
};

// node_modules/@progress/kendo-drawing/dist/es/pdf/drawing.js
var DEFAULT_IMAGE_DPI = 300;
var TEXT_RENDERING_MODE2 = TEXT_RENDERING_MODE;
var DASH_PATTERNS = {
  dash: [4],
  dashDot: [4, 2, 1, 2],
  dot: [1, 2],
  longDash: [8, 2],
  longDashDot: [8, 2, 1, 2],
  longDashDotDot: [8, 2, 1, 2, 1, 2],
  solid: []
};
var LINE_CAP = {
  butt: 0,
  round: 1,
  square: 2
};
var LINE_JOIN = {
  miter: 0,
  round: 1,
  bevel: 2
};
function render4(group2, callback) {
  var fonts = [], images = {}, options2 = group2.options;
  function getOption(name2, defval, hash) {
    if (!hash) {
      hash = options2;
    }
    if (hash.pdf && hash.pdf[name2] != null) {
      return hash.pdf[name2];
    }
    return defval;
  }
  var multiPage = getOption("multiPage");
  var imgDPI = getOption("imgDPI", DEFAULT_IMAGE_DPI);
  clearImageCache();
  group2.traverse(function(element6) {
    dispatch({
      Image: function(element7) {
        var url = element7.src();
        var size = element7.bbox().size;
        if (imgDPI) {
          var prev = images[url];
          size = {
            width: Math.ceil(size.width * imgDPI / 72),
            height: Math.ceil(size.height * imgDPI / 72)
          };
          if (prev) {
            size.width = Math.max(prev.width, size.width);
            size.height = Math.max(prev.height, size.height);
          }
        }
        images[url] = size;
      },
      Text: function(element7) {
        var style = parseFontDef(element7.options.font);
        var url = getFontURL(style);
        if (fonts.indexOf(url) < 0) {
          fonts.push(url);
        }
      }
    }, element6);
  });
  function doIt() {
    if (--count2 > 0) {
      return;
    }
    var pdf = new PDFDocument({
      producer: getOption("producer"),
      title: getOption("title"),
      author: getOption("author"),
      subject: getOption("subject"),
      keywords: getOption("keywords"),
      creator: getOption("creator"),
      date: getOption("date"),
      autoPrint: getOption("autoPrint")
    });
    function drawPage(group3) {
      var options3 = group3.options;
      var tmp = optimize(group3);
      var bbox = tmp.bbox;
      group3 = tmp.root;
      var paperSize = getOption("paperSize", getOption("paperSize", "auto"), options3), addMargin = false;
      if (paperSize == "auto") {
        if (bbox) {
          var size = bbox.getSize();
          paperSize = [size.width, size.height];
          addMargin = true;
          var origin = bbox.getOrigin();
          tmp = new group_default();
          tmp.transform(new matrix_default(1, 0, 0, 1, -origin.x, -origin.y));
          tmp.append(group3);
          group3 = tmp;
        } else {
          paperSize = "A4";
        }
      }
      var page;
      page = pdf.addPage({
        paperSize,
        margin: getOption("margin", getOption("margin"), options3),
        addMargin,
        landscape: getOption("landscape", getOption("landscape", false), options3)
      });
      drawElement(group3, page, pdf);
    }
    if (multiPage) {
      group2.children.forEach(drawPage);
    } else {
      drawPage(group2);
    }
    callback(pdf.render(), pdf);
  }
  var count2 = 2;
  loadFonts(fonts, doIt);
  loadImages(images, doIt, {
    jpegQuality: getOption("jpegQuality", 0.92),
    keepPNG: getOption("keepPNG", false)
  });
}
function toDataURL(group2, callback) {
  render4(group2, function(data2) {
    callback("data:application/pdf;base64," + data2.base64());
  });
}
function toBlob(group2, callback) {
  render4(group2, function(data2) {
    callback(new window.Blob([data2.get()], { type: "application/pdf" }));
  });
}
function saveAs2(group2, filename, proxy, callback) {
  if (window.Blob && !support_default.browser.safari) {
    toBlob(group2, function(blob) {
      saveAs({ dataURI: blob, fileName: filename });
      if (callback) {
        callback(blob);
      }
    });
  } else {
    toDataURL(group2, function(dataURL) {
      saveAs({ dataURI: dataURL, fileName: filename, proxyURL: proxy });
      if (callback) {
        callback(dataURL);
      }
    });
  }
}
function dispatch(handlers, element6) {
  var handler = handlers[element6.nodeType];
  if (handler) {
    return handler.call.apply(handler, arguments);
  }
  return element6;
}
function drawElement(element6, page, pdf) {
  if (element6.options.vc) {
    page.comment("BEGIN: " + element6.options.vc);
  }
  var transform2 = element6.transform();
  var opacity = element6.opacity();
  page.save();
  if (opacity != null && opacity < 1) {
    page.setOpacity(opacity);
  }
  setStrokeOptions(element6, page, pdf);
  setFillOptions(element6, page, pdf);
  if (transform2) {
    var m = transform2.matrix();
    page.transform(m.a, m.b, m.c, m.d, m.e, m.f);
  }
  setClipping(element6, page, pdf);
  dispatch({
    Path: drawPath,
    MultiPath: drawMultiPath,
    Circle: drawCircle,
    Arc: drawArc,
    Text: drawText,
    Image: drawImage,
    Group: drawGroup,
    Rect: drawRect
  }, element6, page, pdf);
  page.restore();
  if (element6.options.vc) {
    page.comment("END: " + element6.options.vc);
  }
}
function setStrokeOptions(element6, page) {
  var stroke = element6.stroke && element6.stroke();
  if (!stroke) {
    return;
  }
  var color = stroke.color;
  if (color) {
    color = parseColor2(color);
    if (color == null) {
      return;
    }
    page.setStrokeColor(color.r, color.g, color.b);
    if (color.a != 1) {
      page.setStrokeOpacity(color.a);
    }
  }
  var width = stroke.width;
  if (width != null) {
    if (width === 0) {
      return;
    }
    page.setLineWidth(width);
  }
  var dashType = stroke.dashType;
  if (dashType) {
    page.setDashPattern(DASH_PATTERNS[dashType], 0);
  }
  var lineCap = stroke.lineCap;
  if (lineCap) {
    page.setLineCap(LINE_CAP[lineCap]);
  }
  var lineJoin = stroke.lineJoin;
  if (lineJoin) {
    page.setLineJoin(LINE_JOIN[lineJoin]);
  }
  var opacity = stroke.opacity;
  if (opacity != null) {
    page.setStrokeOpacity(opacity);
  }
}
function setFillOptions(element6, page) {
  var fill = element6.fill && element6.fill();
  if (!fill) {
    return;
  }
  if (fill instanceof gradient_default) {
    return;
  }
  var color = fill.color;
  if (color) {
    color = parseColor2(color);
    if (color == null) {
      return;
    }
    page.setFillColor(color.r, color.g, color.b);
    if (color.a != 1) {
      page.setFillOpacity(color.a);
    }
  }
  var opacity = fill.opacity;
  if (opacity != null) {
    page.setFillOpacity(opacity);
  }
}
function setClipping(element6, page, pdf) {
  var clip = element6.clip();
  if (clip) {
    _drawPath(clip, page, pdf);
    page.clip();
  }
}
function shouldDraw(thing) {
  return thing && (thing instanceof gradient_default || thing.color && !/^(none|transparent)$/i.test(thing.color) && (thing.width == null || thing.width > 0) && (thing.opacity == null || thing.opacity > 0));
}
function maybeGradient(element6, page, pdf, stroke) {
  var fill = element6.fill();
  if (fill instanceof gradient_default) {
    if (stroke) {
      page.clipStroke();
    } else {
      page.clip();
    }
    var isRadial = fill instanceof radial_gradient_default;
    var start2, end2;
    if (isRadial) {
      start2 = { x: fill.center().x, y: fill.center().y, r: 0 };
      end2 = { x: fill.center().x, y: fill.center().y, r: fill.radius() };
    } else {
      start2 = { x: fill.start().x, y: fill.start().y };
      end2 = { x: fill.end().x, y: fill.end().y };
    }
    var stops = fill.stops.elements().map(function(stop) {
      var offset4 = stop.offset();
      if (/%$/.test(offset4)) {
        offset4 = parseFloat(offset4) / 100;
      } else {
        offset4 = parseFloat(offset4);
      }
      var color = parseColor2(stop.color());
      color.a *= stop.opacity();
      return {
        offset: offset4,
        color
      };
    });
    stops.unshift(stops[0]);
    stops.push(stops[stops.length - 1]);
    var gradient = {
      userSpace: fill.userSpace(),
      type: isRadial ? "radial" : "linear",
      start: start2,
      end: end2,
      stops
    };
    var box = element6.rawBBox();
    var tl = box.topLeft(), size = box.getSize();
    box = {
      left: tl.x,
      top: tl.y,
      width: size.width,
      height: size.height
    };
    page.gradient(gradient, box);
    return true;
  }
}
function maybeFillStroke(element6, page, pdf) {
  if (shouldDraw(element6.fill()) && shouldDraw(element6.stroke())) {
    if (!maybeGradient(element6, page, pdf, true)) {
      page.fillStroke();
    }
  } else if (shouldDraw(element6.fill())) {
    if (!maybeGradient(element6, page, pdf, false)) {
      page.fill();
    }
  } else if (shouldDraw(element6.stroke())) {
    page.stroke();
  } else {
    page.nop();
  }
}
function maybeDrawRect(path, page) {
  var segments = path.segments;
  if (segments.length == 4 && path.options.closed) {
    var a = [];
    for (var i = 0; i < segments.length; ++i) {
      if (segments[i].controlIn()) {
        return false;
      }
      a[i] = segments[i].anchor();
    }
    var isRect = a[0].y == a[1].y && a[1].x == a[2].x && a[2].y == a[3].y && a[3].x == a[0].x || a[0].x == a[1].x && a[1].y == a[2].y && a[2].x == a[3].x && a[3].y == a[0].y;
    if (isRect) {
      page.rect(
        a[0].x,
        a[0].y,
        a[2].x - a[0].x,
        a[2].y - a[0].y
        /*height*/
      );
      return true;
    }
  }
}
function _drawPath(element6, page, pdf) {
  var segments = element6.segments;
  if (segments.length === 0) {
    return;
  }
  if (!maybeDrawRect(element6, page, pdf)) {
    for (var prev, i = 0; i < segments.length; ++i) {
      var seg = segments[i];
      var anchor = seg.anchor();
      if (!prev) {
        page.moveTo(anchor.x, anchor.y);
      } else {
        var prevOut = prev.controlOut();
        var controlIn = seg.controlIn();
        if (prevOut && controlIn) {
          page.bezier(
            prevOut.x,
            prevOut.y,
            controlIn.x,
            controlIn.y,
            anchor.x,
            anchor.y
          );
        } else {
          page.lineTo(anchor.x, anchor.y);
        }
      }
      prev = seg;
    }
    if (element6.options.closed) {
      page.close();
    }
  }
}
function drawPath(element6, page, pdf) {
  _drawPath(element6, page, pdf);
  maybeFillStroke(element6, page, pdf);
}
function drawMultiPath(element6, page, pdf) {
  var paths = element6.paths;
  for (var i = 0; i < paths.length; ++i) {
    _drawPath(paths[i], page, pdf);
  }
  maybeFillStroke(element6, page, pdf);
}
function drawCircle(element6, page, pdf) {
  var g = element6.geometry();
  page.circle(g.center.x, g.center.y, g.radius);
  maybeFillStroke(element6, page, pdf);
}
function drawArc(element6, page, pdf) {
  var points3 = element6.geometry().curvePoints();
  page.moveTo(points3[0].x, points3[0].y);
  for (var i = 1; i < points3.length; ) {
    page.bezier(
      points3[i].x,
      points3[i++].y,
      points3[i].x,
      points3[i++].y,
      points3[i].x,
      points3[i++].y
    );
  }
  maybeFillStroke(element6, page, pdf);
}
function drawText(element6, page) {
  var style = parseFontDef(element6.options.font);
  var pos = element6.Ce;
  var mode;
  if (element6.fill() && element6.stroke()) {
    mode = TEXT_RENDERING_MODE2.fillAndStroke;
  } else if (element6.fill()) {
    mode = TEXT_RENDERING_MODE2.fill;
  } else if (element6.stroke()) {
    mode = TEXT_RENDERING_MODE2.stroke;
  }
  page.transform(1, 0, 0, -1, pos.x, pos.y + style.fontSize);
  page.beginText();
  page.setFont(getFontURL(style), style.fontSize);
  page.setTextRenderingMode(mode);
  page.showText(element6.content(), element6.Jb ? element6.Jb.width() : null);
  page.endText();
}
function drawGroup(element6, page, pdf) {
  if (element6.Ya) {
    page.addLink(element6.Ya.url, element6.Ya);
  }
  var children2 = element6.children;
  for (var i = 0; i < children2.length; ++i) {
    drawElement(children2[i], page, pdf);
  }
}
function drawImage(element6, page) {
  var url = element6.src();
  if (!url) {
    return;
  }
  var rect = element6.rect();
  var tl = rect.getOrigin();
  var sz = rect.getSize();
  page.transform(sz.width, 0, 0, -sz.height, tl.x, tl.y + sz.height);
  page.drawImage(url);
}
function drawRect(element6, page, pdf) {
  var geometry = element6.geometry();
  var ref = geometry.cornerRadius;
  var rx = ref[0];
  var ry = ref[1];
  if (rx === 0 && ry === 0) {
    page.rect(geometry.origin.x, geometry.origin.y, geometry.size.width, geometry.size.height);
    maybeFillStroke(element6, page, pdf);
  } else {
    drawPath(Path.fromRect(geometry, element6.options), page, pdf);
  }
}
function parseColor2(value2) {
  var color = parseColor(value2, true);
  return color ? color.toRGB() : null;
}
function optimize(root) {
  var clipbox = false;
  var matrix = matrix_default.unit();
  var currentBox = null;
  var changed;
  do {
    changed = false;
    root = opt(root);
  } while (root && changed);
  return { root, bbox: currentBox };
  function change(newShape) {
    changed = true;
    return newShape;
  }
  function visible(shape19) {
    return shape19.visible() && shape19.opacity() > 0 && (shouldDraw(shape19.fill()) || shouldDraw(shape19.stroke()));
  }
  function optArray(a) {
    var b = [];
    for (var i = 0; i < a.length; ++i) {
      var el = opt(a[i]);
      if (el != null) {
        b.push(el);
      }
    }
    return b;
  }
  function withClipping(shape19, f) {
    var saveclipbox = clipbox;
    var savematrix = matrix;
    if (shape19.transform()) {
      matrix = matrix.multiplyCopy(shape19.transform().matrix());
    }
    var clip = shape19.clip();
    if (clip) {
      clip = clip.bbox();
      if (clip) {
        clip = clip.bbox(matrix);
        clipbox = clipbox ? rect_default.intersect(clipbox, clip) : clip;
      }
    }
    try {
      return f();
    } finally {
      clipbox = saveclipbox;
      matrix = savematrix;
    }
  }
  function inClipbox(shape19) {
    if (clipbox == null) {
      return false;
    }
    var box = shape19.rawBBox().bbox(matrix);
    if (clipbox && box) {
      box = rect_default.intersect(box, clipbox);
    }
    return box;
  }
  function opt(shape19) {
    return withClipping(shape19, function() {
      if (!(shape19 instanceof group_default || shape19 instanceof MultiPath)) {
        var box = inClipbox(shape19);
        if (!box) {
          return change(null);
        }
        currentBox = currentBox ? rect_default.union(currentBox, box) : box;
      }
      return dispatch({
        Path: function(shape20) {
          if (shape20.segments.length === 0 || !visible(shape20)) {
            return change(null);
          }
          return shape20;
        },
        MultiPath: function(shape20) {
          if (!visible(shape20)) {
            return change(null);
          }
          var el = new MultiPath(shape20.options);
          el.paths = optArray(shape20.paths);
          if (el.paths.length === 0) {
            return change(null);
          }
          return el;
        },
        Circle: function(shape20) {
          if (!visible(shape20)) {
            return change(null);
          }
          return shape20;
        },
        Arc: function(shape20) {
          if (!visible(shape20)) {
            return change(null);
          }
          return shape20;
        },
        Text: function(shape20) {
          if (!/\S/.test(shape20.content()) || !visible(shape20)) {
            return change(null);
          }
          return shape20;
        },
        Image: function(shape20) {
          if (!(shape20.visible() && shape20.opacity() > 0)) {
            return change(null);
          }
          return shape20;
        },
        Group: function(shape20) {
          if (!(shape20.visible() && shape20.opacity() > 0)) {
            return change(null);
          }
          var el = new group_default(shape20.options);
          el.children = optArray(shape20.children);
          el.Ya = shape20.Ya;
          if (shape20 !== root && el.children.length === 0 && !shape20.Ya) {
            return change(null);
          }
          return el;
        },
        Rect: function(shape20) {
          if (!visible(shape20)) {
            return change(null);
          }
          return shape20;
        }
      }, shape19);
    });
  }
}
function exportPDF(group2, options2) {
  var promise = createPromise();
  for (var i in options2) {
    if (i == "margin" && group2.options.pdf && group2.options.pdf.pd) {
      continue;
    }
    group2.options.set("pdf." + i, options2[i]);
  }
  toDataURL(group2, promise.resolve);
  return promise;
}
function exportPDFToBlob(group2, options2) {
  var promise = createPromise();
  for (var i in options2) {
    if (i == "margin" && group2.options.pdf && group2.options.pdf.pd) {
      continue;
    }
    group2.options.set("pdf." + i, options2[i]);
  }
  if (window.Blob && !support_default.browser.safari) {
    toBlob(group2, promise.resolve);
  } else {
    toDataURL(group2, promise.resolve);
  }
  return promise;
}

// node_modules/@progress/kendo-react-inputs/dist/es/colors/utils/misc.js
var isPresent3 = function(value2) {
  return value2 !== null && value2 !== void 0;
};
var fitIntoBounds = function(contender, min, max) {
  if (!isPresent3(contender) || isNaN(contender)) {
    return min;
  }
  return contender <= min ? min : contender >= max ? max : contender;
};

// node_modules/@progress/kendo-react-inputs/dist/es/colors/utils/color-parser.js
var parseColor3 = function(value2, format3, safe) {
  if (safe === void 0) {
    safe = true;
  }
  var allowedFormats = ["hex", "rgba"];
  if (allowedFormats.indexOf(format3) === -1) {
    throw new Error("Unsupported color output format '".concat(format3, "'. The available options are 'hex' or 'rgba'."));
  }
  if (!isPresent3(value2)) {
    return;
  }
  var parsedColor = parseColor(value2.trim(), safe);
  if (!isPresent3(parsedColor)) {
    return;
  }
  return format3 === "hex" ? parsedColor.toCss() : parsedColor.toCssRgba();
};
var getHSV = function(value2, safe) {
  if (safe === void 0) {
    safe = true;
  }
  var parsed = parseColor(value2, safe);
  if (!isPresent3(parsed)) {
    return {};
  }
  return parsed.toHSV();
};
var getRGBA = function(value2, safe) {
  if (safe === void 0) {
    safe = true;
  }
  var parsed = parseColor(value2, safe);
  if (!isPresent3(parsed)) {
    return {};
  }
  return parsed.toBytes();
};
var getColorFromHSV = function(hsva) {
  var hue = fitIntoBounds(hsva.h, 0, 359.9);
  var saturation = fitIntoBounds(hsva.s, 0, 1);
  var value2 = fitIntoBounds(hsva.v, 0, 1);
  var alpha = fitIntoBounds(hsva.a, 0, 1);
  return color_default.fromHSV(hue, saturation, value2, alpha).toCssRgba();
};
var getColorFromHue = function(hue) {
  return getColorFromHSV({ h: hue, s: 1, v: 1, a: 1 });
};
var getColorFromRGBA = function(rgba) {
  var red = fitIntoBounds(rgba.r, 0, 255);
  var green = fitIntoBounds(rgba.g, 0, 255);
  var blue = fitIntoBounds(rgba.b, 0, 255);
  var alpha = fitIntoBounds(rgba.a, 0, 1);
  return color_default.fromBytes(red, green, blue, alpha).toCssRgba();
};
var getRGBFromRGBA = function(foregroundColor, backgroundColor) {
  var r1 = fitIntoBounds(foregroundColor.r, 0, 255);
  var g1 = fitIntoBounds(foregroundColor.g, 0, 255);
  var b1 = fitIntoBounds(foregroundColor.b, 0, 255);
  var a1 = fitIntoBounds(foregroundColor.a, 0, 1);
  var r2 = fitIntoBounds(backgroundColor.r, 0, 255);
  var g2 = fitIntoBounds(backgroundColor.g, 0, 255);
  var b2 = fitIntoBounds(backgroundColor.b, 0, 255);
  return {
    r: Math.round((1 - a1) * r2 + a1 * r1),
    g: Math.round((1 - a1) * g2 + a1 * g1),
    b: Math.round((1 - a1) * b2 + a1 * b1)
  };
};
var getLuminance = function(rgb) {
  var a = [rgb.r || 0, rgb.g || 0, rgb.b || 0].map(function(v) {
    v /= 255;
    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);
  });
  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;
};
var getContrast = function(luminance1, luminance2) {
  var brightest = Math.max(luminance1, luminance2);
  var darkest = Math.min(luminance1, luminance2);
  return (brightest + 0.05) / (darkest + 0.05);
};
var getContrastFromTwoRGBAs = function(a, b) {
  return getContrast(getLuminance(getRGBFromRGBA(a, b)), getLuminance(getRGBFromRGBA(b, { r: 0, g: 0, b: 0, a: 1 })));
};

// node_modules/@progress/kendo-react-inputs/dist/es/package-metadata.js
var packageMetadata11 = {
  name: "@progress/kendo-react-inputs",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225671,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-inputs/dist/es/input/Input.js
var React135 = __toESM(require_react());
var PropTypes61 = __toESM(require_prop_types());
var __extends49 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign66 = function() {
  __assign66 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign66.apply(this, arguments);
};
var __rest32 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var InputWithoutContext = (
  /** @class */
  function(_super) {
    __extends49(InputWithoutContext2, _super);
    function InputWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.j = null;
      _this3.ea = guid();
      _this3.focus = function() {
        if (_this3.j) {
          _this3.j.focus();
        }
      };
      _this3.isInvalid = function(state) {
        var result = false;
        for (var prop2 in state) {
          if (state.hasOwnProperty(prop2)) {
            result = result || Boolean(state[prop2]);
          }
        }
        return result;
      };
      _this3.setValidity = function() {
        if (_this3.j && _this3.j.setCustomValidity) {
          _this3.validity.valid || !_this3.validityStyles ? _this3.j.classList.remove("k-invalid") : _this3.j.classList.add("k-invalid");
          _this3.j.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || "");
        }
      };
      _this3.handleChange = function(event2) {
        _this3.setState({
          value: event2.target.value
        });
        _this3.valueDuringOnChange = event2.target.value;
        if (_this3.props.onChange) {
          _this3.props.onChange.call(void 0, {
            syntheticEvent: event2,
            nativeEvent: event2.nativeEvent,
            value: event2.target.value,
            target: _this3
          });
        }
        _this3.valueDuringOnChange = void 0;
      };
      _this3.handleAutoFill = function(e) {
        if (e.animationName === "autoFillStart") {
          var parent_1 = e.target.parentNode;
          if (parent_1 && parent_1.classList.contains("k-empty")) {
            parent_1.classList.remove("k-empty");
          }
        }
      };
      validatePackage2(packageMetadata11);
      _this3.state = {
        value: _this3.props.defaultValue || InputWithoutContext2.defaultProps.defaultValue
      };
      return _this3;
    }
    Object.defineProperty(InputWithoutContext2.prototype, "element", {
      /**
       * Gets the native input element of the Input component.
       */
      get: function() {
        return this.j;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputWithoutContext2.prototype, "value", {
      /**
       * Gets the value of the Input.
       */
      get: function() {
        return this.valueDuringOnChange !== void 0 ? this.valueDuringOnChange : this.props.value !== void 0 ? this.props.value : this.state.value;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the Input.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the Input is set.
       */
      get: function() {
        var result = {
          badInput: this.j ? this.j.validity.badInput : false,
          patternMismatch: this.j ? this.j.validity.patternMismatch : false,
          rangeOverflow: this.j ? this.j.validity.rangeOverflow : false,
          rangeUnderflow: this.j ? this.j.validity.rangeUnderflow : false,
          stepMismatch: this.j ? this.j.validity.stepMismatch : false,
          tooLong: this.j ? this.j.validity.tooLong : false,
          typeMismatch: this.j ? this.j.validity.typeMismatch : false,
          valueMissing: this.j ? this.j.validity.valueMissing : false
        };
        return __assign66(__assign66({}, result), { customError: this.props.validationMessage !== void 0, valid: this.props.valid !== void 0 ? this.props.valid : this.j ? !this.isInvalid(result) : true });
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InputWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : InputWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    InputWithoutContext2.prototype.componentDidMount = function() {
      this.forceUpdate();
    };
    InputWithoutContext2.prototype.componentDidUpdate = function() {
      this.setValidity();
    };
    InputWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, className = _a14.className, label = _a14.label, id = _a14.id, validationMessage = _a14.validationMessage, defaultValue2 = _a14.defaultValue, valid = _a14.valid, visited = _a14.visited, touched = _a14.touched, modified = _a14.modified, ariaLabelledBy = _a14.ariaLabelledBy, ariaDescribedBy = _a14.ariaDescribedBy, validityStyles = _a14.validityStyles, style = _a14.style, ariaLabel = _a14.ariaLabel, props = __rest32(_a14, ["className", "label", "id", "validationMessage", "defaultValue", "valid", "visited", "touched", "modified", "ariaLabelledBy", "ariaDescribedBy", "validityStyles", "style", "ariaLabel"]);
      var inputId = id || this.ea;
      var isValid = !this.validityStyles || this.validity.valid;
      var inputClassName = classNames(className, "k-input k-input-md k-rounded-md k-input-solid");
      var textbox = React135.createElement("input", __assign66({ "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy, "aria-disabled": this.props.disabled || void 0, "aria-invalid": !isValid || void 0, "aria-label": ariaLabel || void 0 }, props, { style: !label ? style : void 0, value: this.value, id: inputId, className: inputClassName, onChange: this.handleChange, onAnimationStart: this.handleAutoFill, ref: function(el) {
        _this3.j = el;
      } }));
      return label ? React135.createElement(FloatingLabel, { label, editorId: inputId, editorValue: String(this.value), editorValid: isValid, editorDisabled: props.disabled, editorPlaceholder: props.placeholder, children: textbox, style, dir: props.dir }) : textbox;
    };
    InputWithoutContext2.displayName = "Input";
    InputWithoutContext2.propTypes = {
      label: PropTypes61.string,
      validationMessage: PropTypes61.string,
      required: PropTypes61.bool,
      validate: PropTypes61.bool,
      id: PropTypes61.string,
      ariaLabelledBy: PropTypes61.string,
      ariaDescribedBy: PropTypes61.string,
      ariaLabel: PropTypes61.string
    };
    InputWithoutContext2.defaultProps = {
      defaultValue: "",
      required: false,
      validityStyles: true
    };
    return InputWithoutContext2;
  }(React135.Component)
);
var InputPropsContext = createPropsContext();
;
var Input = withPropsContext(InputPropsContext, InputWithoutContext);
Input.displayName = "KendoReactInput";

// node_modules/@progress/kendo-react-inputs/dist/es/colors/HexInput.js
var React136 = __toESM(require_react());
var __extends50 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var HexInput = (
  /** @class */
  function(_super) {
    __extends50(HexInput2, _super);
    function HexInput2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.onChange = function(event2) {
        var hex2 = event2.target.value;
        var value2 = parseColor3(hex2, "rgba");
        _this3.setState({ hex: hex2 });
        if (isPresent3(value2)) {
          _this3.props.onHexChange(hex2, value2, event2);
        }
      };
      _this3.onBlur = function() {
        if (!isPresent3(parseColor3(_this3.state.hex, "rgba"))) {
          _this3.setState({ hex: _this3.state.originalHex });
        }
      };
      _this3.state = { hex: _this3.props.hex, originalHex: _this3.props.hex };
      return _this3;
    }
    HexInput2.prototype.render = function() {
      return React136.createElement(Input, { value: this.state.hex, onChange: this.onChange, onBlur: this.onBlur, disabled: this.props.disabled });
    };
    HexInput2.getDerivedStateFromProps = function(props, state) {
      if (props.hex !== state.originalHex) {
        return { hex: props.hex, originalHex: props.hex };
      }
      return null;
    };
    return HexInput2;
  }(React136.Component)
);
var HexInput_default = HexInput;

// node_modules/@progress/kendo-react-inputs/dist/es/messages/index.js
var _a12;
var numericIncreaseValue = "numerictextbox.increment";
var numericDecreaseValue = "numerictextbox.decrement";
var sliderIncreaseValue = "slider.increment";
var sliderDecreaseValue = "slider.decrement";
var sliderDragTitle = "slider.dragTitle";
var colorGradientR = "colorGradient.r";
var colorGradientG = "colorGradient.g";
var colorGradientB = "colorGradient.b";
var colorGradientA = "colorGradient.a";
var colorGradientHex = "colorGradient.hex";
var colorGradientContrastRatio = "colorGradient.contrastRatio";
var colorGradientAALevel = "colorGradient.colorGradientAALevel";
var colorGradientAAALevel = "colorGradient.colorGradientAAALevel";
var colorGradientPass = "colorGradient.colorGradientPass";
var colorGradientFail = "colorGradient.colorGradientFail";
var colorGradientHueSliderLabel = "colorGradient.hueSliderLabel";
var colorGradientAlphaSliderLabel = "colorGradient.alphaSliderLabel";
var colorGradientToggleInputsButton = "colorGradient.toggleInputsButton";
var flatColorPickerCancelBtn = "flatColorPicker.cancelBtn";
var flatColorPickerApplyBtn = "flatColorPicker.applyBtn";
var flatColorPickerColorGradientBtn = "flatColorPicker.colorGradientBtn";
var flatColorPickerColorPaletteBtn = "flatColorPicker.colorPaletteBtn";
var flatColorPickerClearBtn = "flatColorPicker.clearBtn";
var checkboxValidation = "checkbox.validation";
var checkboxOptionalText = "checkbox.optionalText";
var radioButtonValidation = "radioButton.validation";
var switchValidation = "switch.validation";
var colorPickerDropdownButtonAriaLabel = "colorPicker.dropdownButtonAriaLabel";
var ratingAriaLabel = "rating.ariaLabel";
var signatureClear = "signature.clear";
var signatureMaximize = "signature.maximize";
var signatureMinimize = "signature.minimize";
var messages6 = (_a12 = {}, _a12[numericIncreaseValue] = "Increase value", _a12[numericDecreaseValue] = "Decrease value", _a12[sliderIncreaseValue] = "Increase", _a12[sliderDecreaseValue] = "Decrease", _a12[sliderDragTitle] = "Drag", _a12[colorGradientR] = "r", _a12[colorGradientG] = "g", _a12[colorGradientB] = "b", _a12[colorGradientA] = "a", _a12[colorGradientHex] = "hex", _a12[colorGradientContrastRatio] = "Contrast ratio", _a12[colorGradientAALevel] = "AA", _a12[colorGradientAAALevel] = "AAA", _a12[colorGradientPass] = "Pass", _a12[colorGradientFail] = "Fail", _a12[colorGradientHueSliderLabel] = "Hue slider", _a12[colorGradientAlphaSliderLabel] = "Alpha slider", _a12[colorGradientToggleInputsButton] = "Toggle colorgradient inputs", _a12[flatColorPickerCancelBtn] = "Cancel", _a12[flatColorPickerApplyBtn] = "Apply", _a12[flatColorPickerColorGradientBtn] = "Color Gradient view", _a12[flatColorPickerColorPaletteBtn] = "Color Palette view", _a12[flatColorPickerClearBtn] = "Clear color value", _a12[checkboxValidation] = "Please check this box if you want to proceed!", _a12[checkboxOptionalText] = "(Optional)", _a12[radioButtonValidation] = "Please select option if you want to proceed!", _a12[switchValidation] = "Please turn on if you want to proceed!", _a12[colorPickerDropdownButtonAriaLabel] = "Select", _a12[ratingAriaLabel] = "Rating", _a12[signatureClear] = "Clear", _a12[signatureMaximize] = "Maximize", _a12[signatureMinimize] = "Minimize", _a12);

// node_modules/@progress/kendo-react-inputs/dist/es/colors/ColorInput.js
var React137 = __toESM(require_react());
var __extends51 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign67 = function() {
  __assign67 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign67.apply(this, arguments);
};
var modes = ["rgba", "rgb", "hex"];
var ColorInput = (
  /** @class */
  function(_super) {
    __extends51(ColorInput2, _super);
    function ColorInput2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.onRgbaRChange = function(event2) {
        _this3.dispatchRgbaChange({ r: event2.value }, event2);
      };
      _this3.onRgbaGChange = function(event2) {
        _this3.dispatchRgbaChange({ g: event2.value }, event2);
      };
      _this3.onRgbaBChange = function(event2) {
        _this3.dispatchRgbaChange({ b: event2.value }, event2);
      };
      _this3.onRgbaAChange = function(event2) {
        _this3.dispatchRgbaChange({ a: event2.value }, event2);
      };
      _this3.state = { inputMode: props.defaultInputMode || modes[1] };
      return _this3;
    }
    ColorInput2.prototype.render = function() {
      var localizationService = provideLocalizationService(this);
      var hexMessage = localizationService.toLanguageString(colorGradientR, messages6[colorGradientHex]);
      var rMessage = localizationService.toLanguageString(colorGradientR, messages6[colorGradientR]);
      var gMessage = localizationService.toLanguageString(colorGradientR, messages6[colorGradientG]);
      var bMessage = localizationService.toLanguageString(colorGradientR, messages6[colorGradientB]);
      var aMessage = localizationService.toLanguageString(colorGradientR, messages6[colorGradientA]);
      var toggleButtonMessage = localizationService.toLanguageString(colorGradientToggleInputsButton, messages6[colorGradientToggleInputsButton]);
      return React137.createElement(
        "div",
        { className: "k-colorgradient-inputs k-hstack" },
        React137.createElement(
          "div",
          { className: "k-vstack" },
          React137.createElement(Button, { "aria-label": toggleButtonMessage, fillMode: "flat", icon: "caret-alt-expand", svgIcon: caretAltExpandIcon, className: "k-colorgradient-toggle-mode k-icon-button", onClick: this.onToggleModeChange.bind(this) })
        ),
        this.state.inputMode === "hex" && React137.createElement(
          "div",
          { className: "k-vstack k-flex-1" },
          React137.createElement(
            "span",
            { className: "k-hex-value k-textbox k-input" },
            React137.createElement(HexInput_default, { hex: this.props.hex, onHexChange: this.props.onHexChange, disabled: this.props.disabled })
          ),
          React137.createElement(Label, { className: "k-colorgradient-input-label" }, hexMessage)
        ),
        (this.state.inputMode === "rgb" || this.state.inputMode === "rgba") && React137.createElement(
          React137.Fragment,
          null,
          React137.createElement(
            "div",
            { className: "k-vstack" },
            React137.createElement(NumericTextBox, { inputType: "number", value: this.props.rgba.r, ariaLabel: String(this.props.rgba.r), min: 0, max: 255, spinners: false, format: "n", onChange: this.onRgbaRChange, disabled: this.props.disabled }),
            React137.createElement(Label, { className: "k-colorgradient-input-label" }, rMessage)
          ),
          React137.createElement(
            "div",
            { className: "k-vstack" },
            React137.createElement(NumericTextBox, { inputType: "number", value: this.props.rgba.g, ariaLabel: String(this.props.rgba.g), min: 0, max: 255, spinners: false, format: "n", onChange: this.onRgbaGChange, disabled: this.props.disabled }),
            React137.createElement(Label, { className: "k-colorgradient-input-label" }, gMessage)
          ),
          React137.createElement(
            "div",
            { className: "k-vstack" },
            React137.createElement(NumericTextBox, { inputType: "number", value: this.props.rgba.b, ariaLabel: String(this.props.rgba.b), min: 0, max: 255, spinners: false, format: "n", onChange: this.onRgbaBChange, disabled: this.props.disabled }),
            React137.createElement(Label, { className: "k-colorgradient-input-label" }, bMessage)
          )
        ),
        this.state.inputMode === "rgba" && React137.createElement(
          "div",
          { className: "k-vstack" },
          this.props.opacity && React137.createElement(NumericTextBox, { inputType: "number", value: this.props.rgba.a, ariaLabel: String(this.props.rgba.a), min: 0, max: 1, step: 0.01, spinners: false, format: "n2", onChange: this.onRgbaAChange, disabled: this.props.disabled }),
          this.props.opacity && React137.createElement(Label, { className: "k-colorgradient-input-label" }, aMessage)
        )
      );
    };
    ColorInput2.prototype.dispatchRgbaChange = function(newValue, event2) {
      var rgba = __assign67({}, this.props.rgba);
      if (newValue.r !== void 0) {
        rgba.r = newValue.r;
      }
      if (newValue.g !== void 0) {
        rgba.g = newValue.g;
      }
      if (newValue.b !== void 0) {
        rgba.b = newValue.b;
      }
      if (newValue.a !== void 0) {
        rgba.a = newValue.a;
      }
      this.props.onRgbaChange(rgba, event2);
    };
    ;
    ColorInput2.prototype.onToggleModeChange = function() {
      var index = modes.length - 1 === modes.indexOf(this.state.inputMode) ? 0 : modes.indexOf(this.state.inputMode) + 1;
      if (!this.props.opacity) {
        var nextIndex = modes[index] === "rgba" ? index + 1 : index;
        this.setState({ inputMode: modes[nextIndex] });
      } else {
        this.setState({ inputMode: modes[index] });
      }
    };
    return ColorInput2;
  }(React137.Component)
);
var ColorInput_default = ColorInput;
registerForIntl(ColorInput);
registerForLocalization(ColorInput);

// node_modules/@progress/kendo-react-inputs/dist/es/numerictextbox/utils/index.js
var __assign68 = function() {
  __assign68 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign68.apply(this, arguments);
};
var DEFAULT_NUMBER = 11111111111111e-7;
var MAX_DECIMAL = 0.31111111111111117;
var MIN_DECIMAL = 1;
var ONE_NUMBER = 1;
var ZERO_NUMBER = 0;
var DIGITS_REGEX = /\d/;
var MAX_PRECISION3 = 15;
var getInitialState = function() {
  return {
    eventValue: null,
    prevLooseValue: "",
    currentLooseValue: "",
    focused: false,
    selectionStart: void 0,
    selectionEnd: void 0,
    decimalSelect: false,
    valueIsCorrected: false,
    valueIsOutOfRange: false
  };
};
var getStateOrPropsValue = function(value2, stateValue) {
  return value2 !== void 0 ? value2 : stateValue;
};
var formatValue = function(value2, format3, intlService) {
  if (value2 === null && value2 === void 0) {
    return "";
  }
  if (typeof value2 === "string") {
    return value2;
  }
  return intlService.formatNumber(value2, format3);
};
var fractionLength = function(value2) {
  return (String(value2).split(".")[1] || "").length;
};
var maxFractionLength = function(value1, value2) {
  return Math.max(fractionLength(value1), fractionLength(value2));
};
var limitPrecision = function(precision) {
  return Math.min(precision, MAX_PRECISION3);
};
var toFixedPrecision = function(value2, precision) {
  var maxPrecision = limitPrecision(precision);
  return parseFloat(value2.toFixed(maxPrecision));
};
var increaseValue2 = function(value2, newState, step, min, max, format3, intlService) {
  var maxPrecision = maxFractionLength(value2 || 0, step || 0);
  var increasedValue = rangeValue(toFixedPrecision((value2 || 0) + (step || 0), maxPrecision), min, max);
  newState.eventValue = increasedValue;
  newState.currentLooseValue = formatValue(increasedValue, format3, intlService);
  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);
};
var decreaseValue2 = function(value2, newState, step, min, max, format3, intlService) {
  var maxPrecision = maxFractionLength(value2 || 0, step || 0);
  var decreasedValue = rangeValue(toFixedPrecision((value2 || 0) - (step || 0), maxPrecision), min, max);
  newState.eventValue = decreasedValue;
  newState.currentLooseValue = formatValue(decreasedValue, format3, intlService);
  newState.selectionStart = newState.selectionEnd = getLastNumberIndex(newState.currentLooseValue, DIGITS_REGEX);
};
var rangeValue = function(value2, min, max) {
  if (value2 == null) {
    return value2;
  }
  if (!(value2 > 1 || value2 < 1 || value2 === 1)) {
    return null;
  }
  if (max !== void 0 && min !== void 0 && max < min) {
    return null;
  }
  if (max !== void 0 && value2 > max) {
    value2 = max;
  }
  if (min !== void 0 && value2 < min) {
    value2 = min;
  }
  return value2;
};
var getMaxCursorPosition = function(nextValue, formatInfo) {
  var formatSuffixIndex = formatInfo.findIndex(function(_a14) {
    var _2 = _a14[0], currSuffix = _a14[1];
    return Boolean(currSuffix) && nextValue.indexOf(currSuffix) === nextValue.length - currSuffix.length;
  });
  if (formatSuffixIndex === -1) {
    return -1;
  }
  var suffix = formatInfo[formatSuffixIndex][1];
  return nextValue.length - suffix.length;
};
var getMinCursorPosition = function(nextValue, formatInfo) {
  var formatPrefixIndex = formatInfo.findIndex(function(_a14) {
    var currPrefix = _a14[0], _2 = _a14[1];
    return Boolean(currPrefix) && nextValue.indexOf(currPrefix) === 0;
  });
  if (formatPrefixIndex === -1) {
    return -1;
  }
  var prefix = formatInfo[formatPrefixIndex][0];
  return prefix.length;
};
var rangeSelection = function(nextLooseValue, formatInfo, newState) {
  var maxPosition = getMaxCursorPosition(nextLooseValue, formatInfo);
  if (maxPosition !== -1 && newState.selectionStart > maxPosition) {
    newState.selectionStart = newState.selectionEnd = maxPosition;
    return;
  }
  if (newState.selectionStart > nextLooseValue.length) {
    newState.selectionStart = newState.selectionEnd = nextLooseValue.length;
  }
  var minPosition = getMinCursorPosition(nextLooseValue, formatInfo);
  if (minPosition !== -1 && newState.selectionStart < minPosition) {
    newState.selectionStart = newState.selectionEnd = minPosition;
  }
  if (newState.selectionStart === -1) {
    newState.selectionStart = newState.selectionEnd = 0;
  }
};
var setSelection = function(newState, newIndex, nextLooseValue, formatInfo) {
  newState.selectionStart = newState.selectionEnd = newIndex;
  rangeSelection(nextLooseValue, formatInfo, newState);
};
var setInvalid = function(newState, format3, formatInfo, intlService) {
  newState.eventValue = intlService.parseNumber(newState.prevLooseValue, format3);
  newState.currentLooseValue = newState.prevLooseValue;
  newState.valueIsCorrected = true;
  setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);
};
var isMinusSymbolAdded = function(newState, symbols) {
  var newText = String(newState.currentLooseValue);
  var oldText = String(newState.prevLooseValue);
  return newText.split(symbols.minusSign).length !== oldText.split(symbols.minusSign).length && newText.length === oldText.length + symbols.minusSign.length;
};
var isMinusSymbolRemoved = function(newState, symbols) {
  var newText = String(newState.currentLooseValue);
  var oldText = String(newState.prevLooseValue);
  return newText.indexOf(symbols.minusSign) === -1 && oldText.indexOf(symbols.minusSign) !== -1;
};
var isDecimalDuplicated = function(newState, symbols) {
  var newText = String(newState.currentLooseValue);
  return newText.split(symbols.decimal).length > 2;
};
var getFormatPrefixSufix = function(format3, intlService) {
  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format3);
  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format3);
  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format3);
  var oneResult = intlService.formatNumber(ONE_NUMBER, format3);
  var positivePrefix = getPrefix(positiveResult);
  var negativePrefix = getPrefix(negativeResult);
  var zeroPrefix = getPrefix(zeroResult);
  var onePrefix = getPrefix(oneResult);
  var positiveSuffix = getSuffix(positiveResult);
  var negativeSuffix = getSuffix(negativeResult);
  var zeroSuffix = getSuffix(zeroResult);
  var oneSuffix = getSuffix(oneResult);
  return {
    positiveInfo: [positivePrefix, positiveSuffix],
    negativeInfo: [negativePrefix, negativeSuffix],
    zeroInfo: [zeroPrefix, zeroSuffix],
    oneInfo: [onePrefix, oneSuffix]
  };
};
var getFormatSymbols = function(format3, intlService) {
  var positiveResult = intlService.formatNumber(DEFAULT_NUMBER, format3);
  var negativeResult = intlService.formatNumber(-DEFAULT_NUMBER, format3);
  var zeroResult = intlService.formatNumber(ZERO_NUMBER, format3);
  var oneResult = intlService.formatNumber(ONE_NUMBER, format3);
  var symbols = intlService.numberSymbols();
  var sanitizeRegex = new RegExp("[\\d\\".concat(symbols.decimal).concat(symbols.group, "]"), "g");
  var resultWithDuplicates = [positiveResult, negativeResult, zeroResult, oneResult].map(function(result) {
    return result.replace(sanitizeRegex, "");
  }).join("");
  return resultWithDuplicates.split("").filter(function(x, n, s) {
    return s.indexOf(x) === n;
  }).join("");
};
var getInitialPosition = function(nextLooseValue, symbols) {
  var decimalIdex = nextLooseValue.indexOf(symbols.decimal);
  if (decimalIdex > -1) {
    return decimalIdex;
  }
  return getLastNumberIndex(nextLooseValue, DIGITS_REGEX);
};
var reverseString = function(str) {
  return str.split("").reverse().join("");
};
var getLastNumberIndex = function(currentLooseValue, inputRegex) {
  return currentLooseValue.length - reverseString(currentLooseValue).search(inputRegex);
};
var getPrefix = function(str) {
  return str.split(str[str.search(DIGITS_REGEX)])[0];
};
var getSuffix = function(str) {
  var reversedString = reverseString(str);
  return reverseString(reversedString.split(reversedString[reversedString.search(DIGITS_REGEX)])[0]);
};
var getFirstNumberIndex = function(prevLooseValue, inputRegex) {
  return prevLooseValue.search(inputRegex);
};
var getDecimalCount = function(value2, decimal) {
  var currentDecimalPlace = value2.indexOf(decimal);
  return currentDecimalPlace > -1 ? value2.length - currentDecimalPlace - 1 : 0;
};
var changeBasedSelection = function(currentValue, nextValue, selectionPosition, isDelete, sanitizeRegex) {
  var isCurrentLeadingZero = currentValue.replace(sanitizeRegex, "")[0] === "0";
  var isNextLeadingZero = nextValue.replace(sanitizeRegex, "")[0] === "0";
  if (isCurrentLeadingZero && !isNextLeadingZero) {
    return selectionPosition - 1;
  }
  if (isNextLeadingZero && isDelete) {
    return selectionPosition + 1;
  }
  var numberCounter = 0;
  for (var idx = 0; idx < selectionPosition; idx++) {
    if (DIGITS_REGEX.test(currentValue.charAt(idx))) {
      numberCounter++;
    }
  }
  var newSelection = 0;
  while (numberCounter > 0 && nextValue.length > newSelection) {
    if (DIGITS_REGEX.test(nextValue.charAt(newSelection))) {
      numberCounter--;
    }
    newSelection++;
  }
  return newSelection;
};
var sanitizeNumber = function(state, format3, intlService) {
  var newState = __assign68({}, state);
  var prevLooseValue = newState.prevLooseValue;
  var symbols = intlService.numberSymbols();
  var restrictedSymbols = getFormatSymbols(format3, intlService);
  var currentLooseValueAsString = String(newState.currentLooseValue);
  var prevLooseValueAsString = String(prevLooseValue);
  var sanitizeRegex = new RegExp("[^\\d\\".concat(symbols.decimal, "]"), "g");
  var sanitizeGroupRegex = new RegExp("[^\\d\\".concat(symbols.decimal, "\\").concat(symbols.group, "]"), "g");
  var allSymbolsRegex = new RegExp("[\\d\\".concat(symbols.decimal, "\\").concat(symbols.group, "]"));
  var sanitizedString = currentLooseValueAsString.replace(sanitizeRegex, "");
  var numberStart = getFirstNumberIndex(currentLooseValueAsString, DIGITS_REGEX);
  var numberEnd = numberStart === -1 ? -1 : getLastNumberIndex(currentLooseValueAsString, DIGITS_REGEX);
  var decimalIndex = currentLooseValueAsString.indexOf(symbols.decimal);
  var sanitizedFormattedString = (currentLooseValueAsString.substring(0, numberStart) + currentLooseValueAsString.substring(numberStart, numberEnd).replace(sanitizeGroupRegex, "") + currentLooseValueAsString.substring(numberEnd, currentLooseValueAsString.length)).split("").filter(function(s) {
    return restrictedSymbols.indexOf(s) !== -1 || s.search(allSymbolsRegex) !== -1;
  }).join("");
  var formattedMax = intlService.formatNumber(MAX_DECIMAL, format3).replace(sanitizeRegex, "");
  var maxDecimalIndex = formattedMax.indexOf(symbols.decimal);
  var maxDecimalCount = maxDecimalIndex > -1 ? formattedMax.length - maxDecimalIndex - 1 : 0;
  var formattedMin = intlService.formatNumber(MIN_DECIMAL, format3).replace(sanitizeRegex, "");
  var minDecimalIndex = formattedMin.indexOf(symbols.decimal);
  var minDecimalCount = minDecimalIndex > -1 ? formattedMin.length - minDecimalIndex - 1 : 0;
  var _a14 = getFormatPrefixSufix(format3, intlService), positiveInfo = _a14.positiveInfo, negativeInfo = _a14.negativeInfo, zeroInfo = _a14.zeroInfo, oneInfo = _a14.oneInfo;
  var formatInfo = [positiveInfo, negativeInfo, zeroInfo, oneInfo];
  var isFormatContainPrefixSuffix = formatInfo.findIndex(function(info) {
    return info.findIndex(function(nestedInfo) {
      return Boolean(nestedInfo);
    }) !== -1;
  }) !== 1;
  var isDelete = currentLooseValueAsString.length > 0 && currentLooseValueAsString.length < prevLooseValueAsString.length;
  var isPercentFormat = typeof format3 === "string" && format3[0] === "p" && currentLooseValueAsString && currentLooseValueAsString.indexOf(symbols.percentSign) === -1;
  if (!newState.isPaste) {
    if (currentLooseValueAsString === "") {
      newState.eventValue = null;
      newState.currentLooseValue = "";
      return newState;
    }
    if (newState.currentLooseValue === symbols.minusSign && intlService.formatNumber(-0, format3) !== prevLooseValueAsString) {
      newState.eventValue = -0;
      newState.currentLooseValue = formatValue(newState.eventValue, format3, intlService);
      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols), newState.currentLooseValue, formatInfo);
      return newState;
    }
    if (isMinusSymbolAdded(newState, symbols)) {
      var nextValue = intlService.parseNumber(prevLooseValue, format3);
      newState.eventValue = -(nextValue !== null ? nextValue : 0);
      newState.currentLooseValue = formatValue(newState.eventValue, format3, intlService);
      var currentNumberStart = getFirstNumberIndex(newState.currentLooseValue, DIGITS_REGEX);
      var oldNumberStart = getFirstNumberIndex(prevLooseValueAsString, DIGITS_REGEX);
      setSelection(newState, newState.selectionEnd - 1 + (currentNumberStart - oldNumberStart), newState.currentLooseValue, formatInfo);
      return newState;
    }
    if (isMinusSymbolRemoved(newState, symbols)) {
      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
      setSelection(newState, newState.selectionStart, newState.currentLooseValue, formatInfo);
      return newState;
    }
    if (newState.currentLooseValue === symbols.decimal) {
      newState.eventValue = 0;
      var valueCandidate = formatValue(newState.eventValue, format3, intlService);
      if (minDecimalCount === 0 && maxDecimalCount > 0) {
        var currentLastNumberIndex = getLastNumberIndex(valueCandidate, DIGITS_REGEX);
        newState.currentLooseValue = valueCandidate.substring(0, currentLastNumberIndex) + symbols.decimal + valueCandidate.substring(currentLastNumberIndex);
      } else {
        newState.currentLooseValue = valueCandidate;
      }
      setSelection(newState, getInitialPosition(newState.currentLooseValue, symbols) + 1, newState.currentLooseValue, formatInfo);
      return newState;
    }
    if (isDecimalDuplicated(newState, symbols)) {
      setInvalid(newState, format3, formatInfo, intlService);
      return newState;
    }
    if (isPercentFormat) {
      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format3) / 100;
      newState.currentLooseValue = formatValue(newState.eventValue, format3, intlService);
      return newState;
    }
    var numericSymbols = String(newState.currentLooseValue).replace(/[^\d]/g, "");
    if (numericSymbols.length > MAX_PRECISION3) {
      setInvalid(newState, format3, formatInfo, intlService);
      return newState;
    }
    if (sanitizedString !== currentLooseValueAsString && currentLooseValueAsString && isFormatContainPrefixSuffix) {
      var formatInfoIndex = formatInfo.findIndex(function(_a15) {
        var prefix = _a15[0], suffix = _a15[1];
        var prefixIndex = currentLooseValueAsString.indexOf(prefix);
        var suffixIndex = currentLooseValueAsString.indexOf(suffix);
        var prefixFound = prefixIndex === 0;
        var suffixFound = suffixIndex === currentLooseValueAsString.length - suffix.length;
        var prefixGap = prefixIndex + prefix.length !== numberStart && numberStart !== -1 && currentLooseValueAsString[prefixIndex + prefix.length] !== symbols.decimal;
        var suffixGap = suffixIndex !== numberEnd && numberEnd !== -1 && currentLooseValueAsString[suffixIndex - 1] !== symbols.decimal;
        if (prefix && suffix) {
          if (prefixGap || suffixGap) {
            return false;
          }
          return prefixFound && suffixFound;
        }
        if (prefix) {
          if (prefixGap) {
            return false;
          }
          return prefixFound;
        }
        if (suffix) {
          if (suffixGap) {
            return false;
          }
          return suffixFound;
        }
        return false;
      });
      if (formatInfoIndex === -1) {
        setInvalid(newState, format3, formatInfo, intlService);
        return newState;
      }
    }
    if (sanitizedString[sanitizedString.length - 1] === symbols.decimal && maxDecimalCount > 0) {
      newState.eventValue = intlService.parseNumber(currentLooseValueAsString, format3);
      newState.currentLooseValue = sanitizedFormattedString;
      return newState;
    }
    if (newState.currentLooseValue && prevLooseValue) {
      var isSpecialSymbolDeleted = (restrictedSymbols + symbols.decimal + symbols.group).split("").findIndex(function(s) {
        if (currentLooseValueAsString.split("").filter(function(x) {
          return x === s;
        }).length < prevLooseValueAsString.split("").filter(function(x) {
          return x === s;
        }).length && currentLooseValueAsString.length + 1 === prevLooseValueAsString.length) {
          if (s === symbols.decimal && getDecimalCount(prevLooseValueAsString.replace(sanitizeRegex, ""), symbols.decimal) === 0) {
            return false;
          }
          return true;
        }
        return false;
      }) > -1;
      if (isSpecialSymbolDeleted) {
        newState.eventValue = intlService.parseNumber(state.prevLooseValue, format3);
        newState.currentLooseValue = state.prevLooseValue;
        return newState;
      }
    }
    var currentDecimalCount = getDecimalCount(sanitizedString, symbols.decimal);
    var endsOnDecimal = sanitizedString[sanitizedString.length - 1] === "0";
    if (isDelete && endsOnDecimal && currentDecimalCount < minDecimalCount) {
      newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
      newState.currentLooseValue = formatValue(newState.eventValue, format3, intlService);
      return newState;
    }
    if (currentDecimalCount > 0) {
      var valueUntillDecimal = currentLooseValueAsString.substring(0, decimalIndex);
      if (endsOnDecimal && (!valueUntillDecimal || prevLooseValueAsString.indexOf(valueUntillDecimal) !== 0)) {
        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
        var nextLooseValue = formatValue(newState.eventValue, format3, intlService);
        setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);
        newState.currentLooseValue = nextLooseValue;
        return newState;
      }
      if (currentDecimalCount > maxDecimalCount) {
        var looseDecimalPlace = currentLooseValueAsString.indexOf(symbols.decimal);
        var result = currentLooseValueAsString.substring(0, looseDecimalPlace) + currentLooseValueAsString.substring(looseDecimalPlace, looseDecimalPlace + 1 + maxDecimalCount) + currentLooseValueAsString.substring(numberEnd, String(newState.currentLooseValue).length);
        newState.eventValue = intlService.parseNumber(result, format3);
        newState.currentLooseValue = result;
        setSelection(newState, newState.selectionStart, result, formatInfo);
        return newState;
      }
      if (minDecimalCount !== maxDecimalCount && currentDecimalCount <= maxDecimalCount && endsOnDecimal) {
        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
        newState.currentLooseValue = sanitizedFormattedString;
        return newState;
      }
      if (currentDecimalCount < minDecimalCount) {
        newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
        newState.currentLooseValue = formatValue(newState.eventValue, format3, intlService);
        return newState;
      }
    }
  }
  newState.eventValue = intlService.parseNumber(newState.currentLooseValue, format3);
  if (isPercentFormat) {
    newState.eventValue = newState.eventValue / 100;
  }
  if (typeof newState.eventValue === "number") {
    var nextLooseValue = formatValue(newState.eventValue, format3, intlService);
    if (currentLooseValueAsString.length === 1) {
      setSelection(newState, getInitialPosition(nextLooseValue, symbols), nextLooseValue, formatInfo);
    } else {
      setSelection(newState, changeBasedSelection(currentLooseValueAsString, nextLooseValue, newState.selectionEnd, isDelete, sanitizeRegex), nextLooseValue, formatInfo);
    }
    newState.currentLooseValue = nextLooseValue;
  } else {
    newState.currentLooseValue = formatValue(intlService.parseNumber(sanitizedString), format3, intlService);
  }
  return newState;
};

// node_modules/@progress/kendo-react-inputs/dist/es/numerictextbox/NumericTextBox.js
var React138 = __toESM(require_react());
var PropTypes62 = __toESM(require_prop_types());
var __assign69 = function() {
  __assign69 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign69.apply(this, arguments);
};
var VALIDATION_MESSAGE2 = "Please enter a valid value!";
var NumericTextBoxPropsContext = createPropsContext();
var NumericTextBox = React138.forwardRef(function(directProps, target) {
  var _a14;
  validatePackage2(packageMetadata11);
  var props = usePropsContext(NumericTextBoxPropsContext, directProps);
  var calculatedId = React138.useMemo(function() {
    return guid();
  }, []);
  var inputId = props.id || calculatedId;
  var intlService = useInternationalization();
  var localizationService = useLocalization();
  var elementRef = React138.useRef(null);
  var valueDuringChangeRef = React138.useRef();
  var _b3 = React138.useState(false), forceUpdate = _b3[0], setForceUpdate = _b3[1];
  var stateRef = React138.useRef(getInitialState());
  var isPasteRef = React138.useRef(false);
  var prevLooseValueRef = React138.useRef();
  var stateValueRef = React138.useRef(props.defaultValue);
  var looseValue = formatValue(stateRef.current.focused && !props.disabled ? stateRef.current.currentLooseValue : getStateOrPropsValue(props.value, stateValueRef.current), props.format, intlService);
  prevLooseValueRef.current = looseValue;
  var Prefix = useCustomComponent(props.prefix)[0];
  var Suffix = useCustomComponent(props.suffix)[0];
  React138.useEffect(function() {
    if (elementRef.current && elementRef.current.setCustomValidity) {
      elementRef.current.setCustomValidity(validityGetter().valid ? "" : props.validationMessage || VALIDATION_MESSAGE2);
    }
  });
  var focusElement = React138.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var valueGetter = React138.useCallback(function() {
    if (valueDuringChangeRef.current !== void 0) {
      return valueDuringChangeRef.current;
    } else {
      return getStateOrPropsValue(props.value, stateValueRef.current);
    }
  }, [props.value]);
  var nameGetter = React138.useCallback(function() {
    return props.name;
  }, [props.name]);
  var requiredGetter = React138.useCallback(function() {
    return props.required;
  }, [props.required]);
  var validityGetter = React138.useCallback(function() {
    var customError = props.validationMessage !== void 0;
    var currentValue = valueGetter();
    var valid = props.valid !== void 0 ? props.valid : !stateRef.current.valueIsOutOfRange && (!requiredGetter() || currentValue !== null && currentValue !== void 0);
    return {
      customError,
      valid,
      valueMissing: currentValue === null || currentValue === void 0
    };
  }, [props.validationMessage, props.valid, valueGetter, requiredGetter]);
  var validityStylesGetter = React138.useCallback(function() {
    return props.validityStyles;
  }, [props.validityStyles]);
  var propsGetter = React138.useCallback(function() {
    return props;
  }, [props]);
  var getImperativeHandle = React138.useCallback(function() {
    var options2 = {
      element: elementRef.current,
      focus: focusElement
    };
    Object.defineProperty(options2, "name", { get: nameGetter });
    Object.defineProperty(options2, "value", { get: valueGetter });
    Object.defineProperty(options2, "validity", { get: validityGetter });
    Object.defineProperty(options2, "validityStyles", { get: validityStylesGetter });
    Object.defineProperty(options2, "required", { get: requiredGetter });
    Object.defineProperty(options2, "props", { get: propsGetter });
    return options2;
  }, [nameGetter, valueGetter, validityGetter, validityStylesGetter, requiredGetter, focusElement, propsGetter]);
  React138.useImperativeHandle(target, getImperativeHandle);
  var getCurrentState = React138.useCallback(function() {
    return {
      eventValue: getStateOrPropsValue(props.value, stateValueRef.current),
      prevLooseValue: prevLooseValueRef.current,
      currentLooseValue: elementRef.current.value,
      selectionStart: elementRef.current.selectionStart,
      selectionEnd: elementRef.current.selectionEnd,
      decimalSelect: false,
      valueIsCorrected: false,
      valueIsOutOfRange: false,
      isPaste: isPasteRef.current,
      focused: stateRef.current.focused
    };
  }, [props.value]);
  var triggerChange = React138.useCallback(function(event2, newState) {
    if (props.disabled) {
      return;
    }
    valueDuringChangeRef.current = newState.eventValue;
    stateValueRef.current = newState.eventValue;
    var formattedValue = formatValue(rangeValue(newState.eventValue, props.min, props.max), props.format, intlService);
    var rangedValue = rangeValue(intlService.parseNumber(formattedValue, props.format), props.min, props.max);
    if (rangedValue !== newState.eventValue) {
      newState.valueIsOutOfRange = true;
      newState.eventValue = rangedValue;
      stateValueRef.current = rangedValue;
    }
    var shouldFireEvent = props.value !== newState.eventValue;
    if (shouldFireEvent) {
      dispatchEvent(props.onChange, event2, getImperativeHandle(), { value: newState.eventValue });
    }
    valueDuringChangeRef.current = void 0;
    stateRef.current = newState;
    setForceUpdate(function(_x) {
      return !_x;
    });
  }, [props.value, props.onChange, props.disabled, setForceUpdate, getImperativeHandle]);
  var onChangeHandler = React138.useCallback(function(event2) {
    var stateCandidate = getCurrentState();
    isPasteRef.current = false;
    triggerChange(event2, sanitizeNumber(stateCandidate, props.format, intlService));
  }, [props.format, props.onChange, intlService, triggerChange, getCurrentState]);
  var onKeyDown = React138.useCallback(function(event2) {
    var newState = getCurrentState();
    var currentValue = intlService.parseNumber(String(newState.currentLooseValue), props.format);
    if (newState.selectionEnd > newState.selectionStart && newState.selectionEnd - newState.selectionStart === String(newState.currentLooseValue).length) {
      isPasteRef.current = true;
      return;
    }
    switch (event2.keyCode) {
      case 38:
        increaseValue2(currentValue, newState, props.step, props.min, props.max, props.format, intlService);
        break;
      case 40:
        decreaseValue2(currentValue, newState, props.step, props.min, props.max, props.format, intlService);
        break;
      case 13:
        if (props.rangeOnEnter === false) {
          return;
        }
        var formattedValue = formatValue(rangeValue(currentValue, props.min, props.max), props.format, intlService);
        var rangedValue = rangeValue(intlService.parseNumber(formattedValue, props.format), props.min, props.max);
        newState.eventValue = rangedValue;
        newState.currentLooseValue = formatValue(rangedValue, props.format, intlService);
        newState.selectionStart = newState.selectionEnd = newState.currentLooseValue.length;
        break;
      case 110:
        var element6 = elementRef.current;
        var symbols = intlService.numberSymbols();
        if (element6) {
          newState.currentLooseValue = newState.currentLooseValue.slice(0, newState.selectionStart) + symbols.decimal + newState.currentLooseValue.slice(newState.selectionEnd);
          newState.selectionStart = newState.selectionEnd = newState.selectionStart + 1;
          newState = sanitizeNumber(newState, props.format, intlService);
        }
        break;
      default:
        return;
    }
    event2.preventDefault();
    triggerChange(event2, newState);
  }, [props.format, props.min, props.max, props.step, props.onChange, props.rangeOnEnter, triggerChange, getCurrentState]);
  var onPasteHandler = React138.useCallback(function() {
    isPasteRef.current = true;
  }, []);
  var onIncrease = React138.useCallback(function(event2) {
    if (props.readOnly || props.disabled) {
      return;
    }
    var newState = getCurrentState();
    increaseValue2(intlService.parseNumber(String(newState.currentLooseValue), props.format), newState, props.step, props.min, props.max, props.format, intlService);
    triggerChange(event2, newState);
  }, [props.format, props.min, props.max, props.step, props.onChange, props.readOnly, props.disabled, triggerChange, getCurrentState]);
  var onDecrease = React138.useCallback(function(event2) {
    if (props.readOnly || props.disabled) {
      return;
    }
    var newState = getCurrentState();
    decreaseValue2(intlService.parseNumber(String(newState.currentLooseValue), props.format), newState, props.step, props.min, props.max, props.format, intlService);
    triggerChange(event2, newState);
  }, [props.format, props.min, props.max, props.step, props.onChange, props.readOnly, props.disabled, triggerChange, getCurrentState]);
  var onWheelHandler = React138.useCallback(function(event2) {
    var activeElement = getActiveElement(document);
    if (!document || activeElement !== elementRef.current || !elementRef.current || props.readOnly || props.disabled) {
      return;
    }
    if (event2.nativeEvent.deltaY < 0) {
      onIncrease(event2);
    }
    if (event2.nativeEvent.deltaY > 0) {
      onDecrease(event2);
    }
  }, [onIncrease, onDecrease, props.disabled, props.readOnly]);
  var onFocus = React138.useCallback(function(event2) {
    stateRef.current.currentLooseValue = prevLooseValueRef.current;
    stateRef.current.focused = true;
    dispatchEvent(props.onFocus, event2, getImperativeHandle(), {});
    setForceUpdate(function(x) {
      return !x;
    });
  }, [props.onFocus, setForceUpdate, getImperativeHandle]);
  var onBlur = React138.useCallback(function(event2) {
    stateRef.current = getInitialState();
    dispatchEvent(props.onBlur, event2, getImperativeHandle(), {});
    setForceUpdate(function(x) {
      return !x;
    });
  }, [props.onBlur, setForceUpdate, getImperativeHandle]);
  var onMouseDown = React138.useCallback(function(e) {
    if (document && elementRef.current) {
      var activeElement = getActiveElement(document);
      e.preventDefault();
      if (activeElement !== elementRef.current) {
        elementRef.current.focus();
      }
    }
  }, []);
  React138.useLayoutEffect(function() {
    if (elementRef.current && elementRef.current.type !== "number" && stateRef.current.selectionStart !== void 0 && stateRef.current.selectionEnd !== void 0) {
      elementRef.current.selectionStart = stateRef.current.selectionStart;
      elementRef.current.selectionEnd = stateRef.current.selectionEnd;
      stateRef.current.selectionStart = void 0;
      stateRef.current.selectionEnd = void 0;
    }
  }, [forceUpdate]);
  var isValid = !validityStylesGetter() || validityGetter().valid;
  var numerictextbox = React138.createElement(
    "span",
    { dir: props.dir, style: !props.label ? __assign69({ width: props.width }, props.style) : props.style, className: classNames("k-input", "k-numerictextbox", (_a14 = {}, _a14["k-input-".concat(kendoThemeMaps.sizeMap[props.size] || props.size)] = props.size, _a14["k-input-".concat(props.fillMode)] = props.fillMode, _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[props.rounded] || props.rounded)] = props.rounded, _a14["k-invalid"] = !isValid, _a14["k-required"] = props.required, _a14["k-disabled"] = props.disabled, _a14), props.className), "aria-disabled": props.disabled ? "true" : void 0 },
    React138.createElement(Prefix, null),
    React138.createElement("input", { role: "spinbutton", value: looseValue === null ? "" : looseValue, tabIndex: getTabIndex(props.tabIndex, props.disabled), accessKey: props.accessKey, disabled: props.disabled, title: props.title, "aria-disabled": props.disabled ? "true" : void 0, "aria-valuemin": props.min, "aria-valuemax": props.max, "aria-label": props.ariaLabel, "aria-labelledby": props.ariaLabelledBy, "aria-describedby": props.ariaDescribedBy, placeholder: props.placeholder, spellCheck: false, autoComplete: "off", autoCorrect: "off", type: props.inputType || "tel", className: "k-input-inner", id: inputId, name: props.name, readOnly: props.readOnly, style: props.inputStyle, onChange: onChangeHandler, onFocus, onBlur, onKeyDown, onPaste: onPasteHandler, onWheel: onWheelHandler, ref: elementRef }),
    React138.createElement(Suffix, null),
    props.children,
    props.spinners && React138.createElement(
      "span",
      { className: "k-input-spinner k-spin-button", onMouseDown },
      React138.createElement(Button, { tabIndex: -1, type: "button", icon: "caret-alt-up", svgIcon: caretAltUpIcon, rounded: null, className: "k-spinner-increase", "aria-label": localizationService.toLanguageString(numericIncreaseValue, messages6[numericIncreaseValue]), title: localizationService.toLanguageString(numericIncreaseValue, messages6[numericIncreaseValue]), onClick: onIncrease }),
      React138.createElement(Button, { tabIndex: -1, type: "button", icon: "caret-alt-down", svgIcon: caretAltDownIcon, rounded: null, className: "k-spinner-decrease", "aria-label": localizationService.toLanguageString(numericDecreaseValue, messages6[numericDecreaseValue]), title: localizationService.toLanguageString(numericDecreaseValue, messages6[numericDecreaseValue]), onClick: onDecrease })
    )
  );
  return props.label ? React138.createElement(FloatingLabel, { label: props.label, editorId: inputId, editorValue: looseValue === null ? "" : looseValue, editorValid: isValid, editorDisabled: props.disabled, editorPlaceholder: props.placeholder, children: numerictextbox, style: { width: props.width }, dir: props.dir }) : numerictextbox;
});
NumericTextBox.propTypes = {
  value: PropTypes62.number,
  defaultValue: PropTypes62.number,
  step: PropTypes62.number,
  format: PropTypes62.oneOfType([
    PropTypes62.string,
    PropTypes62.shape({
      style: PropTypes62.oneOf(["decimal", "currency", "percent", "scientific", "accounting"]),
      currency: PropTypes62.string,
      currencyDisplay: PropTypes62.oneOf(["symbol", "code", "name"]),
      useGrouping: PropTypes62.bool,
      minimumIntegerDigits: PropTypes62.number,
      minimumFractionDigits: PropTypes62.number,
      maximumFractionDigits: PropTypes62.number
    })
  ]),
  width: PropTypes62.oneOfType([
    PropTypes62.string,
    PropTypes62.number
  ]),
  tabIndex: PropTypes62.number,
  accessKey: PropTypes62.string,
  title: PropTypes62.string,
  placeholder: PropTypes62.string,
  min: PropTypes62.number,
  max: PropTypes62.number,
  spinners: PropTypes62.bool,
  disabled: PropTypes62.bool,
  readOnly: PropTypes62.bool,
  dir: PropTypes62.string,
  name: PropTypes62.string,
  label: PropTypes62.string,
  validationMessage: PropTypes62.string,
  required: PropTypes62.bool,
  id: PropTypes62.string,
  rangeOnEnter: PropTypes62.bool,
  ariaLabelledBy: PropTypes62.string,
  ariaDescribedBy: PropTypes62.string,
  ariaLabel: PropTypes62.string,
  onChange: PropTypes62.func,
  onFocus: PropTypes62.func,
  onBlur: PropTypes62.func,
  size: PropTypes62.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes62.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes62.oneOf([null, "solid", "flat", "outline"])
};
NumericTextBox.displayName = "KendoNumericTextBox";
NumericTextBox.defaultProps = {
  prefix: function(_2) {
    return null;
  },
  suffix: function(_2) {
    return null;
  },
  step: 1,
  spinners: true,
  disabled: false,
  required: false,
  validityStyles: true,
  rangeOnEnter: true,
  onChange: function(_2) {
    return;
  },
  onFocus: function(_2) {
    return;
  },
  onBlur: function(_2) {
    return;
  },
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};

// node_modules/@progress/kendo-react-inputs/dist/es/checkbox/Checkbox.js
var React139 = __toESM(require_react());
var PropTypes63 = __toESM(require_prop_types());
var __assign70 = function() {
  __assign70 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign70.apply(this, arguments);
};
var __rest33 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var CheckboxPropsContext = createPropsContext();
var Checkbox = React139.forwardRef(function(directProps, target) {
  var _a14;
  validatePackage2(packageMetadata11);
  var props = usePropsContext(CheckboxPropsContext, directProps);
  var _b3 = props, ariaDescribedBy = _b3.ariaDescribedBy, ariaLabelledBy = _b3.ariaLabelledBy, checked = _b3.checked, className = _b3.className, children2 = _b3.children, defaultChecked = _b3.defaultChecked, disabled = _b3.disabled, defaultValue2 = _b3.defaultValue, id = _b3.id, size = _b3.size, rounded = _b3.rounded, label = _b3.label, labelPlacement = _b3.labelPlacement, name2 = _b3.name, labelOptional = _b3.labelOptional, onChange = _b3.onChange, onFocus = _b3.onFocus, onBlur = _b3.onBlur, tabIndex = _b3.tabIndex, value2 = _b3.value, required = _b3.required, valid = _b3.valid, validationMessage = _b3.validationMessage, validityStyles = _b3.validityStyles, visited = _b3.visited, touched = _b3.touched, modified = _b3.modified, others = __rest33(_b3, ["ariaDescribedBy", "ariaLabelledBy", "checked", "className", "children", "defaultChecked", "disabled", "defaultValue", "id", "size", "rounded", "label", "labelPlacement", "name", "labelOptional", "onChange", "onFocus", "onBlur", "tabIndex", "value", "required", "valid", "validationMessage", "validityStyles", "visited", "touched", "modified"]);
  var elementRef = React139.useRef(null);
  var focusElement = React139.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React139.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement,
      get name() {
        return elementRef.current && elementRef.current.name;
      }
    };
  }, [focusElement]);
  React139.useImperativeHandle(target, getImperativeHandle);
  var _c2 = React139.useState(defaultChecked), stateChecked = _c2[0], setStateChecked = _c2[1];
  var _d = React139.useState(defaultValue2), stateValue = _d[0], setStateValue = _d[1];
  var valueIsBoolean = typeof value2 === "boolean" || value2 === null;
  var isCheckedControlled = checked !== void 0;
  var isValueControlled = valueIsBoolean;
  var currentValue = isValueControlled ? value2 : stateValue;
  var currentChecked = isCheckedControlled ? checked : isValueControlled ? void 0 : stateChecked;
  var useValueAsChecked = currentChecked === void 0 && currentValue;
  var checkedProp = useValueAsChecked ? currentValue : currentChecked;
  var valueProp = useValueAsChecked || isValueControlled ? value2 === null ? value2 : void 0 : value2 || currentValue;
  var indeterminateProp = checkedProp === null || valueProp === null;
  var calculatedId = React139.useMemo(function() {
    return guid();
  }, []);
  var localizationService = useLocalization();
  var localizeMessage = function(message) {
    return localizationService.toLanguageString(message, messages6[message]);
  };
  var defaultValidationMessage = localizeMessage(checkboxValidation);
  var optionalMessage = localizeMessage(checkboxOptionalText);
  var isValid = valid !== void 0 ? valid : !required ? true : currentChecked ? true : false;
  React139.useEffect(function() {
    if (elementRef.current && elementRef.current.setCustomValidity) {
      elementRef.current.setCustomValidity(isValid ? "" : validationMessage || defaultValidationMessage);
    }
  }, [isValid, validationMessage, defaultValidationMessage]);
  var setValue = React139.useCallback(function(e, val) {
    if (!isValueControlled && !disabled) {
      setStateValue(val);
      if (!isCheckedControlled && !disabled) {
        setStateChecked(val);
      }
    }
    if (onChange && !disabled) {
      dispatchEvent(onChange, e, __assign70(__assign70({}, getImperativeHandle()), { value: val }), { value: val });
    }
  }, [isCheckedControlled, disabled, onChange, isValueControlled, getImperativeHandle]);
  var handleChange = React139.useCallback(function(e) {
    var newValue = e.target.checked;
    setValue(e, newValue);
  }, [setValue, value2]);
  var handleKeyDown = React139.useCallback(function(e) {
    if (disabled) {
      return;
    }
    var keyCode = e.keyCode;
    var currentVal = e.currentTarget.checked;
    if (keyCode === Keys.space) {
      e.preventDefault();
      e.stopPropagation();
      setValue(e, !currentVal);
    }
  }, [disabled, setValue]);
  var handleKeyUp = React139.useCallback(function(e) {
    if (disabled) {
      return;
    }
    var keyCode = e.keyCode;
    if (keyCode === Keys.space) {
      e.preventDefault();
    }
  }, [disabled]);
  var handleFocus = React139.useCallback(function(e) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, e, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled, getImperativeHandle]);
  var handleBlur = React139.useCallback(function(e) {
    if (onBlur && !disabled) {
      dispatchEvent(onBlur, e, getImperativeHandle(), void 0);
    }
  }, [onBlur, disabled, getImperativeHandle]);
  var dir = useDir(elementRef, props.dir);
  var checkboxClasses = classNames("k-checkbox-wrap", className);
  var inputProps = __assign70(__assign70({ type: "checkbox", className: classNames("k-checkbox", (_a14 = {}, _a14["k-checkbox-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a14["k-indeterminate"] = indeterminateProp, _a14["k-disabled"] = disabled, _a14["k-invalid k-invalid"] = !(isValid || validityStyles !== void 0 || validityStyles === true), _a14)), ref: elementRef, name: name2, id: id || calculatedId, "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy, checked: Boolean(checkedProp), disabled, tabIndex: getTabIndex(tabIndex, disabled), role: "checkbox", required: required !== void 0 ? required : false, "aria-checked": currentChecked || checkedProp ? true : indeterminateProp ? "mixed" : false, "aria-disabled": disabled || void 0 }, others), { onChange: handleChange, onKeyDown: handleKeyDown, onKeyUp: handleKeyUp, onFocus: handleFocus, onBlur: handleBlur });
  var checkboxInput = React139.createElement(
    React139.Fragment,
    null,
    // removing value prop is required due to bug in react where
    // value set to undefined override default submit value
    valueProp === void 0 ? React139.createElement("input", __assign70({}, inputProps)) : React139.createElement("input", __assign70({}, inputProps, { value: valueIsBoolean ? void 0 : valueProp === null ? "" : valueProp }))
  );
  var checkboxLabel = React139.createElement(React139.Fragment, null, label !== void 0 ? React139.createElement(
    "label",
    { className: "k-checkbox-label", htmlFor: id || calculatedId, style: { userSelect: "none" } },
    label,
    labelOptional && React139.createElement("span", { className: "k-label-optional" }, optionalMessage)
  ) : null);
  return React139.createElement(React139.Fragment, null, labelPlacement === "before" ? React139.createElement(
    "span",
    { className: checkboxClasses, dir: "rtl" },
    checkboxInput,
    checkboxLabel,
    children2
  ) : React139.createElement(
    "span",
    { className: checkboxClasses, dir },
    checkboxInput,
    checkboxLabel,
    children2
  ));
});
Checkbox.propTypes = {
  checked: PropTypes63.bool,
  className: PropTypes63.string,
  defaultChecked: PropTypes63.bool,
  defaultValue: PropTypes63.any,
  dir: PropTypes63.string,
  disabled: PropTypes63.bool,
  id: PropTypes63.string,
  size: PropTypes63.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes63.oneOf([null, "small", "medium", "large"]),
  ariaLabelledBy: PropTypes63.string,
  ariaDescribedBy: PropTypes63.string,
  label: PropTypes63.any,
  labelPlacement: PropTypes63.string,
  labelOptional: PropTypes63.bool,
  name: PropTypes63.string,
  tabIndex: PropTypes63.number,
  value: PropTypes63.any,
  validationMessage: PropTypes63.string,
  required: PropTypes63.bool,
  validate: PropTypes63.bool,
  valid: PropTypes63.bool,
  onChange: PropTypes63.func,
  onFocus: PropTypes63.func,
  onBlur: PropTypes63.func
};
var defaultProps13 = {
  size: "medium",
  rounded: "medium"
};
Checkbox.defaultProps = defaultProps13;
Checkbox.displayName = "KendoCheckbox";

// node_modules/@progress/kendo-react-inputs/dist/es/radiobutton/RadioButton.js
var React140 = __toESM(require_react());
var PropTypes64 = __toESM(require_prop_types());
var __assign71 = function() {
  __assign71 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign71.apply(this, arguments);
};
var __rest34 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RadioButtonPropsContext = createPropsContext();
var RadioButton = React140.forwardRef(function(directProps, target) {
  var _a14;
  validatePackage2(packageMetadata11);
  var props = usePropsContext(RadioButtonPropsContext, directProps);
  var ariaDescribedBy = props.ariaDescribedBy, checked = props.checked, children2 = props.children, className = props.className, disabled = props.disabled, id = props.id, size = props.size, label = props.label, labelPlacement = props.labelPlacement, name2 = props.name, style = props.style, tabIndex = props.tabIndex, value2 = props.value, valid = props.valid, onChange = props.onChange, onFocus = props.onFocus, onBlur = props.onBlur, others = __rest34(props, ["ariaDescribedBy", "checked", "children", "className", "disabled", "id", "size", "label", "labelPlacement", "name", "style", "tabIndex", "value", "valid", "onChange", "onFocus", "onBlur"]);
  var elementRef = React140.useRef(null);
  var focusElement = React140.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var getImperativeHandle = React140.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React140.useImperativeHandle(target, getImperativeHandle);
  var calculatedId = React140.useMemo(function() {
    return guid();
  }, []);
  var handleChange = React140.useCallback(function(event2) {
    dispatchEvent(onChange, event2, getImperativeHandle(), { value: value2 });
  }, [onChange, value2, disabled]);
  var handleFocus = React140.useCallback(function(event2) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, event2, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled]);
  var handleBlur = React140.useCallback(function(event2) {
    if (onBlur && !disabled) {
      dispatchEvent(onBlur, event2, getImperativeHandle(), void 0);
    }
  }, [onBlur, disabled]);
  var inputProps = __assign71({ type: "radio", id: id || calculatedId, name: name2, className: classNames("k-radio", (_a14 = {}, _a14["k-radio-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-invalid"] = valid === false, _a14), className), ref: elementRef, disabled, tabIndex: getTabIndex(tabIndex, disabled), checked, style, "aria-describedby": ariaDescribedBy, value: value2, onChange: handleChange, onFocus: handleFocus, onBlur: handleBlur }, others);
  var radioButtonLabel = React140.createElement(React140.Fragment, null, label !== void 0 ? React140.createElement("label", { className: "k-radio-label", htmlFor: id || calculatedId, style: { userSelect: "none" }, "aria-label": label }, label) : null);
  var radio = React140.createElement("input", __assign71({}, inputProps));
  return labelPlacement === "before" ? React140.createElement(
    React140.Fragment,
    null,
    radioButtonLabel,
    radio,
    children2
  ) : React140.createElement(
    React140.Fragment,
    null,
    radio,
    radioButtonLabel,
    children2
  );
});
RadioButton.propTypes = {
  ariaDescribedBy: PropTypes64.string,
  checked: PropTypes64.bool,
  className: PropTypes64.string,
  disabled: PropTypes64.bool,
  id: PropTypes64.string,
  size: PropTypes64.oneOf([null, "small", "medium", "large"]),
  label: PropTypes64.string,
  labelPlacement: PropTypes64.string,
  name: PropTypes64.string,
  style: PropTypes64.object,
  tabIndex: PropTypes64.number,
  value: PropTypes64.any,
  valid: PropTypes64.bool,
  onChange: PropTypes64.func,
  onFocus: PropTypes64.func,
  onBlur: PropTypes64.func
};
var defaultProps14 = {
  size: "medium"
};
RadioButton.displayName = "KendoRadioButton";
RadioButton.defaultProps = defaultProps14;

// node_modules/@progress/kendo-react-inputs/dist/es/radiobutton/RadioGroup.js
var React141 = __toESM(require_react());
var PropTypes65 = __toESM(require_prop_types());
var __assign72 = function() {
  __assign72 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign72.apply(this, arguments);
};
var RadioGroupPropsContext = createPropsContext();
var RadioGroup = React141.forwardRef(function(directProps, target) {
  validatePackage2(packageMetadata11);
  var props = usePropsContext(RadioGroupPropsContext, directProps);
  var ariaLabelledBy = props.ariaLabelledBy, ariaDescribedBy = props.ariaDescribedBy, className = props.className, data2 = props.data, defaultValue2 = props.defaultValue, disabled = props.disabled, name2 = props.name, labelPlacement = props.labelPlacement, layout = props.layout, style = props.style, value2 = props.value, valid = props.valid, _a14 = props.item, Item = _a14 === void 0 ? defaultProps15.item : _a14, onChange = props.onChange, onFocus = props.onFocus;
  var elementRef = React141.useRef(null);
  var focusElement = React141.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React141.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React141.useImperativeHandle(target, getImperativeHandle);
  var _b3 = React141.useState(defaultValue2), stateChecked = _b3[0], setStateChecked = _b3[1];
  var isControlled = value2 !== void 0;
  var checkedRadioValue = isControlled ? value2 : stateChecked;
  var handleChange = React141.useCallback(function(event2) {
    var currentValue = event2.value;
    if (!isControlled && !disabled) {
      setStateChecked(currentValue);
    }
    if (onChange && !disabled) {
      dispatchEvent(onChange, event2.syntheticEvent, getImperativeHandle(), { value: currentValue });
    }
  }, [setStateChecked, onChange, disabled]);
  var handleFocus = React141.useCallback(function(event2) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, event2.syntheticEvent, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled]);
  var radioGroupName = React141.useMemo(function() {
    return guid();
  }, []);
  var radioGroupClasses = classNames("k-radio-list", {
    "k-list-horizontal": layout === "horizontal",
    "k-list-vertical": layout === "vertical" || layout === void 0
  }, className);
  var dir = useRtl(elementRef, props.dir);
  var radioOptions = data2 && data2.map(function(option, index) {
    var isCurrentlyChecked = checkedRadioValue === option.value;
    var noOptionChecked = checkedRadioValue === null || checkedRadioValue === void 0;
    var radioButtonProps = __assign72(__assign72({}, option), { valid, checked: isCurrentlyChecked, disabled: option.disabled || disabled ? true : false, labelPlacement: option.labelPlacement ? option.labelPlacement : labelPlacement, tabIndex: option.tabIndex ? option.tabIndex : noOptionChecked && index === 0 || isCurrentlyChecked ? 0 : -1, index, name: name2 || radioGroupName, onChange: handleChange, onFocus: handleFocus });
    return React141.createElement(
      Item,
      { className: classNames("k-radio-item", { "k-disabled": radioButtonProps.disabled || disabled }), key: index, role: "none" },
      React141.createElement(RadioButton, __assign72({}, radioButtonProps))
    );
  });
  return React141.createElement("ul", { role: "radiogroup", className: radioGroupClasses, ref: elementRef, dir, style, "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy }, radioOptions);
});
var defaultProps15 = {
  item: function(props) {
    return React141.createElement("li", __assign72({}, props));
  }
};
RadioGroup.propTypes = {
  ariaLabelledBy: PropTypes65.string,
  ariaDescribedBy: PropTypes65.string,
  className: PropTypes65.string,
  data: PropTypes65.arrayOf(PropTypes65.object),
  defaultValue: PropTypes65.any,
  dir: PropTypes65.string,
  disabled: PropTypes65.bool,
  labelPlacement: PropTypes65.string,
  layout: PropTypes65.string,
  name: PropTypes65.string,
  style: PropTypes65.object,
  value: PropTypes65.any,
  onChange: PropTypes65.func,
  onFocus: PropTypes65.func
};
RadioGroup.defaultProps = defaultProps15;
RadioGroup.displayName = "KendoRadioGroup";

// node_modules/@progress/kendo-react-inputs/dist/es/textarea/TextArea.js
var React142 = __toESM(require_react());
var PropTypes66 = __toESM(require_prop_types());
var __assign73 = function() {
  __assign73 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign73.apply(this, arguments);
};
var __rest35 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TextAreaPropsContext = createPropsContext();
var TextArea = React142.forwardRef(function(directProps, target) {
  var _a14;
  var props = usePropsContext(TextAreaPropsContext, directProps);
  var _b3 = props, size = _b3.size, rounded = _b3.rounded, fillMode = _b3.fillMode, ariaDescribedBy = _b3.ariaDescribedBy, ariaLabelledBy = _b3.ariaLabelledBy, autoSize = _b3.autoSize, className = _b3.className, defaultValue2 = _b3.defaultValue, disabled = _b3.disabled, readOnly = _b3.readOnly, required = _b3.required, rows = _b3.rows, id = _b3.id, name2 = _b3.name, placeholder = _b3.placeholder, style = _b3.style, tabIndex = _b3.tabIndex, value2 = _b3.value, valid = _b3.valid, validationMessage = _b3.validationMessage, validityStyles = _b3.validityStyles, onChange = _b3.onChange, onFocus = _b3.onFocus, onBlur = _b3.onBlur, visited = _b3.visited, touched = _b3.touched, modified = _b3.modified, others = __rest35(_b3, ["size", "rounded", "fillMode", "ariaDescribedBy", "ariaLabelledBy", "autoSize", "className", "defaultValue", "disabled", "readOnly", "required", "rows", "id", "name", "placeholder", "style", "tabIndex", "value", "valid", "validationMessage", "validityStyles", "onChange", "onFocus", "onBlur", "visited", "touched", "modified"]);
  var elementRef = React142.useRef(null);
  var focusElement = React142.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var _c2 = React142.useState(defaultValue2), stateValue = _c2[0], setStateValue = _c2[1];
  var isControlled = value2 !== void 0;
  var currentValue = isControlled ? value2 : stateValue;
  var getImperativeHandle = React142.useCallback(function() {
    return {
      element: elementRef,
      focus: focusElement,
      get value() {
        return currentValue;
      },
      get name() {
        return elementRef.current && elementRef.current.name;
      }
    };
  }, [focusElement, currentValue]);
  React142.useImperativeHandle(target, getImperativeHandle);
  var _d = React142.useState("auto"), textAreaHeight = _d[0], setTextAreaHeight = _d[1];
  var calculatedId = React142.useMemo(function() {
    return guid();
  }, []);
  var dir = useDir(elementRef, props.dir);
  var isValid = valid !== void 0 ? valid : !required ? true : currentValue ? true : false;
  React142.useEffect(function() {
    if (elementRef.current && elementRef.current.setCustomValidity) {
      elementRef.current.setCustomValidity(isValid ? "" : validationMessage || "");
    }
  }, [isValid, validationMessage]);
  React142.useLayoutEffect(function() {
    if (elementRef.current) {
      setTextAreaHeight("".concat(elementRef.current.scrollHeight, "px"));
    }
  }, [currentValue]);
  var handleChange = React142.useCallback(function(event2) {
    var newValue = event2.target.value;
    setTextAreaHeight("auto");
    if (!isControlled && !disabled) {
      setStateValue(newValue);
    }
    if (onChange && !disabled) {
      dispatchEvent(onChange, event2, __assign73(__assign73({}, getImperativeHandle()), { value: newValue }), { value: newValue });
    }
  }, [setStateValue, onChange, disabled, isControlled]);
  var handleFocus = React142.useCallback(function(event2) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, event2, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled]);
  var handleBlur = React142.useCallback(function(event2) {
    if (onBlur && !disabled) {
      dispatchEvent(onBlur, event2, getImperativeHandle(), void 0);
    }
  }, [onBlur, disabled]);
  var textAreaProps = __assign73(__assign73({ id: id || calculatedId, role: "textbox", name: name2, className: "k-input-inner !k-overflow-auto", ref: elementRef, disabled, rows, placeholder, readOnly, required, tabIndex: getTabIndex(tabIndex, disabled), style: autoSize ? { resize: "none", overflow: "hidden", height: textAreaHeight } : {}, "aria-labelledby": ariaLabelledBy, "aria-describedby": ariaDescribedBy, "aria-multiline": true, "aria-disabled": disabled || void 0, value: isControlled ? value2 : stateValue }, others), { onChange: handleChange, onFocus: handleFocus, onBlur: handleBlur });
  return React142.createElement(
    "span",
    { className: classNames("k-input", "k-textarea", (_a14 = {}, _a14["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a14["k-invalid"] = !(isValid || validityStyles !== void 0 || validityStyles === true), _a14["k-required"] = required, _a14["k-disabled"] = disabled, _a14), className), style, dir },
    React142.createElement("textarea", __assign73({}, textAreaProps))
  );
});
TextArea.propTypes = {
  ariaDescribedBy: PropTypes66.string,
  ariaLabelledBy: PropTypes66.string,
  autoSize: PropTypes66.bool,
  className: PropTypes66.string,
  defaultValue: PropTypes66.string,
  dir: PropTypes66.string,
  disabled: PropTypes66.bool,
  readOnly: PropTypes66.bool,
  rows: PropTypes66.number,
  id: PropTypes66.string,
  name: PropTypes66.string,
  placeholder: PropTypes66.string,
  style: PropTypes66.object,
  tabIndex: PropTypes66.number,
  value: PropTypes66.oneOfType([
    PropTypes66.string,
    PropTypes66.arrayOf(PropTypes66.string),
    PropTypes66.number
  ]),
  onChange: PropTypes66.func,
  onFocus: PropTypes66.func,
  onBlur: PropTypes66.func,
  size: PropTypes66.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes66.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes66.oneOf([null, "solid", "flat", "outline"])
};
var defaultProps16 = {
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
TextArea.displayName = "KendoTextArea";
TextArea.defaultProps = defaultProps16;

// node_modules/@progress/kendo-react-inputs/dist/es/textbox/Textbox.js
var React143 = __toESM(require_react());
var PropTypes67 = __toESM(require_prop_types());
var __assign74 = function() {
  __assign74 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign74.apply(this, arguments);
};
var __rest36 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
;
var TextBox = React143.forwardRef(function(props, ref) {
  var _a14;
  validatePackage2(packageMetadata11);
  var element6 = React143.useRef(null);
  var target = React143.useRef(null);
  var valueDuringChangeRef = React143.useRef();
  var valueGetter = React143.useCallback(function() {
    var _a15;
    if (valueDuringChangeRef.current !== void 0) {
      return valueDuringChangeRef.current;
    } else {
      return (_a15 = element6.current) === null || _a15 === void 0 ? void 0 : _a15.value;
    }
  }, []);
  React143.useImperativeHandle(target, function() {
    var result = {
      element: element6.current
    };
    Object.defineProperty(result, "value", { get: valueGetter });
    return result;
  });
  React143.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _b3 = props, size = _b3.size, fillMode = _b3.fillMode, rounded = _b3.rounded, className = _b3.className, dir = _b3.dir, style = _b3.style, _c2 = _b3.prefix, prefix = _c2 === void 0 ? defaultProps17.prefix : _c2, _d = _b3.suffix, suffix = _d === void 0 ? defaultProps17.suffix : _d, valid = _b3.valid, _modified = _b3.modified, _touched = _b3.touched, _visited = _b3.visited, other = __rest36(_b3, ["size", "fillMode", "rounded", "className", "dir", "style", "prefix", "suffix", "valid", "modified", "touched", "visited"]);
  var Prefix = useCustomComponent(prefix)[0];
  var Suffix = useCustomComponent(suffix)[0];
  var _e = React143.useState(false), focused = _e[0], setFocused = _e[1];
  var handleFocus = function(_2) {
    setFocused(true);
  };
  var handleBlur = function(_2) {
    setFocused(false);
  };
  var handleChange = React143.useCallback(function(event2) {
    valueDuringChangeRef.current = event2.target.value;
    if (props.onChange) {
      props.onChange.call(void 0, {
        syntheticEvent: event2,
        nativeEvent: event2.nativeEvent,
        value: event2.target.value,
        target: target.current
      });
    }
    valueDuringChangeRef.current = void 0;
  }, [props.onChange]);
  var _f = useAsyncFocusBlur({
    onFocus: handleFocus,
    onBlur: handleBlur,
    onSyncFocus: props.onFocus,
    onSyncBlur: props.onBlur
  }), onFocus = _f.onFocus, onBlur = _f.onBlur;
  return React143.createElement(
    "span",
    { style, dir, className: classNames("k-textbox k-input", (_a14 = {}, _a14["k-input-".concat(kendoThemeMaps.sizeMap[size] || size)] = size, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-rounded-".concat(kendoThemeMaps.roundedMap[rounded] || rounded)] = rounded, _a14), {
      "k-focus": focused,
      "k-required": props.required,
      "k-disabled": props.disabled,
      "k-invalid": props.valid === false
    }, className), onFocus, onBlur },
    React143.createElement(Prefix, null),
    React143.createElement("input", __assign74({ ref: element6, className: "k-input-inner" }, other, { onChange: handleChange })),
    React143.createElement(Suffix, null)
  );
});
var defaultProps17 = {
  prefix: function(_2) {
    return null;
  },
  suffix: function(_2) {
    return null;
  },
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
TextBox.propTypes = {
  size: PropTypes67.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes67.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes67.oneOf([null, "solid", "flat", "outline"])
};
TextBox.displayName = "KendoReactTextBoxComponent";
TextBox.defaultProps = defaultProps17;

// node_modules/@progress/kendo-react-inputs/dist/es/input/InputPrefix.js
var React144 = __toESM(require_react());
var __assign75 = function() {
  __assign75 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign75.apply(this, arguments);
};
var InputPrefix = React144.forwardRef(function(props, ref) {
  var target = React144.useRef(null);
  var element6 = React144.useRef(null);
  React144.useImperativeHandle(target, function() {
    return { element: element6.current };
  });
  React144.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React144.createElement("span", __assign75({}, props, { className: classNames("k-input-prefix", props.className) }));
});
InputPrefix.displayName = "KendoReactInputPrefix";

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListContainer.js
var React145 = __toESM(require_react());
var __extends52 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign76 = function() {
  __assign76 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign76.apply(this, arguments);
};
var ListContainer = (
  /** @class */
  function(_super) {
    __extends52(ListContainer2, _super);
    function ListContainer2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ListContainer2.prototype.render = function() {
      var _a14 = this.props, children2 = _a14.children, width = _a14.width, dir = _a14.dir, itemsCount = _a14.itemsCount, popupSettings = _a14.popupSettings;
      return React145.createElement(Popup, __assign76({ style: { width, direction: dir }, contentKey: itemsCount && itemsCount.join() }, popupSettings), children2);
    };
    return ListContainer2;
  }(React145.Component)
);
var ListContainer_default = ListContainer;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListFilter.js
var React146 = __toESM(require_react());
var PropTypes68 = __toESM(require_prop_types());
var __assign77 = function() {
  __assign77 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign77.apply(this, arguments);
};
var ListFilter = React146.forwardRef(function(props, ref) {
  var input = React146.useRef(null);
  React146.useImperativeHandle(ref, function() {
    return input.current;
  });
  return React146.createElement(
    "div",
    { className: "k-list-filter" },
    React146.createElement(TextBox, __assign77({}, props, { ref: input, value: props.value || "", onChange: props.onChange, onKeyDown: props.onKeyDown, tabIndex: props.tabIndex, onClick: function(e) {
      return e.stopPropagation();
    }, size: props.size, fillMode: props.fillMode, rounded: props.rounded, prefix: function() {
      return React146.createElement(
        InputPrefix,
        null,
        React146.createElement(IconWrap, { name: "search", icon: searchIcon })
      );
    } }))
  );
});
ListFilter.propTypes = {
  value: PropTypes68.oneOfType([PropTypes68.string, PropTypes68.number, PropTypes68.array]),
  tabIndex: PropTypes68.number,
  onChange: PropTypes68.func,
  onKeyDown: PropTypes68.func,
  size: PropTypes68.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes68.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes68.oneOf([null, "solid", "flat", "outline"])
};
ListFilter.displayName = "KendoReactListFilter";
var ListFilter_default = ListFilter;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/GroupStickyHeader.js
var React147 = __toESM(require_react());
var __extends53 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var GroupStickyHeader = (
  /** @class */
  function(_super) {
    __extends53(GroupStickyHeader2, _super);
    function GroupStickyHeader2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    GroupStickyHeader2.prototype.render = function() {
      var _a14 = this.props, group2 = _a14.group, groupMode = _a14.groupMode, renderer = _a14.render;
      var item = React147.createElement("div", { className: "k-list-group-sticky-header" }, groupMode === "classic" ? group2 : React147.createElement("div", { className: "k-list-header-text" }, group2));
      return renderer !== void 0 ? renderer.call(void 0, item, this.props) : item;
    };
    return GroupStickyHeader2;
  }(React147.Component)
);
var GroupStickyHeader_default = GroupStickyHeader;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/utils.js
var isPresent4 = function(value2) {
  return value2 !== null && value2 !== void 0;
};
var sameCharsOnly = function(word, character) {
  for (var idx = 0; idx < word.length; idx++) {
    if (word.charAt(idx) !== character) {
      return false;
    }
  }
  return true;
};
var shuffleData = function(data2, splitIndex, defaultItem) {
  var result = data2;
  if (defaultItem) {
    result = [defaultItem].concat(result);
  }
  return result.slice(splitIndex).concat(result.slice(0, splitIndex));
};
var matchText = function(text, word, ignoreCase) {
  if (!isPresent4(text)) {
    return false;
  }
  var temp = String(text);
  if (ignoreCase) {
    temp = temp.toLowerCase();
  }
  return temp.indexOf(word) === 0;
};
var scrollToItem = function(scrollElem, list, itemIndex, translate, virtualScroll) {
  var viewportHeight = scrollElem.offsetHeight;
  var li = list.children.item(itemIndex);
  var itemOffsetTop = li.offsetTop + (virtualScroll ? translate - scrollElem.scrollTop : 0);
  var itemHeight = li.offsetHeight;
  if (virtualScroll) {
    var diff = 0;
    if (itemOffsetTop + itemHeight > viewportHeight) {
      diff = itemOffsetTop + itemHeight - viewportHeight;
    } else if (itemOffsetTop < 0) {
      diff = itemOffsetTop;
    }
    if (diff !== 0) {
      scrollElem.scrollTop += diff;
    } else if (scrollElem.scrollTop === 0 && translate !== 0) {
      scrollElem.scrollTop = translate;
    }
  } else {
    if (itemOffsetTop + itemHeight > viewportHeight + scrollElem.scrollTop) {
      scrollElem.scrollTop = itemOffsetTop + itemHeight - viewportHeight;
    } else if (itemOffsetTop < scrollElem.scrollTop) {
      scrollElem.scrollTop -= scrollElem.scrollTop - itemOffsetTop;
    }
  }
};
var itemIndexStartsWith = function(items, text, field) {
  var result = -1;
  if (text) {
    text = text.toLowerCase();
    for (var i = 0; i < items.length; i++) {
      var itemText = (getItemValue(items[i], field) || "") + "";
      if (itemText && itemText.toLowerCase().startsWith(text)) {
        result = i;
        break;
      }
    }
  }
  return result;
};
var getItemIndexByText = function(data2, text, textField, matchCase) {
  if (matchCase === void 0) {
    matchCase = false;
  }
  var casing = function(value2) {
    return matchCase ? value2 : value2.toLowerCase();
  };
  return data2.findIndex(function(item) {
    return textField ? casing(getItemValue(item, textField)) === casing(text) : casing(text) === casing(item.toString());
  });
};
var getItemValue = function(item, field) {
  if (field && isPresent4(item)) {
    var path = field.split(".");
    var data_1 = item;
    path.forEach(function(p) {
      data_1 = data_1 ? data_1[p] : void 0;
    });
    return data_1;
  }
  return item;
};
var matchDataCollections = function(data1, data2, key) {
  if (data1 === void 0) {
    data1 = [];
  }
  if (data2 === void 0) {
    data2 = [];
  }
  if (data1 === data2) {
    return true;
  }
  if (data1.length !== data2.length) {
    return false;
  }
  for (var i = 0; i < data1.length; i++) {
    if (!areSame(data1[i], data2[i], key)) {
      return false;
    }
  }
  return true;
};
var removeDataItems = function(items, toRemove, key) {
  toRemove.forEach(function(item) {
    var itemIndex = items.findIndex(function(i) {
      return areSame(i, item, key);
    });
    if (itemIndex !== -1) {
      items.splice(itemIndex, 1);
    }
  });
};
var areSame = function(item1, item2, key) {
  return item1 === item2 || isPresent4(item1) === isPresent4(item2) && getItemValue(item1, key) === getItemValue(item2, key);
};
var getFocusedItem = function(data2, value2, textField) {
  if (value2) {
    var selectedIndex = getItemIndexByText(data2, value2, textField, true);
    return selectedIndex !== -1 ? data2[selectedIndex] : data2[itemIndexStartsWith(data2, value2, textField)];
  }
  return data2[0];
};
var suggestValue = function(value2, data2, textField) {
  if (data2 === void 0) {
    data2 = [];
  }
  var suggested = "";
  if (value2) {
    var suggestedItem = data2[itemIndexStartsWith(data2, value2, textField)];
    if (suggestedItem) {
      var suggestedText = getItemValue(suggestedItem, textField);
      if (value2.toLowerCase() !== suggestedText.toLowerCase()) {
        suggested = suggestedText.substring(value2.length);
      }
    }
  }
  return suggested;
};
var preventDefaultNonInputs = function(event2) {
  if (event2.target.nodeName !== "INPUT") {
    event2.preventDefault();
  }
};
var matchTags = function(tag1, tag2, key) {
  if (!!tag1 !== !!tag2 || tag1.text !== tag2.text) {
    return false;
  }
  return tag1 === tag2 || matchDataCollections(tag1.data, tag2.data, key);
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListDefaultItem.js
var React148 = __toESM(require_react());
var __extends54 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var preventDefault2 = function(e) {
  return e.preventDefault();
};
var ListDefaultItem = (
  /** @class */
  function(_super) {
    __extends54(ListDefaultItem2, _super);
    function ListDefaultItem2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ListDefaultItem2.prototype.render = function() {
      var _a14 = this.props, selected = _a14.selected, defaultItem = _a14.defaultItem, textField = _a14.textField;
      return React148.createElement("div", { onClick: this.props.onClick, onMouseDown: preventDefault2, style: { position: "unset" }, className: classNames("k-list-optionlabel", {
        "k-selected": selected
      }) }, getItemValue(defaultItem, textField) || "");
    };
    return ListDefaultItem2;
  }(React148.Component)
);
var ListDefaultItem_default = ListDefaultItem;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListItem.js
var React149 = __toESM(require_react());
var __extends55 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ListItem = (
  /** @class */
  function(_super) {
    __extends55(ListItem2, _super);
    function ListItem2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.handleClick = function(e) {
        return _this3.props.onClick(_this3.props.index, e);
      };
      return _this3;
    }
    ListItem2.prototype.render = function() {
      var _a14 = this.props, selected = _a14.selected, group2 = _a14.group, dataItem = _a14.dataItem, virtual = _a14.virtual, groupMode = _a14.groupMode, renderer = _a14.render;
      var item = React149.createElement(
        "li",
        { id: this.props.id, role: "option", "aria-selected": selected, className: classNames("k-list-item", {
          "k-selected": selected,
          "k-focus": this.props.focused,
          "k-first": Boolean(group2) && groupMode === "classic"
        }), onClick: this.handleClick, style: { position: virtual ? "relative" : "unset" } },
        React149.createElement("span", { className: "k-list-item-text" }, getItemValue(dataItem, this.props.textField).toString()),
        group2 !== void 0 && groupMode === "classic" ? React149.createElement("div", { className: "k-list-item-group-label" }, group2) : null
      );
      return renderer !== void 0 ? renderer.call(void 0, item, this.props) : item;
    };
    return ListItem2;
  }(React149.Component)
);
var ListItem_default = ListItem;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ListGroupItem.js
var React150 = __toESM(require_react());
var __extends56 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ListGroupItem = (
  /** @class */
  function(_super) {
    __extends56(ListGroupItem2, _super);
    function ListGroupItem2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    ListGroupItem2.prototype.render = function() {
      var _a14 = this.props, group2 = _a14.group, virtual = _a14.virtual, renderer = _a14.render, _b3 = _a14.isMultiColumn, isMultiColumn = _b3 === void 0 ? false : _b3;
      var item = React150.createElement(
        "li",
        { id: this.props.id, role: "group", className: isMultiColumn ? "k-table-group-row" : "k-list-group-item", style: isMultiColumn ? { "boxSizing": "inherit" } : { position: virtual ? "relative" : "unset" } },
        React150.createElement("span", { className: !renderer ? isMultiColumn ? "k-table-th" : "k-list-item-text" : void 0 }, group2)
      );
      return renderer !== void 0 ? renderer.call(void 0, item, this.props) : item;
    };
    return ListGroupItem2;
  }(React150.Component)
);
var ListGroupItem_default = ListGroupItem;

// node_modules/@progress/kendo-react-dropdowns/dist/es/messages/index.js
var _a13;
var nodata = "dropdowns.nodata";
var clear2 = "dropdowns.clear";
var comboArrowBtnAriaLabelExpand = "dropdowns.comboArrowBtnAriaLabelExpand";
var comboArrowBtnAriaLabelCollapse = "dropdowns.comboArrowBtnAriaLabelCollapse";
var dropDownListArrowBtnAriaLabel = "dropdowns.dropDownListArrowBtnAriaLabel";
var adaptiveModeFooterApply = "dropdowns.apply";
var adaptiveModeFooterCancel = "dropdowns.cancel";
var messages7 = (_a13 = {}, _a13[clear2] = "clear", _a13[nodata] = "NO DATA FOUND.", _a13[comboArrowBtnAriaLabelExpand] = "expand combobox", _a13[comboArrowBtnAriaLabelCollapse] = "collapse combobox", _a13[dropDownListArrowBtnAriaLabel] = "select", _a13[adaptiveModeFooterApply] = "Apply", _a13[adaptiveModeFooterCancel] = "Cancel", _a13);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/List.js
var React151 = __toESM(require_react());
var __extends57 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var List = (
  /** @class */
  function(_super) {
    __extends57(List2, _super);
    function List2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    List2.prototype.renderItems = function() {
      var _this3 = this;
      var _a14 = this.props, textField = _a14.textField, valueField = _a14.valueField, groupField = _a14.groupField, groupMode = _a14.groupMode, isMultiColumn = _a14.isMultiColumn, optionsGuid = _a14.optionsGuid, _b3 = _a14.skip, skip3 = _b3 === void 0 ? 0 : _b3, virtual = _a14.virtual, focusedIndex = _a14.focusedIndex, _c2 = _a14.highlightSelected, highlightSelected = _c2 === void 0 ? true : _c2, value2 = _a14.value, data2 = _a14.data, itemRender = _a14.itemRender, groupHeaderItemRender = _a14.groupHeaderItemRender;
      var isArray4 = Array.isArray(value2);
      var groupCounter = 0;
      return data2.map(function(item, index) {
        var realIndex = skip3 + index;
        var idIndex = skip3 + index + groupCounter;
        var selected = highlightSelected && (!isArray4 && areSame(item, value2, valueField) || isArray4 && value2.findIndex(function(i) {
          return areSame(i, item, valueField);
        }) !== -1);
        var group2 = void 0;
        var current, previous;
        if (index > 0 && groupField !== void 0) {
          current = getItemValue(item, groupField);
          previous = getItemValue(data2[index - 1], groupField);
          if (current && previous && current !== previous) {
            group2 = current;
          }
        }
        group2 !== void 0 && groupMode === "modern" ? groupCounter += 1 : "";
        return [
          group2 !== void 0 && groupMode === "modern" && React151.createElement(ListGroupItem_default, { id: "option-".concat(optionsGuid, "-").concat(idIndex), virtual, key: realIndex + "-group-item", group: group2, isMultiColumn, render: groupHeaderItemRender }),
          React151.createElement(ListItem_default, { id: "option-".concat(optionsGuid, "-").concat(group2 !== void 0 && groupMode === "modern" ? idIndex + 1 : idIndex), virtual, dataItem: item, groupMode, selected, focused: focusedIndex === index, index: realIndex, key: realIndex, onClick: _this3.props.onClick, textField, group: group2, render: itemRender })
        ];
      });
    };
    List2.prototype.renderNoValueElement = function(localizationService) {
      var noDataRender = this.props.noDataRender;
      var noDataElement = React151.createElement(
        "div",
        { className: "k-nodata" },
        React151.createElement("div", null, localizationService.toLanguageString(nodata, messages7[nodata]))
      );
      return noDataRender ? noDataRender.call(void 0, noDataElement) : noDataElement;
    };
    List2.prototype.render = function() {
      var localizationService = provideLocalizationService(this);
      var _a14 = this.props, id = _a14.id, show = _a14.show, wrapperCssClass = _a14.wrapperCssClass, wrapperStyle = _a14.wrapperStyle, listStyle = _a14.listStyle, listRef = _a14.listRef, wrapperRef = _a14.wrapperRef, _b3 = _a14.listClassName, listClassName = _b3 === void 0 ? "k-list-ul" : _b3;
      var items = this.renderItems();
      return items.length ? React151.createElement(
        "div",
        { className: wrapperCssClass, style: wrapperStyle, ref: wrapperRef, onMouseDown: this.props.onMouseDown, onBlur: this.props.onBlur, onScroll: this.props.onScroll, unselectable: "on" },
        React151.createElement("ul", { id, role: "listbox", "aria-hidden": !show ? true : void 0, className: listClassName, ref: listRef, style: listStyle }, items),
        this.props.scroller && React151.createElement("div", { className: "k-height-container" }, this.props.scroller)
      ) : this.renderNoValueElement(localizationService);
    };
    return List2;
  }(React151.Component)
);
var List_default = List;
registerForLocalization(List);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/VirtualScroll.js
var maxHeightIE = 1533915;
var VirtualScroll = (
  /** @class */
  function() {
    function VirtualScroll2() {
      var _this3 = this;
      this.container = null;
      this.scrollElement = null;
      this.list = null;
      this.containerHeight = 0;
      this.skip = 0;
      this.total = 0;
      this.enabled = false;
      this.pageSize = 0;
      this.itemHeight = 0;
      this.PageChange = null;
      this.prevScrollPos = 0;
      this.listTranslate = 0;
      this.scrollSyncing = false;
      this.scrollerRef = function(element6) {
        var vs = _this3;
        vs.container = element6;
        if (element6) {
          element6.setAttribute("unselectable", "on");
          window.setTimeout(vs.calcScrollElementHeight.bind(vs), 0);
        }
      };
      this.calcScrollElementHeight = function() {
        _this3.scrollSyncing = true;
        var heightChanged = false;
        _this3.itemHeight = _this3.list ? _this3.list.children[0].offsetHeight : _this3.itemHeight;
        _this3.containerHeight = Math.min(maxHeightIE, _this3.itemHeight * _this3.total);
        var newHeight = _this3.containerHeight;
        if (_this3.scrollElement) {
          heightChanged = _this3.scrollElement.style.height !== newHeight + "px";
          if (heightChanged) {
            _this3.scrollElement.style.height = newHeight + "px";
          }
        }
        _this3.scrollSyncing = false;
        return heightChanged;
      };
      this.scrollHandler = this.scrollHandler.bind(this);
    }
    Object.defineProperty(VirtualScroll2.prototype, "translate", {
      get: function() {
        return this.listTranslate;
      },
      enumerable: false,
      configurable: true
    });
    VirtualScroll2.prototype.changePage = function(skip3, e) {
      var newSkip = Math.min(Math.max(0, skip3), this.total - this.pageSize);
      if (newSkip !== this.skip && this.PageChange) {
        this.PageChange({ skip: newSkip, take: this.pageSize }, e);
      }
    };
    VirtualScroll2.prototype.translateTo = function(dY) {
      this.listTranslate = dY;
      if (this.list) {
        this.list.style.transform = "translateY(" + dY + "px)";
      }
    };
    VirtualScroll2.prototype.reset = function() {
      if (this.container) {
        this.calcScrollElementHeight();
        this.container.scrollTop = 0;
        this.translateTo(0);
      }
    };
    VirtualScroll2.prototype.scrollToEnd = function() {
      if (this.container && this.list) {
        this.calcScrollElementHeight();
        this.container.scrollTop = this.container.scrollHeight - this.container.offsetHeight;
        this.translateTo(this.container.scrollHeight);
      }
    };
    VirtualScroll2.prototype.localScrollUp = function(e) {
      var height = this.itemHeight;
      var scrollTop = this.container.scrollTop;
      var targetTranslate = this.listTranslate;
      var items;
      var additionalOnTop = scrollTop - targetTranslate;
      if (additionalOnTop > height) {
        return;
      }
      for (items = 0; items < this.skip; items++) {
        if (targetTranslate + height + additionalOnTop <= scrollTop) {
          break;
        }
        targetTranslate -= height;
      }
      targetTranslate = this.validateTranslate(targetTranslate);
      if (this.skip - items <= 0 && targetTranslate >= scrollTop) {
        this.translateTo(0);
        this.changePage(0, e);
        this.container.scrollTop = 0;
        return;
      }
      if (targetTranslate !== this.listTranslate) {
        this.translateTo(targetTranslate);
        this.changePage(this.skip - items, e);
      }
    };
    VirtualScroll2.prototype.localScrollDown = function(e) {
      var height = this.itemHeight;
      var scrollTop = this.container.scrollTop;
      var targetTranslate = this.listTranslate;
      var itemsLenght = this.list.children.length;
      var items;
      for (items = 0; items < itemsLenght; items++) {
        if (targetTranslate + height >= scrollTop) {
          break;
        }
        targetTranslate += height;
      }
      targetTranslate = this.validateTranslate(targetTranslate);
      if (items >= itemsLenght && this.skip + items >= this.total) {
        this.translateTo(targetTranslate);
        this.changePage(this.total - 1, e);
      } else if (targetTranslate !== this.listTranslate) {
        this.translateTo(targetTranslate);
        this.changePage(this.skip + items, e);
      }
    };
    VirtualScroll2.prototype.scrollNonStrict = function(e) {
      var floatItemIndex = this.total * this.prevScrollPos / this.containerHeight;
      var itemIndex = Math.min(Math.floor(floatItemIndex), this.total - 1);
      var targetTranslate = this.containerHeight * floatItemIndex / this.total;
      targetTranslate = this.validateTranslate(targetTranslate);
      this.translateTo(targetTranslate);
      this.changePage(itemIndex, e);
    };
    VirtualScroll2.prototype.scrollHandler = function(e) {
      var scrollTop = this.container ? this.container.scrollTop : 0;
      var prev = this.prevScrollPos;
      this.prevScrollPos = scrollTop;
      if (!this.enabled || !this.list || !this.container || this.scrollSyncing) {
        return;
      }
      if (scrollTop - prev <= 0 && scrollTop > this.listTranslate - this.list.scrollHeight / 10) {
        this.localScrollUp(e);
      } else if (scrollTop - prev > 0 && scrollTop < this.listTranslate + this.list.scrollHeight * 2 / 3) {
        this.localScrollDown(e);
      } else {
        this.scrollNonStrict(e);
      }
    };
    VirtualScroll2.prototype.validateTranslate = function(translate) {
      translate = Math.max(0, translate);
      translate = Math.min(this.containerHeight, translate);
      return translate;
    };
    return VirtualScroll2;
  }()
);
var VirtualScroll_default = VirtualScroll;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/Navigation.js
var Navigation3 = (
  /** @class */
  function() {
    function Navigation4() {
    }
    Navigation4.prototype.navigate = function(args) {
      var keyCode = args.keyCode;
      if (keyCode === Keys.up || keyCode === Keys.left) {
        return this.next({ current: args.current, min: args.min, max: args.max, step: -1 });
      } else if (keyCode === Keys.down || keyCode === Keys.right) {
        return this.next({ current: args.current, min: args.min, max: args.max, step: 1 });
      } else if (keyCode === Keys.home) {
        return 0;
      } else if (keyCode === Keys.end) {
        return args.max;
      }
    };
    Navigation4.prototype.next = function(args) {
      if (!isPresent4(args.current)) {
        return args.min;
      } else {
        return Math.min(args.max, Math.max(args.current + args.step, args.min));
      }
    };
    return Navigation4;
  }()
);

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/DropDownBase.js
var React152 = __toESM(require_react());
var PropTypes69 = __toESM(require_prop_types());
var __assign78 = function() {
  __assign78 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign78.apply(this, arguments);
};
var DropDownBase = (
  /** @class */
  function() {
    function DropDownBase2(component) {
      var _this3 = this;
      this.wrapper = null;
      this.list = null;
      this.vs = new VirtualScroll_default();
      this.navigation = new Navigation3();
      this.handleItemClick = function(index, event2) {
        var state = _this3.initState();
        state.syntheticEvent = event2;
        event2.stopPropagation();
        _this3.component.handleItemSelect(index, state);
        _this3.togglePopup(state);
        _this3.applyState(state);
      };
      this.handleFocus = function(event2) {
        if (!_this3.component.state.focused) {
          var state = _this3.initState();
          state.data.focused = true;
          state.events.push({ type: "onFocus" });
          state.syntheticEvent = event2;
          _this3.applyState(state);
        }
      };
      this.filterChanged = function(text, state) {
        var _a14 = _this3.component.props, textField = _a14.textField, filterable = _a14.filterable;
        if (filterable) {
          state.events.push({
            type: "onFilterChange",
            filter: {
              field: textField,
              operator: "contains",
              ignoreCase: true,
              value: text
            }
          });
        }
      };
      this.togglePopup = function(state) {
        var props = _this3.component.props;
        var opened = props.opened !== void 0 ? props.opened : _this3.component.state.opened;
        if (props.opened === void 0) {
          state.data.opened = !opened;
        }
        if (opened) {
          state.events.push({ type: "onClose" });
        } else {
          state.events.push({ type: "onOpen" });
          _this3.calculatePopupWidth();
        }
      };
      this.pageChange = function(page, syntheticEvent) {
        var state = _this3.initState();
        state.syntheticEvent = syntheticEvent;
        _this3.triggerOnPageChange(state, page.skip, page.take);
        _this3.applyState(state);
      };
      this.scrollToVirtualItem = function(virtual, selectedItemIndex) {
        var vs = _this3.vs;
        vs.enabled = false;
        if (virtual.skip === 0) {
          vs.reset();
        } else if (virtual.skip + virtual.pageSize === virtual.total) {
          vs.scrollToEnd();
        } else {
          var scrollTop = vs.translate;
          if (scrollTop === 0) {
            vs.calcScrollElementHeight();
            scrollTop = vs.itemHeight * virtual.skip;
            vs.translateTo(scrollTop - vs.itemHeight);
          }
          if (vs.container) {
            vs.container.scrollTop = scrollTop;
          }
          _this3.scrollToItem(selectedItemIndex, true);
        }
        window.setTimeout(function() {
          return vs.enabled = true;
        }, 10);
      };
      this.renderScrollElement = function() {
        var vs = _this3.vs;
        return vs.enabled && React152.createElement("div", { ref: function(element6) {
          return vs.scrollElement = element6;
        }, key: "scrollElementKey" });
      };
      this.resetGroupStickyHeader = function(groupName, that) {
        if (groupName !== that.state.group) {
          that.setState(__assign78(__assign78({}, that.state), { group: groupName }));
        }
      };
      this.listBoxId = guid();
      this.guid = guid();
      this.component = component;
      this.vs.PageChange = this.pageChange;
    }
    DropDownBase2.prototype.didMount = function() {
      var props = this.component.props;
      var popupSettings = props.popupSettings || {};
      var style = props.style || {};
      var popupWidth = popupSettings.width;
      var shouldUpdate = props.opened === true;
      if (popupWidth === void 0) {
        this.calculatePopupWidth();
      }
      if (props.dir === void 0 && style.direction === void 0) {
        this.calculateDir();
        shouldUpdate = true;
      }
      if (shouldUpdate) {
        this.component.forceUpdate();
      }
    };
    DropDownBase2.prototype.calculateDir = function() {
      var element6 = this.component.element;
      if (element6 && element6.ownerDocument && element6.ownerDocument.defaultView) {
        this.dirCalculated = element6.ownerDocument.defaultView.getComputedStyle(element6).direction || void 0;
      }
    };
    DropDownBase2.prototype.calculatePopupWidth = function() {
      if (this.wrapper) {
        this.popupWidth = this.wrapper.offsetWidth + "px";
      }
    };
    DropDownBase2.prototype.scrollToItem = function(itemIndex, vsEnabled, once) {
      var _this3 = this;
      var list = this.list || this.vs.list;
      if (!list && !once) {
        setTimeout(function() {
          _this3.scrollToItem(itemIndex, vsEnabled, true);
        }, 10);
      }
      if (list && itemIndex >= 0) {
        var vs = this.vs;
        var scrollElement = vs.container || list.parentNode;
        var virtualScroll = vsEnabled !== void 0 ? vsEnabled : vs.enabled;
        scrollToItem(scrollElement, list, itemIndex, vs.translate, virtualScroll);
      }
    };
    DropDownBase2.prototype.initState = function() {
      var state = {
        data: {},
        events: [],
        syntheticEvent: void 0
      };
      return state;
    };
    DropDownBase2.prototype.applyState = function(state) {
      var _this3 = this;
      if (Object.keys(state.data).length > 0) {
        this.component.setState(state.data);
      }
      var eventArgs = {
        syntheticEvent: state.syntheticEvent,
        nativeEvent: state.syntheticEvent ? state.syntheticEvent.nativeEvent : void 0,
        target: this.component,
        value: this.component.value
      };
      state.events.forEach(function(eventData) {
        var type = eventData.type;
        delete eventData.type;
        var handler = type && _this3.component.props[type];
        if (handler) {
          handler.call(void 0, __assign78(__assign78({}, eventArgs), eventData));
        }
      });
    };
    DropDownBase2.prototype.triggerOnPageChange = function(state, skip3, take3) {
      var virtual = this.component.props.virtual;
      if (virtual) {
        var newSkip = Math.min(Math.max(0, skip3), Math.max(0, virtual.total - take3));
        if (newSkip !== virtual.skip) {
          state.events.push({
            type: "onPageChange",
            page: { skip: newSkip, take: take3 }
          });
        }
      }
    };
    DropDownBase2.prototype.triggerPageChangeCornerItems = function(item, state) {
      var props = this.component.props;
      var _a14 = props.data, data2 = _a14 === void 0 ? [] : _a14, dataItemKey = props.dataItemKey, virtual = props.virtual;
      var opened = props.opened !== void 0 ? props.opened : this.component.state.opened;
      if (item && virtual && this.vs.enabled) {
        if (virtual.skip > 0 && areSame(item, data2[0], dataItemKey)) {
          this.triggerOnPageChange(state, virtual.skip - 1, virtual.pageSize);
        } else if (!opened && virtual.skip + virtual.pageSize < virtual.total && areSame(item, data2[data2.length - 1], dataItemKey)) {
          this.triggerOnPageChange(state, virtual.skip + 1, virtual.pageSize);
        }
      }
    };
    DropDownBase2.prototype.getPopupSettings = function() {
      return Object.assign({}, DropDownBase2.defaultProps.popupSettings, this.component.props.popupSettings);
    };
    DropDownBase2.prototype.getGroupedDataModernMode = function(data2, groupField) {
      var newData = [];
      data2.forEach(function(el, index) {
        var _a14;
        if (data2[index - 1] && el[groupField] !== data2[index - 1][groupField]) {
          newData.push((_a14 = {}, _a14[groupField] = el[groupField], _a14));
          newData.push(data2[index]);
        } else {
          newData.push(data2[index]);
        }
      });
      return newData;
    };
    DropDownBase2.basicPropTypes = {
      opened: PropTypes69.bool,
      disabled: PropTypes69.bool,
      dir: PropTypes69.string,
      tabIndex: PropTypes69.number,
      accessKey: PropTypes69.string,
      data: PropTypes69.array,
      textField: PropTypes69.string,
      className: PropTypes69.string,
      label: PropTypes69.string,
      loading: PropTypes69.bool,
      popupSettings: PropTypes69.shape({
        animate: PropTypes69.oneOfType([PropTypes69.bool, PropTypes69.shape({
          openDuration: PropTypes69.number,
          closeDuration: PropTypes69.number
        })]),
        popupClass: PropTypes69.string,
        className: PropTypes69.string,
        appendTo: PropTypes69.any,
        width: PropTypes69.oneOfType([PropTypes69.string, PropTypes69.number]),
        height: PropTypes69.oneOfType([PropTypes69.string, PropTypes69.number])
      }),
      onOpen: PropTypes69.func,
      onClose: PropTypes69.func,
      onFocus: PropTypes69.func,
      onBlur: PropTypes69.func,
      onChange: PropTypes69.func,
      itemRender: PropTypes69.func,
      listNoDataRender: PropTypes69.func,
      focusedItemIndex: PropTypes69.func,
      header: PropTypes69.node,
      footer: PropTypes69.node
    };
    DropDownBase2.propTypes = __assign78(__assign78({}, DropDownBase2.basicPropTypes), { value: PropTypes69.any, defaultValue: PropTypes69.any, filterable: PropTypes69.bool, filter: PropTypes69.string, virtual: PropTypes69.shape({
      pageSize: PropTypes69.number.isRequired,
      skip: PropTypes69.number.isRequired,
      total: PropTypes69.number.isRequired
    }), onFilterChange: PropTypes69.func, onPageChange: PropTypes69.func });
    DropDownBase2.defaultProps = {
      popupSettings: {
        height: "200px"
      },
      required: false,
      validityStyles: true
    };
    return DropDownBase2;
  }()
);
var DropDownBase_default = DropDownBase;

// node_modules/@progress/kendo-react-dropdowns/dist/es/package-metadata.js
var packageMetadata12 = {
  name: "@progress/kendo-react-dropdowns",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225790,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/constants.js
var MOBILE_SMALL_DEVISE3 = 500;
var MOBILE_MEDIUM_DEVISE2 = 768;

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownList/DropDownList.js
var React153 = __toESM(require_react());
var PropTypes70 = __toESM(require_prop_types());
var __extends58 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign79 = function() {
  __assign79 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign79.apply(this, arguments);
};
var VALIDATION_MESSAGE3 = "Please select a value from the list!";
var sizeMap = kendoThemeMaps.sizeMap, roundedMap = kendoThemeMaps.roundedMap;
var DropDownListWithoutContext = (
  /** @class */
  function(_super) {
    __extends58(DropDownListWithoutContext2, _super);
    function DropDownListWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {};
      _this3.i = null;
      _this3.base = new DropDownBase_default(_this3);
      _this3.searchState = { word: "", last: "" };
      _this3.Lb = null;
      _this3.Aa = false;
      _this3.nb = null;
      _this3.Ma = false;
      _this3.ea = guid();
      _this3.itemHeight = 0;
      _this3.focus = function() {
        if (_this3.base.wrapper) {
          _this3.base.wrapper.focus();
        }
      };
      _this3.handleItemSelect = function(index, state) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, virtual = _a14.virtual, dataItemKey = _a14.dataItemKey, defaultItem = _a14.defaultItem;
        var skip3 = virtual ? virtual.skip : 0;
        var item = index === -1 && defaultItem !== void 0 ? defaultItem : data2[index - skip3];
        var newSelected = !areSame(item, _this3.value, dataItemKey);
        _this3.triggerOnChange(item, state);
        if (newSelected) {
          _this3.base.triggerPageChangeCornerItems(item, state);
        }
      };
      _this3.componentRef = function(element6) {
        _this3.i = element6;
        _this3.base.wrapper = element6;
      };
      _this3.dummySelect = function(value2) {
        return React153.createElement(
          "select",
          { name: _this3.props.name, ref: function(el) {
            _this3.Lb = el;
          }, tabIndex: -1, "aria-hidden": true, title: _this3.props.label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
          React153.createElement("option", { value: _this3.props.valueMap ? _this3.props.valueMap.call(void 0, value2) : value2 })
        );
      };
      _this3.renderListContainer = function() {
        var _a14;
        var _b3 = _this3.props, header = _b3.header, footer = _b3.footer, dir = _b3.dir, _c2 = _b3.data, data2 = _c2 === void 0 ? [] : _c2, size = _b3.size, groupField = _b3.groupField, groupStickyHeaderItemRender = _b3.groupStickyHeaderItemRender, list = _b3.list;
        var base = _this3.base;
        var popupSettings = base.getPopupSettings();
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
        var listContainerProps = {
          dir: dir !== void 0 ? dir : base.dirCalculated,
          width: popupWidth,
          popupSettings: {
            popupClass: classNames(popupSettings.popupClass, "k-list-container", "k-dropdownlist-popup"),
            className: popupSettings.className,
            animate: popupSettings.animate,
            anchor: _this3.element,
            show: opened,
            onOpen: _this3.onPopupOpened,
            onClose: _this3.onPopupClosed,
            appendTo: popupSettings.appendTo
          },
          itemsCount: [data2.length]
        };
        var group2 = _this3.state.group;
        if (group2 === void 0 && groupField !== void 0) {
          group2 = getItemValue(data2[0], groupField);
        }
        return React153.createElement(
          ListContainer_default,
          __assign79({}, listContainerProps),
          _this3.renderListFilter(),
          header && React153.createElement("div", { className: "k-list-header" }, header),
          React153.createElement(
            "div",
            { className: classNames("k-list", (_a14 = {}, _a14["k-list-".concat(sizeMap[size] || size)] = size, _a14["k-virtual-list"] = _this3.base.vs.enabled, _a14)) },
            _this3.renderDefaultItem(),
            !list && group2 && data2.length !== 0 && React153.createElement(GroupStickyHeader_default, { group: group2, groupMode: "modern", render: groupStickyHeaderItemRender }),
            _this3.renderList()
          ),
          footer && React153.createElement("div", { className: "k-list-footer" }, footer)
        );
      };
      _this3.renderList = function() {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, dataItemKey = _a14.dataItemKey, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2, groupHeaderItemRender = _a14.groupHeaderItemRender, listNoDataRender = _a14.listNoDataRender, itemRender = _a14.itemRender;
        var vs = _this3.base.vs;
        var skip3 = virtual.skip;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var popupSettings = _this3.base.getPopupSettings();
        var translate = "translateY(".concat(vs.translate, "px)");
        return React153.createElement(List_default, { id: _this3.base.listBoxId, show: opened, data: data2.slice(), focusedIndex: _this3.focusedIndex(), value: _this3.value, textField, valueField: dataItemKey, optionsGuid: _this3.base.guid, groupField: _this3.props.groupField, groupMode: "modern", listRef: function(list) {
          return vs.list = _this3.base.list = list;
        }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", listStyle: vs.enabled ? { transform: translate } : void 0, key: "listkey", skip: skip3, onClick: _this3.handleItemClick, itemRender, groupHeaderItemRender, noDataRender: listNoDataRender, onScroll: _this3.onScroll, wrapperRef: vs.scrollerRef, scroller: _this3.base.renderScrollElement() });
      };
      _this3.onScroll = function(event2) {
        var _a14 = _this3.base, vs = _a14.vs, list = _a14.list;
        vs.scrollHandler(event2);
        var groupField = _this3.props.groupField;
        var _b3 = _this3.props.data, data2 = _b3 === void 0 ? [] : _b3;
        if (!groupField || !data2.length) {
          return;
        }
        if (groupField) {
          var itemHeight = _this3.itemHeight = _this3.itemHeight || (vs.enabled ? vs.itemHeight : list ? list.children[0].offsetHeight : 0);
          var target = event2.target;
          var scrollTop = target.scrollTop - vs.skip * itemHeight;
          data2 = _this3.base.getGroupedDataModernMode(data2, groupField);
          var group2 = data2[0][groupField];
          for (var i = 1; i < data2.length; i++) {
            if (itemHeight * i > scrollTop) {
              break;
            }
            if (data2[i] && data2[i][groupField]) {
              group2 = data2[i][groupField];
            }
          }
          if (group2 !== _this3.state.group) {
            _this3.setState({
              group: group2
            });
          }
        }
      };
      _this3.renderListFilter = function() {
        var filterText = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        return _this3.props.filterable && React153.createElement(ListFilter_default, { value: filterText, ref: function(filter2) {
          return _this3.nb = filter2 && filter2.element;
        }, onChange: _this3.handleListFilterChange, onKeyDown: _this3.handleKeyDown, size: _this3.props.size, rounded: _this3.props.rounded, fillMode: _this3.props.fillMode });
      };
      _this3.renderDefaultItem = function() {
        var _a14 = _this3.props, textField = _a14.textField, defaultItem = _a14.defaultItem, dataItemKey = _a14.dataItemKey;
        return defaultItem !== void 0 && React153.createElement(ListDefaultItem_default, { defaultItem, textField, selected: areSame(_this3.value, defaultItem, dataItemKey), key: "defaultitemkey", onClick: _this3.handleDefaultItemClick });
      };
      _this3.search = function(event2) {
        clearTimeout(_this3.me);
        if (!_this3.props.filterable) {
          _this3.me = window.setTimeout(function() {
            return _this3.searchState.word = "";
          }, _this3.props.delay);
          _this3.selectNext(event2);
        }
      };
      _this3.selectNext = function(event2) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey;
        var mappedData = data2.map(function(item, idx) {
          return { item, itemIndex: idx };
        });
        var word = _this3.searchState.word;
        var last4 = _this3.searchState.last;
        var isInLoop = sameCharsOnly(word, last4);
        var dataLength = mappedData.length;
        var startIndex = Math.max(0, data2.findIndex(function(i) {
          return areSame(i, _this3.value, dataItemKey);
        }));
        var defaultItem;
        if (_this3.props.defaultItem) {
          defaultItem = { item: _this3.props.defaultItem, itemIndex: -1 };
          dataLength += 1;
          startIndex += 1;
        }
        startIndex += isInLoop ? 1 : 0;
        mappedData = shuffleData(mappedData, startIndex, defaultItem);
        var text, loopMatch, nextMatch, index = 0;
        var _c2 = _this3.props, textField = _c2.textField, ignoreCase = _c2.ignoreCase;
        for (; index < dataLength; index++) {
          text = getItemValue(mappedData[index].item, textField);
          loopMatch = isInLoop && matchText(text, last4, ignoreCase);
          nextMatch = matchText(text, word, ignoreCase);
          if (loopMatch || nextMatch) {
            index = mappedData[index].itemIndex;
            break;
          }
        }
        if (index !== dataLength) {
          var state = _this3.base.initState();
          state.syntheticEvent = event2;
          _this3.handleItemSelect(index, state);
          _this3.applyState(state);
          _this3.O = void 0;
        }
      };
      _this3.handleKeyDown = function(event2) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, filterable = _a14.filterable, disabled = _a14.disabled, _c2 = _a14.leftRightKeysNavigation, leftRightKeysNavigation = _c2 === void 0 ? true : _c2, _d = _a14.virtual, virtual = _d === void 0 ? { skip: 0, total: 0, pageSize: 0 } : _d;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var keyCode = event2.keyCode;
        var homeOrEndKeys = keyCode === Keys.home || keyCode === Keys.end;
        var upOrDownKeys = keyCode === Keys.up || keyCode === Keys.down;
        var shouldOpen = !opened && (event2.altKey && keyCode === Keys.down || keyCode === Keys.enter || keyCode === Keys.space);
        var shouldClose = opened && (event2.altKey && keyCode === Keys.up || keyCode === Keys.esc);
        var leftOrRightKeys = leftRightKeysNavigation && (keyCode === Keys.left || keyCode === Keys.right);
        var shouldNavigate = upOrDownKeys || !filterable && (leftOrRightKeys || homeOrEndKeys);
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (disabled) {
          return;
        } else if (homeOrEndKeys && _this3.base.vs.enabled) {
          if (keyCode === Keys.home) {
            if (virtual.skip !== 0) {
              _this3.base.triggerOnPageChange(state, 0, virtual.pageSize);
              _this3.Ma = true;
            } else {
              _this3.triggerOnChange(data2[0], state);
            }
          } else {
            if (virtual.skip < virtual.total - virtual.pageSize) {
              _this3.base.triggerOnPageChange(state, virtual.total - virtual.pageSize, virtual.pageSize);
              _this3.Ma = true;
            } else {
              _this3.triggerOnChange(data2[data2.length - 1], state);
            }
          }
        } else if (opened && keyCode === Keys.enter) {
          var focusedIndex = _this3.focusedIndex();
          if (focusedIndex !== void 0) {
            _this3.handleItemSelect(focusedIndex, state);
          }
          _this3.base.togglePopup(state);
          event2.preventDefault();
        } else if (shouldOpen || shouldClose) {
          _this3.base.togglePopup(state);
          event2.preventDefault();
        } else if (shouldNavigate) {
          _this3.onNavigate(state, keyCode);
          event2.preventDefault();
        }
        _this3.applyState(state);
      };
      _this3.handleItemClick = function(index, event2) {
        _this3.base.handleItemClick(index, event2);
        _this3.O = void 0;
      };
      _this3.handleFocus = function(event2) {
        if (_this3.Aa) {
          return;
        }
        _this3.base.handleFocus(event2);
      };
      _this3.handleBlur = function(event2) {
        if (_this3.Aa || !_this3.state.focused) {
          return;
        }
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var adaptive = _this3.props.adaptive;
        var _a14 = _this3.state.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14;
        var renderAdaptive = windowWidth <= MOBILE_MEDIUM_DEVISE2 && adaptive;
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        state.data.focused = false;
        state.events.push({ type: "onBlur" });
        if (opened && !renderAdaptive) {
          _this3.base.togglePopup(state);
        }
        _this3.applyState(state);
      };
      _this3.handleDefaultItemClick = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        _this3.base.togglePopup(state);
        _this3.triggerOnChange(_this3.props.defaultItem, state);
        _this3.applyState(state);
      };
      _this3.handleWrapperClick = function(event2) {
        if (event2.isPropagationStopped()) {
          return;
        }
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (!_this3.state.focused) {
          state.data.focused = true;
        }
        _this3.base.togglePopup(state);
        _this3.applyState(state);
      };
      _this3.handleKeyPress = function(event2) {
        if (_this3.props.filterable || event2.which === 0 || event2.keyCode === Keys.enter) {
          return;
        }
        var character = String.fromCharCode(event2.charCode || event2.keyCode);
        if (_this3.props.ignoreCase) {
          character = character.toLowerCase();
        }
        if (character === " ") {
          event2.preventDefault();
        }
        _this3.searchState = {
          word: _this3.searchState.word + character,
          last: _this3.searchState.last + character
        };
        _this3.search(event2);
      };
      _this3.handleListFilterChange = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2.syntheticEvent;
        if (_this3.props.filter === void 0) {
          state.data.text = event2.target.value;
        }
        _this3.base.filterChanged(event2.target.value, state);
        _this3.applyState(state);
        _this3.setState({ group: void 0 });
      };
      _this3.onPopupOpened = function() {
        if (_this3.nb) {
          _this3.focusElement(_this3.nb);
        }
        if (_this3.props.adaptive) {
          setTimeout(function() {
            if (_this3.nb) {
              _this3.focusElement(_this3.nb);
            }
          }, 300);
        }
      };
      _this3.onPopupClosed = function() {
        if (_this3.state.focused) {
          window.setTimeout(function() {
            if (_this3.state.focused && _this3.base.wrapper) {
              _this3.focusElement(_this3.base.wrapper);
            }
          });
        }
      };
      _this3.setValidity = function() {
        if (_this3.Lb && _this3.Lb.setCustomValidity) {
          _this3.Lb.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || VALIDATION_MESSAGE3);
        }
      };
      validatePackage2(packageMetadata12);
      return _this3;
    }
    Object.defineProperty(DropDownListWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "element", {
      /**
       * @hidden
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "value", {
      /**
       * The value of the DropDownList.
       */
      get: function() {
        var value2;
        if (this.O !== void 0) {
          value2 = this.O;
        } else if (this.props.value !== void 0) {
          value2 = this.props.value;
        } else if (this.state.value !== void 0) {
          value2 = this.state.value;
        } else if (this.props.defaultValue !== void 0) {
          value2 = this.props.defaultValue;
        }
        if (!isPresent4(value2) && this.props.defaultItem !== void 0) {
          value2 = this.props.defaultItem;
        }
        return value2;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "index", {
      /**
       * The index of the selected item.
       */
      get: function() {
        var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey;
        var value2 = this.value;
        return data2.findIndex(function(i) {
          return areSame(i, value2, dataItemKey);
        });
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the DropDownList.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the DropDownList is set.
       */
      get: function() {
        var customError = this.props.validationMessage !== void 0;
        var isValid = !this.required || this.value !== null && this.value !== "" && this.value !== void 0;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "validityStyles", {
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : DropDownListWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(DropDownListWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : DropDownListWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    DropDownListWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _a14;
      var _b3 = this.props, dataItemKey = _b3.dataItemKey, virtual = _b3.virtual, _c2 = _b3.groupField, groupField = _c2 === void 0 ? "" : _c2;
      var _d = this.props.data, data2 = _d === void 0 ? [] : _d;
      var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
      var opening = !prevOpened && opened;
      var closing = prevOpened && !opened;
      if (!this.base.getPopupSettings().animate) {
        if (opening) {
          this.onPopupOpened();
        } else if (closing) {
        }
      }
      if (virtual && virtual.total !== prevTotal) {
        this.base.vs.calcScrollElementHeight();
        this.base.vs.reset();
      } else {
        var selectedItem_1 = this.value;
        var prevSelectedItem = prevProps.value !== void 0 ? prevProps.value : prevState.value;
        var selectedItemIndex = data2.findIndex(function(i) {
          return areSame(i, selectedItem_1, dataItemKey);
        });
        if (groupField !== "") {
          selectedItemIndex = (_a14 = this.base.getGroupedDataModernMode(data2, groupField)) === null || _a14 === void 0 ? void 0 : _a14.indexOf(selectedItem_1);
        }
        var selectedItemChanged = !areSame(prevSelectedItem, selectedItem_1, dataItemKey);
        if (opening && virtual) {
          this.base.scrollToVirtualItem(virtual, selectedItemIndex);
        } else if (opening && !virtual) {
          this.onPopupOpened();
          if (data2 && data2.length !== 0) {
            this.base.resetGroupStickyHeader(data2[0][groupField], this);
          }
          this.base.scrollToItem(selectedItemIndex);
        } else if (opened && prevOpened && selectedItem_1 && selectedItemChanged && !this.Ma) {
          this.base.scrollToItem(selectedItemIndex);
        } else if (opened && prevOpened && this.Ma) {
          if (this.Ma && virtual && virtual.skip === 0) {
            this.base.vs.reset();
          } else if (this.Ma && virtual && virtual.skip === virtual.total - virtual.pageSize) {
            this.base.vs.scrollToEnd();
          }
        }
      }
      this.Ma = false;
      this.setValidity();
    };
    DropDownListWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      this.base.didMount();
      this.setValidity();
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    DropDownListWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    DropDownListWithoutContext2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      var btnAriaLabel = provideLocalizationService(this).toLanguageString(dropDownListArrowBtnAriaLabel, messages7[dropDownListArrowBtnAriaLabel]);
      var _b3 = this.props, style = _b3.style, className = _b3.className, label = _b3.label, dir = _b3.dir, virtual = _b3.virtual, size = _b3.size, rounded = _b3.rounded, fillMode = _b3.fillMode, adaptive = _b3.adaptive;
      var _c2 = this.state.windowWidth, windowWidth = _c2 === void 0 ? 0 : _c2;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var value2 = this.value;
      var text = getItemValue(value2, this.props.textField);
      var isValid = !this.validityStyles || this.validity.valid;
      var base = this.base;
      var vs = base.vs;
      var renderAdaptive = windowWidth <= MOBILE_MEDIUM_DEVISE2 && adaptive;
      vs.enabled = virtual !== void 0;
      if (virtual !== void 0) {
        base.vs.skip = virtual.skip;
        base.vs.total = virtual.total;
        base.vs.pageSize = virtual.pageSize;
      }
      var _d = this.props, dataItemKey = _d.dataItemKey, _e = _d.data, data2 = _e === void 0 ? [] : _e, disabled = _d.disabled, tabIndex = _d.tabIndex, loading = _d.loading, iconClassName = _d.iconClassName, valueRender = _d.valueRender;
      var focused = this.state.focused;
      var selectedIndex = data2.findIndex(function(i) {
        return areSame(i, value2, dataItemKey);
      });
      var valueDefaultRendering = React153.createElement(
        "span",
        { id: this.ea, className: "k-input-inner" },
        React153.createElement("span", { className: "k-input-value-text" }, text)
      );
      var valueElement = valueRender !== void 0 ? valueRender.call(void 0, valueDefaultRendering, value2) : valueDefaultRendering;
      var dropdownlist = React153.createElement(
        React153.Fragment,
        null,
        React153.createElement(
          "span",
          { ref: this.componentRef, className: classNames("k-dropdownlist k-picker", className, (_a14 = {}, _a14["k-picker-".concat(sizeMap[size] || size)] = size, _a14["k-rounded-".concat(roundedMap[rounded] || rounded)] = rounded, _a14["k-picker-".concat(fillMode)] = fillMode, _a14["k-focus"] = focused, _a14["k-disabled"] = disabled, _a14["k-invalid"] = !isValid, _a14["k-loading"] = loading, _a14["k-required"] = this.required, _a14)), style: !label ? style : __assign79(__assign79({}, style), { width: void 0 }), dir, onMouseDown: opened ? function(event2) {
            if (event2.target.nodeName !== "INPUT") {
              _this3.focusElement(_this3.base.wrapper);
              event2.preventDefault();
            }
          } : void 0, onFocus: this.handleFocus, onBlur: this.handleBlur, tabIndex: getTabIndex(tabIndex, disabled), accessKey: this.props.accessKey, onKeyDown: this.handleKeyDown, onKeyPress: this.handleKeyPress, onClick: disabled ? void 0 : this.handleWrapperClick, role: "combobox", "aria-required": this.required, "aria-disabled": disabled || void 0, "aria-haspopup": "listbox", "aria-expanded": opened || false, "aria-owns": this.base.listBoxId, "aria-activedescendant": opened ? "option-" + this.base.guid + "-" + (selectedIndex + (virtual ? virtual.skip : 0)) : void 0, "aria-label": this.props.ariaLabel || this.props.label, "aria-labelledby": this.props.ariaLabelledBy, "aria-describedby": this.props.ariaDescribedBy || this.ea, id: this.props.id, title: this.props.title },
          valueElement,
          loading && React153.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading" }),
          React153.createElement(Button, { tabIndex: -1, type: "button", "aria-label": btnAriaLabel, "aria-hidden": true, size, fillMode, iconClass: iconClassName, className: "k-input-button", rounded: null, themeColor: "base", icon: !iconClassName ? "caret-alt-down" : void 0, svgIcon: !iconClassName ? caretAltDownIcon : this.props.svgIcon, onMouseDown: function(e) {
            return _this3.state.focused && e.preventDefault();
          } }),
          this.dummySelect(value2),
          !renderAdaptive && this.renderListContainer()
        ),
        renderAdaptive && this.renderAdaptiveListContainer()
      );
      return label ? React153.createElement(FloatingLabel, { label, editorValue: text, editorValid: isValid, editorDisabled: this.props.disabled, style: { width: style ? style.width : void 0 }, children: dropdownlist }) : dropdownlist;
    };
    DropDownListWithoutContext2.prototype.onNavigate = function(state, keyCode) {
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, defaultItem = _a14.defaultItem, dataItemKey = _a14.dataItemKey, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0, total: 0, pageSize: 0 } : _c2;
      var vs = this.base.vs;
      var value2 = this.value;
      var index = data2.findIndex(function(i) {
        return areSame(i, value2, dataItemKey);
      });
      var newIndex = this.base.navigation.navigate({
        current: virtual.skip + index,
        max: (vs.enabled ? virtual.total : data2.length) - 1,
        min: defaultItem !== void 0 ? -1 : 0,
        keyCode
      });
      if (newIndex !== void 0) {
        this.handleItemSelect(newIndex, state);
      }
      this.applyState(state);
    };
    DropDownListWithoutContext2.prototype.renderAdaptiveListContainer = function() {
      var _a14;
      var _this3 = this;
      var _b3 = this.state.windowWidth, windowWidth = _b3 === void 0 ? 0 : _b3;
      var _c2 = this.props, header = _c2.header, footer = _c2.footer, size = _c2.size, adaptiveTitle = _c2.adaptiveTitle, groupField = _c2.groupField, groupStickyHeaderItemRender = _c2.groupStickyHeaderItemRender, list = _c2.list, _d = _c2.data, data2 = _d === void 0 ? [] : _d;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var actionSheetProps = {
        navigatable: false,
        navigatableElements: [],
        expand: opened,
        animation: true,
        onClose: function(event2) {
          return _this3.handleWrapperClick(event2);
        },
        animationStyles: windowWidth <= MOBILE_SMALL_DEVISE3 ? { top: 0, width: "100%", height: "100%" } : void 0,
        className: windowWidth <= MOBILE_SMALL_DEVISE3 ? "k-adaptive-actionsheet k-actionsheet-fullscreen" : "k-adaptive-actionsheet k-actionsheet-bottom"
      };
      var group2 = this.state.group;
      if (group2 === void 0 && groupField !== void 0) {
        group2 = getItemValue(data2[0], groupField);
      }
      return React153.createElement(
        React153.Fragment,
        null,
        React153.createElement(
          ActionSheet,
          __assign79({}, actionSheetProps),
          React153.createElement(
            ActionSheetHeader,
            { className: "k-text-center" },
            React153.createElement(
              "div",
              { className: "k-actionsheet-titlebar-group k-hbox" },
              React153.createElement(
                "div",
                { className: "k-actionsheet-title" },
                React153.createElement("div", null, adaptiveTitle)
              ),
              React153.createElement(
                "div",
                { className: "k-actionsheet-actions" },
                React153.createElement(Button, { tabIndex: 0, "aria-label": "Cancel", "aria-disabled": "false", type: "button", fillMode: "flat", onClick: this.handleWrapperClick, icon: "x", svgIcon: xIcon })
              )
            ),
            React153.createElement("div", { className: "k-actionsheet-titlebar-group k-actionsheet-filter" }, this.renderListFilter())
          ),
          React153.createElement(
            ActionSheetContent,
            { className: "!k-overflow-hidden" },
            header && React153.createElement("div", { className: "k-list-header" }, header),
            React153.createElement(
              "div",
              { className: classNames("k-list", (_a14 = {}, _a14["k-list-".concat(sizeMap[size] || size)] = size, _a14["k-virtual-list"] = this.base.vs.enabled, _a14)) },
              this.renderDefaultItem(),
              !list && group2 && data2.length !== 0 && React153.createElement(GroupStickyHeader_default, { group: group2, groupMode: "modern", render: groupStickyHeaderItemRender }),
              this.renderList()
            ),
            footer && React153.createElement("div", { className: "k-list-footer" }, footer)
          )
        )
      );
    };
    DropDownListWithoutContext2.prototype.focusedIndex = function() {
      var filterText = isPresent4(this.props.filter) ? this.props.filter : this.state.text;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2, dataItemKey = _a14.dataItemKey, textField = _a14.textField, focusedItemIndex = _a14.focusedItemIndex;
      var value2 = this.value;
      var selectedIndex = data2.findIndex(function(i) {
        return areSame(i, value2, dataItemKey);
      });
      var hasSelected = !(selectedIndex < 0 && !this.props.defaultItem);
      if (!hasSelected && filterText && virtual.skip === 0) {
        return focusedItemIndex ? focusedItemIndex(data2, filterText, textField) : data2.indexOf(getFocusedItem(data2, filterText, textField));
      } else {
        return !hasSelected && virtual.skip === 0 ? 0 : void 0;
      }
    };
    DropDownListWithoutContext2.prototype.focusElement = function(element6) {
      var _this3 = this;
      this.Aa = true;
      element6.focus();
      window.setTimeout(function() {
        return _this3.Aa = false;
      }, 30);
    };
    DropDownListWithoutContext2.prototype.triggerOnChange = function(item, state) {
      if (areSame(this.value, item, this.props.dataItemKey)) {
        return;
      }
      if (this.props.value === void 0) {
        state.data.value = item;
      }
      this.O = item;
      state.events.push({ type: "onChange" });
    };
    DropDownListWithoutContext2.prototype.applyState = function(state) {
      this.base.applyState(state);
      this.O = void 0;
    };
    DropDownListWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    DropDownListWithoutContext2.displayName = "DropDownList";
    DropDownListWithoutContext2.propTypes = __assign79({ delay: PropTypes70.number, ignoreCase: PropTypes70.bool, iconClassName: PropTypes70.string, svgIcon: svgIconPropType, defaultItem: PropTypes70.any, valueRender: PropTypes70.func, valueMap: PropTypes70.func, validationMessage: PropTypes70.string, required: PropTypes70.bool, id: PropTypes70.string, ariaLabelledBy: PropTypes70.string, ariaDescribedBy: PropTypes70.string, ariaLabel: PropTypes70.string, leftRightKeysNavigation: PropTypes70.bool, title: PropTypes70.string, groupField: PropTypes70.string, list: PropTypes70.any }, DropDownBase_default.propTypes);
    DropDownListWithoutContext2.defaultProps = __assign79(__assign79({ delay: 500, tabIndex: 0, ignoreCase: true }, DropDownBase_default.defaultProps), { required: false, size: "medium", rounded: "medium", fillMode: "solid", groupMode: "modern" });
    return DropDownListWithoutContext2;
  }(React153.Component)
);
var DropDownListPropsContext = createPropsContext();
var DropDownList = withPropsContext(DropDownListPropsContext, DropDownListWithoutContext);
DropDownList.displayName = "KendoReactDropDownList";

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/SearchBar.js
var React154 = __toESM(require_react());
var __extends59 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SearchBar = (
  /** @class */
  function(_super) {
    __extends59(SearchBar2, _super);
    function SearchBar2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.j = null;
      return _this3;
    }
    Object.defineProperty(SearchBar2.prototype, "input", {
      /**
       * @hidden
       */
      get: function() {
        return this.j;
      },
      enumerable: false,
      configurable: true
    });
    SearchBar2.prototype.componentDidUpdate = function(prevProps) {
      var prevValue = prevProps.value;
      var prevSuggestedText = prevProps.suggestedText;
      var _a14 = this.props, value2 = _a14.value, suggestedText = _a14.suggestedText, focused = _a14.focused;
      var input = this.input;
      var valueChanged = prevValue !== value2 || suggestedText !== prevSuggestedText;
      var deleting = valueChanged && prevValue.startsWith(value2) && !(prevSuggestedText && suggestedText && prevSuggestedText.endsWith(suggestedText));
      var activeElement = getActiveElement(document);
      if (focused && input && activeElement !== input) {
        input.focus();
      }
      if (suggestedText && valueChanged && !deleting && input) {
        input.setSelectionRange(value2.length - suggestedText.length, value2.length);
      }
    };
    SearchBar2.prototype.render = function() {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.expanded, expanded = _b3 === void 0 ? false : _b3, disabled = _a14.disabled, _c2 = _a14.role, role = _c2 === void 0 ? "listbox" : _c2, render5 = _a14.render;
      var searchbar = React154.createElement("input", { autoComplete: "off", id: this.props.id, type: "text", key: "searchbar", size: this.props.size, placeholder: this.props.placeholder, className: "k-input-inner", tabIndex: this.props.tabIndex, accessKey: this.props.accessKey, role, name: this.props.name, value: this.props.value, onChange: this.props.onChange, ref: function(input) {
        return _this3.j = input;
      }, onKeyDown: this.props.onKeyDown, onFocus: this.props.onFocus, onBlur: this.props.onBlur, onClick: this.props.onClick, "aria-disabled": disabled || void 0, disabled: disabled || void 0, readOnly: this.props.readOnly || void 0, title: this.props.title, "aria-haspopup": "listbox", "aria-expanded": expanded, "aria-owns": this.props.owns, "aria-activedescendant": expanded ? this.props.activedescendant : void 0, "aria-describedby": this.props.ariaDescribedBy, "aria-labelledby": this.props.ariaLabelledBy, "aria-required": this.props.ariaRequired });
      return render5 ? render5.call(void 0, searchbar) : searchbar;
    };
    return SearchBar2;
  }(React154.Component)
);
var SearchBar_default = SearchBar;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/ClearButton.js
var React155 = __toESM(require_react());
var __extends60 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var ClearButton = (
  /** @class */
  function(_super) {
    __extends60(ClearButton2, _super);
    function ClearButton2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.onMouseDown = function(e) {
        return e.preventDefault();
      };
      return _this3;
    }
    ClearButton2.prototype.render = function() {
      var title = provideLocalizationService(this).toLanguageString(clear2, messages7[clear2]);
      return React155.createElement(
        "span",
        { className: "k-clear-value", role: "button", onClick: this.props.onClick, onMouseDown: this.onMouseDown, tabIndex: -1, title, key: "clearbutton" },
        React155.createElement(IconWrap, { name: "x", icon: xIcon })
      );
    };
    return ClearButton2;
  }(React155.Component)
);
var ClearButton_default = ClearButton;
registerForLocalization(ClearButton);

// node_modules/@progress/kendo-react-dropdowns/dist/es/ComboBox/ComboBox.js
var React156 = __toESM(require_react());
var PropTypes71 = __toESM(require_prop_types());
var __extends61 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign80 = function() {
  __assign80 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign80.apply(this, arguments);
};
var VALIDATION_MESSAGE4 = "Please enter a valid value!";
var sizeMap2 = kendoThemeMaps.sizeMap, roundedMap2 = kendoThemeMaps.roundedMap;
var ComboBoxWithoutContext = (
  /** @class */
  function(_super) {
    __extends61(ComboBoxWithoutContext2, _super);
    function ComboBoxWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {};
      _this3.base = new DropDownBase_default(_this3);
      _this3.i = null;
      _this3.ea = guid();
      _this3.B = "";
      _this3.xc = false;
      _this3.j = null;
      _this3.yc = null;
      _this3.itemHeight = 0;
      _this3.focus = function() {
        if (_this3.j) {
          _this3.j.focus();
        }
      };
      _this3.handleItemSelect = function(index, state) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, virtual = _a14.virtual, dataItemKey = _a14.dataItemKey;
        var skip3 = virtual ? virtual.skip : 0;
        var item = data2[index - skip3];
        var newSelected = !areSame(item, _this3.value, dataItemKey);
        _this3.triggerOnChange(item, state);
        if (_this3.state.text !== void 0) {
          state.data.text = void 0;
        }
        if (newSelected) {
          _this3.base.triggerPageChangeCornerItems(item, state);
        }
      };
      _this3.onPopupOpened = function() {
        setTimeout(function() {
          if (_this3.mobileMode && _this3.yc) {
            _this3.xc = true;
            _this3.yc.focus();
            _this3.xc = false;
          }
        }, 300);
      };
      _this3.componentRef = function(element6) {
        _this3.i = element6;
        _this3.base.wrapper = element6;
      };
      _this3.toggleBtnClick = function(event2) {
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        _this3.base.togglePopup(state);
        if (!opened && _this3.mobileMode) {
          var mobileText = _this3.props.adaptiveFilter !== void 0 ? _this3.props.adaptiveFilter : _this3.state.text || null;
          _this3.base.filterChanged(mobileText, state);
        }
        _this3.applyState(state);
      };
      _this3.renderMobileListFilter = function() {
        var mobileText = _this3.props.adaptiveFilter !== void 0 ? _this3.props.adaptiveFilter : _this3.state.text;
        var selectedItemText = getItemValue(_this3.value, _this3.props.textField);
        var mobileInputText = isPresent4(mobileText) ? mobileText : selectedItemText;
        return React156.createElement(ListFilter_default, { value: mobileInputText, ref: function(filter2) {
          return _this3.yc = filter2 && filter2.element;
        }, onChange: _this3.handleMobileFilterChange, onKeyDown: _this3.onInputKeyDown, size: _this3.props.size, rounded: _this3.props.rounded, fillMode: _this3.props.fillMode });
      };
      _this3.handleMobileFilterChange = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2.syntheticEvent;
        state.data.text = event2.target.value;
        _this3.base.filterChanged(event2.target.value, state);
        _this3.applyState(state);
      };
      _this3.onScroll = function(event2) {
        var _a14 = _this3.base, vs = _a14.vs, list = _a14.list;
        vs.scrollHandler(event2);
        var groupField = _this3.props.groupField;
        var _b3 = _this3.props.data, data2 = _b3 === void 0 ? [] : _b3;
        if (!groupField || !data2.length) {
          return;
        }
        var itemHeight = _this3.itemHeight = _this3.itemHeight || (vs.enabled ? vs.itemHeight : list ? list.children[0].offsetHeight : 0);
        var target = event2.target;
        var scrollTop = target.scrollTop - vs.skip * itemHeight;
        if (_this3.props.groupMode === "modern") {
          data2 = _this3.base.getGroupedDataModernMode(data2, groupField);
        }
        var group2 = data2[0][groupField];
        for (var i = 1; i < data2.length; i++) {
          if (itemHeight * i > scrollTop) {
            break;
          }
          if (data2[i] && data2[i][groupField]) {
            group2 = data2[i][groupField];
          }
        }
        if (group2 !== _this3.state.group) {
          _this3.setState({
            group: group2
          });
          if (_this3.props.onGroupScroll) {
            _this3.props.onGroupScroll.call(void 0, { group: group2 });
          }
        }
      };
      _this3.handleItemClick = function(index, event2) {
        _this3.base.handleItemClick(index, event2);
        _this3.O = void 0;
      };
      _this3.handleBlur = function(event2) {
        if (_this3.state.focused && !_this3.xc) {
          var state = _this3.base.initState();
          state.data.focused = false;
          state.events.push({ type: "onBlur" });
          state.syntheticEvent = event2;
          _this3.applyValueOnRejectSuggestions(event2.currentTarget.value, state);
        }
      };
      _this3.onInputClick = function(event2) {
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var mobileText = _this3.props.adaptiveFilter !== void 0 ? _this3.props.adaptiveFilter : _this3.state.text || null;
        if (!opened && _this3.mobileMode) {
          var state = _this3.base.initState();
          state.syntheticEvent = event2;
          _this3.base.togglePopup(state);
          _this3.base.filterChanged(mobileText, state);
          _this3.applyState(state);
        }
      };
      _this3.onInputKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (!event2.altKey && (keyCode === Keys.up || keyCode === Keys.down)) {
          event2.preventDefault();
          _this3.onNavigate(state, keyCode);
          _this3.applyState(state);
          return;
        }
        var togglePopup = function() {
          event2.preventDefault();
          _this3.base.togglePopup(state);
          _this3.applyState(state);
        };
        if (opened) {
          if (event2.altKey && keyCode === Keys.up) {
            togglePopup();
          } else if (keyCode === Keys.enter) {
            event2.preventDefault();
            _this3.applyValueOnEnter(event2.currentTarget.value, state);
          } else if (keyCode === Keys.esc) {
            _this3.applyValueOnRejectSuggestions(event2.currentTarget.value, state);
          }
        } else if (event2.altKey && keyCode === Keys.down) {
          togglePopup();
        }
      };
      _this3.inputOnChange = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var input = event2.currentTarget;
        var value2 = input.value;
        if (_this3.props.suggest) {
          var selectionAtEnd = input.selectionEnd === value2.length;
          var prevText = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
          if (!isPresent4(prevText)) {
            prevText = getItemValue(_this3.value, _this3.props.textField) || "";
          }
          var deletedSuggestion = prevText && prevText === value2;
          var deleting = prevText && prevText.length > value2.length;
          if (deletedSuggestion || deleting || !selectionAtEnd) {
            _this3.B = "";
          } else {
            _this3.suggestValue(value2);
          }
        }
        if (_this3.props.filter === void 0) {
          state.data.text = value2;
        }
        if (_this3.state.focusedItem !== void 0) {
          state.data.focusedItem = void 0;
        }
        if (!opened) {
          _this3.base.togglePopup(state);
        }
        _this3.base.filterChanged(value2, state);
        _this3.applyState(state);
        _this3.setState({ group: void 0 });
      };
      _this3.clearButtonClick = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        event2.stopPropagation();
        _this3.B = "";
        _this3.base.filterChanged("", state);
        if (_this3.props.filter === void 0 && _this3.state.text !== void 0) {
          state.data.text = void 0;
        }
        _this3.triggerOnChange(null, state);
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var isAdaptive = _this3.mobileMode;
        if (opened && !isAdaptive) {
          _this3.base.togglePopup(state);
        }
        _this3.applyState(state);
      };
      _this3.setValidity = function() {
        if (_this3.j && _this3.j.setCustomValidity) {
          _this3.j.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || VALIDATION_MESSAGE4);
        }
      };
      validatePackage2(packageMetadata12);
      return _this3;
    }
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "element", {
      /** @hidden */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the ComboBox.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE2 && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "value", {
      /**
       * The value of the ComboBox.
       */
      get: function() {
        if (this.O !== void 0) {
          return this.O;
        } else if (this.props.value !== void 0) {
          return this.props.value;
        } else if (this.state.value !== void 0) {
          return this.state.value;
        } else if (this.props.defaultValue !== void 0) {
          return this.props.defaultValue;
        }
        return void 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "index", {
      /**
       * The index of the selected item.
       */
      get: function() {
        var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey;
        var value2 = this.value;
        return data2.findIndex(function(i) {
          return areSame(i, value2, dataItemKey);
        });
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the ComboBox.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the component is set.
       */
      get: function() {
        var customError = this.props.validationMessage !== void 0;
        var isValid = !this.required || this.value !== null && this.value !== "" && this.value !== void 0;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "validityStyles", {
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : ComboBoxWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(ComboBoxWithoutContext2.prototype, "required", {
      /** @hidden */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : ComboBoxWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    ComboBoxWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _a14;
      var _b3 = this.props, dataItemKey = _b3.dataItemKey, virtual = _b3.virtual, _c2 = _b3.groupField, groupField = _c2 === void 0 ? "" : _c2, _d = _b3.data, data2 = _d === void 0 ? [] : _d;
      var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
      var opening = !prevOpened && opened;
      var selectedItem = this.value;
      this.oe = selectedItem;
      if (virtual && virtual.total !== prevTotal) {
        this.base.vs.calcScrollElementHeight();
        this.base.vs.reset();
      } else {
        var prevSelectedItem = prevProps.value !== void 0 ? prevProps.value : prevState.value;
        var selectedItemIndex = data2.findIndex(function(i) {
          return areSame(i, selectedItem, dataItemKey);
        });
        if (this.props.groupMode === "modern") {
          selectedItemIndex = (_a14 = this.base.getGroupedDataModernMode(data2, groupField)) === null || _a14 === void 0 ? void 0 : _a14.indexOf(selectedItem);
        }
        var selectedItemChanged = !areSame(prevSelectedItem, selectedItem, dataItemKey);
        if (opening && virtual) {
          this.base.scrollToVirtualItem(virtual, selectedItemIndex);
        } else if (opening && !virtual) {
          this.onPopupOpened();
          if (data2 && data2.length !== 0) {
            this.base.resetGroupStickyHeader(data2[0][groupField], this);
          }
          this.base.scrollToItem(selectedItemIndex);
        } else if (opened && prevOpened && selectedItem && selectedItemChanged) {
          this.base.scrollToItem(selectedItemIndex);
        }
      }
      if (opening && this.j) {
        this.j.focus();
      }
      this.setValidity();
    };
    ComboBoxWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      this.base.didMount();
      this.setValidity();
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    ComboBoxWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    ComboBoxWithoutContext2.prototype.render = function() {
      var _a14;
      var btnAriaLabelExpand = provideLocalizationService(this).toLanguageString(comboArrowBtnAriaLabelExpand, messages7[comboArrowBtnAriaLabelExpand]);
      var btnAriaLabelCollapse = provideLocalizationService(this).toLanguageString(comboArrowBtnAriaLabelCollapse, messages7[comboArrowBtnAriaLabelCollapse]);
      var _b3 = this.props, dir = _b3.dir, disabled = _b3.disabled, _c2 = _b3.clearButton, clearButton = _c2 === void 0 ? ComboBoxWithoutContext2.defaultProps.clearButton : _c2, label = _b3.label, textField = _b3.textField, adaptive = _b3.adaptive, className = _b3.className, style = _b3.style, loading = _b3.loading, iconClassName = _b3.iconClassName, virtual = _b3.virtual, size = _b3.size, rounded = _b3.rounded, fillMode = _b3.fillMode, _d = _b3.opened, opened = _d === void 0 ? this.state.opened : _d, placeholder = _b3.placeholder;
      var _e = this.state.windowWidth, windowWidth = _e === void 0 ? 0 : _e;
      var isValid = !this.validityStyles || this.validity.valid;
      var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
      var selectedItemText = getItemValue(this.value, textField);
      var inputText = isPresent4(text) ? text : selectedItemText;
      var renderClearButton = clearButton && (!!inputText || isPresent4(this.value));
      var base = this.base;
      var vs = base.vs;
      var id = this.props.id || this.ea;
      var renderAdaptive = windowWidth <= MOBILE_MEDIUM_DEVISE2 && adaptive;
      vs.enabled = virtual !== void 0;
      if (virtual !== void 0) {
        vs.skip = virtual.skip;
        vs.total = virtual.total;
        vs.pageSize = virtual.pageSize;
      }
      var combobox = React156.createElement(
        React156.Fragment,
        null,
        React156.createElement(
          "span",
          { className: classNames("k-combobox k-input", (_a14 = {}, _a14["k-input-".concat(sizeMap2[size] || size)] = size, _a14["k-rounded-".concat(roundedMap2[rounded] || rounded)] = rounded, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-invalid"] = !isValid, _a14["k-loading"] = loading, _a14["k-required"] = this.required, _a14["k-disabled"] = disabled, _a14), className), ref: this.componentRef, style: !label ? style : __assign80(__assign80({}, style), { width: void 0 }), dir },
          this.renderSearchBar(inputText || "", id, placeholder),
          renderClearButton && !loading && React156.createElement(ClearButton_default, { onClick: this.clearButtonClick, key: "clearbutton" }),
          loading && React156.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading", key: "loading" }),
          React156.createElement(Button, { tabIndex: -1, type: "button", "aria-label": opened ? btnAriaLabelCollapse : btnAriaLabelExpand, icon: !iconClassName ? "caret-alt-down" : void 0, svgIcon: !iconClassName ? caretAltDownIcon : this.props.svgIcon, iconClass: iconClassName, size, fillMode, rounded: null, themeColor: "base", className: "k-input-button", onClick: this.toggleBtnClick, onMouseDown: function(e) {
            return e.preventDefault();
          } }),
          !renderAdaptive && this.renderListContainer()
        ),
        renderAdaptive && this.renderAdaptiveListContainer()
      );
      return label ? React156.createElement(FloatingLabel, { label, editorId: id, editorValue: inputText, editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: combobox }) : combobox;
    };
    ComboBoxWithoutContext2.prototype.onNavigate = function(state, keyCode) {
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2;
      var text = this.props.filter ? this.props.filter : this.state.text;
      var focusedIndex = this.getFocusedIndex();
      var vs = this.base.vs;
      var value2 = this.value;
      this.B = "";
      if (focusedIndex !== -1 && !isPresent4(value2)) {
        this.handleItemSelect(focusedIndex, state);
      } else if (text === "") {
        this.handleItemSelect(0, state);
      } else {
        var currentIndex = virtual.skip + focusedIndex;
        var newIndex = this.base.navigation.navigate({
          keyCode,
          current: currentIndex,
          max: (vs.enabled ? vs.total : data2.length) - 1,
          min: 0
        });
        if (newIndex !== void 0) {
          this.handleItemSelect(newIndex, state);
        }
      }
    };
    ;
    ComboBoxWithoutContext2.prototype.applyValueOnEnter = function(value2, state) {
      var _a14;
      var _b3 = this.props, _c2 = _b3.data, data2 = _c2 === void 0 ? [] : _c2, textField = _b3.textField, allowCustom = _b3.allowCustom;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var currentValueText = getItemValue(this.value, textField);
      var valueIndex = currentValueText === value2 ? this.index : getItemIndexByText(data2, value2, textField);
      var itemSelected = valueIndex !== -1;
      var newSelected = void 0;
      this.B = "";
      if (itemSelected) {
        newSelected = data2[valueIndex];
      } else {
        if (allowCustom) {
          newSelected = textField !== void 0 ? (_a14 = {}, _a14[textField] = value2, _a14) : value2;
        } else {
          return this.selectFocusedItem(value2, state);
        }
      }
      this.triggerOnChange(newSelected, state);
      if (opened) {
        this.base.togglePopup(state);
      }
      if (this.props.filter === void 0 && this.state.text !== void 0) {
        state.data.text = void 0;
      }
      this.applyState(state);
    };
    ComboBoxWithoutContext2.prototype.applyValueOnRejectSuggestions = function(text, state) {
      var _a14;
      var _b3 = this.props, _c2 = _b3.data, data2 = _c2 === void 0 ? [] : _c2, textField = _b3.textField, allowCustom = _b3.allowCustom;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var valueItemText = getItemValue(this.value, textField);
      var isMobileDevice = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE2;
      this.B = "";
      if (text === valueItemText || text === "" && !isPresent4(valueItemText)) {
        if (opened && !isMobileDevice) {
          this.base.togglePopup(state);
        }
        return this.applyState(state);
      }
      var valueIndex = getItemIndexByText(data2, text, textField, true);
      var itemSelected = valueIndex !== -1;
      var newSelected = null;
      if (itemSelected) {
        newSelected = data2[valueIndex];
      } else if (allowCustom) {
        newSelected = text ? textField ? (_a14 = {}, _a14[textField] = text, _a14) : text : null;
      }
      this.triggerOnChange(newSelected, state);
      if (this.state.text !== void 0) {
        state.data.text = void 0;
        this.base.filterChanged("", state);
      }
      if (opened && !isMobileDevice) {
        this.base.togglePopup(state);
      }
      this.applyState(state);
    };
    ComboBoxWithoutContext2.prototype.selectFocusedItem = function(text, state) {
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2, _d = _a14.focusedItemIndex, focusedItemIndex = _d === void 0 ? itemIndexStartsWith : _d;
      var skip3 = virtual.skip;
      var focusedIndex = text === "" && skip3 === 0 ? 0 : focusedItemIndex(data2, text, textField);
      if (focusedIndex !== -1) {
        this.handleItemSelect(focusedIndex + skip3, state);
      } else {
        this.triggerOnChange(null, state);
        if (this.state.text !== void 0) {
          state.data.text = void 0;
        }
      }
      if (opened) {
        this.base.togglePopup(state);
      }
      return this.applyState(state);
    };
    ComboBoxWithoutContext2.prototype.renderAdaptiveListContainer = function() {
      var _a14;
      var _this3 = this;
      var _b3 = this.state.windowWidth, windowWidth = _b3 === void 0 ? 0 : _b3;
      var _c2 = this.props, header = _c2.header, footer = _c2.footer, size = _c2.size, _d = _c2.data, data2 = _d === void 0 ? [] : _d, groupField = _c2.groupField, groupMode = _c2.groupMode, list = _c2.list, virtual = _c2.virtual, adaptiveTitle = _c2.adaptiveTitle, groupStickyHeaderItemRender = _c2.groupStickyHeaderItemRender;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var group2 = this.state.group;
      if (group2 === void 0 && groupField !== void 0) {
        group2 = getItemValue(data2[0], groupField);
      }
      var actionSheetProps = {
        navigatable: false,
        navigatableElements: [],
        expand: opened,
        animation: true,
        onClose: function(event2) {
          return _this3.toggleBtnClick(event2);
        },
        animationStyles: windowWidth <= MOBILE_SMALL_DEVISE3 ? { top: 0, width: "100%", height: "100%" } : void 0,
        className: windowWidth <= MOBILE_SMALL_DEVISE3 ? "k-adaptive-actionsheet k-actionsheet-fullscreen" : "k-adaptive-actionsheet k-actionsheet-bottom"
      };
      return React156.createElement(
        React156.Fragment,
        null,
        React156.createElement(
          ActionSheet,
          __assign80({}, actionSheetProps),
          React156.createElement(
            ActionSheetHeader,
            { className: "k-text-center" },
            React156.createElement(
              "div",
              { className: "k-actionsheet-titlebar-group k-hbox" },
              React156.createElement(
                "div",
                { className: "k-actionsheet-title" },
                React156.createElement("div", null, adaptiveTitle)
              ),
              React156.createElement(
                "div",
                { className: "k-actionsheet-actions" },
                React156.createElement(Button, { tabIndex: 0, "aria-label": "Cancel", "aria-disabled": "false", type: "button", fillMode: "flat", onClick: this.toggleBtnClick, icon: "x", svgIcon: xIcon })
              )
            ),
            React156.createElement("div", { className: "k-actionsheet-titlebar-group k-actionsheet-filter" }, this.renderMobileListFilter())
          ),
          React156.createElement(
            ActionSheetContent,
            { className: "!k-overflow-hidden" },
            React156.createElement(
              "div",
              { className: "k-list-container" },
              React156.createElement(
                "div",
                { className: classNames((_a14 = {}, _a14["k-list"] = !list, _a14["k-list-lg"] = true, _a14["k-virtual-list"] = virtual, _a14["k-data-table"] = list, _a14["k-table-".concat(sizeMap2[size] || size)] = list && size, _a14)) },
                header && React156.createElement("div", { className: "k-table-header" }, header),
                !list && group2 && data2.length !== 0 && React156.createElement(GroupStickyHeader_default, { group: group2, groupMode, render: groupStickyHeaderItemRender }),
                this.renderList(),
                footer && React156.createElement("div", { className: "k-list-footer" }, footer)
              )
            )
          )
        )
      );
    };
    ComboBoxWithoutContext2.prototype.renderListContainer = function() {
      var _a14, _b3;
      var base = this.base;
      var _c2 = this.props, dir = _c2.dir, header = _c2.header, footer = _c2.footer, _d = _c2.data, data2 = _d === void 0 ? [] : _d, groupField = _c2.groupField, groupMode = _c2.groupMode, size = _c2.size, list = _c2.list, virtual = _c2.virtual, groupStickyHeaderItemRender = _c2.groupStickyHeaderItemRender;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var popupSettings = base.getPopupSettings();
      var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
      var group2 = this.state.group;
      if (group2 === void 0 && groupField !== void 0) {
        group2 = getItemValue(data2[0], groupField);
      }
      return React156.createElement(
        ListContainer_default,
        { width: popupWidth, popupSettings: {
          animate: popupSettings.animate,
          anchor: this.element,
          show: opened,
          popupClass: classNames(popupSettings.popupClass, "k-list-container", "k-combobox-popup"),
          className: popupSettings.className,
          appendTo: popupSettings.appendTo
        }, dir: dir !== void 0 ? dir : this.base.dirCalculated, itemsCount: [data2.length] },
        React156.createElement(
          "div",
          { className: classNames((_a14 = {}, _a14["k-list"] = !list, _a14["k-list-".concat(sizeMap2[size] || size)] = !list && size, _a14["k-virtual-list"] = virtual, _a14["k-data-table"] = list, _a14["k-table-".concat(sizeMap2[size] || size)] = list && size, _a14)) },
          header && React156.createElement("div", { className: "k-table-header" }, header),
          !list && group2 && data2.length !== 0 && React156.createElement(GroupStickyHeader_default, { group: group2, groupMode, render: groupStickyHeaderItemRender }),
          this.renderList(),
          footer && React156.createElement("div", { className: classNames((_b3 = {}, _b3["k-list-footer"] = !this.props.footerClassName, _b3), this.props.footerClassName) }, footer)
        )
      );
    };
    ComboBoxWithoutContext2.prototype.renderList = function() {
      var _a14;
      var _this3 = this;
      var base = this.base;
      var _b3 = this.props, textField = _b3.textField, dataItemKey = _b3.dataItemKey, listNoDataRender = _b3.listNoDataRender, itemRender = _b3.itemRender, groupHeaderItemRender = _b3.groupHeaderItemRender, _c2 = _b3.data, data2 = _c2 === void 0 ? [] : _c2, _d = _b3.virtual, virtual = _d === void 0 ? { skip: 0 } : _d;
      var popupSettings = base.getPopupSettings();
      var vs = base.vs;
      var skip3 = virtual.skip;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var translate = "translateY(".concat(vs.translate, "px)");
      var focusedIndex = opened ? this.getFocusedIndex() : void 0;
      var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
      var selectedItemText = getItemValue(this.value, textField);
      var value2 = isPresent4(text) && text !== selectedItemText ? null : this.value;
      var ListComponent = this.props.list || List_default;
      return React156.createElement(ListComponent, { id: base.listBoxId, virtual: Boolean(virtual), show: opened, data: data2, focusedIndex, value: value2, textField, valueField: dataItemKey, groupField: this.props.groupField, groupMode: this.props.groupMode, isMultiColumn: this.props.isMultiColumn, optionsGuid: base.guid, listRef: function(list) {
        vs.list = _this3.base.list = list;
        _this3.itemHeight = 0;
      }, wrapperStyle: this.state.windowWidth && this.state.windowWidth > MOBILE_MEDIUM_DEVISE2 ? { maxHeight: popupSettings.height } : {}, wrapperCssClass: classNames("k-list-content", (_a14 = {}, _a14["k-list-scroller"] = !virtual, _a14)), listStyle: vs.enabled ? { transform: translate } : void 0, key: "listkey", skip: skip3, onClick: this.handleItemClick, itemRender, groupHeaderItemRender, noDataRender: listNoDataRender, onMouseDown: function(e) {
        return e.preventDefault();
      }, onScroll: this.onScroll, wrapperRef: vs.scrollerRef, scroller: this.base.renderScrollElement() });
    };
    ComboBoxWithoutContext2.prototype.renderSearchBar = function(text, id, placeholder) {
      var _this3 = this;
      var _a14 = this.props, tabIndex = _a14.tabIndex, disabled = _a14.disabled, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var value2 = this.value;
      var selectedIndex = Math.max(0, data2.findIndex(function(i) {
        return areSame(i, value2, dataItemKey);
      }));
      if (this.B && !areSame(this.oe, value2, dataItemKey)) {
        this.B = "";
      }
      return React156.createElement(SearchBar_default, { id, readOnly: opened && this.mobileMode, placeholder, tabIndex, title: this.props.title, accessKey: this.props.accessKey, value: text + this.B, suggestedText: this.B, ref: function(el) {
        return _this3.j = el && el.input;
      }, onClick: this.onInputClick, onKeyDown: this.onInputKeyDown, onChange: this.inputOnChange, onFocus: this.base.handleFocus, onBlur: this.handleBlur, disabled, expanded: opened, owns: this.base.listBoxId, activedescendant: "option-".concat(this.base.guid, "-").concat(selectedIndex + virtual.skip), role: "combobox", ariaLabelledBy: this.props.ariaLabelledBy, ariaDescribedBy: this.props.ariaDescribedBy, ariaRequired: this.required, render: this.props.valueRender });
    };
    ComboBoxWithoutContext2.prototype.triggerOnChange = function(item, state) {
      var value2 = this.value;
      if (!isPresent4(value2) && !isPresent4(item) || areSame(value2, item, this.props.dataItemKey)) {
        return;
      }
      if (this.props.value === void 0) {
        state.data.value = item;
      }
      this.O = item;
      state.events.push({ type: "onChange" });
    };
    ComboBoxWithoutContext2.prototype.getFocusedIndex = function() {
      var value2 = this.value;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, dataItemKey = _a14.dataItemKey, _c2 = _a14.virtual, virtual = _c2 === void 0 ? { skip: 0 } : _c2, _d = _a14.focusedItemIndex, focusedItemIndex = _d === void 0 ? itemIndexStartsWith : _d;
      var text = this.props.filter ? this.props.filter : this.state.text;
      if (isPresent4(value2) && text === void 0) {
        return data2.findIndex(function(i) {
          return areSame(i, value2, dataItemKey);
        });
      } else if (text) {
        return focusedItemIndex(data2, text, textField);
      } else {
        return virtual.skip === 0 ? 0 : -1;
      }
    };
    ComboBoxWithoutContext2.prototype.suggestValue = function(value2) {
      var _a14 = this.props, data2 = _a14.data, textField = _a14.textField;
      this.B = suggestValue(value2, data2, textField);
    };
    ComboBoxWithoutContext2.prototype.applyState = function(state) {
      this.base.applyState(state);
      this.O = void 0;
    };
    ComboBoxWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    ComboBoxWithoutContext2.displayName = "ComboBox";
    ComboBoxWithoutContext2.propTypes = __assign80(__assign80({}, DropDownBase_default.propTypes), { size: PropTypes71.oneOf([null, "small", "medium", "large"]), rounded: PropTypes71.oneOf([null, "small", "medium", "large", "full"]), fillMode: PropTypes71.oneOf([null, "solid", "flat", "outline"]), dataItemKey: PropTypes71.string, groupField: PropTypes71.string, groupMode: PropTypes71.oneOf([void 0, "classic", "modern"]), isMultiColumn: PropTypes71.bool, suggest: PropTypes71.bool, placeholder: PropTypes71.string, title: PropTypes71.string, allowCustom: PropTypes71.bool, clearButton: PropTypes71.bool, iconClassName: PropTypes71.string, svgIcon: svgIconPropType, validationMessage: PropTypes71.string, required: PropTypes71.bool, id: PropTypes71.string, ariaLabelledBy: PropTypes71.string, ariaDescribedBy: PropTypes71.string, list: PropTypes71.any, valueRender: PropTypes71.func });
    ComboBoxWithoutContext2.defaultProps = __assign80(__assign80({}, DropDownBase_default.defaultProps), { size: "medium", rounded: "medium", fillMode: "solid", allowCustom: false, clearButton: true, required: false, groupMode: "classic", isMultiColumn: false });
    return ComboBoxWithoutContext2;
  }(React156.Component)
);
var ComboBoxPropsContext = createPropsContext();
var ComboBox = withPropsContext(ComboBoxPropsContext, ComboBoxWithoutContext);
ComboBox.displayName = "KendoReactComboBox";

// node_modules/@progress/kendo-react-dropdowns/dist/es/AutoComplete/AutoComplete.js
var React157 = __toESM(require_react());
var PropTypes72 = __toESM(require_prop_types());
var __extends62 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign81 = function() {
  __assign81 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign81.apply(this, arguments);
};
var VALIDATION_MESSAGE5 = "Please enter a valid value!";
var sizeMap3 = kendoThemeMaps.sizeMap, roundedMap3 = kendoThemeMaps.roundedMap;
var AutoCompleteWithoutContext = (
  /** @class */
  function(_super) {
    __extends62(AutoCompleteWithoutContext2, _super);
    function AutoCompleteWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {};
      _this3.base = new DropDownBase_default(_this3);
      _this3.i = null;
      _this3.ea = guid();
      _this3.B = "";
      _this3.j = null;
      _this3.Mb = false;
      _this3.itemHeight = 0;
      _this3.focus = function() {
        if (_this3.j) {
          _this3.j.focus();
        }
      };
      _this3.handleItemSelect = function(index, state) {
        var _a14 = _this3.props.data, data2 = _a14 === void 0 ? [] : _a14;
        var newText = getItemValue(data2[index], _this3.props.textField);
        _this3.triggerOnChange(newText, state);
      };
      _this3.itemFocus = function(index, state) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField;
        var focusedItem = data2[index];
        if (!areSame(_this3.state.focusedItem, focusedItem, textField)) {
          state.data.focusedItem = focusedItem;
        }
      };
      _this3.togglePopup = function(state) {
        _this3.base.togglePopup(state);
      };
      _this3.setValidity = function() {
        if (_this3.j && _this3.j.setCustomValidity) {
          _this3.j.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || VALIDATION_MESSAGE5);
        }
      };
      _this3.onScroll = function(event2) {
        _this3.Mb = true;
        var list = _this3.base.list;
        var groupField = _this3.props.groupField;
        var _a14 = _this3.props.data, data2 = _a14 === void 0 ? [] : _a14;
        if (!groupField || !data2.length) {
          return;
        }
        var itemHeight = _this3.itemHeight || (list ? list.children[0].offsetHeight : 0);
        var target = event2.target;
        var scrollTop = target.scrollTop;
        if (groupField) {
          data2 = _this3.base.getGroupedDataModernMode(data2, groupField);
        }
        ;
        var group2 = data2[0][groupField];
        for (var i = 1; i < data2.length; i++) {
          if (itemHeight * i > scrollTop) {
            break;
          }
          if (data2[i] && data2[i][groupField]) {
            group2 = data2[i][groupField];
          }
        }
        if (group2 !== _this3.state.group) {
          _this3.setState({
            group: group2
          });
        }
      };
      _this3.handleItemClick = function(index, event2) {
        _this3.base.handleItemClick(index, event2);
        _this3.O = void 0;
      };
      _this3.onChangeHandler = function(event2) {
        var base = _this3.base;
        var state = base.initState();
        var input = event2.currentTarget;
        var value2 = input.value;
        var selectionAtEnd = input.selectionEnd === value2.length;
        state.syntheticEvent = event2;
        var prevSuggestion = _this3.B;
        var prevValue = _this3.value;
        var prevUserInput = prevValue && prevValue.substring(0, prevValue.length - prevSuggestion.length);
        var deletedSuggestion = prevUserInput && prevUserInput === value2;
        var deleting = prevUserInput && prevUserInput.length > value2.length;
        var suggest = _this3.props.suggest;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        if (suggest !== void 0 && suggest !== false) {
          if (deletedSuggestion || deleting || !selectionAtEnd) {
            _this3.B = "";
          } else {
            _this3.suggestValue(value2);
          }
          var newValue = value2 + _this3.B;
          var suggestion = { userInput: value2, value: _this3.B };
          _this3.triggerOnChange(newValue, state, { suggestion });
        } else {
          _this3.B = "";
          _this3.triggerOnChange(value2, state);
        }
        if (!opened && value2 || opened && !value2) {
          _this3.togglePopup(state);
        }
        state.data.focusedItem = void 0;
        _this3.applyState(state);
        _this3.setState({ group: void 0 });
      };
      _this3.clearButtonClick = function(event2) {
        var base = _this3.base;
        var state = base.initState();
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        state.syntheticEvent = event2;
        var newValue = "";
        _this3.B = "";
        _this3.triggerOnChange(newValue, state);
        if (_this3.state.focusedItem !== void 0) {
          state.data.focusedItem = void 0;
        }
        if (opened) {
          _this3.togglePopup(state);
        }
        _this3.applyState(state);
      };
      _this3.onInputKeyDown = function(event2) {
        if (_this3.Mb) {
          _this3.Mb = false;
        }
        var keyCode = event2.keyCode;
        var opened = _this3.props.opened !== void 0 ? _this3.props.opened : _this3.state.opened;
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        var preventDefault5 = function() {
          if (opened) {
            event2.preventDefault();
          }
        };
        if (keyCode === Keys.enter || keyCode === Keys.esc) {
          preventDefault5();
          _this3.applyInputValue(event2.currentTarget.value, state, event2.keyCode);
        } else if (keyCode === Keys.up || keyCode === Keys.down) {
          preventDefault5();
          _this3.onNavigate(state, keyCode);
        }
      };
      _this3.handleBlur = function(event2) {
        if (_this3.state.focused) {
          var state = _this3.base.initState();
          state.data.focused = false;
          state.events.push({ type: "onBlur" });
          state.syntheticEvent = event2;
          _this3.applyInputValue(event2.currentTarget.value, state);
        }
      };
      validatePackage2(packageMetadata12);
      return _this3;
    }
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "element", {
      /**
       * @hidden
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "value", {
      /**
       * The value of the AutoComplete.
       */
      get: function() {
        if (this.O !== void 0) {
          return this.O;
        } else if (this.props.value !== void 0) {
          return this.props.value;
        } else if (this.state.value !== void 0) {
          return this.state.value;
        } else if (this.props.defaultValue !== void 0) {
          return this.props.defaultValue;
        }
        return "";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the AutoComplete.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the AutoComplete is set.
       */
      get: function() {
        var customError = this.props.validationMessage !== void 0;
        var isValid = !this.required || this.value !== "";
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "validityStyles", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : AutoCompleteWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(AutoCompleteWithoutContext2.prototype, "required", {
      /**
       * @hidden
       */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : AutoCompleteWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    AutoCompleteWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _a14;
      var _b3 = this.props, _c2 = _b3.groupField, groupField = _c2 === void 0 ? "" : _c2, _d = _b3.data, data2 = _d === void 0 ? [] : _d;
      var _e = prevProps.data, prevData = _e === void 0 ? [] : _e;
      var focusedIndex = this.focusedIndex();
      var focusedItem = data2[focusedIndex];
      var dataChanged = prevData !== data2;
      var focusedItemChanged = focusedItem !== void 0 && prevState.focusedItem !== focusedItem;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
      var opening = !prevOpened && opened;
      if (groupField === "") {
        if (opened && (focusedItemChanged || dataChanged) || opening) {
          this.base.scrollToItem(focusedIndex);
        }
      } else if (!this.Mb) {
        var focusedItemIndex = (_a14 = this.base.getGroupedDataModernMode(data2, groupField)) === null || _a14 === void 0 ? void 0 : _a14.indexOf(focusedItem);
        if (opening) {
          if (data2 && data2.length !== 0) {
            this.base.resetGroupStickyHeader(data2[0][groupField], this);
          }
          this.base.scrollToItem(focusedItemIndex);
        }
        ;
        if (opened && prevOpened && focusedItemChanged) {
          this.base.scrollToItem(focusedItemIndex);
        }
      }
      this.setValidity();
    };
    AutoCompleteWithoutContext2.prototype.componentDidMount = function() {
      this.base.didMount();
      this.setValidity();
    };
    AutoCompleteWithoutContext2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      var _b3 = this.props, dir = _b3.dir, disabled = _b3.disabled, label = _b3.label, className = _b3.className, style = _b3.style, loading = _b3.loading, suggest = _b3.suggest, size = _b3.size, rounded = _b3.rounded, fillMode = _b3.fillMode;
      var isValid = !this.validityStyles || this.validity.valid;
      var base = this.base;
      var value2 = this.value;
      var renderClearButton = this.props.clearButton !== false && !loading && !!value2;
      var id = this.props.id || this.ea;
      if (typeof suggest === "string") {
        this.B = suggest;
      }
      var autoComplete = React157.createElement(
        "span",
        { className: classNames("k-autocomplete k-input", className, (_a14 = {}, _a14["k-input-".concat(sizeMap3[size] || size)] = size, _a14["k-rounded-".concat(roundedMap3[rounded] || rounded)] = rounded, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-invalid"] = !isValid, _a14["k-loading"] = loading, _a14["k-required"] = this.required, _a14["k-disabled"] = disabled, _a14)), ref: function(element6) {
          _this3.i = element6;
          base.wrapper = element6;
        }, style: !label ? style : __assign81(__assign81({}, style), { width: void 0 }), dir },
        this.renderSearchBar(value2 || "", id),
        loading && React157.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading" }),
        renderClearButton && !loading && React157.createElement(ClearButton_default, { onClick: this.clearButtonClick, key: "clearbutton" }),
        this.renderListContainer()
      );
      return label ? React157.createElement(FloatingLabel, { label, editorId: id, editorValue: value2, editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: autoComplete }) : autoComplete;
    };
    AutoCompleteWithoutContext2.prototype.onNavigate = function(state, keyCode) {
      var _this3 = this;
      var typedText = this.value;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, focusedItemIndex = _a14.focusedItemIndex;
      var focusedIndex = this.state.focusedItem !== void 0 ? data2.findIndex(function(i) {
        return areSame(i, _this3.state.focusedItem, textField);
      }) : focusedItemIndex ? focusedItemIndex(data2, typedText, textField) : data2.indexOf(getFocusedItem(data2, typedText, textField));
      var newFocused = this.base.navigation.navigate({
        keyCode,
        current: focusedIndex,
        max: data2.length - 1,
        min: 0
      });
      if (newFocused !== void 0) {
        this.itemFocus(newFocused, state);
      }
      this.applyState(state);
    };
    AutoCompleteWithoutContext2.prototype.applyInputValue = function(value2, state, eventKey) {
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField;
      this.B = "";
      if (opened && eventKey === Keys.enter) {
        var newValue = getItemValue(data2[this.focusedIndex(value2)], textField);
        this.triggerOnChange(newValue, state);
      }
      if (opened) {
        this.togglePopup(state);
      }
      this.applyState(state);
    };
    AutoCompleteWithoutContext2.prototype.renderSearchBar = function(value2, id) {
      var _this3 = this;
      var base = this.base;
      var _a14 = this.props, placeholder = _a14.placeholder, tabIndex = _a14.tabIndex, disabled = _a14.disabled, readonly = _a14.readonly;
      var focused = this.state.focused;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      return React157.createElement(SearchBar_default, { id, placeholder, tabIndex, accessKey: this.props.accessKey, value: value2, suggestedText: this.B, focused, name: this.props.name, ref: function(searchbar) {
        return _this3.j = searchbar && searchbar.input;
      }, onKeyDown: this.onInputKeyDown, onChange: this.onChangeHandler, onFocus: base.handleFocus, onBlur: this.handleBlur, disabled, readOnly: readonly, expanded: opened, owns: base.listBoxId, activedescendant: "option-" + base.guid + "-" + this.focusedIndex(), role: "combobox", ariaLabelledBy: this.props.ariaLabelledBy, ariaDescribedBy: this.props.ariaDescribedBy, ariaRequired: this.required, render: this.props.valueRender });
    };
    AutoCompleteWithoutContext2.prototype.renderListContainer = function() {
      var _a14;
      var base = this.base;
      var _b3 = this.props, dir = _b3.dir, header = _b3.header, footer = _b3.footer, _c2 = _b3.data, data2 = _c2 === void 0 ? [] : _c2, size = _b3.size, groupField = _b3.groupField, list = _b3.list, groupStickyHeaderItemRender = _b3.groupStickyHeaderItemRender;
      var popupSettings = base.getPopupSettings();
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
      var group2 = this.state.group;
      if (group2 === void 0 && groupField !== void 0) {
        group2 = getItemValue(data2[0], groupField);
      }
      return React157.createElement(
        ListContainer_default,
        { width: popupWidth, popupSettings: {
          animate: popupSettings.animate,
          anchor: this.element,
          show: opened,
          popupClass: classNames(popupSettings.popupClass, "k-list-container", "k-autocomplete-popup"),
          className: popupSettings.className,
          appendTo: popupSettings.appendTo
        }, dir: dir !== void 0 ? dir : this.base.dirCalculated, itemsCount: [data2.length] },
        header && React157.createElement("div", { className: "k-list-header" }, header),
        React157.createElement(
          "div",
          { className: classNames("k-list", (_a14 = {}, _a14["k-list-".concat(sizeMap3[size] || size)] = size, _a14)) },
          !list && group2 && data2.length !== 0 && React157.createElement(GroupStickyHeader_default, { group: group2, groupMode: "modern", render: groupStickyHeaderItemRender }),
          this.renderList()
        ),
        footer && React157.createElement("div", { className: "k-list-footer" }, footer)
      );
    };
    AutoCompleteWithoutContext2.prototype.renderList = function() {
      var base = this.base;
      var popupSettings = base.getPopupSettings();
      var _a14 = this.props, textField = _a14.textField, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, listNoDataRender = _a14.listNoDataRender, itemRender = _a14.itemRender, groupHeaderItemRender = _a14.groupHeaderItemRender;
      var value2 = this.value;
      var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
      return React157.createElement(List_default, { id: base.listBoxId, show: opened, data: data2.slice(), focusedIndex: this.focusedIndex(), value: value2, textField, valueField: textField, highlightSelected: false, optionsGuid: base.guid, groupField: this.props.groupField, groupMode: "modern", listRef: function(list) {
        return base.list = list;
      }, wrapperStyle: { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", onClick: this.handleItemClick, itemRender, groupHeaderItemRender, noDataRender: listNoDataRender, onMouseDown: function(e) {
        return e.preventDefault();
      }, onScroll: this.onScroll });
    };
    AutoCompleteWithoutContext2.prototype.triggerOnChange = function(newValue, state, eventArgs) {
      if (this.value === newValue && !eventArgs) {
        return;
      }
      state.data.value = newValue;
      this.O = newValue;
      state.events.push(__assign81({ type: "onChange" }, eventArgs || {}));
    };
    AutoCompleteWithoutContext2.prototype.applyState = function(state) {
      this.base.applyState(state);
      this.O = void 0;
    };
    AutoCompleteWithoutContext2.prototype.suggestValue = function(value2) {
      this.B = "";
      if (value2) {
        var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField;
        var suggestedItem = data2[itemIndexStartsWith(data2, value2, textField)];
        if (suggestedItem) {
          var suggestedText = getItemValue(suggestedItem, textField);
          if (value2.toLowerCase() !== suggestedText.toLowerCase()) {
            this.B = suggestedText.substring(value2.length);
          }
        }
      }
    };
    AutoCompleteWithoutContext2.prototype.focusedIndex = function(value2) {
      var _this3 = this;
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, focusedItemIndex = _a14.focusedItemIndex;
      var inputValue = value2 !== void 0 ? value2 : this.value;
      return this.state.focusedItem !== void 0 ? data2.findIndex(function(i) {
        return areSame(i, _this3.state.focusedItem, textField);
      }) : focusedItemIndex ? focusedItemIndex(data2, inputValue, textField) : Math.max(0, data2.indexOf(getFocusedItem(data2, inputValue, textField)));
    };
    AutoCompleteWithoutContext2.displayName = "AutoComplete";
    AutoCompleteWithoutContext2.propTypes = __assign81(__assign81({}, DropDownBase_default.basicPropTypes), { size: PropTypes72.oneOf([null, "small", "medium", "large"]), rounded: PropTypes72.oneOf([null, "small", "medium", "large", "full"]), fillMode: PropTypes72.oneOf([null, "solid", "flat", "outline"]), groupField: PropTypes72.string, suggest: PropTypes72.oneOfType([PropTypes72.bool, PropTypes72.string]), placeholder: PropTypes72.string, value: PropTypes72.string, defaultValue: PropTypes72.string, validationMessage: PropTypes72.string, required: PropTypes72.bool, readonly: PropTypes72.bool, clearButton: PropTypes72.bool, valueRender: PropTypes72.func, id: PropTypes72.string, ariaLabelledBy: PropTypes72.string, ariaDescribedBy: PropTypes72.string, list: PropTypes72.any });
    AutoCompleteWithoutContext2.defaultProps = __assign81(__assign81({}, DropDownBase_default.defaultProps), { size: "medium", rounded: "medium", fillMode: "solid" });
    return AutoCompleteWithoutContext2;
  }(React157.Component)
);
var AutoCompletePropsContext = createPropsContext();
var AutoComplete = withPropsContext(AutoCompletePropsContext, AutoCompleteWithoutContext);
AutoComplete.displayName = "KendoReactAutoComplete";

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelect/TagList.js
var React158 = __toESM(require_react());
var __extends63 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var preventDefault3 = function(event2) {
  return event2.syntheticEvent.preventDefault();
};
var stopPropagation = function(event2) {
  return event2.syntheticEvent.stopPropagation();
};
var TagList = (
  /** @class */
  function(_super) {
    __extends63(TagList2, _super);
    function TagList2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    TagList2.prototype.render = function() {
      var _a14 = this.props, data2 = _a14.data, guid2 = _a14.guid, focused = _a14.focused, tagRender = _a14.tagRender, TagComponent = _a14.tag, onTagDelete = _a14.onTagDelete, size = _a14.size;
      return React158.createElement(
        React158.Fragment,
        null,
        data2.map(function(tagData, index) {
          var tag = TagComponent ? React158.createElement(TagComponent, { key: tagData.text + index, tagData, guid: guid2, focusedTag: focused, onTagDelete }) : React158.createElement(Chip, { id: "tag-".concat(guid2, "-").concat(tagData.text.replace(/\s+/g, "-")), "aria-selected": true, role: "option", "aria-setsize": data2.length, key: tagData.text + index, text: tagData.text, removable: true, onRemove: function(e) {
            return onTagDelete.call(void 0, tagData.data, e.syntheticEvent);
          }, onMouseDown: preventDefault3, onClick: stopPropagation, className: tagData === focused ? "k-focus" : void 0, size });
          return tagRender ? tagRender(tagData, tag) : tag;
        }),
        this.props.children
      );
    };
    return TagList2;
  }(React158.Component)
);
var TagList_default = TagList;

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/settings.js
var ActiveDescendant;
(function(ActiveDescendant2) {
  ActiveDescendant2[ActiveDescendant2["PopupList"] = 0] = "PopupList";
  ActiveDescendant2[ActiveDescendant2["TagsList"] = 1] = "TagsList";
})(ActiveDescendant || (ActiveDescendant = {}));

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/AdaptiveMode.js
var React159 = __toESM(require_react());
var __assign82 = function() {
  __assign82 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign82.apply(this, arguments);
};
var MOBILE_SMALL_DEVISE4 = 500;
var AdaptiveMode2 = function(props) {
  var footer = props.footer, children2 = props.children, _a14 = props.windowWidth, windowWidth = _a14 === void 0 ? 0 : _a14, navigatable = props.navigatable, navigatableElements = props.navigatableElements, expand2 = props.expand, animation = props.animation, onClose = props.onClose, adaptiveTitle = props.adaptiveTitle, mobileFilter = props.mobileFilter;
  var defaultProps44 = {
    navigatable: navigatable || false,
    navigatableElements: navigatableElements || [],
    expand: expand2,
    animation: animation === false ? false : true,
    onClose,
    animationStyles: windowWidth <= MOBILE_SMALL_DEVISE4 ? { top: 0, width: "100%", height: "100%" } : void 0,
    className: windowWidth <= MOBILE_SMALL_DEVISE4 ? "k-adaptive-actionsheet k-actionsheet-fullscreen" : "k-adaptive-actionsheet k-actionsheet-bottom"
  };
  return React159.createElement(
    ActionSheet,
    __assign82({}, defaultProps44),
    React159.createElement(
      ActionSheetHeader,
      { className: "k-text-center" },
      React159.createElement(
        "div",
        { className: "k-actionsheet-titlebar-group k-hbox" },
        React159.createElement(
          "div",
          { className: "k-actionsheet-title" },
          React159.createElement("div", null, adaptiveTitle)
        ),
        React159.createElement(
          "div",
          { className: "k-actionsheet-actions" },
          React159.createElement(Button, { tabIndex: 0, "aria-label": "Cancel", "aria-disabled": "false", type: "button", fillMode: "flat", icon: "x", svgIcon: xIcon, onClick: onClose })
        )
      ),
      mobileFilter && React159.createElement("div", { className: "k-actionsheet-titlebar-group k-actionsheet-filter" }, mobileFilter)
    ),
    children2,
    footer && React159.createElement(
      ActionSheetFooter,
      { className: "k-actions k-actions-stretched" },
      React159.createElement(Button, { size: "large", tabIndex: 0, "aria-label": footer.cancelText, "aria-disabled": "false", type: "button", onClick: footer.onCancel }, footer.cancelText),
      React159.createElement(Button, { tabIndex: 0, themeColor: "primary", size: "large", "aria-label": footer.applyText, "aria-disabled": "false", type: "button", onClick: footer.onApply }, footer.applyText)
    )
  );
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelect/MultiSelect.js
var React160 = __toESM(require_react());
var PropTypes73 = __toESM(require_prop_types());
var __extends64 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign83 = function() {
  __assign83 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign83.apply(this, arguments);
};
var __spreadArray15 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var sizeMap4 = kendoThemeMaps.sizeMap, roundedMap4 = kendoThemeMaps.roundedMap;
var VALIDATION_MESSAGE6 = "Please enter a valid value!";
var preventDefault4 = function(event2) {
  return event2.preventDefault();
};
var isCustom = function(type) {
  return type === FocusedItemType.CustomItem;
};
var FocusedItemType;
(function(FocusedItemType2) {
  FocusedItemType2[FocusedItemType2["None"] = 0] = "None";
  FocusedItemType2[FocusedItemType2["ListItem"] = 1] = "ListItem";
  FocusedItemType2[FocusedItemType2["CustomItem"] = 2] = "CustomItem";
})(FocusedItemType || (FocusedItemType = {}));
var MultiSelectWithoutContext = (
  /** @class */
  function(_super) {
    __extends64(MultiSelectWithoutContext2, _super);
    function MultiSelectWithoutContext2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = {
        activedescendant: ActiveDescendant.PopupList,
        currentValue: []
      };
      _this3.i = null;
      _this3.ob = null;
      _this3.ea = guid();
      _this3.base = new DropDownBase_default(_this3);
      _this3.sd = [];
      _this3.j = null;
      _this3.pb = null;
      _this3.Aa = false;
      _this3.itemHeight = 0;
      _this3.scrollToFocused = false;
      _this3.localization = null;
      _this3.focus = function() {
        if (_this3.j) {
          _this3.j.focus();
        }
      };
      _this3.handleItemSelect = function(index, state) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey, virtual = _a14.virtual;
        var skip3 = virtual ? virtual.skip : 0;
        var dataItem = data2[index - skip3];
        var indexInValue = _this3.value.findIndex(function(i) {
          return areSame(i, dataItem, dataItemKey);
        });
        var newItems = [];
        if (indexInValue !== -1) {
          newItems = _this3.value;
          newItems.splice(indexInValue, 1);
        } else {
          newItems = __spreadArray15(__spreadArray15([], _this3.value, true), [dataItem], false);
        }
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        if (text && !_this3.mobileMode) {
          if (_this3.state.text) {
            state.data.text = "";
          }
          _this3.base.filterChanged("", state);
        }
        if (_this3.pb) {
          _this3.pb.blur();
        }
        ;
        if (_this3.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
        _this3.triggerOnChange(newItems, state);
        _this3.base.triggerPageChangeCornerItems(dataItem, state);
      };
      _this3.onTagDelete = function(itemsToRemove, event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (_this3.opened) {
          _this3.base.togglePopup(state);
        }
        if (!_this3.state.focused && !_this3.mobileMode) {
          state.data.focused = true;
          _this3.focus();
        }
        var selected = _this3.value;
        removeDataItems(selected, itemsToRemove, _this3.props.dataItemKey);
        _this3.triggerOnChange(selected, state);
        _this3.applyState(state);
      };
      _this3.itemFocus = function(index, state) {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, allowCustom = _a14.allowCustom, virtual = _a14.virtual;
        var skip3 = virtual ? virtual.skip : 0;
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        var focusedIndex = _this3.getFocusedState().focusedIndex;
        var customItem = allowCustom && text;
        var nextFocusedItem = data2[index - skip3];
        if (nextFocusedItem && focusedIndex !== index) {
          if (_this3.state.focusedIndex !== index) {
            state.data.focusedIndex = index;
            state.data.activedescendant = ActiveDescendant.PopupList;
          }
        } else if (customItem && index === -1) {
          if (_this3.state.focusedIndex !== void 0) {
            state.data.focusedIndex = void 0;
          }
        }
        _this3.base.triggerPageChangeCornerItems(nextFocusedItem, state);
      };
      _this3.componentRef = function(element6) {
        _this3.i = element6;
        _this3.base.wrapper = element6;
      };
      _this3.searchbarRef = function(searchbar) {
        var input = _this3.j = searchbar && searchbar.input;
        if (input && _this3.state.focused) {
          window.setTimeout(function() {
            return input.focus();
          }, 0);
        }
      };
      _this3.onChangeHandler = function(event2) {
        var state = _this3.base.initState();
        var value2 = event2.target.value;
        state.syntheticEvent = event2;
        if (_this3.props.filter === void 0) {
          state.data.text = value2;
        }
        state.data.focusedIndex = void 0;
        if (!_this3.opened) {
          _this3.base.togglePopup(state);
          _this3.setState({ currentValue: _this3.value });
        }
        _this3.base.filterChanged(value2, state);
        _this3.applyState(state);
        _this3.setState({ group: void 0 });
      };
      _this3.clearButtonClick = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        event2.stopPropagation();
        if (_this3.value.length > 0) {
          _this3.triggerOnChange([], state);
        }
        if (_this3.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
        if (_this3.opened) {
          _this3.base.togglePopup(state);
        }
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        if (isPresent4(text) && text !== "") {
          _this3.base.filterChanged("", state);
        }
        if (_this3.state.text) {
          state.data.text = "";
        }
        _this3.applyState(state);
      };
      _this3.onInputKeyDown = function(event2) {
        var keyCode = event2.keyCode;
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        var focusedItem = _this3.getFocusedState().focusedItem;
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (!text && _this3.value.length > 0 && (keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end || keyCode === Keys.delete || keyCode === Keys.backspace)) {
          return _this3.onTagsNavigate(event2, state);
        }
        var togglePopup = function() {
          event2.preventDefault();
          _this3.base.togglePopup(state);
          _this3.applyState(state);
        };
        if (_this3.opened) {
          if (event2.altKey && keyCode === Keys.up) {
            togglePopup();
          } else if (keyCode === Keys.up || keyCode === Keys.down) {
            event2.preventDefault();
            _this3.onNavigate(state, keyCode);
          } else if (keyCode === Keys.enter) {
            event2.preventDefault();
            if (_this3.props.allowCustom && text && focusedItem === null) {
              _this3.customItemSelect(event2);
            } else {
              _this3.selectFocusedItem(event2);
            }
          } else if (keyCode === Keys.esc) {
            togglePopup();
          }
        } else if (event2.altKey && keyCode === Keys.down) {
          togglePopup();
        }
      };
      _this3.listContainerContent = function() {
        var _a14, _b3;
        var _c2 = _this3.props, header = _c2.header, footer = _c2.footer, allowCustom = _c2.allowCustom, size = _c2.size, _d = _c2.data, data2 = _d === void 0 ? [] : _d, groupStickyHeaderItemRender = _c2.groupStickyHeaderItemRender, groupField = _c2.groupField, list = _c2.list;
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        var focusedType = _this3.getFocusedState().focusedType;
        var customItem = allowCustom && text && React160.createElement(
          "div",
          { className: classNames("k-list", (_a14 = {}, _a14["k-list-".concat(sizeMap4[size] || size)] = size, _a14)), key: "customitem", onClick: _this3.customItemSelect, onMouseDown: preventDefault4 },
          React160.createElement(
            "div",
            { className: classNames("k-list-item k-custom-item", { "k-focus": isCustom(focusedType) }), style: { fontStyle: "italic" } },
            text,
            React160.createElement(IconWrap, { name: "plus", icon: plusIcon, style: { position: "absolute", right: "0.5em" } })
          )
        );
        var group2 = _this3.state.group;
        if (group2 === void 0 && groupField !== void 0) {
          group2 = getItemValue(data2[0], groupField);
        }
        return React160.createElement(
          React160.Fragment,
          null,
          header && React160.createElement("div", { className: "k-list-header" }, header),
          customItem,
          React160.createElement(
            "div",
            { className: classNames("k-list", (_b3 = {}, _b3["k-list-".concat(_this3.mobileMode ? "lg" : sizeMap4[size] || size)] = size, _b3["k-virtual-list"] = _this3.base.vs.enabled, _b3)) },
            !list && group2 && data2.length !== 0 && React160.createElement(GroupStickyHeader_default, { group: group2, groupMode: "modern", render: groupStickyHeaderItemRender }),
            _this3.renderList()
          ),
          footer && React160.createElement("div", { className: "k-list-footer" }, footer)
        );
      };
      _this3.renderListContainer = function() {
        var base = _this3.base;
        var _a14 = _this3.props, dir = _a14.dir, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3;
        var popupSettings = _this3.base.getPopupSettings();
        var popupWidth = popupSettings.width !== void 0 ? popupSettings.width : base.popupWidth;
        var listContainerProps = {
          dir: dir !== void 0 ? dir : base.dirCalculated,
          width: popupWidth,
          popupSettings: {
            popupClass: classNames(popupSettings.popupClass, "k-list-container", "k-multiselect-popup"),
            className: popupSettings.className,
            animate: popupSettings.animate,
            anchor: _this3.element,
            show: _this3.opened,
            onOpen: _this3.onPopupOpened,
            onClose: _this3.onPopupClosed,
            appendTo: popupSettings.appendTo
          },
          itemsCount: [data2.length, _this3.value.length]
        };
        return React160.createElement(ListContainer_default, __assign83({}, listContainerProps), _this3.listContainerContent());
      };
      _this3.renderAdaptiveListContainer = function() {
        var _a14 = _this3.props, adaptiveTitle = _a14.adaptiveTitle, filterable = _a14.filterable, filter2 = _a14.filter;
        var _b3 = _this3.state.windowWidth, windowWidth = _b3 === void 0 ? 0 : _b3;
        var mobileText = filter2 !== void 0 ? filter2 : _this3.state.text;
        _this3.localization = provideLocalizationService(_this3);
        var mobileFilter = filterable ? React160.createElement(ListFilter_default, { value: mobileText, ref: function(adaptiveFilter) {
          return _this3.pb = adaptiveFilter && adaptiveFilter.element;
        }, onChange: _this3.onChangeHandler, onKeyDown: _this3.onInputKeyDown, size: _this3.props.size, rounded: _this3.props.rounded, fillMode: _this3.props.fillMode }) : null;
        var actionSheetProps = {
          adaptiveTitle,
          expand: _this3.opened,
          onClose: function(event2) {
            return _this3.onCancel(event2);
          },
          windowWidth,
          mobileFilter,
          footer: {
            cancelText: _this3.localization.toLanguageString(adaptiveModeFooterCancel, messages7[adaptiveModeFooterCancel]),
            onCancel: _this3.onCancel,
            applyText: _this3.localization.toLanguageString(adaptiveModeFooterApply, messages7[adaptiveModeFooterApply]),
            onApply: _this3.closePopup
          }
        };
        return React160.createElement(
          AdaptiveMode2,
          __assign83({}, actionSheetProps),
          React160.createElement(
            ActionSheetContent,
            { className: "!k-overflow-hidden" },
            React160.createElement("div", { className: "k-list-container" }, _this3.listContainerContent())
          )
        );
      };
      _this3.closePopup = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        event2.stopPropagation();
        if (_this3.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
        if (_this3.opened) {
          _this3.base.togglePopup(state);
        }
        state.events.push({ type: "onClose" });
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        if (isPresent4(text) && text !== "") {
          _this3.base.filterChanged("", state);
        }
        if (_this3.state.text) {
          state.data.text = "";
        }
        _this3.applyState(state);
      };
      _this3.onCancel = function(event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        event2.stopPropagation();
        if (_this3.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
        if (_this3.opened) {
          _this3.base.togglePopup(state);
        }
        state.events.push({ type: "onCancel" });
        var text = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        if (isPresent4(text) && text !== "") {
          _this3.base.filterChanged("", state);
        }
        if (_this3.state.text) {
          state.data.text = "";
        }
        _this3.applyState(state);
      };
      _this3.renderList = function() {
        var _a14 = _this3.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, textField = _a14.textField, listNoDataRender = _a14.listNoDataRender, itemRender = _a14.itemRender, groupHeaderItemRender = _a14.groupHeaderItemRender, dataItemKey = _a14.dataItemKey, virtual = _a14.virtual;
        var vs = _this3.base.vs;
        var skip3 = virtual ? virtual.skip : 0;
        var focusedIndex = _this3.getFocusedState().focusedIndex;
        var popupSettings = _this3.base.getPopupSettings();
        var translate = "translateY(".concat(vs.translate, "px)");
        return React160.createElement(List_default, { id: _this3.base.listBoxId, show: _this3.opened, data: data2.slice(), focusedIndex: focusedIndex - skip3, value: _this3.value, textField, valueField: dataItemKey, optionsGuid: _this3.base.guid, groupField: _this3.props.groupField, groupMode: "modern", listRef: function(list) {
          vs.list = _this3.base.list = list;
        }, wrapperStyle: _this3.mobileMode ? {} : { maxHeight: popupSettings.height }, wrapperCssClass: "k-list-content", listStyle: vs.enabled ? { transform: translate } : void 0, key: "listKey", skip: skip3, onClick: _this3.handleItemClick, itemRender, groupHeaderItemRender, noDataRender: listNoDataRender, onMouseDown: preventDefault4, onBlur: _this3.handleBlur, onScroll: _this3.onScroll, wrapperRef: vs.scrollerRef, scroller: _this3.base.renderScrollElement() });
      };
      _this3.onScroll = function(event2) {
        var _a14 = _this3.base, vs = _a14.vs, list = _a14.list;
        vs.scrollHandler(event2);
        var groupField = _this3.props.groupField;
        var _b3 = _this3.props.data, data2 = _b3 === void 0 ? [] : _b3;
        if (!groupField || !data2.length) {
          return;
        }
        if (groupField) {
          var itemHeight = _this3.itemHeight = _this3.itemHeight || (vs.enabled ? vs.itemHeight : list ? list.children[0].offsetHeight : 0);
          var target = event2.target;
          var scrollTop = target.scrollTop - vs.skip * itemHeight;
          data2 = _this3.base.getGroupedDataModernMode(data2, groupField);
          var group2 = data2[0][groupField];
          for (var i = 1; i < data2.length; i++) {
            if (itemHeight * i > scrollTop) {
              break;
            }
            if (data2[i] && data2[i][groupField]) {
              group2 = data2[i][groupField];
            }
          }
          if (group2 !== _this3.state.group) {
            _this3.setState({
              group: group2
            });
          }
        }
      };
      _this3.customItemSelect = function(event2) {
        var _a14;
        var itemText = _this3.props.filter !== void 0 ? _this3.props.filter : _this3.state.text;
        var textField = _this3.props.textField;
        if (!itemText) {
          return;
        }
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        var item = textField ? (_a14 = {}, _a14[textField] = itemText, _a14) : itemText;
        if (_this3.state.text !== void 0) {
          state.data.text = "";
        }
        state.data.focusedIndex = void 0;
        _this3.base.filterChanged("", state);
        var newItems = __spreadArray15(__spreadArray15([], _this3.value, true), [item], false);
        _this3.triggerOnChange(newItems, state);
        _this3.base.togglePopup(state);
        _this3.applyState(state);
      };
      _this3.handleWrapperClick = function(event2) {
        var input = _this3.j;
        if (!_this3.opened && input) {
          _this3.focusElement(input);
        }
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        if (!_this3.state.focused && !_this3.mobileMode) {
          state.events.push({ type: "onFocus" });
          state.data.focused = true;
        }
        if (_this3.mobileMode) {
          _this3.setState({ currentValue: _this3.tagsToRender });
          if (_this3.mobileMode) {
            window.setTimeout(function() {
              return _this3.pb && _this3.pb.focus();
            }, 300);
          }
        }
        _this3.base.togglePopup(state);
        _this3.applyState(state);
      };
      _this3.handleItemClick = function(index, event2) {
        var state = _this3.base.initState();
        state.syntheticEvent = event2;
        _this3.handleItemSelect(index, state);
        if (_this3.props.autoClose && !_this3.mobileMode) {
          _this3.base.togglePopup(state);
        }
        event2.stopPropagation();
        _this3.applyState(state);
      };
      _this3.handleBlur = function(event2) {
        if (!_this3.state.focused || _this3.Aa) {
          return;
        }
        var state = _this3.base.initState();
        var _a14 = _this3.props, allowCustom = _a14.allowCustom, filterable = _a14.filterable;
        state.syntheticEvent = event2;
        state.data.focused = false;
        state.events.push({ type: "onBlur" });
        if (_this3.opened && !_this3.mobileMode) {
          if (_this3.state.opened) {
            state.data.opened = false;
          }
          state.events.push({ type: "onClose" });
        }
        if (!allowCustom && !filterable && _this3.state.text) {
          state.data.text = "";
        }
        _this3.applyState(state);
      };
      _this3.handleFocus = function(event2) {
        if (_this3.Aa) {
          return;
        }
        _this3.base.handleFocus(event2);
      };
      _this3.onPopupOpened = function() {
        if (_this3.j && _this3.state.focused && !_this3.mobileMode) {
          _this3.focusElement(_this3.j);
        }
      };
      _this3.onPopupClosed = function() {
        if (_this3.state.focused) {
          window.setTimeout(function() {
            if (_this3.state.focused) {
              _this3.focusElement(_this3.j);
            }
          }, 0);
        }
      };
      _this3.setValidity = function() {
        if (_this3.j && _this3.j.setCustomValidity) {
          _this3.j.setCustomValidity(_this3.validity.valid ? "" : _this3.props.validationMessage || VALIDATION_MESSAGE6);
        }
      };
      validatePackage2(packageMetadata12);
      return _this3;
    }
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "document", {
      get: function() {
        if (!canUseDOM) {
          return;
        }
        return this.element && this.element.ownerDocument || document;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "element", {
      /** @hidden */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "opened", {
      /** @hidden */
      get: function() {
        var opened = this.props.opened !== void 0 ? this.props.opened : this.state.opened;
        return !!opened;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "tagsToRender", {
      /** @hidden */
      get: function() {
        var _a14 = this.props, tags = _a14.tags, textField = _a14.textField;
        var tagsToRender = [];
        if (tags === void 0) {
          this.value.forEach(function(item) {
            tagsToRender.push({ text: getItemValue(item, textField), data: [item] });
          });
        } else {
          tagsToRender.push.apply(tagsToRender, tags);
        }
        return tagsToRender;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "mobileMode", {
      /**
       * The mobile mode of the ComboBox.
       */
      get: function() {
        var isAdaptive = this.state.windowWidth && this.state.windowWidth <= MOBILE_MEDIUM_DEVISE2 && this.props.adaptive;
        return !!isAdaptive;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "value", {
      /**
       * Represents the value of the MultiSelect.
       */
      get: function() {
        var result = [];
        if (this.ob) {
          result.push.apply(result, this.ob);
        } else if (this.props.value) {
          result.push.apply(result, this.props.value);
        } else if (this.state.value) {
          result.push.apply(result, this.state.value);
        } else if (this.props.defaultValue) {
          result.push.apply(result, this.props.defaultValue);
        }
        return result;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "name", {
      /**
       * Gets the `name` property of the MultiSelect.
       */
      get: function() {
        return this.props.name;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "validity", {
      /**
       * Represents the validity state into which the MultiSelect is set.
       */
      get: function() {
        var customError = this.props.validationMessage !== void 0;
        var isValid = !this.required || this.value !== null && this.value.length > 0 && this.value !== void 0;
        var valid = this.props.valid !== void 0 ? this.props.valid : isValid;
        return {
          customError,
          valid,
          valueMissing: this.value === null
        };
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "required", {
      /** @hidden */
      get: function() {
        return this.props.required !== void 0 ? this.props.required : MultiSelectWithoutContext2.defaultProps.required;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MultiSelectWithoutContext2.prototype, "validityStyles", {
      get: function() {
        return this.props.validityStyles !== void 0 ? this.props.validityStyles : MultiSelectWithoutContext2.defaultProps.validityStyles;
      },
      enumerable: false,
      configurable: true
    });
    MultiSelectWithoutContext2.prototype.componentDidUpdate = function(prevProps, prevState) {
      var _a14;
      var _b3 = this.props, virtual = _b3.virtual, _c2 = _b3.groupField, groupField = _c2 === void 0 ? "" : _c2, _d = _b3.data, data2 = _d === void 0 ? [] : _d;
      var skip3 = virtual ? virtual.skip : 0;
      var prevTotal = prevProps.virtual ? prevProps.virtual.total : 0;
      var prevOpened = prevProps.opened !== void 0 ? prevProps.opened : prevState.opened;
      var opening = !prevOpened && this.opened;
      var closing = prevOpened && !this.opened;
      var popupSettings = this.base.getPopupSettings();
      if (!popupSettings.animate && closing) {
        this.onPopupClosed();
      }
      if (virtual && virtual.total !== prevTotal) {
        this.base.vs.calcScrollElementHeight();
        this.base.vs.reset();
      } else {
        var _e = this.getFocusedState(), focusedItem = _e.focusedItem, focusedIndex = _e.focusedIndex;
        if (groupField !== "") {
          focusedIndex = (_a14 = this.base.getGroupedDataModernMode(data2, groupField)) === null || _a14 === void 0 ? void 0 : _a14.indexOf(focusedItem);
        }
        if (opening && virtual) {
          this.base.scrollToVirtualItem(virtual, focusedIndex - skip3);
        } else if (opening && !virtual) {
          if (data2 && data2.length !== 0) {
            this.base.resetGroupStickyHeader(data2[0][groupField], this);
          }
          this.base.scrollToItem(focusedIndex);
        } else if (this.opened && prevOpened && focusedItem && this.scrollToFocused) {
          this.base.scrollToItem(focusedIndex - skip3);
        }
      }
      this.scrollToFocused = false;
      this.setValidity();
    };
    MultiSelectWithoutContext2.prototype.componentDidMount = function() {
      var _a14;
      this.observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(this.calculateMedia.bind(this));
      this.base.didMount();
      this.setValidity();
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.observe(this.document.body);
      }
    };
    MultiSelectWithoutContext2.prototype.componentWillUnmount = function() {
      var _a14;
      if (((_a14 = this.document) === null || _a14 === void 0 ? void 0 : _a14.body) && this.observerResize) {
        this.observerResize.disconnect();
      }
    };
    MultiSelectWithoutContext2.prototype.onNavigate = function(state, keyCode) {
      var _a14 = this.props, allowCustom = _a14.allowCustom, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3;
      var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
      var _c2 = this.getFocusedState(), focusedType = _c2.focusedType, focusedIndex = _c2.focusedIndex;
      var customItem = allowCustom && text;
      var customItemFocused = isCustom(focusedType);
      var base = this.base;
      var vs = base.vs;
      if (this.opened && keyCode === Keys.up && customItemFocused) {
        if (this.state.focusedIndex !== void 0) {
          state.data.focusedIndex = void 0;
        }
      } else {
        var newFocused = base.navigation.navigate({
          keyCode,
          current: focusedIndex,
          max: (vs.enabled ? vs.total : data2.length) - 1,
          min: customItem ? -1 : 0
        });
        if (newFocused !== void 0) {
          this.itemFocus(newFocused, state);
          this.scrollToFocused = true;
        }
      }
      this.applyState(state);
    };
    MultiSelectWithoutContext2.prototype.render = function() {
      var _a14, _b3;
      var _c2 = this.props, style = _c2.style, className = _c2.className, label = _c2.label, dir = _c2.dir, disabled = _c2.disabled, textField = _c2.textField, dataItemKey = _c2.dataItemKey, virtual = _c2.virtual, size = _c2.size, rounded = _c2.rounded, fillMode = _c2.fillMode, loading = _c2.loading, filter2 = _c2.filter;
      var _d = this.state, text = _d.text, focused = _d.focused, focusedTag = _d.focusedTag, currentValue = _d.currentValue;
      var vs = this.base.vs;
      var id = this.props.id || this.ea;
      vs.enabled = virtual !== void 0;
      if (virtual !== void 0) {
        vs.skip = virtual.skip;
        vs.total = virtual.total;
        vs.pageSize = virtual.pageSize;
      }
      var currentTagsToRender = this.mobileMode && this.opened ? currentValue : this.tagsToRender;
      this.setItems(this.tagsToRender, this.sd);
      var isValid = !this.validityStyles || this.validity.valid;
      var clearButton = Boolean(filter2 !== void 0 ? filter2 : text) || currentTagsToRender && currentTagsToRender.length > 0;
      var component = React160.createElement(
        React160.Fragment,
        null,
        React160.createElement(
          "div",
          { ref: this.componentRef, className: classNames("k-multiselect k-input", className, (_a14 = {}, _a14["k-input-".concat(sizeMap4[size] || size)] = size, _a14["k-rounded-".concat(roundedMap4[rounded] || rounded)] = rounded, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-focus"] = focused && !disabled, _a14["k-invalid"] = !isValid, _a14["k-disabled"] = disabled, _a14["k-loading"] = loading, _a14["k-required"] = this.required, _a14)), style: !label ? style : __assign83(__assign83({}, style), { width: void 0 }), dir, onFocus: this.handleFocus, onBlur: this.handleBlur, onClick: this.handleWrapperClick, onMouseDown: preventDefaultNonInputs },
          React160.createElement(
            "div",
            { className: classNames("k-input-values") },
            React160.createElement("div", { className: classNames("k-chip-list", (_b3 = {}, _b3["k-chip-list-".concat(sizeMap4[size] || size)] = size, _b3)), role: "listbox", id: "tagslist-" + this.base.guid }, currentTagsToRender && currentTagsToRender.length > 0 && React160.createElement(TagList_default, { tagRender: this.props.tagRender, onTagDelete: this.onTagDelete, data: currentTagsToRender, guid: this.base.guid, focused: focusedTag ? currentTagsToRender.find(function(t) {
              return matchTags(t, focusedTag, dataItemKey);
            }) : void 0, size })),
            this.renderSearchBar(id)
          ),
          loading && React160.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading" }),
          clearButton && React160.createElement(ClearButton_default, { onClick: this.clearButtonClick }),
          !this.mobileMode && this.renderListContainer()
        ),
        this.mobileMode && this.renderAdaptiveListContainer()
      );
      return label ? React160.createElement(FloatingLabel, { label, editorId: id, editorValue: text || getItemValue(this.value[0], textField), editorValid: isValid, editorDisabled: disabled, style: { width: style ? style.width : void 0 }, children: component }) : component;
    };
    MultiSelectWithoutContext2.prototype.renderSearchBar = function(id) {
      var _a14 = this.state, activedescendant = _a14.activedescendant, focusedTag = _a14.focusedTag, currentValue = _a14.currentValue;
      var _b3 = this.props, disabled = _b3.disabled, placeholder = _b3.placeholder, ariaDescribedBy = _b3.ariaDescribedBy;
      var text = !this.mobileMode && (this.props.filter !== void 0 ? this.props.filter : this.state.text) || "";
      var focusedIndex = this.getFocusedState().focusedIndex;
      var placeholderToShow = this.value.length === 0 && !text ? placeholder : void 0;
      var adaptivePlaceholder = currentValue && currentValue.length > 0 ? void 0 : placeholder;
      var ariaActivedescendant = activedescendant === ActiveDescendant.TagsList && focusedTag !== void 0 ? "tag-".concat(this.base.guid, "-").concat(focusedTag.text.replace(/\s+/g, "-")) : "option-".concat(this.base.guid, "-").concat(focusedIndex);
      return React160.createElement(SearchBar_default, { id, size: Math.max((placeholderToShow || "").length, text.length, 1), tabIndex: this.props.tabIndex, accessKey: this.props.accessKey, placeholder: this.mobileMode && this.opened ? adaptivePlaceholder : placeholderToShow, value: text, onChange: this.onChangeHandler, onKeyDown: this.onInputKeyDown, ref: this.searchbarRef, disabled, expanded: this.opened, owns: this.base.listBoxId, role: "combobox", activedescendant: ariaActivedescendant, ariaDescribedBy: "tagslist-".concat(this.base.guid).concat(ariaDescribedBy ? " " + ariaDescribedBy : ""), ariaLabelledBy: this.props.ariaLabelledBy, ariaRequired: this.required });
    };
    MultiSelectWithoutContext2.prototype.onTagsNavigate = function(event2, state) {
      var keyCode = event2.keyCode;
      var focusedTag = this.state.focusedTag;
      var tags = this.sd;
      var itemsKey = this.props.dataItemKey;
      var focusedIndex = focusedTag ? tags.findIndex(function(t) {
        return matchTags(t, focusedTag, itemsKey);
      }) : -1;
      var newFocusedTag = void 0;
      var hasFocused = focusedIndex !== -1;
      if (keyCode === Keys.left) {
        if (hasFocused) {
          focusedIndex = Math.max(0, focusedIndex - 1);
        } else {
          focusedIndex = tags.length - 1;
        }
        newFocusedTag = tags[focusedIndex];
      } else if (keyCode === Keys.right) {
        if (focusedIndex === tags.length - 1) {
          newFocusedTag = void 0;
        } else if (hasFocused) {
          focusedIndex = Math.min(tags.length - 1, focusedIndex + 1);
          newFocusedTag = tags[focusedIndex];
        }
      } else if (keyCode === Keys.home) {
        newFocusedTag = tags[0];
      } else if (keyCode === Keys.end) {
        newFocusedTag = tags[tags.length - 1];
      } else if (keyCode === Keys.delete) {
        if (hasFocused) {
          var items = this.value;
          removeDataItems(items, tags[focusedIndex].data, itemsKey);
          this.triggerOnChange(items, state);
        }
      } else if (keyCode === Keys.backspace) {
        var items = this.value;
        if (hasFocused) {
          removeDataItems(items, tags[focusedIndex].data, itemsKey);
          this.triggerOnChange(items, state);
        } else if (!hasFocused && tags.length) {
          var removed = tags.pop();
          removeDataItems(items, removed.data, itemsKey);
          this.triggerOnChange(items, state);
        }
      }
      if (newFocusedTag !== focusedTag) {
        state.data.focusedTag = newFocusedTag;
        state.data.activedescendant = ActiveDescendant.TagsList;
      }
      this.applyState(state);
    };
    MultiSelectWithoutContext2.prototype.triggerOnChange = function(items, state) {
      if (this.props.value === void 0) {
        state.data.value = __spreadArray15([], items, true);
      }
      this.ob = [];
      this.setItems(items, this.ob);
      state.events.push({ type: "onChange" });
    };
    MultiSelectWithoutContext2.prototype.selectFocusedItem = function(event2) {
      var _a14 = this.props, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, virtual = _a14.virtual;
      var focusedIndex = this.getFocusedState().focusedIndex;
      var skip3 = virtual ? virtual.skip : 0;
      if (data2[focusedIndex - skip3] !== void 0) {
        this.handleItemClick(focusedIndex, event2);
      }
    };
    MultiSelectWithoutContext2.prototype.setItems = function(srcItems, destItems) {
      destItems.length = 0;
      destItems.push.apply(destItems, srcItems);
    };
    MultiSelectWithoutContext2.prototype.getFocusedState = function() {
      var focusedIndex = this.state.focusedIndex;
      var text = this.props.filter !== void 0 ? this.props.filter : this.state.text;
      var _a14 = this.props, allowCustom = _a14.allowCustom, _b3 = _a14.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = _a14.dataItemKey, virtual = _a14.virtual, textField = _a14.textField, _c2 = _a14.focusedItemIndex, focusedItemIndex = _c2 === void 0 ? itemIndexStartsWith : _c2;
      var skip3 = virtual && virtual.skip || 0;
      var focusedInd;
      if (focusedIndex !== void 0) {
        return {
          focusedIndex,
          focusedItem: data2[focusedIndex - skip3],
          focusedType: FocusedItemType.ListItem
        };
      }
      var selected = this.value;
      if (allowCustom && text) {
        return { focusedItem: null, focusedIndex: -1, focusedType: FocusedItemType.CustomItem };
      } else if (text) {
        focusedInd = focusedItemIndex(data2, text, textField);
        return {
          focusedItem: data2[focusedInd],
          focusedIndex: focusedInd + skip3,
          focusedType: FocusedItemType.ListItem
        };
      } else if (selected.length) {
        var last_1 = selected[selected.length - 1];
        focusedInd = data2.findIndex(function(i) {
          return areSame(i, last_1, dataItemKey);
        });
        if (data2[focusedInd] !== void 0) {
          return {
            focusedIndex: focusedInd + skip3,
            focusedItem: data2[focusedInd],
            focusedType: FocusedItemType.ListItem
          };
        }
        return { focusedType: FocusedItemType.None, focusedIndex: -1 };
      }
      return skip3 === 0 ? { focusedItem: data2[0], focusedIndex: 0, focusedType: FocusedItemType.ListItem } : { focusedType: FocusedItemType.None, focusedIndex: -1 };
    };
    MultiSelectWithoutContext2.prototype.focusElement = function(element6) {
      var _this3 = this;
      this.Aa = true;
      element6.focus();
      window.setTimeout(function() {
        return _this3.Aa = false;
      }, 0);
    };
    MultiSelectWithoutContext2.prototype.applyState = function(state) {
      this.base.applyState(state);
      this.ob = null;
    };
    MultiSelectWithoutContext2.prototype.calculateMedia = function(entries) {
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var entry = entries_1[_i];
        this.setState({ windowWidth: entry.target.clientWidth });
      }
      ;
    };
    ;
    MultiSelectWithoutContext2.displayName = "MultiSelect";
    MultiSelectWithoutContext2.propTypes = __assign83(__assign83({}, DropDownBase_default.propTypes), { autoClose: PropTypes73.bool, value: PropTypes73.arrayOf(PropTypes73.any), defaultValue: PropTypes73.arrayOf(PropTypes73.any), dataItemKey: PropTypes73.string, placeholder: PropTypes73.string, tags: PropTypes73.arrayOf(PropTypes73.shape({
      text: PropTypes73.string,
      data: PropTypes73.arrayOf(PropTypes73.any)
    })), tagRender: PropTypes73.func, id: PropTypes73.string, ariaLabelledBy: PropTypes73.string, ariaDescribedBy: PropTypes73.string, groupField: PropTypes73.string, list: PropTypes73.any, adaptive: PropTypes73.bool, adaptiveTitle: PropTypes73.string, onCancel: PropTypes73.func });
    MultiSelectWithoutContext2.defaultProps = __assign83(__assign83({}, DropDownBase_default.defaultProps), { autoClose: true, required: false, size: "medium", rounded: "medium", fillMode: "solid", groupMode: "modern" });
    return MultiSelectWithoutContext2;
  }(React160.Component)
);
var MultiSelectPropsContext = createPropsContext();
var MultiSelect = withPropsContext(MultiSelectPropsContext, MultiSelectWithoutContext);
MultiSelect.displayName = "KendoReactMultiSelect";

// node_modules/@progress/kendo-react-dropdowns/dist/es/common/MultiColumnList.js
var React161 = __toESM(require_react());
var __assign84 = function() {
  __assign84 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign84.apply(this, arguments);
};
var MultiColumnList = function(props) {
  return React161.createElement(List_default, __assign84({}, props, { wrapperCssClass: "k-table-body k-table-scroller", listClassName: classNames("k-table k-table-list", {
    "k-virtual-table": props.virtual !== void 0
  }), listStyle: __assign84({}, props.listStyle) }));
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiColumnComboBox/MultiColumnComboBox.js
var React162 = __toESM(require_react());
var PropTypes74 = __toESM(require_prop_types());
var __assign85 = function() {
  __assign85 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign85.apply(this, arguments);
};
var __rest37 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var columnWidth = function(width, defaultWidth) {
  if (width) {
    return typeof width === "number" ? width + "px" : width;
  }
  return defaultWidth;
};
var MultiColumnComboBoxPropsContext = createPropsContext();
var MultiColumnComboBox = React162.forwardRef(function(directProps, ref) {
  var props = usePropsContext(MultiColumnComboBoxPropsContext, directProps);
  var target = React162.useRef(null);
  var comboBoxRef = React162.useRef(null);
  var scrollbarWidth2 = getScrollbarWidth();
  var _a14 = props.columns, columns = _a14 === void 0 ? defaultProps18.columns : _a14, _b3 = props.popupSettings, popupSettings = _b3 === void 0 ? defaultProps18.popupSettings : _b3, className = props.className, size = props.size, onOpen = props.onOpen, onClose = props.onClose, onFocus = props.onFocus, onBlur = props.onBlur, onChange = props.onChange, onFilterChange = props.onFilterChange, onPageChange = props.onPageChange, other = __rest37(props, ["columns", "popupSettings", "className", "size", "onOpen", "onClose", "onFocus", "onBlur", "onChange", "onFilterChange", "onPageChange"]);
  React162.useImperativeHandle(target, function() {
    return {
      element: comboBoxRef.current && comboBoxRef.current.element,
      focus: function() {
        if (comboBoxRef.current) {
          comboBoxRef.current.focus();
        }
      },
      get value() {
        return comboBoxRef.current && comboBoxRef.current.value;
      },
      get name() {
        return comboBoxRef.current && comboBoxRef.current.name;
      },
      props
    };
  });
  React162.useImperativeHandle(ref, function() {
    return target.current;
  });
  var initialGroupHeader = React162.useMemo(function() {
    if (props.groupField !== void 0 && props.data) {
      return getItemValue(props.data[0], props.groupField);
    }
  }, [props.data, props.groupField]);
  var _c2 = React162.useState(initialGroupHeader), groupHeader = _c2[0], setGroupHeader = _c2[1];
  var _d = React162.useState(true), showStickyHeader = _d[0], setShowStickyHeader = _d[1];
  var header = React162.useMemo(function() {
    var renderer = React162.createElement("th", { className: "k-table-th", colSpan: columns.length }, groupHeader);
    return React162.createElement(
      React162.Fragment,
      null,
      props.header,
      React162.createElement(
        "div",
        { className: "k-table-header-wrap" },
        React162.createElement(
          "table",
          { className: "k-table", role: "presentation" },
          React162.createElement("colgroup", null, columns.map(function(column, i) {
            return React162.createElement("col", { key: column.uniqueKey ? column.uniqueKey : i, style: { width: column.width ? column.width : defaultProps18.width } });
          })),
          React162.createElement(
            "thead",
            { className: "k-table-thead" },
            React162.createElement("tr", { className: "k-table-row" }, columns.map(function(column, i) {
              return React162.createElement("th", { className: "k-table-th", key: column.uniqueKey ? column.uniqueKey : i }, column.header || "\xA0");
            })),
            groupHeader && showStickyHeader && React162.createElement("tr", { className: "k-table-group-row" }, props.groupStickyHeaderItemRender ? props.groupStickyHeaderItemRender.call(void 0, renderer, {}) : renderer)
          )
        )
      )
    );
  }, [props.header, columns, groupHeader, showStickyHeader]);
  var popupWidth = React162.useMemo(function() {
    return "calc(".concat(columns.map(function(column) {
      return columnWidth(column.width, defaultProps18.width);
    }).filter(Boolean).join(" + "), " + ").concat(scrollbarWidth2, "px + 4px)");
  }, [columns, scrollbarWidth2]);
  var skip3 = props.virtual ? props.virtual.skip : 0;
  var itemRender = React162.useCallback(function(li, liProps) {
    var children2 = columns.map(function(column, i) {
      return React162.createElement("span", { className: !props.itemRender ? "k-table-td" : void 0, style: !props.itemRender ? { width: column.width ? column.width : defaultProps18.width } : void 0, key: column.uniqueKey ? column.uniqueKey : i }, column.field ? getter(column.field)(liProps.dataItem) : "");
    });
    var group2 = void 0;
    var curGroup, prevGroup, groupGetter, data2 = props.data || [];
    var index = liProps.index - skip3;
    if (props.groupField !== void 0) {
      groupGetter = getter(props.groupField);
      curGroup = groupGetter(data2[index]);
      prevGroup = groupGetter(data2[index - 1]);
      if (curGroup && prevGroup && curGroup !== prevGroup) {
        group2 = curGroup;
      }
    }
    if (group2 && props.groupMode === "classic") {
      children2.push(React162.createElement(
        "div",
        { key: "group", className: "k-table-td k-table-group-td" },
        React162.createElement("span", null, group2)
      ));
    }
    var rendering = React162.cloneElement(li, __assign85(__assign85({}, li.props), { className: classNames("k-table-row", {
      "k-table-alt-row": liProps.index % 2 !== 0,
      "k-focus": liProps.focused,
      "k-selected": liProps.selected,
      "k-first": Boolean(group2)
    }) }), children2);
    return props.itemRender ? props.itemRender.call(void 0, rendering, liProps) : rendering;
  }, [columns, props.groupField, props.itemRender, props.data, skip3]);
  var handleEvent = React162.useCallback(function(handler, event2) {
    if (handler) {
      handler.call(void 0, __assign85(__assign85({}, event2), { target: target.current }));
    }
  }, []);
  var onOpenHandler = React162.useCallback(function(event2) {
    if (!props.virtual) {
      setGroupHeader(initialGroupHeader);
    }
    ;
    return handleEvent(onOpen, event2);
  }, [handleEvent, onOpen, props.virtual, initialGroupHeader]);
  var onCloseHandler = React162.useCallback(function(event2) {
    return handleEvent(onClose, event2);
  }, [onClose]);
  var onFocusHandler = React162.useCallback(function(event2) {
    return handleEvent(onFocus, event2);
  }, [onFocus]);
  var onBlurHandler = React162.useCallback(function(event2) {
    return handleEvent(onBlur, event2);
  }, [onBlur]);
  var onChangeHandler = React162.useCallback(function(event2) {
    return handleEvent(onChange, event2);
  }, [onChange]);
  var onPageChangeHandler = React162.useCallback(function(event2) {
    return handleEvent(onPageChange, event2);
  }, [onPageChange]);
  var onFilterChangeHandler = React162.useCallback(function(event2) {
    setGroupHeader(initialGroupHeader);
    return handleEvent(onFilterChange, __assign85(__assign85({}, event2), { mobileMode: event2.target.mobileMode }));
  }, [onFilterChange]);
  var onGroupScroll = React162.useCallback(function(event2) {
    setGroupHeader(event2.group);
  }, []);
  React162.useEffect(function() {
    setScrollbarWidth();
  });
  React162.useEffect(function() {
    var data2 = props.data;
    setGroupHeader(initialGroupHeader);
    if (data2 && data2.length !== 0) {
      setShowStickyHeader(true);
    } else {
      setShowStickyHeader(false);
    }
    ;
  }, [props.data]);
  var List2 = React162.useCallback(function(listProps) {
    return React162.createElement(MultiColumnList, __assign85({}, listProps));
  }, []);
  return React162.createElement(
    PopupPropsContext.Provider,
    { value: function(PopupProps) {
      return __assign85(__assign85({}, PopupProps), { popupClass: "k-dropdowngrid-popup" });
    } },
    React162.createElement(ComboBox, __assign85({}, other, { list: List2, popupSettings: __assign85(__assign85({ width: popupWidth }, popupSettings), { className: popupSettings.className }), ref: comboBoxRef, header, itemRender, groupHeaderItemRender: props.groupHeaderItemRender, size: props.size, rounded: props.rounded, fillMode: props.fillMode, groupMode: props.groupMode, groupField: props.groupField, isMultiColumn: true, onOpen: onOpenHandler, onClose: onCloseHandler, onFocus: onFocusHandler, onBlur: onBlurHandler, onChange: onChangeHandler, onFilterChange: onFilterChangeHandler, onPageChange: onPageChangeHandler, onGroupScroll, className: classNames("k-dropdowngrid", className), required: props.required, adaptive: props.adaptive, adaptiveFilter: props.adaptiveFilter, adaptiveTitle: props.adaptiveTitle, footer: props.footer, footerClassName: "k-table-footer" }))
  );
});
var propTypes3 = __assign85(__assign85({}, ComboBoxWithoutContext.propTypes), { columns: PropTypes74.any.isRequired });
var defaultProps18 = {
  columns: [],
  popupSettings: {},
  width: "200px",
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
MultiColumnComboBox.displayName = "KendoMultiColumnComboBox";
MultiColumnComboBox.propTypes = propTypes3;
MultiColumnComboBox.defaultProps = defaultProps18;

// node_modules/@progress/kendo-react-treeview/dist/es/utils/itemIdUtils.js
var EMPTY_ID = "";
var ZERO_LEVEL_ZERO_NODE_ID = "0";
var SEPARATOR = "_";
function getItemById(itemId, items, childrenField) {
  if (isIdZeroLevel(itemId)) {
    return items[Number(itemId)];
  } else {
    var rootParentItem = items[Number(getRootParentId(itemId))];
    var subItems = rootParentItem && rootParentItem[childrenField] || [];
    return subItems.length ? getItemById(getIdWithoutRootParentId(itemId), subItems, childrenField) : void 0;
  }
}
function getRootParentId(itemId) {
  return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];
}
function getIdWithoutRootParentId(itemId) {
  if (isIdEmptyOrZeroLevel(itemId)) {
    return itemId;
  } else {
    var firstSeparatorIndex = itemId.indexOf(SEPARATOR);
    return itemId.substring(firstSeparatorIndex + 1);
  }
}
function getFirstChildId(itemId) {
  return createId("0", itemId);
}
function createId(childId, parentId) {
  childId = childId.toString();
  return parentId ? parentId + SEPARATOR + childId : childId;
}
function getDirectParentId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);
}
function isIdEmptyOrZeroLevel(itemId) {
  return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;
}
function isIdZeroLevel(itemId) {
  return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;
}
function getAllShortIds(itemId) {
  return itemId.split(SEPARATOR);
}
function getShortId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);
}
function isItemFirstFromSiblings(itemId) {
  return getShortId(itemId) === ZERO_LEVEL_ZERO_NODE_ID;
}
function getDecrementedItemIdAfterRemoval(removedItemId, itemId) {
  var preservedItemId = itemId;
  removedItemId = "r" + SEPARATOR + removedItemId;
  itemId = "r" + SEPARATOR + itemId;
  var itemSharedPath = getDirectParentId(removedItemId) + SEPARATOR;
  if (itemId.startsWith(itemSharedPath)) {
    var itemNotSharedPath = itemId.substring(itemSharedPath.length);
    if (itemNotSharedPath) {
      var siblingShortId = getRootParentId(itemNotSharedPath);
      if (Number(getShortId(removedItemId)) < Number(siblingShortId)) {
        var decrementedId = itemSharedPath + (Number(siblingShortId) - 1).toString() + itemNotSharedPath.substring(siblingShortId.length);
        return getIdWithoutRootParentId(decrementedId);
      }
    }
  }
  return preservedItemId;
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/SortedPublicItemIds.js
var PROPS_COUNT_LIMIT = 5e4;
var SortedPublicItemIds = (
  /** @class */
  function() {
    function SortedPublicItemIds2() {
      this.objects = [];
    }
    SortedPublicItemIds2.prototype.init = function(publicItemIds) {
      var currentObj;
      for (var i = 0; i < publicItemIds.length; i++) {
        if (i % PROPS_COUNT_LIMIT === 0) {
          currentObj = {};
          this.objects.push(currentObj);
        }
        currentObj[publicItemIds[i]] = true;
      }
    };
    SortedPublicItemIds2.prototype.hasId = function(publicItemId) {
      return this.objects.some(function(obj) {
        return obj[publicItemId];
      });
    };
    return SortedPublicItemIds2;
  }()
);
var SortedPublicItemIds_default = SortedPublicItemIds;

// node_modules/@progress/kendo-react-treeview/dist/es/utils/misc.js
function getNestedValue(fieldName, dataItem) {
  var path = (fieldName || "").split(".");
  var data2 = dataItem;
  path.forEach(function(p) {
    data2 = data2 ? data2[p] : void 0;
  });
  return data2;
}
function isArray3(operation) {
  return operation.length !== void 0;
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/itemUtils.js
var __assign86 = function() {
  __assign86 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign86.apply(this, arguments);
};
function hasChildren(item, childrenField) {
  var children2 = getNestedValue(childrenField, item);
  return Boolean(children2 && children2.length);
}
function isItemExpandedAndWithChildren(item, fieldsSvc) {
  return fieldsSvc.expanded(item) && hasChildren(item, fieldsSvc.getChildrenField());
}
function resolveItemId(publicId, idField, items, childrenField) {
  var resolvedIds = resolveItemsIds([publicId], idField, items, childrenField);
  return resolvedIds.length ? resolvedIds[0] : void 0;
}
function resolveItemsIds(publicIds, idField, items, childrenField) {
  var result = [];
  var sortedIds = new SortedPublicItemIds_default();
  sortedIds.init(publicIds);
  resolveItemsIdsHelper(sortedIds, idField, items, EMPTY_ID, result, childrenField);
  return result;
}
function updateItem(items, itemId, update2, cloneField, childrenField) {
  var _a14;
  var itemIndex = Number(getRootParentId(itemId));
  if (itemIndex >= items.length) {
    return items;
  }
  var result = items;
  var item = items[itemIndex];
  if (!item[cloneField]) {
    result = items.slice();
    item = result[itemIndex] = Object.assign({}, item, (_a14 = {}, _a14[cloneField] = true, _a14));
  }
  if (isIdZeroLevel(itemId)) {
    update2(item);
  } else if (item[childrenField]) {
    item[childrenField] = updateItem(item[childrenField], getIdWithoutRootParentId(itemId), update2, cloneField, childrenField);
  }
  return result;
}
function isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc) {
  var ids = getAllShortIds(itemId);
  var currentItems = items;
  for (var i = 0; i < ids.length; i++) {
    var currentItem = currentItems[Number(ids[i])];
    if (fieldsSvc.disabled(currentItem)) {
      return false;
    } else {
      currentItems = currentItem[fieldsSvc.getChildrenField()];
    }
  }
  return true;
}
function getAllDirectIndirectChildrenIds(item, itemId, childrenField, idField) {
  return idField ? getChildrenPublicIds(item) : getChildrenHierarchicalIndices(item, itemId);
  function getChildrenHierarchicalIndices(startItem, startItemId) {
    var result = [];
    var children2 = startItem[childrenField] || [];
    for (var i = 0; i < children2.length; i++) {
      var id = createId(i, startItemId);
      result.push(id);
      result = result.concat(getChildrenHierarchicalIndices(children2[i], id));
    }
    return result;
  }
  function getChildrenPublicIds(startItem) {
    var result = [];
    var children2 = startItem[childrenField] || [];
    for (var i = 0; i < children2.length; i++) {
      result.push(getNestedValue(idField, children2[i]));
      result = result.concat(getChildrenPublicIds(children2[i]));
    }
    return result;
  }
}
function areAllDirectChildrenChecked(item, itemId, idField, childrenField, check) {
  var children2 = item[childrenField] || [];
  return children2.every(function(child, index) {
    return check.indexOf(idField ? getNestedValue(idField, child) : createId(index, itemId)) > -1;
  });
}
function getAllParents(itemId, childrenField, items) {
  var result = [];
  var ids = getAllShortIds(itemId);
  var currentItems = items;
  for (var i = 0; i < ids.length - 1; i++) {
    if (!currentItems) {
      break;
    }
    var currentItem = currentItems[Number(ids[i])];
    result.push(currentItem);
    currentItems = currentItem[childrenField];
  }
  return result;
}
function removeItem(itemId, childrenField, items) {
  var result = items.slice();
  if (isIdZeroLevel(itemId)) {
    result.splice(Number(itemId), 1);
  } else {
    var rootParentIndex = Number(getRootParentId(itemId));
    var rootParent = result[rootParentIndex] = __assign86({}, result[rootParentIndex]);
    rootParent[childrenField] = removeItem(getIdWithoutRootParentId(itemId), childrenField, rootParent[childrenField]);
  }
  return result;
}
function addItem(item, operation, childrenField, targetItemId, items) {
  var result = items.slice();
  if (isIdZeroLevel(targetItemId)) {
    if (operation === "child") {
      var targetItem = result[Number(targetItemId)] = __assign86({}, result[Number(targetItemId)]);
      if (targetItem[childrenField]) {
        targetItem[childrenField] = targetItem[childrenField].slice();
        targetItem[childrenField].push(item);
      } else {
        targetItem[childrenField] = [item];
      }
    } else {
      result.splice(Number(targetItemId) + (operation === "after" ? 1 : 0), 0, item);
    }
  } else {
    var rootParentIndex = Number(getRootParentId(targetItemId));
    var rootParent = result[rootParentIndex] = __assign86({}, result[rootParentIndex]);
    rootParent[childrenField] = addItem(item, operation, childrenField, getIdWithoutRootParentId(targetItemId), rootParent[childrenField]);
  }
  return result;
}
function resolveItemsIdsHelper(publicItemIds, idField, items, parentItemId, resolvedIds, childrenField) {
  for (var i = 0; i < items.length; i++) {
    var item = items[i];
    var id = createId(i, parentItemId);
    if (publicItemIds.hasId(getNestedValue(idField, item))) {
      resolvedIds.push(id);
    }
    if (hasChildren(item, childrenField)) {
      resolveItemsIdsHelper(publicItemIds, idField, getNestedValue(childrenField, item), id, resolvedIds, childrenField);
    }
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/getItemIdUponKeyboardNavigation.js
function getItemIdUponKeyboardNavigation(item, itemId, items, keyCode, fieldsSvc) {
  switch (keyCode) {
    case Keys.left:
      return getIdUponLeftKey();
    case Keys.right:
      return getIdUponRightKey();
    case Keys.up:
      return getIdUponUpKey();
    case Keys.down:
      return getIdUponDownKey();
    case Keys.home:
      return ZERO_LEVEL_ZERO_NODE_ID;
    case Keys.end:
      return getIdUponEndKey();
    default:
      return itemId;
  }
  function getIdUponLeftKey() {
    return isIdZeroLevel(itemId) || fieldsSvc.expanded(item) && isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc) ? itemId : getDirectParentId(itemId);
  }
  function getIdUponRightKey() {
    return isItemExpandedAndWithChildren(item, fieldsSvc) ? getFirstChildId(itemId) : itemId;
  }
  function getIdUponUpKey() {
    var index = Number(getShortId(itemId));
    var parentId = getDirectParentId(itemId);
    return index ? getLastNotOpenedChildId(createId(index - 1, parentId), items, fieldsSvc) : isIdZeroLevel(itemId) ? itemId : parentId;
  }
  function getIdUponDownKey() {
    if (isItemExpandedAndWithChildren(item, fieldsSvc)) {
      return getFirstChildId(itemId);
    } else {
      return getNextItemId(itemId, items, fieldsSvc) || itemId;
    }
  }
  function getIdUponEndKey() {
    var result = (items.length - 1).toString();
    var currentItem = items[items.length - 1];
    var children2;
    while (isItemExpandedAndWithChildren(currentItem, fieldsSvc)) {
      children2 = currentItem[fieldsSvc.getChildrenField()];
      result = createId(children2.length - 1, result);
      currentItem = children2[children2.length - 1];
    }
    return result;
  }
}
function getNextItemId(itemId, items, fieldsSvc) {
  var parentId = getDirectParentId(itemId);
  var parent = parentId ? getItemById(parentId, items, fieldsSvc.getChildrenField()) : void 0;
  var siblings = parent ? parent[fieldsSvc.getChildrenField()] : items;
  var index = Number(getShortId(itemId));
  return index < siblings.length - 1 ? createId(index + 1, parentId) : parent ? getNextItemId(parentId, items, fieldsSvc) : void 0;
}
function getLastNotOpenedChildId(itemId, items, fieldsSvc) {
  var item = getItemById(itemId, items, fieldsSvc.getChildrenField());
  if (isItemExpandedAndWithChildren(item, fieldsSvc)) {
    return getLastNotOpenedChildId(createId(item[fieldsSvc.getChildrenField()].length - 1, itemId), items, fieldsSvc);
  } else {
    return itemId;
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/utils/consts.js
var EXPAND_FIELD = "expanded";
var TEXT_FIELD = "text";
var DISABLED_FIELD = "disabled";
var CHILDREN_FIELD = "items";
var HAS_CHILDREN_FIELD = "hasChildren";
var SELECT_FIELD = "selected";
var CHECK_FIELD = "checked";
var CHECK_INDETERMINATE_FIELD = "checkIndeterminate";
var DOM_KENDO_ITEM_ID_FIELD = "_kendoItemId";
var DOM_KENDO_TREEVIEW_GUID_FIELD = "_kendoTreeViewGuid";

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewItem.js
var React163 = __toESM(require_react());
var __extends65 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign87 = function() {
  __assign87 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign87.apply(this, arguments);
};
var sizeMap5 = kendoThemeMaps.sizeMap;
var TreeViewItemPropsContext = React163.createContext(function(props) {
  return props;
});
var TreeViewItemWithoutContext = (
  /** @class */
  function(_super) {
    __extends65(TreeViewItemWithoutContext2, _super);
    function TreeViewItemWithoutContext2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.itemGuid = guid();
      _this3.onCheckChange = function(e) {
        _this3.props.onCheckChange(e, _this3.item, _this3.itemId);
      };
      _this3.onExpandChange = function(e) {
        _this3.props.onExpandChange(e, _this3.item, _this3.itemId);
      };
      _this3.onItemClick = function(e) {
        _this3.props.onItemClick(e, _this3.item, _this3.itemId);
      };
      _this3.onPress = function(e) {
        _this3.props.onPress(e.event, _this3.item, _this3.itemId);
      };
      _this3.onDrag = function(e) {
        _this3.props.onDrag(e.event, _this3.item, _this3.itemId);
      };
      _this3.onRelease = function(e) {
        _this3.props.onRelease(e.event, _this3.item, _this3.itemId);
      };
      _this3.assignDraggableMeta = function(element6) {
        if (element6) {
          element6[DOM_KENDO_ITEM_ID_FIELD] = _this3.props.itemId;
          element6[DOM_KENDO_TREEVIEW_GUID_FIELD] = _this3.props.treeGuid;
        }
      };
      return _this3;
    }
    TreeViewItemWithoutContext2.prototype.render = function() {
      var _this3 = this;
      var subitems = this.renderSubitemsIfApplicable();
      var itemInPart = this.renderItemInPart();
      return React163.createElement(
        "li",
        { className: classNames("k-treeview-item"), tabIndex: this.tabIndex, role: "treeitem", "aria-expanded": this.ariaExpanded, "aria-selected": this.ariaSelected, "aria-checked": this.ariaChecked, "aria-disabled": this.disabled ? true : void 0, ref: function(el) {
          return _this3.itemElement = el;
        } },
        React163.createElement(
          "div",
          { className: "k-treeview-".concat(this.props.position), ref: this.assignDraggableMeta },
          this.renderExpandIcon(),
          this.renderCheckbox(),
          this.props.draggable ? React163.createElement(Draggable, { onPress: this.onPress, onDrag: this.onDrag, onRelease: this.onRelease }, itemInPart) : itemInPart
        ),
        this.props.animate ? React163.createElement(Reveal, { transitionEnterDuration: 200, transitionExitDuration: 200, style: { display: "block" }, children: subitems }) : subitems
      );
    };
    TreeViewItemWithoutContext2.prototype.componentDidMount = function() {
      var focusedItemId = this.props.focusedItemId;
      var currentItemId = this.itemId;
      if (focusedItemId && focusedItemId === currentItemId) {
        this.props.onFocusDomElNeeded(this.itemElement);
      }
      if (this.checkboxElement) {
        this.checkboxElement.indeterminate = this.fieldsSvc.checkIndeterminate(this.item);
      }
    };
    TreeViewItemWithoutContext2.prototype.componentDidUpdate = function(prevProps) {
      var focusedItemId = this.props.focusedItemId;
      if (focusedItemId && focusedItemId !== prevProps.focusedItemId && focusedItemId === this.itemId) {
        this.props.onFocusDomElNeeded(this.itemElement);
      }
      if (this.checkboxElement) {
        var indeterminate = this.fieldsSvc.checkIndeterminate(this.item);
        if (indeterminate !== prevProps.fieldsService.checkIndeterminate(prevProps.item)) {
          this.checkboxElement.indeterminate = indeterminate;
        }
      }
    };
    TreeViewItemWithoutContext2.prototype.renderCheckbox = function() {
      var _a14;
      var _this3 = this;
      if (this.props.checkboxes) {
        var size = this.props.size;
        return React163.createElement(
          "div",
          { className: classNames("k-checkbox-wrap") },
          React163.createElement("input", { type: "checkbox", className: classNames("k-checkbox k-rounded-md", (_a14 = {}, _a14["k-checkbox-".concat(sizeMap5[size] || size)] = size, _a14["k-disabled"] = this.disabled, _a14)), "aria-label": this.item.text, checked: Boolean(this.fieldsSvc.checked(this.item)), id: this.itemGuid, tabIndex: -1, onChange: this.onCheckChange, ref: function(el) {
            return _this3.checkboxElement = el;
          } }),
          React163.createElement("label", { className: "k-checkbox-label", htmlFor: this.itemGuid })
        );
      } else {
        return void 0;
      }
    };
    TreeViewItemWithoutContext2.prototype.renderExpandIcon = function() {
      var renderExpand = this.props.expandIcons && // If it is explicitly said that the item has children (even not loaded yet)
      // or if the item actually has children, then render the icon.
      (this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()));
      return renderExpand && // Allowing the toggle-button even with `disabled=true` might be a valid case!
      // Re-evaluate the classes bellow if such scenario occurs
      React163.createElement(
        "span",
        { className: classNames("k-treeview-toggle", { "k-disabled": this.disabled }), onClick: this.onExpandChange },
        React163.createElement(IconWrap, __assign87({}, this.getIconProps()))
      );
    };
    TreeViewItemWithoutContext2.prototype.renderSubitemsIfApplicable = function() {
      var _this3 = this;
      var data2 = this.fieldsSvc.children(this.item);
      return isItemExpandedAndWithChildren(this.item, this.fieldsSvc) ? React163.createElement("ul", { className: "k-treeview-group", role: "group" }, data2.map(function(item, index) {
        return React163.createElement(TreeViewItem, { item, position: index === 0 ? "top" : index === data2.length - 1 ? "bot" : "mid", itemId: createId(index, _this3.itemId), treeGuid: _this3.props.treeGuid, animate: _this3.props.animate, focusedItemId: _this3.props.focusedItemId, tabbableItemId: _this3.props.tabbableItemId, fieldsService: _this3.props.fieldsService, itemUI: _this3.props.itemUI, checkboxes: _this3.props.checkboxes, ariaMultiSelectable: _this3.props.ariaMultiSelectable, onItemClick: _this3.props.onItemClick, onFocusDomElNeeded: _this3.props.onFocusDomElNeeded, draggable: _this3.props.draggable, onPress: _this3.props.onPress, onDrag: _this3.props.onDrag, onRelease: _this3.props.onRelease, expandIcons: _this3.props.expandIcons, onExpandChange: _this3.props.onExpandChange, onCheckChange: _this3.props.onCheckChange, key: index, size: _this3.props.size, disabled: _this3.disabled, isRtl: _this3.props.isRtl });
      })) : void 0;
    };
    TreeViewItemWithoutContext2.prototype.renderItemInPart = function() {
      return React163.createElement(
        "span",
        { className: classNames("k-treeview-leaf", {
          "k-focus": this.props.focusedItemId === this.itemId,
          "k-selected": this.fieldsSvc.selected(this.item),
          "k-disabled": this.disabled
        }), style: { touchAction: "none" }, onClick: this.onItemClick },
        React163.createElement("span", { className: "k-treeview-leaf-text" }, this.props.itemUI ? React163.createElement(this.props.itemUI, { item: this.item, itemHierarchicalIndex: this.itemId }) : this.fieldsSvc.text(this.item))
      );
    };
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "fieldsSvc", {
      get: function() {
        return this.props.fieldsService;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "itemId", {
      get: function() {
        return this.props.itemId;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "item", {
      get: function() {
        return this.props.item;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "tabIndex", {
      get: function() {
        return (this.props.focusedItemId || this.props.tabbableItemId) === this.itemId ? 0 : -1;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaExpanded", {
      get: function() {
        return this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()) ? Boolean(this.fieldsSvc.expanded(this.item)) : void 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "disabled", {
      get: function() {
        return this.props.disabled || this.fieldsSvc.disabled(this.item);
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaChecked", {
      get: function() {
        if (this.props.checkboxes) {
          if (this.fieldsSvc.checked(this.item)) {
            return "true";
          } else {
            return this.fieldsSvc.checkIndeterminate(this.item) ? "mixed" : "false";
          }
        } else {
          return void 0;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewItemWithoutContext2.prototype, "ariaSelected", {
      get: function() {
        if (this.fieldsSvc.selected(this.item)) {
          return true;
        } else if (this.props.ariaMultiSelectable) {
          return this.disabled ? void 0 : false;
        } else {
          return void 0;
        }
      },
      enumerable: false,
      configurable: true
    });
    TreeViewItemWithoutContext2.prototype.getIconProps = function() {
      var expanded = this.fieldsSvc.expanded(this.item);
      var loading = expanded && !hasChildren(this.item, this.fieldsSvc.getChildrenField());
      if (loading) {
        return { name: "loading" };
      }
      return expanded ? { name: "caret-alt-down", icon: caretAltDownIcon } : { name: this.props.isRtl ? "caret-alt-left" : "caret-alt-right", icon: this.props.isRtl ? caretAltLeftIcon : caretAltRightIcon };
    };
    TreeViewItemWithoutContext2.defaultProps = {
      position: "top"
    };
    return TreeViewItemWithoutContext2;
  }(React163.Component)
);
var TreeViewItem = React163.forwardRef(function(props, ref) {
  var contextPropsCallback = React163.useContext(TreeViewItemPropsContext);
  var treeViewItemProps = contextPropsCallback.call(void 0, props);
  return React163.createElement(TreeViewItemWithoutContext, __assign87({ ref }, treeViewItemProps));
});
TreeViewItem.displayName = "TreeViewItem";

// node_modules/@progress/kendo-react-treeview/dist/es/utils/FieldsService.js
var FieldsService = (
  /** @class */
  function() {
    function FieldsService2(treeViewProps) {
      this.expandField = treeViewProps.expandField;
      this.selectField = treeViewProps.selectField;
      this.hasChildrenField = treeViewProps.hasChildrenField;
      this.childrenField = treeViewProps.childrenField;
      this.textField = treeViewProps.textField;
      this.disableField = treeViewProps.disableField;
      this.checkField = treeViewProps.checkField;
      this.checkIndeterminateField = treeViewProps.checkIndeterminateField;
      this.focusIdField = treeViewProps.focusIdField;
    }
    FieldsService2.prototype.expanded = function(item) {
      return getNestedValue(this.expandField, item);
    };
    FieldsService2.prototype.selected = function(item) {
      return getNestedValue(this.selectField, item);
    };
    FieldsService2.prototype.text = function(item) {
      return getNestedValue(this.textField, item);
    };
    FieldsService2.prototype.disabled = function(item) {
      return getNestedValue(this.disableField, item);
    };
    FieldsService2.prototype.hasChildren = function(item) {
      return getNestedValue(this.hasChildrenField, item);
    };
    FieldsService2.prototype.children = function(item) {
      var children2 = getNestedValue(this.childrenField, item);
      return children2 ? children2 : [];
    };
    FieldsService2.prototype.checked = function(item) {
      return getNestedValue(this.checkField, item);
    };
    FieldsService2.prototype.checkIndeterminate = function(item) {
      return getNestedValue(this.checkIndeterminateField, item);
    };
    FieldsService2.prototype.focusId = function(item) {
      return this.focusIdField && getNestedValue(this.focusIdField, item);
    };
    FieldsService2.prototype.getChildrenField = function() {
      return this.childrenField;
    };
    return FieldsService2;
  }()
);
var FieldsService_default = FieldsService;

// node_modules/@progress/kendo-react-treeview/dist/es/package-metadata.js
var packageMetadata13 = {
  name: "@progress/kendo-react-treeview",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1686225745,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-treeview/dist/es/TreeView.js
var React164 = __toESM(require_react());
var PropTypes75 = __toESM(require_prop_types());
var __extends66 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var sizeMap6 = kendoThemeMaps.sizeMap;
var TreeView = (
  /** @class */
  function(_super) {
    __extends66(TreeView2, _super);
    function TreeView2(props) {
      var _this3 = _super.call(this, props) || this;
      _this3.state = { focusedItemId: void 0, focusedItemPublicId: void 0, tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID };
      _this3.fieldsSvc = null;
      _this3.allowExplicitFocus = false;
      _this3.treeGuid = guid();
      _this3.i = null;
      _this3.onFocusDomElNeeded = function(domItem) {
        if (_this3.allowExplicitFocus) {
          _this3.focusDomItem(domItem);
        }
      };
      _this3.onCheckChange = function(event2, item, itemId) {
        _this3.setFocus(itemId);
        _this3.dispatchCheckChange(event2, item, itemId);
      };
      _this3.onExpandChange = function(event2, item, itemId) {
        _this3.setFocus(itemId);
        _this3.dispatchExpandChange(event2, item, itemId);
      };
      _this3.onPress = function(_event, item, itemId) {
        if (_this3.props.onItemDragStart) {
          _this3.props.onItemDragStart.call(void 0, { target: _this3, item, itemHierarchicalIndex: itemId });
        }
      };
      _this3.onDrag = function(event2, item, itemId) {
        var pageX = event2.pageX, pageY = event2.pageY, clientX = event2.clientX, clientY = event2.clientY;
        if (_this3.props.onItemDragOver) {
          _this3.props.onItemDragOver.call(void 0, {
            target: _this3,
            item,
            itemHierarchicalIndex: itemId,
            pageX,
            pageY,
            clientX,
            clientY
          });
        }
      };
      _this3.onRelease = function(event2, item, itemId) {
        var pageX = event2.pageX, pageY = event2.pageY, clientX = event2.clientX, clientY = event2.clientY;
        if (_this3.props.onItemDragEnd) {
          _this3.props.onItemDragEnd.call(void 0, {
            target: _this3,
            item,
            itemHierarchicalIndex: itemId,
            pageX,
            pageY,
            clientX,
            clientY
          });
        }
      };
      _this3.onItemClick = function(event2, item, itemId) {
        _this3.setFocus(itemId);
        _this3.dispatchItemClick(event2, item, itemId);
      };
      _this3.onFocus = function() {
        clearTimeout(_this3.blurRequest);
        if (_this3.state.focusedItemId === void 0 && _this3.data.length) {
          _this3.setFocus(_this3.state.tabbableItemId);
        }
      };
      _this3.onBlur = function() {
        clearTimeout(_this3.blurRequest);
        _this3.blurRequest = window.setTimeout(function() {
          return _this3.setFocus(void 0);
        }, 0);
      };
      _this3.onKeyDown = function(event2) {
        var focusedItem = _this3.getFocusedItem();
        if (focusedItem && _this3.fieldsSvc) {
          var newItemId = getItemIdUponKeyboardNavigation(focusedItem, _this3.state.focusedItemId, _this3.data, event2.keyCode, _this3.fieldsSvc);
          if (newItemId !== _this3.state.focusedItemId) {
            event2.preventDefault();
            _this3.allowExplicitFocus = true;
            _this3.setFocus(newItemId);
          }
          _this3.dispatchEventsOnKeyDown(event2, focusedItem);
        }
      };
      validatePackage2(packageMetadata13);
      return _this3;
    }
    Object.defineProperty(TreeView2.prototype, "element", {
      /**
       * @hidden
       */
      get: function() {
        return this.i;
      },
      enumerable: false,
      configurable: true
    });
    TreeView2.prototype.render = function() {
      var _a14;
      var _this3 = this;
      this.fieldsSvc = new FieldsService_default(this.props);
      var _b3 = this.props, size = _b3.size, className = _b3.className;
      return React164.createElement(
        "div",
        { className: classNames("k-treeview", (_a14 = {}, _a14["k-treeview-".concat(sizeMap6[size] || size)] = size, _a14["k-user-select-none"] = this.props.draggable, _a14["k-rtl"] = this.props.dir === "rtl", _a14), className), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, role: "tree", "aria-multiselectable": this.ariaMultiSelectable ? true : void 0, "aria-label": this.props["aria-label"], "aria-labelledby": this.props["aria-labelledby"], ref: function(element6) {
          return _this3.i = element6;
        }, tabIndex: this.props.tabIndex },
        React164.createElement("ul", { className: "k-treeview-lines k-treeview-group", role: "group" }, this.data.map(function(item, index) {
          return React164.createElement(TreeViewItem, { item, position: index === 0 ? "top" : index === _this3.data.length - 1 ? "bot" : "mid", itemId: index.toString(), treeGuid: _this3.treeGuid, animate: _this3.props.animate, focusedItemId: _this3.state.focusedItemId, tabbableItemId: _this3.state.tabbableItemId, fieldsService: _this3.fieldsSvc, itemUI: _this3.props.item, checkboxes: _this3.props.checkboxes, ariaMultiSelectable: _this3.ariaMultiSelectable, onItemClick: _this3.onItemClick, onFocusDomElNeeded: _this3.onFocusDomElNeeded, draggable: _this3.props.draggable, onPress: _this3.onPress, onDrag: _this3.onDrag, onRelease: _this3.onRelease, expandIcons: _this3.props.expandIcons, onExpandChange: _this3.onExpandChange, onCheckChange: _this3.onCheckChange, key: index, size, isRtl: _this3.props.dir === "rtl" });
        }))
      );
    };
    TreeView2.prototype.componentDidUpdate = function() {
      this.allowExplicitFocus = false;
      this.refocusDueToFocusIdField();
    };
    TreeView2.prototype.dispatchEventsOnKeyDown = function(event2, focusedItem) {
      var _this3 = this;
      if (this.fieldsSvc === null) {
        return;
      }
      var isEnabled = function() {
        return _this3.fieldsSvc && isEnabledAndAllParentsEnabled(_this3.state.focusedItemId, _this3.data, _this3.fieldsSvc);
      };
      if (event2.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {
        this.dispatchExpandChange(event2, focusedItem, this.state.focusedItemId);
      } else if (event2.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) && (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {
        this.dispatchExpandChange(event2, focusedItem, this.state.focusedItemId);
      } else if (event2.keyCode === Keys.enter && isEnabled()) {
        this.dispatchItemClick(event2, focusedItem, this.state.focusedItemId);
      } else if (event2.keyCode === Keys.space && isEnabled()) {
        event2.preventDefault();
        this.dispatchCheckChange(event2, focusedItem, this.state.focusedItemId);
      }
    };
    TreeView2.prototype.setFocus = function(focusedItemId) {
      if (focusedItemId && this.fieldsSvc) {
        if (this.fieldsSvc.focusIdField) {
          var item = this.getItemById(focusedItemId);
          this.setState({ focusedItemId, focusedItemPublicId: this.fieldsSvc.focusId(item) });
        } else {
          this.setState({ focusedItemId });
        }
      } else {
        this.setState(function(state) {
          return {
            focusedItemId: void 0,
            focusedItemPublicId: void 0,
            tabbableItemId: state.focusedItemId
          };
        });
      }
    };
    TreeView2.prototype.getFocusedItem = function() {
      return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : void 0;
    };
    TreeView2.prototype.getItemById = function(itemId) {
      return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);
    };
    TreeView2.prototype.dispatchCheckChange = function(dispatchedEvent, item, itemId) {
      dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
    };
    TreeView2.prototype.dispatchExpandChange = function(dispatchedEvent, item, itemId) {
      dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
    };
    TreeView2.prototype.dispatchItemClick = function(dispatchedEvent, item, itemId) {
      dispatchEvent(this.props.onItemClick, dispatchedEvent, this, { item, itemHierarchicalIndex: itemId });
    };
    TreeView2.prototype.refocusDueToFocusIdField = function() {
      if (this.fieldsSvc && this.fieldsSvc.focusIdField) {
        var focusedItemPublicId = this.state.focusedItemPublicId;
        if (focusedItemPublicId) {
          var focusedItemId = this.props.getFocusHierarchicalIndex ? this.props.getFocusHierarchicalIndex(focusedItemPublicId) : resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);
          if (focusedItemId !== this.state.focusedItemId) {
            this.allowExplicitFocus = true;
            this.setState({ focusedItemId });
          }
        }
      }
    };
    Object.defineProperty(TreeView2.prototype, "ariaMultiSelectable", {
      get: function() {
        return this.props["aria-multiselectable"] === true || this.props["aria-multiselectable"] === "true";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeView2.prototype, "data", {
      get: function() {
        return this.props.data || [];
      },
      enumerable: false,
      configurable: true
    });
    TreeView2.prototype.focusDomItem = function(domItem) {
      domItem.focus();
    };
    Object.defineProperty(TreeView2.prototype, "guid", {
      /**
       * Returns the `guid` which is associated with the TreeView.
       */
      get: function() {
        return this.treeGuid;
      },
      enumerable: false,
      configurable: true
    });
    TreeView2.propTypes = {
      data: PropTypes75.arrayOf(PropTypes75.any),
      animate: PropTypes75.bool,
      tabIndex: PropTypes75.number,
      focusIdField: PropTypes75.string,
      getHierarchicalIndexById: PropTypes75.func,
      onExpandChange: PropTypes75.func,
      onItemClick: PropTypes75.func,
      expandField: PropTypes75.string,
      selectField: PropTypes75.string,
      childrenField: PropTypes75.string,
      hasChildrenField: PropTypes75.string,
      textField: PropTypes75.string,
      disableField: PropTypes75.string,
      item: PropTypes75.any,
      "aria-multiselectable": function(props, propName, componentName) {
        if (props[propName] !== void 0 && props[propName] !== true && props[propName] !== false && props[propName] !== "true" && props[propName] !== "false") {
          return new Error("Invalid prop `" + propName + "` supplied to `" + componentName + "`. Validation failed.");
        }
        return null;
      },
      "aria-label": PropTypes75.string,
      "aria-labelledby": PropTypes75.string,
      size: PropTypes75.oneOf([null, "small", "medium", "large"]),
      dir: PropTypes75.string
    };
    TreeView2.defaultProps = {
      animate: true,
      expandField: EXPAND_FIELD,
      selectField: SELECT_FIELD,
      hasChildrenField: HAS_CHILDREN_FIELD,
      childrenField: CHILDREN_FIELD,
      textField: TEXT_FIELD,
      disableField: DISABLED_FIELD,
      checkField: CHECK_FIELD,
      checkIndeterminateField: CHECK_INDETERMINATE_FIELD,
      size: "medium"
    };
    return TreeView2;
  }(React164.Component)
);

// node_modules/@progress/kendo-react-treeview/dist/es/processTreeViewItems.js
var __assign88 = function() {
  __assign88 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign88.apply(this, arguments);
};
function processTreeViewItems(data2, operations) {
  if (!data2 || !data2.length) {
    return [];
  }
  var result = data2;
  var cloneField = operations.cloneField || "cloned";
  var expandField = operations.expandField || EXPAND_FIELD;
  var selectField = operations.selectField || SELECT_FIELD;
  var checkField = operations.checkField || CHECK_FIELD;
  var childrenField = operations.childrenField || CHILDREN_FIELD;
  result = handleOperation(result, expandField, operations.expand, cloneField, childrenField);
  result = handleOperation(result, selectField, operations.select, cloneField, childrenField);
  result = handleOperation(result, checkField, operations.check, cloneField, childrenField);
  applyCheckIndeterminate(result, childrenField, operations.check);
  return result;
}
function handleOperation(items, defaultField, operation, cloneField, childrenField) {
  if (operation) {
    var _a14 = parseOperation(operation, defaultField), ids = _a14.ids, field = _a14.field;
    var indices = !isArray3(operation) && operation.idField ? resolveItemsIds(ids, operation.idField, items, childrenField) : ids;
    return raiseFlags(items, indices, field, cloneField, childrenField);
  } else {
    return items;
  }
}
function parseOperation(operation, defaultField) {
  var ids;
  var field;
  if (isArray3(operation)) {
    ids = operation;
    field = defaultField;
  } else {
    ids = operation.ids || [];
    field = operation.operationField || defaultField;
  }
  return { ids, field };
}
function raiseFlags(items, indices, field, cloneField, childrenField) {
  var result = items;
  indices.forEach(function(itemIndex) {
    result = updateItem(result, itemIndex, function(item) {
      return raiseNestedFlag(field, item);
    }, cloneField, childrenField);
  });
  return result;
}
function raiseNestedFlag(fieldName, dataItem) {
  var fields = (fieldName || "").split(".");
  var item = dataItem;
  for (var index = 0; index < fields.length; index++) {
    var field = fields[index];
    if (index === fields.length - 1) {
      item[field] = true;
    } else if (item[field] !== void 0) {
      item[field] = __assign88({}, item[field]);
      item = item[field];
    } else {
      return;
    }
  }
}
function applyCheckIndeterminate(items, childrenField, check) {
  if (check && !isArray3(check) && check.applyCheckIndeterminate) {
    var checkField = parseOperation(check, CHECK_FIELD).field;
    var checkIndeterminateField = check.checkIndeterminateField || CHECK_INDETERMINATE_FIELD;
    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      var subItems = item[childrenField];
      if (subItems) {
        applyCheckIndeterminateHelper(subItems, getNestedValue(checkField, item) ? [] : [item], childrenField, checkField, checkIndeterminateField);
      }
    }
  }
}
function applyCheckIndeterminateHelper(data2, parents, childrenField, checkField, checkIndeterminateField) {
  var parentsAlreadyUpdated = false;
  for (var i = 0; i < data2.length; i++) {
    var item = data2[i];
    if (getNestedValue(checkField, item)) {
      if (!parentsAlreadyUpdated) {
        for (var j = 0; j < parents.length; j++) {
          raiseNestedFlag(checkIndeterminateField, parents[j]);
        }
      }
      parentsAlreadyUpdated = true;
      if (item[childrenField]) {
        applyCheckIndeterminateHelper(item[childrenField], [], childrenField, checkField, checkIndeterminateField);
      }
    } else {
      if (item[childrenField]) {
        applyCheckIndeterminateHelper(item[childrenField], parentsAlreadyUpdated ? [item] : parents.concat([item]), childrenField, checkField, checkIndeterminateField);
      }
    }
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/moveTreeViewItem.js
function moveTreeViewItem(sourceItemHierarchicalIndex, sourceData, operation, targetItemHierarchicalIndex, targetData, childrenField) {
  var subItemsField = childrenField || CHILDREN_FIELD;
  if (!validateInput()) {
    return prepareInputDataForReturn();
  }
  var sourceItem = getItemById(sourceItemHierarchicalIndex, sourceData, subItemsField);
  if (!sourceItem) {
    return prepareInputDataForReturn();
  }
  if (!targetData || targetData === sourceData) {
    if (!validateNoCircularReference()) {
      return prepareInputDataForReturn();
    }
    var updatedSourceData = removeItem(sourceItemHierarchicalIndex, subItemsField, sourceData);
    var resultData = addItem(sourceItem, operation, subItemsField, getDecrementedItemIdAfterRemoval(sourceItemHierarchicalIndex, targetItemHierarchicalIndex), updatedSourceData);
    return targetData ? { sourceData: resultData, targetData: resultData } : resultData;
  } else {
    var updatedSource = removeItem(sourceItemHierarchicalIndex, subItemsField, sourceData);
    var updatedTarget = addItem(sourceItem, operation, subItemsField, targetItemHierarchicalIndex, targetData);
    return { sourceData: updatedSource, targetData: updatedTarget };
  }
  function prepareInputDataForReturn() {
    return targetData ? { sourceData, targetData } : sourceData;
  }
  function validateNoCircularReference() {
    return !"".concat(targetItemHierarchicalIndex, "_").startsWith("".concat(sourceItemHierarchicalIndex, "_"));
  }
  function validateInput() {
    if (!sourceData || !sourceData.length || !sourceItemHierarchicalIndex || !targetItemHierarchicalIndex) {
      return false;
    }
    if (targetData && !targetData.length) {
      return false;
    }
    var data2 = !targetData || targetData === sourceData ? sourceData : targetData;
    if (!getItemById(targetItemHierarchicalIndex, data2, subItemsField)) {
      return false;
    }
    return true;
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/handleTreeViewCheckChange.js
var __generator2 = function(thisArg, body) {
  var _2 = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_2)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _2.label++;
            return { value: op[1], done: false };
          case 5:
            _2.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _2.ops.pop();
            _2.trys.pop();
            continue;
          default:
            if (!(t = _2.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _2 = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _2.label = op[1];
              break;
            }
            if (op[0] === 6 && _2.label < t[1]) {
              _2.label = t[1];
              t = op;
              break;
            }
            if (t && _2.label < t[2]) {
              _2.label = t[2];
              _2.ops.push(op);
              break;
            }
            if (t[2])
              _2.ops.pop();
            _2.trys.pop();
            continue;
        }
        op = body.call(thisArg, _2);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
function handleTreeViewCheckChange(event2, check, data2, settings, childrenField) {
  if (settings === void 0) {
    settings = {};
  }
  if (!data2 || !data2.length) {
    return [];
  }
  var _a14 = parseOperation2(check), ids = _a14.ids, idField = _a14.idField;
  var itemId = idField ? getNestedValue(idField, event2.item) : event2.itemHierarchicalIndex;
  var idIndex = ids.indexOf(itemId);
  var itemJustChecked = idIndex === -1;
  var subItemsField = childrenField || CHILDREN_FIELD;
  var newIds;
  if (settings.singleMode) {
    newIds = itemJustChecked ? [itemId] : [];
  } else {
    newIds = ids.slice();
    itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);
    if (settings.checkChildren) {
      checkChildren(event2.item, event2.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);
    }
    if (settings.checkParents) {
      checkParents(event2.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data2);
    }
  }
  return isArray3(check) ? newIds : Object.assign({}, check, { ids: newIds });
}
function parseOperation2(operation) {
  var ids;
  var idField = void 0;
  if (isArray3(operation)) {
    ids = operation;
  } else {
    ids = operation.ids || [];
    idField = operation.idField;
  }
  return { ids, idField };
}
function checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {
  getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function(itemId) {
    if (itemJustChecked && ids.indexOf(itemId) === -1) {
      ids.push(itemId);
    } else if (!itemJustChecked && ids.indexOf(itemId) > -1) {
      ids.splice(ids.indexOf(itemId), 1);
    }
  });
}
function checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data2) {
  var it = makeParentsIterator();
  var result = it.next();
  itemJustChecked ? check() : uncheck();
  function check() {
    while (!result.done) {
      var _a14 = result.value, id = _a14.id, item = _a14.item;
      if (ids.indexOf(id) === -1 && areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {
        ids.push(id);
        result = it.next();
      } else {
        break;
      }
    }
  }
  function uncheck() {
    while (!result.done) {
      var id = result.value.id;
      var idIndex = ids.indexOf(id);
      if (idIndex > -1) {
        ids.splice(idIndex, 1);
        result = it.next();
      } else {
        break;
      }
    }
  }
  function makeParentsIterator() {
    var parents, i, parentId;
    return __generator2(this, function(_a14) {
      switch (_a14.label) {
        case 0:
          if (!idField)
            return [3, 5];
          parents = getAllParents(itemHierarchicalIndex, childrenField, data2);
          i = parents.length - 1;
          _a14.label = 1;
        case 1:
          if (!(i > -1))
            return [3, 4];
          return [4, { id: getNestedValue(idField, parents[i]), item: itemJustChecked ? parents[i] : void 0 }];
        case 2:
          _a14.sent();
          _a14.label = 3;
        case 3:
          i--;
          return [3, 1];
        case 4:
          return [3, 8];
        case 5:
          parentId = getDirectParentId(itemHierarchicalIndex);
          _a14.label = 6;
        case 6:
          if (!parentId)
            return [3, 8];
          return [4, { id: parentId, item: itemJustChecked ? getItemById(parentId, data2, childrenField) : void 0 }];
        case 7:
          _a14.sent();
          parentId = getDirectParentId(parentId);
          return [3, 6];
        case 8:
          return [
            2
            /*return*/
          ];
      }
    });
  }
}

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewDragClue.js
var React165 = __toESM(require_react());
var __extends67 = function() {
  var extendStatics2 = function(d, b) {
    extendStatics2 = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics2(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics2(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign89 = function() {
  __assign89 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign89.apply(this, arguments);
};
var TreeViewDragClue = (
  /** @class */
  function(_super) {
    __extends67(TreeViewDragClue2, _super);
    function TreeViewDragClue2() {
      var _this3 = _super !== null && _super.apply(this, arguments) || this;
      _this3.state = {
        visible: false,
        top: 0,
        left: 0,
        text: "",
        operationClassName: "cancel"
      };
      return _this3;
    }
    TreeViewDragClue2.prototype.render = function() {
      var dynamicStyle = { top: this.state.top + "px", left: this.state.left + "px" };
      return this.state.visible && React165.createElement(
        "div",
        { className: "k-header k-drag-clue", style: __assign89(__assign89({}, this.props.style), dynamicStyle) },
        React165.createElement(IconWrap, { className: classNames("k-drag-status"), name: this.state.operationClassName, icon: this.state.operationClassName === "k-i-plus" ? plusIcon : this.state.operationClassName === "k-i-insert-up" ? insertTopIcon : this.state.operationClassName === "k-i-insert-up" ? insertBottomIcon : this.state.operationClassName === "k-i-insert-middle" ? insertMiddleIcon : cancelIcon }),
        this.state.text
      );
    };
    TreeViewDragClue2.prototype.show = function(top, left2, text, operationClassName) {
      this.setState({ visible: true, top, left: left2, text, operationClassName });
    };
    TreeViewDragClue2.prototype.hide = function() {
      this.setState({ visible: false });
    };
    TreeViewDragClue2.defaultProps = { style: { display: "block", position: "absolute", zIndex: 2e4, padding: "4px 6px" } };
    return TreeViewDragClue2;
  }(React165.PureComponent)
);

// node_modules/@progress/kendo-react-treeview/dist/es/TreeViewDragAnalyzer.js
var DROPZONE_BOUNDARY_DELTA = 6;
var TreeViewDragAnalyzer = (
  /** @class */
  function() {
    function TreeViewDragAnalyzer2(event2) {
      this.event = event2;
      this.initialized = false;
      this.destItemId = "";
      this.destTreeViewGuid = "";
      this.itemId = event2.itemHierarchicalIndex;
      this.treeViewGuid = event2.target.guid;
    }
    TreeViewDragAnalyzer2.prototype.init = function() {
      if (!this.initialized) {
        this.setDestimationMeta(document.elementFromPoint(this.event.clientX, this.event.clientY));
        this.initialized = true;
      }
      return this;
    };
    Object.defineProperty(TreeViewDragAnalyzer2.prototype, "isDropAllowed", {
      /**
       * Returns `true` if dropping is allowed. Otherwise, returns `false`.
       */
      get: function() {
        if (this.initialized && this.destItemId && this.destTreeViewGuid) {
          return !"".concat(this.destTreeViewGuid, "_").concat(this.destItemId, "_").startsWith("".concat(this.treeViewGuid, "_").concat(this.itemId, "_"));
        } else {
          return false;
        }
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(TreeViewDragAnalyzer2.prototype, "destinationMeta", {
      /**
       * Returns an object which contains:
       * * The `itemHierarchicalIndex` of the destination item (the item below the dragged item) and
       * * The `guid` of the destination TreeView (the TreeView which renders the destination item).
       */
      get: function() {
        return { itemHierarchicalIndex: this.destItemId, treeViewGuid: this.destTreeViewGuid };
      },
      enumerable: false,
      configurable: true
    });
    TreeViewDragAnalyzer2.prototype.getDropOperation = function() {
      if (this.initialized && this.isDropAllowed) {
        var _a14 = this.destDomNodeWithMeta.getBoundingClientRect(), top_1 = _a14.top, height = _a14.height;
        if (top_1 + height - this.event.clientY < DROPZONE_BOUNDARY_DELTA) {
          return "after";
        } else if (this.event.clientY - top_1 < DROPZONE_BOUNDARY_DELTA) {
          return "before";
        } else {
          return "child";
        }
      } else {
        return void 0;
      }
    };
    TreeViewDragAnalyzer2.prototype.setDestimationMeta = function(element6) {
      var node14 = element6;
      while (node14 && !node14[DOM_KENDO_ITEM_ID_FIELD]) {
        node14 = node14.parentNode;
      }
      if (node14 && node14[DOM_KENDO_ITEM_ID_FIELD]) {
        this.destDomNodeWithMeta = node14;
        this.destItemId = node14[DOM_KENDO_ITEM_ID_FIELD];
        this.destTreeViewGuid = node14[DOM_KENDO_TREEVIEW_GUID_FIELD];
      }
    };
    return TreeViewDragAnalyzer2;
  }()
);

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/useDropdownWidth.js
var React166 = __toESM(require_react());
function useDropdownWidth(elementRef, initialStyleWidth, args) {
  var _a14 = React166.useState(initialStyleWidth), width = _a14[0], setWidth = _a14[1];
  React166.useEffect(function() {
    if (width !== void 0 && elementRef.current) {
      setWidth(elementRef.current.offsetWidth);
    }
  }, args);
  return width;
}

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/ListNoData.js
var React167 = __toESM(require_react());
var ListNoData = function(props) {
  return React167.createElement(
    "div",
    { className: "k-nodata" },
    React167.createElement("div", null, props.children)
  );
};

// node_modules/@progress/kendo-react-dropdowns/dist/es/DropDownTree/DropDownTree.js
var React168 = __toESM(require_react());
var PropTypes76 = __toESM(require_prop_types());
var __assign90 = function() {
  __assign90 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign90.apply(this, arguments);
};
var __spreadArray16 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var _this = void 0;
var sizeMap7 = kendoThemeMaps.sizeMap, roundedMap5 = kendoThemeMaps.roundedMap;
var VALIDATION_MESSAGE7 = "Please select a value from the list!";
var ValueHolder = function(props) {
  return React168.createElement("span", { className: "k-input-value-text" }, props.children);
};
var toLevel = function(hierarchicalIndex) {
  return hierarchicalIndex.split("_").map(function(i) {
    return parseInt(i, 10);
  });
};
var getValidity = function(parameters, hasValue) {
  var validationMessage = parameters.validationMessage, valid = parameters.valid, required = parameters.required;
  return {
    customError: validationMessage !== void 0,
    valid: Boolean(valid !== void 0 ? valid : !required || hasValue),
    valueMissing: !hasValue
  };
};
var defaultProps19 = {
  selectField: "selected",
  subItemsField: "items",
  popupSettings: {
    animate: true,
    width: "200px",
    height: "200px"
  },
  required: false,
  validityStyles: true,
  size: "medium",
  rounded: "medium",
  fillMode: "solid"
};
var DropDownTreePropsContext = createPropsContext();
var DropDownTree = React168.forwardRef(function(directProps, ref) {
  var _a14;
  validatePackage2(packageMetadata12);
  var props = usePropsContext(DropDownTreePropsContext, directProps);
  var calculatedId = React168.useMemo(function() {
    return guid();
  }, []);
  var id = props.id || calculatedId;
  var _b3 = props.data, data2 = _b3 === void 0 ? [] : _b3, dataItemKey = props.dataItemKey, _c2 = props.popupSettings, popupSettings = _c2 === void 0 ? {} : _c2, _d = props.style, style = _d === void 0 ? {} : _d, opened = props.opened, disabled = props.disabled, _e = props.onOpen, onOpen = _e === void 0 ? noop : _e, _f = props.onClose, onClose = _f === void 0 ? noop : _f, placeholder = props.placeholder, label = props.label, name2 = props.name, _g = props.selectField, selectField = _g === void 0 ? defaultProps19.selectField : _g, _h = props.subItemsField, subItemsField = _h === void 0 ? defaultProps19.subItemsField : _h, validationMessage = props.validationMessage, valid = props.valid, required = props.required, validityStyles = props.validityStyles;
  var tabIndex = getTabIndex(props.tabIndex, disabled);
  var target = React168.useRef(null);
  var elementRef = React168.useRef(null);
  var inputRef = React168.useRef(null);
  var adaptiveInputRef = React168.useRef(null);
  var selectRef = React168.useRef(null);
  var treeViewRef = React168.useRef(null);
  var skipFocusRef = React168.useRef(false);
  var _j = React168.useState(void 0), stateValue = _j[0], setStateValue = _j[1];
  var controlled = props.value !== void 0;
  var value2 = controlled ? props.value : stateValue !== void 0 ? stateValue : props.defaultValue;
  var hasValue = isPresent4(value2);
  var currentValueText = hasValue ? getItemValue(value2, props.textField) : "";
  var validity = getValidity({ validationMessage, valid, required }, hasValue);
  var focus = React168.useCallback(function() {
    return elementRef.current && elementRef.current.focus();
  }, []);
  React168.useImperativeHandle(target, function() {
    return {
      props,
      element: elementRef.current,
      focus
    };
  });
  React168.useImperativeHandle(ref, function() {
    return target.current;
  });
  var dir = useRtl(elementRef, props.dir);
  var initialStyleWidth = popupSettings.width !== void 0 ? popupSettings.width : style.width !== void 0 ? style.width : defaultProps19.popupSettings.width;
  var popupWidth = useDropdownWidth(elementRef, initialStyleWidth);
  var popupStyles = __assign90({ width: popupWidth }, dir !== void 0 ? { direction: dir } : {});
  var _k = React168.useState(false), open = _k[0], setOpen = _k[1];
  var isOpen = opened !== void 0 ? opened : open;
  var _l = React168.useState(false), focused = _l[0], setFocused = _l[1];
  var _m = React168.useState(), windowWidth = _m[0], setWindowWidth = _m[1];
  var isAdaptive = !!(windowWidth && windowWidth <= MOBILE_MEDIUM_DEVISE2 && props.adaptive);
  var _o = React168.useState(""), filter2 = _o[0], setFilter = _o[1];
  var setValidity = React168.useCallback(function() {
    if (selectRef.current && selectRef.current.setCustomValidity) {
      selectRef.current.setCustomValidity(validity.valid ? "" : validationMessage === void 0 ? VALIDATION_MESSAGE7 : validationMessage);
    }
  }, [validationMessage, validity]);
  React168.useEffect(setValidity);
  React168.useEffect(function() {
    var observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(calculateMedia.bind(_this));
    if ((document === null || document === void 0 ? void 0 : document.body) && observerResize) {
      observerResize.observe(document.body);
    }
    return function() {
      if ((document === null || document === void 0 ? void 0 : document.body) && observerResize) {
        observerResize.disconnect();
      }
    };
  }, []);
  var openPopup = React168.useCallback(function(event2) {
    if (!isOpen) {
      if (onOpen) {
        var openEvent = __assign90({}, event2);
        onOpen.call(void 0, openEvent);
      }
      if (opened === void 0) {
        setOpen(true);
      }
    }
  }, [isOpen, opened, onOpen]);
  var closePopup = React168.useCallback(function(event2) {
    if (isOpen) {
      if (onClose) {
        var closeEvent = __assign90({}, event2);
        onClose.call(void 0, closeEvent);
      }
      if (opened === void 0) {
        setOpen(false);
        if (isAdaptive) {
          setTimeout(function() {
            var _a15;
            focusElement((_a15 = adaptiveInputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
          }, 300);
        }
      }
    }
  }, [isOpen, opened, onClose, isAdaptive]);
  var onWrapperClick = React168.useCallback(function(event2) {
    if (!event2.isDefaultPrevented() && target.current) {
      setFocused(true);
      var ev = {
        syntheticEvent: event2,
        nativeEvent: event2.nativeEvent,
        target: target.current
      };
      (isOpen ? closePopup : openPopup)(ev);
    }
  }, [isOpen, opened, onOpen, onClose]);
  var switchFocus = React168.useCallback(function(focusFn) {
    skipFocusRef.current = true;
    focusFn();
    window.setTimeout(function() {
      return skipFocusRef.current = false;
    }, 0);
  }, []);
  var onWrapperKeyDown = React168.useCallback(function(event2) {
    var _a15, _b4;
    var keyCode = event2.keyCode, altKey = event2.altKey;
    var treeview = treeViewRef.current && treeViewRef.current.element;
    if (!target.current || event2.isDefaultPrevented() && ((_a15 = inputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element) === event2.target) {
      return;
    }
    var ev = {
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: target.current
    };
    if (isOpen) {
      if (keyCode === Keys.esc || altKey && keyCode === Keys.up) {
        event2.preventDefault();
        closePopup(ev);
      } else if (treeview && treeview.querySelector(".k-focus") && (keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end)) {
        if (keyCode === Keys.up && ((_b4 = inputRef.current) === null || _b4 === void 0 ? void 0 : _b4.element)) {
          var items = Array.from(treeview.querySelectorAll(".k-treeview-item"));
          var focusedItem = __spreadArray16([], items, true).reverse().find(function(i) {
            return Boolean(i && i.querySelector(".k-focus"));
          });
          if (focusedItem && items.indexOf(focusedItem) === 0) {
            return switchFocus(function() {
              var _a16;
              focusElement((_a16 = inputRef.current) === null || _a16 === void 0 ? void 0 : _a16.element);
            });
          }
        }
        switchFocus(noop);
      } else if (keyCode === Keys.down) {
        switchFocus(function() {
          var _a16;
          focusElement(((_a16 = inputRef.current) === null || _a16 === void 0 ? void 0 : _a16.element) || treeview);
        });
      }
    } else {
      if (altKey && keyCode === Keys.down) {
        event2.preventDefault();
        openPopup(ev);
      }
    }
  }, [isOpen, opened, onOpen, onClose]);
  var onInputKeyDown = React168.useCallback(function(event2) {
    var keyCode = event2.keyCode, altKey = event2.altKey;
    if (altKey || keyCode !== Keys.up && keyCode !== Keys.down) {
      return;
    }
    event2.preventDefault();
    switchFocus(keyCode === Keys.up ? function() {
      focusElement(elementRef.current);
    } : function() {
      focusElement(treeViewRef.current && treeViewRef.current.element);
    });
  }, []);
  var focusElement = React168.useCallback(function(element6) {
    if (element6) {
      switchFocus(function() {
        return element6.focus();
      });
    }
  }, []);
  var onPopupOpened = React168.useCallback(function() {
    var _a15;
    if (!focused && isOpen && !opened) {
      closePopup({ target: target.current });
    } else {
      if (props.filterable) {
        focusElement((_a15 = inputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
      } else {
        focusElement(treeViewRef.current && treeViewRef.current.element);
      }
    }
  }, [onClose, props.filterable, focused, opened, isOpen]);
  var onPopupClosed = React168.useCallback(function() {
    if (focused) {
      focusElement(elementRef.current);
    }
  }, [focused]);
  var onFocus = React168.useCallback(function(event2) {
    if (!focused && !skipFocusRef.current) {
      setFocused(true);
      if (props.onFocus && target.current) {
        var focusEvent = {
          syntheticEvent: event2,
          nativeEvent: event2.nativeEvent,
          target: target.current
        };
        props.onFocus.call(void 0, focusEvent);
      }
    }
  }, [focused, props.onFocus]);
  var onBlur = React168.useCallback(function(event2) {
    if (focused && !skipFocusRef.current && target.current) {
      setFocused(false);
      var ev = {
        syntheticEvent: event2,
        nativeEvent: event2.nativeEvent,
        target: target.current
      };
      if (props.onBlur) {
        var focusEvent = __assign90({}, ev);
        props.onBlur.call(void 0, focusEvent);
      }
      if (!isAdaptive) {
        closePopup(ev);
      }
    }
  }, [focused, props.onBlur, isOpen, opened, onClose]);
  var onWrapperMouseDown = React168.useCallback(function() {
    if (focused) {
      switchFocus(noop);
    }
    if (isAdaptive) {
      setTimeout(function() {
        var _a15;
        focusElement((_a15 = adaptiveInputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
      }, 300);
    }
  }, [focused, isAdaptive]);
  var changeValue = React168.useCallback(function(event2, newValue, hierarchicalIndex) {
    if (props.onChange) {
      var changeEvent = __assign90({ value: newValue, level: hierarchicalIndex ? toLevel(hierarchicalIndex) : [] }, event2);
      props.onChange.call(void 0, changeEvent);
    }
    if (!controlled) {
      setStateValue(newValue);
    }
  }, [props.onChange, controlled]);
  var onChange = React168.useCallback(function(event2) {
    if (areSame(event2.item, value2, dataItemKey) || !target.current) {
      return;
    }
    var item = event2.item, itemHierarchicalIndex = event2.itemHierarchicalIndex, nativeEvent = event2.nativeEvent, syntheticEvent = event2.syntheticEvent;
    var ev = {
      syntheticEvent,
      nativeEvent,
      target: target.current
    };
    changeValue(ev, item, itemHierarchicalIndex);
    closePopup(ev);
  }, [controlled, value2, props.onChange, dataItemKey, isOpen, opened, onClose]);
  var onClear = React168.useCallback(function(event2) {
    if (!target.current) {
      return;
    }
    var ev = {
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: target.current
    };
    changeValue(ev, null);
    closePopup(ev);
    event2.preventDefault();
  }, [controlled, props.onChange, isOpen, opened, onClose]);
  var onExpand = React168.useCallback(function(event2) {
    event2.syntheticEvent.stopPropagation();
    if (props.onExpandChange && target.current) {
      var item = event2.item, itemHierarchicalIndex = event2.itemHierarchicalIndex, nativeEvent = event2.nativeEvent, syntheticEvent = event2.syntheticEvent;
      var expandEvent = {
        level: toLevel(itemHierarchicalIndex),
        item,
        nativeEvent,
        syntheticEvent,
        target: target.current
      };
      props.onExpandChange.call(void 0, expandEvent);
    }
  }, [props.onExpandChange]);
  var onFilterChange = React168.useCallback(function(event2) {
    if (props.onFilterChange && target.current) {
      var filterDesc = { field: props.textField, operator: "contains", value: event2.target.value };
      var ev = {
        filter: filterDesc,
        syntheticEvent: event2.syntheticEvent,
        nativeEvent: event2.nativeEvent,
        target: target.current
      };
      props.onFilterChange.call(void 0, ev);
      if (props.filter === void 0) {
        setFilter(event2.target.value);
      }
    }
  }, [props.onFilterChange, props.filter, props.textField]);
  var renderAdaptiveListContainer = function() {
    var mobileFilter = props.filterable ? React168.createElement(ListFilter_default, { value: props.filter === void 0 ? filter2 : props.filter, ref: adaptiveInputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, size, rounded, fillMode }) : null;
    var actionSheetProps = {
      adaptiveTitle: props.adaptiveTitle,
      expand: isOpen,
      onClose: function(event2) {
        return closePopup(event2);
      },
      windowWidth,
      mobileFilter
    };
    return React168.createElement(
      AdaptiveMode2,
      __assign90({}, actionSheetProps),
      React168.createElement(
        ActionSheetContent,
        { className: "!k-overflow-hidden" },
        React168.createElement(
          "div",
          { className: "k-list-container" },
          React168.createElement("div", { className: "k-list k-list-lg" }, data2.length > 0 ? React168.createElement(TreeView, { ref: treeViewRef, tabIndex, data: treeViewData, focusIdField: dataItemKey, textField: props.textField, selectField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onExpandChange: onExpand, size, item: props.item, dir }) : React168.createElement(NoData, null, localization.toLanguageString(nodata, messages7[nodata])))
        )
      )
    );
  };
  var calculateMedia = React168.useCallback(function(entries) {
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
      var entry = entries_1[_i];
      setWindowWidth(entry.target.clientWidth);
    }
    ;
  }, []);
  var treeViewData = React168.useMemo(function() {
    return controlled || !hasValue ? data2 : mapTree(data2, subItemsField, function(item) {
      var _a15;
      return extendDataItem(item, subItemsField, (_a15 = {}, _a15[selectField] = areSame(item, value2, dataItemKey), _a15));
    });
  }, [data2, value2, controlled, hasValue, selectField, subItemsField]);
  var NoData = props.listNoData || ListNoData;
  var ValueComponent = props.valueHolder || ValueHolder;
  var localization = useLocalization();
  var isValid = !validityStyles || validity.valid;
  var size = props.size, rounded = props.rounded, fillMode = props.fillMode;
  var dropdowntree = React168.createElement(
    React168.Fragment,
    null,
    React168.createElement(
      "span",
      { className: classNames("k-dropdowntree k-picker", props.className, (_a14 = {}, _a14["k-picker-".concat(sizeMap7[size] || size)] = size, _a14["k-rounded-".concat(roundedMap5[rounded] || rounded)] = rounded, _a14["k-picker-".concat(fillMode)] = fillMode, _a14["k-focus"] = focused, _a14["k-invalid"] = !isValid, _a14["k-loading"] = props.loading, _a14["k-required"] = required, _a14["k-disabled"] = props.disabled, _a14)), tabIndex, accessKey: props.accessKey, id, style: label ? __assign90(__assign90({}, style), { width: void 0 }) : style, dir, ref: elementRef, onKeyDown: disabled ? void 0 : onWrapperKeyDown, onMouseDown: onWrapperMouseDown, onClick: disabled ? void 0 : onWrapperClick, onFocus, onBlur, role: "combobox", "aria-haspopup": "tree", "aria-expanded": isOpen, "aria-disabled": disabled, "aria-label": label, "aria-labelledby": props.ariaLabelledBy, "aria-describedby": props.ariaDescribedBy, "aria-required": required },
      React168.createElement(
        "span",
        { className: "k-input-inner" },
        React168.createElement(ValueComponent, { item: value2 }, currentValueText || placeholder)
      ),
      props.loading && React168.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading" }),
      hasValue && !disabled && React168.createElement(
        "span",
        { onClick: onClear, className: "k-clear-value", title: localization.toLanguageString(clear2, messages7[clear2]), role: "button", tabIndex: -1, onMouseDown: function(e) {
          return e.preventDefault();
        } },
        React168.createElement(IconWrap, { name: "x", icon: xIcon })
      ),
      React168.createElement(Button, { tabIndex: -1, type: "button", "aria-label": "select", className: "k-input-button", size, fillMode, themeColor: "base", rounded: null, icon: "caret-alt-down", svgIcon: caretAltDownIcon }),
      React168.createElement(
        "select",
        { name: name2, ref: selectRef, tabIndex: -1, "aria-hidden": true, title: label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
        React168.createElement("option", { value: props.valueMap ? props.valueMap.call(void 0, value2) : value2 })
      ),
      !isAdaptive && React168.createElement(
        Popup,
        { className: classNames(popupSettings.className, { "k-rtl": dir === "rtl" }), popupClass: classNames(popupSettings.popupClass, "k-dropdowntree-popup"), style: popupStyles, animate: popupSettings.animate, anchor: elementRef.current, show: isOpen, onOpen: onPopupOpened, onClose: onPopupClosed, appendTo: popupSettings.appendTo },
        props.filterable && React168.createElement(ListFilter_default, { value: props.filter === void 0 ? filter2 : props.filter, ref: inputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, size, rounded, fillMode }),
        data2.length > 0 ? React168.createElement(TreeView, { ref: treeViewRef, tabIndex, data: treeViewData, focusIdField: dataItemKey, textField: props.textField, selectField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onExpandChange: onExpand, size, item: props.item, dir }) : React168.createElement(NoData, null, localization.toLanguageString(nodata, messages7[nodata]))
      )
    ),
    isAdaptive && renderAdaptiveListContainer()
  );
  return label ? React168.createElement(FloatingLabel, { label, editorValue: currentValueText, editorPlaceholder: placeholder, editorValid: isValid, editorDisabled: disabled, editorId: id, style: { width: style ? style.width : void 0 }, children: dropdowntree, dir }) : dropdowntree;
});
var propTypes4 = {
  opened: PropTypes76.bool,
  disabled: PropTypes76.bool,
  dir: PropTypes76.string,
  tabIndex: PropTypes76.number,
  accessKey: PropTypes76.string,
  data: PropTypes76.array,
  value: PropTypes76.any,
  valueMap: PropTypes76.func,
  placeholder: PropTypes76.string,
  dataItemKey: PropTypes76.string.isRequired,
  textField: PropTypes76.string.isRequired,
  selectField: PropTypes76.string,
  expandField: PropTypes76.string,
  subItemsField: PropTypes76.string,
  className: PropTypes76.string,
  style: PropTypes76.object,
  label: PropTypes76.string,
  validationMessage: PropTypes76.string,
  validityStyles: PropTypes76.bool,
  valid: PropTypes76.bool,
  required: PropTypes76.bool,
  name: PropTypes76.string,
  id: PropTypes76.string,
  ariaLabelledBy: PropTypes76.string,
  ariaDescribedBy: PropTypes76.string,
  filterable: PropTypes76.bool,
  filter: PropTypes76.string,
  loading: PropTypes76.bool,
  popupSettings: PropTypes76.shape({
    animate: PropTypes76.oneOfType([PropTypes76.bool, PropTypes76.shape({
      openDuration: PropTypes76.number,
      closeDuration: PropTypes76.number
    })]),
    popupClass: PropTypes76.string,
    className: PropTypes76.string,
    appendTo: PropTypes76.any,
    width: PropTypes76.oneOfType([PropTypes76.string, PropTypes76.number]),
    height: PropTypes76.oneOfType([PropTypes76.string, PropTypes76.number])
  }),
  onOpen: PropTypes76.func,
  onClose: PropTypes76.func,
  onFocus: PropTypes76.func,
  onBlur: PropTypes76.func,
  onChange: PropTypes76.func,
  onFilterChange: PropTypes76.func,
  onExpandChange: PropTypes76.func,
  item: PropTypes76.func,
  valueHolder: PropTypes76.func,
  listNoData: PropTypes76.func,
  adaptiveTitle: PropTypes76.string,
  adaptive: PropTypes76.bool
};
DropDownTree.displayName = "KendoReactDropDownTree";
DropDownTree.defaultProps = defaultProps19;
DropDownTree.propTypes = propTypes4;

// node_modules/@progress/kendo-react-dropdowns/dist/es/MultiSelectTree/MultiSelectTree.js
var React169 = __toESM(require_react());
var PropTypes77 = __toESM(require_prop_types());
var __assign91 = function() {
  __assign91 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign91.apply(this, arguments);
};
var __spreadArray17 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var _this2 = void 0;
var VALIDATION_MESSAGE8 = "Please select a value from the list!";
var sizeMap8 = kendoThemeMaps.sizeMap, roundedMap6 = kendoThemeMaps.roundedMap;
var toLevel2 = function(hierarchicalIndex) {
  return hierarchicalIndex.split("_").map(function(i) {
    return parseInt(i, 10);
  });
};
var getValidity2 = function(parameters, hasValue) {
  var validationMessage = parameters.validationMessage, valid = parameters.valid, required = parameters.required;
  return {
    customError: validationMessage !== void 0,
    valid: Boolean(valid !== void 0 ? valid : !required || hasValue),
    valueMissing: !hasValue
  };
};
var defaultProps20 = {
  checkField: "checkField",
  checkIndeterminateField: "checkIndeterminateField",
  subItemsField: "items",
  popupSettings: {
    animate: true,
    width: "200px",
    height: "200px"
  },
  size: "medium",
  rounded: "medium",
  fillMode: "solid",
  required: false,
  validityStyles: true
};
var MultiSelectTreePropsContext = createPropsContext();
var MultiSelectTree = React169.forwardRef(function(directProps, ref) {
  var _a14, _b3;
  var props = usePropsContext(MultiSelectTreePropsContext, directProps);
  validatePackage2(packageMetadata12);
  var componentGuid = React169.useMemo(function() {
    return guid();
  }, []);
  var id = props.id || componentGuid;
  var _c2 = props.data, data2 = _c2 === void 0 ? [] : _c2, dataItemKey = props.dataItemKey, _d = props.popupSettings, popupSettings = _d === void 0 ? {} : _d, _e = props.style, style = _e === void 0 ? {} : _e, opened = props.opened, disabled = props.disabled, _f = props.onOpen, onOpen = _f === void 0 ? noop : _f, _g = props.onClose, onClose = _g === void 0 ? noop : _g, placeholder = props.placeholder, label = props.label, name2 = props.name, _h = props.checkField, checkField = _h === void 0 ? defaultProps20.checkField : _h, _j = props.checkIndeterminateField, checkIndeterminateField = _j === void 0 ? defaultProps20.checkIndeterminateField : _j, _k = props.subItemsField, subItemsField = _k === void 0 ? defaultProps20.subItemsField : _k, validationMessage = props.validationMessage, valid = props.valid, tags = props.tags, value2 = props.value, _l = props.required, required = _l === void 0 ? defaultProps20.required : _l, _m = props.validityStyles, validityStyles = _m === void 0 ? defaultProps20.validityStyles : _m;
  var tabIndex = getTabIndex(props.tabIndex, disabled);
  var targetRef = React169.useRef(null);
  var elementRef = React169.useRef(null);
  var inputRef = React169.useRef(null);
  var adaptiveInputRef = React169.useRef(null);
  var selectRef = React169.useRef(null);
  var treeViewRef = React169.useRef(null);
  var skipFocusRef = React169.useRef(false);
  var tagsToRenderRef = React169.useRef([]);
  var popupRef = React169.useRef(null);
  var _o = React169.useState(), focusedTagState = _o[0], setFocusedTagState = _o[1];
  var _p = React169.useState(false), openState = _p[0], setOpenState = _p[1];
  var _q = React169.useState(false), focusedState = _q[0], setFocusedState = _q[1];
  var _r = React169.useState(), windowWidth = _r[0], setWindowWidth = _r[1];
  var _s = React169.useState([]), currentTreeValue = _s[0], setCurrentTreeValue = _s[1];
  var _t = React169.useState(""), filterState = _t[0], setFilterState = _t[1];
  var isAdaptive = !!(windowWidth && windowWidth <= MOBILE_MEDIUM_DEVISE2 && props.adaptive);
  var isOpen = opened !== void 0 ? opened : openState;
  var hasValue = Boolean(Array.isArray(value2) && value2.length);
  var validity = getValidity2({ validationMessage, valid, required }, hasValue);
  var dir = useRtl(elementRef, props.dir);
  var initialStyleWidth = popupSettings.width !== void 0 ? popupSettings.width : style.width !== void 0 ? style.width : defaultProps20.popupSettings.width;
  var popupWidth = useDropdownWidth(elementRef, initialStyleWidth);
  var popupStyles = __assign91({ width: popupWidth }, dir !== void 0 ? { direction: dir } : {});
  var focus = React169.useCallback(function() {
    return elementRef.current && elementRef.current.focus();
  }, []);
  tagsToRenderRef.current = tags === void 0 ? (value2 || []).map(function(item) {
    return { text: getItemValue(item, props.textField), data: [item] };
  }) : __spreadArray17([], tags, true);
  React169.useImperativeHandle(targetRef, function() {
    return {
      props,
      element: elementRef.current,
      focus
    };
  });
  React169.useImperativeHandle(ref, function() {
    return targetRef.current;
  });
  var setValidity = React169.useCallback(function() {
    if (selectRef.current && selectRef.current.setCustomValidity) {
      selectRef.current.setCustomValidity(validity.valid ? "" : validationMessage === void 0 ? VALIDATION_MESSAGE8 : validationMessage);
    }
  }, [validationMessage, validity]);
  React169.useEffect(setValidity);
  React169.useEffect(function() {
    var observerResize = canUseDOM && window.ResizeObserver && new window.ResizeObserver(calculateMedia.bind(_this2));
    if ((document === null || document === void 0 ? void 0 : document.body) && observerResize) {
      observerResize.observe(document.body);
    }
    return function() {
      observerResize.disconnect();
    };
  }, []);
  React169.useEffect(function() {
    if (popupRef.current && isOpen) {
      popupRef.current.setPosition(popupRef.current.$);
    }
  }, [value2, isOpen]);
  var changeValue = React169.useCallback(function(event2, relatedItems, operation) {
    if (props.onChange) {
      var changeEvent = __assign91({ items: relatedItems, operation }, event2);
      props.onChange.call(void 0, changeEvent);
    }
  }, [props.onChange]);
  var onChange = React169.useCallback(function(event2) {
    if (areSame(event2.item, value2, dataItemKey) || !targetRef.current) {
      return;
    }
    var item = event2.item, nativeEvent = event2.nativeEvent, syntheticEvent = event2.syntheticEvent;
    var ev = {
      syntheticEvent,
      nativeEvent,
      target: targetRef.current
    };
    changeValue(ev, [item], "toggle");
  }, [value2, dataItemKey, changeValue]);
  var openPopup = React169.useCallback(function(event2) {
    if (!isOpen) {
      if (onOpen) {
        var openEvent = __assign91({}, event2);
        onOpen.call(void 0, openEvent);
      }
      if (opened === void 0) {
        setOpenState(true);
        setCurrentTreeValue(value2 || []);
        if (isAdaptive) {
          setTimeout(function() {
            var _a15;
            focusElement((_a15 = adaptiveInputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
          }, 300);
        }
      }
    }
  }, [isOpen, opened, onOpen, isAdaptive, adaptiveInputRef]);
  var closePopup = React169.useCallback(function(event2) {
    if (isOpen) {
      if (onClose) {
        var closeEvent = __assign91({}, event2);
        onClose.call(void 0, closeEvent);
      }
      if (opened === void 0) {
        setOpenState(false);
      }
    }
  }, [isOpen, opened, onClose]);
  var switchFocus = React169.useCallback(function(focusFn) {
    skipFocusRef.current = true;
    focusFn();
    window.setTimeout(function() {
      return skipFocusRef.current = false;
    }, 0);
  }, []);
  var focusElement = React169.useCallback(function(element6) {
    if (element6) {
      switchFocus(function() {
        return element6.focus();
      });
    }
  }, [switchFocus]);
  var onPopupOpened = React169.useCallback(function() {
    var _a15;
    if (!focusedState && isOpen) {
      closePopup({ target: targetRef.current });
    } else {
      if (props.filterable) {
        focusElement((_a15 = inputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
      } else {
        focusElement(treeViewRef.current && treeViewRef.current.element);
      }
    }
  }, [focusedState, isOpen, focusElement, closePopup, props.filterable]);
  var onPopupClosed = React169.useCallback(function() {
    if (focusedState) {
      focusElement(elementRef.current);
    }
  }, [focusedState, focusElement]);
  var onFocus = React169.useCallback(function(event2) {
    if (!focusedState && !skipFocusRef.current) {
      setFocusedState(true);
      if (props.onFocus && targetRef.current) {
        var focusEvent = {
          syntheticEvent: event2,
          nativeEvent: event2.nativeEvent,
          target: targetRef.current
        };
        props.onFocus.call(void 0, focusEvent);
      }
    }
  }, [focusedState, props.onFocus]);
  var onBlur = React169.useCallback(function(event2) {
    if (focusedState && !skipFocusRef.current && targetRef.current) {
      setFocusedState(false);
      var ev = {
        syntheticEvent: event2,
        nativeEvent: event2.nativeEvent,
        target: targetRef.current
      };
      if (props.onBlur) {
        var focusEvent = __assign91({}, ev);
        props.onBlur.call(void 0, focusEvent);
      }
      if (!isAdaptive) {
        closePopup(ev);
      }
    }
  }, [focusedState, props.onBlur, isOpen, opened, onClose]);
  var onWrapperMouseDown = React169.useCallback(function() {
    if (focusedState) {
      switchFocus(noop);
    }
  }, [focusedState, switchFocus]);
  var onWrapperClick = React169.useCallback(function(event2) {
    if (!event2.isDefaultPrevented() && targetRef.current) {
      setFocusedState(true);
      var ev = {
        syntheticEvent: event2,
        nativeEvent: event2.nativeEvent,
        target: targetRef.current
      };
      if (!isOpen) {
        openPopup(ev);
      }
    }
  }, [isOpen, openPopup]);
  var onWrapperKeyDown = React169.useCallback(function(event2) {
    var _a15, _b4;
    var keyCode = event2.keyCode, altKey = event2.altKey;
    var treeviewElement = treeViewRef.current && treeViewRef.current.element;
    if (!targetRef.current || event2.isDefaultPrevented() && ((_a15 = inputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element) === event2.target) {
      return;
    }
    var ev = {
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: targetRef.current
    };
    if (value2 && value2.length > 0 && (keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end || keyCode === Keys.delete)) {
      var tagsToRender = tagsToRenderRef.current;
      var focusedIndex = focusedTagState ? tagsToRender.findIndex(function(t) {
        return matchTags(t, focusedTagState, dataItemKey);
      }) : -1;
      var newFocusedTag = void 0;
      var hasFocused = focusedIndex !== -1;
      if (keyCode === Keys.left) {
        if (hasFocused) {
          focusedIndex = Math.max(0, focusedIndex - 1);
        } else {
          focusedIndex = tagsToRender.length - 1;
        }
        newFocusedTag = tagsToRender[focusedIndex];
      } else if (keyCode === Keys.right) {
        if (focusedIndex === tagsToRender.length - 1) {
          newFocusedTag = void 0;
        } else if (hasFocused) {
          focusedIndex = Math.min(tagsToRender.length - 1, focusedIndex + 1);
          newFocusedTag = tagsToRender[focusedIndex];
        }
      } else if (keyCode === Keys.home) {
        newFocusedTag = tagsToRender[0];
      } else if (keyCode === Keys.end) {
        newFocusedTag = tagsToRender[tagsToRender.length - 1];
      } else if (keyCode === Keys.delete) {
        if (hasFocused) {
          changeValue(ev, tagsToRender[focusedIndex].data, "delete");
        }
      }
      if (newFocusedTag !== focusedTagState) {
        setFocusedTagState(newFocusedTag);
      }
    }
    if (isOpen) {
      if (keyCode === Keys.esc || altKey && keyCode === Keys.up) {
        event2.preventDefault();
        closePopup(ev);
      } else if (treeviewElement && treeviewElement.querySelector(".k-focus") && (keyCode === Keys.up || keyCode === Keys.down || keyCode === Keys.left || keyCode === Keys.right || keyCode === Keys.home || keyCode === Keys.end)) {
        if (keyCode === Keys.up && ((_b4 = inputRef.current) === null || _b4 === void 0 ? void 0 : _b4.element)) {
          var items = Array.from(treeviewElement.querySelectorAll(".k-treeview-item"));
          var focusedItem = __spreadArray17([], items, true).reverse().find(function(i) {
            return Boolean(i && i.querySelector(".k-focus"));
          });
          if (focusedItem && items.indexOf(focusedItem) === 0) {
            return switchFocus(function() {
              var _a16;
              focusElement((_a16 = inputRef.current) === null || _a16 === void 0 ? void 0 : _a16.element);
            });
          }
        }
        switchFocus(noop);
      } else if (keyCode === Keys.down) {
        switchFocus(function() {
          var _a16;
          focusElement(((_a16 = inputRef.current) === null || _a16 === void 0 ? void 0 : _a16.element) || treeviewElement);
        });
      }
    } else {
      if (altKey && keyCode === Keys.down) {
        event2.preventDefault();
        openPopup(ev);
      }
    }
  }, [isOpen, closePopup, focusElement, switchFocus, openPopup, focusedTagState, dataItemKey, value2, changeValue]);
  var onInputKeyDown = React169.useCallback(function(event2) {
    var keyCode = event2.keyCode, altKey = event2.altKey;
    if (altKey || keyCode !== Keys.up && keyCode !== Keys.down) {
      return;
    }
    event2.preventDefault();
    switchFocus(keyCode === Keys.up ? function() {
      focusElement(elementRef.current);
    } : function() {
      focusElement(treeViewRef.current && treeViewRef.current.element);
    });
  }, [focusElement, switchFocus]);
  var onClear = React169.useCallback(function(event2) {
    if (!targetRef.current) {
      return;
    }
    var ev = {
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: targetRef.current
    };
    changeValue(ev, [], "clear");
    closePopup(ev);
    event2.preventDefault();
  }, [changeValue, closePopup]);
  var onTagDelete = React169.useCallback(function(itemsToRemove, event2) {
    var _a15;
    closePopup({ target: targetRef.current });
    if (!focusedState) {
      focusElement((_a15 = inputRef.current) === null || _a15 === void 0 ? void 0 : _a15.element);
    }
    changeValue({
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: targetRef.current
    }, itemsToRemove, "delete");
  }, [changeValue, closePopup, focusElement, focusedState]);
  var onExpand = React169.useCallback(function(event2) {
    if (props.onExpandChange && targetRef.current) {
      var item = event2.item, itemHierarchicalIndex = event2.itemHierarchicalIndex, nativeEvent = event2.nativeEvent, syntheticEvent = event2.syntheticEvent;
      var expandEvent = {
        level: toLevel2(itemHierarchicalIndex),
        item,
        nativeEvent,
        syntheticEvent,
        target: targetRef.current
      };
      props.onExpandChange.call(void 0, expandEvent);
    }
  }, [props.onExpandChange]);
  var onFilterChange = React169.useCallback(function(event2) {
    if (props.onFilterChange && targetRef.current) {
      var filterDesc = { field: props.textField, operator: "contains", value: event2.target.value };
      var ev = {
        filter: filterDesc,
        syntheticEvent: event2.syntheticEvent,
        nativeEvent: event2.nativeEvent,
        target: targetRef.current
      };
      props.onFilterChange.call(void 0, ev);
      if (props.filter === void 0) {
        setFilterState(event2.target.value);
      }
    }
  }, [props.onFilterChange, props.filter, props.textField]);
  var onCancel = React169.useCallback(function(event2) {
    if (!targetRef.current) {
      return;
    }
    var ev = {
      syntheticEvent: event2,
      nativeEvent: event2.nativeEvent,
      target: targetRef.current
    };
    if (props.onCancel) {
      props.onCancel.call(void 0, ev);
    }
    ;
    closePopup(ev);
    event2.preventDefault();
  }, [props.onCancel, closePopup]);
  var renderAdaptiveListContainer = function() {
    var mobileFilter = props.filterable ? React169.createElement(ListFilter_default, { value: props.filter === void 0 ? filterState : props.filter, ref: adaptiveInputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, size, rounded, fillMode }) : null;
    var actionSheetProps = {
      adaptiveTitle: props.adaptiveTitle,
      expand: isOpen,
      onClose: function(event2) {
        return props.onCancel ? onCancel(event2) : onClear(event2);
      },
      windowWidth,
      mobileFilter,
      footer: {
        cancelText: localization.toLanguageString(adaptiveModeFooterCancel, messages7[adaptiveModeFooterCancel]),
        onCancel: function(event2) {
          return props.onCancel ? onCancel(event2) : onClear(event2);
        },
        applyText: localization.toLanguageString(adaptiveModeFooterApply, messages7[adaptiveModeFooterApply]),
        onApply: function(event2) {
          return closePopup(event2);
        }
      }
    };
    return React169.createElement(
      AdaptiveMode2,
      __assign91({}, actionSheetProps),
      React169.createElement(
        ActionSheetContent,
        { className: "!k-overflow-hidden" },
        React169.createElement(
          "div",
          { className: "k-list-container" },
          React169.createElement("div", { className: "k-list k-list-lg" }, data2.length > 0 ? React169.createElement(TreeView, { ref: treeViewRef, tabIndex, data: data2, focusIdField: dataItemKey, textField: props.textField, checkField, checkIndeterminateField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onCheckChange: onChange, onExpandChange: onExpand, checkboxes: true, size, item: props.item, dir }) : React169.createElement(NoData, null, localization.toLanguageString(nodata, messages7[nodata])))
        )
      )
    );
  };
  var calculateMedia = React169.useCallback(function(entries) {
    for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
      var entry = entries_1[_i];
      setWindowWidth(entry.target.clientWidth);
    }
    ;
  }, []);
  var NoData = props.listNoData || ListNoData;
  var localization = useLocalization();
  var isValid = !validityStyles || validity.valid;
  var size = props.size, rounded = props.rounded, fillMode = props.fillMode;
  var currentTagsToRender = isAdaptive && isOpen ? currentTreeValue : tagsToRenderRef.current;
  var multiselecttree = React169.createElement(
    React169.Fragment,
    null,
    React169.createElement(
      "span",
      { className: classNames("k-multiselecttree k-input", props.className, (_a14 = {}, _a14["k-input-".concat(sizeMap8[size] || size)] = size, _a14["k-rounded-".concat(roundedMap6[rounded] || rounded)] = rounded, _a14["k-input-".concat(fillMode)] = fillMode, _a14["k-focus"] = focusedState && !disabled, _a14["k-invalid"] = !isValid, _a14["k-disabled"] = disabled, _a14["k-loading"] = props.loading, _a14["k-required"] = required, _a14)), tabIndex, accessKey: props.accessKey, id, style: label ? __assign91(__assign91({}, style), { width: void 0 }) : style, dir, ref: elementRef, onKeyDown: disabled ? void 0 : onWrapperKeyDown, onMouseDown: onWrapperMouseDown, onFocus, onBlur, role: "combobox", "aria-haspopup": "tree", "aria-expanded": isOpen, "aria-disabled": disabled, "aria-label": label, "aria-labelledby": props.ariaLabelledBy, "aria-describedby": props.ariaDescribedBy ? props.ariaDescribedBy : "tagslist-" + id, "aria-required": props.required, onClick: disabled ? void 0 : onWrapperClick },
      React169.createElement("div", { id: "tagslist-" + id, className: classNames("k-input-values k-chip-list k-selection-multiple", (_b3 = {}, _b3["k-chip-list-".concat(sizeMap8[size] || size)] = size, _b3)) }, currentTagsToRender.length > 0 && React169.createElement(TagList_default, { tag: props.tag, onTagDelete, data: currentTagsToRender, guid: id, focused: focusedTagState ? tagsToRenderRef.current.find(function(t) {
        return matchTags(t, focusedTagState, dataItemKey);
      }) : void 0, size })),
      (!hasValue || isAdaptive) && React169.createElement(
        "span",
        { className: "k-input-inner", role: "combobox", tabIndex, "aria-expanded": isOpen, "aria-describedby": "tagslist-" + id, "aria-label": props.ariaLabelledBy },
        React169.createElement("span", { className: "k-input-value-text" }, "\xA0")
      ),
      props.loading && React169.createElement(IconWrap, { className: "k-input-loading-icon", name: "loading" }),
      hasValue && !disabled && currentTagsToRender.length > 0 && React169.createElement(ClearButton_default, { onClick: onClear }),
      React169.createElement(
        "select",
        { name: name2, ref: selectRef, tabIndex: -1, "aria-hidden": true, title: label, style: { opacity: 0, width: 1, border: 0, zIndex: -1, position: "absolute", left: "50%" } },
        React169.createElement("option", { value: props.valueMap ? props.valueMap.call(void 0, value2) : value2 })
      ),
      !isAdaptive && React169.createElement(
        Popup,
        { popupClass: classNames(popupSettings.popupClass, "k-multiselecttree-popup"), className: classNames(popupSettings.className, { "k-rtl": dir === "rtl" }), style: popupStyles, animate: popupSettings.animate, anchor: elementRef.current, show: isOpen, onOpen: onPopupOpened, onClose: onPopupClosed, appendTo: popupSettings.appendTo, ref: popupRef },
        props.filterable && React169.createElement(ListFilter_default, { value: props.filter === void 0 ? filterState : props.filter, ref: inputRef, onChange: onFilterChange, onKeyDown: onInputKeyDown, tabIndex, size, rounded, fillMode }),
        data2.length > 0 ? React169.createElement(TreeView, { ref: treeViewRef, tabIndex, data: data2, focusIdField: dataItemKey, textField: props.textField, checkField, checkIndeterminateField, expandField: props.expandField, childrenField: subItemsField, expandIcons: true, onItemClick: onChange, onCheckChange: onChange, onExpandChange: onExpand, checkboxes: true, size, item: props.item, dir }) : React169.createElement(NoData, null, localization.toLanguageString(nodata, messages7[nodata]))
      )
    ),
    isAdaptive && renderAdaptiveListContainer()
  );
  return label ? React169.createElement(FloatingLabel, { label, editorValue: hasValue, editorPlaceholder: placeholder, editorValid: isValid, editorDisabled: disabled, editorId: id, style: { width: style ? style.width : void 0 }, children: multiselecttree, dir }) : multiselecttree;
});
var propTypes5 = {
  opened: PropTypes77.bool,
  disabled: PropTypes77.bool,
  dir: PropTypes77.string,
  tabIndex: PropTypes77.number,
  accessKey: PropTypes77.string,
  data: PropTypes77.array,
  value: PropTypes77.any,
  valueMap: PropTypes77.func,
  placeholder: PropTypes77.string,
  dataItemKey: PropTypes77.string.isRequired,
  textField: PropTypes77.string.isRequired,
  checkField: PropTypes77.string,
  checkIndeterminateField: PropTypes77.string,
  expandField: PropTypes77.string,
  subItemsField: PropTypes77.string,
  className: PropTypes77.string,
  style: PropTypes77.object,
  label: PropTypes77.string,
  validationMessage: PropTypes77.string,
  validityStyles: PropTypes77.bool,
  valid: PropTypes77.bool,
  required: PropTypes77.bool,
  name: PropTypes77.string,
  id: PropTypes77.string,
  ariaLabelledBy: PropTypes77.string,
  ariaDescribedBy: PropTypes77.string,
  filterable: PropTypes77.bool,
  filter: PropTypes77.string,
  loading: PropTypes77.bool,
  tags: PropTypes77.arrayOf(PropTypes77.shape({
    text: PropTypes77.string,
    data: PropTypes77.arrayOf(PropTypes77.any)
  })),
  popupSettings: PropTypes77.shape({
    animate: PropTypes77.oneOfType([PropTypes77.bool, PropTypes77.shape({
      openDuration: PropTypes77.number,
      closeDuration: PropTypes77.number
    })]),
    popupClass: PropTypes77.string,
    className: PropTypes77.string,
    appendTo: PropTypes77.any,
    width: PropTypes77.oneOfType([PropTypes77.string, PropTypes77.number]),
    height: PropTypes77.oneOfType([PropTypes77.string, PropTypes77.number])
  }),
  onOpen: PropTypes77.func,
  onClose: PropTypes77.func,
  onFocus: PropTypes77.func,
  onBlur: PropTypes77.func,
  onChange: PropTypes77.func,
  onFilterChange: PropTypes77.func,
  onExpandChange: PropTypes77.func,
  onCancel: PropTypes77.func,
  item: PropTypes77.func,
  listNoData: PropTypes77.func,
  adaptiveTitle: PropTypes77.string,
  adaptive: PropTypes77.bool
};
MultiSelectTree.displayName = "KendoReactMultiSelectTree";
MultiSelectTree.defaultProps = defaultProps20;
MultiSelectTree.propTypes = propTypes5;

// node_modules/@progress/kendo-react-scheduler/dist/es/editors/FilterableComboBox.js
var React170 = __toESM(require_react());
var __assign92 = function() {
  __assign92 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign92.apply(this, arguments);
};
var __rest38 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var FilterableComboBox = function(props) {
  var onChange = props.onChange, data2 = props.data, validationMessage = props.validationMessage, visited = props.visited, touched = props.touched, modified = props.modified, others = __rest38(props, ["onChange", "data", "validationMessage", "visited", "touched", "modified"]);
  var _a14 = React170.useState(data2), filteredData = _a14[0], setFilteredData = _a14[1];
  var onValueChange = React170.useCallback(function(e) {
    return onChange(e);
  }, [onChange]);
  var onFilterChange = React170.useCallback(function(event2) {
    var newData = filterBy(data2 || [], event2.filter);
    setFilteredData(newData);
  }, []);
  return React170.createElement(ComboBox, __assign92({ style: { width: "100%" }, data: filteredData, filterable: true, onFilterChange, onChange: onValueChange }, others));
};

// node_modules/@progress/kendo-react-scheduler/dist/es/recurrence/RecurrenceFrequencyEditor.js
var React171 = __toESM(require_react());
var __assign93 = function() {
  __assign93 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign93.apply(this, arguments);
};
var __rest39 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var RecurrenceFrequencyEditor = function(props) {
  var value2 = props.value, data2 = props.data, onChange = props.onChange, other = __rest39(props, ["value", "data", "onChange"]);
  var handleClick = React171.useCallback(function(event2) {
    if (onChange) {
      onChange.call(void 0, event2.currentTarget.dataset.value);
    }
  }, [onChange]);
  return React171.createElement(ButtonGroup, __assign93({ className: "k-scheduler-recurrence-repeat", width: "100%" }, other), data2.map(function(item) {
    return React171.createElement(Button, { type: "button", key: item.value, selected: item.value === value2, onClick: handleClick, "data-value": item.value, togglable: true }, item.text);
  }));
};

// node_modules/@progress/kendo-react-scheduler/dist/es/recurrence/common.js
var capitalize = function(value2) {
  return value2.charAt(0).toUpperCase() + value2.slice(1);
};
var OFFSET_POSITIONS = ["first", "second", "third", "fourth", "last"];
var FREQUENCIES = ["never", "daily", "weekly", "monthly", "yearly"];
var dayRule = [
  { day: 0, offset: 0 },
  { day: 1, offset: 0 },
  { day: 2, offset: 0 },
  { day: 3, offset: 0 },
  { day: 4, offset: 0 },
  { day: 5, offset: 0 },
  { day: 6, offset: 0 }
];
var weekdayRule = [
  { day: 1, offset: 0 },
  { day: 2, offset: 0 },
  { day: 3, offset: 0 },
  { day: 4, offset: 0 },
  { day: 5, offset: 0 }
];
var weekendRule = [
  { day: 0, offset: 0 },
  { day: 6, offset: 0 }
];
var weekDayRuleFromString = function(weekDay) {
  switch (weekDay) {
    case "day":
      return dayRule;
    case "weekday":
      return weekdayRule;
    case "weekend":
      return weekendRule;
    default:
      break;
  }
  return;
};
var getRule = function(recurrenceRule) {
  return parseRule({ recurrenceRule }) || {};
};
var getFrequencies = function(localizeMessage) {
  return FREQUENCIES.map(function(freq) {
    return {
      value: freq,
      text: localizeMessage("Frequencies" + capitalize(freq))
    };
  });
};
var getFrequency = function(rrule) {
  if (isPresent2(rrule) && !isNullOrEmptyString2(rrule.freq)) {
    return rrule.freq;
  }
  return "never";
};
var getUntil = function(rrule) {
  if (isPresent2(rrule.until)) {
    return toLocalDate(rrule.until);
  }
  return null;
};
var getMonths = function(intl) {
  return intl.dateFormatNames({
    type: "months",
    nameType: "wide",
    standAlone: true
  }).map(function(month, idx) {
    return {
      text: month,
      value: idx + 1
    };
  });
};
var getWeekDays = function(intl) {
  var firstDay3 = intl.firstDay();
  var abbrNames = intl.dateFormatNames({
    type: "days",
    nameType: "abbreviated"
  }).map(function(day, idx) {
    return {
      text: day,
      value: idx
    };
  });
  return abbrNames.slice(firstDay3).concat(abbrNames.slice(0, firstDay3));
};
var getWeekDay = function(weekDays, rrule, start2) {
  return weekDays.find(function(item) {
    var value2;
    if (isPresent2(rrule.byWeekDay)) {
      var weekDaysCount = rrule.byWeekDay.length;
      switch (weekDaysCount) {
        case 7:
          value2 = "day";
          break;
        case 5:
          value2 = "weekday";
          break;
        case 2:
          value2 = "weekend";
          break;
        case 1:
          value2 = rrule.byWeekDay[0].day;
          break;
        default:
          value2 = start2.getDay();
          break;
      }
    }
    return value2 === item.value;
  }) || weekDays[0];
};
var getExtendedWeekDays = function(intl, localizeMessage) {
  var firstDay3 = intl.firstDay();
  var wideNames = intl.dateFormatNames({
    type: "days",
    nameType: "wide"
  }).map(function(day, idx) {
    return {
      text: day,
      value: idx
    };
  });
  var sortedWideNames = wideNames.slice(firstDay3).concat(wideNames.slice(0, firstDay3));
  var specialRules = [
    { text: localizeMessage("WeekdaysDay"), value: "day" },
    { text: localizeMessage("WeekdaysWeekday"), value: "weekday" },
    { text: localizeMessage("WeekdaysWeekendday"), value: "weekend" }
  ];
  return specialRules.concat(sortedWideNames);
};
var getOffset = function(offsets, rrule) {
  return offsets.find(function(offset4) {
    return offset4.value === (rrule.bySetPosition ? rrule.bySetPosition[0] : rrule.byWeekDay && rrule.byWeekDay[0] ? rrule.byWeekDay[0].offset : 1);
  }) || offsets[0];
};
var getOffsets = function(localizeMessage) {
  var values2 = [1, 2, 3, 4, -1];
  return OFFSET_POSITIONS.map(function(offset4, idx) {
    return {
      text: localizeMessage("OffsetPositions" + capitalize(offset4)),
      value: values2[idx]
    };
  });
};
var getEndRule = function(rrule) {
  if (isPresent2(rrule.count)) {
    return "count";
  } else if (isPresent2(rrule.until)) {
    return "until";
  } else {
    return "never";
  }
};
var getRepeatOnRule = function(rrule) {
  if (isPresent2(rrule.byWeekDay)) {
    return "weekday";
  } else if (isPresent2(rrule.byMonthDay)) {
    return "monthday";
  }
};
var getMonth = function(months, rrule) {
  return months.find(function(month) {
    return (rrule.byMonth ? rrule.byMonth[0] : null) === month.value;
  }) || months[0];
};
var getMonthDay = function(rrule, start2) {
  if (isPresent2(rrule.byMonthDay) && rrule.byMonthDay.length > 0) {
    return rrule.byMonthDay[0];
  } else {
    return start2.getDate();
  }
};
var getUntilEnd = function(start2, until) {
  var currentStart = start2;
  var currentUntil = until;
  if (isPresent2(currentUntil)) {
    return currentUntil;
  } else {
    return new Date(currentStart.getFullYear(), currentStart.getMonth(), currentStart.getDate(), 23, 59, 59);
  }
};
var getUntilMin = function(start2, until) {
  var currentStart = start2;
  var currentUntil = until;
  if (isPresent2(currentUntil) && currentUntil < currentStart) {
    return currentUntil;
  } else {
    return currentStart;
  }
};

// node_modules/@progress/kendo-react-scheduler/dist/es/recurrence/RecurrenceRepeatOnWeekEditor.js
var React172 = __toESM(require_react());
var __assign94 = function() {
  __assign94 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign94.apply(this, arguments);
};
var __rest40 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __spreadArray18 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var RecurrenceRepeatOnWeekEditor = function(props) {
  var _a14 = __assign94(__assign94({}, defaultProps21), props), value2 = _a14.value, data2 = _a14.data, onChange = _a14.onChange, other = __rest40(_a14, ["value", "data", "onChange"]);
  var handleClick = function(event2) {
    var newValue = Number(event2.currentTarget.dataset.key);
    if (props.onChange) {
      props.onChange.call(void 0, value2.some(function(i) {
        return i === newValue;
      }) ? value2.filter(function(i) {
        return i !== newValue;
      }) : __spreadArray18(__spreadArray18([], value2, true), [newValue], false));
    }
  };
  return React172.createElement(
    React172.Fragment,
    null,
    React172.createElement(ButtonGroup, __assign94({ width: "auto" }, other), (props.data || defaultProps21.data).map(function(item) {
      return React172.createElement(Button, { type: "button", key: item.value, "data-key": item.value, selected: value2.some(function(v) {
        return v === item.value;
      }), togglable: true, onClick: handleClick }, capitalize(item.text));
    }))
  );
};
var defaultProps21 = {
  data: [],
  value: []
};
RecurrenceRepeatOnWeekEditor.defaultProps = defaultProps21;

// node_modules/@progress/kendo-react-scheduler/dist/es/recurrence/RecurrenceEditor.js
var React173 = __toESM(require_react());
var __assign95 = function() {
  __assign95 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign95.apply(this, arguments);
};
var RecurrenceEditor = function(props) {
  var intl = useInternationalization();
  var localization = useLocalization();
  var timezone = useSchedulerPropsContext().timezone;
  var _a14 = React173.useState(1), defaultCount = _a14[0], setDefaultCount = _a14[1];
  var _b3 = React173.useState(ZonedDate.fromUTCDate(props.start)), defaultUntil = _b3[0], setDefaultUntil = _b3[1];
  var localizeMessage = React173.useCallback(function(baseMassage, removePrepend) {
    var message = removePrepend ? baseMassage : "scheduler.recurrenceEditor" + baseMassage;
    return localization.toLanguageString(message, messages2[message]);
  }, [localization]);
  var rrule = React173.useMemo(function() {
    return getRule(props.value);
  }, [props.value]);
  var frequencies2 = React173.useMemo(function() {
    return getFrequencies(localizeMessage);
  }, [localizeMessage]);
  var frequency = React173.useMemo(function() {
    return getFrequency(rrule);
  }, [rrule]);
  var extendedWeekDays = React173.useMemo(function() {
    return getExtendedWeekDays(intl, localizeMessage);
  }, [intl, localizeMessage]);
  var weekDay = React173.useMemo(function() {
    return getWeekDay(extendedWeekDays, rrule, props.start);
  }, [extendedWeekDays, rrule, props.start]);
  var months = React173.useMemo(function() {
    return getMonths(intl);
  }, [intl]);
  var month = React173.useMemo(function() {
    return getMonth(months, rrule);
  }, [months, rrule]);
  var offsets = React173.useMemo(function() {
    return getOffsets(localizeMessage);
  }, [localizeMessage]);
  var offset4 = React173.useMemo(function() {
    return getOffset(offsets, rrule);
  }, [offsets, rrule]);
  var endRule = React173.useMemo(function() {
    return getEndRule(rrule);
  }, [rrule]);
  var monthDay = React173.useMemo(function() {
    return getMonthDay(rrule, props.start);
  }, [rrule, props.start]);
  var until = React173.useMemo(function() {
    return getUntil(rrule);
  }, [rrule.until]);
  var weekDays = React173.useMemo(function() {
    return getWeekDays(intl);
  }, [intl]);
  var repeatOnRule = React173.useMemo(function() {
    return getRepeatOnRule(rrule);
  }, [rrule.byWeekDay, rrule.byMonthDay]);
  var onChangeHandler = React173.useCallback(function(newRrule) {
    if (newRrule.freq === "never") {
      props.onChange({ value: null });
    } else {
      if (newRrule.weekStart === void 0) {
        newRrule.weekStart = intl.firstDay();
      }
      props.onChange({ value: serializeRule(newRrule, props.timezone) });
    }
  }, [props.onChange, props.timezone]);
  var handleFrequencyChange = React173.useCallback(function(newFreq) {
    var newRrule = {};
    newRrule.freq = newFreq;
    newRrule.interval = 1;
    if (newFreq === "weekly") {
      newRrule.byWeekDay = [{
        day: ZonedDate.fromLocalDate(props.start, timezone).getDay(),
        offset: 0
      }];
    }
    if (newFreq === "monthly" || newFreq === "yearly") {
      newRrule.byMonthDay = [props.start.getDate()];
    }
    if (newFreq === "yearly") {
      newRrule.byMonth = [props.start.getMonth() + 1];
    }
    onChangeHandler(newRrule);
  }, [onChangeHandler, props.start, timezone]);
  var handleIntervalChange = React173.useCallback(function(event2) {
    var newInterval = event2.value;
    onChangeHandler(Object.assign({}, rrule, {
      interval: newInterval
    }));
  }, [onChangeHandler, rrule]);
  var handleCountChange = React173.useCallback(function(event2) {
    var newCount = event2.value;
    onChangeHandler(Object.assign({}, rrule, {
      count: newCount
    }));
    if (newCount !== null) {
      setDefaultCount(newCount);
    }
  }, [onChangeHandler, rrule]);
  var handleUntilChange = React173.useCallback(function(event2) {
    var newUntil = event2.value;
    if (!newUntil) {
      return;
    }
    var value2 = ZonedDate.fromLocalDate(newUntil, props.timezone);
    onChangeHandler(Object.assign({}, rrule, {
      until: value2
    }));
    setDefaultUntil(value2);
  }, [onChangeHandler, rrule, props.timezone]);
  var handleWeekDaysChange = React173.useCallback(function(newWeekDays) {
    onChangeHandler(Object.assign({}, rrule, {
      byWeekDay: weekDays.filter(function(wd) {
        return newWeekDays.some(function(nwd) {
          return nwd === wd.value;
        });
      }).map(function(wd) {
        return { offset: 0, day: wd.value };
      })
    }));
  }, [onChangeHandler, rrule, weekDays]);
  var handleWeekDayChange = React173.useCallback(function(event2) {
    var newRrule = Object.assign({}, rrule);
    var newWeekDay = event2.target.value;
    if (typeof newWeekDay.value === "string") {
      newRrule.byWeekDay = weekDayRuleFromString(newWeekDay.value);
      newRrule.bySetPosition = [offset4.value];
    } else {
      newRrule.byWeekDay = [{
        day: newWeekDay.value,
        offset: offset4.value
      }];
    }
    onChangeHandler(newRrule);
  }, [onChangeHandler, rrule]);
  var handleMonthDayChange = React173.useCallback(function(event2) {
    onChangeHandler(Object.assign({}, rrule, {
      byMonthDay: [event2.value]
    }));
  }, [onChangeHandler, rrule]);
  var handleMonthChange = React173.useCallback(function(event2) {
    var newMonth = event2.value;
    onChangeHandler(Object.assign({}, rrule, {
      byMonth: [newMonth.value]
    }));
  }, [onChangeHandler, rrule]);
  var handleEndRuleChange = React173.useCallback(function(event2) {
    var newEnd = event2.value;
    var newRrule = Object.assign({}, rrule);
    switch (newEnd) {
      case "never":
        newRrule.until = void 0;
        newRrule.count = void 0;
        break;
      case "count":
        newRrule.until = void 0;
        newRrule.count = defaultCount;
        break;
      case "until":
        newRrule.until = defaultUntil;
        newRrule.count = void 0;
        break;
      default:
        break;
    }
    onChangeHandler(newRrule);
  }, [onChangeHandler, rrule, props.timezone]);
  var handleRepeatOnRuleChange = React173.useCallback(function(event2) {
    var newRrule = Object.assign({}, rrule);
    if (event2.value === "monthday") {
      newRrule.byWeekDay = void 0;
      newRrule.bySetPosition = void 0;
      newRrule.byMonthDay = [monthDay];
    } else if (event2.value === "weekday") {
      newRrule.byMonthDay = void 0;
      if (typeof weekDay.value === "string") {
        newRrule.bySetPosition = [offset4.value];
        newRrule.byWeekDay = weekDayRuleFromString(weekDay.value);
      } else {
        newRrule.byWeekDay = [{
          day: weekDay.value,
          offset: offset4.value
        }];
      }
    }
    onChangeHandler(newRrule);
  }, [onChangeHandler, rrule, monthDay, weekDay]);
  var handleOffsetChange = React173.useCallback(function(event2) {
    var newRrule = Object.assign({}, rrule);
    var newOffset = event2.value;
    if (newRrule.byWeekDay) {
      var weekDaysCount = newRrule.byWeekDay.length;
      switch (weekDaysCount) {
        case 7:
        case 5:
        case 2:
          newRrule.bySetPosition = [newOffset.value];
          break;
        case 1:
          newRrule.byWeekDay[0].offset = newOffset.value;
          break;
        default:
          break;
      }
    }
    onChangeHandler(newRrule);
  }, [onChangeHandler, rrule]);
  return React173.createElement(
    React173.Fragment,
    null,
    React173.createElement(
      FieldWrapper,
      null,
      React173.createElement(Label, { className: "k-form-label" }, localization.toLanguageString(recurrenceEditorRepeat, messages2[recurrenceEditorRepeat])),
      React173.createElement(
        "div",
        { className: "k-form-field-wrap" },
        React173.createElement(RecurrenceFrequencyEditor, { value: frequency, data: frequencies2, onChange: handleFrequencyChange })
      )
    ),
    frequency !== "never" && React173.createElement(
      FieldWrapper,
      null,
      React173.createElement(Label, { editorId: "interval-editor", className: "k-form-label" }, localizeMessage(capitalize(frequency) + "RepeatEvery")),
      React173.createElement(
        "div",
        { className: "k-form-field-wrap" },
        React173.createElement(NumericTextBox, { min: 1, step: 1, defaultValue: 1, value: rrule.interval, onChange: handleIntervalChange, id: "interval-editor", className: "k-recur-interval" }),
        React173.createElement(React173.Fragment, null, "\xA0"),
        React173.createElement(Label, { editorId: "interval-editor", className: "k-form-label" }, localizeMessage(capitalize(frequency) + "Interval"))
      )
    ),
    frequency === "weekly" && React173.createElement(
      FieldWrapper,
      null,
      React173.createElement(Label, { className: "k-form-label" }, localizeMessage(recurrenceEditorWeeklyRepeatOn, true)),
      React173.createElement(
        "div",
        { className: "k-form-field-wrap" },
        React173.createElement(RecurrenceRepeatOnWeekEditor, { data: weekDays, value: (rrule.byWeekDay || []).map(function(_a15) {
          var day = _a15.day;
          return day;
        }), onChange: handleWeekDaysChange })
      )
    ),
    frequency === "monthly" && React173.createElement(
      FieldWrapper,
      null,
      React173.createElement(Label, { key: "recurrence-repeat-on-monthly-label", className: "k-form-label" }, localizeMessage(recurrenceEditorMonthlyRepeatOn, true)),
      React173.createElement(
        "div",
        { className: "k-form-field-wrap" },
        React173.createElement(RadioGroup, { value: repeatOnRule, onChange: handleRepeatOnRuleChange, item: RadioGroupListItem, className: "k-reset", data: [
          {
            value: "monthday",
            label: localizeMessage(recurrenceEditorMonthlyDay, true),
            children: [
              React173.createElement(React173.Fragment, { key: "separator" }, "\xA0"),
              React173.createElement(NumericTextBox, { key: "weekday-day", min: 1, max: 31, disabled: repeatOnRule !== "monthday", value: rrule && rrule.byMonthDay && rrule.byMonthDay[0], onChange: handleMonthDayChange, width: "auto" })
            ]
          },
          {
            value: "weekday",
            label: " ",
            children: [
              React173.createElement(DropDownList, { key: "weekday-offset", textField: "text", dataItemKey: "value", disabled: repeatOnRule !== "weekday", data: offsets, value: offset4, onChange: handleOffsetChange, style: { width: "auto" } }),
              React173.createElement(React173.Fragment, { key: "separator" }, "\xA0"),
              React173.createElement(DropDownList, { key: "weekday-value", disabled: repeatOnRule !== "weekday", value: weekDay, data: extendedWeekDays, onChange: handleWeekDayChange, textField: "text", dataItemKey: "value", style: { width: "auto" } })
            ]
          }
        ] })
      )
    ),
    frequency === "yearly" && React173.createElement(
      FieldWrapper,
      null,
      React173.createElement(Label, null, localizeMessage(recurrenceEditorYearlyRepeatOn, true)),
      React173.createElement(
        "div",
        { className: "k-form-field-wrap" },
        React173.createElement(RadioGroup, { value: repeatOnRule, item: RadioGroupListItem, onChange: handleRepeatOnRuleChange, className: "k-reset", data: [
          {
            value: "monthday",
            label: " ",
            children: [
              React173.createElement(DropDownList, { key: "monthday-month", disabled: repeatOnRule !== "monthday", value: month, data: months, textField: "text", dataItemKey: "value", onChange: handleMonthChange, style: { width: "auto" } }),
              React173.createElement(React173.Fragment, { key: "separator" }, "\xA0"),
              React173.createElement(NumericTextBox, { key: "monthday-day", min: 1, max: 31, disabled: repeatOnRule !== "monthday", value: monthDay, onChange: handleMonthDayChange, width: "auto" })
            ]
          },
          {
            value: "weekday",
            label: " ",
            children: [
              React173.createElement(DropDownList, { key: "yearly-weekday-offset", textField: "text", dataItemKey: "value", disabled: repeatOnRule !== "weekday", data: offsets, value: offset4, onChange: handleOffsetChange, style: { width: "auto" } }),
              React173.createElement(React173.Fragment, { key: "yearly-separator-1" }, "\xA0"),
              React173.createElement(DropDownList, { key: "yearly-weekday-day", textField: "text", dataItemKey: "value", disabled: repeatOnRule !== "weekday", value: weekDay, data: extendedWeekDays, onChange: handleWeekDayChange, style: { width: "auto" } }),
              React173.createElement(React173.Fragment, { key: "yearly-separator-2" }, "\xA0"),
              React173.createElement("span", { key: "yearly-weekday-of-label" }, localizeMessage(recurrenceEditorYearlyOf, true)),
              React173.createElement(React173.Fragment, { key: "yearly-separator-3" }, "\xA0"),
              React173.createElement(DropDownList, { key: "yearly-weekday-month", textField: "text", dataItemKey: "value", disabled: repeatOnRule !== "weekday", value: month, data: months, onChange: handleMonthChange, style: { width: "auto" } })
            ]
          }
        ] })
      )
    ),
    frequency !== "never" && React173.createElement(
      "div",
      { className: "k-scheduler-recurrence-end-rule-editor" },
      React173.createElement(
        FieldWrapper,
        null,
        React173.createElement(Label, { className: "k-form-label" }, localizeMessage(recurrenceEditorEndLabel, true)),
        React173.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React173.createElement(RadioGroup, { item: RadioGroupListItem, value: endRule, onChange: handleEndRuleChange, data: [
            {
              value: "never",
              label: localizeMessage(recurrenceEditorEndNever, true)
            },
            {
              value: "count",
              label: localizeMessage(recurrenceEditorEndAfter, true),
              children: [
                React173.createElement(React173.Fragment, { key: "separator-1" }, "\xA0"),
                React173.createElement(NumericTextBox, { key: "endrule-after-editor", id: "k-endrule-after", className: "k-recur-count", min: 1, width: "70px", value: endRule === "count" ? rrule.count : defaultCount, onChange: handleCountChange, disabled: endRule !== "count" }),
                React173.createElement(React173.Fragment, { key: "separator-2" }, "\xA0"),
                React173.createElement(Label, { key: "endrule-after-label", className: "k-radio-label", editorId: "k-endrule-after" }, localizeMessage(recurrenceEditorEndOccurrence, true))
              ]
            },
            {
              value: "until",
              label: localizeMessage(recurrenceEditorEndOn, true),
              children: [
                React173.createElement(React173.Fragment, { key: "separator" }, "\xA0"),
                React173.createElement(DatePicker, { key: "k-endrule-until-editor", id: "k-endrule-until", disabled: endRule !== "until", min: props.start, value: endRule === "until" ? until : toLocalDate(defaultUntil), onChange: handleUntilChange, width: "auto" })
              ]
            }
          ] })
        )
      )
    )
  );
};
var RadioGroupListItem = function(props) {
  return React173.createElement("li", __assign95({}, props), props.children);
};
RecurrenceEditor.defaultProps = {
  value: ""
};
RecurrenceEditor.displayName = "KendoReactSchedulerRepeatEditor";

// node_modules/@progress/kendo-react-scheduler/dist/es/editors/ResourceEditor.js
var React174 = __toESM(require_react());
var __assign96 = function() {
  __assign96 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign96.apply(this, arguments);
};
var ResourceEditor = function(props) {
  var Component64 = props.multiple ? MultiSelect : DropDownList;
  var handleChange = React174.useCallback(function(event2) {
    var valueField = event2.target.props.dataItemKey;
    var newValue = props.multiple ? (event2.target.value || []).map(function(item) {
      return item[valueField];
    }) : event2.target.value[valueField];
    props.onChange.call(void 0, { value: newValue });
  }, [props.multiple, props.onChange]);
  var itemRenderer = React174.useCallback(function(element6, itemProps) {
    var children2 = React174.createElement(
      React174.Fragment,
      null,
      props.colorField && React174.createElement("span", { key: 1, className: "k-scheduler-mark", style: {
        backgroundColor: itemProps.dataItem[props.colorField],
        marginRight: isPresent2(itemProps.dataItem[props.valueField]) ? "8px" : "4px"
      } }, "\xA0"),
      React174.createElement(
        "span",
        { key: 2 },
        "\xA0 ",
        element6.props.children
      )
    );
    return React174.cloneElement(element6, __assign96({}, element6.props), children2);
  }, [props.colorField, props.valueField]);
  var valueRenderer = React174.useCallback(function(element6, currentValue) {
    var children2 = React174.createElement(
      React174.Fragment,
      null,
      props.colorField && currentValue && React174.createElement("span", { key: 1, className: "k-scheduler-mark", style: {
        backgroundColor: currentValue[props.colorField],
        marginRight: currentValue[props.valueField] ? "8px" : "4px"
      } }, "\xA0"),
      element6.props.children
    );
    return React174.cloneElement(element6, {}, children2);
  }, [props.colorField, props.valueField]);
  var value2 = Array.isArray(props.value) ? props.data.filter(function(item) {
    return props.value.some(function(val) {
      return item[props.valueField] === val;
    });
  }) : props.data.find(function(item) {
    return item[props.valueField] === props.value;
  });
  return React174.createElement(Component64, { value: value2, onChange: handleChange, data: props.data, textField: props.textField, dataItemKey: props.valueField, valid: props.valid, validationMessage: props.validationMessage, itemRender: itemRenderer, valueRender: valueRenderer });
};

// node_modules/@progress/kendo-react-scheduler/dist/es/editors/ZonedDateTime.js
var React175 = __toESM(require_react());
var __assign97 = function() {
  __assign97 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign97.apply(this, arguments);
};
var __rest41 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ZonedDateTime = function(props) {
  var _a14 = props.as, Component64 = _a14 === void 0 ? defaultProps22.as : _a14, other = __rest41(props, ["as"]);
  var timezone = useSchedulerPropsContext().timezone;
  var handleChange = function(event2) {
    if (other.onChange) {
      other.onChange({ value: readDateWithTimezone(event2.target.value, timezone) });
    }
  };
  return React175.createElement(Component64, __assign97({}, other, { value: readDateAsLocal(other.value, timezone), onChange: handleChange }));
};
var readDateAsLocal = function(value2, timezone) {
  if (value2) {
    return toLocalDate(ZonedDate.fromLocalDate(value2, timezone).toUTCDate());
  }
  return value2;
};
var readDateWithTimezone = function(value2, timezone) {
  if (value2) {
    return ZonedDate.fromUTCDate(new Date(Date.UTC(value2.getFullYear(), value2.getMonth(), value2.getDate(), value2.getHours(), value2.getMinutes(), value2.getSeconds(), value2.getMilliseconds())), timezone).toLocalDate();
  }
  return value2;
};
var defaultProps22 = {
  as: DateTimePicker
};

// node_modules/@progress/kendo-react-scheduler/dist/es/editors/SchedulerFormEditor.js
var React176 = __toESM(require_react());
var __assign98 = function() {
  __assign98 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign98.apply(this, arguments);
};
var __rest42 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerFormEditor = React176.forwardRef(function(props, ref) {
  var component = React176.useRef(null);
  var target = React176.useRef(null);
  var timezones2 = timezoneNames();
  var localization = useLocalization();
  var fields = useSchedulerFieldsContext();
  var _a14 = useSchedulerPropsContext(), resources = _a14.resources, timezone = _a14.timezone;
  React176.useImperativeHandle(target, function() {
    return {
      element: component.current && component.current.element ? component.current.element : component.current,
      props
    };
  });
  React176.useImperativeHandle(ref, function() {
    return target.current;
  });
  var _b3 = props.as, Component64 = _b3 === void 0 ? defaultProps23.as : _b3, other = __rest42(props, ["as"]);
  var _c2 = props.titleLabel, TitleLabel = _c2 === void 0 ? defaultProps23.titleLabel : _c2, _d = props.titleError, TitleError = _d === void 0 ? defaultProps23.titleError : _d, _e = props.titleEditor, TitleEditor = _e === void 0 ? defaultProps23.titleEditor : _e, _f = props.startLabel, StartLabel = _f === void 0 ? defaultProps23.startLabel : _f, _g = props.startError, StartError = _g === void 0 ? defaultProps23.startError : _g, _h = props.startEditor, StartEditor = _h === void 0 ? defaultProps23.startEditor : _h, _j = props.startTimezoneLabel, StartTimezoneLabel = _j === void 0 ? defaultProps23.startTimezoneLabel : _j, _k = props.startTimezoneError, StartTimezoneError = _k === void 0 ? defaultProps23.startTimezoneError : _k, _l = props.startTimezoneEditor, StartTimezoneEditor = _l === void 0 ? defaultProps23.startTimezoneEditor : _l, _m = props.startTimezoneCheckedLabel, StartTimezoneCheckedLabel = _m === void 0 ? defaultProps23.startTimezoneCheckedLabel : _m, _o = props.startTimezoneCheckedEditor, StartTimezoneCheckedEditor = _o === void 0 ? defaultProps23.startTimezoneCheckedEditor : _o, _p = props.endLabel, EndLabel = _p === void 0 ? defaultProps23.endLabel : _p, _q = props.endError, EndError = _q === void 0 ? defaultProps23.endError : _q, _r = props.endEditor, EndEditor = _r === void 0 ? defaultProps23.endEditor : _r, _s = props.endTimezoneLabel, EndTimezoneLabel = _s === void 0 ? defaultProps23.endTimezoneLabel : _s, _t = props.endTimezoneError, EndTimezoneError = _t === void 0 ? defaultProps23.endTimezoneError : _t, _u = props.endTimezoneEditor, EndTimezoneEditor = _u === void 0 ? defaultProps23.endTimezoneEditor : _u, _v = props.endTimezoneCheckedLabel, EndTimezoneCheckedLabel = _v === void 0 ? defaultProps23.endTimezoneCheckedLabel : _v, _w = props.endTimezoneCheckedEditor, EndTimezoneCheckedEditor = _w === void 0 ? defaultProps23.endTimezoneCheckedEditor : _w, _x = props.allDayLabel, AllDayLabel = _x === void 0 ? defaultProps23.allDayLabel : _x, _y = props.allDayEditor, AllDayEditor = _y === void 0 ? defaultProps23.allDayEditor : _y, _z = props.recurrenceEditor, RecurrenceEditor2 = _z === void 0 ? defaultProps23.recurrenceEditor : _z, _0 = props.descriptionLabel, DescriptionLabel = _0 === void 0 ? defaultProps23.descriptionLabel : _0, _1 = props.descriptionEditor, DescriptionEditor = _1 === void 0 ? defaultProps23.descriptionEditor : _1, _2 = props.descriptionError, DescriptionError = _2 === void 0 ? defaultProps23.descriptionError : _2, _3 = props.resourceLabel, ResourceLabel = _3 === void 0 ? defaultProps23.resourceLabel : _3, _4 = props.resourceEditor, ResourceEditor2 = _4 === void 0 ? defaultProps23.resourceEditor : _4;
  var start2 = props.valueGetter(fields.start) || /* @__PURE__ */ new Date();
  var startTimezone = props.valueGetter(fields.startTimezone) || timezone || "";
  var endTimezone = props.valueGetter(fields.endTimezone) || timezone || "";
  var requiredValidationMessage = React176.useMemo(function() {
    return localization.toLanguageString(editorValidationRequired, messages2[editorValidationRequired]);
  }, [localization]);
  var _5 = React176.useState(Boolean(props.valueGetter(fields.startTimezone))), startZoneChecked = _5[0], setStartZoneChecked = _5[1];
  var _6 = React176.useState(Boolean(props.valueGetter(fields.endTimezone))), endZoneChecked = _6[0], setEndZoneChecked = _6[1];
  var handleStartZoneCheckboxChange = React176.useCallback(function(e) {
    if (!e.value) {
      props.onChange(fields.startTimezone, { value: null });
      props.onChange(fields.endTimezone, { value: null });
      setEndZoneChecked(e.value);
    }
    setStartZoneChecked(e.value);
  }, [props.onChange, fields.startTimezone, fields.endTimezone]);
  var handleEndZoneCheckboxChange = React176.useCallback(function(e) {
    if (!e.value) {
      props.onChange(fields.endTimezone, { value: null });
    }
    setEndZoneChecked(e.value);
  }, [props.onChange]);
  var requiredValidator = React176.useCallback(function(value2) {
    return value2 ? void 0 : requiredValidationMessage;
  }, [requiredValidationMessage]);
  var startTimezoneValidator = React176.useCallback(function(_dataItem, formValueGetter) {
    return startZoneChecked ? requiredValidator(formValueGetter(fields.startTimezone)) : void 0;
  }, [requiredValidator, startZoneChecked, fields.startTimezone]);
  var endTimezoneValidator = React176.useCallback(function(_dataItem, formValueGetter) {
    return startZoneChecked && endZoneChecked ? requiredValidator(formValueGetter(fields.endTimezone)) || requiredValidator(formValueGetter(fields.startTimezone)) : void 0;
  }, [requiredValidator, startZoneChecked, endZoneChecked, fields.startTimezone, fields.endTimezone]);
  var className = React176.useMemo(function() {
    return classNames("k-scheduler-edit-form", props.className);
  }, [props.className]);
  return React176.createElement(
    Component64,
    __assign98({ ref: Component64 === defaultProps23.as ? component : void 0 }, other, { className }),
    React176.createElement(
      React176.Fragment,
      null,
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.title, component: TitleLabel, editorId: "k-scheduler-editor-title", className: "k-form-label" }, localization.toLanguageString(editorEventTitle, messages2[editorEventTitle])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { id: "k-scheduler-editor-title", name: fields.title, field: fields.title, component: TitleEditor }),
          props.errors[fields.title] && React176.createElement(Field, { name: fields.title, component: TitleError }, props.errors[fields.title])
        )
      ),
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.start, component: StartLabel, editorId: "k-scheduler-editor-start", className: "k-form-label" }, localization.toLanguageString(editorEventStart, messages2[editorEventStart])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { id: "k-scheduler-editor-start", name: fields.start, width: "auto", component: StartEditor, as: props.valueGetter(fields.isAllDay) ? DatePicker : DateTimePicker, timezone }),
          props.errors[fields.start] && React176.createElement(Field, { name: fields.start, component: StartError }, props.errors[fields.start])
        )
      ),
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(StartTimezoneCheckedLabel, { className: "k-form-label" }),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(StartTimezoneCheckedEditor, { id: "k-scheduler-editor-set-start-timezone", onChange: handleStartZoneCheckboxChange, value: startZoneChecked }),
          React176.createElement(StartTimezoneCheckedLabel, { className: "k-checkbox-label", editorId: "k-scheduler-editor-set-start-timezone" }, localization.toLanguageString(editorEventTimeZone, messages2[editorEventTimeZone]))
        )
      ),
      startZoneChecked && React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.start, component: StartTimezoneLabel, className: "k-form-label" }, localization.toLanguageString(editorEventStartTimeZone, messages2[editorEventStartTimeZone])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { component: StartTimezoneEditor, value: startTimezone, validator: startTimezoneValidator, data: timezones2, name: fields.startTimezone }),
          props.errors[fields.startTimezone] && React176.createElement(Field, { name: fields.startTimezone, component: StartTimezoneError }, props.errors[fields.startTimezone])
        )
      ),
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.end, component: EndLabel, editorId: "k-scheduler-editor-end", className: "k-form-label" }, localization.toLanguageString(editorEventEnd, messages2[editorEventEnd])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { id: "k-scheduler-editor-end", name: fields.end, width: "auto", component: EndEditor, as: props.valueGetter(fields.isAllDay) ? DatePicker : DateTimePicker, timezone }),
          props.errors[fields.end] && React176.createElement(Field, { name: fields.end, component: EndError }, props.errors[fields.end])
        )
      ),
      startZoneChecked && React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(EndTimezoneCheckedEditor, { id: "k-scheduler-editor-set-end-timezone", onChange: handleEndZoneCheckboxChange, value: endZoneChecked })
        ),
        React176.createElement(EndTimezoneCheckedLabel, { editorId: "k-scheduler-editor-set-end-timezone", className: "k-form-label" }, localization.toLanguageString(editorEventSeparateTimeZones, messages2[editorEventSeparateTimeZones]))
      ),
      endZoneChecked && React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.endTimezone, component: EndTimezoneLabel, className: "k-form-label" }, localization.toLanguageString(editorEventEndTimeZone, messages2[editorEventEndTimeZone])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { value: endTimezone, data: timezones2, validator: endTimezoneValidator, component: EndTimezoneEditor, name: fields.endTimezone }),
          props.errors[fields.endTimezone] && React176.createElement(Field, { name: fields.endTimezone, component: EndTimezoneError }, props.errors[fields.endTimezone])
        )
      ),
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.isAllDay, component: Label, className: "k-form-label" }),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { id: "k-is-allday-checkbox", name: fields.isAllDay, component: AllDayEditor }),
          React176.createElement(Field, { name: fields.isAllDay, field: fields.isAllDay, editorId: "k-is-allday-checkbox", className: "k-checkbox-label", component: AllDayLabel }, localization.toLanguageString(editorEventAllDay, messages2[editorEventAllDay]))
        )
      ),
      React176.createElement(
        "div",
        { className: "k-recurrence-editor" },
        React176.createElement(Field, { component: RecurrenceEditor2, field: fields.recurrenceRule, name: fields.recurrenceRule, start: start2 })
      ),
      React176.createElement(
        FieldWrapper,
        null,
        React176.createElement(Field, { name: fields.description, component: DescriptionLabel, className: "k-form-label" }, localization.toLanguageString(editorEventDescription, messages2[editorEventDescription])),
        React176.createElement(
          "div",
          { className: "k-form-field-wrap" },
          React176.createElement(Field, { component: DescriptionEditor, name: fields.description, rows: 1, id: "k-event-description" }),
          props.errors[fields.description] && React176.createElement(Field, { name: fields.description, component: DescriptionError }, props.errors[fields.description])
        )
      ),
      (resources || []).map(function(resource) {
        return React176.createElement(
          FieldWrapper,
          { key: resource.field },
          React176.createElement(Field, { name: resource.field, component: ResourceLabel, className: "k-form-label" }),
          React176.createElement(Label, { className: "k-form-label" }, resource.name),
          React176.createElement(Field, { name: resource.field, component: ResourceEditor2, resource, multiple: resource.multiple, data: resource.data, textField: resource.textField, valueField: resource.valueField, colorField: resource.colorField })
        );
      })
    )
  );
});
var defaultProps23 = {
  as: React176.forwardRef(function(props, ref) {
    return React176.createElement(FormElement, { ref, id: props.id, style: props.style, tabIndex: props.tabIndex, className: props.className, horizontal: props.horizontal, children: props.children });
  }),
  titleLabel: Label,
  titleError: Error2,
  titleEditor: Input,
  startLabel: Label,
  startError: Error2,
  startEditor: ZonedDateTime,
  startTimezoneLabel: Label,
  startTimezoneError: Error2,
  startTimezoneEditor: FilterableComboBox,
  startTimezoneCheckedLabel: Label,
  startTimezoneCheckedEditor: Checkbox,
  endLabel: Label,
  endError: Error2,
  endEditor: ZonedDateTime,
  endTimezoneLabel: Label,
  endTimezoneError: Error2,
  endTimezoneEditor: FilterableComboBox,
  endTimezoneCheckedLabel: Label,
  endTimezoneCheckedEditor: Checkbox,
  allDayLabel: Label,
  allDayEditor: Checkbox,
  recurrenceEditor: RecurrenceEditor,
  descriptionLabel: Label,
  descriptionEditor: TextArea,
  descriptionError: Error2,
  resourceLabel: Label,
  resourceEditor: ResourceEditor
};
SchedulerFormEditor.displayName = "KendoReactSchedulerFormEditor";
SchedulerFormEditor.defaultProps = defaultProps23;

// node_modules/@progress/kendo-react-scheduler/dist/es/components/SchedulerForm.js
var React177 = __toESM(require_react());
var ReactDOM8 = __toESM(require_react_dom());
var __assign99 = function() {
  __assign99 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign99.apply(this, arguments);
};
var __rest43 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerForm = React177.forwardRef(function(props, ref) {
  var onCancel = props.onCancel, onClose = props.onClose, onSubmit = props.onSubmit, Editor = props.editor, _a14 = props.dialog, Dialog2 = _a14 === void 0 ? defaultProps24.dialog : _a14, _b3 = props.validator, validator = _b3 === void 0 ? defaultProps24.validator : _b3, other = __rest43(props, ["onCancel", "onClose", "onSubmit", "editor", "dialog", "validator"]);
  var form = React177.useRef(null);
  React177.useImperativeHandle(form, function() {
    return { props };
  });
  React177.useImperativeHandle(ref, function() {
    return form.current;
  });
  var localization = useLocalization();
  var fields = useSchedulerFieldsContext();
  var requiredValidationMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorValidationRequired, messages2[editorValidationRequired]);
  }, [localization]);
  var endValidationMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorValidationEnd, messages2[editorValidationEnd]);
  }, [localization]);
  var editSaveMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorSave, messages2[editorSave]);
  }, [localization]);
  var editCancelMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorCancel, messages2[editorCancel]);
  }, [localization]);
  var editorTitleMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorTitle, messages2[editorTitle]);
  }, [localization]);
  var startValidationMessage = React177.useMemo(function() {
    return localization.toLanguageString(editorValidationStart, messages2[editorValidationStart]);
  }, [localization]);
  var handleCancel = React177.useCallback(function(syntheticEvent) {
    if (onCancel) {
      onCancel.call(void 0, { value: null, syntheticEvent, target: form.current });
    }
  }, [onCancel]);
  var handleClose = React177.useCallback(function(_a15) {
    var syntheticEvent = _a15.syntheticEvent;
    if (onClose) {
      onClose.call(void 0, { value: null, syntheticEvent, target: form.current });
    }
  }, [onClose]);
  var handleSubmit = React177.useCallback(function(dataItem, syntheticEvent) {
    if (onSubmit) {
      onSubmit.call(void 0, { value: dataItem, syntheticEvent, target: form.current });
    }
  }, [onSubmit]);
  var startAfterEndValidator = React177.useCallback(function(value2, formValueGetter) {
    return Boolean(value2 && formValueGetter(fields.end) && value2.getTime() > formValueGetter(fields.end).getTime()) ? startValidationMessage : void 0;
  }, [fields, startValidationMessage]);
  var endAfterStartValidator = React177.useCallback(function(value2, formValueGetter) {
    return Boolean(value2 && formValueGetter(fields.start) && value2.getTime() < formValueGetter(fields.start).getTime()) ? endValidationMessage : void 0;
  }, [fields, endValidationMessage]);
  var requiredValidator = React177.useCallback(function(value2) {
    return value2 ? void 0 : requiredValidationMessage;
  }, [requiredValidationMessage]);
  var formValidator = React177.useCallback(function(_dataItem, formValueGetter) {
    var result = {};
    result[fields.start] = [
      requiredValidator(formValueGetter(fields.start)),
      startAfterEndValidator(formValueGetter(fields.start), formValueGetter)
    ].filter(Boolean).reduce(function(current, acc) {
      return current || acc;
    }, "");
    result[fields.end] = [
      requiredValidator(formValueGetter(fields.start)),
      endAfterStartValidator(formValueGetter(fields.start), formValueGetter)
    ].filter(Boolean).reduce(function(current, acc) {
      return current || acc;
    }, "");
    var additionalValidator = validator(_dataItem, formValueGetter);
    return __assign99(__assign99({}, result), additionalValidator);
  }, [endAfterStartValidator, fields.end, fields.start, requiredValidator, startAfterEndValidator, validator]);
  return canUseDOM ? ReactDOM8.createPortal(React177.createElement(Form, __assign99({ initialValues: props.dataItem, onSubmit: handleSubmit, validator: formValidator, render: function(renderProps) {
    return React177.createElement(
      Dialog2,
      { title: editorTitleMessage, minWidth: 400, onClose: handleClose, className: "k-scheduler-edit-dialog" },
      React177.createElement(SchedulerFormEditor, __assign99({}, renderProps, { as: Editor })),
      React177.createElement(
        DialogActionsBar,
        { layout: "start" },
        React177.createElement(Button, { themeColor: "primary", disabled: !renderProps.allowSubmit, onClick: renderProps.onSubmit, icon: "save", svgIcon: saveIcon }, editSaveMessage),
        React177.createElement(Button, { onClick: handleCancel, icon: "cancel", svgIcon: cancelIcon }, editCancelMessage)
      )
    );
  } }, other)), document && document.body) : null;
});
var defaultProps24 = {
  dialog: Dialog,
  validator: function() {
    return {};
  }
};
SchedulerForm.defaultProps = defaultProps24;
SchedulerForm.displayName = "KendoReactSchedulerForm";

// node_modules/@progress/kendo-react-scheduler/dist/es/hooks/useSchedulerSlot.js
var React178 = __toESM(require_react());
var useSchedulerSlot = function(props, ref) {
  var _ref = props.n;
  var slot = React178.useRef(null);
  var element6 = React178.useRef(null);
  var _a14 = useSchedulerViewSlotsContext(), dispatchSlots = _a14[1];
  React178.useImperativeHandle(slot, function() {
    return { element: element6.current, props };
  });
  React178.useImperativeHandle(ref, function() {
    return slot.current;
  });
  React178.useImperativeHandle(_ref, function() {
    return slot.current;
  });
  React178.useEffect(function() {
    dispatchSlots({
      type: COLLECTION_ACTION.add,
      item: slot
    });
    return function() {
      dispatchSlots({
        type: COLLECTION_ACTION.remove,
        item: slot
      });
    };
  });
  return {
    slot,
    element: element6
  };
};

// node_modules/@progress/kendo-react-scheduler/dist/es/slots/SchedulerSlot.js
var React179 = __toESM(require_react());
var __assign100 = function() {
  __assign100 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign100.apply(this, arguments);
};
var SchedulerSlot = React179.forwardRef(function(props, ref) {
  var onFocus = props.onFocus, onBlur = props.onBlur, onClick = props.onClick, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseOut = props.onMouseOut, onMouseOver = props.onMouseOver, onDoubleClick = props.onDoubleClick, onKeyDown = props.onKeyDown, onKeyPress = props.onKeyPress, onKeyUp = props.onKeyUp;
  var _a14 = useSchedulerSlot(props, ref), slot = _a14.slot, element6 = _a14.element;
  var intl = useInternationalization();
  var tabIndex = props.tabIndex !== void 0 ? props.tabIndex === null ? void 0 : props.tabIndex : props.selected ? 0 : -1;
  var className = React179.useMemo(function() {
    return classNames(props.className, "k-scheduler-cell k-slot-cell", {
      "k-nonwork-hour": !props.isWorkHour || !props.isWorkDay,
      "k-selected": props.selected
    });
  }, [props.className, props.selected, props.isWorkHour, props.isWorkDay]);
  var style = React179.useMemo(function() {
    return __assign100({ userSelect: "none" }, props.style);
  }, [props.style]);
  var slotLabel = React179.useMemo(function() {
    return "".concat(formatEventTime(intl, props.zonedStart, props.zonedEnd, props.isAllDay || false));
  }, [intl, props.isAllDay, props.zonedEnd, props.zonedStart]);
  var handleFocus = React179.useCallback(function(syntheticEvent) {
    if (!onFocus) {
      return;
    }
    onFocus.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onFocus, slot]);
  var handleBlur = React179.useCallback(function(syntheticEvent) {
    if (!onBlur) {
      return;
    }
    onBlur.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onBlur, slot]);
  var handleClick = React179.useCallback(function(syntheticEvent) {
    if (!onClick) {
      return;
    }
    onClick.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onClick, slot]);
  var handleMouseOver = React179.useCallback(function(syntheticEvent) {
    if (!onMouseOver) {
      return;
    }
    onMouseOver.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onMouseOver, slot]);
  var handleMouseOut = React179.useCallback(function(syntheticEvent) {
    if (!onMouseOut) {
      return;
    }
    onMouseOut.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onMouseOut, slot]);
  var handleMouseEnter = React179.useCallback(function(syntheticEvent) {
    if (!onMouseEnter) {
      return;
    }
    onMouseEnter.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onMouseEnter, slot]);
  var handleMouseLeave = React179.useCallback(function(syntheticEvent) {
    if (!onMouseLeave) {
      return;
    }
    onMouseLeave.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onMouseLeave, slot]);
  var handleDoubleClick = React179.useCallback(function(syntheticEvent) {
    if (!onDoubleClick) {
      return;
    }
    onDoubleClick.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onDoubleClick, slot]);
  var handleKeyDown = React179.useCallback(function(syntheticEvent) {
    if (!onKeyDown) {
      return;
    }
    onKeyDown.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onKeyDown, slot]);
  var handleKeyPress = React179.useCallback(function(syntheticEvent) {
    if (!onKeyPress) {
      return;
    }
    onKeyPress.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onKeyPress, slot]);
  var handleKeyUp = React179.useCallback(function(syntheticEvent) {
    if (!onKeyUp) {
      return;
    }
    onKeyUp.call(void 0, {
      syntheticEvent,
      target: slot.current
    });
  }, [onKeyUp, slot]);
  return React179.createElement("div", {
    ref: element6,
    id: props.id,
    style,
    className,
    tabIndex,
    "aria-label": slotLabel,
    "aria-selected": props.selected || void 0,
    // Focus
    onFocus: handleFocus,
    onBlur: handleBlur,
    // Mouse
    onClick: handleClick,
    onMouseEnter: handleMouseEnter,
    onMouseLeave: handleMouseLeave,
    onMouseOver: handleMouseOver,
    onMouseOut: handleMouseOut,
    onDoubleClick: handleDoubleClick,
    // Keyboard
    onKeyDown: handleKeyDown,
    onKeyPress: handleKeyPress,
    onKeyUp: handleKeyUp,
    "data-slot": true,
    "data-slot-allday": props.isAllDay,
    "data-slot-start": props.start.getTime(),
    "data-slot-end": props.end.getTime(),
    "data-slot-group": props.group.index,
    "data-slot-range": props.range.index,
    "data-slot-index": props.index
  }, props.children);
});
var defaultProps25 = {
  isWorkHour: true,
  isWorkDay: true
};
SchedulerSlot.defaultProps = defaultProps25;
SchedulerSlot.displayName = "KendoReactSchedulerSlot";

// node_modules/@progress/kendo-react-scheduler/dist/es/slots/SchedulerViewSlot.js
var React180 = __toESM(require_react());
var __assign101 = function() {
  __assign101 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign101.apply(this, arguments);
};
var __rest44 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerViewSlot = React180.forwardRef(function(props, ref) {
  var propSlot = props.slot, _ref = props.n, slotProps = __rest44(props, ["slot", "_ref"]);
  var Slot = propSlot || defaultProps26.slot;
  var viewSlot = React180.useRef(null);
  var slot = React180.useRef(null);
  React180.useImperativeHandle(viewSlot, function() {
    return { props };
  });
  React180.useImperativeHandle(_ref, function() {
    return slot.current;
  });
  React180.useImperativeHandle(ref, function() {
    return viewSlot.current;
  });
  useSlotExpand(slot, props.expandable);
  return React180.createElement(Slot, __assign101({}, slotProps, { n: slot }));
});
var defaultProps26 = {
  slot: SchedulerSlot,
  expandable: false
};
SchedulerViewSlot.defaultProps = defaultProps26;
SchedulerViewSlot.displayName = "KendoReactSchedulerViewSlot";

// node_modules/@progress/kendo-react-scheduler/dist/es/slots/SchedulerEditSlot.js
var React181 = __toESM(require_react());
var __assign102 = function() {
  __assign102 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign102.apply(this, arguments);
};
var __rest45 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var SchedulerEditSlot = React181.forwardRef(function(props, ref) {
  var _ref = props.n, onDataAction = props.onDataAction, propViewSlot = props.viewSlot, propForm = props.form, propFormItem = props.formItem, onFormItemChange = props.onFormItemChange, viewSlotProps = __rest45(props, ["_ref", "onDataAction", "viewSlot", "form", "formItem", "onFormItemChange"]);
  var _a14 = React181.useState(props.tabIndex), tabIndex = _a14[0], setTabIndex = _a14[1];
  var slot = React181.useRef(null);
  var editableSlot = React181.useRef(null);
  React181.useImperativeHandle(editableSlot, function() {
    return { props };
  });
  React181.useImperativeHandle(ref, function() {
    return editableSlot.current;
  });
  React181.useImperativeHandle(_ref, function() {
    return slot.current;
  });
  var editable = useEditable(props.editable);
  var fields = useSchedulerFieldsContext();
  var slots = useSchedulerViewSlotsContext()[0];
  var items = useSchedulerViewItemsContext()[0];
  var _b3 = useSchedulerViewSelectedSlotsContext(), selectedSlots = _b3[0], dispatchSlotsSelection = _b3[1];
  var _c2 = useSchedulerViewFocusedSlotsContext(), dispatchFocusedSlots = _c2[1];
  var Form2 = propForm || defaultProps27.form;
  var ViewSlot = propViewSlot || defaultProps27.viewSlot;
  var _d = useControlledState(null, propFormItem, props.onFormItemChange), formItem = _d[0], setFormItem = _d[1];
  var selected = selectedSlots.some(function(s) {
    return Boolean(s.current && s.current.props.start.getTime() === props.start.getTime() && s.current.props.end.getTime() === props.end.getTime() && s.current.props.index === props.index && s.current.props.group.index === props.group.index && s.current.props.range.index === props.range.index && s.current.props.isAllDay === props.isAllDay);
  });
  var createDataItemFromSlot = React181.useCallback(function() {
    var dataItem = {};
    setField(dataItem, fields.start, new Date(props.start.getTime()));
    setField(dataItem, fields.end, new Date(props.end.getTime()));
    setField(dataItem, fields.isAllDay, props.isAllDay);
    if (props.group.resources.length) {
      for (var idx = 0; idx < props.group.resources.length; idx++) {
        var resource = props.group.resources[idx];
        if (isGroupped(props.group.resources)) {
          var value2 = getField(props.group.resources[idx], resource.valueField);
          setField(dataItem, resource.field, resource.multiple ? [value2] : value2);
        } else {
          setField(dataItem, resource.field, resource.multiple ? [] : void 0);
        }
      }
    }
    return dataItem;
  }, [
    fields.start,
    fields.end,
    fields.isAllDay,
    props.start,
    props.end,
    props.isAllDay,
    props.group.resources
  ]);
  var handleFocus = React181.useCallback(function(event2) {
    if (editable.select) {
      dispatchSlotsSelection({
        type: SLOTS_SELECT_ACTION.select,
        slot
      }, event2.syntheticEvent);
    }
    if (props.onFocus) {
      props.onFocus.call(void 0, event2);
    }
  }, [
    dispatchSlotsSelection,
    editable.select,
    props.onFocus
  ]);
  var handleDoubleClick = React181.useCallback(function(event2) {
    if (editable.add) {
      var dataItem = createDataItemFromSlot();
      setFormItem(dataItem, event2);
    }
    if (props.onDoubleClick) {
      props.onDoubleClick.call(void 0, event2);
    }
  }, [
    createDataItemFromSlot,
    editable.add,
    props.onDoubleClick,
    setFormItem
  ]);
  var handleKeyDown = React181.useCallback(function(event2) {
    var nextItem;
    switch (event2.syntheticEvent.keyCode) {
      case Keys.left:
        if (!slots) {
          return;
        }
        event2.syntheticEvent.preventDefault();
        dispatchFocusedSlots({ type: SLOTS_FOCUS_ACTION.left, slot }, event2.syntheticEvent);
        break;
      case Keys.right:
        if (!slots) {
          return;
        }
        event2.syntheticEvent.preventDefault();
        dispatchFocusedSlots({ type: SLOTS_FOCUS_ACTION.right, slot }, event2.syntheticEvent);
        break;
      case Keys.up:
        if (!slots) {
          return;
        }
        event2.syntheticEvent.preventDefault();
        dispatchFocusedSlots({ type: SLOTS_FOCUS_ACTION.up, slot }, event2.syntheticEvent);
        break;
      case Keys.down:
        if (!slots) {
          return;
        }
        event2.syntheticEvent.preventDefault();
        dispatchFocusedSlots({ type: SLOTS_FOCUS_ACTION.down, slot }, event2.syntheticEvent);
        break;
      case Keys.enter:
        if (!slots || !editable.add) {
          return;
        }
        var dataItem = createDataItemFromSlot();
        setFormItem(dataItem);
        break;
      case Keys.tab:
        nextItem = findFirstItem(event2.target);
        break;
      default:
        break;
    }
    if (nextItem) {
      event2.syntheticEvent.preventDefault();
      if (nextItem.element) {
        nextItem.element.focus();
      }
    }
  }, [createDataItemFromSlot, dispatchFocusedSlots, editable.add, setFormItem, slots]);
  var handleEditFormSubmit = React181.useCallback(function(event2) {
    if (onDataAction) {
      onDataAction.call(void 0, {
        type: DATA_ACTION.create,
        series: false,
        dataItem: event2.value
      }, event2);
    }
    setFormItem(null, event2.syntheticEvent);
  }, [
    onDataAction,
    setFormItem
  ]);
  var handleEditFormCancel = React181.useCallback(function(event2) {
    setFormItem(null, event2.syntheticEvent);
  }, [setFormItem]);
  var handleEditFormClose = React181.useCallback(function(event2) {
    setFormItem(null, event2);
  }, [setFormItem]);
  var handleFormItemChange = React181.useCallback(function(value2, event2) {
    if (!setFormItem) {
      return;
    }
    setFormItem(value2, event2);
  }, [setFormItem]);
  React181.useEffect(function() {
    var isFirst = slots.length && slots[0].current === slot.current;
    setTabIndex(props.tabIndex !== void 0 ? props.tabIndex === null ? void 0 : props.tabIndex : selectedSlots.length === 0 ? isFirst && items.length === 0 ? 0 : void 0 : void 0);
  }, [items, props.tabIndex, selectedSlots.length, slots]);
  return React181.createElement(
    SchedulerEditSlotContext,
    { props, form: [formItem, handleFormItemChange] },
    React181.createElement(ViewSlot, __assign102({}, viewSlotProps, {
      n: slot,
      selected,
      tabIndex,
      // Focus
      onFocus: handleFocus,
      // Mouse
      onDoubleClick: handleDoubleClick,
      // Keyboard
      onKeyDown: handleKeyDown
    })),
    formItem && React181.createElement(Form2, { dataItem: formItem, onSubmit: handleEditFormSubmit, onClose: handleEditFormClose, onCancel: handleEditFormCancel })
  );
});
var defaultProps27 = {
  viewSlot: SchedulerViewSlot,
  form: SchedulerForm
};
SchedulerEditSlot.defaultProps = defaultProps27;
SchedulerEditSlot.displayName = "KendoReactSchedulerEditSlot";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/agenda/AgendaView.js
var React182 = __toESM(require_react());
var PropTypes78 = __toESM(require_prop_types());
var __assign103 = function() {
  __assign103 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign103.apply(this, arguments);
};
var AgendaView = function(props) {
  var _a14 = useSchedulerPropsContext(), group2 = _a14.group, timezone = _a14.timezone, propResources = _a14.resources;
  var EditTask = props.editTask || SchedulerEditTask;
  var EditSlot = props.editSlot || SchedulerEditSlot;
  var element6 = React182.useRef(null);
  var dir = useDir(element6);
  var intl = useInternationalization();
  var localization = useLocalization();
  var data2 = useSchedulerDataContext()[0];
  var groups = useSchedulerGroupsContext();
  var fields = useSchedulerFieldsContext();
  var dateRange = useSchedulerDateRangeContext();
  var ranges = React182.useMemo(function() {
    return toRanges(dateRange, { step: MS_PER_DAY, timezone });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone
  ]);
  var slots = React182.useMemo(function() {
    return toSlots(dateRange, { step: MS_PER_DAY }, { groups, ranges });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone,
    groups,
    ranges
  ]);
  var occurrences2 = React182.useMemo(function() {
    return toOccurrences(data2, { dateRange, fields, timezone });
  }, [data2, dateRange.start.getTime(), dateRange.end.getTime(), fields, timezone]);
  var items = React182.useMemo(function() {
    return toItems(occurrences2, { timezone }, { groups, ranges });
  }, [occurrences2, timezone, groups, ranges]);
  var className = React182.useMemo(function() {
    return classNames("k-scheduler-agendaview", props.className);
  }, [props.className]);
  useCellSync({ element: element6, selector: ".k-scheduler-datecolumn", explicitDepth: false });
  useCellSync({ element: element6, selector: ".k-scheduler-timecolumn", explicitDepth: false });
  React182.useMemo(function() {
    return mapItemsToSlots(items, slots, true);
  }, [items, slots]);
  React182.useMemo(function() {
    return mapSlotsToItems(items, slots, true);
  }, [items, slots]);
  return React182.createElement(
    BaseView,
    { ref: element6, id: props.id, style: props.style, className, props, slots: items, ranges },
    React182.createElement(
      "div",
      { className: "k-scheduler-head" },
      React182.createElement(
        VerticalResourceIterator,
        { resources: propResources, group: group2 },
        React182.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
          var groupIndex = _a15.groupIndex;
          return React182.createElement(
            "div",
            { className: "k-scheduler-row", key: groupIndex },
            React182.createElement("div", { className: "k-scheduler-cell k-heading-cell k-group-cell k-scheduler-datecolumn" }, localization.toLanguageString(dateTitle, messages2[dateTitle])),
            React182.createElement("div", { className: "k-scheduler-cell k-heading-cell k-group-cell k-scheduler-timecolumn" }, localization.toLanguageString(timeTitle, messages2[timeTitle])),
            React182.createElement("div", { className: "k-scheduler-cell k-heading-cell k-scheduler-eventcolumn" }, localization.toLanguageString(eventTitle, messages2[eventTitle]))
          );
        })
      )
    ),
    React182.createElement(
      "div",
      { className: "k-scheduler-body" },
      React182.createElement(
        VerticalResourceIterator,
        { resources: propResources, group: group2, nested: true },
        React182.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
          var groupIndex = _a15.groupIndex;
          return slots.filter(function(slot) {
            return slot.group.index === (groupIndex || 0);
          }).map(function(slot, slotIndex, filtered) {
            return React182.createElement(
              "div",
              { className: "k-scheduler-row  k-scheduler-content", key: "".concat(groupIndex, ":").concat(slotIndex) },
              React182.createElement(
                EditSlot,
                __assign103({}, slot, { editable: props.editable, row: filtered.length * (groupIndex || 0) + slotIndex, col: 0, slot: props.slot, viewSlot: props.viewSlot, className: "k-scheduler-datecolumn k-group-cell" }),
                React182.createElement(
                  "div",
                  null,
                  React182.createElement("strong", { className: "k-scheduler-agendaday" }, intl.formatDate(slot.zonedStart, "dd")),
                  React182.createElement("em", { className: "k-scheduler-agendaweek" }, intl.formatDate(slot.zonedStart, "EEEE")),
                  React182.createElement("span", { className: "k-scheduler-agendadate" }, intl.formatDate(slot.zonedStart, "y"))
                )
              ),
              React182.createElement("div", { className: "k-scheduler-cell k-group-content" }, slot.items.length ? slot.items.map(function(item, itemIndex) {
                return React182.createElement(
                  "div",
                  { className: "k-scheduler-row", key: itemIndex },
                  React182.createElement(
                    "div",
                    { className: "k-scheduler-cell k-scheduler-timecolumn" },
                    React182.createElement(
                      "div",
                      null,
                      item.tail && React182.createElement(IconWrap, { name: dir === "rtl" ? "caret-alt-right" : "caret-alt-left", icon: dir === "rtl" ? caretAltRightIcon : caretAltLeftIcon }),
                      item.isAllDay ? localization.toLanguageString(allDay, messages2[allDay]) : getTimeFormat(intl, item),
                      item.head && React182.createElement(IconWrap, { name: dir === "rtl" ? "caret-alt-left" : "caret-alt-right", icon: dir === "rtl" ? caretAltLeftIcon : caretAltRightIcon })
                    )
                  ),
                  React182.createElement(
                    "div",
                    { className: "k-scheduler-cell" },
                    React182.createElement(EditTask, __assign103({ key: "".concat(slotIndex, ":").concat(itemIndex) }, item, { onDataAction: props.onDataAction, task: props.task, viewTask: props.viewTask, editable: props.editable }))
                  )
                );
              }) : React182.createElement("div", { className: "k-scheduler-cell k-heading-cell k-group-cell" }, localization.toLanguageString(noEvents, messages2[noEvents])))
            );
          });
        })
      )
    )
  );
};
var getTimeFormat = function(intl, props) {
  var format3 = "{0:t}-{1:t}";
  if (props.head) {
    format3 = "{0:t}";
  } else if (props.tail) {
    format3 = "{1:t}";
  }
  return intl.format(format3, props.zonedStart, props.zonedEnd);
};
var GET_START_DATE = function(date2) {
  return getDate(date2);
};
var GET_END_DATE = function(start2, numberOfDays) {
  return getDate(addDays(start2, numberOfDays || 1));
};
var agendaViewDateRange = function(_a14) {
  var intl = _a14.intl, date2 = _a14.date, _b3 = _a14.numberOfDays, numberOfDays = _b3 === void 0 ? 1 : _b3, timezone = _a14.timezone;
  var normalized = ZonedDate.fromLocalDate(date2, timezone);
  var firstDate = numberOfDays === DAYS_IN_WEEK_COUNT ? GET_START_DATE(firstDayInWeek(normalized, intl.firstDay())) : GET_START_DATE(normalized);
  var lastDate = GET_END_DATE(firstDate, numberOfDays);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDate), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDate), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps28 = {
  name: "agenda",
  title: function(localization) {
    return localization.toLanguageString(agendaViewTitle, messages2[agendaViewTitle]);
  },
  dateRange: agendaViewDateRange,
  selectedDateFormat: "{0:D} - {1:D}",
  selectedShortDateFormat: "{0:d} - {1:d}",
  slotDuration: 60 * 24,
  slotDivision: 1,
  step: DAYS_IN_WEEK_COUNT,
  numberOfDays: DAYS_IN_WEEK_COUNT
};
var propTypes6 = {
  title: PropTypes78.any
};
AgendaView.propTypes = propTypes6;
AgendaView.defaultProps = defaultProps28;

// node_modules/@progress/kendo-react-scheduler/dist/es/views/common/HorizontalResourceIterator.js
var React183 = __toESM(require_react());
var __assign104 = function() {
  __assign104 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign104.apply(this, arguments);
};
var HorizontalResourceIterator = function(props) {
  var nested = props.nested, children2 = props.children, rowContentProps = props.rowContentProps;
  var rowContent = props.rowContent || DefaultRowContent;
  var childRowContent = props.childRowContent || rowContent;
  var resources = toGroupResources(props.group, props.resources);
  var groupIndex = 0;
  return React183.createElement("div", { className: "k-scheduler-group k-group-horizontal" }, nested ? renderResourcesRecursively2({ resources, children: children2, nested, groupIndex, rowContent, rowContentProps, childRowContent }) : renderResources2({ resources, children: children2, rowContent, nested: !!nested, groupIndex, rowContentProps, childRowContent }));
};
var renderResourcesRecursively2 = function(args) {
  var resources = args.resources, rowContent = args.rowContent, nested = args.nested, children2 = args.children, groupIndex = args.groupIndex, rowContentProps = args.rowContentProps, childRowContent = args.childRowContent;
  if (groupIndex === resources.length) {
    return renderResources2({ resources, rowContent, children: children2, nested, groupIndex, rowContentProps, childRowContent });
  }
  var expandedResources = expandResources(resources, groupIndex);
  var RowContent = rowContent;
  return React183.createElement(
    React183.Fragment,
    null,
    nested ? React183.createElement(
      "div",
      { className: "k-scheduler-row" },
      React183.createElement(RowContent, __assign104({ resources, groupIndex }, rowContentProps), expandedResources.map(function(expandedResource, expandedResourceIndex) {
        return React183.createElement("div", { key: expandedResourceIndex, className: "k-scheduler-cell k-heading-cell" }, expandedResource.text);
      }))
    ) : React183.createElement(RowContent, __assign104({ resources, groupIndex }, rowContentProps), expandedResources.map(function(expandedResource, expandedResourceIndex) {
      return React183.createElement("div", { key: expandedResourceIndex, className: "k-scheduler-cell k-heading-cell" }, expandedResource.text);
    })),
    renderResourcesRecursively2({
      resources,
      children: children2,
      nested,
      rowContent,
      childRowContent,
      groupIndex: groupIndex + 1
    })
  );
};
var renderResources2 = function(args) {
  var resources = args.resources, childRowContent = args.childRowContent, children2 = args.children, rowContentProps = args.rowContentProps;
  var deepestResources = expandResources(resources, resources.length - 1);
  var ChildRowContent = childRowContent;
  var hasGroups = resources.length > 0;
  return React183.createElement(
    "div",
    { className: "k-scheduler-row" },
    React183.createElement(ChildRowContent, __assign104({ resources }, rowContentProps), (deepestResources.length ? deepestResources : EMPTY_RESOURCE).map(function(resource, groupIndex) {
      return React183.createElement(
        "div",
        { key: groupIndex, className: "k-scheduler-cell k-group-cell" },
        React183.createElement(SchedulerResourceIteratorContext.Provider, { value: { resource, groupIndex: hasGroups ? groupIndex : 0 } }, children2)
      );
    }))
  );
};
HorizontalResourceIterator.displayName = "KendoReactSchedulerHorizontalResourceIterator";
var DefaultRowContent = function(props) {
  return props.children;
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/time/TimelineViewRowContent.js
var React184 = __toESM(require_react());
var EMPTY_CELL = React184.createElement("div", { className: "k-scheduler-cell k-side-cell" });
var TimelineViewRowContent = function(props) {
  return React184.createElement(
    React184.Fragment,
    null,
    React184.createElement("div", { className: "k-sticky-cell" }, EMPTY_CELL),
    props.children
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/time/TimelineViewAllEventsRowContent.js
var React185 = __toESM(require_react());
var TimelineViewAllEventsRowContent = function(props) {
  var localization = useLocalization();
  return React185.createElement(
    React185.Fragment,
    null,
    React185.createElement(
      "div",
      { className: "k-sticky-cell" },
      React185.createElement("div", { className: "k-scheduler-cell k-heading-cell k-side-cell k-scheduler-times-all-day", "data-range-index": 0 }, localization.toLanguageString(allEvents, messages2[allEvents]))
    ),
    props.children
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/SchedulerItem.js
var React186 = __toESM(require_react());
var __assign105 = function() {
  __assign105 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign105.apply(this, arguments);
};
var SchedulerItem = React186.forwardRef(function(props, ref) {
  var onFocus = props.onFocus, onBlur = props.onBlur, onMouseDown = props.onMouseDown, onClick = props.onClick, onMouseUp = props.onMouseUp, onMouseOut = props.onMouseOut, onMouseOver = props.onMouseOver, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onDoubleClick = props.onDoubleClick, onRemoveClick = props.onRemoveClick, onKeyUp = props.onKeyUp, onKeyDown = props.onKeyDown, onKeyPress = props.onKeyPress, onPress = props.onPress, onDrag = props.onDrag, onRelease = props.onRelease, onResizePress = props.onResizePress, onResizeEndDrag = props.onResizeEndDrag, onResizeRelease = props.onResizeRelease, onResizeStartDrag = props.onResizeStartDrag;
  var _a14 = useSchedulerItem(props, ref), item = _a14.item, element6 = _a14.element;
  var dir = useDir(element6);
  var resizeEast = React186.useRef(null);
  var resizeWest = React186.useRef(null);
  var resizeNorth = React186.useRef(null);
  var resizeSouth = React186.useRef(null);
  var editable = useEditable(props.editable);
  var intl = useInternationalization();
  var localization = useLocalization();
  var deleteMessage = localization.toLanguageString(deleteTitle, messages2[deleteTitle]);
  var resource = props.group.resources.find(function(r) {
    return Boolean(r.colorField && r[r.colorField] !== "" && r[r.colorField] !== void 0);
  });
  var color = resource && resource.colorField && resource[resource.colorField];
  var tabIndex = props.tabIndex !== void 0 ? props.tabIndex === null ? void 0 : props.tabIndex : props.selected ? 0 : -1;
  var className = React186.useMemo(function() {
    return classNames({
      "k-event": !props.resizeHint,
      "k-selected": props.selected && editable.select,
      "k-event-drag-hint": props.dragHint,
      "k-scheduler-marquee": props.resizeHint,
      "k-marquee": props.resizeHint,
      "k-first": props.resizeHint && !props.tail,
      "k-last": props.resizeHint && !props.head
    }, props.className);
  }, [
    props.resizeHint,
    props.selected,
    props.dragHint,
    props.tail,
    props.head,
    props.className,
    editable.select
  ]);
  var eventLabel = React186.useMemo(function() {
    return "".concat(formatEventTime(intl, props.zonedStart, props.zonedEnd, props.isAllDay), ", ").concat(props.title);
  }, [intl, props.isAllDay, props.title, props.zonedEnd, props.zonedStart]);
  var style = React186.useMemo(function() {
    return __assign105({ cursor: "pointer", userSelect: "none", borderColor: !props.resizeHint ? color : void 0, backgroundColor: !props.resizeHint ? color : void 0, touchAction: "none" }, props.style);
  }, [color, props.style, props.resizeHint]);
  var handleFocus = React186.useCallback(function(syntheticEvent) {
    if (!onFocus) {
      return;
    }
    onFocus.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onFocus, item]);
  var handleBlur = React186.useCallback(function(syntheticEvent) {
    if (!onBlur) {
      return;
    }
    onBlur.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onBlur, item]);
  var handleMouseDown = React186.useCallback(function(syntheticEvent) {
    if (!onMouseDown) {
      return;
    }
    onMouseDown.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseDown, item]);
  var handleClick = React186.useCallback(function(syntheticEvent) {
    if (!onClick) {
      return;
    }
    onClick.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onClick, item]);
  var handleMouseUp = React186.useCallback(function(syntheticEvent) {
    if (!onMouseUp) {
      return;
    }
    onMouseUp.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseUp, item]);
  var handleMouseOver = React186.useCallback(function(syntheticEvent) {
    if (!onMouseOver) {
      return;
    }
    onMouseOver.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseOver, item]);
  var handleMouseOut = React186.useCallback(function(syntheticEvent) {
    if (!onMouseOut) {
      return;
    }
    onMouseOut.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseOut, item]);
  var handleMouseEnter = React186.useCallback(function(syntheticEvent) {
    if (!onMouseEnter) {
      return;
    }
    onMouseEnter.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseEnter, item]);
  var handleMouseLeave = React186.useCallback(function(syntheticEvent) {
    if (!onMouseLeave) {
      return;
    }
    onMouseLeave.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onMouseLeave, item]);
  var handleDoubleClick = React186.useCallback(function(syntheticEvent) {
    if (!onDoubleClick) {
      return;
    }
    onDoubleClick.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onDoubleClick, item]);
  var handleRemoveClick = React186.useCallback(function(syntheticEvent) {
    if (!onRemoveClick) {
      return;
    }
    onRemoveClick.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onRemoveClick, item]);
  var handleKeyDown = React186.useCallback(function(syntheticEvent) {
    if (!onKeyDown) {
      return;
    }
    onKeyDown.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onKeyDown, item]);
  var handleKeyPress = React186.useCallback(function(syntheticEvent) {
    if (!onKeyPress) {
      return;
    }
    onKeyPress.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onKeyPress, item]);
  var handleKeyUp = React186.useCallback(function(syntheticEvent) {
    if (!onKeyUp) {
      return;
    }
    onKeyUp.call(void 0, {
      syntheticEvent,
      target: item.current
    });
  }, [onKeyUp, item]);
  var handlePress = React186.useCallback(function(dragEvent) {
    if (!onPress) {
      return;
    }
    onPress.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onPress, item]);
  var handleDrag = React186.useCallback(function(dragEvent) {
    if (!onDrag) {
      return;
    }
    onDrag.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onDrag, item]);
  var handleRelease = React186.useCallback(function(dragEvent) {
    if (!onRelease) {
      return;
    }
    onRelease.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onRelease, item]);
  var handleResizePress = React186.useCallback(function(dragEvent) {
    if (!onResizePress) {
      return;
    }
    onResizePress.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onResizePress, item]);
  var handleResizeStartDrag = React186.useCallback(function(dragEvent) {
    if (!onResizeStartDrag) {
      return;
    }
    onResizeStartDrag.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onResizeStartDrag, item]);
  var handleResizeEndDrag = React186.useCallback(function(dragEvent) {
    if (!onResizeEndDrag) {
      return;
    }
    onResizeEndDrag.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onResizeEndDrag, item]);
  var handleResizeRelease = React186.useCallback(function(dragEvent) {
    if (!onResizeRelease) {
      return;
    }
    onResizeRelease.call(void 0, {
      dragEvent,
      target: item.current
    });
  }, [onResizeRelease, item]);
  useDraggable(element6, {
    onPress: handlePress,
    onDrag: handleDrag,
    onRelease: handleRelease
  });
  useDraggable(resizeEast, {
    onPress: handleResizePress,
    onDrag: handleResizeEndDrag,
    onRelease: handleResizeRelease
  });
  useDraggable(resizeWest, {
    onPress: handleResizePress,
    onDrag: handleResizeStartDrag,
    onRelease: handleResizeRelease
  });
  useDraggable(resizeNorth, {
    onPress: handleResizePress,
    onDrag: handleResizeStartDrag,
    onRelease: handleResizeRelease
  });
  useDraggable(resizeSouth, {
    onPress: handleResizePress,
    onDrag: handleResizeEndDrag,
    onRelease: handleResizeRelease
  });
  return React186.createElement(
    "div",
    {
      ref: element6,
      id: props.id,
      style,
      tabIndex,
      className,
      // Aria
      role: "button",
      "aria-label": eventLabel,
      "aria-selected": props.selected || void 0,
      // Focus
      onFocus: handleFocus,
      onBlur: handleBlur,
      // Mouse
      onMouseUp: handleMouseUp,
      onMouseDown: handleMouseDown,
      onClick: handleClick,
      onMouseOver: handleMouseOver,
      onMouseOut: handleMouseOut,
      onMouseEnter: handleMouseEnter,
      onMouseLeave: handleMouseLeave,
      onDoubleClick: handleDoubleClick,
      // Keyboard
      onKeyDown: handleKeyDown,
      onKeyPress: handleKeyPress,
      onKeyUp: handleKeyUp,
      "data-group-index": props.group.index,
      "data-range-index": props.range.index
    },
    props.children,
    !props.resizeHint && React186.createElement(
      "span",
      { className: "k-event-actions" },
      editable.remove && React186.createElement(
        "a",
        { tabIndex: -1, "aria-hidden": "true", className: "k-link k-event-delete", title: deleteMessage, "aria-label": deleteMessage, onClick: handleRemoveClick },
        React186.createElement(IconWrap, { name: "x", icon: xIcon })
      ),
      props.head && React186.createElement(IconWrap, { name: dir === "rtl" ? "caret-alt-left" : "caret-alt-right", icon: dir === "rtl" ? caretAltLeftIcon : caretAltRightIcon })
    ),
    editable.resize && props.vertical && React186.createElement(
      React186.Fragment,
      null,
      React186.createElement("span", { className: "k-resize-handle k-resize-n", ref: resizeNorth }),
      React186.createElement("span", { className: "k-resize-handle k-resize-s", ref: resizeSouth })
    ),
    editable.resize && !props.vertical && React186.createElement(
      React186.Fragment,
      null,
      React186.createElement("span", { className: "k-resize-handle k-resize-w", ref: resizeWest }),
      React186.createElement("span", { className: "k-resize-handle k-resize-e", ref: resizeEast })
    ),
    props.resizeHint && React186.createElement(
      React186.Fragment,
      null,
      React186.createElement("div", { className: "k-marquee-color", style: { borderColor: color, backgroundColor: color } }),
      React186.createElement(
        "div",
        { className: "k-marquee-text" },
        !props.tail && React186.createElement("div", { className: "k-label-top" }, intl.formatDate(props.zonedStart, props.format)),
        !props.head && React186.createElement("div", { className: "k-label-bottom" }, intl.formatDate(props.zonedEnd, props.format))
      )
    )
  );
});
SchedulerItem.displayName = "KendoReactSchedulerItem";

// node_modules/@progress/kendo-react-scheduler/dist/es/items/SchedulerItemContent.js
var React187 = __toESM(require_react());
var __assign106 = function() {
  __assign106 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign106.apply(this, arguments);
};
var SchedulerItemContent = React187.forwardRef(function(props, ref) {
  var className = React187.useMemo(function() {
    return classNames("k-event-template", props.className);
  }, [props.className]);
  return React187.createElement("div", __assign106({ ref }, props, { className }));
});

// node_modules/@progress/kendo-react-scheduler/dist/es/items/SchedulerViewItem.js
var React188 = __toESM(require_react());
var __assign107 = function() {
  __assign107 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign107.apply(this, arguments);
};
var __rest46 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ITEMS_SPACING = 1;
var SchedulerViewItem = React188.forwardRef(function(props, ref) {
  var itemProp = props.item, _ref = props.n, itemRef = props.itemRef, itemProps = __rest46(props, ["item", "_ref", "itemRef"]);
  var timeout2 = React188.useRef();
  var item = React188.useRef(null);
  var viewItem = React188.useRef(null);
  var schedulerRect = React188.useRef(null);
  var editable = useEditable(props.editable);
  React188.useImperativeHandle(viewItem, function() {
    return { props, element: item.current && item.current.element };
  });
  React188.useImperativeHandle(ref, function() {
    return viewItem.current;
  });
  React188.useImperativeHandle(_ref, function() {
    return item.current;
  });
  React188.useImperativeHandle(itemRef, function() {
    return item.current;
  });
  var Item = itemProp || defaultProps29.item;
  var intl = useInternationalization();
  var viewItems = useSchedulerViewItemsContext()[0];
  var viewSlots = useSchedulerViewSlotsContext()[0];
  var scheduler2 = useSchedulerElementContext();
  var _a14 = React188.useState(true), display = _a14[0], setDisplay = _a14[1];
  var _b3 = React188.useState(false), visible = _b3[0], setVisible = _b3[1];
  var _c2 = React188.useState(0), maxSiblingsPerSlot = _c2[0], setMaxSiblingsPerSlot = _c2[1];
  var dir = useDir(scheduler2);
  var itemTime = React188.useMemo(function() {
    return props.isAllDay ? intl.toString(props.zonedStart, "t") : intl.format("{0:t} - {1:t}", props.zonedStart, props.zonedEnd);
  }, [intl, props.isAllDay, props.zonedEnd, props.zonedStart]);
  var itemTitle = React188.useMemo(function() {
    return "(".concat(itemTime, "): ").concat(props.title);
  }, [itemTime, props.title]);
  var calculateMostSiblings = function(slots, items) {
    var most = 1;
    slots.forEach(function(slot) {
      var itemsInSlot = items.filter(function(i) {
        return inSlot2(slot.current.props, i.props);
      });
      if (itemsInSlot.length > most) {
        most = itemsInSlot.length;
      }
    });
    return most;
  };
  var getSiblingsInAllSlots = function(slots, items) {
    var siblings = slots.map(function(slot) {
      return items.filter(function(i) {
        return inSlot2(slot.current.props, i.props);
      });
    });
    return siblings;
  };
  var inSlot2 = function(slot, current) {
    return intersects(slot.start, slot.end, current.start, current.end) && slot.group.index === current.group.index && slot.range.index === current.range.index && (props.ignoreIsAllDay || slot.isAllDay === current.isAllDay);
  };
  var align3 = function() {
    var slots = (viewSlots || []).filter(function(slot) {
      return slot.current && inSlot2(slot.current.props, props);
    });
    if (slots.length === 0) {
      setDisplay(false);
      return;
    }
    var firstSlot = first(slots);
    if (!firstSlot.current || !item.current) {
      return;
    }
    var rect = getRect(firstSlot.current.element);
    setRect(item.current.element, rect);
  };
  var position4 = function() {
    var element6 = item.current && item.current.element;
    if (!element6) {
      return;
    }
    var slots = (viewSlots || []).filter(function(slot) {
      return slot.current && inSlot2(slot.current.props, props);
    });
    var items = [];
    var dragItems = [];
    var resizeItems = [];
    (viewItems || []).forEach(function(i) {
      if (!i.current) {
        return;
      }
      if (i.current.props.dragHint) {
        dragItems.push(i.current);
      } else if (i.current.props.resizeHint) {
        resizeItems.push(i.current);
      } else {
        items.push(i.current);
      }
    });
    var order = props.dragHint || props.resizeHint ? calculateOrder(item.current, props.dragHint ? dragItems : resizeItems, slots, props.ignoreIsAllDay) : props.order || 0;
    var mostSiblingsInSlot = props.dragHint || props.resizeHint ? calculateMostSiblings(slots, props.dragHint ? dragItems : resizeItems) : calculateMostSiblings(slots, items);
    var siblingsPerSlot = getSiblingsInAllSlots(slots, items);
    var topOffset = 0;
    var rect = getRect(element6);
    siblingsPerSlot.forEach(function(slot) {
      var currentOffset = 0;
      slot.forEach(function(current) {
        if (intersects(current.props.start, current.props.end, props.start, props.end) && !(props.dragHint || props.resizeHint) && current.props.Na && current.props.Na > mostSiblingsInSlot && current.element !== element6) {
          mostSiblingsInSlot = current.props.Na;
        }
        var currentRect = getRect(current.element);
        if (current.props.order !== null && current.props.order < order) {
          currentOffset = currentRect.top + currentRect.height - rect.top - BORDER_WIDTH * order + ITEMS_SPACING;
        }
      });
      if (currentOffset > topOffset) {
        topOffset = currentOffset;
      }
    });
    if (slots.length === 0) {
      setDisplay(false);
      return;
    }
    var OFFSET = editable.add ? 20 : 0;
    rect.width = props.vertical ? rect.width / mostSiblingsInSlot - BORDER_WIDTH - OFFSET / mostSiblingsInSlot : rect.width * slots.length - BORDER_WIDTH;
    rect.height = props.vertical ? rect.height * slots.length - BORDER_WIDTH : (props.resizeHint || props.dragHint) && mostSiblingsInSlot <= 1 ? rect.height : props.style && props.style.height ? props.style.height : 25;
    rect.left = props.vertical ? rect.left + order * rect.width + BORDER_WIDTH * order : rect.left;
    rect.top = props.vertical ? rect.top : rect.top + topOffset + BORDER_WIDTH * order;
    setMaxSiblingsPerSlot(mostSiblingsInSlot);
    setRect(element6, rect);
    setVisible(true);
    setDisplay(true);
  };
  var handleResize = React188.useCallback(function(entries) {
    var entry = entries && entries[0];
    var rect = schedulerRect.current;
    if (timeout2.current !== void 0) {
      window.cancelAnimationFrame(timeout2.current);
    }
    if (rect && entry && (rect.width !== entry.contentRect.width || rect.height !== entry.contentRect.height)) {
      timeout2.current = window.requestAnimationFrame(function() {
        align3();
        position4();
      });
    }
    schedulerRect.current = { width: entry.contentRect.width, height: entry.contentRect.height };
  }, [align3, position4]);
  React188.useEffect(align3);
  React188.useEffect(position4);
  var schedulerElement = item.current && item.current.element ? item.current.element.closest(".k-scheduler-layout") : null;
  useRowSync({
    element: schedulerElement,
    selector: ".k-resource-row",
    horizontalAttribute: "data-depth-index",
    verticalAttribute: "data-resource-index",
    applyTo: ".k-resource-cell",
    syncHeight: props.isLast
  });
  React188.useEffect(function() {
    if (!scheduler2.current) {
      return;
    }
    var resizeObserver = window.ResizeObserver;
    var observer = resizeObserver && new resizeObserver(handleResize);
    if (observer) {
      observer.observe(scheduler2.current);
    }
    return function() {
      if (observer) {
        observer.disconnect();
      }
    };
  }, [handleResize, scheduler2]);
  return React188.createElement(
    Item,
    __assign107({}, itemProps, { n: item, Na: maxSiblingsPerSlot, itemRef: item, style: __assign107({ visibility: visible ? void 0 : "hidden", display: display ? void 0 : "none" }, props.style) }),
    !props.resizeHint && React188.createElement(
      "span",
      { className: "k-event-actions" },
      props.tail && React188.createElement(IconWrap, { name: dir === "rtl" ? "caret-alt-right" : "caret-alt-left", icon: dir === "rtl" ? caretAltRightIcon : caretAltLeftIcon }),
      props.isRecurring && !props.isException && React188.createElement(IconWrap, { name: "arrow-rotate-cw", icon: arrowRotateCwIcon }),
      !props.isRecurring && props.isException && React188.createElement(IconWrap, { name: "arrows-no-repeat", icon: arrowsNoRepeatIcon })
    ),
    !props.resizeHint && React188.createElement(
      "div",
      { title: itemTitle },
      !props.isAllDay && React188.createElement(SchedulerItemContent, { className: "k-event-template k-event-time " }, itemTitle),
      React188.createElement(SchedulerItemContent, { className: "k-event-template" }, props.title)
    )
  );
});
var defaultProps29 = {
  item: SchedulerItem
};
SchedulerViewItem.defaultProps = defaultProps29;
SchedulerViewItem.displayName = "KendoReactSchedulerViewItem";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/common/SchedulerDrag.js
var React189 = __toESM(require_react());
var __assign108 = function() {
  __assign108 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign108.apply(this, arguments);
};
var SchedulerDrag = function(props) {
  var ranges = useSchedulerViewRangesContext();
  var timezone = useSchedulerPropsContext().timezone;
  var groups = useSchedulerGroupsContext();
  var fields = useSchedulerFieldsContext();
  var dateRange = useSchedulerDateRangeContext();
  var viewSlots = useSchedulerViewSlotsContext()[0];
  var ViewItem = props.viewItem || defaultProps30.viewItem;
  var occurrences2 = React189.useMemo(function() {
    return toOccurrences([props.dataItem], { dateRange, fields, timezone });
  }, [props.dataItem, dateRange, fields, timezone]);
  var items = React189.useMemo(function() {
    return toItems(occurrences2, { timezone }, { groups, ranges });
  }, [occurrences2, timezone, groups, ranges]);
  var slots = (viewSlots || []).map(function(s) {
    return s.current.props;
  });
  mapItemsToSlots(items, slots);
  return React189.createElement(React189.Fragment, null, items.map(function(item, idx) {
    return React189.createElement(ViewItem, __assign108({ key: idx }, item, { item: props.item, dragHint: true, vertical: props.vertical, ignoreIsAllDay: props.ignoreIsAllDay }));
  }));
};
var defaultProps30 = {
  viewItem: SchedulerViewItem,
  item: SchedulerItem
};
SchedulerDrag.defaultProps = defaultProps30;
SchedulerDrag.displayName = "KendoReactSchedulerDrag";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/common/SchedulerResize.js
var React190 = __toESM(require_react());
var __assign109 = function() {
  __assign109 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign109.apply(this, arguments);
};
var SchedulerResize = function(props) {
  var ranges = useSchedulerViewRangesContext();
  var timezone = useSchedulerPropsContext().timezone;
  var groups = useSchedulerGroupsContext();
  var fields = useSchedulerFieldsContext();
  var dateRange = useSchedulerDateRangeContext();
  var viewSlots = useSchedulerViewSlotsContext()[0];
  var ViewItem = props.viewItem || defaultProps31.viewItem;
  var occurrences2 = React190.useMemo(function() {
    return toOccurrences([props.dataItem], { dateRange, fields, timezone });
  }, [props.dataItem, dateRange.start.getTime(), dateRange.end.getTime(), fields, timezone]);
  var items = React190.useMemo(function() {
    return toItems(occurrences2, { timezone }, { groups, ranges });
  }, [occurrences2, timezone, groups, ranges]);
  var slots = (viewSlots || []).map(function(s) {
    return s.current.props;
  });
  mapItemsToSlots(items, slots);
  return React190.createElement(React190.Fragment, null, items.map(function(item, idx) {
    return React190.createElement(ViewItem, __assign109({ key: idx }, item, { format: props.format, item: props.item, resizeHint: true, vertical: props.vertical, ignoreIsAllDay: props.ignoreIsAllDay }));
  }));
};
var defaultProps31 = {
  viewItem: SchedulerViewItem,
  item: SchedulerItem
};
SchedulerResize.defaultProps = defaultProps31;
SchedulerResize.displayName = "KendoReactSchedulerResize";

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-form-item.js
var FORM_ITEM_ACTION;
(function(FORM_ITEM_ACTION2) {
  FORM_ITEM_ACTION2["set"] = "FORM_ITEM_SET";
  FORM_ITEM_ACTION2["setMaster"] = "FORM_ITEM_SET_MASTER";
  FORM_ITEM_ACTION2["reset"] = "FORM_ITEM_RESET";
  FORM_ITEM_ACTION2["complete"] = "FORM_ITEM_COMPLETE";
})(FORM_ITEM_ACTION || (FORM_ITEM_ACTION = {}));
var useFormItem = function(config, state) {
  var _a14 = useControlledState.apply(void 0, state), formItem = _a14[0], setFormItem = _a14[1];
  var fields = useSchedulerFieldsContext();
  var data2 = useSchedulerDataContext()[0];
  var handleFormItemAction = function(action, event2) {
    var newFormItem;
    switch (action.type) {
      case FORM_ITEM_ACTION.set:
        newFormItem = action.payload;
        break;
      case FORM_ITEM_ACTION.reset:
        newFormItem = null;
        break;
      case FORM_ITEM_ACTION.setMaster:
        newFormItem = clone(findMaster(action.payload, fields, data2));
        break;
      case FORM_ITEM_ACTION.complete:
        if (config.onDataAction && formItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: config.series,
            dataItem: action.payload
          });
          newFormItem = null;
        }
        break;
      default:
        newFormItem = formItem;
        break;
    }
    setFormItem(newFormItem, event2);
  };
  return [formItem, setFormItem, handleFormItemAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-show-occurrence-dialog.js
var SHOW_OCCURRENCE_DIALOG_ACTION;
(function(SHOW_OCCURRENCE_DIALOG_ACTION2) {
  SHOW_OCCURRENCE_DIALOG_ACTION2["set"] = "SHOW_OCCURRENCE_DIALOG_SET";
  SHOW_OCCURRENCE_DIALOG_ACTION2["open"] = "SHOW_OCCURRENCE_DIALOG_OPEN";
  SHOW_OCCURRENCE_DIALOG_ACTION2["close"] = "SHOW_OCCURRENCE_DIALOG_CLOSE";
  SHOW_OCCURRENCE_DIALOG_ACTION2["reset"] = "SHOW_OCCURRENCE_DIALOG_RESET";
  SHOW_OCCURRENCE_DIALOG_ACTION2["toggle"] = "SHOW_OCCURRENCE_DIALOG_TOGGLE";
})(SHOW_OCCURRENCE_DIALOG_ACTION || (SHOW_OCCURRENCE_DIALOG_ACTION = {}));
var showOccurrenceDialogReducer = function(state, action) {
  switch (action.type) {
    case SHOW_OCCURRENCE_DIALOG_ACTION.reset:
      return false;
    case SHOW_OCCURRENCE_DIALOG_ACTION.set:
      return action.payload;
    case SHOW_OCCURRENCE_DIALOG_ACTION.open:
      return true;
    case SHOW_OCCURRENCE_DIALOG_ACTION.close:
      return false;
    case SHOW_OCCURRENCE_DIALOG_ACTION.toggle:
      return !state;
    default:
      return state;
  }
};
var useShowOccurrenceDialog = function(defaultProp, prop2, callback) {
  var _a14 = useControlledState(defaultProp, prop2, callback), showOccurrenceDialog = _a14[0], setShowOccurrenceDialog = _a14[1];
  var handleShowOccurrenceDialogAction = function(action) {
    var newShowOccurrenceDialog = showOccurrenceDialogReducer(showOccurrenceDialog, action);
    setShowOccurrenceDialog(newShowOccurrenceDialog);
  };
  return [showOccurrenceDialog, setShowOccurrenceDialog, handleShowOccurrenceDialogAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-remove-item.js
var REMOVE_ITEM_ACTION;
(function(REMOVE_ITEM_ACTION2) {
  REMOVE_ITEM_ACTION2["set"] = "REMOVE_ITEM_SET";
  REMOVE_ITEM_ACTION2["reset"] = "REMOVE_ITEM_RESET";
  REMOVE_ITEM_ACTION2["complete"] = "REMOVE_ITEM_COMPLETE";
})(REMOVE_ITEM_ACTION || (REMOVE_ITEM_ACTION = {}));
var useRemoveItem = function(config, state) {
  var _a14 = useControlledState.apply(void 0, state), removeItem2 = _a14[0], setRemoveItem = _a14[1];
  var handleRemoveItemAction = function(action) {
    var newRemoveItem;
    switch (action.type) {
      case REMOVE_ITEM_ACTION.set:
        newRemoveItem = action.payload;
        break;
      case REMOVE_ITEM_ACTION.reset:
        newRemoveItem = null;
        break;
      case REMOVE_ITEM_ACTION.complete:
        if (config.onDataAction && removeItem2) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.remove,
            series: config.series,
            dataItem: removeItem2
          });
        }
        newRemoveItem = null;
        break;
      default:
        newRemoveItem = removeItem2;
        break;
    }
    setRemoveItem(newRemoveItem);
  };
  return [removeItem2, setRemoveItem, handleRemoveItemAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-show-remove-item-dialog.js
var SHOW_REMOVE_DIALOG_ACTION;
(function(SHOW_REMOVE_DIALOG_ACTION2) {
  SHOW_REMOVE_DIALOG_ACTION2["set"] = "SHOW_REMOVE_DIALOG_SET";
  SHOW_REMOVE_DIALOG_ACTION2["open"] = "SHOW_REMOVE_DIALOG_OPEN";
  SHOW_REMOVE_DIALOG_ACTION2["close"] = "SHOW_REMOVE_DIALOG_CLOSE";
  SHOW_REMOVE_DIALOG_ACTION2["reset"] = "SHOW_REMOVE_DIALOG_RESET";
  SHOW_REMOVE_DIALOG_ACTION2["toggle"] = "SHOW_REMOVE_DIALOG_TOGGLE";
})(SHOW_REMOVE_DIALOG_ACTION || (SHOW_REMOVE_DIALOG_ACTION = {}));
var showRemoveDialogReducer = function(state, action) {
  switch (action.type) {
    case SHOW_REMOVE_DIALOG_ACTION.reset:
      return false;
    case SHOW_REMOVE_DIALOG_ACTION.set:
      return action.payload;
    case SHOW_REMOVE_DIALOG_ACTION.open:
      return true;
    case SHOW_REMOVE_DIALOG_ACTION.close:
      return false;
    case SHOW_REMOVE_DIALOG_ACTION.toggle:
      return !state;
    default:
      return state;
  }
};
var useShowRemoveDialog = function(defaultProp, prop2, callback) {
  var _a14 = useControlledState(defaultProp, prop2, callback), showRemoveDialog = _a14[0], setShowRemoveDialog = _a14[1];
  var handleShowRemoveDialogAction = function(action) {
    var newShowRemoveDialog = showRemoveDialogReducer(showRemoveDialog, action);
    setShowRemoveDialog(newShowRemoveDialog);
  };
  return [showRemoveDialog, setShowRemoveDialog, handleShowRemoveDialogAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-drag-item.js
var React191 = __toESM(require_react());
var __spreadArray19 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var DRAG_ITEM_ACTION;
(function(DRAG_ITEM_ACTION2) {
  DRAG_ITEM_ACTION2["set"] = "DRAG_ITEM_SET";
  DRAG_ITEM_ACTION2["start"] = "DRAG_ITEM_START";
  DRAG_ITEM_ACTION2["drag"] = "DRAG_ITEM_DRAG";
  DRAG_ITEM_ACTION2["complete"] = "DRAG_ITEM_COMPLETE";
  DRAG_ITEM_ACTION2["completeOccurrence"] = "DRAG_ITEM_COMPLETE_OCCURRENCE";
  DRAG_ITEM_ACTION2["completeSeries"] = "DRAG_ITEM_COMPLETE_SERIES";
  DRAG_ITEM_ACTION2["reset"] = "DRAG_ITEM_RESET";
  DRAG_ITEM_ACTION2["dragSelected"] = "DRAG_ITEM_DRAG_SELECTED";
})(DRAG_ITEM_ACTION || (DRAG_ITEM_ACTION = {}));
;
var useDragItem = function(config, state) {
  var offset4 = React191.useRef(0);
  var initialXRef = React191.useRef(0);
  var initialYRef = React191.useRef(0);
  var oldSlot = React191.useRef(null);
  var _a14 = useControlledState.apply(void 0, state), dragItem = _a14[0], setDragItem = _a14[1];
  var selectedItems = useSchedulerViewSelectedItemsContext()[0];
  var fields = useSchedulerFieldsContext();
  var groups = useSchedulerGroupsContext();
  var handleDragItemAction = function(action) {
    switch (action.type) {
      case DRAG_ITEM_ACTION.set: {
        setDragItem(action.payload);
        break;
      }
      case DRAG_ITEM_ACTION.reset: {
        setDragItem(null);
        break;
      }
      case DRAG_ITEM_ACTION.dragSelected: {
        if (Math.abs(initialXRef.current - action.payload.x) < 10 && Math.abs(initialYRef.current - action.payload.y) < 10) {
          return;
        }
        var slot = slotDive(action.payload.x, action.payload.y, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var dataItem = clone(config.dataItem);
        var slotStart = slot.getAttribute("data-slot-start");
        var slotIsAllDay = slot.getAttribute("data-slot-allday") === "true";
        if (!config.ignoreIsAllDay && slotIsAllDay !== config.isAllDay) {
          return;
        }
        var itemStart = new Date(getField(dataItem, fields.start));
        var distance_1 = Number(slotStart) - itemStart.getTime();
        var newDragItems = selectedItems.map(function(si) {
          if (!si.current) {
            return null;
          }
          var selectedDataItem = clone(si.current.props.dataItem);
          var selectedStart = new Date(si.current.props.start.getTime() + distance_1);
          var selectedEnd = new Date(si.current.props.end.getTime() + distance_1);
          setField(selectedDataItem, fields.start, selectedStart);
          setField(selectedDataItem, fields.end, selectedEnd);
          return selectedDataItem;
        }).filter(Boolean);
        oldSlot.current = slot;
        setDragItem(__spreadArray19([], newDragItems, true));
        break;
      }
      case DRAG_ITEM_ACTION.start: {
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        initialXRef.current = clientX;
        initialYRef.current = clientY;
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        var dataItem = clone(config.dataItem);
        var slotStart = slot.getAttribute("data-slot-start");
        var itemStart = getField(dataItem, fields.start);
        if (slotStart === null) {
          return;
        }
        offset4.current = Number(slotStart) - new Date(itemStart).getTime();
        break;
      }
      case DRAG_ITEM_ACTION.drag: {
        if (Math.abs(initialXRef.current - action.payload.x) < 10 && Math.abs(initialYRef.current - action.payload.y) < 10) {
          return;
        }
        var slot = slotDive(action.payload.x, action.payload.y, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var dataItem_1 = clone(config.dataItem);
        var slotStart = slot.getAttribute("data-slot-start");
        var slotGroupIndex_1 = slot.getAttribute("data-slot-group");
        var slotIsAllDay = slot.getAttribute("data-slot-allday") === "true";
        if (!config.ignoreIsAllDay && slotIsAllDay !== config.isAllDay) {
          return;
        }
        var itemStart = new Date(getField(dataItem_1, fields.start));
        var itemEnd = new Date(getField(dataItem_1, fields.end));
        var duration2 = itemEnd.getTime() - itemStart.getTime();
        var start2 = new Date(Number(slotStart) - Number(offset4.current));
        var end2 = new Date(Number(slotStart) - Number(offset4.current) + duration2);
        var group2 = groups.find(function(g) {
          return g.index === Number(slotGroupIndex_1);
        });
        setField(dataItem_1, fields.start, start2);
        setField(dataItem_1, fields.end, end2);
        if (group2 && groups.length > 1) {
          group2.resources.forEach(function(resource) {
            if (!resource.multiple) {
              setField(dataItem_1, resource.field, resource[resource.valueField]);
            }
          });
        }
        oldSlot.current = slot;
        if (dataItem_1) {
          setDragItem(dataItem_1);
        }
        break;
      }
      case DRAG_ITEM_ACTION.complete: {
        setDragItem(null);
        if (config.onDataAction && dragItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: false,
            dataItem: dragItem
          });
        }
        break;
      }
      case DRAG_ITEM_ACTION.completeOccurrence: {
        var newDataItem = Array.isArray(dragItem) ? dragItem.slice() : clone(dragItem);
        setDragItem(null);
        if (config.onDataAction && dragItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: false,
            dataItem: newDataItem
          });
        }
        break;
      }
      case DRAG_ITEM_ACTION.completeSeries: {
        var newDataItems = void 0;
        if (Array.isArray(dragItem)) {
          newDataItems = dragItem.map(function(di) {
            var updated2 = clone(di);
            setField(updated2, fields.start, getField(di, fields.start));
            setField(updated2, fields.end, getField(di, fields.end));
            return updated2;
          });
        } else {
          var updated = clone(dragItem);
          setField(updated, fields.start, getField(dragItem, fields.start));
          setField(updated, fields.end, getField(dragItem, fields.end));
          newDataItems = updated;
        }
        setDragItem(null);
        if (config.onDataAction && newDataItems) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: true,
            dataItem: newDataItems
          });
        }
        break;
      }
      default:
        setDragItem(dragItem);
        break;
    }
  };
  return [dragItem, setDragItem, handleDragItemAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-resize-item.js
var React192 = __toESM(require_react());
var __spreadArray20 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var RESIZE_ITEM_ACTION;
(function(RESIZE_ITEM_ACTION2) {
  RESIZE_ITEM_ACTION2["set"] = "RESIZE_ITEM_SET";
  RESIZE_ITEM_ACTION2["start"] = "RESIZE_ITEM_START";
  RESIZE_ITEM_ACTION2["startDrag"] = "RESIZE_ITEM_START_DRAG";
  RESIZE_ITEM_ACTION2["startDragSelected"] = "RESIZE_ITEM_START_DRAG_SELECTED";
  RESIZE_ITEM_ACTION2["endDrag"] = "RESIZE_ITEM_END_DRAG";
  RESIZE_ITEM_ACTION2["endDragSelected"] = "RESIZE_ITEM_END_DRAG_SELECTED";
  RESIZE_ITEM_ACTION2["complete"] = "RESIZE_ITEM_COMPLETE";
  RESIZE_ITEM_ACTION2["completeOccurrence"] = "RESIZE_ITEM_COMPLETE_OCCURRENCE";
  RESIZE_ITEM_ACTION2["completeSeries"] = "RESIZE_ITEM_COMPLETE_SERIES";
  RESIZE_ITEM_ACTION2["reset"] = "RESIZE_ITEM_RESET";
})(RESIZE_ITEM_ACTION || (RESIZE_ITEM_ACTION = {}));
;
var useResizeItem = function(config, state) {
  var oldSlot = React192.useRef(null);
  var _a14 = useControlledState.apply(void 0, state), resizeItem = _a14[0], setResizeItem = _a14[1];
  var selectedItems = useSchedulerViewSelectedItemsContext()[0];
  var fields = useSchedulerFieldsContext();
  var handleDragItemAction = function(action, event2) {
    var newResizeItem = resizeItem;
    switch (action.type) {
      case RESIZE_ITEM_ACTION.set:
        newResizeItem = action.payload;
        break;
      case RESIZE_ITEM_ACTION.reset:
        newResizeItem = null;
        break;
      case RESIZE_ITEM_ACTION.start: {
        event2.stopPropagation();
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var slotStart = slot.getAttribute("data-slot-start");
        var newStart = new Date(Number(slotStart));
        var dataItem = clone(config.dataItem);
        if (newStart >= getField(dataItem, fields.end)) {
          return;
        }
        setField(dataItem, fields.start, newStart);
        oldSlot.current = slot;
        newResizeItem = dataItem;
        break;
      }
      case RESIZE_ITEM_ACTION.startDragSelected: {
        event2.stopPropagation();
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        var dataItem = clone(config.dataItem);
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var slotStart = slot.getAttribute("data-slot-start");
        var itemStart = new Date(getField(dataItem, fields.start));
        var newStart = new Date(Number(slotStart));
        var distance_1 = newStart.getTime() - itemStart.getTime();
        var unreachable_1 = false;
        var newResizeItems = selectedItems.map(function(si) {
          if (!si.current) {
            return null;
          }
          var selectedDataItem = clone(si.current.props.dataItem);
          var selectedStart = new Date(si.current.props.start.getTime() + distance_1);
          if (selectedStart >= getField(selectedDataItem, fields.end)) {
            unreachable_1 = true;
            return;
          }
          setField(selectedDataItem, fields.start, selectedStart);
          return selectedDataItem;
        }).filter(Boolean);
        if (!unreachable_1) {
          newResizeItem = __spreadArray20([], newResizeItems, true);
        }
        break;
      }
      case RESIZE_ITEM_ACTION.startDrag: {
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var slotStart = slot.getAttribute("data-slot-start");
        var newStart = new Date(Number(slotStart));
        var dataItem = clone(config.dataItem);
        if (newStart >= dataItem.end) {
          return;
        }
        setField(dataItem, fields.start, newStart);
        oldSlot.current = slot;
        newResizeItem = dataItem;
        break;
      }
      case RESIZE_ITEM_ACTION.endDrag: {
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var slotEnd = slot.getAttribute("data-slot-end");
        var newEnd = new Date(Number(slotEnd));
        var dataItem = clone(config.dataItem);
        if (newEnd <= dataItem.start) {
          return;
        }
        setField(dataItem, fields.end, newEnd);
        oldSlot.current = slot;
        newResizeItem = dataItem;
        break;
      }
      case RESIZE_ITEM_ACTION.endDragSelected: {
        event2.stopPropagation();
        var clientX = action.payload.x;
        var clientY = action.payload.y;
        var dataItem = clone(config.dataItem);
        var slot = slotDive(clientX, clientY, 7);
        if (!slot) {
          return;
        }
        if (slot === oldSlot.current) {
          return;
        }
        var slotEnd = slot.getAttribute("data-slot-start");
        var itemEnd = new Date(getField(dataItem, fields.end));
        var newEnd = new Date(Number(slotEnd));
        var distance_2 = newEnd.getTime() - itemEnd.getTime();
        var unreachable_2;
        var newResizeItems = selectedItems.map(function(si) {
          if (!si.current) {
            return null;
          }
          var selectedDataItem = clone(si.current.props.dataItem);
          var selectedEnd = new Date(si.current.props.end.getTime() + distance_2);
          if (selectedEnd <= getField(selectedDataItem, fields.start)) {
            unreachable_2 = true;
            return;
          }
          setField(selectedDataItem, fields.end, selectedEnd);
          return selectedDataItem;
        }).filter(Boolean);
        if (!unreachable_2) {
          newResizeItem = __spreadArray20([], newResizeItems, true);
        }
        break;
      }
      case RESIZE_ITEM_ACTION.complete: {
        newResizeItem = null;
        if (config.onDataAction && resizeItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: false,
            dataItem: resizeItem
          });
        }
        break;
      }
      case RESIZE_ITEM_ACTION.completeOccurrence: {
        newResizeItem = null;
        if (config.onDataAction && resizeItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: false,
            dataItem: resizeItem
          });
        }
        break;
      }
      case RESIZE_ITEM_ACTION.completeSeries: {
        newResizeItem = null;
        var newDataItem = void 0;
        if (Array.isArray(resizeItem)) {
          newDataItem = resizeItem.map(function(item) {
            var newItem2 = clone(item);
            setField(newItem2, fields.start, getField(item, fields.start));
            setField(newItem2, fields.end, getField(item, fields.end));
            return newItem2;
          });
        } else {
          var newItem = clone(resizeItem);
          setField(newItem, fields.start, getField(resizeItem, fields.start));
          setField(newItem, fields.end, getField(resizeItem, fields.end));
          newDataItem = newItem;
        }
        if (config.onDataAction && newDataItem) {
          config.onDataAction.call(void 0, {
            type: DATA_ACTION.update,
            series: true,
            dataItem: newDataItem
          });
        }
        break;
      }
      default:
        newResizeItem = null;
        break;
    }
    setResizeItem(newResizeItem);
  };
  return [resizeItem, setResizeItem, handleDragItemAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/hooks/use-series.js
var SERIES_ACTION;
(function(SERIES_ACTION2) {
  SERIES_ACTION2["reset"] = "SERIES_RESET";
  SERIES_ACTION2["set"] = "SERIES_SET";
  SERIES_ACTION2["toggle"] = "SERIES_TOGGLE";
})(SERIES_ACTION || (SERIES_ACTION = {}));
var seriesReducer = function(state, action) {
  switch (action.type) {
    case SERIES_ACTION.reset:
      return null;
    case SERIES_ACTION.set:
      return action.payload;
    case SERIES_ACTION.toggle:
      return !state;
    default:
      return state;
  }
};
var useSeries = function(defaultProp, prop2, callback) {
  var _a14 = useControlledState(defaultProp, prop2, callback), series = _a14[0], setSeries = _a14[1];
  var handleSeriesAction = function(action) {
    var newSeries = seriesReducer(series, action);
    setSeries(newSeries);
  };
  return [series, setSeries, handleSeriesAction];
};

// node_modules/@progress/kendo-react-scheduler/dist/es/items/SchedulerEditItem.js
var React193 = __toESM(require_react());
var __assign110 = function() {
  __assign110 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign110.apply(this, arguments);
};
var SchedulerEditItem = React193.forwardRef(function(props, ref) {
  var _ref = props.n, itemRef = props.itemRef, onDataAction = props.onDataAction, ignoreIsAllDay = props.ignoreIsAllDay, propViewItem = props.viewItem, propSeries = props.series, onSeriesChange = props.onSeriesChange, propForm = props.form, propFormItem = props.formItem, onFormItemChange = props.onFormItemChange, propDrag = props.drag, propDragItem = props.dragItem, onDragItemChange = props.onDragItemChange, propResize = props.resize, propResizeItem = props.resizeItem, onResizeItemChange = props.onResizeItemChange, propRemoveDialog = props.removeDialog, propRemoveItem = props.removeItem, onRemoveItemChange = props.onRemoveItemChange, propOccurrenceDialog = props.occurrenceDialog, propShowOccurrenceDialog = props.showOccurrenceDialog, onShowOccurrenceDialogChange = props.onShowOccurrenceDialogChange, propShowRemoveDialog = props.showRemoveDialog, onShowRemoveDialogChange = props.onShowRemoveDialogChange, onFocus = props.onFocus, onFocusAction = props.onFocusAction, onMouseDown = props.onMouseDown, onMouseDownAction = props.onMouseDownAction, onMouseUp = props.onMouseUp, onMouseUpAction = props.onMouseUpAction, onClick = props.onClick, onClickAction = props.onClickAction, onDoubleClick = props.onDoubleClick, onDoubleClickAction = props.onDoubleClickAction, onRemoveClick = props.onRemoveClick, onRemoveClickAction = props.onRemoveClickAction, onPress = props.onPress, onPressAction = props.onPressAction, onDrag = props.onDrag, onDragAction = props.onDragAction, onRelease = props.onRelease, onReleaseAction = props.onReleaseAction, onResizePress = props.onResizePress, onResizePressAction = props.onResizePressAction, onResizeStartDrag = props.onResizeStartDrag, onResizeStartDragAction = props.onResizeStartDragAction, onResizeEndDrag = props.onResizeEndDrag, onResizeEndDragAction = props.onResizeEndDragAction, onResizeRelease = props.onResizeRelease, onResizeReleaseAction = props.onResizeReleaseAction, onOccurrenceClick = props.onOccurrenceClick, onOccurrenceClickAction = props.onOccurrenceClickAction, onSeriesClick = props.onSeriesClick, onSeriesClickAction = props.onSeriesClickAction, onKeyDown = props.onKeyDown, onKeyDownAction = props.onKeyDownAction, onKeyUp = props.onKeyUp, onKeyUpAction = props.onKeyUpAction, onRemoveConfirm = props.onRemoveConfirm, onRemoveConfirmAction = props.onRemoveConfirmAction, onFormSubmit = props.onFormSubmit, onFormSubmitAction = props.onFormSubmitAction, onCancel = props.onCancel, onCancelAction = props.onCancelAction;
  var _a14 = React193.useState(props.tabIndex), tabIndex = _a14[0], setTabIndex = _a14[1];
  var editItem = React193.useRef(null);
  var item = React193.useRef(null);
  var eventId = React193.useMemo(function() {
    return guid();
  }, []);
  React193.useImperativeHandle(editItem, function() {
    return { props, element: item.current && item.current.element };
  });
  React193.useImperativeHandle(ref, function() {
    return editItem.current;
  });
  React193.useImperativeHandle(_ref, function() {
    return item.current;
  });
  React193.useImperativeHandle(itemRef, function() {
    return item.current;
  });
  var ViewItem = propViewItem || defaultProps32.viewItem;
  var Drag = propDrag || defaultProps32.drag;
  var Resize = propResize || defaultProps32.resize;
  var Form2 = propForm || defaultProps32.form;
  var OccurrenceDialog = propOccurrenceDialog || defaultProps32.occurrenceDialog;
  var RemoveDialog = propRemoveDialog || defaultProps32.removeDialog;
  var editable = useEditable(props.editable);
  var _b3 = useSchedulerViewSelectedItemsContext(), selectedItems = _b3[0], dispatchItemSelection = _b3[1];
  var _c2 = useSeries(null, propSeries, onSeriesChange), series = _c2[0], dispatchSeries = _c2[2];
  var _d = useFormItem({ series, onDataAction }, [null, propFormItem, onFormItemChange]), formItem = _d[0], setFormItem = _d[1], dispatchFormItem = _d[2];
  var _e = useDragItem({ dataItem: props.dataItem, ignoreIsAllDay: props.ignoreIsAllDay, isAllDay: props.isAllDay, onDataAction }, [null, propDragItem, onDragItemChange]), dragItem = _e[0], setDragItem = _e[1], dispatchDragItem = _e[2];
  var _f = useResizeItem({ dataItem: props.dataItem, onDataAction }, [null, propResizeItem, onResizeItemChange]), resizeItem = _f[0], setResizeItem = _f[1], dispatchResizeItem = _f[2];
  var _g = useRemoveItem({ series, onDataAction }, [null, propRemoveItem, onRemoveItemChange]), removeItem2 = _g[0], setRemoveItem = _g[1], dispatchRemoveItem = _g[2];
  var _h = useShowRemoveDialog(false, propShowRemoveDialog, onShowRemoveDialogChange), showRemoveDialog = _h[0], setShowRemoveDialog = _h[1], dispatchShowRemoveDialog = _h[2];
  var _j = useShowOccurrenceDialog(false, propShowOccurrenceDialog, onShowOccurrenceDialogChange), showOccurrenceDialog = _j[0], setShowOccurrenceDialog = _j[1], dispatchShowOccurrenceDialog = _j[2];
  var items = useSchedulerViewItemsContext()[0];
  var _k = useSchedulerViewFocusedItemsContext(), dispatchViewItemsFocus = _k[1];
  var _l = useSchedulerViewFocusedSlotsContext(), dispatchViewSlotsFocus = _l[1];
  var selected = Boolean(item.current && selectedItems && selectedItems.some(function(si) {
    return si.current === item.current;
  }));
  var state = React193.useMemo(function() {
    return {
      selected,
      series,
      formItem,
      dragItem,
      resizeItem,
      removeItem: removeItem2,
      showRemoveDialog,
      showOccurrenceDialog
    };
  }, [dragItem, formItem, removeItem2, resizeItem, selected, series, showOccurrenceDialog, showRemoveDialog]);
  var actionsReducerMap = React193.useMemo(function() {
    var _a15;
    return _a15 = {}, _a15[SERIES_ACTION.set] = dispatchSeries, _a15[SERIES_ACTION.toggle] = dispatchSeries, _a15[SERIES_ACTION.reset] = dispatchSeries, _a15[ITEMS_SELECT_ACTION.select] = dispatchItemSelection, _a15[ITEMS_SELECT_ACTION.add] = dispatchItemSelection, _a15[ITEMS_SELECT_ACTION.remove] = dispatchItemSelection, _a15[ITEMS_SELECT_ACTION.reset] = dispatchItemSelection, _a15[ITEMS_SELECT_ACTION.selectNext] = dispatchItemSelection, _a15[ITEMS_SELECT_ACTION.selectPrev] = dispatchItemSelection, _a15[FORM_ITEM_ACTION.set] = dispatchFormItem, _a15[FORM_ITEM_ACTION.setMaster] = dispatchFormItem, _a15[FORM_ITEM_ACTION.reset] = dispatchFormItem, _a15[FORM_ITEM_ACTION.complete] = dispatchFormItem, _a15[REMOVE_ITEM_ACTION.set] = dispatchRemoveItem, _a15[REMOVE_ITEM_ACTION.reset] = dispatchRemoveItem, _a15[REMOVE_ITEM_ACTION.complete] = dispatchRemoveItem, _a15[SHOW_OCCURRENCE_DIALOG_ACTION.close] = dispatchShowOccurrenceDialog, _a15[SHOW_OCCURRENCE_DIALOG_ACTION.open] = dispatchShowOccurrenceDialog, _a15[SHOW_OCCURRENCE_DIALOG_ACTION.set] = dispatchShowOccurrenceDialog, _a15[SHOW_OCCURRENCE_DIALOG_ACTION.toggle] = dispatchShowOccurrenceDialog, _a15[SHOW_OCCURRENCE_DIALOG_ACTION.reset] = dispatchShowOccurrenceDialog, _a15[SHOW_REMOVE_DIALOG_ACTION.close] = dispatchShowRemoveDialog, _a15[SHOW_REMOVE_DIALOG_ACTION.open] = dispatchShowRemoveDialog, _a15[SHOW_REMOVE_DIALOG_ACTION.set] = dispatchShowRemoveDialog, _a15[SHOW_REMOVE_DIALOG_ACTION.toggle] = dispatchShowRemoveDialog, _a15[SHOW_REMOVE_DIALOG_ACTION.reset] = dispatchShowRemoveDialog, _a15[DRAG_ITEM_ACTION.start] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.drag] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.complete] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.completeOccurrence] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.completeSeries] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.set] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.reset] = dispatchDragItem, _a15[DRAG_ITEM_ACTION.dragSelected] = dispatchDragItem, _a15[RESIZE_ITEM_ACTION.start] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.startDrag] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.startDragSelected] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.endDrag] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.endDragSelected] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.complete] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.completeOccurrence] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.completeSeries] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.set] = dispatchResizeItem, _a15[RESIZE_ITEM_ACTION.reset] = dispatchResizeItem, _a15[ITEMS_FOCUS_ACTION.next] = dispatchViewItemsFocus, _a15[ITEMS_FOCUS_ACTION.prev] = dispatchViewItemsFocus, _a15[SLOTS_FOCUS_ACTION.left] = dispatchViewSlotsFocus, _a15[SLOTS_FOCUS_ACTION.right] = dispatchViewSlotsFocus, _a15[SLOTS_FOCUS_ACTION.up] = dispatchViewSlotsFocus, _a15[SLOTS_FOCUS_ACTION.down] = dispatchViewSlotsFocus, _a15.null = function() {
    }, _a15;
  }, [
    dispatchDragItem,
    dispatchFormItem,
    dispatchItemSelection,
    dispatchRemoveItem,
    dispatchResizeItem,
    dispatchSeries,
    dispatchShowOccurrenceDialog,
    dispatchShowRemoveDialog,
    dispatchViewItemsFocus,
    dispatchViewSlotsFocus
  ]);
  var handleFocus = React193.useCallback(function(event2) {
    if (onFocusAction) {
      var actions = onFocusAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onFocus) {
      onFocus.call(void 0, event2);
    }
  }, [actionsReducerMap, onFocus, onFocusAction, props, state]);
  var handleMouseDown = React193.useCallback(function(event2) {
    if (onMouseDownAction) {
      var actions = onMouseDownAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onMouseDown) {
      onMouseDown.call(void 0, event2);
    }
  }, [actionsReducerMap, onMouseDown, onMouseDownAction, props, state]);
  var handleMouseUp = React193.useCallback(function(event2) {
    if (onMouseUpAction) {
      var actions = onMouseUpAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onMouseUp) {
      onMouseUp.call(void 0, event2);
    }
  }, [actionsReducerMap, onMouseUp, onMouseUpAction, props, state]);
  var _m = React193.useContext(SchedulerItemSelectionContext), setSelectedItem = _m[1];
  var handleClick = React193.useCallback(function(event2) {
    if (onClickAction) {
      setSelectedItem(item.current);
      var actions = onClickAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onClick) {
      onClick.call(void 0, event2);
    }
  }, [actionsReducerMap, onClick, onClickAction, props, state]);
  var handleDoubleClick = React193.useCallback(function(event2) {
    if (onDoubleClickAction) {
      var actions = onDoubleClickAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onDoubleClick) {
      onDoubleClick.call(void 0, event2);
    }
  }, [onDoubleClickAction, onDoubleClick, props, actionsReducerMap, state]);
  var handleRemoveClick = React193.useCallback(function(event2) {
    if (onRemoveClickAction) {
      var actions = onRemoveClickAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }));
      }
    }
    if (onRemoveClick) {
      onRemoveClick.call(void 0, event2);
    }
  }, [onRemoveClickAction, onRemoveClick, props, actionsReducerMap, state]);
  var handlePress = React193.useCallback(function(event2) {
    if (onPressAction) {
      var actions = onPressAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2);
      }
    }
    if (onPress) {
      onPress.call(void 0, event2);
    }
  }, [onPressAction, onPress, props, actionsReducerMap, state]);
  var handleDrag = React193.useCallback(function(event2) {
    if (onDragAction) {
      var actions = onDragAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onDrag) {
      onDrag.call(void 0, event2);
    }
  }, [onDragAction, onDrag, props, actionsReducerMap, state]);
  var handleRelease = React193.useCallback(function(event2) {
    if (onReleaseAction) {
      var actions = onReleaseAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onRelease) {
      onRelease.call(void 0, event2);
    }
  }, [onReleaseAction, onRelease, props, actionsReducerMap, state]);
  var handleResizePress = React193.useCallback(function(event2) {
    if (onResizePressAction) {
      var actions = onResizePressAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onResizePress) {
      onResizePress.call(void 0, event2);
    }
  }, [onResizePressAction, onResizePress, props, state, actionsReducerMap]);
  var handleResizeStartDrag = React193.useCallback(function(event2) {
    if (onResizeStartDragAction) {
      var actions = onResizeStartDragAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onResizeStartDrag) {
      onResizeStartDrag.call(void 0, event2);
    }
  }, [onResizeStartDrag, onResizeStartDragAction, props, actionsReducerMap, state]);
  var handleResizeEndDrag = React193.useCallback(function(event2) {
    if (onResizeEndDragAction) {
      var actions = onResizeEndDragAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onResizeEndDrag) {
      onResizeEndDrag.call(void 0, event2);
    }
  }, [onResizeEndDrag, onResizeEndDragAction, props, actionsReducerMap, state]);
  var handleResizeRelease = React193.useCallback(function(event2) {
    if (onResizeReleaseAction) {
      var actions = onResizeReleaseAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.dragEvent.originalEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.dragEvent.originalEvent);
      }
    }
    if (onResizeRelease) {
      onResizeRelease.call(void 0, event2);
    }
  }, [onResizeReleaseAction, onResizeRelease, props, actionsReducerMap, state]);
  var handleFormSubmit = React193.useCallback(function(event2) {
    if (onFormSubmitAction) {
      var actions = onFormSubmitAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2);
      }
    }
    if (onFormSubmit) {
      onFormSubmit.call(void 0, event2);
    }
  }, [onFormSubmitAction, onFormSubmit, props, state, actionsReducerMap]);
  var handleCancel = React193.useCallback(function(event2) {
    if (onCancelAction) {
      var actions = onCancelAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2);
      }
    }
    if (onCancel) {
      onCancel.call(void 0, event2);
    }
  }, [onCancelAction, onCancel, props, state, actionsReducerMap]);
  var handleOccurrenceClick = React193.useCallback(function(event2) {
    if (onOccurrenceClickAction) {
      var actions = onOccurrenceClickAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2);
      }
    }
    if (onOccurrenceClick) {
      onOccurrenceClick.call(void 0, event2);
    }
  }, [onOccurrenceClickAction, onOccurrenceClick, props, state, actionsReducerMap]);
  var handleSeriesClick = React193.useCallback(function(event2) {
    if (onSeriesClickAction) {
      var actions = onSeriesClickAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2);
      }
    }
    if (onSeriesClick) {
      onSeriesClick.call(void 0, event2);
    }
  }, [onSeriesClickAction, onSeriesClick, props, state, actionsReducerMap]);
  var handleKeyDown = React193.useCallback(function(event2) {
    if (onKeyDownAction) {
      var actions = onKeyDownAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.syntheticEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.syntheticEvent);
      }
    }
    if (onKeyDown) {
      onKeyDown.call(void 0, event2);
    }
  }, [onKeyDownAction, onKeyDown, props, state, actionsReducerMap]);
  var handleKeyUp = React193.useCallback(function(event2) {
    if (onKeyUpAction) {
      var actions = onKeyUpAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.syntheticEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.syntheticEvent);
      }
    }
    if (onKeyUp) {
      onKeyUp.call(void 0, event2);
    }
  }, [onKeyUpAction, onKeyUp, props, state, actionsReducerMap]);
  var handleRemoveConfirm = React193.useCallback(function(event2) {
    if (onRemoveConfirmAction) {
      var actions = onRemoveConfirmAction(event2, props, state);
      if (actions) {
        Array.isArray(actions) ? actions.filter(Boolean).map(function(action) {
          return action && actionsReducerMap[action.type](__assign110(__assign110({}, action), { item }), event2.syntheticEvent);
        }) : actionsReducerMap[actions.type](__assign110(__assign110({}, actions), { item }), event2.syntheticEvent);
      }
    }
    if (onRemoveConfirm) {
      onRemoveConfirm.call(void 0, event2);
    }
  }, [onRemoveConfirmAction, onRemoveConfirm, props, state, actionsReducerMap]);
  React193.useEffect(function() {
    var isFirst = items.length && items[0].current === item.current;
    setTabIndex(props.tabIndex !== void 0 ? props.tabIndex === null ? void 0 : props.tabIndex : selectedItems.length === 0 ? isFirst ? 0 : void 0 : void 0);
  }, [items, props.tabIndex, selectedItems.length]);
  return React193.createElement(
    SchedulerEditItemContext,
    { props, form: [formItem, setFormItem, dispatchFormItem], drag: [dragItem, setDragItem, dispatchDragItem], resize: [resizeItem, setResizeItem, dispatchResizeItem], remove: [removeItem2, setRemoveItem, dispatchRemoveItem], showRemoveDialog: [showRemoveDialog, setShowRemoveDialog, dispatchShowRemoveDialog], showOccurrenceDialog: [showOccurrenceDialog, setShowOccurrenceDialog, dispatchShowOccurrenceDialog] },
    React193.createElement(ViewItem, __assign110({}, props, {
      n: item,
      itemRef: item,
      selected,
      tabIndex,
      id: eventId,
      // Keyboard
      onKeyDown: handleKeyDown,
      onKeyUp: handleKeyUp,
      // Focus
      onFocus: handleFocus,
      // Mouse
      onMouseUp: handleMouseUp,
      onMouseDown: handleMouseDown,
      onClick: handleClick,
      onDoubleClick: handleDoubleClick,
      onRemoveClick: handleRemoveClick,
      // Drag
      onPress: handlePress,
      onDrag: handleDrag,
      onRelease: handleRelease,
      // Resize
      onResizePress: handleResizePress,
      onResizeEndDrag: handleResizeEndDrag,
      onResizeStartDrag: handleResizeStartDrag,
      onResizeRelease: handleResizeRelease
    })),
    dragItem && editable.drag && (Array.isArray(dragItem) ? dragItem.map(function(di, idx) {
      return React193.createElement(Drag, { key: idx, ignoreIsAllDay, dataItem: di, vertical: props.vertical, viewItem: ViewItem, item: props.item });
    }) : React193.createElement(Drag, { ignoreIsAllDay, dataItem: dragItem, vertical: props.vertical, viewItem: ViewItem, item: props.item })),
    resizeItem && editable.resize && (Array.isArray(resizeItem) ? resizeItem.map(function(ri, idx) {
      return React193.createElement(Resize, { key: idx, format: props.format, ignoreIsAllDay, dataItem: ri, viewItem: props.viewItem, item: props.item, vertical: props.vertical });
    }) : React193.createElement(Resize, { format: props.format, ignoreIsAllDay, dataItem: resizeItem, viewItem: props.viewItem, item: props.item, vertical: props.vertical })),
    formItem && !showOccurrenceDialog && editable.edit && React193.createElement(Form2, { dataItem: formItem, onSubmit: handleFormSubmit, onClose: handleCancel, onCancel: handleCancel }),
    showOccurrenceDialog && React193.createElement(OccurrenceDialog, { dataItem: formItem || dragItem || resizeItem || removeItem2, isRemove: removeItem2 !== null, onClose: handleCancel, onOccurrenceClick: handleOccurrenceClick, onSeriesClick: handleSeriesClick }),
    showRemoveDialog && removeItem2 && editable.remove && React193.createElement(RemoveDialog, { dataItem: removeItem2, onClose: handleCancel, onCancel: handleCancel, onConfirm: handleRemoveConfirm })
  );
});
var defaultProps32 = {
  viewItem: SchedulerViewItem,
  drag: SchedulerDrag,
  resize: SchedulerResize,
  form: SchedulerForm,
  occurrenceDialog: SchedulerOccurrenceDialog,
  removeDialog: SchedulerRemoveDialog,
  onClickAction: function(event2, _2, state) {
    return [
      {
        type: event2.syntheticEvent.metaKey || event2.syntheticEvent.ctrlKey ? state.selected && !state.dragItem && !state.resizeItem ? ITEMS_SELECT_ACTION.remove : ITEMS_SELECT_ACTION.add : ITEMS_SELECT_ACTION.select
      }
    ];
  },
  onDoubleClickAction: function(_2, props) {
    return props.editable ? [
      { type: FORM_ITEM_ACTION.set, payload: props.dataItem },
      props.isRecurring && { type: SHOW_OCCURRENCE_DIALOG_ACTION.open }
    ].filter(Boolean) : [];
  },
  onRemoveClickAction: function(_2, props) {
    return props.editable ? [
      { type: REMOVE_ITEM_ACTION.set, payload: props.dataItem },
      props.isRecurring ? { type: SHOW_OCCURRENCE_DIALOG_ACTION.open } : { type: SHOW_REMOVE_DIALOG_ACTION.open }
    ] : [];
  },
  onPressAction: function(event2, props) {
    return props.editable ? { type: DRAG_ITEM_ACTION.start, payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY } } : [];
  },
  onDragAction: function(event2, props) {
    return props.editable ? {
      type: event2.dragEvent.originalEvent.metaKey || event2.dragEvent.originalEvent.ctrlKey ? DRAG_ITEM_ACTION.dragSelected : DRAG_ITEM_ACTION.drag,
      payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY }
    } : [];
  },
  onReleaseAction: function(event2, props, state) {
    return props.editable && state.dragItem ? props.isRecurring && !props.isException && state.series === null ? { type: SHOW_OCCURRENCE_DIALOG_ACTION.open } : {
      type: props.isRecurring ? state.series ? DRAG_ITEM_ACTION.completeSeries : DRAG_ITEM_ACTION.completeOccurrence : DRAG_ITEM_ACTION.complete,
      payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY }
    } : [];
  },
  onResizePressAction: function(event2, props) {
    return props.editable ? { type: RESIZE_ITEM_ACTION.start, payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY } } : [];
  },
  onResizeStartDragAction: function(event2, props) {
    return props.editable ? {
      type: event2.dragEvent.originalEvent.metaKey || event2.dragEvent.originalEvent.ctrlKey ? RESIZE_ITEM_ACTION.startDragSelected : RESIZE_ITEM_ACTION.startDrag,
      payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY }
    } : [];
  },
  onResizeEndDragAction: function(event2, props) {
    return props.editable ? {
      type: event2.dragEvent.originalEvent.metaKey || event2.dragEvent.originalEvent.ctrlKey ? RESIZE_ITEM_ACTION.endDragSelected : RESIZE_ITEM_ACTION.endDrag,
      payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY }
    } : [];
  },
  onResizeReleaseAction: function(event2, props, state) {
    return props.editable && state.resizeItem ? props.isRecurring && !props.isException && state.series === null ? { type: SHOW_OCCURRENCE_DIALOG_ACTION.open } : {
      type: props.isRecurring ? state.series ? RESIZE_ITEM_ACTION.completeSeries : RESIZE_ITEM_ACTION.completeOccurrence : RESIZE_ITEM_ACTION.complete,
      payload: { x: event2.dragEvent.clientX, y: event2.dragEvent.clientY }
    } : [];
  },
  onOccurrenceClickAction: function(_event, props, state) {
    if (state.dragItem) {
      return [
        { type: DRAG_ITEM_ACTION.completeOccurrence },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.resizeItem) {
      return [
        { type: RESIZE_ITEM_ACTION.completeOccurrence },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.formItem) {
      return [
        { type: SERIES_ACTION.set, payload: false },
        { type: FORM_ITEM_ACTION.set, payload: props.dataItem },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.removeItem) {
      return [
        { type: SERIES_ACTION.set, payload: false },
        { type: REMOVE_ITEM_ACTION.set, payload: props.dataItem },
        { type: SHOW_REMOVE_DIALOG_ACTION.open },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
  },
  onSeriesClickAction: function(_event, props, state) {
    if (state.dragItem) {
      return [
        { type: DRAG_ITEM_ACTION.completeSeries },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.resizeItem) {
      return [
        { type: RESIZE_ITEM_ACTION.completeSeries },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.formItem) {
      return [
        { type: SERIES_ACTION.set, payload: true },
        { type: FORM_ITEM_ACTION.setMaster, payload: props.dataItem },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
    if (state.removeItem) {
      return [
        { type: SERIES_ACTION.set, payload: true },
        { type: REMOVE_ITEM_ACTION.set, payload: props.dataItem },
        { type: SHOW_REMOVE_DIALOG_ACTION.open },
        { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
      ];
    }
  },
  onKeyDownAction: function(event2, props) {
    switch (event2.syntheticEvent.keyCode) {
      case Keys.enter:
        return [
          { type: FORM_ITEM_ACTION.set, payload: props.dataItem },
          props.isRecurring && { type: SHOW_OCCURRENCE_DIALOG_ACTION.open }
        ];
      case Keys.tab:
        return [
          { type: event2.syntheticEvent.shiftKey ? ITEMS_FOCUS_ACTION.prev : ITEMS_FOCUS_ACTION.next, ignoreIsAllDay: props.ignoreIsAllDay },
          { type: event2.syntheticEvent.shiftKey ? ITEMS_SELECT_ACTION.selectPrev : ITEMS_SELECT_ACTION.selectNext, ignoreIsAllDay: props.ignoreIsAllDay }
        ];
      case Keys.up:
        return [
          Boolean(props.slots.length && props.slots[0].n.current) && { type: SLOTS_FOCUS_ACTION.up, slot: props.slots[0].n }
        ];
      case Keys.right:
        return [
          Boolean(props.slots.length && props.slots[0].n.current) && { type: SLOTS_FOCUS_ACTION.right, slot: props.slots[0].n }
        ];
      case Keys.down:
        return [
          Boolean(props.slots.length && props.slots[props.slots.length - 1].n.current) && { type: SLOTS_FOCUS_ACTION.down, slot: props.slots[props.slots.length - 1].n }
        ];
      case Keys.left:
        return [
          Boolean(props.slots.length && props.slots[0].n.current) && { type: SLOTS_FOCUS_ACTION.left, slot: props.slots[0].n }
        ];
      default:
        return;
    }
  },
  onFormSubmitAction: function(event2) {
    return { type: FORM_ITEM_ACTION.complete, payload: event2.value };
  },
  onRemoveConfirmAction: function() {
    return [
      { type: REMOVE_ITEM_ACTION.complete },
      { type: SHOW_OCCURRENCE_DIALOG_ACTION.close }
    ];
  },
  onCancelAction: function() {
    return [
      { type: SERIES_ACTION.reset },
      { type: REMOVE_ITEM_ACTION.reset },
      { type: FORM_ITEM_ACTION.reset },
      { type: DRAG_ITEM_ACTION.reset },
      { type: RESIZE_ITEM_ACTION.reset },
      { type: SHOW_REMOVE_DIALOG_ACTION.reset },
      { type: SHOW_OCCURRENCE_DIALOG_ACTION.reset }
    ];
  }
};
SchedulerEditItem.defaultProps = defaultProps32;
SchedulerEditItem.displayName = "KendoReactSchedulerEditItem";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/CurrentTimeMarket.js
var React194 = __toESM(require_react());
var ReactDOM9 = __toESM(require_react_dom());
var combineWidths = function(slots) {
  var result = 0;
  slots.forEach(function(slot) {
    if (slot.current) {
      var rect = getRect(slot.current.element);
      result += rect.width;
    }
  });
  return result;
};
var combineHeights = function(slots) {
  var result = 0;
  slots.forEach(function(slot) {
    if (slot.current) {
      var rect = getRect(slot.current.element);
      result += rect.height;
    }
  });
  return result;
};
var setTime3 = function(origin, candidate) {
  var date2 = cloneDate(origin);
  date2.setHours(candidate.getHours(), candidate.getMinutes(), candidate.getSeconds(), candidate.getMilliseconds());
  return date2;
};
var CurrentTimeMarker = function(props) {
  var _a14;
  var _b3 = React194.useState(false), show = _b3[0], setShow = _b3[1];
  var scheduler2 = useSchedulerElementContext();
  var schedulerProps = useSchedulerPropsContext();
  var interval = React194.useRef(void 0);
  var arrowRef = React194.useRef(null);
  var line = React194.useRef(null);
  var updateInterval = props.updateInterval || defaultProps33.updateInterval;
  var _c2 = React194.useState(false), setForce = _c2[1];
  var dir = useDir(line, schedulerProps.rtl === true ? "rtl" : void 0);
  var slots = useSchedulerViewSlotsContext()[0];
  var position4 = React194.useCallback(function() {
    if (!slots) {
      return;
    }
    var sameTimeSlots = slots.filter(function(s) {
      return s.current && (props.groupIndex === void 0 || props.groupIndex === null || s.current.props.group.index === props.groupIndex) && (props.vertical ? intersects(/* @__PURE__ */ new Date(), /* @__PURE__ */ new Date(), s.current.props.start, s.current.props.end, true) : isInTimeRange(/* @__PURE__ */ new Date(), s.current.props.start, s.current.props.end)) && !s.current.props.isAllDay;
    });
    if (sameTimeSlots && sameTimeSlots.length && arrowRef.current && line.current) {
      var firstSlot = first(sameTimeSlots);
      if (!firstSlot.current) {
        return;
      }
      var size = props.vertical ? combineHeights(sameTimeSlots) : combineWidths(sameTimeSlots);
      var rect = getRect(firstSlot.current.element);
      var arrowRect = getRect(arrowRef.current);
      var pxPerMillisecond = (props.vertical ? rect.width : rect.height) / (firstSlot.current.props.end.getTime() - firstSlot.current.props.start.getTime());
      var offset4 = (Date.now() - setTime3(/* @__PURE__ */ new Date(), firstSlot.current.props.start).getTime()) * pxPerMillisecond;
      var rtl = dir === "rtl";
      var top_1 = props.vertical ? rect.top : rect.top + offset4 - arrowRect.height / 2;
      var horizontalDimension = rtl ? "right" : "left";
      var horizontalMeasure = props.vertical ? rect[horizontalDimension] + offset4 - arrowRect.width / 2 : rect[horizontalDimension];
      if (props.vertical) {
        arrowRef.current.style[horizontalDimension] = "".concat(horizontalMeasure, "px");
      } else {
        arrowRef.current.style.top = "".concat(top_1, "px");
      }
      line.current.style[horizontalDimension] = "".concat(horizontalMeasure, "px");
      line.current.style.top = "".concat(top_1, "px");
      line.current.style[props.vertical ? "height" : "width"] = "".concat(size - 1, "px");
      setShow(true);
    } else {
      setShow(false);
    }
  }, [slots, props.groupIndex, props.vertical, dir]);
  var refresh = React194.useCallback(function() {
    position4();
    setForce(function(f) {
      return !f;
    });
  }, [position4]);
  React194.useEffect(function() {
    if (!scheduler2.current || !window) {
      return;
    }
    clearInterval(interval.current);
    interval.current = window.setInterval(refresh, updateInterval);
    var resizeObserver = window.ResizeObserver;
    var observer = resizeObserver && new resizeObserver(refresh);
    if (observer) {
      observer.observe(scheduler2.current);
    }
    return function() {
      clearInterval(interval.current);
      if (observer) {
        observer.disconnect();
      }
    };
  }, [position4, refresh, scheduler2, updateInterval]);
  React194.useEffect(position4);
  var arrow = React194.createElement("div", { ref: arrowRef, className: classNames("k-current-time", {
    "k-current-time-arrow-right": !props.vertical && dir !== "rtl",
    "k-current-time-arrow-left": !props.vertical && dir === "rtl",
    "k-current-time-arrow-down": props.vertical
  }), style: {
    transform: props.vertical ? dir === "rtl" ? "translateX(50%)" : "translateX(-50%)" : "translateY(-50%)",
    visibility: !show ? "hidden" : void 0
  } });
  return React194.createElement(
    React194.Fragment,
    null,
    props.attachArrow && props.attachArrow.current ? ReactDOM9.createPortal(arrow, props.attachArrow.current) : arrow,
    React194.createElement("div", { className: "k-current-time", ref: line, style: (_a14 = {
      transform: props.vertical ? "translateX(-50%)" : "translateY(-50%)"
    }, _a14[props.vertical ? "width" : "height"] = "1px", _a14.visibility = !show ? "hidden" : void 0, _a14) })
  );
};
var defaultProps33 = {
  updateInterval: 6e4
};
CurrentTimeMarker.defaultProps = defaultProps33;

// node_modules/@progress/kendo-react-scheduler/dist/es/components/DateHeaderCell.js
var React195 = __toESM(require_react());
var __assign111 = function() {
  __assign111 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign111.apply(this, arguments);
};
var __rest47 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DateHeaderCell = React195.forwardRef(function(props, ref) {
  var _a14 = props.as, Component64 = _a14 === void 0 ? defaultProps34.as : _a14, other = __rest47(props, ["as"]);
  var element6 = React195.useRef(null);
  var target = React195.useRef(null);
  var intl = useInternationalization();
  var className = React195.useMemo(function() {
    return classNames("k-scheduler-cell k-heading-cell", props.className);
  }, [props.className]);
  React195.useImperativeHandle(target, function() {
    return {
      element: element6.current && element6.current.element ? element6.current.element : element6.current,
      props
    };
  });
  React195.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React195.createElement(
    Component64,
    __assign111({
      // Consider using `react-is` to check if the component accepts a ref, to avoid console warning
      ref: Component64 !== defaultProps34.as ? void 0 : element6
    }, other, { className }),
    React195.createElement("span", { className: "k-link k-nav-day" }, intl.formatDate(props.date, props.format))
  );
});
var defaultProps34 = {
  as: React195.forwardRef(function(_a14, ref) {
    var as = _a14.as, format3 = _a14.format, start2 = _a14.start, end2 = _a14.end, props = __rest47(_a14, ["as", "format", "start", "end"]);
    return React195.createElement("div", __assign111({}, props, { ref }));
  }),
  format: "d"
};
DateHeaderCell.defaultProps = defaultProps34;
DateHeaderCell.displayName = "KendoReactSchedulerDateHeaderCell";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/TimeHeaderCell.js
var React196 = __toESM(require_react());
var __assign112 = function() {
  __assign112 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign112.apply(this, arguments);
};
var __rest48 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var TimeHeaderCell = React196.forwardRef(function(props, ref) {
  var _a14 = props.as, Component64 = _a14 === void 0 ? defaultProps35.as : _a14, other = __rest48(props, ["as"]);
  var element6 = React196.useRef(null);
  var target = React196.useRef(null);
  var intl = useInternationalization();
  var className = React196.useMemo(function() {
    return classNames("k-scheduler-cell k-heading-cell", props.className);
  }, [props.className]);
  React196.useImperativeHandle(target, function() {
    return {
      element: element6.current && element6.current.element ? element6.current.element : element6.current,
      props
    };
  });
  React196.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React196.createElement(
    Component64,
    __assign112({
      // Consider using `react-is` to check if the component accepts a ref, to avoid console warning
      ref: Component64 !== defaultProps35.as ? void 0 : element6
    }, other, { className }),
    intl.formatDate(props.date, props.format)
  );
});
var defaultProps35 = {
  as: React196.forwardRef(function(_a14, ref) {
    var as = _a14.as, format3 = _a14.format, start2 = _a14.start, end2 = _a14.end, props = __rest48(_a14, ["as", "format", "start", "end"]);
    return React196.createElement("div", __assign112({}, props, { ref }));
  }),
  format: "t"
};
TimeHeaderCell.defaultProps = defaultProps35;
TimeHeaderCell.displayName = "KendoReactSchedulerTimeHeaderCell";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/time/MultiDayTimelineView.js
var React197 = __toESM(require_react());
var __assign113 = function() {
  __assign113 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign113.apply(this, arguments);
};
var TIME_FORMAT2 = "t";
var FIRST_INDEX = 0;
var MultiDayTimelineView = function(props) {
  var _a14 = useSchedulerPropsContext(), group2 = _a14.group, timezone = _a14.timezone, propResources = _a14.resources;
  var timeRef = React197.useRef(null);
  var bodyRef = React197.useRef(null);
  var EditItem = props.editItem || SchedulerEditItem;
  var EditSlot = props.editSlot || SchedulerEditSlot;
  var element6 = React197.useRef(null);
  var data2 = useSchedulerDataContext()[0];
  var orientation = useSchedulerOrientationContext();
  var groups = useSchedulerGroupsContext();
  var dateRange = useSchedulerDateRangeContext();
  var fields = useSchedulerFieldsContext();
  var intl = useInternationalization();
  var showWorkHours = props.showWorkHours;
  var slotDivisions = props.slotDivisions || defaultProps36.slotDivisions;
  var slotDuration = props.slotDuration || defaultProps36.slotDuration;
  var workWeekStart = props.workWeekStart || defaultProps36.workWeekStart;
  var workWeekEnd = props.workWeekEnd || defaultProps36.workWeekEnd;
  var workDayStart = intl.parseDate(props.workDayStart || props.isWorkDayStart || defaultProps36.isWorkDayStart);
  var workDayEnd = intl.parseDate(props.workDayEnd || props.isWorkDayEnd || defaultProps36.isWorkDayEnd);
  var startTime = intl.parseDate(props.startTime || defaultProps36.startTime);
  var endTime = intl.parseDate(props.endTime || defaultProps36.endTime);
  var viewStart = React197.useMemo(function() {
    return showWorkHours ? workDayStart : startTime;
  }, [
    showWorkHours,
    workDayStart,
    startTime
  ]);
  var viewEnd = React197.useMemo(function() {
    return showWorkHours ? workDayEnd : endTime;
  }, [
    showWorkHours,
    workDayEnd,
    endTime
  ]);
  var ranges = React197.useMemo(function() {
    return toRanges(dateRange, { step: MS_PER_DAY, timezone });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone
  ]);
  var slots = React197.useMemo(function() {
    return toSlots(dateRange, { step: slotDuration / slotDivisions * MS_PER_MINUTE }, { groups, ranges }).filter(function(slot) {
      return isInTimeRange(slot.zonedStart, viewStart, viewEnd) || viewStart.getTime() === viewEnd.getTime();
    });
  }, [
    groups,
    ranges,
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone,
    slotDuration,
    slotDivisions,
    viewStart.getTime(),
    viewEnd.getTime()
  ]);
  var occurrences2 = React197.useMemo(function() {
    return toOccurrences(data2, { dateRange, fields, timezone });
  }, [data2, dateRange.start.getTime(), dateRange.end.getTime(), fields, timezone]);
  var items = React197.useMemo(function() {
    return toItems(occurrences2, { timezone }, { groups, ranges }).filter(function(item) {
      return viewStart.getTime() === viewEnd.getTime() || isInTimeRange(item.zonedStart, viewStart, viewEnd) || isInTimeRange(item.zonedEnd, viewStart, viewEnd) || isInTimeRange(new Date(item.zonedEnd.getTime() - (item.zonedEnd.getTime() - item.zonedStart.getTime()) / 2), viewStart, viewEnd);
    });
  }, [occurrences2, timezone, groups, ranges, viewStart.getTime(), viewEnd.getTime()]);
  React197.useMemo(function() {
    return mapItemsToSlots(items, slots, true);
  }, [items, slots]);
  React197.useMemo(function() {
    return mapSlotsToItems(items, slots, true);
  }, [items, slots]);
  var width = (orientation === "horizontal" ? slots.length : slots.length / groups.length) * ((props.columnWidth || defaultProps36.columnWidth) + BORDER_WIDTH);
  var head = React197.createElement(SchedulerResourceIteratorContext.Consumer, null, function() {
    return React197.createElement(
      React197.Fragment,
      null,
      React197.createElement("div", { className: "k-scheduler-row" }, ranges.map(function(range3, rangeIndex) {
        return React197.createElement(DateHeaderCell, { as: props.dateHeaderCell, key: rangeIndex, date: range3.zonedStart, start: range3.start, end: range3.end, format: "m" });
      })),
      React197.createElement("div", { className: "k-scheduler-row", ref: timeRef }, ranges.map(function(_2, rangeIndex) {
        return slots.filter(function(s) {
          return s.group.index === FIRST_INDEX && s.range.index === rangeIndex;
        }).map(function(slot) {
          return slot.zonedStart.getMinutes() % slotDuration === 0 ? React197.createElement(TimeHeaderCell, { key: slot.index, as: props.timeHeaderCell, format: TIME_FORMAT2, date: slot.zonedStart, start: slot.zonedStart, end: slot.zonedEnd }) : null;
        });
      }))
    );
  });
  var body = React197.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
    var groupIndex = _a15.groupIndex;
    return React197.createElement("div", { className: "k-scheduler-row" }, ranges.map(function(_2, rangeIndex) {
      return slots.filter(function(s) {
        return s.group.index === groupIndex && s.range.index === rangeIndex;
      }).map(function(slot, slotIndex, filtered) {
        return React197.createElement(EditSlot, __assign113({ key: "".concat(slot.start.getTime(), ":").concat(slot.group.index), slot: props.slot, viewSlot: props.viewSlot }, slot, { form: props.form, onDataAction: props.onDataAction, isWorkHour: isInTimeRange(slot.zonedStart, workDayStart, workDayEnd), isWorkDay: isInDaysRange(slot.zonedEnd.getDay(), workWeekStart, workWeekEnd), col: orientation === "horizontal" ? rangeIndex * filtered.length + slotIndex + filtered.length * ranges.length * (groupIndex || 0) : rangeIndex * filtered.length + slotIndex, row: orientation === "horizontal" ? 0 : groupIndex || 0, expandable: true, editable: props.editable }));
      });
    }));
  });
  var className = React197.useMemo(function() {
    return classNames("k-scheduler-timeline-view", props.className);
  }, [props.className]);
  useCellSync({
    element: element6,
    selector: ".k-resource-cell",
    attribute: "data-depth-index",
    explicitDepth: true
  });
  var schedulerElement = element6.current ? element6.current.closest(".k-scheduler-layout") : null;
  useRowSync({
    element: schedulerElement,
    selector: ".k-resource-row",
    horizontalAttribute: "data-depth-index",
    verticalAttribute: "data-resource-index",
    applyTo: ".k-resource-cell",
    syncHeight: items && !items.length
  });
  return React197.createElement(
    React197.Fragment,
    null,
    React197.createElement(
      BaseView,
      { ref: element6, id: props.id, style: __assign113({}, props.style), className, props, slots, ranges },
      React197.createElement("div", { className: "k-scheduler-head", style: { width } }, orientation === "horizontal" ? React197.createElement(HorizontalResourceIterator, { nested: true, group: group2, resources: propResources, rowContent: TimelineViewRowContent }, head) : React197.createElement(VerticalResourceIterator, { wrapGroup: true, group: group2, resources: propResources }, head)),
      React197.createElement(
        "div",
        { className: "k-scheduler-body", style: { width }, ref: bodyRef },
        orientation === "horizontal" ? React197.createElement(
          HorizontalResourceIterator,
          { group: group2, resources: propResources, rowContent: TimelineViewAllEventsRowContent },
          body,
          React197.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
            var groupIndex = _a15.groupIndex;
            return props.currentTimeMarker && intersects(first(ranges).start, last2(ranges).end, /* @__PURE__ */ new Date(), /* @__PURE__ */ new Date(), true) && React197.createElement(CurrentTimeMarker, { groupIndex, attachArrow: timeRef, vertical: true });
          })
        ) : React197.createElement(VerticalResourceIterator, { nested: true, wrapGroup: true, group: group2, resources: propResources }, body),
        orientation === "vertical" && props.currentTimeMarker && intersects(first(ranges).start, last2(ranges).end, /* @__PURE__ */ new Date(), /* @__PURE__ */ new Date(), true) && React197.createElement(CurrentTimeMarker, { attachArrow: timeRef, vertical: true }),
        items.sort(orderSort).map(function(item, itemIndex) {
          return React197.createElement(EditItem, __assign113({ key: item.isRecurring ? "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index, ":").concat(item.originalStart) : "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index) }, item, { format: "t", form: props.form, onDataAction: props.onDataAction, item: props.item, viewItem: props.viewItem, editable: props.editable, ignoreIsAllDay: true, vertical: false, isLast: itemIndex === items.length - 1 }));
        })
      )
    )
  );
};
var multiDayTimelineDateRange = function(_a14) {
  var date2 = _a14.date, _b3 = _a14.numberOfDays, numberOfDays = _b3 === void 0 ? 1 : _b3, timezone = _a14.timezone;
  var normalized = ZonedDate.fromLocalDate(date2, timezone);
  var firstDay3 = getDate(normalized);
  var lastDay = addDays(firstDay3, numberOfDays);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDay3), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDay), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps36 = {
  name: "multi-day-timeline",
  title: "Multi Day Timeline",
  currentTimeMarker: true,
  dateRange: multiDayTimelineDateRange,
  selectedDateFormat: "{0:D} - {1:D}",
  selectedShortDateFormat: "{0:d} - {1:d}",
  step: 1,
  numberOfDays: 1,
  startTime: "00:00",
  endTime: "00:00",
  isWorkDayStart: "8:00",
  isWorkDayEnd: "17:00",
  workWeekStart: Day.Monday,
  workWeekEnd: Day.Friday,
  slotDivisions: 2,
  slotDuration: 60,
  // showCurrentTime: true // TODO: Phase 2
  defaultShowWorkHours: true,
  columnWidth: 100
};
MultiDayTimelineView.defaultProps = defaultProps36;

// node_modules/@progress/kendo-react-scheduler/dist/es/views/time/TimelineView.js
var React198 = __toESM(require_react());
var __assign114 = function() {
  __assign114 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign114.apply(this, arguments);
};
var TimelineView = function(props) {
  return React198.createElement(MultiDayTimelineView, __assign114({}, props));
};
var defaultProps37 = {
  name: "timeline",
  title: function(localization) {
    return localization.toLanguageString(timelineViewTitle, messages2[timelineViewTitle]);
  },
  dateRange: defaultProps36.dateRange,
  step: 1,
  slotDuration: 60,
  slotDivisions: 2,
  numberOfDays: 1,
  selectedDateFormat: "{0:D}",
  selectedShortDateFormat: "{0:d}"
};
TimelineView.defaultProps = defaultProps37;
TimelineView.displayName = "KendoReactSchedulerTimelineView";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/day/DayViewGroupRowContent.js
var React199 = __toESM(require_react());
var DayViewGroupRowContent = function(props) {
  return React199.createElement(
    React199.Fragment,
    null,
    React199.createElement("div", { className: "k-scheduler-cell k-side-cell", "data-range-index": props.rangeIndex }),
    props.children
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/day/DayViewAllDayRowContent.js
var React200 = __toESM(require_react());
var DayViewAllDayRowContent = function(props) {
  var localization = useLocalization();
  return React200.createElement(
    React200.Fragment,
    null,
    React200.createElement("div", { className: "k-scheduler-cell k-heading-cell k-side-cell k-scheduler-times-all-day" }, localization.toLanguageString(allDay, messages2[allDay])),
    props.children
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/day/DayViewRowContent.js
var React201 = __toESM(require_react());
var DayViewRowContent = function(props) {
  var slot = props.slot, children2 = props.children;
  return React201.createElement(
    React201.Fragment,
    null,
    props.isMaster ? React201.createElement(TimeHeaderCell, { as: props.timeHeaderCell, date: slot.zonedStart, start: slot.zonedStart, end: slot.zonedEnd, className: classNames("k-side-cell", {
      "k-major-cell": !props.isLast
    }) }) : React201.createElement("div", { className: "k-scheduler-cell k-heading-cell k-side-cell" }),
    children2
  );
};

// node_modules/@progress/kendo-react-scheduler/dist/es/views/day/MultiDayView.js
var React202 = __toESM(require_react());
var PropTypes79 = __toESM(require_prop_types());
var __assign115 = function() {
  __assign115 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign115.apply(this, arguments);
};
var __spreadArray21 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var FIRST_INDEX2 = 0;
var GRID_OFFSET = 1;
var EMPTY_CELL2 = React202.createElement("div", { className: "k-scheduler-cell k-side-cell" });
var MultiDayView = function(props) {
  var _a14 = useSchedulerPropsContext(), group2 = _a14.group, timezone = _a14.timezone, propResources = _a14.resources;
  var intl = useInternationalization();
  var EditItem = props.editItem || SchedulerEditItem;
  var EditSlot = props.editSlot || SchedulerEditSlot;
  var showWorkHours = props.showWorkHours;
  var numberOfDays = props.numberOfDays || defaultProps38.numberOfDays;
  var slotDivisions = props.slotDivisions || defaultProps38.slotDivisions;
  var slotDuration = props.slotDuration || defaultProps38.slotDuration;
  var workWeekStart = props.workWeekStart || defaultProps38.workWeekStart;
  var workWeekEnd = props.workWeekEnd || defaultProps38.workWeekEnd;
  var workDayStart = intl.parseDate(props.workDayStart || props.isWorkDayStart || defaultProps38.isWorkDayStart);
  var workDayEnd = intl.parseDate(props.workDayEnd || props.isWorkDayEnd || defaultProps38.isWorkDayEnd);
  var startTime = intl.parseDate(props.startTime || defaultProps38.startTime);
  var endTime = intl.parseDate(props.endTime || defaultProps38.endTime);
  var data2 = useSchedulerDataContext()[0];
  var groups = useSchedulerGroupsContext();
  var orientation = useSchedulerOrientationContext();
  var fields = useSchedulerFieldsContext();
  var dateRange = useSchedulerDateRangeContext();
  var viewStart = React202.useMemo(function() {
    return showWorkHours ? workDayStart : startTime;
  }, [
    showWorkHours,
    workDayStart,
    startTime
  ]);
  var viewEnd = React202.useMemo(function() {
    return showWorkHours ? workDayEnd : endTime;
  }, [
    showWorkHours,
    workDayEnd,
    endTime
  ]);
  var dayRanges = React202.useMemo(function() {
    return toRanges(dateRange, { step: MS_PER_DAY * numberOfDays, timezone }).map(function(r) {
      return __assign115(__assign115({}, r), { isAllDay: true });
    });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    numberOfDays
  ]);
  var timeRanges = React202.useMemo(function() {
    return toRanges(dateRange, { step: MS_PER_DAY, timezone }).map(function(r) {
      return __assign115(__assign115({}, r), { isAllDay: false });
    });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone
  ]);
  var daySlots = React202.useMemo(function() {
    return toSlots(dateRange, { step: MS_PER_DAY }, { groups, ranges: dayRanges });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    timezone,
    dayRanges,
    groups
  ]);
  var timeSlots = React202.useMemo(function() {
    return toSlots(dateRange, { step: slotDuration * MS_PER_MINUTE3 / slotDivisions }, { groups, ranges: timeRanges }).filter(function(slot) {
      return viewEnd.getTime() === viewStart.getTime() || isInTimeRange(slot.zonedStart, viewStart, viewEnd);
    });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    slotDuration,
    slotDivisions,
    viewStart.getTime(),
    viewEnd.getTime(),
    groups,
    timeRanges
  ]);
  var occurrences2 = React202.useMemo(function() {
    return toOccurrences(data2, { dateRange, fields, timezone });
  }, [data2, dateRange.start.getTime(), dateRange.end.getTime(), fields, timezone]);
  var dayOccurrences = React202.useMemo(function() {
    return occurrences2.filter(function(o) {
      return o.isAllDay;
    });
  }, [occurrences2]);
  var timeOccurrences = React202.useMemo(function() {
    return occurrences2.filter(function(o) {
      return !o.isAllDay;
    });
  }, [occurrences2]);
  var dayItems = React202.useMemo(function() {
    return toItems(dayOccurrences, { timezone }, { groups, ranges: dayRanges });
  }, [occurrences2, timezone, groups, dayRanges]);
  var timeItems = React202.useMemo(function() {
    return toItems(timeOccurrences, { timezone }, { groups, ranges: timeRanges }).filter(function(item) {
      return viewStart.getTime() === viewEnd.getTime() || isInTimeRange(item.zonedStart, viewStart, viewEnd) || isInTimeRange(item.zonedEnd, viewStart, viewEnd) || isInTimeRange(new Date(item.zonedEnd.getTime() - (item.zonedEnd.getTime() - item.zonedStart.getTime()) / 2), viewStart, viewEnd);
    });
  }, [occurrences2, timezone, groups, timeRanges, viewStart.getTime(), viewEnd.getTime()]);
  React202.useMemo(function() {
    return mapItemsToSlots(dayItems, daySlots, false);
  }, [dayItems, daySlots]);
  React202.useMemo(function() {
    return mapSlotsToItems(dayItems, daySlots, false);
  }, [dayItems, daySlots]);
  React202.useMemo(function() {
    return mapItemsToSlots(timeItems, timeSlots, false);
  }, [timeItems, timeSlots]);
  React202.useMemo(function() {
    return mapSlotsToItems(timeItems, timeSlots, false);
  }, [timeItems, timeSlots]);
  var head = React202.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
    var groupIndex = _a15.groupIndex;
    return React202.createElement("div", { className: "k-scheduler-row", key: groupIndex }, timeRanges.map(function(range3, rangeIndex) {
      return React202.createElement(DateHeaderCell, { as: props.dateHeaderCell, key: rangeIndex, date: ZonedDate.fromLocalDate(new Date(range3.zonedEnd.getTime() - (range3.zonedEnd.getTime() - range3.zonedStart.getTime()) / 2), timezone), start: range3.start, end: range3.end, format: { skeleton: "MEd" } });
    }));
  });
  var allDaySlots = React202.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
    var groupIndex = _a15.groupIndex;
    return React202.createElement("div", { key: groupIndex, className: "k-scheduler-row" }, dayRanges.map(function(_2, rangeIndex) {
      return daySlots.filter(function(s) {
        return s.group.index === groupIndex && s.range.index === rangeIndex;
      }).map(function(slot, slotIndex, filtered) {
        return React202.createElement(EditSlot, __assign115({}, slot, { onDataAction: props.onDataAction, form: props.form, slot: props.slot, viewSlot: props.viewSlot, key: "".concat(slot.start.getTime(), ":").concat(slot.group.index), row: 0, col: orientation === "horizontal" ? filtered.length * (groupIndex || 0) + slotIndex : slotIndex, isWorkDay: 0 <= slot.zonedStart.getDay() + (numberOfDays - workWeekStart) && (slot.zonedStart.getDay() + (numberOfDays - workWeekStart)) % numberOfDays <= workWeekEnd + (numberOfDays - workWeekStart), expandable: true }));
      });
    }));
  });
  var className = React202.useMemo(function() {
    return classNames("k-scheduler-day-view", props.className);
  }, [props.className]);
  return React202.createElement(
    React202.Fragment,
    null,
    React202.createElement(
      BaseView,
      { id: props.id, props, style: props.style, className, ranges: __spreadArray21(__spreadArray21([], dayRanges, true), timeRanges, true), slots: __spreadArray21(__spreadArray21([], daySlots, true), timeSlots, true) },
      React202.createElement("div", { className: "k-scheduler-head" }, orientation === "horizontal" ? React202.createElement(
        React202.Fragment,
        null,
        React202.createElement(HorizontalResourceIterator, { nested: true, group: group2, resources: propResources, rowContent: DayViewGroupRowContent, childRowContent: DayViewGroupRowContent }, head),
        React202.createElement(HorizontalResourceIterator, { group: group2, resources: propResources, rowContent: DayViewAllDayRowContent, childRowContent: DayViewAllDayRowContent }, allDaySlots),
        dayItems.map(function(item) {
          return React202.createElement(EditItem, __assign115({ key: item.isRecurring ? "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index, ":").concat(item.originalStart) : "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index) }, item, { form: props.form, onDataAction: props.onDataAction, item: props.item, viewItem: props.viewItem, editable: props.editable, vertical: false }));
        })
      ) : React202.createElement(VerticalResourceIterator, { group: group2, resources: propResources, cellContent: EMPTY_CELL2 }, head)),
      React202.createElement(
        "div",
        { className: "k-scheduler-body" },
        orientation === "horizontal" ? React202.createElement(
          React202.Fragment,
          null,
          timeSlots.filter(function(slot) {
            return slot.group.index === FIRST_INDEX2 && slot.range.index === FIRST_INDEX2;
          }).map(function(root, rootIndex) {
            return React202.createElement(
              React202.Fragment,
              { key: root.index },
              React202.createElement(
                HorizontalResourceIterator,
                { nested: false, group: group2, resources: propResources, rowContent: DayViewRowContent, rowContentProps: {
                  timeHeaderCell: props.timeHeaderCell,
                  isMaster: rootIndex % slotDivisions === 0,
                  isLast: (rootIndex + 1) % slotDivisions === 0,
                  slot: root
                } },
                React202.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
                  var groupIndex = _a15.groupIndex;
                  return React202.createElement("div", { className: classNames("k-scheduler-row", {
                    "k-middle-row": !((rootIndex + 1) % slotDivisions === 0)
                  }) }, timeRanges.map(function(_range, rangeIndex) {
                    return timeSlots.filter(function(s) {
                      return s.index === root.index && s.range.index === rangeIndex && s.group.index === groupIndex;
                    }).map(function(slot) {
                      return React202.createElement(EditSlot, __assign115({ key: "".concat(slot.start.getTime(), ":").concat(slot.group.index) }, slot, { onDataAction: props.onDataAction, slot: props.slot, viewSlot: props.viewSlot, form: props.form, row: rootIndex + GRID_OFFSET, col: timeRanges.length * (groupIndex || 0) + rangeIndex, isWorkHour: isInTimeRange(slot.zonedStart, workDayStart, workDayEnd), isWorkDay: isInDaysRange(slot.zonedEnd.getDay(), workWeekStart, workWeekEnd), editable: props.editable }));
                    });
                  }));
                })
              )
            );
          }),
          props.currentTimeMarker && intersects(first(timeRanges).start, last2(timeRanges).end, /* @__PURE__ */ new Date(), /* @__PURE__ */ new Date(), true) && React202.createElement(CurrentTimeMarker, null)
        ) : React202.createElement(
          React202.Fragment,
          null,
          React202.createElement(
            VerticalResourceIterator,
            { nested: true, group: group2, resources: propResources },
            React202.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
              var groupIndex = _a15.groupIndex;
              return React202.createElement(
                React202.Fragment,
                { key: groupIndex },
                React202.createElement(
                  "div",
                  { className: "k-scheduler-row" },
                  React202.createElement(DayViewAllDayRowContent, { groupIndex }, dayRanges.map(function(_2, rangeIndex) {
                    var groupOffset = timeSlots.filter(function(s) {
                      return s.group.index === groupIndex && s.range.index === FIRST_INDEX2;
                    }).length;
                    return daySlots.filter(function(s) {
                      return s.group.index === groupIndex && s.range.index === rangeIndex;
                    }).map(function(slot, slotIndex) {
                      return React202.createElement(EditSlot, __assign115({ slot: props.slot, viewSlot: props.viewSlot, form: props.form }, slot, { onDataAction: props.onDataAction, key: "".concat(slot.start.getTime(), ":").concat(slot.group.index), className: "k-scheduler-alldays-slot", row: groupOffset * (groupIndex || 0) + (groupIndex || 0) * GRID_OFFSET, col: slotIndex, expandable: true }));
                    });
                  }))
                ),
                timeSlots.filter(function(s) {
                  return s.group.index === groupIndex && s.range.index === FIRST_INDEX2;
                }).map(function(root, rootIndex, filtered) {
                  return React202.createElement(
                    "div",
                    { className: "k-scheduler-row", key: root.index },
                    React202.createElement(DayViewRowContent, { slot: root, isMaster: rootIndex % slotDivisions === 0, isLast: (rootIndex + 1) % slotDivisions === 0, timeHeaderCell: props.timeHeaderCell }, timeRanges.map(function(_2, rangeIndex) {
                      return timeSlots.filter(function(s) {
                        return s.index === root.index && s.group.index === groupIndex && s.range.index === rangeIndex;
                      }).map(function(slot) {
                        return React202.createElement(EditSlot, __assign115({ slot: props.slot, viewSlot: props.viewSlot, form: props.form, onDataAction: props.onDataAction }, slot, { key: "".concat(slot.start.getTime(), ":").concat(slot.group.index), row: filtered.length * (groupIndex || 0) + rootIndex + (groupIndex || 0) * GRID_OFFSET + GRID_OFFSET, col: rangeIndex, editable: props.editable, isWorkHour: isInTimeRange(slot.zonedStart, workDayStart, workDayEnd), isWorkDay: 0 <= slot.zonedStart.getDay() + (numberOfDays - workWeekStart) && (slot.zonedStart.getDay() + (numberOfDays - workWeekStart)) % numberOfDays <= workWeekEnd + (numberOfDays - workWeekStart) }));
                      });
                    }))
                  );
                }),
                props.currentTimeMarker && intersects(first(timeRanges).start, last2(timeRanges).end, /* @__PURE__ */ new Date(), /* @__PURE__ */ new Date(), true) && React202.createElement(CurrentTimeMarker, { groupIndex })
              );
            })
          ),
          dayItems.map(function(item) {
            return React202.createElement(EditItem, __assign115({ key: item.isRecurring ? "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index, ":").concat(item.originalStart) : "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index) }, item, { onDataAction: props.onDataAction, viewItem: props.viewItem, item: props.item, form: props.form, editable: props.editable, vertical: false }));
          })
        ),
        timeItems.map(function(item) {
          return React202.createElement(EditItem, __assign115({ key: item.isRecurring ? "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index, ":").concat(item.originalStart) : "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index) }, item, { format: "t", onDataAction: props.onDataAction, viewItem: props.viewItem, item: props.item, form: props.form, editable: props.editable, vertical: true }));
        })
      )
    )
  );
};
var multiDayViewDateRange = function(_a14) {
  var date2 = _a14.date, _b3 = _a14.numberOfDays, numberOfDays = _b3 === void 0 ? 1 : _b3, timezone = _a14.timezone;
  var normalized = ZonedDate.fromLocalDate(date2, timezone);
  var firstDay3 = getDate(normalized);
  var lastDay = addDays(firstDay3, numberOfDays);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDay3), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDay), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps38 = {
  name: "multi-day",
  title: "Multi Day",
  currentTimeMarker: true,
  dateRange: multiDayViewDateRange,
  selectedDateFormat: "{0:D} - {1:D}",
  selectedShortDateFormat: "{0:d} - {1:d}",
  numberOfDays: 1,
  startTime: "00:00",
  endTime: "23:59",
  isWorkDayStart: "08:00",
  isWorkDayEnd: "17:00",
  workWeekStart: Day.Monday,
  workWeekEnd: Day.Friday,
  step: 1,
  slotDivisions: 2,
  slotDuration: 60,
  showCurrentTime: true,
  defaultShowWorkHours: true
};
MultiDayView.propTypes = {
  currentTimeMarker: PropTypes79.bool,
  name: PropTypes79.string,
  numberOfDays: PropTypes79.number,
  startTime: PropTypes79.string,
  endTime: PropTypes79.string,
  workDayStart: PropTypes79.string,
  workDayEnd: PropTypes79.string,
  workWeekStart: PropTypes79.number,
  workWeekEnd: PropTypes79.any,
  slotDivisions: PropTypes79.number,
  slotDuration: PropTypes79.number,
  showWorkHours: PropTypes79.bool,
  selectedDateFormat: PropTypes79.string,
  selectedShortDateFormat: PropTypes79.string
};
MultiDayView.defaultProps = defaultProps38;
MultiDayView.displayName = "KendoReactSchedulerMultiDayView";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/day/DayView.js
var React203 = __toESM(require_react());
var __assign116 = function() {
  __assign116 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign116.apply(this, arguments);
};
var DayView = function(props) {
  return React203.createElement(MultiDayView, __assign116({}, props));
};
var defaultProps39 = {
  name: "day",
  title: function(localization) {
    return localization.toLanguageString(dayViewTitle, messages2[dayViewTitle]);
  },
  dateRange: defaultProps38.dateRange,
  step: 1,
  numberOfDays: 1,
  slotDuration: 60,
  slotDivisions: 2,
  selectedDateFormat: "{0:D}",
  selectedShortDateFormat: "{0:d}"
};
DayView.defaultProps = defaultProps39;
DayView.displayName = "KendoReactSchedulerDayView";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/week/WeekView.js
var React204 = __toESM(require_react());
var __assign117 = function() {
  __assign117 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign117.apply(this, arguments);
};
var WeekView = function(props) {
  return React204.createElement(MultiDayView, __assign117({}, props, { step: DAYS_IN_WEEK_COUNT, numberOfDays: props.numberOfDays }));
};
var GET_START_DATE2 = function(date2) {
  return getDate(date2);
};
var GET_END_DATE2 = function(start2, numberOfDays) {
  return getDate(addDays(start2, numberOfDays || 1));
};
var weekViewDateRange = function(_a14) {
  var intl = _a14.intl, date2 = _a14.date, timezone = _a14.timezone;
  var normalized = ZonedDate.fromLocalDate(date2, timezone);
  var firstDate = GET_START_DATE2(firstDayInWeek(normalized, intl.firstDay()));
  var lastDate = GET_END_DATE2(firstDate, DAYS_IN_WEEK_COUNT);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDate), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDate), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps40 = {
  name: "week",
  slotDuration: 60,
  slotDivisions: 2,
  numberOfDays: DAYS_IN_WEEK_COUNT,
  dateRange: weekViewDateRange,
  title: function(localization) {
    return localization.toLanguageString(weekViewTitle, messages2[weekViewTitle]);
  },
  selectedDateFormat: "{0:D} - {1:D}",
  selectedShortDateFormat: "{0:d} - {1:d}"
};
WeekView.defaultProps = defaultProps40;
WeekView.displayName = "KendoReactSchedulerWeekView";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/week/WorkWeekView.js
var React205 = __toESM(require_react());
var __assign118 = function() {
  __assign118 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign118.apply(this, arguments);
};
var __rest49 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var WorkWeekView = function(props) {
  var dateRange = useSchedulerDateRangeContext();
  var numberOfDays = Math.round((dateRange.end.getTime() - dateRange.start.getTime()) / MS_PER_DAY);
  return React205.createElement(MultiDayView, __assign118({}, props, { step: DAYS_IN_WEEK_COUNT, numberOfDays }));
};
var firstDayInWeek2 = function(date2, weekStartDay) {
  if (weekStartDay === void 0) {
    weekStartDay = Day.Sunday;
  }
  var first2 = date2.clone();
  while (first2.getDay() !== weekStartDay) {
    first2 = first2.addDays(-1);
  }
  return first2;
};
var workWeekViewDateRange = function(_a14) {
  var intl = _a14.intl, date2 = _a14.date, timezone = _a14.timezone, other = __rest49(_a14, ["intl", "date", "timezone"]);
  var normalized = ZonedDate.fromLocalDate(date2, timezone);
  var workWeekStart = other.workWeekStart !== void 0 ? other.workWeekStart : Day.Monday;
  var workWeekEnd = other.workWeekEnd !== void 0 ? other.workWeekEnd : Day.Friday;
  var days = workWeekEnd < workWeekStart ? DAYS_IN_WEEK_COUNT + workWeekEnd - workWeekStart + 1 : workWeekEnd - workWeekStart + 1;
  var firstDate = getDate(firstDayInWeek2(normalized, workWeekStart));
  var lastDate = addDays(firstDate, days);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDate), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDate), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps41 = {
  name: "work-week",
  slotDuration: 60,
  slotDivisions: 2,
  numberOfDays: 7,
  dateRange: workWeekViewDateRange,
  title: function(localization) {
    return localization.toLanguageString(workWeekViewTitle, messages2[workWeekViewTitle]);
  },
  workWeekStart: Day.Monday,
  workWeekEnd: Day.Friday,
  selectedDateFormat: "{0:D} - {1:D}",
  selectedShortDateFormat: "{0:d} - {1:d}"
};
WorkWeekView.defaultProps = defaultProps41;
WorkWeekView.displayName = "KendoReactSchedulerWorkWeekView";

// node_modules/@progress/kendo-react-scheduler/dist/es/components/ShowMoreItemsButton.js
var React206 = __toESM(require_react());
var __assign119 = function() {
  __assign119 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign119.apply(this, arguments);
};
var ShowMoreItemsButton = React206.forwardRef(function(props, ref) {
  var btn = React206.useRef(null);
  var element6 = React206.useRef(null);
  var localization = useLocalization();
  React206.useImperativeHandle(btn, function() {
    return __assign119({ element: element6.current && element6.current.element }, props);
  });
  React206.useImperativeHandle(ref, function() {
    return btn.current;
  });
  var handleClick = React206.useCallback(function(syntheticEvent) {
    if (!props.onClick || !btn.current) {
      return;
    }
    props.onClick.call(void 0, {
      target: btn.current,
      syntheticEvent
    });
  }, [
    btn,
    props.slot,
    props.onClick
  ]);
  var moreEventsLabel = localization.toLanguageString(moreEvents, messages2[moreEvents]);
  return React206.createElement(Button, { ref: element6, tabIndex: -1, className: "k-more-events", onClick: handleClick, "aria-label": moreEventsLabel, icon: "more-horizontal", svgIcon: moreHorizontalIcon });
});
ShowMoreItemsButton.displayName = "KendoReactSchedulerShowMoreItemsButton";

// node_modules/@progress/kendo-react-scheduler/dist/es/views/month/MonthView.js
var React207 = __toESM(require_react());
var PropTypes80 = __toESM(require_prop_types());
var __assign120 = function() {
  __assign120 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign120.apply(this, arguments);
};
var DAY_FORMAT = { skeleton: "dd" };
var MonthView = function(props) {
  var _a14 = useSchedulerPropsContext(), group2 = _a14.group, timezone = _a14.timezone, propResources = _a14.resources;
  var EditItem = props.editItem || SchedulerEditItem;
  var EditSlot = props.editSlot || SchedulerEditSlot;
  var data2 = useSchedulerDataContext()[0];
  var _b3 = useSchedulerDateContext(), setDate = _b3[1];
  var _c2 = useSchedulerActiveViewContext(), setView = _c2[1];
  var views = useSchedulerViewsContext();
  var groups = useSchedulerGroupsContext();
  var orientation = useSchedulerOrientationContext();
  var dateRange = useSchedulerDateRangeContext();
  var intl = useInternationalization();
  var fields = useSchedulerFieldsContext();
  var itemsPerSlot = props.itemsPerSlot || defaultProps42.itemsPerSlot;
  var ranges = React207.useMemo(function() {
    return toRanges(dateRange, { step: MS_PER_DAY * DAYS_IN_WEEK_COUNT, timezone });
  }, [dateRange.start.getTime(), dateRange.end.getTime(), timezone]);
  var slots = React207.useMemo(function() {
    return toSlots(dateRange, { step: MS_PER_DAY }, { groups, ranges });
  }, [
    dateRange.start.getTime(),
    dateRange.end.getTime(),
    groups,
    ranges
  ]);
  var occurrences2 = React207.useMemo(function() {
    return toOccurrences(data2, { dateRange, fields, timezone });
  }, [data2, dateRange.start.getTime(), dateRange.end.getTime(), fields, timezone]);
  var items = React207.useMemo(function() {
    return toItems(occurrences2, { timezone }, { groups, ranges });
  }, [occurrences2, timezone, groups, ranges]);
  var handleShowMoreItemsClick = React207.useCallback(function(event2) {
    var newView = views.find(function(vw) {
      return vw.props.name === "day";
    });
    if (!setView || !newView || !newView.props.name || !event2.target.slot) {
      return;
    }
    setView(newView.props.name, event2);
    setDate(event2.target.slot.start, event2);
  }, [
    setView,
    views
  ]);
  React207.useMemo(function() {
    return mapItemsToSlots(items, slots, true);
  }, [items, slots]);
  React207.useMemo(function() {
    return mapSlotsToItems(items, slots, true);
  }, [items, slots]);
  var head = React207.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
    var groupIndex = _a15.groupIndex;
    return React207.createElement("div", { className: "k-scheduler-row", key: groupIndex }, slots.filter(function(slot) {
      return slot.group.index === groupIndex && slot.range.index === 0;
    }).map(function(slot, slotIndex) {
      return React207.createElement(DateHeaderCell, { as: props.dateHeaderCell, key: slotIndex, "data-dayslot-index": slotIndex, date: ZonedDate.fromLocalDate(new Date(slot.zonedEnd.getTime() - (slot.zonedEnd.getTime() - slot.zonedStart.getTime()) / 2), timezone), start: slot.start, end: slot.end, format: { skeleton: "EEEE" } });
    }));
  });
  var body = React207.createElement(SchedulerResourceIteratorContext.Consumer, null, function(_a15) {
    var groupIndex = _a15.groupIndex;
    return ranges.map(function(_2, rangeIndex) {
      return React207.createElement("div", { className: "k-scheduler-row", key: rangeIndex }, slots.filter(function(slot) {
        return slot.group.index === groupIndex && slot.range.index === rangeIndex;
      }).map(function(slot, slotIndex, filtered) {
        return React207.createElement(
          EditSlot,
          __assign120({ slot: props.slot, viewSlot: props.viewSlot, key: slotIndex, form: props.form }, slot, { expandable: { offsetTop: 30, offsetBottom: itemsPerSlot < slot.items.length ? 15 : 0 }, onDataAction: props.onDataAction, col: orientation === "horizontal" ? filtered.length * (groupIndex || 0) + slotIndex : slotIndex, row: orientation === "horizontal" ? rangeIndex : ranges.length * (groupIndex || 0) + rangeIndex, editable: props.editable }),
          React207.createElement("span", { className: "k-link k-nav-day" }, intl.formatDate(new Date(slot.end.getTime() - (slot.end.getTime() - slot.start.getTime()) / 2), DAY_FORMAT)),
          itemsPerSlot < slot.items.length && React207.createElement(ShowMoreItemsButton, { slot, onClick: handleShowMoreItemsClick })
        );
      }));
    });
  });
  return React207.createElement(
    BaseView,
    { props, slots, ranges, className: classNames("k-scheduler-monthview", props.className) },
    React207.createElement("div", { className: "k-scheduler-head" }, orientation === "horizontal" ? React207.createElement(HorizontalResourceIterator, { nested: true, resources: propResources, group: group2 }, head) : React207.createElement(VerticalResourceIterator, { resources: propResources, group: group2 }, head)),
    React207.createElement(
      "div",
      { className: "k-scheduler-body" },
      orientation === "horizontal" ? React207.createElement(HorizontalResourceIterator, { resources: propResources, group: group2 }, body) : React207.createElement(VerticalResourceIterator, { nested: true, resources: propResources, group: group2 }, body),
      items.filter(function(item) {
        return item.order === null || item.order < itemsPerSlot;
      }).sort(orderSort).map(function(item) {
        return React207.createElement(EditItem, __assign120({ item: props.item, viewItem: props.viewItem, form: props.form, key: item.isRecurring ? "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index, ":").concat(item.originalStart) : "".concat(item.uid, ":").concat(item.group.index, ":").concat(item.range.index) }, item, { onDataAction: props.onDataAction, style: { transform: "translateY(30px)" }, vertical: false, editable: props.editable, ignoreIsAllDay: true }));
      })
    )
  );
};
var monthViewDateRange = function(_a14) {
  var intl = _a14.intl, date2 = _a14.date, timezone = _a14.timezone;
  var firstDay3 = firstDayInWeek(firstDayOfMonth(getDate(date2)), intl.firstDay());
  var lastDay = addDays(firstDayInWeek(lastDayOfMonth(getDate(date2)), intl.firstDay()), DAYS_IN_WEEK_COUNT);
  var zonedStart = ZonedDate.fromUTCDate(toUTCDateTime(firstDay3), timezone);
  var zonedEnd = ZonedDate.fromUTCDate(toUTCDateTime(lastDay), timezone);
  var start2 = new Date(zonedStart.getTime());
  var end2 = new Date(zonedEnd.getTime());
  return {
    start: start2,
    end: end2,
    zonedStart,
    zonedEnd
  };
};
var defaultProps42 = {
  name: "month",
  dateRange: monthViewDateRange,
  slotDuration: 24 * 60,
  slotDivision: 1,
  itemsPerSlot: 2,
  numberOfDays: 31,
  title: function(localization) {
    return localization.toLanguageString(monthViewTitle, messages2[monthViewTitle]);
  },
  selectedDateFormat: "{0:Y}",
  selectedShortDateFormat: "{0:Y}"
};
var propTypes7 = {
  itemsPerSlot: PropTypes80.number
};
MonthView.defaultProps = defaultProps42;
MonthView.propTypes = propTypes7;
MonthView.displayName = "KendoReactSchedulerMonthView";

// node_modules/@progress/kendo-react-scheduler/dist/es/items/SchedulerProportionalViewItem.js
var React208 = __toESM(require_react());
var __assign121 = function() {
  __assign121 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign121.apply(this, arguments);
};
var __rest50 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var ITEMS_SPACING2 = 1;
var SchedulerProportionalViewItem = React208.forwardRef(function(props, ref) {
  var itemProp = props.item, _ref = props.n, itemRef = props.itemRef, itemProps = __rest50(props, ["item", "_ref", "itemRef"]);
  var timeout2 = React208.useRef();
  var item = React208.useRef(null);
  var viewItem = React208.useRef(null);
  var schedulerRect = React208.useRef(null);
  React208.useImperativeHandle(viewItem, function() {
    return { props, element: item.current && item.current.element };
  });
  React208.useImperativeHandle(ref, function() {
    return viewItem.current;
  });
  React208.useImperativeHandle(_ref, function() {
    return item.current;
  });
  React208.useImperativeHandle(itemRef, function() {
    return item.current;
  });
  var Item = itemProp || defaultProps43.item;
  var intl = useInternationalization();
  var viewItems = useSchedulerViewItemsContext()[0];
  var viewSlots = useSchedulerViewSlotsContext()[0];
  var scheduler2 = useSchedulerElementContext();
  var _a14 = React208.useState(true), display = _a14[0], setDisplay = _a14[1];
  var _b3 = React208.useState(false), visible = _b3[0], setVisible = _b3[1];
  var _c2 = React208.useState(0), maxSiblingsPerSlot = _c2[0], setMaxSiblingsPerSlot = _c2[1];
  var dir = useDir(scheduler2);
  var itemTime = React208.useMemo(function() {
    return props.isAllDay ? intl.toString(props.zonedStart, "t") : intl.format("{0:t} - {1:t}", props.zonedStart, props.zonedEnd);
  }, [intl, props.isAllDay, props.zonedEnd, props.zonedStart]);
  var itemTitle = React208.useMemo(function() {
    return "(".concat(itemTime, "): ").concat(props.title);
  }, [itemTime, props.title]);
  var calculateMostSiblings = function(slots, items) {
    var most = 1;
    slots.forEach(function(slot) {
      var itemsInSlot = items.filter(function(i) {
        return inSlot2(slot.current.props, i.props);
      });
      if (itemsInSlot.length > most) {
        most = itemsInSlot.length;
      }
    });
    return most;
  };
  var getSiblingsInAllSlots = function(slots, items) {
    var siblings = slots.map(function(slot) {
      return items.filter(function(i) {
        return inSlot2(slot.current.props, i.props);
      });
    });
    return siblings;
  };
  var inSlot2 = function(slot, current) {
    return intersects(slot.start, slot.end, current.start, current.end) && slot.group.index === current.group.index && slot.range.index === current.range.index && (props.ignoreIsAllDay || slot.isAllDay === current.isAllDay);
  };
  var align3 = function() {
    var slots = (viewSlots || []).filter(function(slot) {
      return slot.current && inSlot2(slot.current.props, props);
    });
    if (slots.length === 0) {
      setDisplay(false);
      return;
    }
    var firstSlot = first(slots);
    if (!firstSlot.current || !item.current) {
      return;
    }
    var rect = getRect(firstSlot.current.element);
    setRect(item.current.element, rect);
  };
  var position4 = function() {
    var slots = (viewSlots || []).filter(function(slot) {
      return slot.current && inSlot2(slot.current.props, props);
    });
    var element6 = item.current && item.current.element;
    if (!element6 || !slots.length) {
      return;
    }
    var firstSlot = first(slots);
    var lastSlot = last2(slots);
    if (!firstSlot.current || !item.current || !lastSlot.current) {
      return;
    }
    var items = [];
    var dragItems = [];
    var resizeItems = [];
    var slotRect = getRect(firstSlot.current.element);
    var pxPerMillisecond = (props.vertical ? slotRect.height : slotRect.width) / (firstSlot.current.props.end.getTime() - firstSlot.current.props.start.getTime());
    var offset4 = (props.start.getTime() - firstSlot.current.props.start.getTime()) * pxPerMillisecond;
    var total = (Math.min(props.end.getTime(), lastSlot.current.props.end.getTime()) - Math.max(props.start.getTime(), firstSlot.current.props.start.getTime())) * pxPerMillisecond;
    (viewItems || []).forEach(function(i) {
      if (!i.current) {
        return;
      }
      if (i.current.props.dragHint) {
        dragItems.push(i.current);
      } else if (i.current.props.resizeHint) {
        resizeItems.push(i.current);
      } else {
        items.push(i.current);
      }
    });
    var order = props.dragHint || props.resizeHint ? calculateOrder(item.current, props.dragHint ? dragItems : resizeItems, slots, props.ignoreIsAllDay) : props.order || 0;
    var mostSiblingsInSlot = props.dragHint || props.resizeHint ? calculateMostSiblings(slots, props.dragHint ? dragItems : resizeItems) : calculateMostSiblings(slots, items);
    var siblingsPerSlot = getSiblingsInAllSlots(slots, items);
    var topOffset = 0;
    var rect = getRect(element6);
    siblingsPerSlot.forEach(function(slot) {
      var currentOffset = 0;
      slot.forEach(function(current) {
        if (intersects(current.props.start, current.props.end, props.start, props.end) && !(props.dragHint || props.resizeHint) && current.props.Na && current.props.Na > mostSiblingsInSlot && current.element !== element6) {
          mostSiblingsInSlot = current.props.Na;
        }
        var currentRect = getRect(current.element);
        if (current.props.order !== null && current.props.order < order) {
          currentOffset = currentRect.top + currentRect.height - rect.top - BORDER_WIDTH * order + ITEMS_SPACING2;
        }
      });
      if (currentOffset > topOffset) {
        topOffset = currentOffset;
      }
    });
    if (slots.length === 0) {
      setDisplay(false);
      return;
    }
    var OFFSET = 20;
    rect.width = props.vertical ? rect.width / mostSiblingsInSlot - BORDER_WIDTH - OFFSET / mostSiblingsInSlot : total + BORDER_WIDTH;
    rect.height = props.vertical ? total - BORDER_WIDTH : (props.resizeHint || props.dragHint) && mostSiblingsInSlot <= 1 ? rect.height : props.style && props.style.height ? props.style.height : 25;
    rect.left = props.vertical ? rect.left + order * rect.width + BORDER_WIDTH * order : rect.left + (offset4 < 0 ? 0 : offset4);
    rect.top = props.vertical ? rect.top + (offset4 < 0 ? 0 : offset4) : rect.top + topOffset + BORDER_WIDTH * order;
    setMaxSiblingsPerSlot(mostSiblingsInSlot);
    setRect(element6, rect);
    setVisible(true);
    setDisplay(true);
  };
  var handleResize = React208.useCallback(function(entries) {
    var entry = entries && entries[0];
    var rect = schedulerRect.current;
    if (timeout2.current !== void 0) {
      window.cancelAnimationFrame(timeout2.current);
    }
    if (rect && entry && (rect.width !== entry.contentRect.width || rect.height !== entry.contentRect.height)) {
      timeout2.current = window.requestAnimationFrame(function() {
        align3();
        position4();
      });
    }
    schedulerRect.current = { width: entry.contentRect.width, height: entry.contentRect.height };
  }, [align3, position4]);
  React208.useEffect(align3);
  React208.useEffect(position4);
  React208.useEffect(function() {
    if (!scheduler2.current) {
      return;
    }
    var resizeObserver = window.ResizeObserver;
    var observer = resizeObserver && new resizeObserver(handleResize);
    if (observer) {
      observer.observe(scheduler2.current);
    }
    return function() {
      if (observer) {
        observer.disconnect();
      }
    };
  }, [handleResize, scheduler2]);
  return React208.createElement(
    Item,
    __assign121({}, itemProps, { n: item, Na: maxSiblingsPerSlot, itemRef: item, style: __assign121({ visibility: visible ? void 0 : "hidden", display: display ? void 0 : "none" }, props.style) }),
    !props.resizeHint && React208.createElement(
      "span",
      { className: "k-event-actions" },
      props.tail && React208.createElement(IconWrap, { name: dir === "rtl" ? "caret-alt-right" : "caret-alt-left", icon: dir === "rtl" ? caretAltRightIcon : caretAltLeftIcon }),
      props.isRecurring && !props.isException && React208.createElement(IconWrap, { name: "reload", icon: arrowRotateCwIcon }),
      !props.isRecurring && props.isException && React208.createElement(IconWrap, { name: "non-recurrence", icon: nonRecurrenceIcon })
    ),
    !props.resizeHint && React208.createElement(
      "div",
      { title: itemTitle },
      !props.isAllDay && React208.createElement(SchedulerItemContent, { className: "k-event-template k-event-time " }, itemTitle),
      React208.createElement(SchedulerItemContent, { className: "k-event-template" }, props.title)
    )
  );
});
var defaultProps43 = {
  item: SchedulerItem
};
SchedulerProportionalViewItem.defaultProps = defaultProps43;
SchedulerProportionalViewItem.displayName = "KendoReactSchedulerProportionalViewItem";

// wwwroot/Scheduler.tsx
var React209 = __toESM(require_react(), 1);
var testDate = /* @__PURE__ */ new Date("2023-08-27T08:00:00.000Z");
var data = [
  {
    id: 0,
    title: "Breakfast with Tom",
    start: /* @__PURE__ */ new Date("2023-08-27T08:30:00.000Z"),
    end: /* @__PURE__ */ new Date("2023-08-27T09:00:00.000Z")
  }
];
var scheduler = (sampleData, displayDate) => {
  return /* @__PURE__ */ React209.createElement(Scheduler, { data: sampleData, defaultDate: displayDate, timezone: "Etc/UTC" }, /* @__PURE__ */ React209.createElement(DayView, null), /* @__PURE__ */ React209.createElement(WeekView, null));
};
var Scheduler_default = (context2) => ({
  $controls: {
    schedulerComponent: registerReactControl(scheduler, {
      context: context2,
      sampleData: data,
      displayDate: testDate,
      onClick() {
      }
    })
  }
});
export {
  Scheduler_default as default
};
/*! Bundled license information:

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.development.js:
  (**
   * @license React
   * react-dom.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)
*/
//# sourceMappingURL=Scheduler.js.map
